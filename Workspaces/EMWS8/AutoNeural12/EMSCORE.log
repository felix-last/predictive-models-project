MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "20. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "17.24 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                20. April 2016
Time:                17.24 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O2JAKS0R 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural12\EMSCORE.out" encoding="UTF-8" 
NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O2JAKS0R new;
MPRINT(EM_DIAGRAM):   run;
443362     data work.outkey;
MPRINT(EM_DIAGRAM):    data work.outkey;
443363     set EMWS8.AutoNeural12_OUTKEY;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural12_OUTKEY;
443364     if upcase(ROLE) = 'HIDDEN';
MPRINT(EM_DIAGRAM):   if upcase(ROLE) = 'HIDDEN';
443365     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 64 observations read from the data set EMWS8.AUTONEURAL12_OUTKEY.
NOTE: The data set WORK.OUTKEY has 14 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

443366     filename emflow
443366   ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural12\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural12\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * AutoNeural12: Scoring DATA data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
443367     *------------------------------------------------------------*;
443368     * AutoNeural12: Scoring DATA data;
443369     *------------------------------------------------------------*;
443370     data EMWS8.AutoNeural12_TRAIN
443371     / view=EMWS8.AutoNeural12_TRAIN
443372     ;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural12_TRAIN / view=EMWS8.AutoNeural12_TRAIN ;
443373     set EMWS8.Meta_TRAIN
443374     ;
MPRINT(EM_DIAGRAM):   set EMWS8.Meta_TRAIN ;
443375     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural12\EMFLOWSCORE.sas.
443376    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
443377    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
443378    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
443379    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
443380    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
443381    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
443382    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
443383    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
443384    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
443385    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
443386    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
443387    +LENGTH _WARN_ $4
443388    +      F_DepVar  $ 12
443389    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
443390    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
443391    +
443392    +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
443393    +
443394    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
443395    +
443396    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
443397    +
443398    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
443399    +
443400    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
443401    +
443402    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
443403    +
443404    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
443405    +
443406    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
443407    +
443408    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
443409    +
443410    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
443411    +
443412    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
443413    +
443414    +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
443415    +
443416    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
443417    +
443418    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
443419    +
443420    +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
443421    +
443422    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
443423    +
443424    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
443425    +
443426    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
443427    +
443428    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
443429    +
443430    +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
443431    +
443432    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
443433    +
443434    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
443435    +
443436    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
443437    +
443438    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
443439    +
443440    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
443441    +
443442    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
443443    +
443444    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
443445    +
443446    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
443447    +
443448    +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
443449    +
443450    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
443451    +
443452    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
443453    +
443454    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
443455    +
443456    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
443457    +
443458    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
443459    +
443460    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
443461    +
443462    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
443463    +
443464    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
443465    +
443466    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
443467    +
443468    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
443469    +
443470    +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
443471    +
443472    +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
443473    +
443474    +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
443475    +
443476    +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
443477    +
443478    +      label H1x1_7 = 'Hidden: H1x1_=7' ;
MPRINT(EM_DIAGRAM):   label H1x1_7 = 'Hidden: H1x1_=7' ;
443479    +
443480    +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
443481    +
443482    +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
443483    +
443484    +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
443485    +
443486    +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
443487    +
443488    +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
443489    +
443490    +      label H1x2_6 = 'Hidden: H1x2_=6' ;
MPRINT(EM_DIAGRAM):   label H1x2_6 = 'Hidden: H1x2_=6' ;
443491    +
443492    +      label H1x2_7 = 'Hidden: H1x2_=7' ;
MPRINT(EM_DIAGRAM):   label H1x2_7 = 'Hidden: H1x2_=7' ;
443493    +
443494    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
443495    +
443496    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
443497    +
443498    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
443499    +
443500    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
443501    +
443502    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
443503    +
443504    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
443505    +
443506    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
443507    +
443508    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
443509    +
443510    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
443511    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
443512    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
443513    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
443514    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
443515    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
443516    +end;
MPRINT(EM_DIAGRAM):   end;
443517    +else do;
MPRINT(EM_DIAGRAM):   else do;
443518    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
443519    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
443520    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
443521    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
443522    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
443523    +   end;
MPRINT(EM_DIAGRAM):   end;
443524    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
443525    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
443526    +   end;
MPRINT(EM_DIAGRAM):   end;
443527    +   else do;
MPRINT(EM_DIAGRAM):   else do;
443528    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
443529    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
443530    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
443531    +   end;
MPRINT(EM_DIAGRAM):   end;
443532    +end;
MPRINT(EM_DIAGRAM):   end;
443533    +
443534    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
443535    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
443536    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
443537    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
443538    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
443539    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
443540    +end;
MPRINT(EM_DIAGRAM):   end;
443541    +else do;
MPRINT(EM_DIAGRAM):   else do;
443542    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
443543    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
443544    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
443545    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
443546    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
443547    +   end;
MPRINT(EM_DIAGRAM):   end;
443548    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
443549    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
443550    +   end;
MPRINT(EM_DIAGRAM):   end;
443551    +   else do;
MPRINT(EM_DIAGRAM):   else do;
443552    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
443553    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
443554    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
443555    +   end;
MPRINT(EM_DIAGRAM):   end;
443556    +end;
MPRINT(EM_DIAGRAM):   end;
443557    +
443558    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
443559    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
443560    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
443561    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
443562    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
443563    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
443564    +end;
MPRINT(EM_DIAGRAM):   end;
443565    +else do;
MPRINT(EM_DIAGRAM):   else do;
443566    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
443567    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
443568    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
443569    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
443570    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
443571    +   end;
MPRINT(EM_DIAGRAM):   end;
443572    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
443573    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
443574    +   end;
MPRINT(EM_DIAGRAM):   end;
443575    +   else do;
MPRINT(EM_DIAGRAM):   else do;
443576    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
443577    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
443578    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
443579    +   end;
MPRINT(EM_DIAGRAM):   end;
443580    +end;
MPRINT(EM_DIAGRAM):   end;
443581    +
443582    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
443583    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
443584    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
443585    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
443586    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
443587    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
443588    +end;
MPRINT(EM_DIAGRAM):   end;
443589    +else do;
MPRINT(EM_DIAGRAM):   else do;
443590    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
443591    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
443592    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
443593    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
443594    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
443595    +   end;
MPRINT(EM_DIAGRAM):   end;
443596    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
443597    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
443598    +   end;
MPRINT(EM_DIAGRAM):   end;
443599    +   else do;
MPRINT(EM_DIAGRAM):   else do;
443600    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
443601    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
443602    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
443603    +   end;
MPRINT(EM_DIAGRAM):   end;
443604    +end;
MPRINT(EM_DIAGRAM):   end;
443605    +
443606    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
443607    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
443608    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
443609    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
443610    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
443611    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
443612    +end;
MPRINT(EM_DIAGRAM):   end;
443613    +else do;
MPRINT(EM_DIAGRAM):   else do;
443614    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
443615    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
443616    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
443617    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
443618    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
443619    +   end;
MPRINT(EM_DIAGRAM):   end;
443620    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
443621    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
443622    +   end;
MPRINT(EM_DIAGRAM):   end;
443623    +   else do;
MPRINT(EM_DIAGRAM):   else do;
443624    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
443625    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
443626    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
443627    +   end;
MPRINT(EM_DIAGRAM):   end;
443628    +end;
MPRINT(EM_DIAGRAM):   end;
443629    +
443630    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
443631    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
443632    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
443633    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
443634    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
443635    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
443636    +end;
MPRINT(EM_DIAGRAM):   end;
443637    +else do;
MPRINT(EM_DIAGRAM):   else do;
443638    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
443639    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
443640    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
443641    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
443642    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
443643    +   end;
MPRINT(EM_DIAGRAM):   end;
443644    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
443645    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
443646    +   end;
MPRINT(EM_DIAGRAM):   end;
443647    +   else do;
MPRINT(EM_DIAGRAM):   else do;
443648    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
443649    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
443650    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
443651    +   end;
MPRINT(EM_DIAGRAM):   end;
443652    +end;
MPRINT(EM_DIAGRAM):   end;
443653    +
443654    +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
443655    +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
443656    +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
443657    +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
443658    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
443659    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
443660    +end;
MPRINT(EM_DIAGRAM):   end;
443661    +else do;
MPRINT(EM_DIAGRAM):   else do;
443662    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
443663    +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
443664    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
443665    +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
443666    +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
443667    +   end;
MPRINT(EM_DIAGRAM):   end;
443668    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
443669    +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
443670    +   end;
MPRINT(EM_DIAGRAM):   end;
443671    +   else do;
MPRINT(EM_DIAGRAM):   else do;
443672    +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
443673    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
443674    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
443675    +   end;
MPRINT(EM_DIAGRAM):   end;
443676    +end;
MPRINT(EM_DIAGRAM):   end;
443677    +
443678    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
443679    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
443680    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
443681    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
443682    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
443683    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
443684    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
443685    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
443686    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
443687    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
443688    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
443689    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
443690    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
443691    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
443692    +end;
MPRINT(EM_DIAGRAM):   end;
443693    +else do;
MPRINT(EM_DIAGRAM):   else do;
443694    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
443695    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
443696    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
443697    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
443698    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
443699    +   end;
MPRINT(EM_DIAGRAM):   end;
443700    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
443701    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
443702    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
443703    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
443704    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
443705    +   end;
MPRINT(EM_DIAGRAM):   end;
443706    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
443707    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
443708    +   end;
MPRINT(EM_DIAGRAM):   end;
443709    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
443710    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
443711    +   end;
MPRINT(EM_DIAGRAM):   end;
443712    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
443713    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
443714    +   end;
MPRINT(EM_DIAGRAM):   end;
443715    +   else do;
MPRINT(EM_DIAGRAM):   else do;
443716    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
443717    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
443718    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
443719    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
443720    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
443721    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
443722    +   end;
MPRINT(EM_DIAGRAM):   end;
443723    +end;
MPRINT(EM_DIAGRAM):   end;
443724    +
443725    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
443726    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
443727    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
443728    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
443729    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
443730    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
443731    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
443732    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
443733    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
443734    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
443735    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
443736    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
443737    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
443738    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
443739    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
443740    +end;
MPRINT(EM_DIAGRAM):   end;
443741    +else do;
MPRINT(EM_DIAGRAM):   else do;
443742    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
443743    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
443744    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
443745    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
443746    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
443747    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
443748    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
443749    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
443750    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
443751    +         end;
MPRINT(EM_DIAGRAM):   end;
443752    +         else do;
MPRINT(EM_DIAGRAM):   else do;
443753    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
443754    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
443755    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
443756    +            end;
MPRINT(EM_DIAGRAM):   end;
443757    +         end;
MPRINT(EM_DIAGRAM):   end;
443758    +      end;
MPRINT(EM_DIAGRAM):   end;
443759    +      else do;
MPRINT(EM_DIAGRAM):   else do;
443760    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
443761    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
443762    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
443763    +         end;
MPRINT(EM_DIAGRAM):   end;
443764    +      end;
MPRINT(EM_DIAGRAM):   end;
443765    +   end;
MPRINT(EM_DIAGRAM):   end;
443766    +   else do;
MPRINT(EM_DIAGRAM):   else do;
443767    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
443768    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
443769    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
443770    +      end;
MPRINT(EM_DIAGRAM):   end;
443771    +      else do;
MPRINT(EM_DIAGRAM):   else do;
443772    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
443773    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
443774    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
443775    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
443776    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
443777    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
443778    +         end;
MPRINT(EM_DIAGRAM):   end;
443779    +      end;
MPRINT(EM_DIAGRAM):   end;
443780    +   end;
MPRINT(EM_DIAGRAM):   end;
443781    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
443782    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
443783    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
443784    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
443785    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
443786    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
443787    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
443788    +   end;
MPRINT(EM_DIAGRAM):   end;
443789    +end;
MPRINT(EM_DIAGRAM):   end;
443790    +
443791    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
443792    +*** Checking missing input Interval
443793    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
443794    +
443795    +IF NMISS(
443796    +   AcceptedCmpTotal ,
443797    +   Age ,
443798    +   Frq ,
443799    +   Income ,
443800    +   Kidhome ,
443801    +   Mnt ,
443802    +   MntFishProducts ,
443803    +   MntFruits ,
443804    +   MntGoldProds ,
443805    +   MntMeatProducts ,
443806    +   MntSweetProducts ,
443807    +   MntWines ,
443808    +   MonthsAsCustomer ,
443809    +   NumCatalogPurchases ,
443810    +   NumDealsPurchases ,
443811    +   NumDistPurchases ,
443812    +   NumStorePurchases ,
443813    +   NumWebPurchases ,
443814    +   NumWebVisitsMonth ,
443815    +   RFMstat ,
443816    +   RMntFrq ,
443817    +   Recency ,
443818    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
443819    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
443820    +
443821    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
443822    +END;
MPRINT(EM_DIAGRAM):   END;
443823    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
443824    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
443825    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
443826    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
443827    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
443828    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
443829    +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
443830    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
443831    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
443832    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
443833    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
443834    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
443835    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
443836    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
443837    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
443838    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
443839    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
443840    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
443841    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
443842    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
443843    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
443844    +   S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
443845    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 * 
MonthsAsCustomer ;
443846    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
443847    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
443848    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
443849    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
443850    +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
443851    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
443852    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
443853    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
443854    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
443855    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
443856    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
443857    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
443858    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
443859    +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
443860    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
443861    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
443862    +END;
MPRINT(EM_DIAGRAM):   END;
443863    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
443864    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
443865    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
443866    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
443867    +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
443868    +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
443869    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
443870    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
443871    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
443872    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
443873    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
443874    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
443875    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
443876    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
443877    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
443878    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
443879    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
443880    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
443881    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
443882    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
443883    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
443884    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
443885    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
443886    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
443887    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
443888    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
443889    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
443890    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
443891    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
443892    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
443893    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
443894    +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
443895    +   ELSE S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
443896    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 * 
MonthsAsCustomer ;
443897    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
443898    +   ELSE S_NumCatalogPurchases
443899    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
443900    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
443901    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
443902    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
443903    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
443904    +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
443905    +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
443906    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
443907    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
443908    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
443909    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
443910    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
443911    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
443912    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
443913    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
443914    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
443915    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
443916    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
443917    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
443918    +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
443919    +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
443920    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
443921    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
443922    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
443923    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
443924    +END;
MPRINT(EM_DIAGRAM):   END;
443925    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
443926    +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
443927    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
443928    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
443929    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
443930    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
443931    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
443932    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
443933    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
443934    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
443935    +   H1x1_1  =    -0.08478534961354 * S_AcceptedCmpTotal
443936    +          +     0.21528166003219 * S_Age  +    -0.16079737422774 * S_Frq
443937    +          +     0.04922044955183 * S_Income  +     0.06245849112135 *
443938    +        S_Kidhome  +    -0.12820970008154 * S_Mnt  +    -0.00676959308959 *
443939    +        S_MntFishProducts  +    -0.20367403957375 * S_MntFruits
443940    +          +    -0.06459558558968 * S_MntGoldProds  +     0.01557669100416 *
443941    +        S_MntMeatProducts  +    -0.16342003924117 * S_MntSweetProducts
443942    +          +     0.34676276369853 * S_MntWines  +    -0.08454570225616 *
443943    +        S_MonthsAsCustomer  +    -0.00318885387905 * S_NumCatalogPurchases
443944    +          +      0.1112677116841 * S_NumDealsPurchases
443945    +          +     0.01563584187072 * S_NumDistPurchases
443946    +          +     0.19193969522995 * S_NumStorePurchases
443947    +          +      0.3133556199984 * S_NumWebPurchases
443948    +          +    -0.21884874785716 * S_NumWebVisitsMonth
443949    +          +     0.08478875792216 * S_RFMstat  +     0.05964414665285 *
443950    +        S_RMntFrq  +    -0.12595000497726 * S_Recency
443951    +          +     -0.1238719414537 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.08478534961354 * S_AcceptedCmpTotal + 0.21528166003219 * 
S_Age + -0.16079737422774 * S_Frq + 0.04922044955183 * S_Income + 0.06245849112135 * S_Kidhome 
+ -0.12820970008154 * S_Mnt + -0.00676959308959 * S_MntFishProducts + -0.20367403957375 * 
S_MntFruits + -0.06459558558968 * S_MntGoldProds + 0.01557669100416 * S_MntMeatProducts + 
-0.16342003924117 * S_MntSweetProducts + 0.34676276369853 * S_MntWines + -0.08454570225616 * 
S_MonthsAsCustomer + -0.00318885387905 * S_NumCatalogPurchases + 0.1112677116841 * 
S_NumDealsPurchases + 0.01563584187072 * S_NumDistPurchases + 0.19193969522995 * 
S_NumStorePurchases + 0.3133556199984 * S_NumWebPurchases + -0.21884874785716 * 
S_NumWebVisitsMonth + 0.08478875792216 * S_RFMstat + 0.05964414665285 * S_RMntFrq + 
-0.12595000497726 * S_Recency + -0.1238719414537 * S_Teenhome ;
443952    +   H1x1_2  =     0.20807487357943 * S_AcceptedCmpTotal
443953    +          +    -0.27223051908987 * S_Age  +     0.28649391533674 * S_Frq
443954    +          +     0.46493719675068 * S_Income  +     0.10180542910079 *
443955    +        S_Kidhome  +    -0.19573056673819 * S_Mnt  +    -0.05332725327514 *
443956    +        S_MntFishProducts  +    -0.28610692329433 * S_MntFruits
443957    +          +    -0.13417237194849 * S_MntGoldProds  +     0.45697707494335 *
443958    +        S_MntMeatProducts  +    -0.28280545785477 * S_MntSweetProducts
443959    +          +    -0.13234920069688 * S_MntWines  +     -0.2710938018651 *
443960    +        S_MonthsAsCustomer  +     0.31174284041905 * S_NumCatalogPurchases
443961    +          +     0.30225032753275 * S_NumDealsPurchases
443962    +          +     0.33833359923595 * S_NumDistPurchases
443963    +          +    -0.20255599575849 * S_NumStorePurchases
443964    +          +    -0.12040071168942 * S_NumWebPurchases
443965    +          +    -0.12407090307061 * S_NumWebVisitsMonth
443966    +          +    -0.05688936259515 * S_RFMstat  +     0.15514736649245 *
443967    +        S_RMntFrq  +     0.00838555462657 * S_Recency
443968    +          +     0.04609426861136 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.20807487357943 * S_AcceptedCmpTotal + -0.27223051908987 * 
S_Age + 0.28649391533674 * S_Frq + 0.46493719675068 * S_Income + 0.10180542910079 * S_Kidhome 
+ -0.19573056673819 * S_Mnt + -0.05332725327514 * S_MntFishProducts + -0.28610692329433 * 
S_MntFruits + -0.13417237194849 * S_MntGoldProds + 0.45697707494335 * S_MntMeatProducts + 
-0.28280545785477 * S_MntSweetProducts + -0.13234920069688 * S_MntWines + -0.2710938018651 * 
S_MonthsAsCustomer + 0.31174284041905 * S_NumCatalogPurchases + 0.30225032753275 * 
S_NumDealsPurchases + 0.33833359923595 * S_NumDistPurchases + -0.20255599575849 * 
S_NumStorePurchases + -0.12040071168942 * S_NumWebPurchases + -0.12407090307061 * 
S_NumWebVisitsMonth + -0.05688936259515 * S_RFMstat + 0.15514736649245 * S_RMntFrq + 
0.00838555462657 * S_Recency + 0.04609426861136 * S_Teenhome ;
443969    +   H1x1_3  =    -0.30541463116928 * S_AcceptedCmpTotal
443970    +          +    -0.01746117216025 * S_Age  +    -0.44156473334329 * S_Frq
443971    +          +    -0.51952426304193 * S_Income  +     0.20419921255777 *
443972    +        S_Kidhome  +    -0.18174316707953 * S_Mnt  +    -0.03813675536406 *
443973    +        S_MntFishProducts  +     -0.0959023413712 * S_MntFruits
443974    +          +     0.12724081783278 * S_MntGoldProds  +    -0.07639148541426 *
443975    +        S_MntMeatProducts  +     -0.0797214413833 * S_MntSweetProducts
443976    +          +    -0.57705931875808 * S_MntWines  +    -0.12638551201991 *
443977    +        S_MonthsAsCustomer  +    -0.21854676704549 * S_NumCatalogPurchases
443978    +          +     0.16792903091627 * S_NumDealsPurchases
443979    +          +    -0.37408945626745 * S_NumDistPurchases
443980    +          +    -0.18067262995566 * S_NumStorePurchases
443981    +          +     0.21192146789881 * S_NumWebPurchases
443982    +          +    -0.23547702310669 * S_NumWebVisitsMonth
443983    +          +    -0.02272089758813 * S_RFMstat  +    -0.16409330281075 *
443984    +        S_RMntFrq  +     0.45021846112946 * S_Recency
443985    +          +     0.32988735727394 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.30541463116928 * S_AcceptedCmpTotal + -0.01746117216025 * 
S_Age + -0.44156473334329 * S_Frq + -0.51952426304193 * S_Income + 0.20419921255777 * 
S_Kidhome + -0.18174316707953 * S_Mnt + -0.03813675536406 * S_MntFishProducts + 
-0.0959023413712 * S_MntFruits + 0.12724081783278 * S_MntGoldProds + -0.07639148541426 * 
S_MntMeatProducts + -0.0797214413833 * S_MntSweetProducts + -0.57705931875808 * S_MntWines + 
-0.12638551201991 * S_MonthsAsCustomer + -0.21854676704549 * S_NumCatalogPurchases + 
0.16792903091627 * S_NumDealsPurchases + -0.37408945626745 * S_NumDistPurchases + 
-0.18067262995566 * S_NumStorePurchases + 0.21192146789881 * S_NumWebPurchases + 
-0.23547702310669 * S_NumWebVisitsMonth + -0.02272089758813 * S_RFMstat + -0.16409330281075 * 
S_RMntFrq + 0.45021846112946 * S_Recency + 0.32988735727394 * S_Teenhome ;
443986    +   H1x1_4  =     0.05205198916717 * S_AcceptedCmpTotal
443987    +          +     0.25568653619739 * S_Age  +    -0.31037252146959 * S_Frq
443988    +          +     0.42636025358982 * S_Income  +    -0.24453708980866 *
443989    +        S_Kidhome  +    -0.07832530945892 * S_Mnt  +    -0.48332124476182 *
443990    +        S_MntFishProducts  +    -0.13932879119138 * S_MntFruits
443991    +          +      0.1984121566988 * S_MntGoldProds  +     1.14965897015972 *
443992    +        S_MntMeatProducts  +     0.07027485457428 * S_MntSweetProducts
443993    +          +    -0.56598097754046 * S_MntWines  +     0.07317190938075 *
443994    +        S_MonthsAsCustomer  +       0.075756987983 * S_NumCatalogPurchases
443995    +          +     0.29407429399136 * S_NumDealsPurchases
443996    +          +     0.01610745252195 * S_NumDistPurchases
443997    +          +    -0.17767939085628 * S_NumStorePurchases
443998    +          +    -0.15168958538637 * S_NumWebPurchases
443999    +          +     0.17433622143988 * S_NumWebVisitsMonth
444000    +          +     0.11635602973993 * S_RFMstat  +     0.32632751843433 *
444001    +        S_RMntFrq  +    -0.24758483374458 * S_Recency
444002    +          +    -0.31468291567479 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.05205198916717 * S_AcceptedCmpTotal + 0.25568653619739 * 
S_Age + -0.31037252146959 * S_Frq + 0.42636025358982 * S_Income + -0.24453708980866 * 
S_Kidhome + -0.07832530945892 * S_Mnt + -0.48332124476182 * S_MntFishProducts + 
-0.13932879119138 * S_MntFruits + 0.1984121566988 * S_MntGoldProds + 1.14965897015972 * 
S_MntMeatProducts + 0.07027485457428 * S_MntSweetProducts + -0.56598097754046 * S_MntWines + 
0.07317190938075 * S_MonthsAsCustomer + 0.075756987983 * S_NumCatalogPurchases + 
0.29407429399136 * S_NumDealsPurchases + 0.01610745252195 * S_NumDistPurchases + 
-0.17767939085628 * S_NumStorePurchases + -0.15168958538637 * S_NumWebPurchases + 
0.17433622143988 * S_NumWebVisitsMonth + 0.11635602973993 * S_RFMstat + 0.32632751843433 * 
S_RMntFrq + -0.24758483374458 * S_Recency + -0.31468291567479 * S_Teenhome ;
444003    +   H1x1_5  =    -0.59657492903543 * S_AcceptedCmpTotal
444004    +          +     0.23513672763458 * S_Age  +    -0.14882104210954 * S_Frq
444005    +          +    -0.07762660201035 * S_Income  +     0.01424651904783 *
444006    +        S_Kidhome  +     0.18748607813081 * S_Mnt  +     0.11088464897095 *
444007    +        S_MntFishProducts  +    -0.10064450211557 * S_MntFruits
444008    +          +     0.11161391354421 * S_MntGoldProds  +    -1.36345407290644 *
444009    +        S_MntMeatProducts  +     0.04868729717044 * S_MntSweetProducts
444010    +          +     0.80284342329654 * S_MntWines  +     -0.0179539622492 *
444011    +        S_MonthsAsCustomer  +    -0.60051908798715 * S_NumCatalogPurchases
444012    +          +    -0.37976451362108 * S_NumDealsPurchases
444013    +          +    -0.17027731520801 * S_NumDistPurchases
444014    +          +     0.59849493667087 * S_NumStorePurchases
444015    +          +     0.65481480560301 * S_NumWebPurchases
444016    +          +    -0.68253224576609 * S_NumWebVisitsMonth
444017    +          +    -0.16723490165629 * S_RFMstat  +    -0.10533797887644 *
444018    +        S_RMntFrq  +     0.81382723915873 * S_Recency
444019    +          +     0.06049401205856 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -0.59657492903543 * S_AcceptedCmpTotal + 0.23513672763458 * 
S_Age + -0.14882104210954 * S_Frq + -0.07762660201035 * S_Income + 0.01424651904783 * 
S_Kidhome + 0.18748607813081 * S_Mnt + 0.11088464897095 * S_MntFishProducts + 
-0.10064450211557 * S_MntFruits + 0.11161391354421 * S_MntGoldProds + -1.36345407290644 * 
S_MntMeatProducts + 0.04868729717044 * S_MntSweetProducts + 0.80284342329654 * S_MntWines + 
-0.0179539622492 * S_MonthsAsCustomer + -0.60051908798715 * S_NumCatalogPurchases + 
-0.37976451362108 * S_NumDealsPurchases + -0.17027731520801 * S_NumDistPurchases + 
0.59849493667087 * S_NumStorePurchases + 0.65481480560301 * S_NumWebPurchases + 
-0.68253224576609 * S_NumWebVisitsMonth + -0.16723490165629 * S_RFMstat + -0.10533797887644 * 
S_RMntFrq + 0.81382723915873 * S_Recency + 0.06049401205856 * S_Teenhome ;
444020    +   H1x1_6  =    -0.07547841798202 * S_AcceptedCmpTotal
444021    +          +     0.22445278254589 * S_Age  +    -0.26357481075143 * S_Frq
444022    +          +     0.06894154144261 * S_Income  +     0.20713236126681 *
444023    +        S_Kidhome  +    -0.14103612934526 * S_Mnt  +     0.36334508557452 *
444024    +        S_MntFishProducts  +    -0.20862425337296 * S_MntFruits
444025    +          +    -0.29089690099273 * S_MntGoldProds  +     0.11336893090527 *
444026    +        S_MntMeatProducts  +    -0.13547374281924 * S_MntSweetProducts
444027    +          +     0.02228828195539 * S_MntWines  +    -0.19257650420334 *
444028    +        S_MonthsAsCustomer  +      0.1365526319824 * S_NumCatalogPurchases
444029    +          +    -0.07686699131623 * S_NumDealsPurchases
444030    +          +    -0.07220460738926 * S_NumDistPurchases
444031    +          +    -0.06554027468389 * S_NumStorePurchases
444032    +          +     0.10422838158001 * S_NumWebPurchases
444033    +          +    -0.03858550147892 * S_NumWebVisitsMonth
444034    +          +    -0.06397448441373 * S_RFMstat  +     0.21747838287147 *
444035    +        S_RMntFrq  +     0.24839313159913 * S_Recency
444036    +          +    -0.06317317698653 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_6 = -0.07547841798202 * S_AcceptedCmpTotal + 0.22445278254589 * 
S_Age + -0.26357481075143 * S_Frq + 0.06894154144261 * S_Income + 0.20713236126681 * S_Kidhome 
+ -0.14103612934526 * S_Mnt + 0.36334508557452 * S_MntFishProducts + -0.20862425337296 * 
S_MntFruits + -0.29089690099273 * S_MntGoldProds + 0.11336893090527 * S_MntMeatProducts + 
-0.13547374281924 * S_MntSweetProducts + 0.02228828195539 * S_MntWines + -0.19257650420334 * 
S_MonthsAsCustomer + 0.1365526319824 * S_NumCatalogPurchases + -0.07686699131623 * 
S_NumDealsPurchases + -0.07220460738926 * S_NumDistPurchases + -0.06554027468389 * 
S_NumStorePurchases + 0.10422838158001 * S_NumWebPurchases + -0.03858550147892 * 
S_NumWebVisitsMonth + -0.06397448441373 * S_RFMstat + 0.21747838287147 * S_RMntFrq + 
0.24839313159913 * S_Recency + -0.06317317698653 * S_Teenhome ;
444037    +   H1x1_7  =    -0.08604903695444 * S_AcceptedCmpTotal
444038    +          +    -0.14807437541992 * S_Age  +     0.01466157584549 * S_Frq
444039    +          +    -0.09883966180507 * S_Income  +     0.51992566778352 *
444040    +        S_Kidhome  +     0.29795006703636 * S_Mnt  +    -0.08922020500011 *
444041    +        S_MntFishProducts  +     0.19836834402079 * S_MntFruits
444042    +          +    -0.11292241468378 * S_MntGoldProds  +       0.584464452194 *
444043    +        S_MntMeatProducts  +     0.22625326024073 * S_MntSweetProducts
444044    +          +     0.24074129944382 * S_MntWines  +     0.13538906557527 *
444045    +        S_MonthsAsCustomer  +    -0.01228250248922 * S_NumCatalogPurchases
444046    +          +    -0.07920122387563 * S_NumDealsPurchases
444047    +          +      0.3649244061347 * S_NumDistPurchases
444048    +          +     0.36475853688403 * S_NumStorePurchases
444049    +          +     0.02153991404063 * S_NumWebPurchases
444050    +          +    -0.94080669139388 * S_NumWebVisitsMonth
444051    +          +     0.24853677977494 * S_RFMstat  +     0.37015183933951 *
444052    +        S_RMntFrq  +      0.6724157721663 * S_Recency
444053    +          +      0.1615471643866 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_7 = -0.08604903695444 * S_AcceptedCmpTotal + -0.14807437541992 * 
S_Age + 0.01466157584549 * S_Frq + -0.09883966180507 * S_Income + 0.51992566778352 * S_Kidhome 
+ 0.29795006703636 * S_Mnt + -0.08922020500011 * S_MntFishProducts + 0.19836834402079 * 
S_MntFruits + -0.11292241468378 * S_MntGoldProds + 0.584464452194 * S_MntMeatProducts + 
0.22625326024073 * S_MntSweetProducts + 0.24074129944382 * S_MntWines + 0.13538906557527 * 
S_MonthsAsCustomer + -0.01228250248922 * S_NumCatalogPurchases + -0.07920122387563 * 
S_NumDealsPurchases + 0.3649244061347 * S_NumDistPurchases + 0.36475853688403 * 
S_NumStorePurchases + 0.02153991404063 * S_NumWebPurchases + -0.94080669139388 * 
S_NumWebVisitsMonth + 0.24853677977494 * S_RFMstat + 0.37015183933951 * S_RMntFrq + 
0.6724157721663 * S_Recency + 0.1615471643866 * S_Teenhome ;
444054    +   H1x1_1  = H1x1_1  +     0.04431608362128 * AcceptedCmp10
444055    +          +       0.145592087795 * AcceptedCmp20  +    -0.18972867139938 *
444056    +        AcceptedCmp30  +     0.11297731320888 * AcceptedCmp40
444057    +          +     0.15203974410995 * AcceptedCmp50  +     0.05130421316428 *
444058    +        Complain0  +     0.33576036450343 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.04431608362128 * AcceptedCmp10 + 0.145592087795 * 
AcceptedCmp20 + -0.18972867139938 * AcceptedCmp30 + 0.11297731320888 * AcceptedCmp40 + 
0.15203974410995 * AcceptedCmp50 + 0.05130421316428 * Complain0 + 0.33576036450343 * 
HigherEducationBinary0 ;
444059    +   H1x1_2  = H1x1_2  +    -0.05495742609855 * AcceptedCmp10
444060    +          +    -0.08873650760176 * AcceptedCmp20  +    -0.16380549867313 *
444061    +        AcceptedCmp30  +    -0.24495261884932 * AcceptedCmp40
444062    +          +    -0.22199506896148 * AcceptedCmp50  +       0.149484615172 *
444063    +        Complain0  +     0.01091791142552 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.05495742609855 * AcceptedCmp10 + -0.08873650760176 
* AcceptedCmp20 + -0.16380549867313 * AcceptedCmp30 + -0.24495261884932 * AcceptedCmp40 + 
-0.22199506896148 * AcceptedCmp50 + 0.149484615172 * Complain0 + 0.01091791142552 * 
HigherEducationBinary0 ;
444064    +   H1x1_3  = H1x1_3  +     0.03473702421341 * AcceptedCmp10
444065    +          +    -0.11226718065217 * AcceptedCmp20  +     0.19024579384296 *
444066    +        AcceptedCmp30  +     0.15478548865598 * AcceptedCmp40
444067    +          +     0.15222823671897 * AcceptedCmp50  +     0.07713012834947 *
444068    +        Complain0  +    -0.18741708707661 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.03473702421341 * AcceptedCmp10 + -0.11226718065217 * 
AcceptedCmp20 + 0.19024579384296 * AcceptedCmp30 + 0.15478548865598 * AcceptedCmp40 + 
0.15222823671897 * AcceptedCmp50 + 0.07713012834947 * Complain0 + -0.18741708707661 * 
HigherEducationBinary0 ;
444069    +   H1x1_4  = H1x1_4  +    -0.25622127302429 * AcceptedCmp10
444070    +          +    -0.39059103518073 * AcceptedCmp20  +    -0.29716603631807 *
444071    +        AcceptedCmp30  +    -0.20875694971526 * AcceptedCmp40
444072    +          +    -0.35128787139073 * AcceptedCmp50  +    -0.28848733462386 *
444073    +        Complain0  +      0.4276503747649 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.25622127302429 * AcceptedCmp10 + -0.39059103518073 
* AcceptedCmp20 + -0.29716603631807 * AcceptedCmp30 + -0.20875694971526 * AcceptedCmp40 + 
-0.35128787139073 * AcceptedCmp50 + -0.28848733462386 * Complain0 + 0.4276503747649 * 
HigherEducationBinary0 ;
444074    +   H1x1_5  = H1x1_5  +    -0.06574875851088 * AcceptedCmp10
444075    +          +    -0.27375195259265 * AcceptedCmp20  +     -0.2740681662293 *
444076    +        AcceptedCmp30  +    -0.14697156898736 * AcceptedCmp40
444077    +          +     0.17684649468835 * AcceptedCmp50  +    -0.09979172944646 *
444078    +        Complain0  +     0.38986664202197 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.06574875851088 * AcceptedCmp10 + -0.27375195259265 
* AcceptedCmp20 + -0.2740681662293 * AcceptedCmp30 + -0.14697156898736 * AcceptedCmp40 + 
0.17684649468835 * AcceptedCmp50 + -0.09979172944646 * Complain0 + 0.38986664202197 * 
HigherEducationBinary0 ;
444079    +   H1x1_6  = H1x1_6  +     0.08696678529441 * AcceptedCmp10
444080    +          +     0.09467543942215 * AcceptedCmp20  +     0.04586779705477 *
444081    +        AcceptedCmp30  +    -0.12591921836379 * AcceptedCmp40
444082    +          +     0.20150138392895 * AcceptedCmp50  +     0.27764282700214 *
444083    +        Complain0  +     0.13985738522066 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + 0.08696678529441 * AcceptedCmp10 + 0.09467543942215 * 
AcceptedCmp20 + 0.04586779705477 * AcceptedCmp30 + -0.12591921836379 * AcceptedCmp40 + 
0.20150138392895 * AcceptedCmp50 + 0.27764282700214 * Complain0 + 0.13985738522066 * 
HigherEducationBinary0 ;
444084    +   H1x1_7  = H1x1_7  +    -0.10455069401218 * AcceptedCmp10
444085    +          +      0.1311831941372 * AcceptedCmp20  +     0.17844209104604 *
444086    +        AcceptedCmp30  +     0.19406707592815 * AcceptedCmp40
444087    +          +    -0.00068155012319 * AcceptedCmp50  +     0.13245364846536 *
444088    +        Complain0  +    -0.05165256160872 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_7 = H1x1_7 + -0.10455069401218 * AcceptedCmp10 + 0.1311831941372 * 
AcceptedCmp20 + 0.17844209104604 * AcceptedCmp30 + 0.19406707592815 * AcceptedCmp40 + 
-0.00068155012319 * AcceptedCmp50 + 0.13245364846536 * Complain0 + -0.05165256160872 * 
HigherEducationBinary0 ;
444089    +   H1x1_1  = H1x1_1  +     0.28967939808759 * Education2n_Cycle
444090    +          +    -0.15795056374781 * EducationBasic  +    -0.00649803471307 *
444091    +        EducationGraduation  +     0.19520715924532 * EducationMaster
444092    +          +     0.07744097241553 * Marital_StatusDivorced
444093    +          +     -0.0247463100385 * Marital_StatusMarried
444094    +          +     0.05804915234573 * Marital_StatusSingle
444095    +          +    -0.08320125047871 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.28967939808759 * Education2n_Cycle + 
-0.15795056374781 * EducationBasic + -0.00649803471307 * EducationGraduation + 
0.19520715924532 * EducationMaster + 0.07744097241553 * Marital_StatusDivorced + 
-0.0247463100385 * Marital_StatusMarried + 0.05804915234573 * Marital_StatusSingle + 
-0.08320125047871 * Marital_StatusTogether ;
444096    +   H1x1_2  = H1x1_2  +     0.12524444422085 * Education2n_Cycle
444097    +          +    -0.30278286924729 * EducationBasic  +     0.37480827366421 *
444098    +        EducationGraduation  +     0.34209136290694 * EducationMaster
444099    +          +     0.01390668926269 * Marital_StatusDivorced
444100    +          +     0.01136282152074 * Marital_StatusMarried
444101    +          +     0.12450246418789 * Marital_StatusSingle
444102    +          +     -0.1576148519872 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.12524444422085 * Education2n_Cycle + 
-0.30278286924729 * EducationBasic + 0.37480827366421 * EducationGraduation + 0.34209136290694 
* EducationMaster + 0.01390668926269 * Marital_StatusDivorced + 0.01136282152074 * 
Marital_StatusMarried + 0.12450246418789 * Marital_StatusSingle + -0.1576148519872 * 
Marital_StatusTogether ;
444103    +   H1x1_3  = H1x1_3  +    -0.14589041643593 * Education2n_Cycle
444104    +          +    -0.15691118816463 * EducationBasic  +      0.1993616073183 *
444105    +        EducationGraduation  +     0.02862010255145 * EducationMaster
444106    +          +    -0.19133456931879 * Marital_StatusDivorced
444107    +          +     0.56263566654996 * Marital_StatusMarried
444108    +          +    -0.42172822038882 * Marital_StatusSingle
444109    +          +     0.42023140643292 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.14589041643593 * Education2n_Cycle + 
-0.15691118816463 * EducationBasic + 0.1993616073183 * EducationGraduation + 0.02862010255145 
* EducationMaster + -0.19133456931879 * Marital_StatusDivorced + 0.56263566654996 * 
Marital_StatusMarried + -0.42172822038882 * Marital_StatusSingle + 0.42023140643292 * 
Marital_StatusTogether ;
444110    +   H1x1_4  = H1x1_4  +     0.10038585978656 * Education2n_Cycle
444111    +          +    -0.11388609002984 * EducationBasic  +    -0.14980553500983 *
444112    +        EducationGraduation  +    -0.07646595330369 * EducationMaster
444113    +          +    -0.19871205065609 * Marital_StatusDivorced
444114    +          +    -0.14730795681603 * Marital_StatusMarried
444115    +          +     0.05055432510362 * Marital_StatusSingle
444116    +          +     0.06558965292395 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + 0.10038585978656 * Education2n_Cycle + 
-0.11388609002984 * EducationBasic + -0.14980553500983 * EducationGraduation + 
-0.07646595330369 * EducationMaster + -0.19871205065609 * Marital_StatusDivorced + 
-0.14730795681603 * Marital_StatusMarried + 0.05055432510362 * Marital_StatusSingle + 
0.06558965292395 * Marital_StatusTogether ;
444117    +   H1x1_5  = H1x1_5  +      0.0015835307855 * Education2n_Cycle
444118    +          +    -0.22658746797638 * EducationBasic  +    -0.03445982386977 *
444119    +        EducationGraduation  +     0.11375378192685 * EducationMaster
444120    +          +    -0.35623807358995 * Marital_StatusDivorced
444121    +          +     0.30324726283965 * Marital_StatusMarried
444122    +          +    -0.18561093467927 * Marital_StatusSingle
444123    +          +       0.395424582152 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + 0.0015835307855 * Education2n_Cycle + 
-0.22658746797638 * EducationBasic + -0.03445982386977 * EducationGraduation + 
0.11375378192685 * EducationMaster + -0.35623807358995 * Marital_StatusDivorced + 
0.30324726283965 * Marital_StatusMarried + -0.18561093467927 * Marital_StatusSingle + 
0.395424582152 * Marital_StatusTogether ;
444124    +   H1x1_6  = H1x1_6  +    -0.23751822587858 * Education2n_Cycle
444125    +          +    -0.01687300040825 * EducationBasic  +     0.23236967703011 *
444126    +        EducationGraduation  +      0.0725289831541 * EducationMaster
444127    +          +     0.11581014663368 * Marital_StatusDivorced
444128    +          +    -0.31070638037659 * Marital_StatusMarried
444129    +          +     0.17131747253949 * Marital_StatusSingle
444130    +          +    -0.19314955966476 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + -0.23751822587858 * Education2n_Cycle + 
-0.01687300040825 * EducationBasic + 0.23236967703011 * EducationGraduation + 0.0725289831541 
* EducationMaster + 0.11581014663368 * Marital_StatusDivorced + -0.31070638037659 * 
Marital_StatusMarried + 0.17131747253949 * Marital_StatusSingle + -0.19314955966476 * 
Marital_StatusTogether ;
444131    +   H1x1_7  = H1x1_7  +     0.00103693282479 * Education2n_Cycle
444132    +          +     0.12608909598752 * EducationBasic  +     -0.2366673091666 *
444133    +        EducationGraduation  +     0.24413217290922 * EducationMaster
444134    +          +    -0.42450599871892 * Marital_StatusDivorced
444135    +          +     0.48162905075885 * Marital_StatusMarried
444136    +          +    -0.26618507749283 * Marital_StatusSingle
444137    +          +     0.38053668740338 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_7 = H1x1_7 + 0.00103693282479 * Education2n_Cycle + 
0.12608909598752 * EducationBasic + -0.2366673091666 * EducationGraduation + 0.24413217290922 
* EducationMaster + -0.42450599871892 * Marital_StatusDivorced + 0.48162905075885 * 
Marital_StatusMarried + -0.26618507749283 * Marital_StatusSingle + 0.38053668740338 * 
Marital_StatusTogether ;
444138    +   H1x1_1  =     0.12149136705075 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.12149136705075 + H1x1_1 ;
444139    +   H1x1_2  =    -0.97489696657001 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.97489696657001 + H1x1_2 ;
444140    +   H1x1_3  =    -0.70605220802968 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.70605220802968 + H1x1_3 ;
444141    +   H1x1_4  =    -1.07783206982379 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -1.07783206982379 + H1x1_4 ;
444142    +   H1x1_5  =    -1.00400706261511 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -1.00400706261511 + H1x1_5 ;
444143    +   H1x1_6  =     0.22600488314839 + H1x1_6 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = 0.22600488314839 + H1x1_6 ;
444144    +   H1x1_7  =     1.55642446968077 + H1x1_7 ;
MPRINT(EM_DIAGRAM):   H1x1_7 = 1.55642446968077 + H1x1_7 ;
444145    +   _EPS = SQRT(CONSTANT('MACEPS')) ;
MPRINT(EM_DIAGRAM):   _EPS = SQRT(CONSTANT('MACEPS')) ;
444146    +   _REC_EPS = 1/_EPS ;
MPRINT(EM_DIAGRAM):   _REC_EPS = 1/_EPS ;
444147    +   DROP _REC_EPS _EPS ;
MPRINT(EM_DIAGRAM):   DROP _REC_EPS _EPS ;
444148    +   IF H1x1_1  < _REC_EPS AND H1x1_1  > - _REC_EPS THEN
444149    +   H1x1_1  = H1x1_1  * H1x1_1 ;
MPRINT(EM_DIAGRAM):   IF H1x1_1 < _REC_EPS AND H1x1_1 > - _REC_EPS THEN H1x1_1 = H1x1_1 * 
H1x1_1 ;
444150    +   ELSE H1x1_1  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_1 = _REC_EPS ;
444151    +   IF H1x1_2  < _REC_EPS AND H1x1_2  > - _REC_EPS THEN
444152    +   H1x1_2  = H1x1_2  * H1x1_2 ;
MPRINT(EM_DIAGRAM):   IF H1x1_2 < _REC_EPS AND H1x1_2 > - _REC_EPS THEN H1x1_2 = H1x1_2 * 
H1x1_2 ;
444153    +   ELSE H1x1_2  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_2 = _REC_EPS ;
444154    +   IF H1x1_3  < _REC_EPS AND H1x1_3  > - _REC_EPS THEN
444155    +   H1x1_3  = H1x1_3  * H1x1_3 ;
MPRINT(EM_DIAGRAM):   IF H1x1_3 < _REC_EPS AND H1x1_3 > - _REC_EPS THEN H1x1_3 = H1x1_3 * 
H1x1_3 ;
444156    +   ELSE H1x1_3  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_3 = _REC_EPS ;
444157    +   IF H1x1_4  < _REC_EPS AND H1x1_4  > - _REC_EPS THEN
444158    +   H1x1_4  = H1x1_4  * H1x1_4 ;
MPRINT(EM_DIAGRAM):   IF H1x1_4 < _REC_EPS AND H1x1_4 > - _REC_EPS THEN H1x1_4 = H1x1_4 * 
H1x1_4 ;
444159    +   ELSE H1x1_4  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_4 = _REC_EPS ;
444160    +   IF H1x1_5  < _REC_EPS AND H1x1_5  > - _REC_EPS THEN
444161    +   H1x1_5  = H1x1_5  * H1x1_5 ;
MPRINT(EM_DIAGRAM):   IF H1x1_5 < _REC_EPS AND H1x1_5 > - _REC_EPS THEN H1x1_5 = H1x1_5 * 
H1x1_5 ;
444162    +   ELSE H1x1_5  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_5 = _REC_EPS ;
444163    +   IF H1x1_6  < _REC_EPS AND H1x1_6  > - _REC_EPS THEN
444164    +   H1x1_6  = H1x1_6  * H1x1_6 ;
MPRINT(EM_DIAGRAM):   IF H1x1_6 < _REC_EPS AND H1x1_6 > - _REC_EPS THEN H1x1_6 = H1x1_6 * 
H1x1_6 ;
444165    +   ELSE H1x1_6  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_6 = _REC_EPS ;
444166    +   IF H1x1_7  < _REC_EPS AND H1x1_7  > - _REC_EPS THEN
444167    +   H1x1_7  = H1x1_7  * H1x1_7 ;
MPRINT(EM_DIAGRAM):   IF H1x1_7 < _REC_EPS AND H1x1_7 > - _REC_EPS THEN H1x1_7 = H1x1_7 * 
H1x1_7 ;
444168    +   ELSE H1x1_7  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_7 = _REC_EPS ;
444169    +END;
MPRINT(EM_DIAGRAM):   END;
444170    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
444171    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
444172    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
444173    +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
444174    +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
444175    +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
444176    +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
444177    +   H1x1_7  = .;
MPRINT(EM_DIAGRAM):   H1x1_7 = .;
444178    +END;
MPRINT(EM_DIAGRAM):   END;
444179    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
444180    +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
444181    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
444182    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
444183    +   H1x2_1  =    -1.36226288448745 * S_AcceptedCmpTotal
444184    +          +     -1.3328616352886 * S_Age  +     1.25346137866034 * S_Frq
444185    +          +    -1.21746243786295 * S_Income  +     2.83911738158074 *
444186    +        S_Kidhome  +    -0.60784009102409 * S_Mnt  +     1.57752173634223 *
444187    +        S_MntFishProducts  +    -0.26776567401075 * S_MntFruits
444188    +          +     1.09584731081081 * S_MntGoldProds  +     1.22333044103532 *
444189    +        S_MntMeatProducts  +     0.42827942745016 * S_MntSweetProducts
444190    +          +     0.67813472792448 * S_MntWines  +     0.56816492004798 *
444191    +        S_MonthsAsCustomer  +     0.58113470399079 * S_NumCatalogPurchases
444192    +          +     1.96719021971894 * S_NumDealsPurchases
444193    +          +    -0.44535354794671 * S_NumDistPurchases
444194    +          +    -0.54827762736866 * S_NumStorePurchases
444195    +          +     1.02703310241897 * S_NumWebPurchases
444196    +          +    -0.12526997502601 * S_NumWebVisitsMonth
444197    +          +    -0.55803926383776 * S_RFMstat  +     0.01819380776809 *
444198    +        S_RMntFrq  +       0.651688575044 * S_Recency
444199    +          +     1.58682398186611 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -1.36226288448745 * S_AcceptedCmpTotal + -1.3328616352886 * 
S_Age + 1.25346137866034 * S_Frq + -1.21746243786295 * S_Income + 2.83911738158074 * S_Kidhome 
+ -0.60784009102409 * S_Mnt + 1.57752173634223 * S_MntFishProducts + -0.26776567401075 * 
S_MntFruits + 1.09584731081081 * S_MntGoldProds + 1.22333044103532 * S_MntMeatProducts + 
0.42827942745016 * S_MntSweetProducts + 0.67813472792448 * S_MntWines + 0.56816492004798 * 
S_MonthsAsCustomer + 0.58113470399079 * S_NumCatalogPurchases + 1.96719021971894 * 
S_NumDealsPurchases + -0.44535354794671 * S_NumDistPurchases + -0.54827762736866 * 
S_NumStorePurchases + 1.02703310241897 * S_NumWebPurchases + -0.12526997502601 * 
S_NumWebVisitsMonth + -0.55803926383776 * S_RFMstat + 0.01819380776809 * S_RMntFrq + 
0.651688575044 * S_Recency + 1.58682398186611 * S_Teenhome ;
444200    +   H1x2_2  =    -0.38064507857029 * S_AcceptedCmpTotal
444201    +          +    -0.49661801158351 * S_Age  +    -0.89589399799916 * S_Frq
444202    +          +     -0.0121499288597 * S_Income  +    -0.48023022827846 *
444203    +        S_Kidhome  +     -0.5183846206029 * S_Mnt  +    -3.13913899012334 *
444204    +        S_MntFishProducts  +    -2.07291335687615 * S_MntFruits
444205    +          +     0.51019753905662 * S_MntGoldProds  +     0.11458666377917 *
444206    +        S_MntMeatProducts  +     -1.8499241966205 * S_MntSweetProducts
444207    +          +     0.23160544044172 * S_MntWines  +    -0.48210626907943 *
444208    +        S_MonthsAsCustomer  +     0.15500845227752 * S_NumCatalogPurchases
444209    +          +     1.34659447971131 * S_NumDealsPurchases
444210    +          +    -0.51624251310423 * S_NumDistPurchases
444211    +          +      -1.283121574848 * S_NumStorePurchases
444212    +          +    -1.83517806228926 * S_NumWebPurchases
444213    +          +     0.51321339475285 * S_NumWebVisitsMonth
444214    +          +    -1.86431704283342 * S_RFMstat  +    -1.52065204326569 *
444215    +        S_RMntFrq  +    -0.33186055095462 * S_Recency
444216    +          +    -0.49524729407054 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -0.38064507857029 * S_AcceptedCmpTotal + -0.49661801158351 * 
S_Age + -0.89589399799916 * S_Frq + -0.0121499288597 * S_Income + -0.48023022827846 * 
S_Kidhome + -0.5183846206029 * S_Mnt + -3.13913899012334 * S_MntFishProducts + 
-2.07291335687615 * S_MntFruits + 0.51019753905662 * S_MntGoldProds + 0.11458666377917 * 
S_MntMeatProducts + -1.8499241966205 * S_MntSweetProducts + 0.23160544044172 * S_MntWines + 
-0.48210626907943 * S_MonthsAsCustomer + 0.15500845227752 * S_NumCatalogPurchases + 
1.34659447971131 * S_NumDealsPurchases + -0.51624251310423 * S_NumDistPurchases + 
-1.283121574848 * S_NumStorePurchases + -1.83517806228926 * S_NumWebPurchases + 
0.51321339475285 * S_NumWebVisitsMonth + -1.86431704283342 * S_RFMstat + -1.52065204326569 * 
S_RMntFrq + -0.33186055095462 * S_Recency + -0.49524729407054 * S_Teenhome ;
444217    +   H1x2_3  =    -0.75774003934728 * S_AcceptedCmpTotal
444218    +          +    -0.85312030825337 * S_Age  +    -0.01726294458221 * S_Frq
444219    +          +     0.58598267983786 * S_Income  +     1.30497766805554 *
444220    +        S_Kidhome  +    -0.84214135491022 * S_Mnt  +     0.55305862453787 *
444221    +        S_MntFishProducts  +      0.6488663613899 * S_MntFruits
444222    +          +    -0.83189439197558 * S_MntGoldProds  +    -0.07500050412653 *
444223    +        S_MntMeatProducts  +    -0.06401928810253 * S_MntSweetProducts
444224    +          +      0.5940135658334 * S_MntWines  +    -0.04573352455984 *
444225    +        S_MonthsAsCustomer  +    -1.53610650634069 * S_NumCatalogPurchases
444226    +          +     0.67492297345004 * S_NumDealsPurchases
444227    +          +    -0.40437875375926 * S_NumDistPurchases
444228    +          +     0.36322603681545 * S_NumStorePurchases
444229    +          +    -1.15315070635524 * S_NumWebPurchases
444230    +          +     1.20707272201156 * S_NumWebVisitsMonth
444231    +          +     0.12192566357285 * S_RFMstat  +    -0.46711219170047 *
444232    +        S_RMntFrq  +     1.89703582493259 * S_Recency
444233    +          +     1.07511942237188 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.75774003934728 * S_AcceptedCmpTotal + -0.85312030825337 * 
S_Age + -0.01726294458221 * S_Frq + 0.58598267983786 * S_Income + 1.30497766805554 * S_Kidhome 
+ -0.84214135491022 * S_Mnt + 0.55305862453787 * S_MntFishProducts + 0.6488663613899 * 
S_MntFruits + -0.83189439197558 * S_MntGoldProds + -0.07500050412653 * S_MntMeatProducts + 
-0.06401928810253 * S_MntSweetProducts + 0.5940135658334 * S_MntWines + -0.04573352455984 * 
S_MonthsAsCustomer + -1.53610650634069 * S_NumCatalogPurchases + 0.67492297345004 * 
S_NumDealsPurchases + -0.40437875375926 * S_NumDistPurchases + 0.36322603681545 * 
S_NumStorePurchases + -1.15315070635524 * S_NumWebPurchases + 1.20707272201156 * 
S_NumWebVisitsMonth + 0.12192566357285 * S_RFMstat + -0.46711219170047 * S_RMntFrq + 
1.89703582493259 * S_Recency + 1.07511942237188 * S_Teenhome ;
444234    +   H1x2_4  =     0.62123819069495 * S_AcceptedCmpTotal
444235    +          +     0.03399237520702 * S_Age  +    -0.01971421795338 * S_Frq
444236    +          +    -0.54728266919056 * S_Income  +     -0.4634195771237 *
444237    +        S_Kidhome  +    -1.19055247712911 * S_Mnt  +      1.4307770729159 *
444238    +        S_MntFishProducts  +    -0.83895281276374 * S_MntFruits
444239    +          +    -0.48578798244317 * S_MntGoldProds  +     -0.2846617807101 *
444240    +        S_MntMeatProducts  +     0.70721686533987 * S_MntSweetProducts
444241    +          +     1.32824513551741 * S_MntWines  +    -0.62654342755965 *
444242    +        S_MonthsAsCustomer  +    -0.97245161056543 * S_NumCatalogPurchases
444243    +          +    -0.41427983342148 * S_NumDealsPurchases
444244    +          +    -0.22714305629205 * S_NumDistPurchases
444245    +          +    -0.78763182048862 * S_NumStorePurchases
444246    +          +    -0.26669253451501 * S_NumWebPurchases
444247    +          +    -0.79601078616342 * S_NumWebVisitsMonth
444248    +          +    -0.03863278696502 * S_RFMstat  +     0.95011556103056 *
444249    +        S_RMntFrq  +     0.57184629262878 * S_Recency
444250    +          +    -0.21560478702461 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 0.62123819069495 * S_AcceptedCmpTotal + 0.03399237520702 * 
S_Age + -0.01971421795338 * S_Frq + -0.54728266919056 * S_Income + -0.4634195771237 * 
S_Kidhome + -1.19055247712911 * S_Mnt + 1.4307770729159 * S_MntFishProducts + 
-0.83895281276374 * S_MntFruits + -0.48578798244317 * S_MntGoldProds + -0.2846617807101 * 
S_MntMeatProducts + 0.70721686533987 * S_MntSweetProducts + 1.32824513551741 * S_MntWines + 
-0.62654342755965 * S_MonthsAsCustomer + -0.97245161056543 * S_NumCatalogPurchases + 
-0.41427983342148 * S_NumDealsPurchases + -0.22714305629205 * S_NumDistPurchases + 
-0.78763182048862 * S_NumStorePurchases + -0.26669253451501 * S_NumWebPurchases + 
-0.79601078616342 * S_NumWebVisitsMonth + -0.03863278696502 * S_RFMstat + 0.95011556103056 * 
S_RMntFrq + 0.57184629262878 * S_Recency + -0.21560478702461 * S_Teenhome ;
444251    +   H1x2_5  =     1.47906557745075 * S_AcceptedCmpTotal
444252    +          +    -0.31060566334198 * S_Age  +     0.56472424389718 * S_Frq
444253    +          +     2.16541682726249 * S_Income  +    -0.34119803841059 *
444254    +        S_Kidhome  +    -0.53783050542796 * S_Mnt  +     0.54954821448236 *
444255    +        S_MntFishProducts  +    -0.48449918837838 * S_MntFruits
444256    +          +     0.29783052620672 * S_MntGoldProds  +    -0.15068954343013 *
444257    +        S_MntMeatProducts  +     0.12733251381761 * S_MntSweetProducts
444258    +          +    -2.46709166794296 * S_MntWines  +     -1.2011286508879 *
444259    +        S_MonthsAsCustomer  +    -0.88194814936932 * S_NumCatalogPurchases
444260    +          +      0.7697882092212 * S_NumDealsPurchases
444261    +          +     0.51864835453056 * S_NumDistPurchases
444262    +          +    -1.18320366630444 * S_NumStorePurchases
444263    +          +     -0.6608394639529 * S_NumWebPurchases
444264    +          +    -0.03948137707769 * S_NumWebVisitsMonth
444265    +          +     1.01076462488608 * S_RFMstat  +    -0.91562280329354 *
444266    +        S_RMntFrq  +    -1.07576669501238 * S_Recency
444267    +          +     -0.5946628412106 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 1.47906557745075 * S_AcceptedCmpTotal + -0.31060566334198 * 
S_Age + 0.56472424389718 * S_Frq + 2.16541682726249 * S_Income + -0.34119803841059 * S_Kidhome 
+ -0.53783050542796 * S_Mnt + 0.54954821448236 * S_MntFishProducts + -0.48449918837838 * 
S_MntFruits + 0.29783052620672 * S_MntGoldProds + -0.15068954343013 * S_MntMeatProducts + 
0.12733251381761 * S_MntSweetProducts + -2.46709166794296 * S_MntWines + -1.2011286508879 * 
S_MonthsAsCustomer + -0.88194814936932 * S_NumCatalogPurchases + 0.7697882092212 * 
S_NumDealsPurchases + 0.51864835453056 * S_NumDistPurchases + -1.18320366630444 * 
S_NumStorePurchases + -0.6608394639529 * S_NumWebPurchases + -0.03948137707769 * 
S_NumWebVisitsMonth + 1.01076462488608 * S_RFMstat + -0.91562280329354 * S_RMntFrq + 
-1.07576669501238 * S_Recency + -0.5946628412106 * S_Teenhome ;
444268    +   H1x2_6  =     0.42130900994246 * S_AcceptedCmpTotal
444269    +          +     1.64256522546546 * S_Age  +    -0.31822237495441 * S_Frq
444270    +          +     0.39698710846967 * S_Income  +    -1.30075584525681 *
444271    +        S_Kidhome  +    -1.74733472316294 * S_Mnt  +    -1.04423575539078 *
444272    +        S_MntFishProducts  +     0.28025913700744 * S_MntFruits
444273    +          +     0.92062413073229 * S_MntGoldProds  +     0.38487452173084 *
444274    +        S_MntMeatProducts  +     2.15808673418264 * S_MntSweetProducts
444275    +          +     -0.5364274323591 * S_MntWines  +     0.64447858852609 *
444276    +        S_MonthsAsCustomer  +     0.33683873873337 * S_NumCatalogPurchases
444277    +          +     1.45707983202269 * S_NumDealsPurchases
444278    +          +     0.83341887728641 * S_NumDistPurchases
444279    +          +    -0.36664450469423 * S_NumStorePurchases
444280    +          +     0.63911579043339 * S_NumWebPurchases
444281    +          +     0.67144790303554 * S_NumWebVisitsMonth
444282    +          +    -0.22124390112376 * S_RFMstat  +     1.72222071547971 *
444283    +        S_RMntFrq  +    -0.02323382627271 * S_Recency
444284    +          +    -0.09494567508522 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_6 = 0.42130900994246 * S_AcceptedCmpTotal + 1.64256522546546 * 
S_Age + -0.31822237495441 * S_Frq + 0.39698710846967 * S_Income + -1.30075584525681 * 
S_Kidhome + -1.74733472316294 * S_Mnt + -1.04423575539078 * S_MntFishProducts + 
0.28025913700744 * S_MntFruits + 0.92062413073229 * S_MntGoldProds + 0.38487452173084 * 
S_MntMeatProducts + 2.15808673418264 * S_MntSweetProducts + -0.5364274323591 * S_MntWines + 
0.64447858852609 * S_MonthsAsCustomer + 0.33683873873337 * S_NumCatalogPurchases + 
1.45707983202269 * S_NumDealsPurchases + 0.83341887728641 * S_NumDistPurchases + 
-0.36664450469423 * S_NumStorePurchases + 0.63911579043339 * S_NumWebPurchases + 
0.67144790303554 * S_NumWebVisitsMonth + -0.22124390112376 * S_RFMstat + 1.72222071547971 * 
S_RMntFrq + -0.02323382627271 * S_Recency + -0.09494567508522 * S_Teenhome ;
444285    +   H1x2_7  =      0.0903330772553 * S_AcceptedCmpTotal
444286    +          +     0.13217959089196 * S_Age  +     0.93600629225871 * S_Frq
444287    +          +     1.23765169211392 * S_Income  +     1.27732984858098 *
444288    +        S_Kidhome  +     1.54889765360944 * S_Mnt  +     0.84618173514761 *
444289    +        S_MntFishProducts  +    -0.32044356786958 * S_MntFruits
444290    +          +    -0.26357995597029 * S_MntGoldProds  +     0.53649229087334 *
444291    +        S_MntMeatProducts  +     1.46955866272889 * S_MntSweetProducts
444292    +          +    -0.34260315437319 * S_MntWines  +    -1.70693604004836 *
444293    +        S_MonthsAsCustomer  +     -0.4612555130737 * S_NumCatalogPurchases
444294    +          +     0.68491896063662 * S_NumDealsPurchases
444295    +          +      0.5386312048592 * S_NumDistPurchases
444296    +          +     1.28108942503912 * S_NumStorePurchases
444297    +          +    -0.88282270505969 * S_NumWebPurchases
444298    +          +    -0.66670958211416 * S_NumWebVisitsMonth
444299    +          +     0.94315921733739 * S_RFMstat  +     0.70533705858561 *
444300    +        S_RMntFrq  +     0.23896687873405 * S_Recency
444301    +          +     0.66289635918858 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_7 = 0.0903330772553 * S_AcceptedCmpTotal + 0.13217959089196 * S_Age 
+ 0.93600629225871 * S_Frq + 1.23765169211392 * S_Income + 1.27732984858098 * S_Kidhome + 
1.54889765360944 * S_Mnt + 0.84618173514761 * S_MntFishProducts + -0.32044356786958 * 
S_MntFruits + -0.26357995597029 * S_MntGoldProds + 0.53649229087334 * S_MntMeatProducts + 
1.46955866272889 * S_MntSweetProducts + -0.34260315437319 * S_MntWines + -1.70693604004836 * 
S_MonthsAsCustomer + -0.4612555130737 * S_NumCatalogPurchases + 0.68491896063662 * 
S_NumDealsPurchases + 0.5386312048592 * S_NumDistPurchases + 1.28108942503912 * 
S_NumStorePurchases + -0.88282270505969 * S_NumWebPurchases + -0.66670958211416 * 
S_NumWebVisitsMonth + 0.94315921733739 * S_RFMstat + 0.70533705858561 * S_RMntFrq + 
0.23896687873405 * S_Recency + 0.66289635918858 * S_Teenhome ;
444302    +   H1x2_1  = H1x2_1  +     0.22958861848016 * AcceptedCmp10
444303    +          +    -1.11069938765475 * AcceptedCmp20  +     1.18563222829069 *
444304    +        AcceptedCmp30  +    -0.97028253571173 * AcceptedCmp40
444305    +          +     0.60850082670391 * AcceptedCmp50  +     0.31163990605418 *
444306    +        Complain0  +     1.10957053966326 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 0.22958861848016 * AcceptedCmp10 + -1.11069938765475 * 
AcceptedCmp20 + 1.18563222829069 * AcceptedCmp30 + -0.97028253571173 * AcceptedCmp40 + 
0.60850082670391 * AcceptedCmp50 + 0.31163990605418 * Complain0 + 1.10957053966326 * 
HigherEducationBinary0 ;
444307    +   H1x2_2  = H1x2_2  +    -0.99409862826118 * AcceptedCmp10
444308    +          +    -0.76360093699992 * AcceptedCmp20  +     0.82772534103696 *
444309    +        AcceptedCmp30  +     1.74232000787449 * AcceptedCmp40
444310    +          +    -1.37356239255127 * AcceptedCmp50  +      0.0919811154199 *
444311    +        Complain0  +    -0.00220513515877 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -0.99409862826118 * AcceptedCmp10 + -0.76360093699992 
* AcceptedCmp20 + 0.82772534103696 * AcceptedCmp30 + 1.74232000787449 * AcceptedCmp40 + 
-1.37356239255127 * AcceptedCmp50 + 0.0919811154199 * Complain0 + -0.00220513515877 * 
HigherEducationBinary0 ;
444312    +   H1x2_3  = H1x2_3  +    -0.21003647134105 * AcceptedCmp10
444313    +          +    -0.08930317176477 * AcceptedCmp20  +    -0.39109673162041 *
444314    +        AcceptedCmp30  +     1.14094450038946 * AcceptedCmp40
444315    +          +     1.26041997788848 * AcceptedCmp50  +    -0.10972130900569 *
444316    +        Complain0  +    -0.99352598480407 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + -0.21003647134105 * AcceptedCmp10 + -0.08930317176477 
* AcceptedCmp20 + -0.39109673162041 * AcceptedCmp30 + 1.14094450038946 * AcceptedCmp40 + 
1.26041997788848 * AcceptedCmp50 + -0.10972130900569 * Complain0 + -0.99352598480407 * 
HigherEducationBinary0 ;
444317    +   H1x2_4  = H1x2_4  +     2.02630284432093 * AcceptedCmp10
444318    +          +    -2.50721904229276 * AcceptedCmp20  +    -1.31026450397446 *
444319    +        AcceptedCmp30  +    -0.83440880266914 * AcceptedCmp40
444320    +          +     -0.0570899805015 * AcceptedCmp50  +    -0.55525351434733 *
444321    +        Complain0  +     0.27306601694081 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 2.02630284432093 * AcceptedCmp10 + -2.50721904229276 * 
AcceptedCmp20 + -1.31026450397446 * AcceptedCmp30 + -0.83440880266914 * AcceptedCmp40 + 
-0.0570899805015 * AcceptedCmp50 + -0.55525351434733 * Complain0 + 0.27306601694081 * 
HigherEducationBinary0 ;
444322    +   H1x2_5  = H1x2_5  +    -0.18595284227194 * AcceptedCmp10
444323    +          +    -1.55973916517392 * AcceptedCmp20  +    -3.81563768970049 *
444324    +        AcceptedCmp30  +    -0.09331430915239 * AcceptedCmp40
444325    +          +     0.76128118177142 * AcceptedCmp50  +    -0.17283107047755 *
444326    +        Complain0  +    -1.01028562804392 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + -0.18595284227194 * AcceptedCmp10 + -1.55973916517392 
* AcceptedCmp20 + -3.81563768970049 * AcceptedCmp30 + -0.09331430915239 * AcceptedCmp40 + 
0.76128118177142 * AcceptedCmp50 + -0.17283107047755 * Complain0 + -1.01028562804392 * 
HigherEducationBinary0 ;
444327    +   H1x2_6  = H1x2_6  +    -1.21475169836565 * AcceptedCmp10
444328    +          +     0.28748729216575 * AcceptedCmp20  +     1.15908030413172 *
444329    +        AcceptedCmp30  +    -0.05889528676549 * AcceptedCmp40
444330    +          +    -0.41661363625562 * AcceptedCmp50  +    -0.77939130028952 *
444331    +        Complain0  +     2.19510865765326 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 + -1.21475169836565 * AcceptedCmp10 + 0.28748729216575 * 
AcceptedCmp20 + 1.15908030413172 * AcceptedCmp30 + -0.05889528676549 * AcceptedCmp40 + 
-0.41661363625562 * AcceptedCmp50 + -0.77939130028952 * Complain0 + 2.19510865765326 * 
HigherEducationBinary0 ;
444332    +   H1x2_7  = H1x2_7  +     0.87360423179644 * AcceptedCmp10
444333    +          +    -0.47867594186426 * AcceptedCmp20  +    -0.30325818223392 *
444334    +        AcceptedCmp30  +    -0.96085556588297 * AcceptedCmp40
444335    +          +    -0.19693158209969 * AcceptedCmp50  +    -0.73731792634553 *
444336    +        Complain0  +    -1.10021678806679 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_7 = H1x2_7 + 0.87360423179644 * AcceptedCmp10 + -0.47867594186426 * 
AcceptedCmp20 + -0.30325818223392 * AcceptedCmp30 + -0.96085556588297 * AcceptedCmp40 + 
-0.19693158209969 * AcceptedCmp50 + -0.73731792634553 * Complain0 + -1.10021678806679 * 
HigherEducationBinary0 ;
444337    +   H1x2_1  = H1x2_1  +    -1.17876013389516 * Education2n_Cycle
444338    +          +    -0.35670434275624 * EducationBasic  +    -0.12456502068616 *
444339    +        EducationGraduation  +     -1.0620373133508 * EducationMaster
444340    +          +    -3.97961426831865 * Marital_StatusDivorced
444341    +          +     0.00932639813867 * Marital_StatusMarried
444342    +          +     1.29310186574718 * Marital_StatusSingle
444343    +          +     1.60940802221114 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -1.17876013389516 * Education2n_Cycle + 
-0.35670434275624 * EducationBasic + -0.12456502068616 * EducationGraduation + 
-1.0620373133508 * EducationMaster + -3.97961426831865 * Marital_StatusDivorced + 
0.00932639813867 * Marital_StatusMarried + 1.29310186574718 * Marital_StatusSingle + 
1.60940802221114 * Marital_StatusTogether ;
444344    +   H1x2_2  = H1x2_2  +     0.58497813059595 * Education2n_Cycle
444345    +          +     0.98038586431321 * EducationBasic  +    -0.20442806724521 *
444346    +        EducationGraduation  +     0.64973046142001 * EducationMaster
444347    +          +    -0.30358516578188 * Marital_StatusDivorced
444348    +          +    -0.96176709360703 * Marital_StatusMarried
444349    +          +     1.26977690921649 * Marital_StatusSingle
444350    +          +     -0.6681544336237 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 0.58497813059595 * Education2n_Cycle + 
0.98038586431321 * EducationBasic + -0.20442806724521 * EducationGraduation + 0.64973046142001 
* EducationMaster + -0.30358516578188 * Marital_StatusDivorced + -0.96176709360703 * 
Marital_StatusMarried + 1.26977690921649 * Marital_StatusSingle + -0.6681544336237 * 
Marital_StatusTogether ;
444351    +   H1x2_3  = H1x2_3  +     0.42123479646947 * Education2n_Cycle
444352    +          +     0.22705854674045 * EducationBasic  +     0.34794003687348 *
444353    +        EducationGraduation  +     0.18356390207843 * EducationMaster
444354    +          +     0.55272671490757 * Marital_StatusDivorced
444355    +          +      0.1499239288334 * Marital_StatusMarried
444356    +          +    -0.46840941760604 * Marital_StatusSingle
444357    +          +     0.93706218273755 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 0.42123479646947 * Education2n_Cycle + 
0.22705854674045 * EducationBasic + 0.34794003687348 * EducationGraduation + 0.18356390207843 
* EducationMaster + 0.55272671490757 * Marital_StatusDivorced + 0.1499239288334 * 
Marital_StatusMarried + -0.46840941760604 * Marital_StatusSingle + 0.93706218273755 * 
Marital_StatusTogether ;
444358    +   H1x2_4  = H1x2_4  +     0.85035585831723 * Education2n_Cycle
444359    +          +    -0.70680576286167 * EducationBasic  +    -0.24487676912938 *
444360    +        EducationGraduation  +    -0.33030970028481 * EducationMaster
444361    +          +      -1.240735370138 * Marital_StatusDivorced
444362    +          +    -1.20089294883599 * Marital_StatusMarried
444363    +          +     0.57492674426149 * Marital_StatusSingle
444364    +          +     1.44189292990255 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 0.85035585831723 * Education2n_Cycle + 
-0.70680576286167 * EducationBasic + -0.24487676912938 * EducationGraduation + 
-0.33030970028481 * EducationMaster + -1.240735370138 * Marital_StatusDivorced + 
-1.20089294883599 * Marital_StatusMarried + 0.57492674426149 * Marital_StatusSingle + 
1.44189292990255 * Marital_StatusTogether ;
444365    +   H1x2_5  = H1x2_5  +    -0.62461434654579 * Education2n_Cycle
444366    +          +    -0.34090423965869 * EducationBasic  +    -0.82493401834396 *
444367    +        EducationGraduation  +    -1.09423426649553 * EducationMaster
444368    +          +     1.05435442049802 * Marital_StatusDivorced
444369    +          +      0.3571256349717 * Marital_StatusMarried
444370    +          +    -0.44741267266578 * Marital_StatusSingle
444371    +          +     0.02948931507994 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + -0.62461434654579 * Education2n_Cycle + 
-0.34090423965869 * EducationBasic + -0.82493401834396 * EducationGraduation + 
-1.09423426649553 * EducationMaster + 1.05435442049802 * Marital_StatusDivorced + 
0.3571256349717 * Marital_StatusMarried + -0.44741267266578 * Marital_StatusSingle + 
0.02948931507994 * Marital_StatusTogether ;
444372    +   H1x2_6  = H1x2_6  +     0.09620501635178 * Education2n_Cycle
444373    +          +    -0.54617424401993 * EducationBasic  +    -0.43305038404558 *
444374    +        EducationGraduation  +     0.05453229059502 * EducationMaster
444375    +          +     2.06026721980778 * Marital_StatusDivorced
444376    +          +    -0.49583258645166 * Marital_StatusMarried
444377    +          +    -1.14824900824474 * Marital_StatusSingle
444378    +          +     0.57690093967839 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 + 0.09620501635178 * Education2n_Cycle + 
-0.54617424401993 * EducationBasic + -0.43305038404558 * EducationGraduation + 
0.05453229059502 * EducationMaster + 2.06026721980778 * Marital_StatusDivorced + 
-0.49583258645166 * Marital_StatusMarried + -1.14824900824474 * Marital_StatusSingle + 
0.57690093967839 * Marital_StatusTogether ;
444379    +   H1x2_7  = H1x2_7  +    -0.31251046777442 * Education2n_Cycle
444380    +          +    -1.69272922870259 * EducationBasic  +    -0.08682253496961 *
444381    +        EducationGraduation  +     0.58241644186309 * EducationMaster
444382    +          +     -1.1890908607447 * Marital_StatusDivorced
444383    +          +    -0.46668809907123 * Marital_StatusMarried
444384    +          +     1.20342564763422 * Marital_StatusSingle
444385    +          +    -1.75740662969578 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_7 = H1x2_7 + -0.31251046777442 * Education2n_Cycle + 
-1.69272922870259 * EducationBasic + -0.08682253496961 * EducationGraduation + 
0.58241644186309 * EducationMaster + -1.1890908607447 * Marital_StatusDivorced + 
-0.46668809907123 * Marital_StatusMarried + 1.20342564763422 * Marital_StatusSingle + 
-1.75740662969578 * Marital_StatusTogether ;
444386    +   H1x2_1  =    -0.14973719401763 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -0.14973719401763 + H1x2_1 ;
444387    +   H1x2_2  =    -0.56259582407931 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -0.56259582407931 + H1x2_2 ;
444388    +   H1x2_3  =     0.42132483186492 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = 0.42132483186492 + H1x2_3 ;
444389    +   H1x2_4  =      1.1996209421335 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 1.1996209421335 + H1x2_4 ;
444390    +   H1x2_5  =     0.95827018478011 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 0.95827018478011 + H1x2_5 ;
444391    +   H1x2_6  =     1.88844492435344 + H1x2_6 ;
MPRINT(EM_DIAGRAM):   H1x2_6 = 1.88844492435344 + H1x2_6 ;
444392    +   H1x2_7  =     0.77184516675485 + H1x2_7 ;
MPRINT(EM_DIAGRAM):   H1x2_7 = 0.77184516675485 + H1x2_7 ;
444393    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
444394    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
444395    +   H1x2_1  = EXP(MIN(H1x2_1 , _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x2_1 = EXP(MIN(H1x2_1 , _EXP_BAR));
444396    +   H1x2_2  = EXP(MIN(H1x2_2 , _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x2_2 = EXP(MIN(H1x2_2 , _EXP_BAR));
444397    +   H1x2_3  = EXP(MIN(H1x2_3 , _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x2_3 = EXP(MIN(H1x2_3 , _EXP_BAR));
444398    +   H1x2_4  = EXP(MIN(H1x2_4 , _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x2_4 = EXP(MIN(H1x2_4 , _EXP_BAR));
444399    +   H1x2_5  = EXP(MIN(H1x2_5 , _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x2_5 = EXP(MIN(H1x2_5 , _EXP_BAR));
444400    +   H1x2_6  = EXP(MIN(H1x2_6 , _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x2_6 = EXP(MIN(H1x2_6 , _EXP_BAR));
444401    +   H1x2_7  = EXP(MIN(H1x2_7 , _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x2_7 = EXP(MIN(H1x2_7 , _EXP_BAR));
444402    +END;
MPRINT(EM_DIAGRAM):   END;
444403    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
444404    +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
444405    +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
444406    +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
444407    +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
444408    +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
444409    +   H1x2_6  = .;
MPRINT(EM_DIAGRAM):   H1x2_6 = .;
444410    +   H1x2_7  = .;
MPRINT(EM_DIAGRAM):   H1x2_7 = .;
444411    +END;
MPRINT(EM_DIAGRAM):   END;
444412    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
444413    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
444414    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
444415    +
444416    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
444417    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
444418    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
444419    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
444420    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
444421    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
444422    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
444423    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
444424    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
444425    +end;
MPRINT(EM_DIAGRAM):   end;
444426    +else do;
MPRINT(EM_DIAGRAM):   else do;
444427    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
444428    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
444429    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
444430    +   end;
MPRINT(EM_DIAGRAM):   end;
444431    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
444432    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
444433    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
444434    +   end;
MPRINT(EM_DIAGRAM):   end;
444435    +   else do;
MPRINT(EM_DIAGRAM):   else do;
444436    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
444437    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
444438    +   end;
MPRINT(EM_DIAGRAM):   end;
444439    +end;
MPRINT(EM_DIAGRAM):   end;
444440    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
444441    +   P_DepVar1  =     0.10431866610268 * H1x1_1  +    -0.48100701431081 * H1x1_2
444442    +          +      1.1561061025832 * H1x1_3  +    -1.23928879501664 * H1x1_4
444443    +          +     1.22057275321508 * H1x1_5  +     0.21972347471711 * H1x1_6
444444    +          +    -0.98998788335495 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.10431866610268 * H1x1_1 + -0.48100701431081 * H1x1_2 + 
1.1561061025832 * H1x1_3 + -1.23928879501664 * H1x1_4 + 1.22057275321508 * H1x1_5 + 
0.21972347471711 * H1x1_6 + -0.98998788335495 * H1x1_7 ;
444445    +   P_DepVar1  = P_DepVar1  + -4.9985478923183E-10 * H1x2_1
444446    +          +   2.7724573038604E-6 * H1x2_2  +  -3.3263781208921E-6 * H1x2_3
444447    +          +     1.90169432265E-8 * H1x2_4  +  -9.7460294571708E-9 * H1x2_5
444448    +          +  -2.0885179583168E-6 * H1x2_6  +    3.038660449943E-8 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 + -4.9985478923183E-10 * H1x2_1 + 
2.7724573038604E-6 * H1x2_2 + -3.3263781208921E-6 * H1x2_3 + 1.90169432265E-8 * H1x2_4 + 
-9.7460294571708E-9 * H1x2_5 + -2.0885179583168E-6 * H1x2_6 + 3.038660449943E-8 * H1x2_7 ;
444449    +   P_DepVar1  =    -2.34500119066237 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.34500119066237 + P_DepVar1 ;
444450    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
444451    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
444452    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
444453    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
444454    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
444455    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
444456    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
444457    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
444458    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
444459    +END;
MPRINT(EM_DIAGRAM):   END;
444460    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
444461    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
444462    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
444463    +END;
MPRINT(EM_DIAGRAM):   END;
444464    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
444465    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
444466    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
444467    +END;
MPRINT(EM_DIAGRAM):   END;
444468    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
444469    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
444470    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
444471    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
444472    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
444473    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
444474    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
444475    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
444476    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
444477    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
444478    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
444479    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
444480    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
444481    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
444482    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
444483    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
444484    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
444485    +END;
MPRINT(EM_DIAGRAM):   END;
444486    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
444487    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
444488    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
444489    +drop
444490    +H1x1_1
444491    +H1x1_2
444492    +H1x1_3
444493    +H1x1_4
444494    +H1x1_5
444495    +H1x1_6
444496    +H1x1_7
444497    +H1x2_1
444498    +H1x2_2
444499    +H1x2_3
444500    +H1x2_4
444501    +H1x2_5
444502    +H1x2_6
444503    +H1x2_7
444504    +;
MPRINT(EM_DIAGRAM):   drop H1x1_1 H1x1_2 H1x1_3 H1x1_4 H1x1_5 H1x1_6 H1x1_7 H1x2_1 H1x2_2 
H1x2_3 H1x2_4 H1x2_5 H1x2_6 H1x2_7 ;
444505    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
444506     run;

NOTE: DATA STEP view saved on file EMWS8.AUTONEURAL12_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.META_TRAIN.VIEW used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
      

MPRINT(EM_DIAGRAM):   quit;
444507     quit;
444508     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
444509     filename emflow
444509   ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural12\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural12\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * AutoNeural12: Scoring VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
444510     *------------------------------------------------------------*;
444511     * AutoNeural12: Scoring VALIDATE data;
444512     *------------------------------------------------------------*;
444513     data EMWS8.AutoNeural12_VALIDATE
444514     / view=EMWS8.AutoNeural12_VALIDATE
444515     ;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural12_VALIDATE / view=EMWS8.AutoNeural12_VALIDATE ;
444516     set EMWS8.Meta_VALIDATE
444517     ;
MPRINT(EM_DIAGRAM):   set EMWS8.Meta_VALIDATE ;
444518     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural12\EMFLOWSCORE.sas.
444519    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
444520    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
444521    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
444522    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
444523    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
444524    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
444525    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
444526    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
444527    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
444528    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
444529    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
444530    +LENGTH _WARN_ $4
444531    +      F_DepVar  $ 12
444532    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
444533    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
444534    +
444535    +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
444536    +
444537    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
444538    +
444539    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
444540    +
444541    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
444542    +
444543    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
444544    +
444545    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
444546    +
444547    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
444548    +
444549    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
444550    +
444551    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
444552    +
444553    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
444554    +
444555    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
444556    +
444557    +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
444558    +
444559    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
444560    +
444561    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
444562    +
444563    +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
444564    +
444565    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
444566    +
444567    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
444568    +
444569    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
444570    +
444571    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
444572    +
444573    +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
444574    +
444575    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
444576    +
444577    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
444578    +
444579    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
444580    +
444581    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
444582    +
444583    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
444584    +
444585    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
444586    +
444587    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
444588    +
444589    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
444590    +
444591    +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
444592    +
444593    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
444594    +
444595    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
444596    +
444597    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
444598    +
444599    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
444600    +
444601    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
444602    +
444603    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
444604    +
444605    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
444606    +
444607    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
444608    +
444609    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
444610    +
444611    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
444612    +
444613    +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
444614    +
444615    +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
444616    +
444617    +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
444618    +
444619    +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
444620    +
444621    +      label H1x1_7 = 'Hidden: H1x1_=7' ;
MPRINT(EM_DIAGRAM):   label H1x1_7 = 'Hidden: H1x1_=7' ;
444622    +
444623    +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
444624    +
444625    +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
444626    +
444627    +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
444628    +
444629    +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
444630    +
444631    +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
444632    +
444633    +      label H1x2_6 = 'Hidden: H1x2_=6' ;
MPRINT(EM_DIAGRAM):   label H1x2_6 = 'Hidden: H1x2_=6' ;
444634    +
444635    +      label H1x2_7 = 'Hidden: H1x2_=7' ;
MPRINT(EM_DIAGRAM):   label H1x2_7 = 'Hidden: H1x2_=7' ;
444636    +
444637    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
444638    +
444639    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
444640    +
444641    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
444642    +
444643    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
444644    +
444645    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
444646    +
444647    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
444648    +
444649    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
444650    +
444651    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
444652    +
444653    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
444654    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
444655    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
444656    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
444657    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
444658    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
444659    +end;
MPRINT(EM_DIAGRAM):   end;
444660    +else do;
MPRINT(EM_DIAGRAM):   else do;
444661    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
444662    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
444663    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
444664    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
444665    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
444666    +   end;
MPRINT(EM_DIAGRAM):   end;
444667    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
444668    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
444669    +   end;
MPRINT(EM_DIAGRAM):   end;
444670    +   else do;
MPRINT(EM_DIAGRAM):   else do;
444671    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
444672    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
444673    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
444674    +   end;
MPRINT(EM_DIAGRAM):   end;
444675    +end;
MPRINT(EM_DIAGRAM):   end;
444676    +
444677    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
444678    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
444679    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
444680    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
444681    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
444682    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
444683    +end;
MPRINT(EM_DIAGRAM):   end;
444684    +else do;
MPRINT(EM_DIAGRAM):   else do;
444685    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
444686    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
444687    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
444688    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
444689    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
444690    +   end;
MPRINT(EM_DIAGRAM):   end;
444691    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
444692    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
444693    +   end;
MPRINT(EM_DIAGRAM):   end;
444694    +   else do;
MPRINT(EM_DIAGRAM):   else do;
444695    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
444696    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
444697    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
444698    +   end;
MPRINT(EM_DIAGRAM):   end;
444699    +end;
MPRINT(EM_DIAGRAM):   end;
444700    +
444701    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
444702    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
444703    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
444704    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
444705    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
444706    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
444707    +end;
MPRINT(EM_DIAGRAM):   end;
444708    +else do;
MPRINT(EM_DIAGRAM):   else do;
444709    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
444710    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
444711    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
444712    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
444713    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
444714    +   end;
MPRINT(EM_DIAGRAM):   end;
444715    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
444716    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
444717    +   end;
MPRINT(EM_DIAGRAM):   end;
444718    +   else do;
MPRINT(EM_DIAGRAM):   else do;
444719    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
444720    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
444721    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
444722    +   end;
MPRINT(EM_DIAGRAM):   end;
444723    +end;
MPRINT(EM_DIAGRAM):   end;
444724    +
444725    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
444726    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
444727    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
444728    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
444729    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
444730    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
444731    +end;
MPRINT(EM_DIAGRAM):   end;
444732    +else do;
MPRINT(EM_DIAGRAM):   else do;
444733    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
444734    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
444735    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
444736    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
444737    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
444738    +   end;
MPRINT(EM_DIAGRAM):   end;
444739    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
444740    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
444741    +   end;
MPRINT(EM_DIAGRAM):   end;
444742    +   else do;
MPRINT(EM_DIAGRAM):   else do;
444743    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
444744    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
444745    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
444746    +   end;
MPRINT(EM_DIAGRAM):   end;
444747    +end;
MPRINT(EM_DIAGRAM):   end;
444748    +
444749    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
444750    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
444751    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
444752    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
444753    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
444754    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
444755    +end;
MPRINT(EM_DIAGRAM):   end;
444756    +else do;
MPRINT(EM_DIAGRAM):   else do;
444757    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
444758    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
444759    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
444760    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
444761    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
444762    +   end;
MPRINT(EM_DIAGRAM):   end;
444763    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
444764    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
444765    +   end;
MPRINT(EM_DIAGRAM):   end;
444766    +   else do;
MPRINT(EM_DIAGRAM):   else do;
444767    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
444768    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
444769    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
444770    +   end;
MPRINT(EM_DIAGRAM):   end;
444771    +end;
MPRINT(EM_DIAGRAM):   end;
444772    +
444773    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
444774    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
444775    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
444776    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
444777    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
444778    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
444779    +end;
MPRINT(EM_DIAGRAM):   end;
444780    +else do;
MPRINT(EM_DIAGRAM):   else do;
444781    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
444782    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
444783    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
444784    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
444785    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
444786    +   end;
MPRINT(EM_DIAGRAM):   end;
444787    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
444788    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
444789    +   end;
MPRINT(EM_DIAGRAM):   end;
444790    +   else do;
MPRINT(EM_DIAGRAM):   else do;
444791    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
444792    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
444793    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
444794    +   end;
MPRINT(EM_DIAGRAM):   end;
444795    +end;
MPRINT(EM_DIAGRAM):   end;
444796    +
444797    +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
444798    +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
444799    +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
444800    +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
444801    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
444802    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
444803    +end;
MPRINT(EM_DIAGRAM):   end;
444804    +else do;
MPRINT(EM_DIAGRAM):   else do;
444805    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
444806    +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
444807    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
444808    +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
444809    +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
444810    +   end;
MPRINT(EM_DIAGRAM):   end;
444811    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
444812    +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
444813    +   end;
MPRINT(EM_DIAGRAM):   end;
444814    +   else do;
MPRINT(EM_DIAGRAM):   else do;
444815    +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
444816    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
444817    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
444818    +   end;
MPRINT(EM_DIAGRAM):   end;
444819    +end;
MPRINT(EM_DIAGRAM):   end;
444820    +
444821    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
444822    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
444823    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
444824    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
444825    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
444826    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
444827    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
444828    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
444829    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
444830    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
444831    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
444832    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
444833    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
444834    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
444835    +end;
MPRINT(EM_DIAGRAM):   end;
444836    +else do;
MPRINT(EM_DIAGRAM):   else do;
444837    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
444838    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
444839    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
444840    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
444841    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
444842    +   end;
MPRINT(EM_DIAGRAM):   end;
444843    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
444844    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
444845    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
444846    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
444847    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
444848    +   end;
MPRINT(EM_DIAGRAM):   end;
444849    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
444850    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
444851    +   end;
MPRINT(EM_DIAGRAM):   end;
444852    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
444853    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
444854    +   end;
MPRINT(EM_DIAGRAM):   end;
444855    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
444856    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
444857    +   end;
MPRINT(EM_DIAGRAM):   end;
444858    +   else do;
MPRINT(EM_DIAGRAM):   else do;
444859    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
444860    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
444861    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
444862    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
444863    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
444864    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
444865    +   end;
MPRINT(EM_DIAGRAM):   end;
444866    +end;
MPRINT(EM_DIAGRAM):   end;
444867    +
444868    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
444869    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
444870    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
444871    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
444872    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
444873    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
444874    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
444875    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
444876    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
444877    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
444878    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
444879    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
444880    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
444881    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
444882    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
444883    +end;
MPRINT(EM_DIAGRAM):   end;
444884    +else do;
MPRINT(EM_DIAGRAM):   else do;
444885    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
444886    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
444887    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
444888    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
444889    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
444890    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
444891    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
444892    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
444893    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
444894    +         end;
MPRINT(EM_DIAGRAM):   end;
444895    +         else do;
MPRINT(EM_DIAGRAM):   else do;
444896    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
444897    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
444898    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
444899    +            end;
MPRINT(EM_DIAGRAM):   end;
444900    +         end;
MPRINT(EM_DIAGRAM):   end;
444901    +      end;
MPRINT(EM_DIAGRAM):   end;
444902    +      else do;
MPRINT(EM_DIAGRAM):   else do;
444903    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
444904    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
444905    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
444906    +         end;
MPRINT(EM_DIAGRAM):   end;
444907    +      end;
MPRINT(EM_DIAGRAM):   end;
444908    +   end;
MPRINT(EM_DIAGRAM):   end;
444909    +   else do;
MPRINT(EM_DIAGRAM):   else do;
444910    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
444911    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
444912    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
444913    +      end;
MPRINT(EM_DIAGRAM):   end;
444914    +      else do;
MPRINT(EM_DIAGRAM):   else do;
444915    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
444916    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
444917    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
444918    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
444919    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
444920    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
444921    +         end;
MPRINT(EM_DIAGRAM):   end;
444922    +      end;
MPRINT(EM_DIAGRAM):   end;
444923    +   end;
MPRINT(EM_DIAGRAM):   end;
444924    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
444925    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
444926    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
444927    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
444928    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
444929    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
444930    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
444931    +   end;
MPRINT(EM_DIAGRAM):   end;
444932    +end;
MPRINT(EM_DIAGRAM):   end;
444933    +
444934    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
444935    +*** Checking missing input Interval
444936    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
444937    +
444938    +IF NMISS(
444939    +   AcceptedCmpTotal ,
444940    +   Age ,
444941    +   Frq ,
444942    +   Income ,
444943    +   Kidhome ,
444944    +   Mnt ,
444945    +   MntFishProducts ,
444946    +   MntFruits ,
444947    +   MntGoldProds ,
444948    +   MntMeatProducts ,
444949    +   MntSweetProducts ,
444950    +   MntWines ,
444951    +   MonthsAsCustomer ,
444952    +   NumCatalogPurchases ,
444953    +   NumDealsPurchases ,
444954    +   NumDistPurchases ,
444955    +   NumStorePurchases ,
444956    +   NumWebPurchases ,
444957    +   NumWebVisitsMonth ,
444958    +   RFMstat ,
444959    +   RMntFrq ,
444960    +   Recency ,
444961    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
444962    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
444963    +
444964    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
444965    +END;
MPRINT(EM_DIAGRAM):   END;
444966    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
444967    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
444968    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
444969    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
444970    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
444971    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
444972    +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
444973    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
444974    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
444975    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
444976    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
444977    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
444978    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
444979    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
444980    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
444981    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
444982    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
444983    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
444984    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
444985    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
444986    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
444987    +   S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
444988    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 * 
MonthsAsCustomer ;
444989    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
444990    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
444991    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
444992    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
444993    +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
444994    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
444995    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
444996    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
444997    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
444998    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
444999    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
445000    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
445001    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
445002    +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
445003    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
445004    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
445005    +END;
MPRINT(EM_DIAGRAM):   END;
445006    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
445007    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
445008    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
445009    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
445010    +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
445011    +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
445012    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
445013    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
445014    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
445015    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
445016    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
445017    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
445018    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
445019    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
445020    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
445021    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
445022    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
445023    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
445024    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
445025    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
445026    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
445027    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
445028    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
445029    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
445030    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
445031    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
445032    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
445033    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
445034    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
445035    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
445036    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
445037    +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
445038    +   ELSE S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
445039    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 * 
MonthsAsCustomer ;
445040    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
445041    +   ELSE S_NumCatalogPurchases
445042    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
445043    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
445044    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
445045    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
445046    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
445047    +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
445048    +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
445049    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
445050    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
445051    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
445052    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
445053    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
445054    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
445055    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
445056    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
445057    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
445058    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
445059    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
445060    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
445061    +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
445062    +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
445063    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
445064    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
445065    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
445066    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
445067    +END;
MPRINT(EM_DIAGRAM):   END;
445068    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
445069    +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
445070    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
445071    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
445072    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
445073    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
445074    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
445075    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
445076    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
445077    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
445078    +   H1x1_1  =    -0.08478534961354 * S_AcceptedCmpTotal
445079    +          +     0.21528166003219 * S_Age  +    -0.16079737422774 * S_Frq
445080    +          +     0.04922044955183 * S_Income  +     0.06245849112135 *
445081    +        S_Kidhome  +    -0.12820970008154 * S_Mnt  +    -0.00676959308959 *
445082    +        S_MntFishProducts  +    -0.20367403957375 * S_MntFruits
445083    +          +    -0.06459558558968 * S_MntGoldProds  +     0.01557669100416 *
445084    +        S_MntMeatProducts  +    -0.16342003924117 * S_MntSweetProducts
445085    +          +     0.34676276369853 * S_MntWines  +    -0.08454570225616 *
445086    +        S_MonthsAsCustomer  +    -0.00318885387905 * S_NumCatalogPurchases
445087    +          +      0.1112677116841 * S_NumDealsPurchases
445088    +          +     0.01563584187072 * S_NumDistPurchases
445089    +          +     0.19193969522995 * S_NumStorePurchases
445090    +          +      0.3133556199984 * S_NumWebPurchases
445091    +          +    -0.21884874785716 * S_NumWebVisitsMonth
445092    +          +     0.08478875792216 * S_RFMstat  +     0.05964414665285 *
445093    +        S_RMntFrq  +    -0.12595000497726 * S_Recency
445094    +          +     -0.1238719414537 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.08478534961354 * S_AcceptedCmpTotal + 0.21528166003219 * 
S_Age + -0.16079737422774 * S_Frq + 0.04922044955183 * S_Income + 0.06245849112135 * S_Kidhome 
+ -0.12820970008154 * S_Mnt + -0.00676959308959 * S_MntFishProducts + -0.20367403957375 * 
S_MntFruits + -0.06459558558968 * S_MntGoldProds + 0.01557669100416 * S_MntMeatProducts + 
-0.16342003924117 * S_MntSweetProducts + 0.34676276369853 * S_MntWines + -0.08454570225616 * 
S_MonthsAsCustomer + -0.00318885387905 * S_NumCatalogPurchases + 0.1112677116841 * 
S_NumDealsPurchases + 0.01563584187072 * S_NumDistPurchases + 0.19193969522995 * 
S_NumStorePurchases + 0.3133556199984 * S_NumWebPurchases + -0.21884874785716 * 
S_NumWebVisitsMonth + 0.08478875792216 * S_RFMstat + 0.05964414665285 * S_RMntFrq + 
-0.12595000497726 * S_Recency + -0.1238719414537 * S_Teenhome ;
445095    +   H1x1_2  =     0.20807487357943 * S_AcceptedCmpTotal
445096    +          +    -0.27223051908987 * S_Age  +     0.28649391533674 * S_Frq
445097    +          +     0.46493719675068 * S_Income  +     0.10180542910079 *
445098    +        S_Kidhome  +    -0.19573056673819 * S_Mnt  +    -0.05332725327514 *
445099    +        S_MntFishProducts  +    -0.28610692329433 * S_MntFruits
445100    +          +    -0.13417237194849 * S_MntGoldProds  +     0.45697707494335 *
445101    +        S_MntMeatProducts  +    -0.28280545785477 * S_MntSweetProducts
445102    +          +    -0.13234920069688 * S_MntWines  +     -0.2710938018651 *
445103    +        S_MonthsAsCustomer  +     0.31174284041905 * S_NumCatalogPurchases
445104    +          +     0.30225032753275 * S_NumDealsPurchases
445105    +          +     0.33833359923595 * S_NumDistPurchases
445106    +          +    -0.20255599575849 * S_NumStorePurchases
445107    +          +    -0.12040071168942 * S_NumWebPurchases
445108    +          +    -0.12407090307061 * S_NumWebVisitsMonth
445109    +          +    -0.05688936259515 * S_RFMstat  +     0.15514736649245 *
445110    +        S_RMntFrq  +     0.00838555462657 * S_Recency
445111    +          +     0.04609426861136 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.20807487357943 * S_AcceptedCmpTotal + -0.27223051908987 * 
S_Age + 0.28649391533674 * S_Frq + 0.46493719675068 * S_Income + 0.10180542910079 * S_Kidhome 
+ -0.19573056673819 * S_Mnt + -0.05332725327514 * S_MntFishProducts + -0.28610692329433 * 
S_MntFruits + -0.13417237194849 * S_MntGoldProds + 0.45697707494335 * S_MntMeatProducts + 
-0.28280545785477 * S_MntSweetProducts + -0.13234920069688 * S_MntWines + -0.2710938018651 * 
S_MonthsAsCustomer + 0.31174284041905 * S_NumCatalogPurchases + 0.30225032753275 * 
S_NumDealsPurchases + 0.33833359923595 * S_NumDistPurchases + -0.20255599575849 * 
S_NumStorePurchases + -0.12040071168942 * S_NumWebPurchases + -0.12407090307061 * 
S_NumWebVisitsMonth + -0.05688936259515 * S_RFMstat + 0.15514736649245 * S_RMntFrq + 
0.00838555462657 * S_Recency + 0.04609426861136 * S_Teenhome ;
445112    +   H1x1_3  =    -0.30541463116928 * S_AcceptedCmpTotal
445113    +          +    -0.01746117216025 * S_Age  +    -0.44156473334329 * S_Frq
445114    +          +    -0.51952426304193 * S_Income  +     0.20419921255777 *
445115    +        S_Kidhome  +    -0.18174316707953 * S_Mnt  +    -0.03813675536406 *
445116    +        S_MntFishProducts  +     -0.0959023413712 * S_MntFruits
445117    +          +     0.12724081783278 * S_MntGoldProds  +    -0.07639148541426 *
445118    +        S_MntMeatProducts  +     -0.0797214413833 * S_MntSweetProducts
445119    +          +    -0.57705931875808 * S_MntWines  +    -0.12638551201991 *
445120    +        S_MonthsAsCustomer  +    -0.21854676704549 * S_NumCatalogPurchases
445121    +          +     0.16792903091627 * S_NumDealsPurchases
445122    +          +    -0.37408945626745 * S_NumDistPurchases
445123    +          +    -0.18067262995566 * S_NumStorePurchases
445124    +          +     0.21192146789881 * S_NumWebPurchases
445125    +          +    -0.23547702310669 * S_NumWebVisitsMonth
445126    +          +    -0.02272089758813 * S_RFMstat  +    -0.16409330281075 *
445127    +        S_RMntFrq  +     0.45021846112946 * S_Recency
445128    +          +     0.32988735727394 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.30541463116928 * S_AcceptedCmpTotal + -0.01746117216025 * 
S_Age + -0.44156473334329 * S_Frq + -0.51952426304193 * S_Income + 0.20419921255777 * 
S_Kidhome + -0.18174316707953 * S_Mnt + -0.03813675536406 * S_MntFishProducts + 
-0.0959023413712 * S_MntFruits + 0.12724081783278 * S_MntGoldProds + -0.07639148541426 * 
S_MntMeatProducts + -0.0797214413833 * S_MntSweetProducts + -0.57705931875808 * S_MntWines + 
-0.12638551201991 * S_MonthsAsCustomer + -0.21854676704549 * S_NumCatalogPurchases + 
0.16792903091627 * S_NumDealsPurchases + -0.37408945626745 * S_NumDistPurchases + 
-0.18067262995566 * S_NumStorePurchases + 0.21192146789881 * S_NumWebPurchases + 
-0.23547702310669 * S_NumWebVisitsMonth + -0.02272089758813 * S_RFMstat + -0.16409330281075 * 
S_RMntFrq + 0.45021846112946 * S_Recency + 0.32988735727394 * S_Teenhome ;
445129    +   H1x1_4  =     0.05205198916717 * S_AcceptedCmpTotal
445130    +          +     0.25568653619739 * S_Age  +    -0.31037252146959 * S_Frq
445131    +          +     0.42636025358982 * S_Income  +    -0.24453708980866 *
445132    +        S_Kidhome  +    -0.07832530945892 * S_Mnt  +    -0.48332124476182 *
445133    +        S_MntFishProducts  +    -0.13932879119138 * S_MntFruits
445134    +          +      0.1984121566988 * S_MntGoldProds  +     1.14965897015972 *
445135    +        S_MntMeatProducts  +     0.07027485457428 * S_MntSweetProducts
445136    +          +    -0.56598097754046 * S_MntWines  +     0.07317190938075 *
445137    +        S_MonthsAsCustomer  +       0.075756987983 * S_NumCatalogPurchases
445138    +          +     0.29407429399136 * S_NumDealsPurchases
445139    +          +     0.01610745252195 * S_NumDistPurchases
445140    +          +    -0.17767939085628 * S_NumStorePurchases
445141    +          +    -0.15168958538637 * S_NumWebPurchases
445142    +          +     0.17433622143988 * S_NumWebVisitsMonth
445143    +          +     0.11635602973993 * S_RFMstat  +     0.32632751843433 *
445144    +        S_RMntFrq  +    -0.24758483374458 * S_Recency
445145    +          +    -0.31468291567479 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.05205198916717 * S_AcceptedCmpTotal + 0.25568653619739 * 
S_Age + -0.31037252146959 * S_Frq + 0.42636025358982 * S_Income + -0.24453708980866 * 
S_Kidhome + -0.07832530945892 * S_Mnt + -0.48332124476182 * S_MntFishProducts + 
-0.13932879119138 * S_MntFruits + 0.1984121566988 * S_MntGoldProds + 1.14965897015972 * 
S_MntMeatProducts + 0.07027485457428 * S_MntSweetProducts + -0.56598097754046 * S_MntWines + 
0.07317190938075 * S_MonthsAsCustomer + 0.075756987983 * S_NumCatalogPurchases + 
0.29407429399136 * S_NumDealsPurchases + 0.01610745252195 * S_NumDistPurchases + 
-0.17767939085628 * S_NumStorePurchases + -0.15168958538637 * S_NumWebPurchases + 
0.17433622143988 * S_NumWebVisitsMonth + 0.11635602973993 * S_RFMstat + 0.32632751843433 * 
S_RMntFrq + -0.24758483374458 * S_Recency + -0.31468291567479 * S_Teenhome ;
445146    +   H1x1_5  =    -0.59657492903543 * S_AcceptedCmpTotal
445147    +          +     0.23513672763458 * S_Age  +    -0.14882104210954 * S_Frq
445148    +          +    -0.07762660201035 * S_Income  +     0.01424651904783 *
445149    +        S_Kidhome  +     0.18748607813081 * S_Mnt  +     0.11088464897095 *
445150    +        S_MntFishProducts  +    -0.10064450211557 * S_MntFruits
445151    +          +     0.11161391354421 * S_MntGoldProds  +    -1.36345407290644 *
445152    +        S_MntMeatProducts  +     0.04868729717044 * S_MntSweetProducts
445153    +          +     0.80284342329654 * S_MntWines  +     -0.0179539622492 *
445154    +        S_MonthsAsCustomer  +    -0.60051908798715 * S_NumCatalogPurchases
445155    +          +    -0.37976451362108 * S_NumDealsPurchases
445156    +          +    -0.17027731520801 * S_NumDistPurchases
445157    +          +     0.59849493667087 * S_NumStorePurchases
445158    +          +     0.65481480560301 * S_NumWebPurchases
445159    +          +    -0.68253224576609 * S_NumWebVisitsMonth
445160    +          +    -0.16723490165629 * S_RFMstat  +    -0.10533797887644 *
445161    +        S_RMntFrq  +     0.81382723915873 * S_Recency
445162    +          +     0.06049401205856 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -0.59657492903543 * S_AcceptedCmpTotal + 0.23513672763458 * 
S_Age + -0.14882104210954 * S_Frq + -0.07762660201035 * S_Income + 0.01424651904783 * 
S_Kidhome + 0.18748607813081 * S_Mnt + 0.11088464897095 * S_MntFishProducts + 
-0.10064450211557 * S_MntFruits + 0.11161391354421 * S_MntGoldProds + -1.36345407290644 * 
S_MntMeatProducts + 0.04868729717044 * S_MntSweetProducts + 0.80284342329654 * S_MntWines + 
-0.0179539622492 * S_MonthsAsCustomer + -0.60051908798715 * S_NumCatalogPurchases + 
-0.37976451362108 * S_NumDealsPurchases + -0.17027731520801 * S_NumDistPurchases + 
0.59849493667087 * S_NumStorePurchases + 0.65481480560301 * S_NumWebPurchases + 
-0.68253224576609 * S_NumWebVisitsMonth + -0.16723490165629 * S_RFMstat + -0.10533797887644 * 
S_RMntFrq + 0.81382723915873 * S_Recency + 0.06049401205856 * S_Teenhome ;
445163    +   H1x1_6  =    -0.07547841798202 * S_AcceptedCmpTotal
445164    +          +     0.22445278254589 * S_Age  +    -0.26357481075143 * S_Frq
445165    +          +     0.06894154144261 * S_Income  +     0.20713236126681 *
445166    +        S_Kidhome  +    -0.14103612934526 * S_Mnt  +     0.36334508557452 *
445167    +        S_MntFishProducts  +    -0.20862425337296 * S_MntFruits
445168    +          +    -0.29089690099273 * S_MntGoldProds  +     0.11336893090527 *
445169    +        S_MntMeatProducts  +    -0.13547374281924 * S_MntSweetProducts
445170    +          +     0.02228828195539 * S_MntWines  +    -0.19257650420334 *
445171    +        S_MonthsAsCustomer  +      0.1365526319824 * S_NumCatalogPurchases
445172    +          +    -0.07686699131623 * S_NumDealsPurchases
445173    +          +    -0.07220460738926 * S_NumDistPurchases
445174    +          +    -0.06554027468389 * S_NumStorePurchases
445175    +          +     0.10422838158001 * S_NumWebPurchases
445176    +          +    -0.03858550147892 * S_NumWebVisitsMonth
445177    +          +    -0.06397448441373 * S_RFMstat  +     0.21747838287147 *
445178    +        S_RMntFrq  +     0.24839313159913 * S_Recency
445179    +          +    -0.06317317698653 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_6 = -0.07547841798202 * S_AcceptedCmpTotal + 0.22445278254589 * 
S_Age + -0.26357481075143 * S_Frq + 0.06894154144261 * S_Income + 0.20713236126681 * S_Kidhome 
+ -0.14103612934526 * S_Mnt + 0.36334508557452 * S_MntFishProducts + -0.20862425337296 * 
S_MntFruits + -0.29089690099273 * S_MntGoldProds + 0.11336893090527 * S_MntMeatProducts + 
-0.13547374281924 * S_MntSweetProducts + 0.02228828195539 * S_MntWines + -0.19257650420334 * 
S_MonthsAsCustomer + 0.1365526319824 * S_NumCatalogPurchases + -0.07686699131623 * 
S_NumDealsPurchases + -0.07220460738926 * S_NumDistPurchases + -0.06554027468389 * 
S_NumStorePurchases + 0.10422838158001 * S_NumWebPurchases + -0.03858550147892 * 
S_NumWebVisitsMonth + -0.06397448441373 * S_RFMstat + 0.21747838287147 * S_RMntFrq + 
0.24839313159913 * S_Recency + -0.06317317698653 * S_Teenhome ;
445180    +   H1x1_7  =    -0.08604903695444 * S_AcceptedCmpTotal
445181    +          +    -0.14807437541992 * S_Age  +     0.01466157584549 * S_Frq
445182    +          +    -0.09883966180507 * S_Income  +     0.51992566778352 *
445183    +        S_Kidhome  +     0.29795006703636 * S_Mnt  +    -0.08922020500011 *
445184    +        S_MntFishProducts  +     0.19836834402079 * S_MntFruits
445185    +          +    -0.11292241468378 * S_MntGoldProds  +       0.584464452194 *
445186    +        S_MntMeatProducts  +     0.22625326024073 * S_MntSweetProducts
445187    +          +     0.24074129944382 * S_MntWines  +     0.13538906557527 *
445188    +        S_MonthsAsCustomer  +    -0.01228250248922 * S_NumCatalogPurchases
445189    +          +    -0.07920122387563 * S_NumDealsPurchases
445190    +          +      0.3649244061347 * S_NumDistPurchases
445191    +          +     0.36475853688403 * S_NumStorePurchases
445192    +          +     0.02153991404063 * S_NumWebPurchases
445193    +          +    -0.94080669139388 * S_NumWebVisitsMonth
445194    +          +     0.24853677977494 * S_RFMstat  +     0.37015183933951 *
445195    +        S_RMntFrq  +      0.6724157721663 * S_Recency
445196    +          +      0.1615471643866 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_7 = -0.08604903695444 * S_AcceptedCmpTotal + -0.14807437541992 * 
S_Age + 0.01466157584549 * S_Frq + -0.09883966180507 * S_Income + 0.51992566778352 * S_Kidhome 
+ 0.29795006703636 * S_Mnt + -0.08922020500011 * S_MntFishProducts + 0.19836834402079 * 
S_MntFruits + -0.11292241468378 * S_MntGoldProds + 0.584464452194 * S_MntMeatProducts + 
0.22625326024073 * S_MntSweetProducts + 0.24074129944382 * S_MntWines + 0.13538906557527 * 
S_MonthsAsCustomer + -0.01228250248922 * S_NumCatalogPurchases + -0.07920122387563 * 
S_NumDealsPurchases + 0.3649244061347 * S_NumDistPurchases + 0.36475853688403 * 
S_NumStorePurchases + 0.02153991404063 * S_NumWebPurchases + -0.94080669139388 * 
S_NumWebVisitsMonth + 0.24853677977494 * S_RFMstat + 0.37015183933951 * S_RMntFrq + 
0.6724157721663 * S_Recency + 0.1615471643866 * S_Teenhome ;
445197    +   H1x1_1  = H1x1_1  +     0.04431608362128 * AcceptedCmp10
445198    +          +       0.145592087795 * AcceptedCmp20  +    -0.18972867139938 *
445199    +        AcceptedCmp30  +     0.11297731320888 * AcceptedCmp40
445200    +          +     0.15203974410995 * AcceptedCmp50  +     0.05130421316428 *
445201    +        Complain0  +     0.33576036450343 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.04431608362128 * AcceptedCmp10 + 0.145592087795 * 
AcceptedCmp20 + -0.18972867139938 * AcceptedCmp30 + 0.11297731320888 * AcceptedCmp40 + 
0.15203974410995 * AcceptedCmp50 + 0.05130421316428 * Complain0 + 0.33576036450343 * 
HigherEducationBinary0 ;
445202    +   H1x1_2  = H1x1_2  +    -0.05495742609855 * AcceptedCmp10
445203    +          +    -0.08873650760176 * AcceptedCmp20  +    -0.16380549867313 *
445204    +        AcceptedCmp30  +    -0.24495261884932 * AcceptedCmp40
445205    +          +    -0.22199506896148 * AcceptedCmp50  +       0.149484615172 *
445206    +        Complain0  +     0.01091791142552 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.05495742609855 * AcceptedCmp10 + -0.08873650760176 
* AcceptedCmp20 + -0.16380549867313 * AcceptedCmp30 + -0.24495261884932 * AcceptedCmp40 + 
-0.22199506896148 * AcceptedCmp50 + 0.149484615172 * Complain0 + 0.01091791142552 * 
HigherEducationBinary0 ;
445207    +   H1x1_3  = H1x1_3  +     0.03473702421341 * AcceptedCmp10
445208    +          +    -0.11226718065217 * AcceptedCmp20  +     0.19024579384296 *
445209    +        AcceptedCmp30  +     0.15478548865598 * AcceptedCmp40
445210    +          +     0.15222823671897 * AcceptedCmp50  +     0.07713012834947 *
445211    +        Complain0  +    -0.18741708707661 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.03473702421341 * AcceptedCmp10 + -0.11226718065217 * 
AcceptedCmp20 + 0.19024579384296 * AcceptedCmp30 + 0.15478548865598 * AcceptedCmp40 + 
0.15222823671897 * AcceptedCmp50 + 0.07713012834947 * Complain0 + -0.18741708707661 * 
HigherEducationBinary0 ;
445212    +   H1x1_4  = H1x1_4  +    -0.25622127302429 * AcceptedCmp10
445213    +          +    -0.39059103518073 * AcceptedCmp20  +    -0.29716603631807 *
445214    +        AcceptedCmp30  +    -0.20875694971526 * AcceptedCmp40
445215    +          +    -0.35128787139073 * AcceptedCmp50  +    -0.28848733462386 *
445216    +        Complain0  +      0.4276503747649 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.25622127302429 * AcceptedCmp10 + -0.39059103518073 
* AcceptedCmp20 + -0.29716603631807 * AcceptedCmp30 + -0.20875694971526 * AcceptedCmp40 + 
-0.35128787139073 * AcceptedCmp50 + -0.28848733462386 * Complain0 + 0.4276503747649 * 
HigherEducationBinary0 ;
445217    +   H1x1_5  = H1x1_5  +    -0.06574875851088 * AcceptedCmp10
445218    +          +    -0.27375195259265 * AcceptedCmp20  +     -0.2740681662293 *
445219    +        AcceptedCmp30  +    -0.14697156898736 * AcceptedCmp40
445220    +          +     0.17684649468835 * AcceptedCmp50  +    -0.09979172944646 *
445221    +        Complain0  +     0.38986664202197 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.06574875851088 * AcceptedCmp10 + -0.27375195259265 
* AcceptedCmp20 + -0.2740681662293 * AcceptedCmp30 + -0.14697156898736 * AcceptedCmp40 + 
0.17684649468835 * AcceptedCmp50 + -0.09979172944646 * Complain0 + 0.38986664202197 * 
HigherEducationBinary0 ;
445222    +   H1x1_6  = H1x1_6  +     0.08696678529441 * AcceptedCmp10
445223    +          +     0.09467543942215 * AcceptedCmp20  +     0.04586779705477 *
445224    +        AcceptedCmp30  +    -0.12591921836379 * AcceptedCmp40
445225    +          +     0.20150138392895 * AcceptedCmp50  +     0.27764282700214 *
445226    +        Complain0  +     0.13985738522066 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + 0.08696678529441 * AcceptedCmp10 + 0.09467543942215 * 
AcceptedCmp20 + 0.04586779705477 * AcceptedCmp30 + -0.12591921836379 * AcceptedCmp40 + 
0.20150138392895 * AcceptedCmp50 + 0.27764282700214 * Complain0 + 0.13985738522066 * 
HigherEducationBinary0 ;
445227    +   H1x1_7  = H1x1_7  +    -0.10455069401218 * AcceptedCmp10
445228    +          +      0.1311831941372 * AcceptedCmp20  +     0.17844209104604 *
445229    +        AcceptedCmp30  +     0.19406707592815 * AcceptedCmp40
445230    +          +    -0.00068155012319 * AcceptedCmp50  +     0.13245364846536 *
445231    +        Complain0  +    -0.05165256160872 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_7 = H1x1_7 + -0.10455069401218 * AcceptedCmp10 + 0.1311831941372 * 
AcceptedCmp20 + 0.17844209104604 * AcceptedCmp30 + 0.19406707592815 * AcceptedCmp40 + 
-0.00068155012319 * AcceptedCmp50 + 0.13245364846536 * Complain0 + -0.05165256160872 * 
HigherEducationBinary0 ;
445232    +   H1x1_1  = H1x1_1  +     0.28967939808759 * Education2n_Cycle
445233    +          +    -0.15795056374781 * EducationBasic  +    -0.00649803471307 *
445234    +        EducationGraduation  +     0.19520715924532 * EducationMaster
445235    +          +     0.07744097241553 * Marital_StatusDivorced
445236    +          +     -0.0247463100385 * Marital_StatusMarried
445237    +          +     0.05804915234573 * Marital_StatusSingle
445238    +          +    -0.08320125047871 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.28967939808759 * Education2n_Cycle + 
-0.15795056374781 * EducationBasic + -0.00649803471307 * EducationGraduation + 
0.19520715924532 * EducationMaster + 0.07744097241553 * Marital_StatusDivorced + 
-0.0247463100385 * Marital_StatusMarried + 0.05804915234573 * Marital_StatusSingle + 
-0.08320125047871 * Marital_StatusTogether ;
445239    +   H1x1_2  = H1x1_2  +     0.12524444422085 * Education2n_Cycle
445240    +          +    -0.30278286924729 * EducationBasic  +     0.37480827366421 *
445241    +        EducationGraduation  +     0.34209136290694 * EducationMaster
445242    +          +     0.01390668926269 * Marital_StatusDivorced
445243    +          +     0.01136282152074 * Marital_StatusMarried
445244    +          +     0.12450246418789 * Marital_StatusSingle
445245    +          +     -0.1576148519872 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.12524444422085 * Education2n_Cycle + 
-0.30278286924729 * EducationBasic + 0.37480827366421 * EducationGraduation + 0.34209136290694 
* EducationMaster + 0.01390668926269 * Marital_StatusDivorced + 0.01136282152074 * 
Marital_StatusMarried + 0.12450246418789 * Marital_StatusSingle + -0.1576148519872 * 
Marital_StatusTogether ;
445246    +   H1x1_3  = H1x1_3  +    -0.14589041643593 * Education2n_Cycle
445247    +          +    -0.15691118816463 * EducationBasic  +      0.1993616073183 *
445248    +        EducationGraduation  +     0.02862010255145 * EducationMaster
445249    +          +    -0.19133456931879 * Marital_StatusDivorced
445250    +          +     0.56263566654996 * Marital_StatusMarried
445251    +          +    -0.42172822038882 * Marital_StatusSingle
445252    +          +     0.42023140643292 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.14589041643593 * Education2n_Cycle + 
-0.15691118816463 * EducationBasic + 0.1993616073183 * EducationGraduation + 0.02862010255145 
* EducationMaster + -0.19133456931879 * Marital_StatusDivorced + 0.56263566654996 * 
Marital_StatusMarried + -0.42172822038882 * Marital_StatusSingle + 0.42023140643292 * 
Marital_StatusTogether ;
445253    +   H1x1_4  = H1x1_4  +     0.10038585978656 * Education2n_Cycle
445254    +          +    -0.11388609002984 * EducationBasic  +    -0.14980553500983 *
445255    +        EducationGraduation  +    -0.07646595330369 * EducationMaster
445256    +          +    -0.19871205065609 * Marital_StatusDivorced
445257    +          +    -0.14730795681603 * Marital_StatusMarried
445258    +          +     0.05055432510362 * Marital_StatusSingle
445259    +          +     0.06558965292395 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + 0.10038585978656 * Education2n_Cycle + 
-0.11388609002984 * EducationBasic + -0.14980553500983 * EducationGraduation + 
-0.07646595330369 * EducationMaster + -0.19871205065609 * Marital_StatusDivorced + 
-0.14730795681603 * Marital_StatusMarried + 0.05055432510362 * Marital_StatusSingle + 
0.06558965292395 * Marital_StatusTogether ;
445260    +   H1x1_5  = H1x1_5  +      0.0015835307855 * Education2n_Cycle
445261    +          +    -0.22658746797638 * EducationBasic  +    -0.03445982386977 *
445262    +        EducationGraduation  +     0.11375378192685 * EducationMaster
445263    +          +    -0.35623807358995 * Marital_StatusDivorced
445264    +          +     0.30324726283965 * Marital_StatusMarried
445265    +          +    -0.18561093467927 * Marital_StatusSingle
445266    +          +       0.395424582152 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + 0.0015835307855 * Education2n_Cycle + 
-0.22658746797638 * EducationBasic + -0.03445982386977 * EducationGraduation + 
0.11375378192685 * EducationMaster + -0.35623807358995 * Marital_StatusDivorced + 
0.30324726283965 * Marital_StatusMarried + -0.18561093467927 * Marital_StatusSingle + 
0.395424582152 * Marital_StatusTogether ;
445267    +   H1x1_6  = H1x1_6  +    -0.23751822587858 * Education2n_Cycle
445268    +          +    -0.01687300040825 * EducationBasic  +     0.23236967703011 *
445269    +        EducationGraduation  +      0.0725289831541 * EducationMaster
445270    +          +     0.11581014663368 * Marital_StatusDivorced
445271    +          +    -0.31070638037659 * Marital_StatusMarried
445272    +          +     0.17131747253949 * Marital_StatusSingle
445273    +          +    -0.19314955966476 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + -0.23751822587858 * Education2n_Cycle + 
-0.01687300040825 * EducationBasic + 0.23236967703011 * EducationGraduation + 0.0725289831541 
* EducationMaster + 0.11581014663368 * Marital_StatusDivorced + -0.31070638037659 * 
Marital_StatusMarried + 0.17131747253949 * Marital_StatusSingle + -0.19314955966476 * 
Marital_StatusTogether ;
445274    +   H1x1_7  = H1x1_7  +     0.00103693282479 * Education2n_Cycle
445275    +          +     0.12608909598752 * EducationBasic  +     -0.2366673091666 *
445276    +        EducationGraduation  +     0.24413217290922 * EducationMaster
445277    +          +    -0.42450599871892 * Marital_StatusDivorced
445278    +          +     0.48162905075885 * Marital_StatusMarried
445279    +          +    -0.26618507749283 * Marital_StatusSingle
445280    +          +     0.38053668740338 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_7 = H1x1_7 + 0.00103693282479 * Education2n_Cycle + 
0.12608909598752 * EducationBasic + -0.2366673091666 * EducationGraduation + 0.24413217290922 
* EducationMaster + -0.42450599871892 * Marital_StatusDivorced + 0.48162905075885 * 
Marital_StatusMarried + -0.26618507749283 * Marital_StatusSingle + 0.38053668740338 * 
Marital_StatusTogether ;
445281    +   H1x1_1  =     0.12149136705075 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.12149136705075 + H1x1_1 ;
445282    +   H1x1_2  =    -0.97489696657001 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.97489696657001 + H1x1_2 ;
445283    +   H1x1_3  =    -0.70605220802968 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.70605220802968 + H1x1_3 ;
445284    +   H1x1_4  =    -1.07783206982379 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -1.07783206982379 + H1x1_4 ;
445285    +   H1x1_5  =    -1.00400706261511 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -1.00400706261511 + H1x1_5 ;
445286    +   H1x1_6  =     0.22600488314839 + H1x1_6 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = 0.22600488314839 + H1x1_6 ;
445287    +   H1x1_7  =     1.55642446968077 + H1x1_7 ;
MPRINT(EM_DIAGRAM):   H1x1_7 = 1.55642446968077 + H1x1_7 ;
445288    +   _EPS = SQRT(CONSTANT('MACEPS')) ;
MPRINT(EM_DIAGRAM):   _EPS = SQRT(CONSTANT('MACEPS')) ;
445289    +   _REC_EPS = 1/_EPS ;
MPRINT(EM_DIAGRAM):   _REC_EPS = 1/_EPS ;
445290    +   DROP _REC_EPS _EPS ;
MPRINT(EM_DIAGRAM):   DROP _REC_EPS _EPS ;
445291    +   IF H1x1_1  < _REC_EPS AND H1x1_1  > - _REC_EPS THEN
445292    +   H1x1_1  = H1x1_1  * H1x1_1 ;
MPRINT(EM_DIAGRAM):   IF H1x1_1 < _REC_EPS AND H1x1_1 > - _REC_EPS THEN H1x1_1 = H1x1_1 * 
H1x1_1 ;
445293    +   ELSE H1x1_1  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_1 = _REC_EPS ;
445294    +   IF H1x1_2  < _REC_EPS AND H1x1_2  > - _REC_EPS THEN
445295    +   H1x1_2  = H1x1_2  * H1x1_2 ;
MPRINT(EM_DIAGRAM):   IF H1x1_2 < _REC_EPS AND H1x1_2 > - _REC_EPS THEN H1x1_2 = H1x1_2 * 
H1x1_2 ;
445296    +   ELSE H1x1_2  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_2 = _REC_EPS ;
445297    +   IF H1x1_3  < _REC_EPS AND H1x1_3  > - _REC_EPS THEN
445298    +   H1x1_3  = H1x1_3  * H1x1_3 ;
MPRINT(EM_DIAGRAM):   IF H1x1_3 < _REC_EPS AND H1x1_3 > - _REC_EPS THEN H1x1_3 = H1x1_3 * 
H1x1_3 ;
445299    +   ELSE H1x1_3  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_3 = _REC_EPS ;
445300    +   IF H1x1_4  < _REC_EPS AND H1x1_4  > - _REC_EPS THEN
445301    +   H1x1_4  = H1x1_4  * H1x1_4 ;
MPRINT(EM_DIAGRAM):   IF H1x1_4 < _REC_EPS AND H1x1_4 > - _REC_EPS THEN H1x1_4 = H1x1_4 * 
H1x1_4 ;
445302    +   ELSE H1x1_4  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_4 = _REC_EPS ;
445303    +   IF H1x1_5  < _REC_EPS AND H1x1_5  > - _REC_EPS THEN
445304    +   H1x1_5  = H1x1_5  * H1x1_5 ;
MPRINT(EM_DIAGRAM):   IF H1x1_5 < _REC_EPS AND H1x1_5 > - _REC_EPS THEN H1x1_5 = H1x1_5 * 
H1x1_5 ;
445305    +   ELSE H1x1_5  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_5 = _REC_EPS ;
445306    +   IF H1x1_6  < _REC_EPS AND H1x1_6  > - _REC_EPS THEN
445307    +   H1x1_6  = H1x1_6  * H1x1_6 ;
MPRINT(EM_DIAGRAM):   IF H1x1_6 < _REC_EPS AND H1x1_6 > - _REC_EPS THEN H1x1_6 = H1x1_6 * 
H1x1_6 ;
445308    +   ELSE H1x1_6  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_6 = _REC_EPS ;
445309    +   IF H1x1_7  < _REC_EPS AND H1x1_7  > - _REC_EPS THEN
445310    +   H1x1_7  = H1x1_7  * H1x1_7 ;
MPRINT(EM_DIAGRAM):   IF H1x1_7 < _REC_EPS AND H1x1_7 > - _REC_EPS THEN H1x1_7 = H1x1_7 * 
H1x1_7 ;
445311    +   ELSE H1x1_7  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_7 = _REC_EPS ;
445312    +END;
MPRINT(EM_DIAGRAM):   END;
445313    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
445314    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
445315    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
445316    +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
445317    +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
445318    +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
445319    +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
445320    +   H1x1_7  = .;
MPRINT(EM_DIAGRAM):   H1x1_7 = .;
445321    +END;
MPRINT(EM_DIAGRAM):   END;
445322    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
445323    +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
445324    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
445325    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
445326    +   H1x2_1  =    -1.36226288448745 * S_AcceptedCmpTotal
445327    +          +     -1.3328616352886 * S_Age  +     1.25346137866034 * S_Frq
445328    +          +    -1.21746243786295 * S_Income  +     2.83911738158074 *
445329    +        S_Kidhome  +    -0.60784009102409 * S_Mnt  +     1.57752173634223 *
445330    +        S_MntFishProducts  +    -0.26776567401075 * S_MntFruits
445331    +          +     1.09584731081081 * S_MntGoldProds  +     1.22333044103532 *
445332    +        S_MntMeatProducts  +     0.42827942745016 * S_MntSweetProducts
445333    +          +     0.67813472792448 * S_MntWines  +     0.56816492004798 *
445334    +        S_MonthsAsCustomer  +     0.58113470399079 * S_NumCatalogPurchases
445335    +          +     1.96719021971894 * S_NumDealsPurchases
445336    +          +    -0.44535354794671 * S_NumDistPurchases
445337    +          +    -0.54827762736866 * S_NumStorePurchases
445338    +          +     1.02703310241897 * S_NumWebPurchases
445339    +          +    -0.12526997502601 * S_NumWebVisitsMonth
445340    +          +    -0.55803926383776 * S_RFMstat  +     0.01819380776809 *
445341    +        S_RMntFrq  +       0.651688575044 * S_Recency
445342    +          +     1.58682398186611 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -1.36226288448745 * S_AcceptedCmpTotal + -1.3328616352886 * 
S_Age + 1.25346137866034 * S_Frq + -1.21746243786295 * S_Income + 2.83911738158074 * S_Kidhome 
+ -0.60784009102409 * S_Mnt + 1.57752173634223 * S_MntFishProducts + -0.26776567401075 * 
S_MntFruits + 1.09584731081081 * S_MntGoldProds + 1.22333044103532 * S_MntMeatProducts + 
0.42827942745016 * S_MntSweetProducts + 0.67813472792448 * S_MntWines + 0.56816492004798 * 
S_MonthsAsCustomer + 0.58113470399079 * S_NumCatalogPurchases + 1.96719021971894 * 
S_NumDealsPurchases + -0.44535354794671 * S_NumDistPurchases + -0.54827762736866 * 
S_NumStorePurchases + 1.02703310241897 * S_NumWebPurchases + -0.12526997502601 * 
S_NumWebVisitsMonth + -0.55803926383776 * S_RFMstat + 0.01819380776809 * S_RMntFrq + 
0.651688575044 * S_Recency + 1.58682398186611 * S_Teenhome ;
445343    +   H1x2_2  =    -0.38064507857029 * S_AcceptedCmpTotal
445344    +          +    -0.49661801158351 * S_Age  +    -0.89589399799916 * S_Frq
445345    +          +     -0.0121499288597 * S_Income  +    -0.48023022827846 *
445346    +        S_Kidhome  +     -0.5183846206029 * S_Mnt  +    -3.13913899012334 *
445347    +        S_MntFishProducts  +    -2.07291335687615 * S_MntFruits
445348    +          +     0.51019753905662 * S_MntGoldProds  +     0.11458666377917 *
445349    +        S_MntMeatProducts  +     -1.8499241966205 * S_MntSweetProducts
445350    +          +     0.23160544044172 * S_MntWines  +    -0.48210626907943 *
445351    +        S_MonthsAsCustomer  +     0.15500845227752 * S_NumCatalogPurchases
445352    +          +     1.34659447971131 * S_NumDealsPurchases
445353    +          +    -0.51624251310423 * S_NumDistPurchases
445354    +          +      -1.283121574848 * S_NumStorePurchases
445355    +          +    -1.83517806228926 * S_NumWebPurchases
445356    +          +     0.51321339475285 * S_NumWebVisitsMonth
445357    +          +    -1.86431704283342 * S_RFMstat  +    -1.52065204326569 *
445358    +        S_RMntFrq  +    -0.33186055095462 * S_Recency
445359    +          +    -0.49524729407054 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -0.38064507857029 * S_AcceptedCmpTotal + -0.49661801158351 * 
S_Age + -0.89589399799916 * S_Frq + -0.0121499288597 * S_Income + -0.48023022827846 * 
S_Kidhome + -0.5183846206029 * S_Mnt + -3.13913899012334 * S_MntFishProducts + 
-2.07291335687615 * S_MntFruits + 0.51019753905662 * S_MntGoldProds + 0.11458666377917 * 
S_MntMeatProducts + -1.8499241966205 * S_MntSweetProducts + 0.23160544044172 * S_MntWines + 
-0.48210626907943 * S_MonthsAsCustomer + 0.15500845227752 * S_NumCatalogPurchases + 
1.34659447971131 * S_NumDealsPurchases + -0.51624251310423 * S_NumDistPurchases + 
-1.283121574848 * S_NumStorePurchases + -1.83517806228926 * S_NumWebPurchases + 
0.51321339475285 * S_NumWebVisitsMonth + -1.86431704283342 * S_RFMstat + -1.52065204326569 * 
S_RMntFrq + -0.33186055095462 * S_Recency + -0.49524729407054 * S_Teenhome ;
445360    +   H1x2_3  =    -0.75774003934728 * S_AcceptedCmpTotal
445361    +          +    -0.85312030825337 * S_Age  +    -0.01726294458221 * S_Frq
445362    +          +     0.58598267983786 * S_Income  +     1.30497766805554 *
445363    +        S_Kidhome  +    -0.84214135491022 * S_Mnt  +     0.55305862453787 *
445364    +        S_MntFishProducts  +      0.6488663613899 * S_MntFruits
445365    +          +    -0.83189439197558 * S_MntGoldProds  +    -0.07500050412653 *
445366    +        S_MntMeatProducts  +    -0.06401928810253 * S_MntSweetProducts
445367    +          +      0.5940135658334 * S_MntWines  +    -0.04573352455984 *
445368    +        S_MonthsAsCustomer  +    -1.53610650634069 * S_NumCatalogPurchases
445369    +          +     0.67492297345004 * S_NumDealsPurchases
445370    +          +    -0.40437875375926 * S_NumDistPurchases
445371    +          +     0.36322603681545 * S_NumStorePurchases
445372    +          +    -1.15315070635524 * S_NumWebPurchases
445373    +          +     1.20707272201156 * S_NumWebVisitsMonth
445374    +          +     0.12192566357285 * S_RFMstat  +    -0.46711219170047 *
445375    +        S_RMntFrq  +     1.89703582493259 * S_Recency
445376    +          +     1.07511942237188 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.75774003934728 * S_AcceptedCmpTotal + -0.85312030825337 * 
S_Age + -0.01726294458221 * S_Frq + 0.58598267983786 * S_Income + 1.30497766805554 * S_Kidhome 
+ -0.84214135491022 * S_Mnt + 0.55305862453787 * S_MntFishProducts + 0.6488663613899 * 
S_MntFruits + -0.83189439197558 * S_MntGoldProds + -0.07500050412653 * S_MntMeatProducts + 
-0.06401928810253 * S_MntSweetProducts + 0.5940135658334 * S_MntWines + -0.04573352455984 * 
S_MonthsAsCustomer + -1.53610650634069 * S_NumCatalogPurchases + 0.67492297345004 * 
S_NumDealsPurchases + -0.40437875375926 * S_NumDistPurchases + 0.36322603681545 * 
S_NumStorePurchases + -1.15315070635524 * S_NumWebPurchases + 1.20707272201156 * 
S_NumWebVisitsMonth + 0.12192566357285 * S_RFMstat + -0.46711219170047 * S_RMntFrq + 
1.89703582493259 * S_Recency + 1.07511942237188 * S_Teenhome ;
445377    +   H1x2_4  =     0.62123819069495 * S_AcceptedCmpTotal
445378    +          +     0.03399237520702 * S_Age  +    -0.01971421795338 * S_Frq
445379    +          +    -0.54728266919056 * S_Income  +     -0.4634195771237 *
445380    +        S_Kidhome  +    -1.19055247712911 * S_Mnt  +      1.4307770729159 *
445381    +        S_MntFishProducts  +    -0.83895281276374 * S_MntFruits
445382    +          +    -0.48578798244317 * S_MntGoldProds  +     -0.2846617807101 *
445383    +        S_MntMeatProducts  +     0.70721686533987 * S_MntSweetProducts
445384    +          +     1.32824513551741 * S_MntWines  +    -0.62654342755965 *
445385    +        S_MonthsAsCustomer  +    -0.97245161056543 * S_NumCatalogPurchases
445386    +          +    -0.41427983342148 * S_NumDealsPurchases
445387    +          +    -0.22714305629205 * S_NumDistPurchases
445388    +          +    -0.78763182048862 * S_NumStorePurchases
445389    +          +    -0.26669253451501 * S_NumWebPurchases
445390    +          +    -0.79601078616342 * S_NumWebVisitsMonth
445391    +          +    -0.03863278696502 * S_RFMstat  +     0.95011556103056 *
445392    +        S_RMntFrq  +     0.57184629262878 * S_Recency
445393    +          +    -0.21560478702461 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 0.62123819069495 * S_AcceptedCmpTotal + 0.03399237520702 * 
S_Age + -0.01971421795338 * S_Frq + -0.54728266919056 * S_Income + -0.4634195771237 * 
S_Kidhome + -1.19055247712911 * S_Mnt + 1.4307770729159 * S_MntFishProducts + 
-0.83895281276374 * S_MntFruits + -0.48578798244317 * S_MntGoldProds + -0.2846617807101 * 
S_MntMeatProducts + 0.70721686533987 * S_MntSweetProducts + 1.32824513551741 * S_MntWines + 
-0.62654342755965 * S_MonthsAsCustomer + -0.97245161056543 * S_NumCatalogPurchases + 
-0.41427983342148 * S_NumDealsPurchases + -0.22714305629205 * S_NumDistPurchases + 
-0.78763182048862 * S_NumStorePurchases + -0.26669253451501 * S_NumWebPurchases + 
-0.79601078616342 * S_NumWebVisitsMonth + -0.03863278696502 * S_RFMstat + 0.95011556103056 * 
S_RMntFrq + 0.57184629262878 * S_Recency + -0.21560478702461 * S_Teenhome ;
445394    +   H1x2_5  =     1.47906557745075 * S_AcceptedCmpTotal
445395    +          +    -0.31060566334198 * S_Age  +     0.56472424389718 * S_Frq
445396    +          +     2.16541682726249 * S_Income  +    -0.34119803841059 *
445397    +        S_Kidhome  +    -0.53783050542796 * S_Mnt  +     0.54954821448236 *
445398    +        S_MntFishProducts  +    -0.48449918837838 * S_MntFruits
445399    +          +     0.29783052620672 * S_MntGoldProds  +    -0.15068954343013 *
445400    +        S_MntMeatProducts  +     0.12733251381761 * S_MntSweetProducts
445401    +          +    -2.46709166794296 * S_MntWines  +     -1.2011286508879 *
445402    +        S_MonthsAsCustomer  +    -0.88194814936932 * S_NumCatalogPurchases
445403    +          +      0.7697882092212 * S_NumDealsPurchases
445404    +          +     0.51864835453056 * S_NumDistPurchases
445405    +          +    -1.18320366630444 * S_NumStorePurchases
445406    +          +     -0.6608394639529 * S_NumWebPurchases
445407    +          +    -0.03948137707769 * S_NumWebVisitsMonth
445408    +          +     1.01076462488608 * S_RFMstat  +    -0.91562280329354 *
445409    +        S_RMntFrq  +    -1.07576669501238 * S_Recency
445410    +          +     -0.5946628412106 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 1.47906557745075 * S_AcceptedCmpTotal + -0.31060566334198 * 
S_Age + 0.56472424389718 * S_Frq + 2.16541682726249 * S_Income + -0.34119803841059 * S_Kidhome 
+ -0.53783050542796 * S_Mnt + 0.54954821448236 * S_MntFishProducts + -0.48449918837838 * 
S_MntFruits + 0.29783052620672 * S_MntGoldProds + -0.15068954343013 * S_MntMeatProducts + 
0.12733251381761 * S_MntSweetProducts + -2.46709166794296 * S_MntWines + -1.2011286508879 * 
S_MonthsAsCustomer + -0.88194814936932 * S_NumCatalogPurchases + 0.7697882092212 * 
S_NumDealsPurchases + 0.51864835453056 * S_NumDistPurchases + -1.18320366630444 * 
S_NumStorePurchases + -0.6608394639529 * S_NumWebPurchases + -0.03948137707769 * 
S_NumWebVisitsMonth + 1.01076462488608 * S_RFMstat + -0.91562280329354 * S_RMntFrq + 
-1.07576669501238 * S_Recency + -0.5946628412106 * S_Teenhome ;
445411    +   H1x2_6  =     0.42130900994246 * S_AcceptedCmpTotal
445412    +          +     1.64256522546546 * S_Age  +    -0.31822237495441 * S_Frq
445413    +          +     0.39698710846967 * S_Income  +    -1.30075584525681 *
445414    +        S_Kidhome  +    -1.74733472316294 * S_Mnt  +    -1.04423575539078 *
445415    +        S_MntFishProducts  +     0.28025913700744 * S_MntFruits
445416    +          +     0.92062413073229 * S_MntGoldProds  +     0.38487452173084 *
445417    +        S_MntMeatProducts  +     2.15808673418264 * S_MntSweetProducts
445418    +          +     -0.5364274323591 * S_MntWines  +     0.64447858852609 *
445419    +        S_MonthsAsCustomer  +     0.33683873873337 * S_NumCatalogPurchases
445420    +          +     1.45707983202269 * S_NumDealsPurchases
445421    +          +     0.83341887728641 * S_NumDistPurchases
445422    +          +    -0.36664450469423 * S_NumStorePurchases
445423    +          +     0.63911579043339 * S_NumWebPurchases
445424    +          +     0.67144790303554 * S_NumWebVisitsMonth
445425    +          +    -0.22124390112376 * S_RFMstat  +     1.72222071547971 *
445426    +        S_RMntFrq  +    -0.02323382627271 * S_Recency
445427    +          +    -0.09494567508522 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_6 = 0.42130900994246 * S_AcceptedCmpTotal + 1.64256522546546 * 
S_Age + -0.31822237495441 * S_Frq + 0.39698710846967 * S_Income + -1.30075584525681 * 
S_Kidhome + -1.74733472316294 * S_Mnt + -1.04423575539078 * S_MntFishProducts + 
0.28025913700744 * S_MntFruits + 0.92062413073229 * S_MntGoldProds + 0.38487452173084 * 
S_MntMeatProducts + 2.15808673418264 * S_MntSweetProducts + -0.5364274323591 * S_MntWines + 
0.64447858852609 * S_MonthsAsCustomer + 0.33683873873337 * S_NumCatalogPurchases + 
1.45707983202269 * S_NumDealsPurchases + 0.83341887728641 * S_NumDistPurchases + 
-0.36664450469423 * S_NumStorePurchases + 0.63911579043339 * S_NumWebPurchases + 
0.67144790303554 * S_NumWebVisitsMonth + -0.22124390112376 * S_RFMstat + 1.72222071547971 * 
S_RMntFrq + -0.02323382627271 * S_Recency + -0.09494567508522 * S_Teenhome ;
445428    +   H1x2_7  =      0.0903330772553 * S_AcceptedCmpTotal
445429    +          +     0.13217959089196 * S_Age  +     0.93600629225871 * S_Frq
445430    +          +     1.23765169211392 * S_Income  +     1.27732984858098 *
445431    +        S_Kidhome  +     1.54889765360944 * S_Mnt  +     0.84618173514761 *
445432    +        S_MntFishProducts  +    -0.32044356786958 * S_MntFruits
445433    +          +    -0.26357995597029 * S_MntGoldProds  +     0.53649229087334 *
445434    +        S_MntMeatProducts  +     1.46955866272889 * S_MntSweetProducts
445435    +          +    -0.34260315437319 * S_MntWines  +    -1.70693604004836 *
445436    +        S_MonthsAsCustomer  +     -0.4612555130737 * S_NumCatalogPurchases
445437    +          +     0.68491896063662 * S_NumDealsPurchases
445438    +          +      0.5386312048592 * S_NumDistPurchases
445439    +          +     1.28108942503912 * S_NumStorePurchases
445440    +          +    -0.88282270505969 * S_NumWebPurchases
445441    +          +    -0.66670958211416 * S_NumWebVisitsMonth
445442    +          +     0.94315921733739 * S_RFMstat  +     0.70533705858561 *
445443    +        S_RMntFrq  +     0.23896687873405 * S_Recency
445444    +          +     0.66289635918858 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_7 = 0.0903330772553 * S_AcceptedCmpTotal + 0.13217959089196 * S_Age 
+ 0.93600629225871 * S_Frq + 1.23765169211392 * S_Income + 1.27732984858098 * S_Kidhome + 
1.54889765360944 * S_Mnt + 0.84618173514761 * S_MntFishProducts + -0.32044356786958 * 
S_MntFruits + -0.26357995597029 * S_MntGoldProds + 0.53649229087334 * S_MntMeatProducts + 
1.46955866272889 * S_MntSweetProducts + -0.34260315437319 * S_MntWines + -1.70693604004836 * 
S_MonthsAsCustomer + -0.4612555130737 * S_NumCatalogPurchases + 0.68491896063662 * 
S_NumDealsPurchases + 0.5386312048592 * S_NumDistPurchases + 1.28108942503912 * 
S_NumStorePurchases + -0.88282270505969 * S_NumWebPurchases + -0.66670958211416 * 
S_NumWebVisitsMonth + 0.94315921733739 * S_RFMstat + 0.70533705858561 * S_RMntFrq + 
0.23896687873405 * S_Recency + 0.66289635918858 * S_Teenhome ;
445445    +   H1x2_1  = H1x2_1  +     0.22958861848016 * AcceptedCmp10
445446    +          +    -1.11069938765475 * AcceptedCmp20  +     1.18563222829069 *
445447    +        AcceptedCmp30  +    -0.97028253571173 * AcceptedCmp40
445448    +          +     0.60850082670391 * AcceptedCmp50  +     0.31163990605418 *
445449    +        Complain0  +     1.10957053966326 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 0.22958861848016 * AcceptedCmp10 + -1.11069938765475 * 
AcceptedCmp20 + 1.18563222829069 * AcceptedCmp30 + -0.97028253571173 * AcceptedCmp40 + 
0.60850082670391 * AcceptedCmp50 + 0.31163990605418 * Complain0 + 1.10957053966326 * 
HigherEducationBinary0 ;
445450    +   H1x2_2  = H1x2_2  +    -0.99409862826118 * AcceptedCmp10
445451    +          +    -0.76360093699992 * AcceptedCmp20  +     0.82772534103696 *
445452    +        AcceptedCmp30  +     1.74232000787449 * AcceptedCmp40
445453    +          +    -1.37356239255127 * AcceptedCmp50  +      0.0919811154199 *
445454    +        Complain0  +    -0.00220513515877 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -0.99409862826118 * AcceptedCmp10 + -0.76360093699992 
* AcceptedCmp20 + 0.82772534103696 * AcceptedCmp30 + 1.74232000787449 * AcceptedCmp40 + 
-1.37356239255127 * AcceptedCmp50 + 0.0919811154199 * Complain0 + -0.00220513515877 * 
HigherEducationBinary0 ;
445455    +   H1x2_3  = H1x2_3  +    -0.21003647134105 * AcceptedCmp10
445456    +          +    -0.08930317176477 * AcceptedCmp20  +    -0.39109673162041 *
445457    +        AcceptedCmp30  +     1.14094450038946 * AcceptedCmp40
445458    +          +     1.26041997788848 * AcceptedCmp50  +    -0.10972130900569 *
445459    +        Complain0  +    -0.99352598480407 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + -0.21003647134105 * AcceptedCmp10 + -0.08930317176477 
* AcceptedCmp20 + -0.39109673162041 * AcceptedCmp30 + 1.14094450038946 * AcceptedCmp40 + 
1.26041997788848 * AcceptedCmp50 + -0.10972130900569 * Complain0 + -0.99352598480407 * 
HigherEducationBinary0 ;
445460    +   H1x2_4  = H1x2_4  +     2.02630284432093 * AcceptedCmp10
445461    +          +    -2.50721904229276 * AcceptedCmp20  +    -1.31026450397446 *
445462    +        AcceptedCmp30  +    -0.83440880266914 * AcceptedCmp40
445463    +          +     -0.0570899805015 * AcceptedCmp50  +    -0.55525351434733 *
445464    +        Complain0  +     0.27306601694081 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 2.02630284432093 * AcceptedCmp10 + -2.50721904229276 * 
AcceptedCmp20 + -1.31026450397446 * AcceptedCmp30 + -0.83440880266914 * AcceptedCmp40 + 
-0.0570899805015 * AcceptedCmp50 + -0.55525351434733 * Complain0 + 0.27306601694081 * 
HigherEducationBinary0 ;
445465    +   H1x2_5  = H1x2_5  +    -0.18595284227194 * AcceptedCmp10
445466    +          +    -1.55973916517392 * AcceptedCmp20  +    -3.81563768970049 *
445467    +        AcceptedCmp30  +    -0.09331430915239 * AcceptedCmp40
445468    +          +     0.76128118177142 * AcceptedCmp50  +    -0.17283107047755 *
445469    +        Complain0  +    -1.01028562804392 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + -0.18595284227194 * AcceptedCmp10 + -1.55973916517392 
* AcceptedCmp20 + -3.81563768970049 * AcceptedCmp30 + -0.09331430915239 * AcceptedCmp40 + 
0.76128118177142 * AcceptedCmp50 + -0.17283107047755 * Complain0 + -1.01028562804392 * 
HigherEducationBinary0 ;
445470    +   H1x2_6  = H1x2_6  +    -1.21475169836565 * AcceptedCmp10
445471    +          +     0.28748729216575 * AcceptedCmp20  +     1.15908030413172 *
445472    +        AcceptedCmp30  +    -0.05889528676549 * AcceptedCmp40
445473    +          +    -0.41661363625562 * AcceptedCmp50  +    -0.77939130028952 *
445474    +        Complain0  +     2.19510865765326 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 + -1.21475169836565 * AcceptedCmp10 + 0.28748729216575 * 
AcceptedCmp20 + 1.15908030413172 * AcceptedCmp30 + -0.05889528676549 * AcceptedCmp40 + 
-0.41661363625562 * AcceptedCmp50 + -0.77939130028952 * Complain0 + 2.19510865765326 * 
HigherEducationBinary0 ;
445475    +   H1x2_7  = H1x2_7  +     0.87360423179644 * AcceptedCmp10
445476    +          +    -0.47867594186426 * AcceptedCmp20  +    -0.30325818223392 *
445477    +        AcceptedCmp30  +    -0.96085556588297 * AcceptedCmp40
445478    +          +    -0.19693158209969 * AcceptedCmp50  +    -0.73731792634553 *
445479    +        Complain0  +    -1.10021678806679 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_7 = H1x2_7 + 0.87360423179644 * AcceptedCmp10 + -0.47867594186426 * 
AcceptedCmp20 + -0.30325818223392 * AcceptedCmp30 + -0.96085556588297 * AcceptedCmp40 + 
-0.19693158209969 * AcceptedCmp50 + -0.73731792634553 * Complain0 + -1.10021678806679 * 
HigherEducationBinary0 ;
445480    +   H1x2_1  = H1x2_1  +    -1.17876013389516 * Education2n_Cycle
445481    +          +    -0.35670434275624 * EducationBasic  +    -0.12456502068616 *
445482    +        EducationGraduation  +     -1.0620373133508 * EducationMaster
445483    +          +    -3.97961426831865 * Marital_StatusDivorced
445484    +          +     0.00932639813867 * Marital_StatusMarried
445485    +          +     1.29310186574718 * Marital_StatusSingle
445486    +          +     1.60940802221114 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -1.17876013389516 * Education2n_Cycle + 
-0.35670434275624 * EducationBasic + -0.12456502068616 * EducationGraduation + 
-1.0620373133508 * EducationMaster + -3.97961426831865 * Marital_StatusDivorced + 
0.00932639813867 * Marital_StatusMarried + 1.29310186574718 * Marital_StatusSingle + 
1.60940802221114 * Marital_StatusTogether ;
445487    +   H1x2_2  = H1x2_2  +     0.58497813059595 * Education2n_Cycle
445488    +          +     0.98038586431321 * EducationBasic  +    -0.20442806724521 *
445489    +        EducationGraduation  +     0.64973046142001 * EducationMaster
445490    +          +    -0.30358516578188 * Marital_StatusDivorced
445491    +          +    -0.96176709360703 * Marital_StatusMarried
445492    +          +     1.26977690921649 * Marital_StatusSingle
445493    +          +     -0.6681544336237 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 0.58497813059595 * Education2n_Cycle + 
0.98038586431321 * EducationBasic + -0.20442806724521 * EducationGraduation + 0.64973046142001 
* EducationMaster + -0.30358516578188 * Marital_StatusDivorced + -0.96176709360703 * 
Marital_StatusMarried + 1.26977690921649 * Marital_StatusSingle + -0.6681544336237 * 
Marital_StatusTogether ;
445494    +   H1x2_3  = H1x2_3  +     0.42123479646947 * Education2n_Cycle
445495    +          +     0.22705854674045 * EducationBasic  +     0.34794003687348 *
445496    +        EducationGraduation  +     0.18356390207843 * EducationMaster
445497    +          +     0.55272671490757 * Marital_StatusDivorced
445498    +          +      0.1499239288334 * Marital_StatusMarried
445499    +          +    -0.46840941760604 * Marital_StatusSingle
445500    +          +     0.93706218273755 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 0.42123479646947 * Education2n_Cycle + 
0.22705854674045 * EducationBasic + 0.34794003687348 * EducationGraduation + 0.18356390207843 
* EducationMaster + 0.55272671490757 * Marital_StatusDivorced + 0.1499239288334 * 
Marital_StatusMarried + -0.46840941760604 * Marital_StatusSingle + 0.93706218273755 * 
Marital_StatusTogether ;
445501    +   H1x2_4  = H1x2_4  +     0.85035585831723 * Education2n_Cycle
445502    +          +    -0.70680576286167 * EducationBasic  +    -0.24487676912938 *
445503    +        EducationGraduation  +    -0.33030970028481 * EducationMaster
445504    +          +      -1.240735370138 * Marital_StatusDivorced
445505    +          +    -1.20089294883599 * Marital_StatusMarried
445506    +          +     0.57492674426149 * Marital_StatusSingle
445507    +          +     1.44189292990255 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 0.85035585831723 * Education2n_Cycle + 
-0.70680576286167 * EducationBasic + -0.24487676912938 * EducationGraduation + 
-0.33030970028481 * EducationMaster + -1.240735370138 * Marital_StatusDivorced + 
-1.20089294883599 * Marital_StatusMarried + 0.57492674426149 * Marital_StatusSingle + 
1.44189292990255 * Marital_StatusTogether ;
445508    +   H1x2_5  = H1x2_5  +    -0.62461434654579 * Education2n_Cycle
445509    +          +    -0.34090423965869 * EducationBasic  +    -0.82493401834396 *
445510    +        EducationGraduation  +    -1.09423426649553 * EducationMaster
445511    +          +     1.05435442049802 * Marital_StatusDivorced
445512    +          +      0.3571256349717 * Marital_StatusMarried
445513    +          +    -0.44741267266578 * Marital_StatusSingle
445514    +          +     0.02948931507994 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + -0.62461434654579 * Education2n_Cycle + 
-0.34090423965869 * EducationBasic + -0.82493401834396 * EducationGraduation + 
-1.09423426649553 * EducationMaster + 1.05435442049802 * Marital_StatusDivorced + 
0.3571256349717 * Marital_StatusMarried + -0.44741267266578 * Marital_StatusSingle + 
0.02948931507994 * Marital_StatusTogether ;
445515    +   H1x2_6  = H1x2_6  +     0.09620501635178 * Education2n_Cycle
445516    +          +    -0.54617424401993 * EducationBasic  +    -0.43305038404558 *
445517    +        EducationGraduation  +     0.05453229059502 * EducationMaster
445518    +          +     2.06026721980778 * Marital_StatusDivorced
445519    +          +    -0.49583258645166 * Marital_StatusMarried
445520    +          +    -1.14824900824474 * Marital_StatusSingle
445521    +          +     0.57690093967839 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 + 0.09620501635178 * Education2n_Cycle + 
-0.54617424401993 * EducationBasic + -0.43305038404558 * EducationGraduation + 
0.05453229059502 * EducationMaster + 2.06026721980778 * Marital_StatusDivorced + 
-0.49583258645166 * Marital_StatusMarried + -1.14824900824474 * Marital_StatusSingle + 
0.57690093967839 * Marital_StatusTogether ;
445522    +   H1x2_7  = H1x2_7  +    -0.31251046777442 * Education2n_Cycle
445523    +          +    -1.69272922870259 * EducationBasic  +    -0.08682253496961 *
445524    +        EducationGraduation  +     0.58241644186309 * EducationMaster
445525    +          +     -1.1890908607447 * Marital_StatusDivorced
445526    +          +    -0.46668809907123 * Marital_StatusMarried
445527    +          +     1.20342564763422 * Marital_StatusSingle
445528    +          +    -1.75740662969578 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_7 = H1x2_7 + -0.31251046777442 * Education2n_Cycle + 
-1.69272922870259 * EducationBasic + -0.08682253496961 * EducationGraduation + 
0.58241644186309 * EducationMaster + -1.1890908607447 * Marital_StatusDivorced + 
-0.46668809907123 * Marital_StatusMarried + 1.20342564763422 * Marital_StatusSingle + 
-1.75740662969578 * Marital_StatusTogether ;
445529    +   H1x2_1  =    -0.14973719401763 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -0.14973719401763 + H1x2_1 ;
445530    +   H1x2_2  =    -0.56259582407931 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -0.56259582407931 + H1x2_2 ;
445531    +   H1x2_3  =     0.42132483186492 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = 0.42132483186492 + H1x2_3 ;
445532    +   H1x2_4  =      1.1996209421335 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 1.1996209421335 + H1x2_4 ;
445533    +   H1x2_5  =     0.95827018478011 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 0.95827018478011 + H1x2_5 ;
445534    +   H1x2_6  =     1.88844492435344 + H1x2_6 ;
MPRINT(EM_DIAGRAM):   H1x2_6 = 1.88844492435344 + H1x2_6 ;
445535    +   H1x2_7  =     0.77184516675485 + H1x2_7 ;
MPRINT(EM_DIAGRAM):   H1x2_7 = 0.77184516675485 + H1x2_7 ;
445536    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
445537    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
445538    +   H1x2_1  = EXP(MIN(H1x2_1 , _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x2_1 = EXP(MIN(H1x2_1 , _EXP_BAR));
445539    +   H1x2_2  = EXP(MIN(H1x2_2 , _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x2_2 = EXP(MIN(H1x2_2 , _EXP_BAR));
445540    +   H1x2_3  = EXP(MIN(H1x2_3 , _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x2_3 = EXP(MIN(H1x2_3 , _EXP_BAR));
445541    +   H1x2_4  = EXP(MIN(H1x2_4 , _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x2_4 = EXP(MIN(H1x2_4 , _EXP_BAR));
445542    +   H1x2_5  = EXP(MIN(H1x2_5 , _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x2_5 = EXP(MIN(H1x2_5 , _EXP_BAR));
445543    +   H1x2_6  = EXP(MIN(H1x2_6 , _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x2_6 = EXP(MIN(H1x2_6 , _EXP_BAR));
445544    +   H1x2_7  = EXP(MIN(H1x2_7 , _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x2_7 = EXP(MIN(H1x2_7 , _EXP_BAR));
445545    +END;
MPRINT(EM_DIAGRAM):   END;
445546    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
445547    +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
445548    +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
445549    +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
445550    +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
445551    +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
445552    +   H1x2_6  = .;
MPRINT(EM_DIAGRAM):   H1x2_6 = .;
445553    +   H1x2_7  = .;
MPRINT(EM_DIAGRAM):   H1x2_7 = .;
445554    +END;
MPRINT(EM_DIAGRAM):   END;
445555    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
445556    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
445557    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
445558    +
445559    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
445560    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
445561    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
445562    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
445563    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
445564    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
445565    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
445566    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
445567    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
445568    +end;
MPRINT(EM_DIAGRAM):   end;
445569    +else do;
MPRINT(EM_DIAGRAM):   else do;
445570    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
445571    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
445572    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
445573    +   end;
MPRINT(EM_DIAGRAM):   end;
445574    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
445575    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
445576    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
445577    +   end;
MPRINT(EM_DIAGRAM):   end;
445578    +   else do;
MPRINT(EM_DIAGRAM):   else do;
445579    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
445580    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
445581    +   end;
MPRINT(EM_DIAGRAM):   end;
445582    +end;
MPRINT(EM_DIAGRAM):   end;
445583    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
445584    +   P_DepVar1  =     0.10431866610268 * H1x1_1  +    -0.48100701431081 * H1x1_2
445585    +          +      1.1561061025832 * H1x1_3  +    -1.23928879501664 * H1x1_4
445586    +          +     1.22057275321508 * H1x1_5  +     0.21972347471711 * H1x1_6
445587    +          +    -0.98998788335495 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.10431866610268 * H1x1_1 + -0.48100701431081 * H1x1_2 + 
1.1561061025832 * H1x1_3 + -1.23928879501664 * H1x1_4 + 1.22057275321508 * H1x1_5 + 
0.21972347471711 * H1x1_6 + -0.98998788335495 * H1x1_7 ;
445588    +   P_DepVar1  = P_DepVar1  + -4.9985478923183E-10 * H1x2_1
445589    +          +   2.7724573038604E-6 * H1x2_2  +  -3.3263781208921E-6 * H1x2_3
445590    +          +     1.90169432265E-8 * H1x2_4  +  -9.7460294571708E-9 * H1x2_5
445591    +          +  -2.0885179583168E-6 * H1x2_6  +    3.038660449943E-8 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 + -4.9985478923183E-10 * H1x2_1 + 
2.7724573038604E-6 * H1x2_2 + -3.3263781208921E-6 * H1x2_3 + 1.90169432265E-8 * H1x2_4 + 
-9.7460294571708E-9 * H1x2_5 + -2.0885179583168E-6 * H1x2_6 + 3.038660449943E-8 * H1x2_7 ;
445592    +   P_DepVar1  =    -2.34500119066237 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.34500119066237 + P_DepVar1 ;
445593    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
445594    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
445595    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
445596    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
445597    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
445598    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
445599    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
445600    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
445601    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
445602    +END;
MPRINT(EM_DIAGRAM):   END;
445603    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
445604    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
445605    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
445606    +END;
MPRINT(EM_DIAGRAM):   END;
445607    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
445608    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
445609    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
445610    +END;
MPRINT(EM_DIAGRAM):   END;
445611    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
445612    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
445613    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
445614    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
445615    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
445616    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
445617    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
445618    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
445619    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
445620    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
445621    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
445622    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
445623    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
445624    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
445625    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
445626    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
445627    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
445628    +END;
MPRINT(EM_DIAGRAM):   END;
445629    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
445630    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
445631    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
445632    +drop
445633    +H1x1_1
445634    +H1x1_2
445635    +H1x1_3
445636    +H1x1_4
445637    +H1x1_5
445638    +H1x1_6
445639    +H1x1_7
445640    +H1x2_1
445641    +H1x2_2
445642    +H1x2_3
445643    +H1x2_4
445644    +H1x2_5
445645    +H1x2_6
445646    +H1x2_7
445647    +;
MPRINT(EM_DIAGRAM):   drop H1x1_1 H1x1_2 H1x1_3 H1x1_4 H1x1_5 H1x1_6 H1x1_7 H1x2_1 H1x2_2 
H1x2_3 H1x2_4 H1x2_5 H1x2_6 H1x2_7 ;
445648    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
445649     run;

NOTE: DATA STEP view saved on file EMWS8.AUTONEURAL12_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.META_VALIDATE.VIEW used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
      

MPRINT(EM_DIAGRAM):   quit;
445650     quit;
445651     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
445652     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
445653     * AutoNeural12: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * AutoNeural12: Computing metadata for TRAIN data;
445654     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;

NOTE: View EMWS8.AUTONEURAL12_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural12\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS8.AutoNeural12_TRAIN out=_tempAdvisor 
noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS8.AutoNeural12_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS8.AutoNeural12_TRAIN out=WORK.M1TI_WUN 
noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1TI_WUN;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20 
INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M1TI_WUN(keep=name type length label format formatl 
formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then format = strip(format)!!strip(put(formatl, 
best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, 
best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then informat = 
strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, 
best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1TI_WUN;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M1TI_WUN;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M001K5KE NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M001K5KE;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M001K5KE;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1M8WPEB(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M001K5KE;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M001K5KE;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 
FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M001K5KE;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" 
"MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" 
"QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" "YEAR" "YYMMDD" "YYMON" 
"YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" 
"EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) 
formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = 
"DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) 
formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" 
"NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" 
"SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = 
"DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then 
level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 
'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 
'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ 
('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 
'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 
'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M001K5KE;
MPRINT(EMADVISECOLUMNS):   set WORK.M001K5KE;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= 
"Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= 
"Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower limit" UPPERLIMIT= 
"Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= 
"Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Meta_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Meta_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural12_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT 
LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "AutoNeural12";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("P_DEPVAR1") creator = "AutoNeural12";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR1") creator = "AutoNeural12";
MPRINT(EM_DIAGRAM):   when("P_DEPVAR0") creator = "AutoNeural12";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR0") creator = "AutoNeural12";
MPRINT(EM_DIAGRAM):   when("F_DEPVAR") creator = "AutoNeural12";
MPRINT(EM_DIAGRAM):   when("I_DEPVAR") creator = "AutoNeural12";
MPRINT(EM_DIAGRAM):   when("U_DEPVAR") creator = "AutoNeural12";
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "AutoNeural12";
MPRINT(EM_DIAGRAM):   when("DEPVAR") model = "AutoNeural12";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * AutoNeural12: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
445966     data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
445967     set EMWS8.AutoNeural12_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural12_EMINFO;
445968     where DATA='AutoNeural12' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='AutoNeural12' and KEY ^in('DECDATA', 'DECMETA', 
'IMPORTANCE', 'MODEL');
445969     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.AUTONEURAL12_EMINFO.
      WHERE (DATA='AutoNeural12') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

445970     data EMWS8.AutoNeural12_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural12_EMINFO;
445971     length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
445972     input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
445973     cards;
MPRINT(EM_DIAGRAM):   cards;

NOTE: The data set EMWS8.AUTONEURAL12_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   run;
445977     run;
445978     data EMWS8.AutoNeural12_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural12_EMINFO;
445979     set EMWS8.AutoNeural12_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural12_EMINFO WORK.MODELTEMP_INFO;
445980     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.AUTONEURAL12_EMINFO.
NOTE: There were 0 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS8.AUTONEURAL12_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

445981     proc sort data = EMWS8.AutoNeural12_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.AutoNeural12_EMINFO NOTHREADS;
445982     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
445983     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.AUTONEURAL12_EMINFO.
NOTE: The data set EMWS8.AUTONEURAL12_EMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

445984     proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
445985     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
445986     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set EMWS8.FIMPORT_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 1 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

445987     proc sort data = EMWS8.AutoNeural12_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS8.AutoNeural12_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
445988     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
445989     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 3 observations read from the data set EMWS8.AUTONEURAL12_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

445990     data EMWS8.AutoNeural12_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural12_EMINFO;
445991     merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
445992     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
445993     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 3 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS8.AUTONEURAL12_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

445994     proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
445995     delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
445996     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
445997     quit;
MPRINT(EM_DIAGRAM):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

NOTE: View EMWS8.AUTONEURAL12_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
NOTE: View EMWS8.AUTONEURAL12_VALIDATE.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
