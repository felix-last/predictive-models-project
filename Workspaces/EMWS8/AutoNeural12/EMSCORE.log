MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "28. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "08.46 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                28. April 2016
Time:                08.46 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O1I24LXJ 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural12\EMSCORE.out" encoding="UTF-8" 
NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O1I24LXJ new;
MPRINT(EM_DIAGRAM):   run;
664857     filename emflow
664857   ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural12\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural12\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * AutoNeural12: Scoring DATA data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
664858     *------------------------------------------------------------*;
664859     * AutoNeural12: Scoring DATA data;
664860     *------------------------------------------------------------*;
664861     data EMWS8.AutoNeural12_TRAIN
664862     / view=EMWS8.AutoNeural12_TRAIN
664863     ;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural12_TRAIN / view=EMWS8.AutoNeural12_TRAIN ;
664864     set EMWS8.Meta_TRAIN
664865     ;
MPRINT(EM_DIAGRAM):   set EMWS8.Meta_TRAIN ;
664866     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural12\EMFLOWSCORE.sas.
664867    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
664868    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
664869    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
664870    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
664871    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
664872    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
664873    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
664874    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
664875    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
664876    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
664877    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
664878    +LENGTH _WARN_ $4
664879    +      F_DepVar  $ 12
664880    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
664881    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
664882    +
664883    +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
664884    +
664885    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
664886    +
664887    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
664888    +
664889    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
664890    +
664891    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
664892    +
664893    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
664894    +
664895    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
664896    +
664897    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
664898    +
664899    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
664900    +
664901    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
664902    +
664903    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
664904    +
664905    +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
664906    +
664907    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
664908    +
664909    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
664910    +
664911    +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
664912    +
664913    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
664914    +
664915    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
664916    +
664917    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
664918    +
664919    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
664920    +
664921    +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
664922    +
664923    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
664924    +
664925    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
664926    +
664927    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
664928    +
664929    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
664930    +
664931    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
664932    +
664933    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
664934    +
664935    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
664936    +
664937    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
664938    +
664939    +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
664940    +
664941    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
664942    +
664943    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
664944    +
664945    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
664946    +
664947    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
664948    +
664949    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
664950    +
664951    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
664952    +
664953    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
664954    +
664955    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
664956    +
664957    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
664958    +
664959    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
664960    +
664961    +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
664962    +
664963    +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
664964    +
664965    +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
664966    +
664967    +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
664968    +
664969    +      label H1x1_7 = 'Hidden: H1x1_=7' ;
MPRINT(EM_DIAGRAM):   label H1x1_7 = 'Hidden: H1x1_=7' ;
664970    +
664971    +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
664972    +
664973    +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
664974    +
664975    +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
664976    +
664977    +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
664978    +
664979    +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
664980    +
664981    +      label H1x2_6 = 'Hidden: H1x2_=6' ;
MPRINT(EM_DIAGRAM):   label H1x2_6 = 'Hidden: H1x2_=6' ;
664982    +
664983    +      label H1x2_7 = 'Hidden: H1x2_=7' ;
MPRINT(EM_DIAGRAM):   label H1x2_7 = 'Hidden: H1x2_=7' ;
664984    +
664985    +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
664986    +
664987    +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
664988    +
664989    +      label H2x1_3 = 'Hidden: H2x1_=3' ;
MPRINT(EM_DIAGRAM):   label H2x1_3 = 'Hidden: H2x1_=3' ;
664990    +
664991    +      label H2x1_4 = 'Hidden: H2x1_=4' ;
MPRINT(EM_DIAGRAM):   label H2x1_4 = 'Hidden: H2x1_=4' ;
664992    +
664993    +      label H2x1_5 = 'Hidden: H2x1_=5' ;
MPRINT(EM_DIAGRAM):   label H2x1_5 = 'Hidden: H2x1_=5' ;
664994    +
664995    +      label H2x1_6 = 'Hidden: H2x1_=6' ;
MPRINT(EM_DIAGRAM):   label H2x1_6 = 'Hidden: H2x1_=6' ;
664996    +
664997    +      label H2x1_7 = 'Hidden: H2x1_=7' ;
MPRINT(EM_DIAGRAM):   label H2x1_7 = 'Hidden: H2x1_=7' ;
664998    +
664999    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
665000    +
665001    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
665002    +
665003    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
665004    +
665005    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
665006    +
665007    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
665008    +
665009    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
665010    +
665011    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
665012    +
665013    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
665014    +
665015    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
665016    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
665017    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
665018    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
665019    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
665020    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
665021    +end;
MPRINT(EM_DIAGRAM):   end;
665022    +else do;
MPRINT(EM_DIAGRAM):   else do;
665023    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
665024    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
665025    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
665026    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
665027    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
665028    +   end;
MPRINT(EM_DIAGRAM):   end;
665029    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
665030    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
665031    +   end;
MPRINT(EM_DIAGRAM):   end;
665032    +   else do;
MPRINT(EM_DIAGRAM):   else do;
665033    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
665034    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
665035    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
665036    +   end;
MPRINT(EM_DIAGRAM):   end;
665037    +end;
MPRINT(EM_DIAGRAM):   end;
665038    +
665039    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
665040    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
665041    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
665042    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
665043    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
665044    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
665045    +end;
MPRINT(EM_DIAGRAM):   end;
665046    +else do;
MPRINT(EM_DIAGRAM):   else do;
665047    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
665048    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
665049    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
665050    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
665051    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
665052    +   end;
MPRINT(EM_DIAGRAM):   end;
665053    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
665054    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
665055    +   end;
MPRINT(EM_DIAGRAM):   end;
665056    +   else do;
MPRINT(EM_DIAGRAM):   else do;
665057    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
665058    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
665059    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
665060    +   end;
MPRINT(EM_DIAGRAM):   end;
665061    +end;
MPRINT(EM_DIAGRAM):   end;
665062    +
665063    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
665064    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
665065    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
665066    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
665067    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
665068    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
665069    +end;
MPRINT(EM_DIAGRAM):   end;
665070    +else do;
MPRINT(EM_DIAGRAM):   else do;
665071    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
665072    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
665073    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
665074    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
665075    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
665076    +   end;
MPRINT(EM_DIAGRAM):   end;
665077    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
665078    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
665079    +   end;
MPRINT(EM_DIAGRAM):   end;
665080    +   else do;
MPRINT(EM_DIAGRAM):   else do;
665081    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
665082    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
665083    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
665084    +   end;
MPRINT(EM_DIAGRAM):   end;
665085    +end;
MPRINT(EM_DIAGRAM):   end;
665086    +
665087    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
665088    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
665089    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
665090    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
665091    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
665092    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
665093    +end;
MPRINT(EM_DIAGRAM):   end;
665094    +else do;
MPRINT(EM_DIAGRAM):   else do;
665095    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
665096    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
665097    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
665098    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
665099    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
665100    +   end;
MPRINT(EM_DIAGRAM):   end;
665101    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
665102    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
665103    +   end;
MPRINT(EM_DIAGRAM):   end;
665104    +   else do;
MPRINT(EM_DIAGRAM):   else do;
665105    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
665106    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
665107    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
665108    +   end;
MPRINT(EM_DIAGRAM):   end;
665109    +end;
MPRINT(EM_DIAGRAM):   end;
665110    +
665111    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
665112    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
665113    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
665114    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
665115    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
665116    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
665117    +end;
MPRINT(EM_DIAGRAM):   end;
665118    +else do;
MPRINT(EM_DIAGRAM):   else do;
665119    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
665120    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
665121    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
665122    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
665123    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
665124    +   end;
MPRINT(EM_DIAGRAM):   end;
665125    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
665126    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
665127    +   end;
MPRINT(EM_DIAGRAM):   end;
665128    +   else do;
MPRINT(EM_DIAGRAM):   else do;
665129    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
665130    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
665131    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
665132    +   end;
MPRINT(EM_DIAGRAM):   end;
665133    +end;
MPRINT(EM_DIAGRAM):   end;
665134    +
665135    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
665136    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
665137    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
665138    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
665139    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
665140    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
665141    +end;
MPRINT(EM_DIAGRAM):   end;
665142    +else do;
MPRINT(EM_DIAGRAM):   else do;
665143    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
665144    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
665145    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
665146    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
665147    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
665148    +   end;
MPRINT(EM_DIAGRAM):   end;
665149    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
665150    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
665151    +   end;
MPRINT(EM_DIAGRAM):   end;
665152    +   else do;
MPRINT(EM_DIAGRAM):   else do;
665153    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
665154    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
665155    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
665156    +   end;
MPRINT(EM_DIAGRAM):   end;
665157    +end;
MPRINT(EM_DIAGRAM):   end;
665158    +
665159    +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
665160    +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
665161    +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
665162    +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
665163    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
665164    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
665165    +end;
MPRINT(EM_DIAGRAM):   end;
665166    +else do;
MPRINT(EM_DIAGRAM):   else do;
665167    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
665168    +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
665169    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
665170    +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
665171    +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
665172    +   end;
MPRINT(EM_DIAGRAM):   end;
665173    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
665174    +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
665175    +   end;
MPRINT(EM_DIAGRAM):   end;
665176    +   else do;
MPRINT(EM_DIAGRAM):   else do;
665177    +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
665178    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
665179    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
665180    +   end;
MPRINT(EM_DIAGRAM):   end;
665181    +end;
MPRINT(EM_DIAGRAM):   end;
665182    +
665183    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
665184    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
665185    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
665186    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
665187    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
665188    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
665189    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
665190    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
665191    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
665192    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
665193    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
665194    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
665195    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
665196    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
665197    +end;
MPRINT(EM_DIAGRAM):   end;
665198    +else do;
MPRINT(EM_DIAGRAM):   else do;
665199    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
665200    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
665201    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
665202    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
665203    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
665204    +   end;
MPRINT(EM_DIAGRAM):   end;
665205    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
665206    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
665207    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
665208    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
665209    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
665210    +   end;
MPRINT(EM_DIAGRAM):   end;
665211    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
665212    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
665213    +   end;
MPRINT(EM_DIAGRAM):   end;
665214    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
665215    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
665216    +   end;
MPRINT(EM_DIAGRAM):   end;
665217    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
665218    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
665219    +   end;
MPRINT(EM_DIAGRAM):   end;
665220    +   else do;
MPRINT(EM_DIAGRAM):   else do;
665221    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
665222    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
665223    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
665224    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
665225    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
665226    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
665227    +   end;
MPRINT(EM_DIAGRAM):   end;
665228    +end;
MPRINT(EM_DIAGRAM):   end;
665229    +
665230    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
665231    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
665232    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
665233    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
665234    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
665235    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
665236    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
665237    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
665238    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
665239    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
665240    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
665241    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
665242    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
665243    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
665244    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
665245    +end;
MPRINT(EM_DIAGRAM):   end;
665246    +else do;
MPRINT(EM_DIAGRAM):   else do;
665247    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
665248    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
665249    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
665250    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
665251    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
665252    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
665253    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
665254    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
665255    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
665256    +         end;
MPRINT(EM_DIAGRAM):   end;
665257    +         else do;
MPRINT(EM_DIAGRAM):   else do;
665258    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
665259    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
665260    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
665261    +            end;
MPRINT(EM_DIAGRAM):   end;
665262    +         end;
MPRINT(EM_DIAGRAM):   end;
665263    +      end;
MPRINT(EM_DIAGRAM):   end;
665264    +      else do;
MPRINT(EM_DIAGRAM):   else do;
665265    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
665266    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
665267    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
665268    +         end;
MPRINT(EM_DIAGRAM):   end;
665269    +      end;
MPRINT(EM_DIAGRAM):   end;
665270    +   end;
MPRINT(EM_DIAGRAM):   end;
665271    +   else do;
MPRINT(EM_DIAGRAM):   else do;
665272    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
665273    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
665274    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
665275    +      end;
MPRINT(EM_DIAGRAM):   end;
665276    +      else do;
MPRINT(EM_DIAGRAM):   else do;
665277    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
665278    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
665279    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
665280    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
665281    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
665282    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
665283    +         end;
MPRINT(EM_DIAGRAM):   end;
665284    +      end;
MPRINT(EM_DIAGRAM):   end;
665285    +   end;
MPRINT(EM_DIAGRAM):   end;
665286    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
665287    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
665288    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
665289    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
665290    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
665291    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
665292    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
665293    +   end;
MPRINT(EM_DIAGRAM):   end;
665294    +end;
MPRINT(EM_DIAGRAM):   end;
665295    +
665296    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
665297    +*** Checking missing input Interval
665298    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
665299    +
665300    +IF NMISS(
665301    +   AcceptedCmpTotal ,
665302    +   Age ,
665303    +   Frq ,
665304    +   Income ,
665305    +   Kidhome ,
665306    +   Mnt ,
665307    +   MntFishProducts ,
665308    +   MntFruits ,
665309    +   MntGoldProds ,
665310    +   MntMeatProducts ,
665311    +   MntSweetProducts ,
665312    +   MntWines ,
665313    +   MonthsAsCustomer ,
665314    +   NumCatalogPurchases ,
665315    +   NumDealsPurchases ,
665316    +   NumDistPurchases ,
665317    +   NumStorePurchases ,
665318    +   NumWebPurchases ,
665319    +   NumWebVisitsMonth ,
665320    +   RFMstat ,
665321    +   RMntFrq ,
665322    +   Recency ,
665323    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
665324    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
665325    +
665326    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
665327    +END;
MPRINT(EM_DIAGRAM):   END;
665328    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
665329    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
665330    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
665331    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
665332    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
665333    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
665334    +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
665335    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
665336    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
665337    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
665338    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
665339    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
665340    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
665341    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
665342    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
665343    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
665344    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
665345    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
665346    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
665347    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
665348    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
665349    +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
665350    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
665351    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
665352    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
665353    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
665354    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
665355    +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
665356    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
665357    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
665358    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
665359    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
665360    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
665361    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
665362    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
665363    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
665364    +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
665365    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
665366    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
665367    +END;
MPRINT(EM_DIAGRAM):   END;
665368    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
665369    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
665370    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
665371    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
665372    +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
665373    +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
665374    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
665375    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
665376    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
665377    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
665378    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
665379    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
665380    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
665381    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
665382    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
665383    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
665384    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
665385    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
665386    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
665387    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
665388    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
665389    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
665390    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
665391    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
665392    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
665393    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
665394    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
665395    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
665396    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
665397    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
665398    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
665399    +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
665400    +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
665401    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
665402    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
665403    +   ELSE S_NumCatalogPurchases
665404    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
665405    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
665406    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
665407    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
665408    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
665409    +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
665410    +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
665411    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
665412    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
665413    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
665414    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
665415    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
665416    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
665417    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
665418    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
665419    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
665420    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
665421    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
665422    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
665423    +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
665424    +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
665425    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
665426    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
665427    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
665428    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
665429    +END;
MPRINT(EM_DIAGRAM):   END;
665430    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
665431    +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
665432    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
665433    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
665434    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
665435    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
665436    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
665437    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
665438    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
665439    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
665440    +   H1x1_1  =     0.63316204656896 * S_AcceptedCmpTotal
665441    +          +    -0.24884200883415 * S_Age  +      -0.236584005151 * S_Frq
665442    +          +     0.25406117591995 * S_Income  +    -0.56304122955704 *
665443    +        S_Kidhome  +    -0.23687782938793 * S_Mnt  +    -0.09770906650074 *
665444    +        S_MntFishProducts  +    -0.73487360819716 * S_MntFruits
665445    +          +     0.14293909908147 * S_MntGoldProds  +     2.25015000307426 *
665446    +        S_MntMeatProducts  +    -0.42178958150661 * S_MntSweetProducts
665447    +          +    -2.35340366839307 * S_MntWines  +    -0.02380265380154 *
665448    +        S_MonthsAsCustomer  +     1.16509321438746 * S_NumCatalogPurchases
665449    +          +     1.17276395296242 * S_NumDealsPurchases
665450    +          +     0.26632768295477 * S_NumDistPurchases
665451    +          +    -1.26575615903579 * S_NumStorePurchases
665452    +          +    -0.95316107557927 * S_NumWebPurchases
665453    +          +     1.01828574356487 * S_NumWebVisitsMonth
665454    +          +       0.795866263515 * S_RFMstat  +    -0.20490378142832 *
665455    +        S_RMntFrq  +    -0.82943281422857 * S_Recency
665456    +          +     0.16132418388418 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.63316204656896 * S_AcceptedCmpTotal + -0.24884200883415 * 
S_Age + -0.236584005151 * S_Frq + 0.25406117591995 * S_Income + -0.56304122955704 * S_Kidhome 
+ -0.23687782938793 * S_Mnt + -0.09770906650074 * S_MntFishProducts + -0.73487360819716 * 
S_MntFruits + 0.14293909908147 * S_MntGoldProds + 2.25015000307426 * S_MntMeatProducts + 
-0.42178958150661 * S_MntSweetProducts + -2.35340366839307 * S_MntWines + -0.02380265380154 * 
S_MonthsAsCustomer + 1.16509321438746 * S_NumCatalogPurchases + 1.17276395296242 * 
S_NumDealsPurchases + 0.26632768295477 * S_NumDistPurchases + -1.26575615903579 * 
S_NumStorePurchases + -0.95316107557927 * S_NumWebPurchases + 1.01828574356487 * 
S_NumWebVisitsMonth + 0.795866263515 * S_RFMstat + -0.20490378142832 * S_RMntFrq + 
-0.82943281422857 * S_Recency + 0.16132418388418 * S_Teenhome ;
665457    +   H1x1_2  =    -0.43482920479481 * S_AcceptedCmpTotal
665458    +          +     0.53350211221915 * S_Age  +    -0.06797700766223 * S_Frq
665459    +          +     0.13771322007949 * S_Income  +     0.87012019559698 *
665460    +        S_Kidhome  +     0.06026853274247 * S_Mnt  +    -0.43150595882972 *
665461    +        S_MntFishProducts  +    -0.13728591661063 * S_MntFruits
665462    +          +     0.35443873962923 * S_MntGoldProds  +     0.28102965401547 *
665463    +        S_MntMeatProducts  +     0.52367949052365 * S_MntSweetProducts
665464    +          +     0.35553595364078 * S_MntWines  +     0.37892120128383 *
665465    +        S_MonthsAsCustomer  +     0.59057645965187 * S_NumCatalogPurchases
665466    +          +     1.14485571201233 * S_NumDealsPurchases
665467    +          +     0.21414266588987 * S_NumDistPurchases
665468    +          +    -0.10530090074297 * S_NumStorePurchases
665469    +          +    -0.41712321238458 * S_NumWebPurchases
665470    +          +    -0.99760766791108 * S_NumWebVisitsMonth
665471    +          +    -0.90203265666387 * S_RFMstat  +    -0.60947922673601 *
665472    +        S_RMntFrq  +     1.10040128548883 * S_Recency
665473    +          +     0.16728431679949 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.43482920479481 * S_AcceptedCmpTotal + 0.53350211221915 * 
S_Age + -0.06797700766223 * S_Frq + 0.13771322007949 * S_Income + 0.87012019559698 * S_Kidhome 
+ 0.06026853274247 * S_Mnt + -0.43150595882972 * S_MntFishProducts + -0.13728591661063 * 
S_MntFruits + 0.35443873962923 * S_MntGoldProds + 0.28102965401547 * S_MntMeatProducts + 
0.52367949052365 * S_MntSweetProducts + 0.35553595364078 * S_MntWines + 0.37892120128383 * 
S_MonthsAsCustomer + 0.59057645965187 * S_NumCatalogPurchases + 1.14485571201233 * 
S_NumDealsPurchases + 0.21414266588987 * S_NumDistPurchases + -0.10530090074297 * 
S_NumStorePurchases + -0.41712321238458 * S_NumWebPurchases + -0.99760766791108 * 
S_NumWebVisitsMonth + -0.90203265666387 * S_RFMstat + -0.60947922673601 * S_RMntFrq + 
1.10040128548883 * S_Recency + 0.16728431679949 * S_Teenhome ;
665474    +   H1x1_3  =     0.26373486938499 * S_AcceptedCmpTotal
665475    +          +    -0.22246756314756 * S_Age  +     0.49537720979115 * S_Frq
665476    +          +     1.38815981786544 * S_Income  +    -0.93015968695331 *
665477    +        S_Kidhome  +     0.11586216615481 * S_Mnt  +    -0.02105973515345 *
665478    +        S_MntFishProducts  +    -0.28078442249811 * S_MntFruits
665479    +          +    -0.01763878655129 * S_MntGoldProds  +     0.83934619541231 *
665480    +        S_MntMeatProducts  +    -0.23417310915433 * S_MntSweetProducts
665481    +          +    -0.29135819585991 * S_MntWines  +    -0.20792872642036 *
665482    +        S_MonthsAsCustomer  +     1.05218745810839 * S_NumCatalogPurchases
665483    +          +      0.7196418967437 * S_NumDealsPurchases
665484    +          +     0.69035286374177 * S_NumDistPurchases
665485    +          +     0.38027656631135 * S_NumStorePurchases
665486    +          +    -0.18878358997924 * S_NumWebPurchases
665487    +          +     1.61962062004798 * S_NumWebVisitsMonth
665488    +          +    -0.04575386719745 * S_RFMstat  +     1.16358450490635 *
665489    +        S_RMntFrq  +    -2.13821542142822 * S_Recency
665490    +          +    -1.28960355207697 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.26373486938499 * S_AcceptedCmpTotal + -0.22246756314756 * 
S_Age + 0.49537720979115 * S_Frq + 1.38815981786544 * S_Income + -0.93015968695331 * S_Kidhome 
+ 0.11586216615481 * S_Mnt + -0.02105973515345 * S_MntFishProducts + -0.28078442249811 * 
S_MntFruits + -0.01763878655129 * S_MntGoldProds + 0.83934619541231 * S_MntMeatProducts + 
-0.23417310915433 * S_MntSweetProducts + -0.29135819585991 * S_MntWines + -0.20792872642036 * 
S_MonthsAsCustomer + 1.05218745810839 * S_NumCatalogPurchases + 0.7196418967437 * 
S_NumDealsPurchases + 0.69035286374177 * S_NumDistPurchases + 0.38027656631135 * 
S_NumStorePurchases + -0.18878358997924 * S_NumWebPurchases + 1.61962062004798 * 
S_NumWebVisitsMonth + -0.04575386719745 * S_RFMstat + 1.16358450490635 * S_RMntFrq + 
-2.13821542142822 * S_Recency + -1.28960355207697 * S_Teenhome ;
665491    +   H1x1_4  =    -0.34331113295243 * S_AcceptedCmpTotal
665492    +          +    -0.39878146063012 * S_Age  +     0.10068367322473 * S_Frq
665493    +          +    -0.20171643525685 * S_Income  +    -0.76934260520569 *
665494    +        S_Kidhome  +    -0.66782690219397 * S_Mnt  +     0.80905970181803 *
665495    +        S_MntFishProducts  +    -0.03688782193215 * S_MntFruits
665496    +          +     0.06641568264972 * S_MntGoldProds  +    -3.32390323965822 *
665497    +        S_MntMeatProducts  +    -0.05413014598032 * S_MntSweetProducts
665498    +          +     1.07708707113306 * S_MntWines  +     0.13185264889978 *
665499    +        S_MonthsAsCustomer  +    -0.39476201074171 * S_NumCatalogPurchases
665500    +          +    -0.00642902007204 * S_NumDealsPurchases
665501    +          +     0.29785069480367 * S_NumDistPurchases
665502    +          +    -0.42243322063147 * S_NumStorePurchases
665503    +          +     0.54880896338383 * S_NumWebPurchases
665504    +          +    -0.12525846016886 * S_NumWebVisitsMonth
665505    +          +    -0.31397100953189 * S_RFMstat  +     -0.5192863720509 *
665506    +        S_RMntFrq  +     0.10252211581449 * S_Recency
665507    +          +     0.44223031313104 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -0.34331113295243 * S_AcceptedCmpTotal + -0.39878146063012 * 
S_Age + 0.10068367322473 * S_Frq + -0.20171643525685 * S_Income + -0.76934260520569 * 
S_Kidhome + -0.66782690219397 * S_Mnt + 0.80905970181803 * S_MntFishProducts + 
-0.03688782193215 * S_MntFruits + 0.06641568264972 * S_MntGoldProds + -3.32390323965822 * 
S_MntMeatProducts + -0.05413014598032 * S_MntSweetProducts + 1.07708707113306 * S_MntWines + 
0.13185264889978 * S_MonthsAsCustomer + -0.39476201074171 * S_NumCatalogPurchases + 
-0.00642902007204 * S_NumDealsPurchases + 0.29785069480367 * S_NumDistPurchases + 
-0.42243322063147 * S_NumStorePurchases + 0.54880896338383 * S_NumWebPurchases + 
-0.12525846016886 * S_NumWebVisitsMonth + -0.31397100953189 * S_RFMstat + -0.5192863720509 * 
S_RMntFrq + 0.10252211581449 * S_Recency + 0.44223031313104 * S_Teenhome ;
665508    +   H1x1_5  =    -0.89949577087728 * S_AcceptedCmpTotal
665509    +          +     -0.5133669560115 * S_Age  +     0.55814120515869 * S_Frq
665510    +          +    -0.72790553700689 * S_Income  +     1.13470491167406 *
665511    +        S_Kidhome  +     0.42465795563071 * S_Mnt  +     0.22642900369653 *
665512    +        S_MntFishProducts  +    -0.10149694753146 * S_MntFruits
665513    +          +    -0.05203167914723 * S_MntGoldProds  +    -0.42300460593042 *
665514    +        S_MntMeatProducts  +    -0.11178206624825 * S_MntSweetProducts
665515    +          +     1.57257994445012 * S_MntWines  +     0.02297554927807 *
665516    +        S_MonthsAsCustomer  +    -0.60721423552141 * S_NumCatalogPurchases
665517    +          +    -0.48404738328225 * S_NumDealsPurchases
665518    +          +    -0.02464180457879 * S_NumDistPurchases
665519    +          +     1.17201831082067 * S_NumStorePurchases
665520    +          +     0.57453655167516 * S_NumWebPurchases
665521    +          +    -1.94417019790248 * S_NumWebVisitsMonth
665522    +          +     0.00073301476364 * S_RFMstat  +     0.12295343326875 *
665523    +        S_RMntFrq  +      1.6169916658132 * S_Recency
665524    +          +     0.09488579305439 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -0.89949577087728 * S_AcceptedCmpTotal + -0.5133669560115 * 
S_Age + 0.55814120515869 * S_Frq + -0.72790553700689 * S_Income + 1.13470491167406 * S_Kidhome 
+ 0.42465795563071 * S_Mnt + 0.22642900369653 * S_MntFishProducts + -0.10149694753146 * 
S_MntFruits + -0.05203167914723 * S_MntGoldProds + -0.42300460593042 * S_MntMeatProducts + 
-0.11178206624825 * S_MntSweetProducts + 1.57257994445012 * S_MntWines + 0.02297554927807 * 
S_MonthsAsCustomer + -0.60721423552141 * S_NumCatalogPurchases + -0.48404738328225 * 
S_NumDealsPurchases + -0.02464180457879 * S_NumDistPurchases + 1.17201831082067 * 
S_NumStorePurchases + 0.57453655167516 * S_NumWebPurchases + -1.94417019790248 * 
S_NumWebVisitsMonth + 0.00073301476364 * S_RFMstat + 0.12295343326875 * S_RMntFrq + 
1.6169916658132 * S_Recency + 0.09488579305439 * S_Teenhome ;
665525    +   H1x1_6  =     0.01224996381937 * S_AcceptedCmpTotal
665526    +          +     0.56818460209578 * S_Age  +    -0.50544994791872 * S_Frq
665527    +          +    -0.39086889823619 * S_Income  +      0.2278709145292 *
665528    +        S_Kidhome  +       0.221310975162 * S_Mnt  +     -0.2208719427117 *
665529    +        S_MntFishProducts  +     0.33199116637803 * S_MntFruits
665530    +          +    -0.20919304257884 * S_MntGoldProds  +     0.85155045239396 *
665531    +        S_MntMeatProducts  +     0.32150401526792 * S_MntSweetProducts
665532    +          +     0.24789026157513 * S_MntWines  +    -0.16427340869887 *
665533    +        S_MonthsAsCustomer  +    -1.31657293247686 * S_NumCatalogPurchases
665534    +          +    -1.49850531967483 * S_NumDealsPurchases
665535    +          +    -0.82105466264223 * S_NumDistPurchases
665536    +          +     0.29984603642824 * S_NumStorePurchases
665537    +          +     0.06557123721611 * S_NumWebPurchases
665538    +          +     1.04754749365002 * S_NumWebVisitsMonth
665539    +          +     0.18881248406892 * S_RFMstat  +     0.26455728766984 *
665540    +        S_RMntFrq  +     0.12396789666359 * S_Recency
665541    +          +     0.04001049603668 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_6 = 0.01224996381937 * S_AcceptedCmpTotal + 0.56818460209578 * 
S_Age + -0.50544994791872 * S_Frq + -0.39086889823619 * S_Income + 0.2278709145292 * S_Kidhome 
+ 0.221310975162 * S_Mnt + -0.2208719427117 * S_MntFishProducts + 0.33199116637803 * 
S_MntFruits + -0.20919304257884 * S_MntGoldProds + 0.85155045239396 * S_MntMeatProducts + 
0.32150401526792 * S_MntSweetProducts + 0.24789026157513 * S_MntWines + -0.16427340869887 * 
S_MonthsAsCustomer + -1.31657293247686 * S_NumCatalogPurchases + -1.49850531967483 * 
S_NumDealsPurchases + -0.82105466264223 * S_NumDistPurchases + 0.29984603642824 * 
S_NumStorePurchases + 0.06557123721611 * S_NumWebPurchases + 1.04754749365002 * 
S_NumWebVisitsMonth + 0.18881248406892 * S_RFMstat + 0.26455728766984 * S_RMntFrq + 
0.12396789666359 * S_Recency + 0.04001049603668 * S_Teenhome ;
665542    +   H1x1_1  = H1x1_1  +     -0.4293641198863 * AcceptedCmp10
665543    +          +    -0.02562823362815 * AcceptedCmp20  +     0.16277388616218 *
665544    +        AcceptedCmp30  +    -0.38952498475664 * AcceptedCmp40
665545    +          +    -0.13756852377245 * AcceptedCmp50  +    -0.11393239206883 *
665546    +        Complain0  +    -0.18422159910382 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.4293641198863 * AcceptedCmp10 + -0.02562823362815 * 
AcceptedCmp20 + 0.16277388616218 * AcceptedCmp30 + -0.38952498475664 * AcceptedCmp40 + 
-0.13756852377245 * AcceptedCmp50 + -0.11393239206883 * Complain0 + -0.18422159910382 * 
HigherEducationBinary0 ;
665547    +   H1x1_2  = H1x1_2  +     -0.6690011671322 * AcceptedCmp10
665548    +          +     0.30944418540454 * AcceptedCmp20  +     0.58989055832198 *
665549    +        AcceptedCmp30  +    -0.11349554378017 * AcceptedCmp40
665550    +          +     0.17747537507545 * AcceptedCmp50  +     0.31141201787728 *
665551    +        Complain0  +    -0.14665102087088 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.6690011671322 * AcceptedCmp10 + 0.30944418540454 * 
AcceptedCmp20 + 0.58989055832198 * AcceptedCmp30 + -0.11349554378017 * AcceptedCmp40 + 
0.17747537507545 * AcceptedCmp50 + 0.31141201787728 * Complain0 + -0.14665102087088 * 
HigherEducationBinary0 ;
665552    +   H1x1_3  = H1x1_3  +    -0.37718551551154 * AcceptedCmp10
665553    +          +    -0.95419836616858 * AcceptedCmp20  +    -1.07782642598822 *
665554    +        AcceptedCmp30  +    -0.36181507758379 * AcceptedCmp40
665555    +          +    -0.20579221441057 * AcceptedCmp50  +     -0.2862570173476 *
665556    +        Complain0  +     0.42095042003574 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.37718551551154 * AcceptedCmp10 + -0.95419836616858 
* AcceptedCmp20 + -1.07782642598822 * AcceptedCmp30 + -0.36181507758379 * AcceptedCmp40 + 
-0.20579221441057 * AcceptedCmp50 + -0.2862570173476 * Complain0 + 0.42095042003574 * 
HigherEducationBinary0 ;
665557    +   H1x1_4  = H1x1_4  +     0.76282838117383 * AcceptedCmp10
665558    +          +     0.17657215690894 * AcceptedCmp20  +     0.06936093547655 *
665559    +        AcceptedCmp30  +    -0.31222684620157 * AcceptedCmp40
665560    +          +     0.35916828202502 * AcceptedCmp50  +     0.15464859425769 *
665561    +        Complain0  +    -0.12780871374988 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + 0.76282838117383 * AcceptedCmp10 + 0.17657215690894 * 
AcceptedCmp20 + 0.06936093547655 * AcceptedCmp30 + -0.31222684620157 * AcceptedCmp40 + 
0.35916828202502 * AcceptedCmp50 + 0.15464859425769 * Complain0 + -0.12780871374988 * 
HigherEducationBinary0 ;
665562    +   H1x1_5  = H1x1_5  +      0.0863832283968 * AcceptedCmp10
665563    +          +    -0.01478152334234 * AcceptedCmp20  +    -0.25793605794945 *
665564    +        AcceptedCmp30  +     0.75328991260718 * AcceptedCmp40
665565    +          +     0.43869592545355 * AcceptedCmp50  +    -0.18444801256895 *
665566    +        Complain0  +    -0.18540568245616 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + 0.0863832283968 * AcceptedCmp10 + -0.01478152334234 * 
AcceptedCmp20 + -0.25793605794945 * AcceptedCmp30 + 0.75328991260718 * AcceptedCmp40 + 
0.43869592545355 * AcceptedCmp50 + -0.18444801256895 * Complain0 + -0.18540568245616 * 
HigherEducationBinary0 ;
665567    +   H1x1_6  = H1x1_6  +    -0.05476883960444 * AcceptedCmp10
665568    +          +    -0.30796660956747 * AcceptedCmp20  +    -0.15332998700386 *
665569    +        AcceptedCmp30  +     0.07190305484507 * AcceptedCmp40
665570    +          +    -0.19344551087023 * AcceptedCmp50  +    -0.01671794402922 *
665571    +        Complain0  +      0.4224003744836 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + -0.05476883960444 * AcceptedCmp10 + -0.30796660956747 
* AcceptedCmp20 + -0.15332998700386 * AcceptedCmp30 + 0.07190305484507 * AcceptedCmp40 + 
-0.19344551087023 * AcceptedCmp50 + -0.01671794402922 * Complain0 + 0.4224003744836 * 
HigherEducationBinary0 ;
665572    +   H1x1_1  = H1x1_1  +     0.06740641383122 * Education2n_Cycle
665573    +          +      0.0427985447056 * EducationBasic  +     0.38043688251433 *
665574    +        EducationGraduation  +     0.07595631354847 * EducationMaster
665575    +          +     0.24583509957712 * Marital_StatusDivorced
665576    +          +    -0.22681931588361 * Marital_StatusMarried
665577    +          +    -0.12924106229536 * Marital_StatusSingle
665578    +          +     -0.2262058185403 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.06740641383122 * Education2n_Cycle + 0.0427985447056 
* EducationBasic + 0.38043688251433 * EducationGraduation + 0.07595631354847 * EducationMaster 
+ 0.24583509957712 * Marital_StatusDivorced + -0.22681931588361 * Marital_StatusMarried + 
-0.12924106229536 * Marital_StatusSingle + -0.2262058185403 * Marital_StatusTogether ;
665579    +   H1x1_2  = H1x1_2  +    -0.13120690973481 * Education2n_Cycle
665580    +          +     0.37925506295244 * EducationBasic  +     0.31784700588218 *
665581    +        EducationGraduation  +     0.23015089246655 * EducationMaster
665582    +          +    -0.12585334311068 * Marital_StatusDivorced
665583    +          +    -0.20835502467207 * Marital_StatusMarried
665584    +          +    -0.13839534449368 * Marital_StatusSingle
665585    +          +     0.64317572477668 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.13120690973481 * Education2n_Cycle + 
0.37925506295244 * EducationBasic + 0.31784700588218 * EducationGraduation + 0.23015089246655 
* EducationMaster + -0.12585334311068 * Marital_StatusDivorced + -0.20835502467207 * 
Marital_StatusMarried + -0.13839534449368 * Marital_StatusSingle + 0.64317572477668 * 
Marital_StatusTogether ;
665586    +   H1x1_3  = H1x1_3  +     0.32305785926236 * Education2n_Cycle
665587    +          +     0.23464353160373 * EducationBasic  +    -0.73832644067678 *
665588    +        EducationGraduation  +    -0.03608560158257 * EducationMaster
665589    +          +     0.35106363238113 * Marital_StatusDivorced
665590    +          +     -1.3414808583918 * Marital_StatusMarried
665591    +          +     1.40835320798486 * Marital_StatusSingle
665592    +          +    -1.26805917396788 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.32305785926236 * Education2n_Cycle + 
0.23464353160373 * EducationBasic + -0.73832644067678 * EducationGraduation + 
-0.03608560158257 * EducationMaster + 0.35106363238113 * Marital_StatusDivorced + 
-1.3414808583918 * Marital_StatusMarried + 1.40835320798486 * Marital_StatusSingle + 
-1.26805917396788 * Marital_StatusTogether ;
665593    +   H1x1_4  = H1x1_4  +    -0.14516593990466 * Education2n_Cycle
665594    +          +     0.21457892528906 * EducationBasic  +      0.3693312496431 *
665595    +        EducationGraduation  +      0.1746658332011 * EducationMaster
665596    +          +     0.48174546958393 * Marital_StatusDivorced
665597    +          +    -0.41416978858191 * Marital_StatusMarried
665598    +          +    -0.23376801546265 * Marital_StatusSingle
665599    +          +    -0.40569257078897 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.14516593990466 * Education2n_Cycle + 
0.21457892528906 * EducationBasic + 0.3693312496431 * EducationGraduation + 0.1746658332011 * 
EducationMaster + 0.48174546958393 * Marital_StatusDivorced + -0.41416978858191 * 
Marital_StatusMarried + -0.23376801546265 * Marital_StatusSingle + -0.40569257078897 * 
Marital_StatusTogether ;
665600    +   H1x1_5  = H1x1_5  +    -0.00489214718621 * Education2n_Cycle
665601    +          +     0.04788059649714 * EducationBasic  +      -0.479003778409 *
665602    +        EducationGraduation  +     0.68875064631577 * EducationMaster
665603    +          +    -0.67557643774246 * Marital_StatusDivorced
665604    +          +     1.63844045917367 * Marital_StatusMarried
665605    +          +    -0.70320960247699 * Marital_StatusSingle
665606    +          +     1.26350112628909 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.00489214718621 * Education2n_Cycle + 
0.04788059649714 * EducationBasic + -0.479003778409 * EducationGraduation + 0.68875064631577 * 
EducationMaster + -0.67557643774246 * Marital_StatusDivorced + 1.63844045917367 * 
Marital_StatusMarried + -0.70320960247699 * Marital_StatusSingle + 1.26350112628909 * 
Marital_StatusTogether ;
665607    +   H1x1_6  = H1x1_6  +     0.38566123849432 * Education2n_Cycle
665608    +          +    -0.48006357411447 * EducationBasic  +     0.06594567975069 *
665609    +        EducationGraduation  +    -0.68011360002443 * EducationMaster
665610    +          +    -0.11371453086883 * Marital_StatusDivorced
665611    +          +    -0.34226997176291 * Marital_StatusMarried
665612    +          +    -1.01568676685754 * Marital_StatusSingle
665613    +          +    -0.07673228755579 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + 0.38566123849432 * Education2n_Cycle + 
-0.48006357411447 * EducationBasic + 0.06594567975069 * EducationGraduation + 
-0.68011360002443 * EducationMaster + -0.11371453086883 * Marital_StatusDivorced + 
-0.34226997176291 * Marital_StatusMarried + -1.01568676685754 * Marital_StatusSingle + 
-0.07673228755579 * Marital_StatusTogether ;
665614    +   H1x1_1  =    -0.13665586104906 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.13665586104906 + H1x1_1 ;
665615    +   H1x1_2  =    -1.74128345271319 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -1.74128345271319 + H1x1_2 ;
665616    +   H1x1_3  =    -0.38226400326342 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.38226400326342 + H1x1_3 ;
665617    +   H1x1_4  =    -0.64652756521333 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -0.64652756521333 + H1x1_4 ;
665618    +   H1x1_5  =     0.89555568414722 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 0.89555568414722 + H1x1_5 ;
665619    +   H1x1_6  =    -0.28536788363505 + H1x1_6 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = -0.28536788363505 + H1x1_6 ;
665620    +   H1x1_7  = 0;
MPRINT(EM_DIAGRAM):   H1x1_7 = 0;
665621    +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 , H1x1_7
665622    +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 , 
H1x1_7 );
665623    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
665624    +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
665625    +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
665626    +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
665627    +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
665628    +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
665629    +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
665630    +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
665631    +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
665632    +   H1x1_5  = EXP(H1x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_5 = EXP(H1x1_5 - _MAX_);
665633    +   _SUM_ = _SUM_ + H1x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_5 ;
665634    +   H1x1_6  = EXP(H1x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_6 = EXP(H1x1_6 - _MAX_);
665635    +   _SUM_ = _SUM_ + H1x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_6 ;
665636    +   H1x1_7  = EXP(H1x1_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_7 = EXP(H1x1_7 - _MAX_);
665637    +   _SUM_ = _SUM_ + H1x1_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_7 ;
665638    +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
665639    +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
665640    +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
665641    +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
665642    +   H1x1_5  = H1x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 / _SUM_;
665643    +   H1x1_6  = H1x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 / _SUM_;
665644    +   H1x1_7  = H1x1_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_7 = H1x1_7 / _SUM_;
665645    +END;
MPRINT(EM_DIAGRAM):   END;
665646    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
665647    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
665648    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
665649    +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
665650    +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
665651    +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
665652    +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
665653    +   H1x1_7  = .;
MPRINT(EM_DIAGRAM):   H1x1_7 = .;
665654    +END;
MPRINT(EM_DIAGRAM):   END;
665655    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
665656    +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
665657    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
665658    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
665659    +   H1x2_1  =    -0.46863593010465 * S_AcceptedCmpTotal
665660    +          +     0.76938995153422 * S_Age  +    -0.10870665325086 * S_Frq
665661    +          +    -0.01767709917897 * S_Income  +    -0.06564852978687 *
665662    +        S_Kidhome  +     1.53975855599943 * S_Mnt  +     0.14885556549813 *
665663    +        S_MntFishProducts  +     -0.3427211596875 * S_MntFruits
665664    +          +     1.82311511422571 * S_MntGoldProds  +     1.16814585484266 *
665665    +        S_MntMeatProducts  +    -0.03210183211362 * S_MntSweetProducts
665666    +          +     0.21048598967441 * S_MntWines  +    -1.43075224286158 *
665667    +        S_MonthsAsCustomer  +     0.17264791017938 * S_NumCatalogPurchases
665668    +          +    -0.87259051567474 * S_NumDealsPurchases
665669    +          +    -0.36454149529139 * S_NumDistPurchases
665670    +          +     0.12447759925061 * S_NumStorePurchases
665671    +          +    -1.08133487947367 * S_NumWebPurchases
665672    +          +    -0.49882157745454 * S_NumWebVisitsMonth
665673    +          +    -1.37163643041927 * S_RFMstat  +    -2.02270778627266 *
665674    +        S_RMntFrq  +    -0.01174101172444 * S_Recency
665675    +          +     1.37307999964517 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -0.46863593010465 * S_AcceptedCmpTotal + 0.76938995153422 * 
S_Age + -0.10870665325086 * S_Frq + -0.01767709917897 * S_Income + -0.06564852978687 * 
S_Kidhome + 1.53975855599943 * S_Mnt + 0.14885556549813 * S_MntFishProducts + -0.3427211596875 
* S_MntFruits + 1.82311511422571 * S_MntGoldProds + 1.16814585484266 * S_MntMeatProducts + 
-0.03210183211362 * S_MntSweetProducts + 0.21048598967441 * S_MntWines + -1.43075224286158 * 
S_MonthsAsCustomer + 0.17264791017938 * S_NumCatalogPurchases + -0.87259051567474 * 
S_NumDealsPurchases + -0.36454149529139 * S_NumDistPurchases + 0.12447759925061 * 
S_NumStorePurchases + -1.08133487947367 * S_NumWebPurchases + -0.49882157745454 * 
S_NumWebVisitsMonth + -1.37163643041927 * S_RFMstat + -2.02270778627266 * S_RMntFrq + 
-0.01174101172444 * S_Recency + 1.37307999964517 * S_Teenhome ;
665676    +   H1x2_2  =     0.31979674377303 * S_AcceptedCmpTotal
665677    +          +    -1.13516841608912 * S_Age  +     1.57640145941914 * S_Frq
665678    +          +    -0.58468039509557 * S_Income  +    -1.78015996883174 *
665679    +        S_Kidhome  +     0.51311311640127 * S_Mnt  +     0.07011815519915 *
665680    +        S_MntFishProducts  +     0.73204832291164 * S_MntFruits
665681    +          +     1.50837189353633 * S_MntGoldProds  +     1.39487443576743 *
665682    +        S_MntMeatProducts  +      0.6943398196475 * S_MntSweetProducts
665683    +          +    -0.36693028595681 * S_MntWines  +     0.86802033237442 *
665684    +        S_MonthsAsCustomer  +     0.02384797538091 * S_NumCatalogPurchases
665685    +          +     2.23121497416403 * S_NumDealsPurchases
665686    +          +    -0.48674842191071 * S_NumDistPurchases
665687    +          +     1.77510728607544 * S_NumStorePurchases
665688    +          +     0.14647433155436 * S_NumWebPurchases
665689    +          +    -0.95892686924419 * S_NumWebVisitsMonth
665690    +          +    -0.26496935918704 * S_RFMstat  +     2.48765485222223 *
665691    +        S_RMntFrq  +     2.46497777428475 * S_Recency
665692    +          +    -0.62872033383484 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 0.31979674377303 * S_AcceptedCmpTotal + -1.13516841608912 * 
S_Age + 1.57640145941914 * S_Frq + -0.58468039509557 * S_Income + -1.78015996883174 * 
S_Kidhome + 0.51311311640127 * S_Mnt + 0.07011815519915 * S_MntFishProducts + 0.73204832291164 
* S_MntFruits + 1.50837189353633 * S_MntGoldProds + 1.39487443576743 * S_MntMeatProducts + 
0.6943398196475 * S_MntSweetProducts + -0.36693028595681 * S_MntWines + 0.86802033237442 * 
S_MonthsAsCustomer + 0.02384797538091 * S_NumCatalogPurchases + 2.23121497416403 * 
S_NumDealsPurchases + -0.48674842191071 * S_NumDistPurchases + 1.77510728607544 * 
S_NumStorePurchases + 0.14647433155436 * S_NumWebPurchases + -0.95892686924419 * 
S_NumWebVisitsMonth + -0.26496935918704 * S_RFMstat + 2.48765485222223 * S_RMntFrq + 
2.46497777428475 * S_Recency + -0.62872033383484 * S_Teenhome ;
665693    +   H1x2_3  =    -0.31142826583944 * S_AcceptedCmpTotal
665694    +          +    -1.14828049895929 * S_Age  +    -0.54227584627485 * S_Frq
665695    +          +     0.26826674711688 * S_Income  +     0.17643820666347 *
665696    +        S_Kidhome  +    -0.12427430981043 * S_Mnt  +     0.18056887427376 *
665697    +        S_MntFishProducts  +    -0.63010248821544 * S_MntFruits
665698    +          +    -0.81391687529252 * S_MntGoldProds  +    -1.12306166734361 *
665699    +        S_MntMeatProducts  +     0.92339010601965 * S_MntSweetProducts
665700    +          +    -2.05510990050543 * S_MntWines  +    -2.02060586903244 *
665701    +        S_MonthsAsCustomer  +     0.98841836752178 * S_NumCatalogPurchases
665702    +          +     0.14338855349611 * S_NumDealsPurchases
665703    +          +    -2.21071010829235 * S_NumDistPurchases
665704    +          +    -0.21795889348002 * S_NumStorePurchases
665705    +          +     1.98825087883535 * S_NumWebPurchases
665706    +          +     1.02482442531149 * S_NumWebVisitsMonth
665707    +          +    -0.47662143614905 * S_RFMstat  +    -0.17167385440535 *
665708    +        S_RMntFrq  +     -1.0288777281766 * S_Recency
665709    +          +    -0.10646747275734 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.31142826583944 * S_AcceptedCmpTotal + -1.14828049895929 * 
S_Age + -0.54227584627485 * S_Frq + 0.26826674711688 * S_Income + 0.17643820666347 * S_Kidhome 
+ -0.12427430981043 * S_Mnt + 0.18056887427376 * S_MntFishProducts + -0.63010248821544 * 
S_MntFruits + -0.81391687529252 * S_MntGoldProds + -1.12306166734361 * S_MntMeatProducts + 
0.92339010601965 * S_MntSweetProducts + -2.05510990050543 * S_MntWines + -2.02060586903244 * 
S_MonthsAsCustomer + 0.98841836752178 * S_NumCatalogPurchases + 0.14338855349611 * 
S_NumDealsPurchases + -2.21071010829235 * S_NumDistPurchases + -0.21795889348002 * 
S_NumStorePurchases + 1.98825087883535 * S_NumWebPurchases + 1.02482442531149 * 
S_NumWebVisitsMonth + -0.47662143614905 * S_RFMstat + -0.17167385440535 * S_RMntFrq + 
-1.0288777281766 * S_Recency + -0.10646747275734 * S_Teenhome ;
665710    +   H1x2_4  =    -0.40813758620671 * S_AcceptedCmpTotal
665711    +          +     0.16751361466296 * S_Age  +     0.61297021391662 * S_Frq
665712    +          +     0.17708553296763 * S_Income  +    -0.23498000755537 *
665713    +        S_Kidhome  +      0.6863853027948 * S_Mnt  +    -0.43649468589643 *
665714    +        S_MntFishProducts  +    -1.03807059787368 * S_MntFruits
665715    +          +     0.68988160282803 * S_MntGoldProds  +     1.76714128625705 *
665716    +        S_MntMeatProducts  +     1.15458185366826 * S_MntSweetProducts
665717    +          +     0.31267521045306 * S_MntWines  +    -3.18562841805634 *
665718    +        S_MonthsAsCustomer  +     0.15316473812138 * S_NumCatalogPurchases
665719    +          +     0.30041205661012 * S_NumDealsPurchases
665720    +          +    -0.63499849986918 * S_NumDistPurchases
665721    +          +    -0.34155713433714 * S_NumStorePurchases
665722    +          +    -1.14183354933936 * S_NumWebPurchases
665723    +          +    -0.42681980262973 * S_NumWebVisitsMonth
665724    +          +    -0.18777676484111 * S_RFMstat  +      0.2522570278894 *
665725    +        S_RMntFrq  +     1.25852246467612 * S_Recency
665726    +          +     0.63333476238969 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -0.40813758620671 * S_AcceptedCmpTotal + 0.16751361466296 * 
S_Age + 0.61297021391662 * S_Frq + 0.17708553296763 * S_Income + -0.23498000755537 * S_Kidhome 
+ 0.6863853027948 * S_Mnt + -0.43649468589643 * S_MntFishProducts + -1.03807059787368 * 
S_MntFruits + 0.68988160282803 * S_MntGoldProds + 1.76714128625705 * S_MntMeatProducts + 
1.15458185366826 * S_MntSweetProducts + 0.31267521045306 * S_MntWines + -3.18562841805634 * 
S_MonthsAsCustomer + 0.15316473812138 * S_NumCatalogPurchases + 0.30041205661012 * 
S_NumDealsPurchases + -0.63499849986918 * S_NumDistPurchases + -0.34155713433714 * 
S_NumStorePurchases + -1.14183354933936 * S_NumWebPurchases + -0.42681980262973 * 
S_NumWebVisitsMonth + -0.18777676484111 * S_RFMstat + 0.2522570278894 * S_RMntFrq + 
1.25852246467612 * S_Recency + 0.63333476238969 * S_Teenhome ;
665727    +   H1x2_5  =     1.73048436159558 * S_AcceptedCmpTotal
665728    +          +     1.91388487556197 * S_Age  +     0.14880026885923 * S_Frq
665729    +          +      0.5905347897806 * S_Income  +     1.67048168226736 *
665730    +        S_Kidhome  +     0.03869174467752 * S_Mnt  +    -0.71187911364266 *
665731    +        S_MntFishProducts  +     0.93023590693473 * S_MntFruits
665732    +          +     0.22907372790948 * S_MntGoldProds  +    -1.05941282177437 *
665733    +        S_MntMeatProducts  +    -0.73905281508342 * S_MntSweetProducts
665734    +          +     0.04429898588386 * S_MntWines  +    -0.47487263648723 *
665735    +        S_MonthsAsCustomer  +     0.00382111008361 * S_NumCatalogPurchases
665736    +          +    -0.21237915559831 * S_NumDealsPurchases
665737    +          +     0.48256923764182 * S_NumDistPurchases
665738    +          +    -0.45553093140641 * S_NumStorePurchases
665739    +          +      0.5593655963659 * S_NumWebPurchases
665740    +          +     0.27943768691188 * S_NumWebVisitsMonth
665741    +          +     1.94452735574997 * S_RFMstat  +    -0.89811355261154 *
665742    +        S_RMntFrq  +    -1.62796011550484 * S_Recency
665743    +          +     0.60487421956906 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 1.73048436159558 * S_AcceptedCmpTotal + 1.91388487556197 * 
S_Age + 0.14880026885923 * S_Frq + 0.5905347897806 * S_Income + 1.67048168226736 * S_Kidhome + 
0.03869174467752 * S_Mnt + -0.71187911364266 * S_MntFishProducts + 0.93023590693473 * 
S_MntFruits + 0.22907372790948 * S_MntGoldProds + -1.05941282177437 * S_MntMeatProducts + 
-0.73905281508342 * S_MntSweetProducts + 0.04429898588386 * S_MntWines + -0.47487263648723 * 
S_MonthsAsCustomer + 0.00382111008361 * S_NumCatalogPurchases + -0.21237915559831 * 
S_NumDealsPurchases + 0.48256923764182 * S_NumDistPurchases + -0.45553093140641 * 
S_NumStorePurchases + 0.5593655963659 * S_NumWebPurchases + 0.27943768691188 * 
S_NumWebVisitsMonth + 1.94452735574997 * S_RFMstat + -0.89811355261154 * S_RMntFrq + 
-1.62796011550484 * S_Recency + 0.60487421956906 * S_Teenhome ;
665744    +   H1x2_6  =    -0.32010880515459 * S_AcceptedCmpTotal
665745    +          +     0.95304983421791 * S_Age  +      -0.316044010281 * S_Frq
665746    +          +     1.10925678578158 * S_Income  +     1.28019020117471 *
665747    +        S_Kidhome  +     1.02498438668688 * S_Mnt  +     -1.8898236827792 *
665748    +        S_MntFishProducts  +     0.96543971612672 * S_MntFruits
665749    +          +    -0.21422669977227 * S_MntGoldProds  +     -0.0840639948559 *
665750    +        S_MntMeatProducts  +     1.27902687109389 * S_MntSweetProducts
665751    +          +    -1.38957846154598 * S_MntWines  +     0.80004372871482 *
665752    +        S_MonthsAsCustomer  +    -0.19381123279552 * S_NumCatalogPurchases
665753    +          +     2.38967021388062 * S_NumDealsPurchases
665754    +          +    -0.97722398866481 * S_NumDistPurchases
665755    +          +     1.57612333191312 * S_NumStorePurchases
665756    +          +    -0.75968679115983 * S_NumWebPurchases
665757    +          +    -0.64207187757251 * S_NumWebVisitsMonth
665758    +          +     1.06529999122381 * S_RFMstat  +     0.67095385521555 *
665759    +        S_RMntFrq  +     1.71313869798331 * S_Recency
665760    +          +     1.39045686636707 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_6 = -0.32010880515459 * S_AcceptedCmpTotal + 0.95304983421791 * 
S_Age + -0.316044010281 * S_Frq + 1.10925678578158 * S_Income + 1.28019020117471 * S_Kidhome + 
1.02498438668688 * S_Mnt + -1.8898236827792 * S_MntFishProducts + 0.96543971612672 * 
S_MntFruits + -0.21422669977227 * S_MntGoldProds + -0.0840639948559 * S_MntMeatProducts + 
1.27902687109389 * S_MntSweetProducts + -1.38957846154598 * S_MntWines + 0.80004372871482 * 
S_MonthsAsCustomer + -0.19381123279552 * S_NumCatalogPurchases + 2.38967021388062 * 
S_NumDealsPurchases + -0.97722398866481 * S_NumDistPurchases + 1.57612333191312 * 
S_NumStorePurchases + -0.75968679115983 * S_NumWebPurchases + -0.64207187757251 * 
S_NumWebVisitsMonth + 1.06529999122381 * S_RFMstat + 0.67095385521555 * S_RMntFrq + 
1.71313869798331 * S_Recency + 1.39045686636707 * S_Teenhome ;
665761    +   H1x2_1  = H1x2_1  +    -1.32125124093028 * AcceptedCmp10
665762    +          +    -0.61219063588492 * AcceptedCmp20  +     1.20821214973577 *
665763    +        AcceptedCmp30  +    -1.13548727550981 * AcceptedCmp40
665764    +          +     0.04405769197194 * AcceptedCmp50  +      0.7940658605271 *
665765    +        Complain0  +     1.05933486404834 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -1.32125124093028 * AcceptedCmp10 + -0.61219063588492 
* AcceptedCmp20 + 1.20821214973577 * AcceptedCmp30 + -1.13548727550981 * AcceptedCmp40 + 
0.04405769197194 * AcceptedCmp50 + 0.7940658605271 * Complain0 + 1.05933486404834 * 
HigherEducationBinary0 ;
665766    +   H1x2_2  = H1x2_2  +     1.56313777120806 * AcceptedCmp10
665767    +          +    -1.12997680537456 * AcceptedCmp20  +     1.19262470365504 *
665768    +        AcceptedCmp30  +    -0.98995493161689 * AcceptedCmp40
665769    +          +      -1.827141957557 * AcceptedCmp50  +    -0.43809188233899 *
665770    +        Complain0  +      -0.627000653672 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 1.56313777120806 * AcceptedCmp10 + -1.12997680537456 * 
AcceptedCmp20 + 1.19262470365504 * AcceptedCmp30 + -0.98995493161689 * AcceptedCmp40 + 
-1.827141957557 * AcceptedCmp50 + -0.43809188233899 * Complain0 + -0.627000653672 * 
HigherEducationBinary0 ;
665771    +   H1x2_3  = H1x2_3  +     1.32174755827017 * AcceptedCmp10
665772    +          +     1.00086479754098 * AcceptedCmp20  +      0.4636133487385 *
665773    +        AcceptedCmp30  +     1.34878553883758 * AcceptedCmp40
665774    +          +    -2.36241584924476 * AcceptedCmp50  +       1.082421071431 *
665775    +        Complain0  +    -0.32514144517436 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 1.32174755827017 * AcceptedCmp10 + 1.00086479754098 * 
AcceptedCmp20 + 0.4636133487385 * AcceptedCmp30 + 1.34878553883758 * AcceptedCmp40 + 
-2.36241584924476 * AcceptedCmp50 + 1.082421071431 * Complain0 + -0.32514144517436 * 
HigherEducationBinary0 ;
665776    +   H1x2_4  = H1x2_4  +     0.39556775796131 * AcceptedCmp10
665777    +          +     0.06457727211285 * AcceptedCmp20  +    -1.44632749800655 *
665778    +        AcceptedCmp30  +     1.20294678514383 * AcceptedCmp40
665779    +          +    -0.01594330886358 * AcceptedCmp50  +    -2.06895895180485 *
665780    +        Complain0  +    -0.01374012569775 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 0.39556775796131 * AcceptedCmp10 + 0.06457727211285 * 
AcceptedCmp20 + -1.44632749800655 * AcceptedCmp30 + 1.20294678514383 * AcceptedCmp40 + 
-0.01594330886358 * AcceptedCmp50 + -2.06895895180485 * Complain0 + -0.01374012569775 * 
HigherEducationBinary0 ;
665781    +   H1x2_5  = H1x2_5  +     1.11945933535638 * AcceptedCmp10
665782    +          +     0.26383973979566 * AcceptedCmp20  +    -0.40426240061746 *
665783    +        AcceptedCmp30  +     1.46916781894719 * AcceptedCmp40
665784    +          +     0.26827715088644 * AcceptedCmp50  +     1.50074465469998 *
665785    +        Complain0  +     -1.0626185000486 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 1.11945933535638 * AcceptedCmp10 + 0.26383973979566 * 
AcceptedCmp20 + -0.40426240061746 * AcceptedCmp30 + 1.46916781894719 * AcceptedCmp40 + 
0.26827715088644 * AcceptedCmp50 + 1.50074465469998 * Complain0 + -1.0626185000486 * 
HigherEducationBinary0 ;
665786    +   H1x2_6  = H1x2_6  +    -0.87625232174239 * AcceptedCmp10
665787    +          +     0.72228047975642 * AcceptedCmp20  +     1.34904015028355 *
665788    +        AcceptedCmp30  +     1.55639496207852 * AcceptedCmp40
665789    +          +    -0.98741935337746 * AcceptedCmp50  +     0.99421811137074 *
665790    +        Complain0  +    -1.69180618270074 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 + -0.87625232174239 * AcceptedCmp10 + 0.72228047975642 * 
AcceptedCmp20 + 1.34904015028355 * AcceptedCmp30 + 1.55639496207852 * AcceptedCmp40 + 
-0.98741935337746 * AcceptedCmp50 + 0.99421811137074 * Complain0 + -1.69180618270074 * 
HigherEducationBinary0 ;
665791    +   H1x2_1  = H1x2_1  +    -0.17034446979478 * Education2n_Cycle
665792    +          +    -0.75872196172063 * EducationBasic  +     0.44107677662894 *
665793    +        EducationGraduation  +      0.1073450284316 * EducationMaster
665794    +          +     0.96470902298142 * Marital_StatusDivorced
665795    +          +     0.94805959268314 * Marital_StatusMarried
665796    +          +     -0.6523948769616 * Marital_StatusSingle
665797    +          +     0.07557344719737 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.17034446979478 * Education2n_Cycle + 
-0.75872196172063 * EducationBasic + 0.44107677662894 * EducationGraduation + 0.1073450284316 
* EducationMaster + 0.96470902298142 * Marital_StatusDivorced + 0.94805959268314 * 
Marital_StatusMarried + -0.6523948769616 * Marital_StatusSingle + 0.07557344719737 * 
Marital_StatusTogether ;
665798    +   H1x2_2  = H1x2_2  +    -0.42515060901662 * Education2n_Cycle
665799    +          +    -1.05213629639837 * EducationBasic  +     0.72603871617959 *
665800    +        EducationGraduation  +    -1.34927753306064 * EducationMaster
665801    +          +      0.3918249505531 * Marital_StatusDivorced
665802    +          +    -0.00968091979586 * Marital_StatusMarried
665803    +          +     0.84615379885071 * Marital_StatusSingle
665804    +          +     0.34817324570682 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -0.42515060901662 * Education2n_Cycle + 
-1.05213629639837 * EducationBasic + 0.72603871617959 * EducationGraduation + 
-1.34927753306064 * EducationMaster + 0.3918249505531 * Marital_StatusDivorced + 
-0.00968091979586 * Marital_StatusMarried + 0.84615379885071 * Marital_StatusSingle + 
0.34817324570682 * Marital_StatusTogether ;
665805    +   H1x2_3  = H1x2_3  +    -0.31002362860852 * Education2n_Cycle
665806    +          +     1.40744525716089 * EducationBasic  +     2.06403096539358 *
665807    +        EducationGraduation  +     -0.8672743321499 * EducationMaster
665808    +          +     1.14335160313191 * Marital_StatusDivorced
665809    +          +     0.50580517192175 * Marital_StatusMarried
665810    +          +     0.17264295020921 * Marital_StatusSingle
665811    +          +    -0.58193119255736 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + -0.31002362860852 * Education2n_Cycle + 
1.40744525716089 * EducationBasic + 2.06403096539358 * EducationGraduation + -0.8672743321499 
* EducationMaster + 1.14335160313191 * Marital_StatusDivorced + 0.50580517192175 * 
Marital_StatusMarried + 0.17264295020921 * Marital_StatusSingle + -0.58193119255736 * 
Marital_StatusTogether ;
665812    +   H1x2_4  = H1x2_4  +     0.55057637605468 * Education2n_Cycle
665813    +          +    -0.73070803276142 * EducationBasic  +     0.40424625808481 *
665814    +        EducationGraduation  +     1.95818378342783 * EducationMaster
665815    +          +    -0.11238504444225 * Marital_StatusDivorced
665816    +          +    -0.81348274043749 * Marital_StatusMarried
665817    +          +     0.46075415610001 * Marital_StatusSingle
665818    +          +    -0.17552649817722 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 0.55057637605468 * Education2n_Cycle + 
-0.73070803276142 * EducationBasic + 0.40424625808481 * EducationGraduation + 1.95818378342783 
* EducationMaster + -0.11238504444225 * Marital_StatusDivorced + -0.81348274043749 * 
Marital_StatusMarried + 0.46075415610001 * Marital_StatusSingle + -0.17552649817722 * 
Marital_StatusTogether ;
665819    +   H1x2_5  = H1x2_5  +     0.43341125564688 * Education2n_Cycle
665820    +          +     2.81958018976644 * EducationBasic  +     0.28773362443315 *
665821    +        EducationGraduation  +     0.08396135672504 * EducationMaster
665822    +          +    -0.46342068701431 * Marital_StatusDivorced
665823    +          +    -0.41667845270204 * Marital_StatusMarried
665824    +          +    -0.47166707496281 * Marital_StatusSingle
665825    +          +     0.54110155717306 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 0.43341125564688 * Education2n_Cycle + 
2.81958018976644 * EducationBasic + 0.28773362443315 * EducationGraduation + 0.08396135672504 
* EducationMaster + -0.46342068701431 * Marital_StatusDivorced + -0.41667845270204 * 
Marital_StatusMarried + -0.47166707496281 * Marital_StatusSingle + 0.54110155717306 * 
Marital_StatusTogether ;
665826    +   H1x2_6  = H1x2_6  +    -0.27163102711307 * Education2n_Cycle
665827    +          +    -0.04052143781957 * EducationBasic  +     0.97902549344774 *
665828    +        EducationGraduation  +     0.36656103863186 * EducationMaster
665829    +          +    -0.45376613787812 * Marital_StatusDivorced
665830    +          +     0.01337046049801 * Marital_StatusMarried
665831    +          +    -0.92811489484121 * Marital_StatusSingle
665832    +          +     1.52402650450634 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 + -0.27163102711307 * Education2n_Cycle + 
-0.04052143781957 * EducationBasic + 0.97902549344774 * EducationGraduation + 0.36656103863186 
* EducationMaster + -0.45376613787812 * Marital_StatusDivorced + 0.01337046049801 * 
Marital_StatusMarried + -0.92811489484121 * Marital_StatusSingle + 1.52402650450634 * 
Marital_StatusTogether ;
665833    +   H1x2_1  =     0.27200642200874 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.27200642200874 + H1x2_1 ;
665834    +   H1x2_2  =     0.52117161047058 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 0.52117161047058 + H1x2_2 ;
665835    +   H1x2_3  =    -1.04763461279984 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -1.04763461279984 + H1x2_3 ;
665836    +   H1x2_4  =     0.10516307959318 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 0.10516307959318 + H1x2_4 ;
665837    +   H1x2_5  =     1.24237093160919 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 1.24237093160919 + H1x2_5 ;
665838    +   H1x2_6  =    -0.57977518763852 + H1x2_6 ;
MPRINT(EM_DIAGRAM):   H1x2_6 = -0.57977518763852 + H1x2_6 ;
665839    +   H1x2_7  = 0;
MPRINT(EM_DIAGRAM):   H1x2_7 = 0;
665840    +   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 , H1x2_7
665841    +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 , 
H1x2_7 );
665842    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
665843    +   H1x2_1  = EXP(H1x2_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_1 = EXP(H1x2_1 - _MAX_);
665844    +   _SUM_ = _SUM_ + H1x2_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_1 ;
665845    +   H1x2_2  = EXP(H1x2_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_2 = EXP(H1x2_2 - _MAX_);
665846    +   _SUM_ = _SUM_ + H1x2_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_2 ;
665847    +   H1x2_3  = EXP(H1x2_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_3 = EXP(H1x2_3 - _MAX_);
665848    +   _SUM_ = _SUM_ + H1x2_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_3 ;
665849    +   H1x2_4  = EXP(H1x2_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_4 = EXP(H1x2_4 - _MAX_);
665850    +   _SUM_ = _SUM_ + H1x2_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_4 ;
665851    +   H1x2_5  = EXP(H1x2_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_5 = EXP(H1x2_5 - _MAX_);
665852    +   _SUM_ = _SUM_ + H1x2_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_5 ;
665853    +   H1x2_6  = EXP(H1x2_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_6 = EXP(H1x2_6 - _MAX_);
665854    +   _SUM_ = _SUM_ + H1x2_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_6 ;
665855    +   H1x2_7  = EXP(H1x2_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_7 = EXP(H1x2_7 - _MAX_);
665856    +   _SUM_ = _SUM_ + H1x2_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_7 ;
665857    +   H1x2_1  = H1x2_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 / _SUM_;
665858    +   H1x2_2  = H1x2_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 / _SUM_;
665859    +   H1x2_3  = H1x2_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 / _SUM_;
665860    +   H1x2_4  = H1x2_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 / _SUM_;
665861    +   H1x2_5  = H1x2_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 / _SUM_;
665862    +   H1x2_6  = H1x2_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 / _SUM_;
665863    +   H1x2_7  = H1x2_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_7 = H1x2_7 / _SUM_;
665864    +END;
MPRINT(EM_DIAGRAM):   END;
665865    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
665866    +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
665867    +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
665868    +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
665869    +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
665870    +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
665871    +   H1x2_6  = .;
MPRINT(EM_DIAGRAM):   H1x2_6 = .;
665872    +   H1x2_7  = .;
MPRINT(EM_DIAGRAM):   H1x2_7 = .;
665873    +END;
MPRINT(EM_DIAGRAM):   END;
665874    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
665875    +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
665876    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
665877    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
665878    +   H2x1_1  =     3.19986933046591 * H1x1_1  +    -0.53665634063887 * H1x1_2
665879    +          +     1.71172628690017 * H1x1_3  +    -1.33944402954134 * H1x1_4
665880    +          +    -1.93533827156845 * H1x1_5  +    -0.85772802964317 * H1x1_6
665881    +          +     0.60984669129006 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 3.19986933046591 * H1x1_1 + -0.53665634063887 * H1x1_2 + 
1.71172628690017 * H1x1_3 + -1.33944402954134 * H1x1_4 + -1.93533827156845 * H1x1_5 + 
-0.85772802964317 * H1x1_6 + 0.60984669129006 * H1x1_7 ;
665882    +   H2x1_2  =     -2.1883484075031 * H1x1_1  +     0.17578635446135 * H1x1_2
665883    +          +    -1.79384950890077 * H1x1_3  +     0.88942614754722 * H1x1_4
665884    +          +     0.41077752133457 * H1x1_5  +       0.509832853125 * H1x1_6
665885    +          +    -0.28121910805072 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -2.1883484075031 * H1x1_1 + 0.17578635446135 * H1x1_2 + 
-1.79384950890077 * H1x1_3 + 0.88942614754722 * H1x1_4 + 0.41077752133457 * H1x1_5 + 
0.509832853125 * H1x1_6 + -0.28121910805072 * H1x1_7 ;
665886    +   H2x1_3  =     0.86281981700921 * H1x1_1  +    -1.15482345233328 * H1x1_2
665887    +          +     0.64743938802141 * H1x1_3  +     1.08117298211616 * H1x1_4
665888    +          +      -0.363297480437 * H1x1_5  +    -1.58703254226713 * H1x1_6
665889    +          +     0.54468402771449 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = 0.86281981700921 * H1x1_1 + -1.15482345233328 * H1x1_2 + 
0.64743938802141 * H1x1_3 + 1.08117298211616 * H1x1_4 + -0.363297480437 * H1x1_5 + 
-1.58703254226713 * H1x1_6 + 0.54468402771449 * H1x1_7 ;
665890    +   H2x1_4  =    -0.43420906601647 * H1x1_1  +     0.36485369627974 * H1x1_2
665891    +          +    -2.42315183886716 * H1x1_3  +     0.22337896770247 * H1x1_4
665892    +          +    -0.65684369622605 * H1x1_5  +     0.25211011207532 * H1x1_6
665893    +          +     0.16704425645668 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = -0.43420906601647 * H1x1_1 + 0.36485369627974 * H1x1_2 + 
-2.42315183886716 * H1x1_3 + 0.22337896770247 * H1x1_4 + -0.65684369622605 * H1x1_5 + 
0.25211011207532 * H1x1_6 + 0.16704425645668 * H1x1_7 ;
665894    +   H2x1_5  =     0.61083333511105 * H1x1_1  +     1.11038871398931 * H1x1_2
665895    +          +      0.4617674661653 * H1x1_3  +    -0.42039958365963 * H1x1_4
665896    +          +    -1.37408000010678 * H1x1_5  +     0.03897439094411 * H1x1_6
665897    +          +    -0.82592861674077 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = 0.61083333511105 * H1x1_1 + 1.11038871398931 * H1x1_2 + 
0.4617674661653 * H1x1_3 + -0.42039958365963 * H1x1_4 + -1.37408000010678 * H1x1_5 + 
0.03897439094411 * H1x1_6 + -0.82592861674077 * H1x1_7 ;
665898    +   H2x1_6  =     1.30877201101082 * H1x1_1  +     1.55143256487324 * H1x1_2
665899    +          +    -1.20237741381937 * H1x1_3  +       2.394122059946 * H1x1_4
665900    +          +     1.83804290225468 * H1x1_5  +     0.83132818010396 * H1x1_6
665901    +          +     1.18399340483001 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = 1.30877201101082 * H1x1_1 + 1.55143256487324 * H1x1_2 + 
-1.20237741381937 * H1x1_3 + 2.394122059946 * H1x1_4 + 1.83804290225468 * H1x1_5 + 
0.83132818010396 * H1x1_6 + 1.18399340483001 * H1x1_7 ;
665902    +   H2x1_1  = H2x1_1  +    -2.41276052972753 * H1x2_1
665903    +          +     0.38601054263899 * H1x2_2  +     0.54498789581044 * H1x2_3
665904    +          +    -0.55304188445569 * H1x2_4  +     0.29484780749868 * H1x2_5
665905    +          +     0.44012580105051 * H1x2_6  +     0.43086375065556 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -2.41276052972753 * H1x2_1 + 0.38601054263899 * H1x2_2 
+ 0.54498789581044 * H1x2_3 + -0.55304188445569 * H1x2_4 + 0.29484780749868 * H1x2_5 + 
0.44012580105051 * H1x2_6 + 0.43086375065556 * H1x2_7 ;
665906    +   H2x1_2  = H2x1_2  +    -1.03173201511154 * H1x2_1
665907    +          +     0.62119574580435 * H1x2_2  +     1.71782745718335 * H1x2_3
665908    +          +     0.05391903933014 * H1x2_4  +     1.52443015967438 * H1x2_5
665909    +          +     0.22301831343286 * H1x2_6  +     0.66204940430171 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + -1.03173201511154 * H1x2_1 + 0.62119574580435 * H1x2_2 
+ 1.71782745718335 * H1x2_3 + 0.05391903933014 * H1x2_4 + 1.52443015967438 * H1x2_5 + 
0.22301831343286 * H1x2_6 + 0.66204940430171 * H1x2_7 ;
665910    +   H2x1_3  = H2x1_3  +     1.37871502475142 * H1x2_1
665911    +          +     0.02099445181492 * H1x2_2  +     0.44720218317742 * H1x2_3
665912    +          +    -1.29625929820096 * H1x2_4  +    -1.29169956389384 * H1x2_5
665913    +          +    -0.21403739905139 * H1x2_6  +    -0.03075946378871 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + 1.37871502475142 * H1x2_1 + 0.02099445181492 * H1x2_2 
+ 0.44720218317742 * H1x2_3 + -1.29625929820096 * H1x2_4 + -1.29169956389384 * H1x2_5 + 
-0.21403739905139 * H1x2_6 + -0.03075946378871 * H1x2_7 ;
665914    +   H2x1_4  = H2x1_4  +     1.94121727472617 * H1x2_1
665915    +          +     0.23207290279299 * H1x2_2  +      0.3162872281134 * H1x2_3
665916    +          +    -0.40199017937523 * H1x2_4  +     0.69294460110289 * H1x2_5
665917    +          +    -1.00758272664059 * H1x2_6  +    -1.41698057960021 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + 1.94121727472617 * H1x2_1 + 0.23207290279299 * H1x2_2 
+ 0.3162872281134 * H1x2_3 + -0.40199017937523 * H1x2_4 + 0.69294460110289 * H1x2_5 + 
-1.00758272664059 * H1x2_6 + -1.41698057960021 * H1x2_7 ;
665918    +   H2x1_5  = H2x1_5  +     1.19546023857185 * H1x2_1
665919    +          +    -1.00266987736442 * H1x2_2  +     0.71838447032796 * H1x2_3
665920    +          +     1.70968347732204 * H1x2_4  +    -0.26894423802892 * H1x2_5
665921    +          +    -0.61655519090213 * H1x2_6  +     2.21931491555405 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + 1.19546023857185 * H1x2_1 + -1.00266987736442 * H1x2_2 
+ 0.71838447032796 * H1x2_3 + 1.70968347732204 * H1x2_4 + -0.26894423802892 * H1x2_5 + 
-0.61655519090213 * H1x2_6 + 2.21931491555405 * H1x2_7 ;
665922    +   H2x1_6  = H2x1_6  +    -0.48559886762231 * H1x2_1
665923    +          +     0.93218274010134 * H1x2_2  +     0.23140948782865 * H1x2_3
665924    +          +     0.72139310562219 * H1x2_4  +    -0.11143939877368 * H1x2_5
665925    +          +     0.74022211257293 * H1x2_6  +      1.0449314568566 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 + -0.48559886762231 * H1x2_1 + 0.93218274010134 * H1x2_2 
+ 0.23140948782865 * H1x2_3 + 0.72139310562219 * H1x2_4 + -0.11143939877368 * H1x2_5 + 
0.74022211257293 * H1x2_6 + 1.0449314568566 * H1x2_7 ;
665926    +   H2x1_1  =     0.42952855003777 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 0.42952855003777 + H2x1_1 ;
665927    +   H2x1_2  =     1.61752083096638 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.61752083096638 + H2x1_2 ;
665928    +   H2x1_3  =    -0.71617788867723 + H2x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -0.71617788867723 + H2x1_3 ;
665929    +   H2x1_4  =     0.39147546708847 + H2x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 0.39147546708847 + H2x1_4 ;
665930    +   H2x1_5  =    -0.56259054185247 + H2x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = -0.56259054185247 + H2x1_5 ;
665931    +   H2x1_6  =     0.31857109159246 + H2x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = 0.31857109159246 + H2x1_6 ;
665932    +   H2x1_7  = 0;
MPRINT(EM_DIAGRAM):   H2x1_7 = 0;
665933    +   _MAX_ = MAX (H2x1_1 , H2x1_2 , H2x1_3 , H2x1_4 , H2x1_5 , H2x1_6 , H2x1_7
665934    +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H2x1_1 , H2x1_2 , H2x1_3 , H2x1_4 , H2x1_5 , H2x1_6 , 
H2x1_7 );
665935    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
665936    +   H2x1_1  = EXP(H2x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_1 = EXP(H2x1_1 - _MAX_);
665937    +   _SUM_ = _SUM_ + H2x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_1 ;
665938    +   H2x1_2  = EXP(H2x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_2 = EXP(H2x1_2 - _MAX_);
665939    +   _SUM_ = _SUM_ + H2x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_2 ;
665940    +   H2x1_3  = EXP(H2x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_3 = EXP(H2x1_3 - _MAX_);
665941    +   _SUM_ = _SUM_ + H2x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_3 ;
665942    +   H2x1_4  = EXP(H2x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_4 = EXP(H2x1_4 - _MAX_);
665943    +   _SUM_ = _SUM_ + H2x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_4 ;
665944    +   H2x1_5  = EXP(H2x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_5 = EXP(H2x1_5 - _MAX_);
665945    +   _SUM_ = _SUM_ + H2x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_5 ;
665946    +   H2x1_6  = EXP(H2x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_6 = EXP(H2x1_6 - _MAX_);
665947    +   _SUM_ = _SUM_ + H2x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_6 ;
665948    +   H2x1_7  = EXP(H2x1_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_7 = EXP(H2x1_7 - _MAX_);
665949    +   _SUM_ = _SUM_ + H2x1_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_7 ;
665950    +   H2x1_1  = H2x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 / _SUM_;
665951    +   H2x1_2  = H2x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 / _SUM_;
665952    +   H2x1_3  = H2x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 / _SUM_;
665953    +   H2x1_4  = H2x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 / _SUM_;
665954    +   H2x1_5  = H2x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 / _SUM_;
665955    +   H2x1_6  = H2x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 / _SUM_;
665956    +   H2x1_7  = H2x1_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_7 = H2x1_7 / _SUM_;
665957    +END;
MPRINT(EM_DIAGRAM):   END;
665958    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
665959    +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
665960    +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
665961    +   H2x1_3  = .;
MPRINT(EM_DIAGRAM):   H2x1_3 = .;
665962    +   H2x1_4  = .;
MPRINT(EM_DIAGRAM):   H2x1_4 = .;
665963    +   H2x1_5  = .;
MPRINT(EM_DIAGRAM):   H2x1_5 = .;
665964    +   H2x1_6  = .;
MPRINT(EM_DIAGRAM):   H2x1_6 = .;
665965    +   H2x1_7  = .;
MPRINT(EM_DIAGRAM):   H2x1_7 = .;
665966    +END;
MPRINT(EM_DIAGRAM):   END;
665967    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
665968    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
665969    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
665970    +
665971    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
665972    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
665973    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
665974    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
665975    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
665976    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
665977    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
665978    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
665979    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
665980    +end;
MPRINT(EM_DIAGRAM):   end;
665981    +else do;
MPRINT(EM_DIAGRAM):   else do;
665982    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
665983    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
665984    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
665985    +   end;
MPRINT(EM_DIAGRAM):   end;
665986    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
665987    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
665988    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
665989    +   end;
MPRINT(EM_DIAGRAM):   end;
665990    +   else do;
MPRINT(EM_DIAGRAM):   else do;
665991    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
665992    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
665993    +   end;
MPRINT(EM_DIAGRAM):   end;
665994    +end;
MPRINT(EM_DIAGRAM):   end;
665995    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
665996    +   P_DepVar1  =     25.2027326018714 * H2x1_1  +    -8.05331379419082 * H2x1_2
665997    +          +     2.64798805383536 * H2x1_3  +    -4.52736775271107 * H2x1_4
665998    +          +     6.71812741736202 * H2x1_5  +    -12.2785047473885 * H2x1_6
665999    +          +    -4.41291972336422 * H2x1_7 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 25.2027326018714 * H2x1_1 + -8.05331379419082 * H2x1_2 + 
2.64798805383536 * H2x1_3 + -4.52736775271107 * H2x1_4 + 6.71812741736202 * H2x1_5 + 
-12.2785047473885 * H2x1_6 + -4.41291972336422 * H2x1_7 ;
666000    +   P_DepVar1  =     1.22134962002326 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 1.22134962002326 + P_DepVar1 ;
666001    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
666002    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
666003    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
666004    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
666005    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
666006    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
666007    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
666008    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
666009    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
666010    +END;
MPRINT(EM_DIAGRAM):   END;
666011    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
666012    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
666013    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
666014    +END;
MPRINT(EM_DIAGRAM):   END;
666015    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
666016    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
666017    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
666018    +END;
MPRINT(EM_DIAGRAM):   END;
666019    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
666020    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
666021    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
666022    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
666023    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
666024    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
666025    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
666026    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
666027    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
666028    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
666029    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
666030    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
666031    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
666032    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
666033    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
666034    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
666035    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
666036    +END;
MPRINT(EM_DIAGRAM):   END;
666037    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
666038    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
666039    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
666040    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
666041     run;

NOTE: DATA STEP view saved on file EMWS8.AUTONEURAL12_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.META_TRAIN.VIEW used (Total process time):
      real time           0.04 seconds
      cpu time            0.06 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
      

MPRINT(EM_DIAGRAM):   quit;
666042     quit;
666043     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
666044     filename emflow
666044   ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural12\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural12\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * AutoNeural12: Scoring VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
666045     *------------------------------------------------------------*;
666046     * AutoNeural12: Scoring VALIDATE data;
666047     *------------------------------------------------------------*;
666048     data EMWS8.AutoNeural12_VALIDATE
666049     / view=EMWS8.AutoNeural12_VALIDATE
666050     ;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural12_VALIDATE / view=EMWS8.AutoNeural12_VALIDATE ;
666051     set EMWS8.Meta_VALIDATE
666052     ;
MPRINT(EM_DIAGRAM):   set EMWS8.Meta_VALIDATE ;
666053     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural12\EMFLOWSCORE.sas.
666054    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
666055    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
666056    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
666057    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
666058    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
666059    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
666060    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
666061    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
666062    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
666063    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
666064    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
666065    +LENGTH _WARN_ $4
666066    +      F_DepVar  $ 12
666067    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
666068    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
666069    +
666070    +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
666071    +
666072    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
666073    +
666074    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
666075    +
666076    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
666077    +
666078    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
666079    +
666080    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
666081    +
666082    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
666083    +
666084    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
666085    +
666086    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
666087    +
666088    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
666089    +
666090    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
666091    +
666092    +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
666093    +
666094    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
666095    +
666096    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
666097    +
666098    +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
666099    +
666100    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
666101    +
666102    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
666103    +
666104    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
666105    +
666106    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
666107    +
666108    +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
666109    +
666110    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
666111    +
666112    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
666113    +
666114    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
666115    +
666116    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
666117    +
666118    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
666119    +
666120    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
666121    +
666122    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
666123    +
666124    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
666125    +
666126    +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
666127    +
666128    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
666129    +
666130    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
666131    +
666132    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
666133    +
666134    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
666135    +
666136    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
666137    +
666138    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
666139    +
666140    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
666141    +
666142    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
666143    +
666144    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
666145    +
666146    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
666147    +
666148    +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
666149    +
666150    +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
666151    +
666152    +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
666153    +
666154    +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
666155    +
666156    +      label H1x1_7 = 'Hidden: H1x1_=7' ;
MPRINT(EM_DIAGRAM):   label H1x1_7 = 'Hidden: H1x1_=7' ;
666157    +
666158    +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
666159    +
666160    +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
666161    +
666162    +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
666163    +
666164    +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
666165    +
666166    +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
666167    +
666168    +      label H1x2_6 = 'Hidden: H1x2_=6' ;
MPRINT(EM_DIAGRAM):   label H1x2_6 = 'Hidden: H1x2_=6' ;
666169    +
666170    +      label H1x2_7 = 'Hidden: H1x2_=7' ;
MPRINT(EM_DIAGRAM):   label H1x2_7 = 'Hidden: H1x2_=7' ;
666171    +
666172    +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
666173    +
666174    +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
666175    +
666176    +      label H2x1_3 = 'Hidden: H2x1_=3' ;
MPRINT(EM_DIAGRAM):   label H2x1_3 = 'Hidden: H2x1_=3' ;
666177    +
666178    +      label H2x1_4 = 'Hidden: H2x1_=4' ;
MPRINT(EM_DIAGRAM):   label H2x1_4 = 'Hidden: H2x1_=4' ;
666179    +
666180    +      label H2x1_5 = 'Hidden: H2x1_=5' ;
MPRINT(EM_DIAGRAM):   label H2x1_5 = 'Hidden: H2x1_=5' ;
666181    +
666182    +      label H2x1_6 = 'Hidden: H2x1_=6' ;
MPRINT(EM_DIAGRAM):   label H2x1_6 = 'Hidden: H2x1_=6' ;
666183    +
666184    +      label H2x1_7 = 'Hidden: H2x1_=7' ;
MPRINT(EM_DIAGRAM):   label H2x1_7 = 'Hidden: H2x1_=7' ;
666185    +
666186    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
666187    +
666188    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
666189    +
666190    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
666191    +
666192    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
666193    +
666194    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
666195    +
666196    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
666197    +
666198    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
666199    +
666200    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
666201    +
666202    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
666203    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
666204    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
666205    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
666206    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
666207    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
666208    +end;
MPRINT(EM_DIAGRAM):   end;
666209    +else do;
MPRINT(EM_DIAGRAM):   else do;
666210    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
666211    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
666212    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
666213    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
666214    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
666215    +   end;
MPRINT(EM_DIAGRAM):   end;
666216    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
666217    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
666218    +   end;
MPRINT(EM_DIAGRAM):   end;
666219    +   else do;
MPRINT(EM_DIAGRAM):   else do;
666220    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
666221    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
666222    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
666223    +   end;
MPRINT(EM_DIAGRAM):   end;
666224    +end;
MPRINT(EM_DIAGRAM):   end;
666225    +
666226    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
666227    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
666228    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
666229    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
666230    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
666231    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
666232    +end;
MPRINT(EM_DIAGRAM):   end;
666233    +else do;
MPRINT(EM_DIAGRAM):   else do;
666234    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
666235    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
666236    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
666237    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
666238    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
666239    +   end;
MPRINT(EM_DIAGRAM):   end;
666240    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
666241    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
666242    +   end;
MPRINT(EM_DIAGRAM):   end;
666243    +   else do;
MPRINT(EM_DIAGRAM):   else do;
666244    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
666245    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
666246    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
666247    +   end;
MPRINT(EM_DIAGRAM):   end;
666248    +end;
MPRINT(EM_DIAGRAM):   end;
666249    +
666250    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
666251    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
666252    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
666253    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
666254    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
666255    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
666256    +end;
MPRINT(EM_DIAGRAM):   end;
666257    +else do;
MPRINT(EM_DIAGRAM):   else do;
666258    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
666259    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
666260    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
666261    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
666262    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
666263    +   end;
MPRINT(EM_DIAGRAM):   end;
666264    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
666265    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
666266    +   end;
MPRINT(EM_DIAGRAM):   end;
666267    +   else do;
MPRINT(EM_DIAGRAM):   else do;
666268    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
666269    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
666270    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
666271    +   end;
MPRINT(EM_DIAGRAM):   end;
666272    +end;
MPRINT(EM_DIAGRAM):   end;
666273    +
666274    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
666275    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
666276    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
666277    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
666278    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
666279    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
666280    +end;
MPRINT(EM_DIAGRAM):   end;
666281    +else do;
MPRINT(EM_DIAGRAM):   else do;
666282    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
666283    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
666284    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
666285    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
666286    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
666287    +   end;
MPRINT(EM_DIAGRAM):   end;
666288    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
666289    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
666290    +   end;
MPRINT(EM_DIAGRAM):   end;
666291    +   else do;
MPRINT(EM_DIAGRAM):   else do;
666292    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
666293    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
666294    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
666295    +   end;
MPRINT(EM_DIAGRAM):   end;
666296    +end;
MPRINT(EM_DIAGRAM):   end;
666297    +
666298    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
666299    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
666300    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
666301    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
666302    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
666303    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
666304    +end;
MPRINT(EM_DIAGRAM):   end;
666305    +else do;
MPRINT(EM_DIAGRAM):   else do;
666306    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
666307    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
666308    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
666309    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
666310    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
666311    +   end;
MPRINT(EM_DIAGRAM):   end;
666312    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
666313    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
666314    +   end;
MPRINT(EM_DIAGRAM):   end;
666315    +   else do;
MPRINT(EM_DIAGRAM):   else do;
666316    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
666317    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
666318    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
666319    +   end;
MPRINT(EM_DIAGRAM):   end;
666320    +end;
MPRINT(EM_DIAGRAM):   end;
666321    +
666322    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
666323    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
666324    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
666325    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
666326    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
666327    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
666328    +end;
MPRINT(EM_DIAGRAM):   end;
666329    +else do;
MPRINT(EM_DIAGRAM):   else do;
666330    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
666331    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
666332    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
666333    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
666334    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
666335    +   end;
MPRINT(EM_DIAGRAM):   end;
666336    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
666337    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
666338    +   end;
MPRINT(EM_DIAGRAM):   end;
666339    +   else do;
MPRINT(EM_DIAGRAM):   else do;
666340    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
666341    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
666342    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
666343    +   end;
MPRINT(EM_DIAGRAM):   end;
666344    +end;
MPRINT(EM_DIAGRAM):   end;
666345    +
666346    +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
666347    +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
666348    +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
666349    +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
666350    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
666351    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
666352    +end;
MPRINT(EM_DIAGRAM):   end;
666353    +else do;
MPRINT(EM_DIAGRAM):   else do;
666354    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
666355    +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
666356    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
666357    +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
666358    +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
666359    +   end;
MPRINT(EM_DIAGRAM):   end;
666360    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
666361    +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
666362    +   end;
MPRINT(EM_DIAGRAM):   end;
666363    +   else do;
MPRINT(EM_DIAGRAM):   else do;
666364    +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
666365    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
666366    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
666367    +   end;
MPRINT(EM_DIAGRAM):   end;
666368    +end;
MPRINT(EM_DIAGRAM):   end;
666369    +
666370    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
666371    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
666372    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
666373    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
666374    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
666375    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
666376    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
666377    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
666378    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
666379    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
666380    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
666381    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
666382    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
666383    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
666384    +end;
MPRINT(EM_DIAGRAM):   end;
666385    +else do;
MPRINT(EM_DIAGRAM):   else do;
666386    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
666387    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
666388    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
666389    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
666390    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
666391    +   end;
MPRINT(EM_DIAGRAM):   end;
666392    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
666393    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
666394    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
666395    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
666396    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
666397    +   end;
MPRINT(EM_DIAGRAM):   end;
666398    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
666399    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
666400    +   end;
MPRINT(EM_DIAGRAM):   end;
666401    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
666402    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
666403    +   end;
MPRINT(EM_DIAGRAM):   end;
666404    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
666405    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
666406    +   end;
MPRINT(EM_DIAGRAM):   end;
666407    +   else do;
MPRINT(EM_DIAGRAM):   else do;
666408    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
666409    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
666410    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
666411    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
666412    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
666413    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
666414    +   end;
MPRINT(EM_DIAGRAM):   end;
666415    +end;
MPRINT(EM_DIAGRAM):   end;
666416    +
666417    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
666418    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
666419    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
666420    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
666421    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
666422    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
666423    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
666424    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
666425    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
666426    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
666427    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
666428    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
666429    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
666430    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
666431    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
666432    +end;
MPRINT(EM_DIAGRAM):   end;
666433    +else do;
MPRINT(EM_DIAGRAM):   else do;
666434    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
666435    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
666436    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
666437    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
666438    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
666439    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
666440    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
666441    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
666442    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
666443    +         end;
MPRINT(EM_DIAGRAM):   end;
666444    +         else do;
MPRINT(EM_DIAGRAM):   else do;
666445    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
666446    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
666447    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
666448    +            end;
MPRINT(EM_DIAGRAM):   end;
666449    +         end;
MPRINT(EM_DIAGRAM):   end;
666450    +      end;
MPRINT(EM_DIAGRAM):   end;
666451    +      else do;
MPRINT(EM_DIAGRAM):   else do;
666452    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
666453    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
666454    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
666455    +         end;
MPRINT(EM_DIAGRAM):   end;
666456    +      end;
MPRINT(EM_DIAGRAM):   end;
666457    +   end;
MPRINT(EM_DIAGRAM):   end;
666458    +   else do;
MPRINT(EM_DIAGRAM):   else do;
666459    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
666460    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
666461    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
666462    +      end;
MPRINT(EM_DIAGRAM):   end;
666463    +      else do;
MPRINT(EM_DIAGRAM):   else do;
666464    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
666465    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
666466    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
666467    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
666468    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
666469    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
666470    +         end;
MPRINT(EM_DIAGRAM):   end;
666471    +      end;
MPRINT(EM_DIAGRAM):   end;
666472    +   end;
MPRINT(EM_DIAGRAM):   end;
666473    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
666474    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
666475    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
666476    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
666477    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
666478    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
666479    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
666480    +   end;
MPRINT(EM_DIAGRAM):   end;
666481    +end;
MPRINT(EM_DIAGRAM):   end;
666482    +
666483    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
666484    +*** Checking missing input Interval
666485    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
666486    +
666487    +IF NMISS(
666488    +   AcceptedCmpTotal ,
666489    +   Age ,
666490    +   Frq ,
666491    +   Income ,
666492    +   Kidhome ,
666493    +   Mnt ,
666494    +   MntFishProducts ,
666495    +   MntFruits ,
666496    +   MntGoldProds ,
666497    +   MntMeatProducts ,
666498    +   MntSweetProducts ,
666499    +   MntWines ,
666500    +   MonthsAsCustomer ,
666501    +   NumCatalogPurchases ,
666502    +   NumDealsPurchases ,
666503    +   NumDistPurchases ,
666504    +   NumStorePurchases ,
666505    +   NumWebPurchases ,
666506    +   NumWebVisitsMonth ,
666507    +   RFMstat ,
666508    +   RMntFrq ,
666509    +   Recency ,
666510    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
666511    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
666512    +
666513    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
666514    +END;
MPRINT(EM_DIAGRAM):   END;
666515    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
666516    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
666517    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
666518    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
666519    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
666520    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
666521    +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
666522    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
666523    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
666524    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
666525    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
666526    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
666527    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
666528    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
666529    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
666530    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
666531    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
666532    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
666533    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
666534    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
666535    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
666536    +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
666537    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
666538    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
666539    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
666540    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
666541    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
666542    +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
666543    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
666544    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
666545    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
666546    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
666547    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
666548    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
666549    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
666550    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
666551    +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
666552    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
666553    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
666554    +END;
MPRINT(EM_DIAGRAM):   END;
666555    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
666556    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
666557    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
666558    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
666559    +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
666560    +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
666561    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
666562    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
666563    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
666564    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
666565    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
666566    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
666567    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
666568    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
666569    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
666570    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
666571    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
666572    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
666573    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
666574    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
666575    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
666576    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
666577    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
666578    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
666579    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
666580    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
666581    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
666582    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
666583    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
666584    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
666585    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
666586    +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
666587    +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
666588    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
666589    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
666590    +   ELSE S_NumCatalogPurchases
666591    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
666592    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
666593    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
666594    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
666595    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
666596    +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
666597    +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
666598    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
666599    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
666600    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
666601    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
666602    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
666603    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
666604    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
666605    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
666606    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
666607    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
666608    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
666609    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
666610    +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
666611    +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
666612    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
666613    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
666614    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
666615    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
666616    +END;
MPRINT(EM_DIAGRAM):   END;
666617    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
666618    +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
666619    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
666620    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
666621    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
666622    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
666623    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
666624    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
666625    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
666626    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
666627    +   H1x1_1  =     0.63316204656896 * S_AcceptedCmpTotal
666628    +          +    -0.24884200883415 * S_Age  +      -0.236584005151 * S_Frq
666629    +          +     0.25406117591995 * S_Income  +    -0.56304122955704 *
666630    +        S_Kidhome  +    -0.23687782938793 * S_Mnt  +    -0.09770906650074 *
666631    +        S_MntFishProducts  +    -0.73487360819716 * S_MntFruits
666632    +          +     0.14293909908147 * S_MntGoldProds  +     2.25015000307426 *
666633    +        S_MntMeatProducts  +    -0.42178958150661 * S_MntSweetProducts
666634    +          +    -2.35340366839307 * S_MntWines  +    -0.02380265380154 *
666635    +        S_MonthsAsCustomer  +     1.16509321438746 * S_NumCatalogPurchases
666636    +          +     1.17276395296242 * S_NumDealsPurchases
666637    +          +     0.26632768295477 * S_NumDistPurchases
666638    +          +    -1.26575615903579 * S_NumStorePurchases
666639    +          +    -0.95316107557927 * S_NumWebPurchases
666640    +          +     1.01828574356487 * S_NumWebVisitsMonth
666641    +          +       0.795866263515 * S_RFMstat  +    -0.20490378142832 *
666642    +        S_RMntFrq  +    -0.82943281422857 * S_Recency
666643    +          +     0.16132418388418 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.63316204656896 * S_AcceptedCmpTotal + -0.24884200883415 * 
S_Age + -0.236584005151 * S_Frq + 0.25406117591995 * S_Income + -0.56304122955704 * S_Kidhome 
+ -0.23687782938793 * S_Mnt + -0.09770906650074 * S_MntFishProducts + -0.73487360819716 * 
S_MntFruits + 0.14293909908147 * S_MntGoldProds + 2.25015000307426 * S_MntMeatProducts + 
-0.42178958150661 * S_MntSweetProducts + -2.35340366839307 * S_MntWines + -0.02380265380154 * 
S_MonthsAsCustomer + 1.16509321438746 * S_NumCatalogPurchases + 1.17276395296242 * 
S_NumDealsPurchases + 0.26632768295477 * S_NumDistPurchases + -1.26575615903579 * 
S_NumStorePurchases + -0.95316107557927 * S_NumWebPurchases + 1.01828574356487 * 
S_NumWebVisitsMonth + 0.795866263515 * S_RFMstat + -0.20490378142832 * S_RMntFrq + 
-0.82943281422857 * S_Recency + 0.16132418388418 * S_Teenhome ;
666644    +   H1x1_2  =    -0.43482920479481 * S_AcceptedCmpTotal
666645    +          +     0.53350211221915 * S_Age  +    -0.06797700766223 * S_Frq
666646    +          +     0.13771322007949 * S_Income  +     0.87012019559698 *
666647    +        S_Kidhome  +     0.06026853274247 * S_Mnt  +    -0.43150595882972 *
666648    +        S_MntFishProducts  +    -0.13728591661063 * S_MntFruits
666649    +          +     0.35443873962923 * S_MntGoldProds  +     0.28102965401547 *
666650    +        S_MntMeatProducts  +     0.52367949052365 * S_MntSweetProducts
666651    +          +     0.35553595364078 * S_MntWines  +     0.37892120128383 *
666652    +        S_MonthsAsCustomer  +     0.59057645965187 * S_NumCatalogPurchases
666653    +          +     1.14485571201233 * S_NumDealsPurchases
666654    +          +     0.21414266588987 * S_NumDistPurchases
666655    +          +    -0.10530090074297 * S_NumStorePurchases
666656    +          +    -0.41712321238458 * S_NumWebPurchases
666657    +          +    -0.99760766791108 * S_NumWebVisitsMonth
666658    +          +    -0.90203265666387 * S_RFMstat  +    -0.60947922673601 *
666659    +        S_RMntFrq  +     1.10040128548883 * S_Recency
666660    +          +     0.16728431679949 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.43482920479481 * S_AcceptedCmpTotal + 0.53350211221915 * 
S_Age + -0.06797700766223 * S_Frq + 0.13771322007949 * S_Income + 0.87012019559698 * S_Kidhome 
+ 0.06026853274247 * S_Mnt + -0.43150595882972 * S_MntFishProducts + -0.13728591661063 * 
S_MntFruits + 0.35443873962923 * S_MntGoldProds + 0.28102965401547 * S_MntMeatProducts + 
0.52367949052365 * S_MntSweetProducts + 0.35553595364078 * S_MntWines + 0.37892120128383 * 
S_MonthsAsCustomer + 0.59057645965187 * S_NumCatalogPurchases + 1.14485571201233 * 
S_NumDealsPurchases + 0.21414266588987 * S_NumDistPurchases + -0.10530090074297 * 
S_NumStorePurchases + -0.41712321238458 * S_NumWebPurchases + -0.99760766791108 * 
S_NumWebVisitsMonth + -0.90203265666387 * S_RFMstat + -0.60947922673601 * S_RMntFrq + 
1.10040128548883 * S_Recency + 0.16728431679949 * S_Teenhome ;
666661    +   H1x1_3  =     0.26373486938499 * S_AcceptedCmpTotal
666662    +          +    -0.22246756314756 * S_Age  +     0.49537720979115 * S_Frq
666663    +          +     1.38815981786544 * S_Income  +    -0.93015968695331 *
666664    +        S_Kidhome  +     0.11586216615481 * S_Mnt  +    -0.02105973515345 *
666665    +        S_MntFishProducts  +    -0.28078442249811 * S_MntFruits
666666    +          +    -0.01763878655129 * S_MntGoldProds  +     0.83934619541231 *
666667    +        S_MntMeatProducts  +    -0.23417310915433 * S_MntSweetProducts
666668    +          +    -0.29135819585991 * S_MntWines  +    -0.20792872642036 *
666669    +        S_MonthsAsCustomer  +     1.05218745810839 * S_NumCatalogPurchases
666670    +          +      0.7196418967437 * S_NumDealsPurchases
666671    +          +     0.69035286374177 * S_NumDistPurchases
666672    +          +     0.38027656631135 * S_NumStorePurchases
666673    +          +    -0.18878358997924 * S_NumWebPurchases
666674    +          +     1.61962062004798 * S_NumWebVisitsMonth
666675    +          +    -0.04575386719745 * S_RFMstat  +     1.16358450490635 *
666676    +        S_RMntFrq  +    -2.13821542142822 * S_Recency
666677    +          +    -1.28960355207697 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.26373486938499 * S_AcceptedCmpTotal + -0.22246756314756 * 
S_Age + 0.49537720979115 * S_Frq + 1.38815981786544 * S_Income + -0.93015968695331 * S_Kidhome 
+ 0.11586216615481 * S_Mnt + -0.02105973515345 * S_MntFishProducts + -0.28078442249811 * 
S_MntFruits + -0.01763878655129 * S_MntGoldProds + 0.83934619541231 * S_MntMeatProducts + 
-0.23417310915433 * S_MntSweetProducts + -0.29135819585991 * S_MntWines + -0.20792872642036 * 
S_MonthsAsCustomer + 1.05218745810839 * S_NumCatalogPurchases + 0.7196418967437 * 
S_NumDealsPurchases + 0.69035286374177 * S_NumDistPurchases + 0.38027656631135 * 
S_NumStorePurchases + -0.18878358997924 * S_NumWebPurchases + 1.61962062004798 * 
S_NumWebVisitsMonth + -0.04575386719745 * S_RFMstat + 1.16358450490635 * S_RMntFrq + 
-2.13821542142822 * S_Recency + -1.28960355207697 * S_Teenhome ;
666678    +   H1x1_4  =    -0.34331113295243 * S_AcceptedCmpTotal
666679    +          +    -0.39878146063012 * S_Age  +     0.10068367322473 * S_Frq
666680    +          +    -0.20171643525685 * S_Income  +    -0.76934260520569 *
666681    +        S_Kidhome  +    -0.66782690219397 * S_Mnt  +     0.80905970181803 *
666682    +        S_MntFishProducts  +    -0.03688782193215 * S_MntFruits
666683    +          +     0.06641568264972 * S_MntGoldProds  +    -3.32390323965822 *
666684    +        S_MntMeatProducts  +    -0.05413014598032 * S_MntSweetProducts
666685    +          +     1.07708707113306 * S_MntWines  +     0.13185264889978 *
666686    +        S_MonthsAsCustomer  +    -0.39476201074171 * S_NumCatalogPurchases
666687    +          +    -0.00642902007204 * S_NumDealsPurchases
666688    +          +     0.29785069480367 * S_NumDistPurchases
666689    +          +    -0.42243322063147 * S_NumStorePurchases
666690    +          +     0.54880896338383 * S_NumWebPurchases
666691    +          +    -0.12525846016886 * S_NumWebVisitsMonth
666692    +          +    -0.31397100953189 * S_RFMstat  +     -0.5192863720509 *
666693    +        S_RMntFrq  +     0.10252211581449 * S_Recency
666694    +          +     0.44223031313104 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -0.34331113295243 * S_AcceptedCmpTotal + -0.39878146063012 * 
S_Age + 0.10068367322473 * S_Frq + -0.20171643525685 * S_Income + -0.76934260520569 * 
S_Kidhome + -0.66782690219397 * S_Mnt + 0.80905970181803 * S_MntFishProducts + 
-0.03688782193215 * S_MntFruits + 0.06641568264972 * S_MntGoldProds + -3.32390323965822 * 
S_MntMeatProducts + -0.05413014598032 * S_MntSweetProducts + 1.07708707113306 * S_MntWines + 
0.13185264889978 * S_MonthsAsCustomer + -0.39476201074171 * S_NumCatalogPurchases + 
-0.00642902007204 * S_NumDealsPurchases + 0.29785069480367 * S_NumDistPurchases + 
-0.42243322063147 * S_NumStorePurchases + 0.54880896338383 * S_NumWebPurchases + 
-0.12525846016886 * S_NumWebVisitsMonth + -0.31397100953189 * S_RFMstat + -0.5192863720509 * 
S_RMntFrq + 0.10252211581449 * S_Recency + 0.44223031313104 * S_Teenhome ;
666695    +   H1x1_5  =    -0.89949577087728 * S_AcceptedCmpTotal
666696    +          +     -0.5133669560115 * S_Age  +     0.55814120515869 * S_Frq
666697    +          +    -0.72790553700689 * S_Income  +     1.13470491167406 *
666698    +        S_Kidhome  +     0.42465795563071 * S_Mnt  +     0.22642900369653 *
666699    +        S_MntFishProducts  +    -0.10149694753146 * S_MntFruits
666700    +          +    -0.05203167914723 * S_MntGoldProds  +    -0.42300460593042 *
666701    +        S_MntMeatProducts  +    -0.11178206624825 * S_MntSweetProducts
666702    +          +     1.57257994445012 * S_MntWines  +     0.02297554927807 *
666703    +        S_MonthsAsCustomer  +    -0.60721423552141 * S_NumCatalogPurchases
666704    +          +    -0.48404738328225 * S_NumDealsPurchases
666705    +          +    -0.02464180457879 * S_NumDistPurchases
666706    +          +     1.17201831082067 * S_NumStorePurchases
666707    +          +     0.57453655167516 * S_NumWebPurchases
666708    +          +    -1.94417019790248 * S_NumWebVisitsMonth
666709    +          +     0.00073301476364 * S_RFMstat  +     0.12295343326875 *
666710    +        S_RMntFrq  +      1.6169916658132 * S_Recency
666711    +          +     0.09488579305439 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -0.89949577087728 * S_AcceptedCmpTotal + -0.5133669560115 * 
S_Age + 0.55814120515869 * S_Frq + -0.72790553700689 * S_Income + 1.13470491167406 * S_Kidhome 
+ 0.42465795563071 * S_Mnt + 0.22642900369653 * S_MntFishProducts + -0.10149694753146 * 
S_MntFruits + -0.05203167914723 * S_MntGoldProds + -0.42300460593042 * S_MntMeatProducts + 
-0.11178206624825 * S_MntSweetProducts + 1.57257994445012 * S_MntWines + 0.02297554927807 * 
S_MonthsAsCustomer + -0.60721423552141 * S_NumCatalogPurchases + -0.48404738328225 * 
S_NumDealsPurchases + -0.02464180457879 * S_NumDistPurchases + 1.17201831082067 * 
S_NumStorePurchases + 0.57453655167516 * S_NumWebPurchases + -1.94417019790248 * 
S_NumWebVisitsMonth + 0.00073301476364 * S_RFMstat + 0.12295343326875 * S_RMntFrq + 
1.6169916658132 * S_Recency + 0.09488579305439 * S_Teenhome ;
666712    +   H1x1_6  =     0.01224996381937 * S_AcceptedCmpTotal
666713    +          +     0.56818460209578 * S_Age  +    -0.50544994791872 * S_Frq
666714    +          +    -0.39086889823619 * S_Income  +      0.2278709145292 *
666715    +        S_Kidhome  +       0.221310975162 * S_Mnt  +     -0.2208719427117 *
666716    +        S_MntFishProducts  +     0.33199116637803 * S_MntFruits
666717    +          +    -0.20919304257884 * S_MntGoldProds  +     0.85155045239396 *
666718    +        S_MntMeatProducts  +     0.32150401526792 * S_MntSweetProducts
666719    +          +     0.24789026157513 * S_MntWines  +    -0.16427340869887 *
666720    +        S_MonthsAsCustomer  +    -1.31657293247686 * S_NumCatalogPurchases
666721    +          +    -1.49850531967483 * S_NumDealsPurchases
666722    +          +    -0.82105466264223 * S_NumDistPurchases
666723    +          +     0.29984603642824 * S_NumStorePurchases
666724    +          +     0.06557123721611 * S_NumWebPurchases
666725    +          +     1.04754749365002 * S_NumWebVisitsMonth
666726    +          +     0.18881248406892 * S_RFMstat  +     0.26455728766984 *
666727    +        S_RMntFrq  +     0.12396789666359 * S_Recency
666728    +          +     0.04001049603668 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_6 = 0.01224996381937 * S_AcceptedCmpTotal + 0.56818460209578 * 
S_Age + -0.50544994791872 * S_Frq + -0.39086889823619 * S_Income + 0.2278709145292 * S_Kidhome 
+ 0.221310975162 * S_Mnt + -0.2208719427117 * S_MntFishProducts + 0.33199116637803 * 
S_MntFruits + -0.20919304257884 * S_MntGoldProds + 0.85155045239396 * S_MntMeatProducts + 
0.32150401526792 * S_MntSweetProducts + 0.24789026157513 * S_MntWines + -0.16427340869887 * 
S_MonthsAsCustomer + -1.31657293247686 * S_NumCatalogPurchases + -1.49850531967483 * 
S_NumDealsPurchases + -0.82105466264223 * S_NumDistPurchases + 0.29984603642824 * 
S_NumStorePurchases + 0.06557123721611 * S_NumWebPurchases + 1.04754749365002 * 
S_NumWebVisitsMonth + 0.18881248406892 * S_RFMstat + 0.26455728766984 * S_RMntFrq + 
0.12396789666359 * S_Recency + 0.04001049603668 * S_Teenhome ;
666729    +   H1x1_1  = H1x1_1  +     -0.4293641198863 * AcceptedCmp10
666730    +          +    -0.02562823362815 * AcceptedCmp20  +     0.16277388616218 *
666731    +        AcceptedCmp30  +    -0.38952498475664 * AcceptedCmp40
666732    +          +    -0.13756852377245 * AcceptedCmp50  +    -0.11393239206883 *
666733    +        Complain0  +    -0.18422159910382 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.4293641198863 * AcceptedCmp10 + -0.02562823362815 * 
AcceptedCmp20 + 0.16277388616218 * AcceptedCmp30 + -0.38952498475664 * AcceptedCmp40 + 
-0.13756852377245 * AcceptedCmp50 + -0.11393239206883 * Complain0 + -0.18422159910382 * 
HigherEducationBinary0 ;
666734    +   H1x1_2  = H1x1_2  +     -0.6690011671322 * AcceptedCmp10
666735    +          +     0.30944418540454 * AcceptedCmp20  +     0.58989055832198 *
666736    +        AcceptedCmp30  +    -0.11349554378017 * AcceptedCmp40
666737    +          +     0.17747537507545 * AcceptedCmp50  +     0.31141201787728 *
666738    +        Complain0  +    -0.14665102087088 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.6690011671322 * AcceptedCmp10 + 0.30944418540454 * 
AcceptedCmp20 + 0.58989055832198 * AcceptedCmp30 + -0.11349554378017 * AcceptedCmp40 + 
0.17747537507545 * AcceptedCmp50 + 0.31141201787728 * Complain0 + -0.14665102087088 * 
HigherEducationBinary0 ;
666739    +   H1x1_3  = H1x1_3  +    -0.37718551551154 * AcceptedCmp10
666740    +          +    -0.95419836616858 * AcceptedCmp20  +    -1.07782642598822 *
666741    +        AcceptedCmp30  +    -0.36181507758379 * AcceptedCmp40
666742    +          +    -0.20579221441057 * AcceptedCmp50  +     -0.2862570173476 *
666743    +        Complain0  +     0.42095042003574 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.37718551551154 * AcceptedCmp10 + -0.95419836616858 
* AcceptedCmp20 + -1.07782642598822 * AcceptedCmp30 + -0.36181507758379 * AcceptedCmp40 + 
-0.20579221441057 * AcceptedCmp50 + -0.2862570173476 * Complain0 + 0.42095042003574 * 
HigherEducationBinary0 ;
666744    +   H1x1_4  = H1x1_4  +     0.76282838117383 * AcceptedCmp10
666745    +          +     0.17657215690894 * AcceptedCmp20  +     0.06936093547655 *
666746    +        AcceptedCmp30  +    -0.31222684620157 * AcceptedCmp40
666747    +          +     0.35916828202502 * AcceptedCmp50  +     0.15464859425769 *
666748    +        Complain0  +    -0.12780871374988 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + 0.76282838117383 * AcceptedCmp10 + 0.17657215690894 * 
AcceptedCmp20 + 0.06936093547655 * AcceptedCmp30 + -0.31222684620157 * AcceptedCmp40 + 
0.35916828202502 * AcceptedCmp50 + 0.15464859425769 * Complain0 + -0.12780871374988 * 
HigherEducationBinary0 ;
666749    +   H1x1_5  = H1x1_5  +      0.0863832283968 * AcceptedCmp10
666750    +          +    -0.01478152334234 * AcceptedCmp20  +    -0.25793605794945 *
666751    +        AcceptedCmp30  +     0.75328991260718 * AcceptedCmp40
666752    +          +     0.43869592545355 * AcceptedCmp50  +    -0.18444801256895 *
666753    +        Complain0  +    -0.18540568245616 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + 0.0863832283968 * AcceptedCmp10 + -0.01478152334234 * 
AcceptedCmp20 + -0.25793605794945 * AcceptedCmp30 + 0.75328991260718 * AcceptedCmp40 + 
0.43869592545355 * AcceptedCmp50 + -0.18444801256895 * Complain0 + -0.18540568245616 * 
HigherEducationBinary0 ;
666754    +   H1x1_6  = H1x1_6  +    -0.05476883960444 * AcceptedCmp10
666755    +          +    -0.30796660956747 * AcceptedCmp20  +    -0.15332998700386 *
666756    +        AcceptedCmp30  +     0.07190305484507 * AcceptedCmp40
666757    +          +    -0.19344551087023 * AcceptedCmp50  +    -0.01671794402922 *
666758    +        Complain0  +      0.4224003744836 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + -0.05476883960444 * AcceptedCmp10 + -0.30796660956747 
* AcceptedCmp20 + -0.15332998700386 * AcceptedCmp30 + 0.07190305484507 * AcceptedCmp40 + 
-0.19344551087023 * AcceptedCmp50 + -0.01671794402922 * Complain0 + 0.4224003744836 * 
HigherEducationBinary0 ;
666759    +   H1x1_1  = H1x1_1  +     0.06740641383122 * Education2n_Cycle
666760    +          +      0.0427985447056 * EducationBasic  +     0.38043688251433 *
666761    +        EducationGraduation  +     0.07595631354847 * EducationMaster
666762    +          +     0.24583509957712 * Marital_StatusDivorced
666763    +          +    -0.22681931588361 * Marital_StatusMarried
666764    +          +    -0.12924106229536 * Marital_StatusSingle
666765    +          +     -0.2262058185403 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.06740641383122 * Education2n_Cycle + 0.0427985447056 
* EducationBasic + 0.38043688251433 * EducationGraduation + 0.07595631354847 * EducationMaster 
+ 0.24583509957712 * Marital_StatusDivorced + -0.22681931588361 * Marital_StatusMarried + 
-0.12924106229536 * Marital_StatusSingle + -0.2262058185403 * Marital_StatusTogether ;
666766    +   H1x1_2  = H1x1_2  +    -0.13120690973481 * Education2n_Cycle
666767    +          +     0.37925506295244 * EducationBasic  +     0.31784700588218 *
666768    +        EducationGraduation  +     0.23015089246655 * EducationMaster
666769    +          +    -0.12585334311068 * Marital_StatusDivorced
666770    +          +    -0.20835502467207 * Marital_StatusMarried
666771    +          +    -0.13839534449368 * Marital_StatusSingle
666772    +          +     0.64317572477668 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.13120690973481 * Education2n_Cycle + 
0.37925506295244 * EducationBasic + 0.31784700588218 * EducationGraduation + 0.23015089246655 
* EducationMaster + -0.12585334311068 * Marital_StatusDivorced + -0.20835502467207 * 
Marital_StatusMarried + -0.13839534449368 * Marital_StatusSingle + 0.64317572477668 * 
Marital_StatusTogether ;
666773    +   H1x1_3  = H1x1_3  +     0.32305785926236 * Education2n_Cycle
666774    +          +     0.23464353160373 * EducationBasic  +    -0.73832644067678 *
666775    +        EducationGraduation  +    -0.03608560158257 * EducationMaster
666776    +          +     0.35106363238113 * Marital_StatusDivorced
666777    +          +     -1.3414808583918 * Marital_StatusMarried
666778    +          +     1.40835320798486 * Marital_StatusSingle
666779    +          +    -1.26805917396788 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.32305785926236 * Education2n_Cycle + 
0.23464353160373 * EducationBasic + -0.73832644067678 * EducationGraduation + 
-0.03608560158257 * EducationMaster + 0.35106363238113 * Marital_StatusDivorced + 
-1.3414808583918 * Marital_StatusMarried + 1.40835320798486 * Marital_StatusSingle + 
-1.26805917396788 * Marital_StatusTogether ;
666780    +   H1x1_4  = H1x1_4  +    -0.14516593990466 * Education2n_Cycle
666781    +          +     0.21457892528906 * EducationBasic  +      0.3693312496431 *
666782    +        EducationGraduation  +      0.1746658332011 * EducationMaster
666783    +          +     0.48174546958393 * Marital_StatusDivorced
666784    +          +    -0.41416978858191 * Marital_StatusMarried
666785    +          +    -0.23376801546265 * Marital_StatusSingle
666786    +          +    -0.40569257078897 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.14516593990466 * Education2n_Cycle + 
0.21457892528906 * EducationBasic + 0.3693312496431 * EducationGraduation + 0.1746658332011 * 
EducationMaster + 0.48174546958393 * Marital_StatusDivorced + -0.41416978858191 * 
Marital_StatusMarried + -0.23376801546265 * Marital_StatusSingle + -0.40569257078897 * 
Marital_StatusTogether ;
666787    +   H1x1_5  = H1x1_5  +    -0.00489214718621 * Education2n_Cycle
666788    +          +     0.04788059649714 * EducationBasic  +      -0.479003778409 *
666789    +        EducationGraduation  +     0.68875064631577 * EducationMaster
666790    +          +    -0.67557643774246 * Marital_StatusDivorced
666791    +          +     1.63844045917367 * Marital_StatusMarried
666792    +          +    -0.70320960247699 * Marital_StatusSingle
666793    +          +     1.26350112628909 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.00489214718621 * Education2n_Cycle + 
0.04788059649714 * EducationBasic + -0.479003778409 * EducationGraduation + 0.68875064631577 * 
EducationMaster + -0.67557643774246 * Marital_StatusDivorced + 1.63844045917367 * 
Marital_StatusMarried + -0.70320960247699 * Marital_StatusSingle + 1.26350112628909 * 
Marital_StatusTogether ;
666794    +   H1x1_6  = H1x1_6  +     0.38566123849432 * Education2n_Cycle
666795    +          +    -0.48006357411447 * EducationBasic  +     0.06594567975069 *
666796    +        EducationGraduation  +    -0.68011360002443 * EducationMaster
666797    +          +    -0.11371453086883 * Marital_StatusDivorced
666798    +          +    -0.34226997176291 * Marital_StatusMarried
666799    +          +    -1.01568676685754 * Marital_StatusSingle
666800    +          +    -0.07673228755579 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + 0.38566123849432 * Education2n_Cycle + 
-0.48006357411447 * EducationBasic + 0.06594567975069 * EducationGraduation + 
-0.68011360002443 * EducationMaster + -0.11371453086883 * Marital_StatusDivorced + 
-0.34226997176291 * Marital_StatusMarried + -1.01568676685754 * Marital_StatusSingle + 
-0.07673228755579 * Marital_StatusTogether ;
666801    +   H1x1_1  =    -0.13665586104906 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.13665586104906 + H1x1_1 ;
666802    +   H1x1_2  =    -1.74128345271319 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -1.74128345271319 + H1x1_2 ;
666803    +   H1x1_3  =    -0.38226400326342 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.38226400326342 + H1x1_3 ;
666804    +   H1x1_4  =    -0.64652756521333 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -0.64652756521333 + H1x1_4 ;
666805    +   H1x1_5  =     0.89555568414722 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 0.89555568414722 + H1x1_5 ;
666806    +   H1x1_6  =    -0.28536788363505 + H1x1_6 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = -0.28536788363505 + H1x1_6 ;
666807    +   H1x1_7  = 0;
MPRINT(EM_DIAGRAM):   H1x1_7 = 0;
666808    +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 , H1x1_7
666809    +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 , 
H1x1_7 );
666810    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
666811    +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
666812    +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
666813    +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
666814    +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
666815    +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
666816    +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
666817    +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
666818    +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
666819    +   H1x1_5  = EXP(H1x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_5 = EXP(H1x1_5 - _MAX_);
666820    +   _SUM_ = _SUM_ + H1x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_5 ;
666821    +   H1x1_6  = EXP(H1x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_6 = EXP(H1x1_6 - _MAX_);
666822    +   _SUM_ = _SUM_ + H1x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_6 ;
666823    +   H1x1_7  = EXP(H1x1_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_7 = EXP(H1x1_7 - _MAX_);
666824    +   _SUM_ = _SUM_ + H1x1_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_7 ;
666825    +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
666826    +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
666827    +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
666828    +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
666829    +   H1x1_5  = H1x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 / _SUM_;
666830    +   H1x1_6  = H1x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 / _SUM_;
666831    +   H1x1_7  = H1x1_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_7 = H1x1_7 / _SUM_;
666832    +END;
MPRINT(EM_DIAGRAM):   END;
666833    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
666834    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
666835    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
666836    +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
666837    +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
666838    +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
666839    +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
666840    +   H1x1_7  = .;
MPRINT(EM_DIAGRAM):   H1x1_7 = .;
666841    +END;
MPRINT(EM_DIAGRAM):   END;
666842    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
666843    +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
666844    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
666845    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
666846    +   H1x2_1  =    -0.46863593010465 * S_AcceptedCmpTotal
666847    +          +     0.76938995153422 * S_Age  +    -0.10870665325086 * S_Frq
666848    +          +    -0.01767709917897 * S_Income  +    -0.06564852978687 *
666849    +        S_Kidhome  +     1.53975855599943 * S_Mnt  +     0.14885556549813 *
666850    +        S_MntFishProducts  +     -0.3427211596875 * S_MntFruits
666851    +          +     1.82311511422571 * S_MntGoldProds  +     1.16814585484266 *
666852    +        S_MntMeatProducts  +    -0.03210183211362 * S_MntSweetProducts
666853    +          +     0.21048598967441 * S_MntWines  +    -1.43075224286158 *
666854    +        S_MonthsAsCustomer  +     0.17264791017938 * S_NumCatalogPurchases
666855    +          +    -0.87259051567474 * S_NumDealsPurchases
666856    +          +    -0.36454149529139 * S_NumDistPurchases
666857    +          +     0.12447759925061 * S_NumStorePurchases
666858    +          +    -1.08133487947367 * S_NumWebPurchases
666859    +          +    -0.49882157745454 * S_NumWebVisitsMonth
666860    +          +    -1.37163643041927 * S_RFMstat  +    -2.02270778627266 *
666861    +        S_RMntFrq  +    -0.01174101172444 * S_Recency
666862    +          +     1.37307999964517 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -0.46863593010465 * S_AcceptedCmpTotal + 0.76938995153422 * 
S_Age + -0.10870665325086 * S_Frq + -0.01767709917897 * S_Income + -0.06564852978687 * 
S_Kidhome + 1.53975855599943 * S_Mnt + 0.14885556549813 * S_MntFishProducts + -0.3427211596875 
* S_MntFruits + 1.82311511422571 * S_MntGoldProds + 1.16814585484266 * S_MntMeatProducts + 
-0.03210183211362 * S_MntSweetProducts + 0.21048598967441 * S_MntWines + -1.43075224286158 * 
S_MonthsAsCustomer + 0.17264791017938 * S_NumCatalogPurchases + -0.87259051567474 * 
S_NumDealsPurchases + -0.36454149529139 * S_NumDistPurchases + 0.12447759925061 * 
S_NumStorePurchases + -1.08133487947367 * S_NumWebPurchases + -0.49882157745454 * 
S_NumWebVisitsMonth + -1.37163643041927 * S_RFMstat + -2.02270778627266 * S_RMntFrq + 
-0.01174101172444 * S_Recency + 1.37307999964517 * S_Teenhome ;
666863    +   H1x2_2  =     0.31979674377303 * S_AcceptedCmpTotal
666864    +          +    -1.13516841608912 * S_Age  +     1.57640145941914 * S_Frq
666865    +          +    -0.58468039509557 * S_Income  +    -1.78015996883174 *
666866    +        S_Kidhome  +     0.51311311640127 * S_Mnt  +     0.07011815519915 *
666867    +        S_MntFishProducts  +     0.73204832291164 * S_MntFruits
666868    +          +     1.50837189353633 * S_MntGoldProds  +     1.39487443576743 *
666869    +        S_MntMeatProducts  +      0.6943398196475 * S_MntSweetProducts
666870    +          +    -0.36693028595681 * S_MntWines  +     0.86802033237442 *
666871    +        S_MonthsAsCustomer  +     0.02384797538091 * S_NumCatalogPurchases
666872    +          +     2.23121497416403 * S_NumDealsPurchases
666873    +          +    -0.48674842191071 * S_NumDistPurchases
666874    +          +     1.77510728607544 * S_NumStorePurchases
666875    +          +     0.14647433155436 * S_NumWebPurchases
666876    +          +    -0.95892686924419 * S_NumWebVisitsMonth
666877    +          +    -0.26496935918704 * S_RFMstat  +     2.48765485222223 *
666878    +        S_RMntFrq  +     2.46497777428475 * S_Recency
666879    +          +    -0.62872033383484 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 0.31979674377303 * S_AcceptedCmpTotal + -1.13516841608912 * 
S_Age + 1.57640145941914 * S_Frq + -0.58468039509557 * S_Income + -1.78015996883174 * 
S_Kidhome + 0.51311311640127 * S_Mnt + 0.07011815519915 * S_MntFishProducts + 0.73204832291164 
* S_MntFruits + 1.50837189353633 * S_MntGoldProds + 1.39487443576743 * S_MntMeatProducts + 
0.6943398196475 * S_MntSweetProducts + -0.36693028595681 * S_MntWines + 0.86802033237442 * 
S_MonthsAsCustomer + 0.02384797538091 * S_NumCatalogPurchases + 2.23121497416403 * 
S_NumDealsPurchases + -0.48674842191071 * S_NumDistPurchases + 1.77510728607544 * 
S_NumStorePurchases + 0.14647433155436 * S_NumWebPurchases + -0.95892686924419 * 
S_NumWebVisitsMonth + -0.26496935918704 * S_RFMstat + 2.48765485222223 * S_RMntFrq + 
2.46497777428475 * S_Recency + -0.62872033383484 * S_Teenhome ;
666880    +   H1x2_3  =    -0.31142826583944 * S_AcceptedCmpTotal
666881    +          +    -1.14828049895929 * S_Age  +    -0.54227584627485 * S_Frq
666882    +          +     0.26826674711688 * S_Income  +     0.17643820666347 *
666883    +        S_Kidhome  +    -0.12427430981043 * S_Mnt  +     0.18056887427376 *
666884    +        S_MntFishProducts  +    -0.63010248821544 * S_MntFruits
666885    +          +    -0.81391687529252 * S_MntGoldProds  +    -1.12306166734361 *
666886    +        S_MntMeatProducts  +     0.92339010601965 * S_MntSweetProducts
666887    +          +    -2.05510990050543 * S_MntWines  +    -2.02060586903244 *
666888    +        S_MonthsAsCustomer  +     0.98841836752178 * S_NumCatalogPurchases
666889    +          +     0.14338855349611 * S_NumDealsPurchases
666890    +          +    -2.21071010829235 * S_NumDistPurchases
666891    +          +    -0.21795889348002 * S_NumStorePurchases
666892    +          +     1.98825087883535 * S_NumWebPurchases
666893    +          +     1.02482442531149 * S_NumWebVisitsMonth
666894    +          +    -0.47662143614905 * S_RFMstat  +    -0.17167385440535 *
666895    +        S_RMntFrq  +     -1.0288777281766 * S_Recency
666896    +          +    -0.10646747275734 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.31142826583944 * S_AcceptedCmpTotal + -1.14828049895929 * 
S_Age + -0.54227584627485 * S_Frq + 0.26826674711688 * S_Income + 0.17643820666347 * S_Kidhome 
+ -0.12427430981043 * S_Mnt + 0.18056887427376 * S_MntFishProducts + -0.63010248821544 * 
S_MntFruits + -0.81391687529252 * S_MntGoldProds + -1.12306166734361 * S_MntMeatProducts + 
0.92339010601965 * S_MntSweetProducts + -2.05510990050543 * S_MntWines + -2.02060586903244 * 
S_MonthsAsCustomer + 0.98841836752178 * S_NumCatalogPurchases + 0.14338855349611 * 
S_NumDealsPurchases + -2.21071010829235 * S_NumDistPurchases + -0.21795889348002 * 
S_NumStorePurchases + 1.98825087883535 * S_NumWebPurchases + 1.02482442531149 * 
S_NumWebVisitsMonth + -0.47662143614905 * S_RFMstat + -0.17167385440535 * S_RMntFrq + 
-1.0288777281766 * S_Recency + -0.10646747275734 * S_Teenhome ;
666897    +   H1x2_4  =    -0.40813758620671 * S_AcceptedCmpTotal
666898    +          +     0.16751361466296 * S_Age  +     0.61297021391662 * S_Frq
666899    +          +     0.17708553296763 * S_Income  +    -0.23498000755537 *
666900    +        S_Kidhome  +      0.6863853027948 * S_Mnt  +    -0.43649468589643 *
666901    +        S_MntFishProducts  +    -1.03807059787368 * S_MntFruits
666902    +          +     0.68988160282803 * S_MntGoldProds  +     1.76714128625705 *
666903    +        S_MntMeatProducts  +     1.15458185366826 * S_MntSweetProducts
666904    +          +     0.31267521045306 * S_MntWines  +    -3.18562841805634 *
666905    +        S_MonthsAsCustomer  +     0.15316473812138 * S_NumCatalogPurchases
666906    +          +     0.30041205661012 * S_NumDealsPurchases
666907    +          +    -0.63499849986918 * S_NumDistPurchases
666908    +          +    -0.34155713433714 * S_NumStorePurchases
666909    +          +    -1.14183354933936 * S_NumWebPurchases
666910    +          +    -0.42681980262973 * S_NumWebVisitsMonth
666911    +          +    -0.18777676484111 * S_RFMstat  +      0.2522570278894 *
666912    +        S_RMntFrq  +     1.25852246467612 * S_Recency
666913    +          +     0.63333476238969 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -0.40813758620671 * S_AcceptedCmpTotal + 0.16751361466296 * 
S_Age + 0.61297021391662 * S_Frq + 0.17708553296763 * S_Income + -0.23498000755537 * S_Kidhome 
+ 0.6863853027948 * S_Mnt + -0.43649468589643 * S_MntFishProducts + -1.03807059787368 * 
S_MntFruits + 0.68988160282803 * S_MntGoldProds + 1.76714128625705 * S_MntMeatProducts + 
1.15458185366826 * S_MntSweetProducts + 0.31267521045306 * S_MntWines + -3.18562841805634 * 
S_MonthsAsCustomer + 0.15316473812138 * S_NumCatalogPurchases + 0.30041205661012 * 
S_NumDealsPurchases + -0.63499849986918 * S_NumDistPurchases + -0.34155713433714 * 
S_NumStorePurchases + -1.14183354933936 * S_NumWebPurchases + -0.42681980262973 * 
S_NumWebVisitsMonth + -0.18777676484111 * S_RFMstat + 0.2522570278894 * S_RMntFrq + 
1.25852246467612 * S_Recency + 0.63333476238969 * S_Teenhome ;
666914    +   H1x2_5  =     1.73048436159558 * S_AcceptedCmpTotal
666915    +          +     1.91388487556197 * S_Age  +     0.14880026885923 * S_Frq
666916    +          +      0.5905347897806 * S_Income  +     1.67048168226736 *
666917    +        S_Kidhome  +     0.03869174467752 * S_Mnt  +    -0.71187911364266 *
666918    +        S_MntFishProducts  +     0.93023590693473 * S_MntFruits
666919    +          +     0.22907372790948 * S_MntGoldProds  +    -1.05941282177437 *
666920    +        S_MntMeatProducts  +    -0.73905281508342 * S_MntSweetProducts
666921    +          +     0.04429898588386 * S_MntWines  +    -0.47487263648723 *
666922    +        S_MonthsAsCustomer  +     0.00382111008361 * S_NumCatalogPurchases
666923    +          +    -0.21237915559831 * S_NumDealsPurchases
666924    +          +     0.48256923764182 * S_NumDistPurchases
666925    +          +    -0.45553093140641 * S_NumStorePurchases
666926    +          +      0.5593655963659 * S_NumWebPurchases
666927    +          +     0.27943768691188 * S_NumWebVisitsMonth
666928    +          +     1.94452735574997 * S_RFMstat  +    -0.89811355261154 *
666929    +        S_RMntFrq  +    -1.62796011550484 * S_Recency
666930    +          +     0.60487421956906 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 1.73048436159558 * S_AcceptedCmpTotal + 1.91388487556197 * 
S_Age + 0.14880026885923 * S_Frq + 0.5905347897806 * S_Income + 1.67048168226736 * S_Kidhome + 
0.03869174467752 * S_Mnt + -0.71187911364266 * S_MntFishProducts + 0.93023590693473 * 
S_MntFruits + 0.22907372790948 * S_MntGoldProds + -1.05941282177437 * S_MntMeatProducts + 
-0.73905281508342 * S_MntSweetProducts + 0.04429898588386 * S_MntWines + -0.47487263648723 * 
S_MonthsAsCustomer + 0.00382111008361 * S_NumCatalogPurchases + -0.21237915559831 * 
S_NumDealsPurchases + 0.48256923764182 * S_NumDistPurchases + -0.45553093140641 * 
S_NumStorePurchases + 0.5593655963659 * S_NumWebPurchases + 0.27943768691188 * 
S_NumWebVisitsMonth + 1.94452735574997 * S_RFMstat + -0.89811355261154 * S_RMntFrq + 
-1.62796011550484 * S_Recency + 0.60487421956906 * S_Teenhome ;
666931    +   H1x2_6  =    -0.32010880515459 * S_AcceptedCmpTotal
666932    +          +     0.95304983421791 * S_Age  +      -0.316044010281 * S_Frq
666933    +          +     1.10925678578158 * S_Income  +     1.28019020117471 *
666934    +        S_Kidhome  +     1.02498438668688 * S_Mnt  +     -1.8898236827792 *
666935    +        S_MntFishProducts  +     0.96543971612672 * S_MntFruits
666936    +          +    -0.21422669977227 * S_MntGoldProds  +     -0.0840639948559 *
666937    +        S_MntMeatProducts  +     1.27902687109389 * S_MntSweetProducts
666938    +          +    -1.38957846154598 * S_MntWines  +     0.80004372871482 *
666939    +        S_MonthsAsCustomer  +    -0.19381123279552 * S_NumCatalogPurchases
666940    +          +     2.38967021388062 * S_NumDealsPurchases
666941    +          +    -0.97722398866481 * S_NumDistPurchases
666942    +          +     1.57612333191312 * S_NumStorePurchases
666943    +          +    -0.75968679115983 * S_NumWebPurchases
666944    +          +    -0.64207187757251 * S_NumWebVisitsMonth
666945    +          +     1.06529999122381 * S_RFMstat  +     0.67095385521555 *
666946    +        S_RMntFrq  +     1.71313869798331 * S_Recency
666947    +          +     1.39045686636707 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_6 = -0.32010880515459 * S_AcceptedCmpTotal + 0.95304983421791 * 
S_Age + -0.316044010281 * S_Frq + 1.10925678578158 * S_Income + 1.28019020117471 * S_Kidhome + 
1.02498438668688 * S_Mnt + -1.8898236827792 * S_MntFishProducts + 0.96543971612672 * 
S_MntFruits + -0.21422669977227 * S_MntGoldProds + -0.0840639948559 * S_MntMeatProducts + 
1.27902687109389 * S_MntSweetProducts + -1.38957846154598 * S_MntWines + 0.80004372871482 * 
S_MonthsAsCustomer + -0.19381123279552 * S_NumCatalogPurchases + 2.38967021388062 * 
S_NumDealsPurchases + -0.97722398866481 * S_NumDistPurchases + 1.57612333191312 * 
S_NumStorePurchases + -0.75968679115983 * S_NumWebPurchases + -0.64207187757251 * 
S_NumWebVisitsMonth + 1.06529999122381 * S_RFMstat + 0.67095385521555 * S_RMntFrq + 
1.71313869798331 * S_Recency + 1.39045686636707 * S_Teenhome ;
666948    +   H1x2_1  = H1x2_1  +    -1.32125124093028 * AcceptedCmp10
666949    +          +    -0.61219063588492 * AcceptedCmp20  +     1.20821214973577 *
666950    +        AcceptedCmp30  +    -1.13548727550981 * AcceptedCmp40
666951    +          +     0.04405769197194 * AcceptedCmp50  +      0.7940658605271 *
666952    +        Complain0  +     1.05933486404834 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -1.32125124093028 * AcceptedCmp10 + -0.61219063588492 
* AcceptedCmp20 + 1.20821214973577 * AcceptedCmp30 + -1.13548727550981 * AcceptedCmp40 + 
0.04405769197194 * AcceptedCmp50 + 0.7940658605271 * Complain0 + 1.05933486404834 * 
HigherEducationBinary0 ;
666953    +   H1x2_2  = H1x2_2  +     1.56313777120806 * AcceptedCmp10
666954    +          +    -1.12997680537456 * AcceptedCmp20  +     1.19262470365504 *
666955    +        AcceptedCmp30  +    -0.98995493161689 * AcceptedCmp40
666956    +          +      -1.827141957557 * AcceptedCmp50  +    -0.43809188233899 *
666957    +        Complain0  +      -0.627000653672 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 1.56313777120806 * AcceptedCmp10 + -1.12997680537456 * 
AcceptedCmp20 + 1.19262470365504 * AcceptedCmp30 + -0.98995493161689 * AcceptedCmp40 + 
-1.827141957557 * AcceptedCmp50 + -0.43809188233899 * Complain0 + -0.627000653672 * 
HigherEducationBinary0 ;
666958    +   H1x2_3  = H1x2_3  +     1.32174755827017 * AcceptedCmp10
666959    +          +     1.00086479754098 * AcceptedCmp20  +      0.4636133487385 *
666960    +        AcceptedCmp30  +     1.34878553883758 * AcceptedCmp40
666961    +          +    -2.36241584924476 * AcceptedCmp50  +       1.082421071431 *
666962    +        Complain0  +    -0.32514144517436 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 1.32174755827017 * AcceptedCmp10 + 1.00086479754098 * 
AcceptedCmp20 + 0.4636133487385 * AcceptedCmp30 + 1.34878553883758 * AcceptedCmp40 + 
-2.36241584924476 * AcceptedCmp50 + 1.082421071431 * Complain0 + -0.32514144517436 * 
HigherEducationBinary0 ;
666963    +   H1x2_4  = H1x2_4  +     0.39556775796131 * AcceptedCmp10
666964    +          +     0.06457727211285 * AcceptedCmp20  +    -1.44632749800655 *
666965    +        AcceptedCmp30  +     1.20294678514383 * AcceptedCmp40
666966    +          +    -0.01594330886358 * AcceptedCmp50  +    -2.06895895180485 *
666967    +        Complain0  +    -0.01374012569775 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 0.39556775796131 * AcceptedCmp10 + 0.06457727211285 * 
AcceptedCmp20 + -1.44632749800655 * AcceptedCmp30 + 1.20294678514383 * AcceptedCmp40 + 
-0.01594330886358 * AcceptedCmp50 + -2.06895895180485 * Complain0 + -0.01374012569775 * 
HigherEducationBinary0 ;
666968    +   H1x2_5  = H1x2_5  +     1.11945933535638 * AcceptedCmp10
666969    +          +     0.26383973979566 * AcceptedCmp20  +    -0.40426240061746 *
666970    +        AcceptedCmp30  +     1.46916781894719 * AcceptedCmp40
666971    +          +     0.26827715088644 * AcceptedCmp50  +     1.50074465469998 *
666972    +        Complain0  +     -1.0626185000486 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 1.11945933535638 * AcceptedCmp10 + 0.26383973979566 * 
AcceptedCmp20 + -0.40426240061746 * AcceptedCmp30 + 1.46916781894719 * AcceptedCmp40 + 
0.26827715088644 * AcceptedCmp50 + 1.50074465469998 * Complain0 + -1.0626185000486 * 
HigherEducationBinary0 ;
666973    +   H1x2_6  = H1x2_6  +    -0.87625232174239 * AcceptedCmp10
666974    +          +     0.72228047975642 * AcceptedCmp20  +     1.34904015028355 *
666975    +        AcceptedCmp30  +     1.55639496207852 * AcceptedCmp40
666976    +          +    -0.98741935337746 * AcceptedCmp50  +     0.99421811137074 *
666977    +        Complain0  +    -1.69180618270074 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 + -0.87625232174239 * AcceptedCmp10 + 0.72228047975642 * 
AcceptedCmp20 + 1.34904015028355 * AcceptedCmp30 + 1.55639496207852 * AcceptedCmp40 + 
-0.98741935337746 * AcceptedCmp50 + 0.99421811137074 * Complain0 + -1.69180618270074 * 
HigherEducationBinary0 ;
666978    +   H1x2_1  = H1x2_1  +    -0.17034446979478 * Education2n_Cycle
666979    +          +    -0.75872196172063 * EducationBasic  +     0.44107677662894 *
666980    +        EducationGraduation  +      0.1073450284316 * EducationMaster
666981    +          +     0.96470902298142 * Marital_StatusDivorced
666982    +          +     0.94805959268314 * Marital_StatusMarried
666983    +          +     -0.6523948769616 * Marital_StatusSingle
666984    +          +     0.07557344719737 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.17034446979478 * Education2n_Cycle + 
-0.75872196172063 * EducationBasic + 0.44107677662894 * EducationGraduation + 0.1073450284316 
* EducationMaster + 0.96470902298142 * Marital_StatusDivorced + 0.94805959268314 * 
Marital_StatusMarried + -0.6523948769616 * Marital_StatusSingle + 0.07557344719737 * 
Marital_StatusTogether ;
666985    +   H1x2_2  = H1x2_2  +    -0.42515060901662 * Education2n_Cycle
666986    +          +    -1.05213629639837 * EducationBasic  +     0.72603871617959 *
666987    +        EducationGraduation  +    -1.34927753306064 * EducationMaster
666988    +          +      0.3918249505531 * Marital_StatusDivorced
666989    +          +    -0.00968091979586 * Marital_StatusMarried
666990    +          +     0.84615379885071 * Marital_StatusSingle
666991    +          +     0.34817324570682 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -0.42515060901662 * Education2n_Cycle + 
-1.05213629639837 * EducationBasic + 0.72603871617959 * EducationGraduation + 
-1.34927753306064 * EducationMaster + 0.3918249505531 * Marital_StatusDivorced + 
-0.00968091979586 * Marital_StatusMarried + 0.84615379885071 * Marital_StatusSingle + 
0.34817324570682 * Marital_StatusTogether ;
666992    +   H1x2_3  = H1x2_3  +    -0.31002362860852 * Education2n_Cycle
666993    +          +     1.40744525716089 * EducationBasic  +     2.06403096539358 *
666994    +        EducationGraduation  +     -0.8672743321499 * EducationMaster
666995    +          +     1.14335160313191 * Marital_StatusDivorced
666996    +          +     0.50580517192175 * Marital_StatusMarried
666997    +          +     0.17264295020921 * Marital_StatusSingle
666998    +          +    -0.58193119255736 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + -0.31002362860852 * Education2n_Cycle + 
1.40744525716089 * EducationBasic + 2.06403096539358 * EducationGraduation + -0.8672743321499 
* EducationMaster + 1.14335160313191 * Marital_StatusDivorced + 0.50580517192175 * 
Marital_StatusMarried + 0.17264295020921 * Marital_StatusSingle + -0.58193119255736 * 
Marital_StatusTogether ;
666999    +   H1x2_4  = H1x2_4  +     0.55057637605468 * Education2n_Cycle
667000    +          +    -0.73070803276142 * EducationBasic  +     0.40424625808481 *
667001    +        EducationGraduation  +     1.95818378342783 * EducationMaster
667002    +          +    -0.11238504444225 * Marital_StatusDivorced
667003    +          +    -0.81348274043749 * Marital_StatusMarried
667004    +          +     0.46075415610001 * Marital_StatusSingle
667005    +          +    -0.17552649817722 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 0.55057637605468 * Education2n_Cycle + 
-0.73070803276142 * EducationBasic + 0.40424625808481 * EducationGraduation + 1.95818378342783 
* EducationMaster + -0.11238504444225 * Marital_StatusDivorced + -0.81348274043749 * 
Marital_StatusMarried + 0.46075415610001 * Marital_StatusSingle + -0.17552649817722 * 
Marital_StatusTogether ;
667006    +   H1x2_5  = H1x2_5  +     0.43341125564688 * Education2n_Cycle
667007    +          +     2.81958018976644 * EducationBasic  +     0.28773362443315 *
667008    +        EducationGraduation  +     0.08396135672504 * EducationMaster
667009    +          +    -0.46342068701431 * Marital_StatusDivorced
667010    +          +    -0.41667845270204 * Marital_StatusMarried
667011    +          +    -0.47166707496281 * Marital_StatusSingle
667012    +          +     0.54110155717306 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 0.43341125564688 * Education2n_Cycle + 
2.81958018976644 * EducationBasic + 0.28773362443315 * EducationGraduation + 0.08396135672504 
* EducationMaster + -0.46342068701431 * Marital_StatusDivorced + -0.41667845270204 * 
Marital_StatusMarried + -0.47166707496281 * Marital_StatusSingle + 0.54110155717306 * 
Marital_StatusTogether ;
667013    +   H1x2_6  = H1x2_6  +    -0.27163102711307 * Education2n_Cycle
667014    +          +    -0.04052143781957 * EducationBasic  +     0.97902549344774 *
667015    +        EducationGraduation  +     0.36656103863186 * EducationMaster
667016    +          +    -0.45376613787812 * Marital_StatusDivorced
667017    +          +     0.01337046049801 * Marital_StatusMarried
667018    +          +    -0.92811489484121 * Marital_StatusSingle
667019    +          +     1.52402650450634 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 + -0.27163102711307 * Education2n_Cycle + 
-0.04052143781957 * EducationBasic + 0.97902549344774 * EducationGraduation + 0.36656103863186 
* EducationMaster + -0.45376613787812 * Marital_StatusDivorced + 0.01337046049801 * 
Marital_StatusMarried + -0.92811489484121 * Marital_StatusSingle + 1.52402650450634 * 
Marital_StatusTogether ;
667020    +   H1x2_1  =     0.27200642200874 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.27200642200874 + H1x2_1 ;
667021    +   H1x2_2  =     0.52117161047058 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 0.52117161047058 + H1x2_2 ;
667022    +   H1x2_3  =    -1.04763461279984 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -1.04763461279984 + H1x2_3 ;
667023    +   H1x2_4  =     0.10516307959318 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 0.10516307959318 + H1x2_4 ;
667024    +   H1x2_5  =     1.24237093160919 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 1.24237093160919 + H1x2_5 ;
667025    +   H1x2_6  =    -0.57977518763852 + H1x2_6 ;
MPRINT(EM_DIAGRAM):   H1x2_6 = -0.57977518763852 + H1x2_6 ;
667026    +   H1x2_7  = 0;
MPRINT(EM_DIAGRAM):   H1x2_7 = 0;
667027    +   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 , H1x2_7
667028    +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 , 
H1x2_7 );
667029    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
667030    +   H1x2_1  = EXP(H1x2_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_1 = EXP(H1x2_1 - _MAX_);
667031    +   _SUM_ = _SUM_ + H1x2_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_1 ;
667032    +   H1x2_2  = EXP(H1x2_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_2 = EXP(H1x2_2 - _MAX_);
667033    +   _SUM_ = _SUM_ + H1x2_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_2 ;
667034    +   H1x2_3  = EXP(H1x2_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_3 = EXP(H1x2_3 - _MAX_);
667035    +   _SUM_ = _SUM_ + H1x2_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_3 ;
667036    +   H1x2_4  = EXP(H1x2_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_4 = EXP(H1x2_4 - _MAX_);
667037    +   _SUM_ = _SUM_ + H1x2_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_4 ;
667038    +   H1x2_5  = EXP(H1x2_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_5 = EXP(H1x2_5 - _MAX_);
667039    +   _SUM_ = _SUM_ + H1x2_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_5 ;
667040    +   H1x2_6  = EXP(H1x2_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_6 = EXP(H1x2_6 - _MAX_);
667041    +   _SUM_ = _SUM_ + H1x2_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_6 ;
667042    +   H1x2_7  = EXP(H1x2_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_7 = EXP(H1x2_7 - _MAX_);
667043    +   _SUM_ = _SUM_ + H1x2_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_7 ;
667044    +   H1x2_1  = H1x2_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 / _SUM_;
667045    +   H1x2_2  = H1x2_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 / _SUM_;
667046    +   H1x2_3  = H1x2_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 / _SUM_;
667047    +   H1x2_4  = H1x2_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 / _SUM_;
667048    +   H1x2_5  = H1x2_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 / _SUM_;
667049    +   H1x2_6  = H1x2_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 / _SUM_;
667050    +   H1x2_7  = H1x2_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_7 = H1x2_7 / _SUM_;
667051    +END;
MPRINT(EM_DIAGRAM):   END;
667052    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
667053    +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
667054    +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
667055    +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
667056    +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
667057    +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
667058    +   H1x2_6  = .;
MPRINT(EM_DIAGRAM):   H1x2_6 = .;
667059    +   H1x2_7  = .;
MPRINT(EM_DIAGRAM):   H1x2_7 = .;
667060    +END;
MPRINT(EM_DIAGRAM):   END;
667061    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
667062    +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
667063    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
667064    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
667065    +   H2x1_1  =     3.19986933046591 * H1x1_1  +    -0.53665634063887 * H1x1_2
667066    +          +     1.71172628690017 * H1x1_3  +    -1.33944402954134 * H1x1_4
667067    +          +    -1.93533827156845 * H1x1_5  +    -0.85772802964317 * H1x1_6
667068    +          +     0.60984669129006 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 3.19986933046591 * H1x1_1 + -0.53665634063887 * H1x1_2 + 
1.71172628690017 * H1x1_3 + -1.33944402954134 * H1x1_4 + -1.93533827156845 * H1x1_5 + 
-0.85772802964317 * H1x1_6 + 0.60984669129006 * H1x1_7 ;
667069    +   H2x1_2  =     -2.1883484075031 * H1x1_1  +     0.17578635446135 * H1x1_2
667070    +          +    -1.79384950890077 * H1x1_3  +     0.88942614754722 * H1x1_4
667071    +          +     0.41077752133457 * H1x1_5  +       0.509832853125 * H1x1_6
667072    +          +    -0.28121910805072 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -2.1883484075031 * H1x1_1 + 0.17578635446135 * H1x1_2 + 
-1.79384950890077 * H1x1_3 + 0.88942614754722 * H1x1_4 + 0.41077752133457 * H1x1_5 + 
0.509832853125 * H1x1_6 + -0.28121910805072 * H1x1_7 ;
667073    +   H2x1_3  =     0.86281981700921 * H1x1_1  +    -1.15482345233328 * H1x1_2
667074    +          +     0.64743938802141 * H1x1_3  +     1.08117298211616 * H1x1_4
667075    +          +      -0.363297480437 * H1x1_5  +    -1.58703254226713 * H1x1_6
667076    +          +     0.54468402771449 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = 0.86281981700921 * H1x1_1 + -1.15482345233328 * H1x1_2 + 
0.64743938802141 * H1x1_3 + 1.08117298211616 * H1x1_4 + -0.363297480437 * H1x1_5 + 
-1.58703254226713 * H1x1_6 + 0.54468402771449 * H1x1_7 ;
667077    +   H2x1_4  =    -0.43420906601647 * H1x1_1  +     0.36485369627974 * H1x1_2
667078    +          +    -2.42315183886716 * H1x1_3  +     0.22337896770247 * H1x1_4
667079    +          +    -0.65684369622605 * H1x1_5  +     0.25211011207532 * H1x1_6
667080    +          +     0.16704425645668 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = -0.43420906601647 * H1x1_1 + 0.36485369627974 * H1x1_2 + 
-2.42315183886716 * H1x1_3 + 0.22337896770247 * H1x1_4 + -0.65684369622605 * H1x1_5 + 
0.25211011207532 * H1x1_6 + 0.16704425645668 * H1x1_7 ;
667081    +   H2x1_5  =     0.61083333511105 * H1x1_1  +     1.11038871398931 * H1x1_2
667082    +          +      0.4617674661653 * H1x1_3  +    -0.42039958365963 * H1x1_4
667083    +          +    -1.37408000010678 * H1x1_5  +     0.03897439094411 * H1x1_6
667084    +          +    -0.82592861674077 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = 0.61083333511105 * H1x1_1 + 1.11038871398931 * H1x1_2 + 
0.4617674661653 * H1x1_3 + -0.42039958365963 * H1x1_4 + -1.37408000010678 * H1x1_5 + 
0.03897439094411 * H1x1_6 + -0.82592861674077 * H1x1_7 ;
667085    +   H2x1_6  =     1.30877201101082 * H1x1_1  +     1.55143256487324 * H1x1_2
667086    +          +    -1.20237741381937 * H1x1_3  +       2.394122059946 * H1x1_4
667087    +          +     1.83804290225468 * H1x1_5  +     0.83132818010396 * H1x1_6
667088    +          +     1.18399340483001 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = 1.30877201101082 * H1x1_1 + 1.55143256487324 * H1x1_2 + 
-1.20237741381937 * H1x1_3 + 2.394122059946 * H1x1_4 + 1.83804290225468 * H1x1_5 + 
0.83132818010396 * H1x1_6 + 1.18399340483001 * H1x1_7 ;
667089    +   H2x1_1  = H2x1_1  +    -2.41276052972753 * H1x2_1
667090    +          +     0.38601054263899 * H1x2_2  +     0.54498789581044 * H1x2_3
667091    +          +    -0.55304188445569 * H1x2_4  +     0.29484780749868 * H1x2_5
667092    +          +     0.44012580105051 * H1x2_6  +     0.43086375065556 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -2.41276052972753 * H1x2_1 + 0.38601054263899 * H1x2_2 
+ 0.54498789581044 * H1x2_3 + -0.55304188445569 * H1x2_4 + 0.29484780749868 * H1x2_5 + 
0.44012580105051 * H1x2_6 + 0.43086375065556 * H1x2_7 ;
667093    +   H2x1_2  = H2x1_2  +    -1.03173201511154 * H1x2_1
667094    +          +     0.62119574580435 * H1x2_2  +     1.71782745718335 * H1x2_3
667095    +          +     0.05391903933014 * H1x2_4  +     1.52443015967438 * H1x2_5
667096    +          +     0.22301831343286 * H1x2_6  +     0.66204940430171 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + -1.03173201511154 * H1x2_1 + 0.62119574580435 * H1x2_2 
+ 1.71782745718335 * H1x2_3 + 0.05391903933014 * H1x2_4 + 1.52443015967438 * H1x2_5 + 
0.22301831343286 * H1x2_6 + 0.66204940430171 * H1x2_7 ;
667097    +   H2x1_3  = H2x1_3  +     1.37871502475142 * H1x2_1
667098    +          +     0.02099445181492 * H1x2_2  +     0.44720218317742 * H1x2_3
667099    +          +    -1.29625929820096 * H1x2_4  +    -1.29169956389384 * H1x2_5
667100    +          +    -0.21403739905139 * H1x2_6  +    -0.03075946378871 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + 1.37871502475142 * H1x2_1 + 0.02099445181492 * H1x2_2 
+ 0.44720218317742 * H1x2_3 + -1.29625929820096 * H1x2_4 + -1.29169956389384 * H1x2_5 + 
-0.21403739905139 * H1x2_6 + -0.03075946378871 * H1x2_7 ;
667101    +   H2x1_4  = H2x1_4  +     1.94121727472617 * H1x2_1
667102    +          +     0.23207290279299 * H1x2_2  +      0.3162872281134 * H1x2_3
667103    +          +    -0.40199017937523 * H1x2_4  +     0.69294460110289 * H1x2_5
667104    +          +    -1.00758272664059 * H1x2_6  +    -1.41698057960021 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + 1.94121727472617 * H1x2_1 + 0.23207290279299 * H1x2_2 
+ 0.3162872281134 * H1x2_3 + -0.40199017937523 * H1x2_4 + 0.69294460110289 * H1x2_5 + 
-1.00758272664059 * H1x2_6 + -1.41698057960021 * H1x2_7 ;
667105    +   H2x1_5  = H2x1_5  +     1.19546023857185 * H1x2_1
667106    +          +    -1.00266987736442 * H1x2_2  +     0.71838447032796 * H1x2_3
667107    +          +     1.70968347732204 * H1x2_4  +    -0.26894423802892 * H1x2_5
667108    +          +    -0.61655519090213 * H1x2_6  +     2.21931491555405 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + 1.19546023857185 * H1x2_1 + -1.00266987736442 * H1x2_2 
+ 0.71838447032796 * H1x2_3 + 1.70968347732204 * H1x2_4 + -0.26894423802892 * H1x2_5 + 
-0.61655519090213 * H1x2_6 + 2.21931491555405 * H1x2_7 ;
667109    +   H2x1_6  = H2x1_6  +    -0.48559886762231 * H1x2_1
667110    +          +     0.93218274010134 * H1x2_2  +     0.23140948782865 * H1x2_3
667111    +          +     0.72139310562219 * H1x2_4  +    -0.11143939877368 * H1x2_5
667112    +          +     0.74022211257293 * H1x2_6  +      1.0449314568566 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 + -0.48559886762231 * H1x2_1 + 0.93218274010134 * H1x2_2 
+ 0.23140948782865 * H1x2_3 + 0.72139310562219 * H1x2_4 + -0.11143939877368 * H1x2_5 + 
0.74022211257293 * H1x2_6 + 1.0449314568566 * H1x2_7 ;
667113    +   H2x1_1  =     0.42952855003777 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 0.42952855003777 + H2x1_1 ;
667114    +   H2x1_2  =     1.61752083096638 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.61752083096638 + H2x1_2 ;
667115    +   H2x1_3  =    -0.71617788867723 + H2x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -0.71617788867723 + H2x1_3 ;
667116    +   H2x1_4  =     0.39147546708847 + H2x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 0.39147546708847 + H2x1_4 ;
667117    +   H2x1_5  =    -0.56259054185247 + H2x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = -0.56259054185247 + H2x1_5 ;
667118    +   H2x1_6  =     0.31857109159246 + H2x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = 0.31857109159246 + H2x1_6 ;
667119    +   H2x1_7  = 0;
MPRINT(EM_DIAGRAM):   H2x1_7 = 0;
667120    +   _MAX_ = MAX (H2x1_1 , H2x1_2 , H2x1_3 , H2x1_4 , H2x1_5 , H2x1_6 , H2x1_7
667121    +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H2x1_1 , H2x1_2 , H2x1_3 , H2x1_4 , H2x1_5 , H2x1_6 , 
H2x1_7 );
667122    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
667123    +   H2x1_1  = EXP(H2x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_1 = EXP(H2x1_1 - _MAX_);
667124    +   _SUM_ = _SUM_ + H2x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_1 ;
667125    +   H2x1_2  = EXP(H2x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_2 = EXP(H2x1_2 - _MAX_);
667126    +   _SUM_ = _SUM_ + H2x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_2 ;
667127    +   H2x1_3  = EXP(H2x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_3 = EXP(H2x1_3 - _MAX_);
667128    +   _SUM_ = _SUM_ + H2x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_3 ;
667129    +   H2x1_4  = EXP(H2x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_4 = EXP(H2x1_4 - _MAX_);
667130    +   _SUM_ = _SUM_ + H2x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_4 ;
667131    +   H2x1_5  = EXP(H2x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_5 = EXP(H2x1_5 - _MAX_);
667132    +   _SUM_ = _SUM_ + H2x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_5 ;
667133    +   H2x1_6  = EXP(H2x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_6 = EXP(H2x1_6 - _MAX_);
667134    +   _SUM_ = _SUM_ + H2x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_6 ;
667135    +   H2x1_7  = EXP(H2x1_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_7 = EXP(H2x1_7 - _MAX_);
667136    +   _SUM_ = _SUM_ + H2x1_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_7 ;
667137    +   H2x1_1  = H2x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 / _SUM_;
667138    +   H2x1_2  = H2x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 / _SUM_;
667139    +   H2x1_3  = H2x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 / _SUM_;
667140    +   H2x1_4  = H2x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 / _SUM_;
667141    +   H2x1_5  = H2x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 / _SUM_;
667142    +   H2x1_6  = H2x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 / _SUM_;
667143    +   H2x1_7  = H2x1_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_7 = H2x1_7 / _SUM_;
667144    +END;
MPRINT(EM_DIAGRAM):   END;
667145    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
667146    +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
667147    +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
667148    +   H2x1_3  = .;
MPRINT(EM_DIAGRAM):   H2x1_3 = .;
667149    +   H2x1_4  = .;
MPRINT(EM_DIAGRAM):   H2x1_4 = .;
667150    +   H2x1_5  = .;
MPRINT(EM_DIAGRAM):   H2x1_5 = .;
667151    +   H2x1_6  = .;
MPRINT(EM_DIAGRAM):   H2x1_6 = .;
667152    +   H2x1_7  = .;
MPRINT(EM_DIAGRAM):   H2x1_7 = .;
667153    +END;
MPRINT(EM_DIAGRAM):   END;
667154    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
667155    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
667156    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
667157    +
667158    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
667159    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
667160    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
667161    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
667162    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
667163    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
667164    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
667165    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
667166    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
667167    +end;
MPRINT(EM_DIAGRAM):   end;
667168    +else do;
MPRINT(EM_DIAGRAM):   else do;
667169    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
667170    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
667171    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
667172    +   end;
MPRINT(EM_DIAGRAM):   end;
667173    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
667174    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
667175    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
667176    +   end;
MPRINT(EM_DIAGRAM):   end;
667177    +   else do;
MPRINT(EM_DIAGRAM):   else do;
667178    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
667179    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
667180    +   end;
MPRINT(EM_DIAGRAM):   end;
667181    +end;
MPRINT(EM_DIAGRAM):   end;
667182    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
667183    +   P_DepVar1  =     25.2027326018714 * H2x1_1  +    -8.05331379419082 * H2x1_2
667184    +          +     2.64798805383536 * H2x1_3  +    -4.52736775271107 * H2x1_4
667185    +          +     6.71812741736202 * H2x1_5  +    -12.2785047473885 * H2x1_6
667186    +          +    -4.41291972336422 * H2x1_7 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 25.2027326018714 * H2x1_1 + -8.05331379419082 * H2x1_2 + 
2.64798805383536 * H2x1_3 + -4.52736775271107 * H2x1_4 + 6.71812741736202 * H2x1_5 + 
-12.2785047473885 * H2x1_6 + -4.41291972336422 * H2x1_7 ;
667187    +   P_DepVar1  =     1.22134962002326 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 1.22134962002326 + P_DepVar1 ;
667188    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
667189    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
667190    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
667191    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
667192    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
667193    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
667194    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
667195    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
667196    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
667197    +END;
MPRINT(EM_DIAGRAM):   END;
667198    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
667199    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
667200    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
667201    +END;
MPRINT(EM_DIAGRAM):   END;
667202    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
667203    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
667204    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
667205    +END;
MPRINT(EM_DIAGRAM):   END;
667206    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
667207    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
667208    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
667209    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
667210    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
667211    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
667212    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
667213    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
667214    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
667215    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
667216    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
667217    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
667218    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
667219    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
667220    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
667221    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
667222    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
667223    +END;
MPRINT(EM_DIAGRAM):   END;
667224    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
667225    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
667226    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
667227    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
667228     run;

NOTE: DATA STEP view saved on file EMWS8.AUTONEURAL12_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.META_VALIDATE.VIEW used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
      

MPRINT(EM_DIAGRAM):   quit;
667229     quit;
667230     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
667231     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
667232     * AutoNeural12: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * AutoNeural12: Computing metadata for TRAIN data;
667233     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;

NOTE: View EMWS8.AUTONEURAL12_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
      
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural12\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS8.AutoNeural12_TRAIN out=_tempAdvisor 
noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS8.AutoNeural12_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS8.AutoNeural12_TRAIN out=WORK.M2RFX9ZT 
noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2RFX9ZT;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20 
INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M2RFX9ZT(keep=name type length label format formatl 
formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then format = strip(format)!!strip(put(formatl, 
best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, 
best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then informat = 
strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, 
best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2RFX9ZT;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M2RFX9ZT;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M0P9QDOF NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0P9QDOF;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M0P9QDOF;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2XZGAV3(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M0P9QDOF;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0P9QDOF;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 
FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M0P9QDOF;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" 
"MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" 
"QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" "YEAR" "YYMMDD" "YYMON" 
"YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" 
"EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) 
formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = 
"DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) 
formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" 
"NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" 
"SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = 
"DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then 
level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 
'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 
'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ 
('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 
'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 
'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0P9QDOF;
MPRINT(EMADVISECOLUMNS):   set WORK.M0P9QDOF;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= 
"Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= 
"Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower limit" UPPERLIMIT= 
"Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= 
"Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Meta_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Meta_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural12_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT 
LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "AutoNeural12";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("P_DEPVAR1") creator = "AutoNeural12";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR1") creator = "AutoNeural12";
MPRINT(EM_DIAGRAM):   when("P_DEPVAR0") creator = "AutoNeural12";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR0") creator = "AutoNeural12";
MPRINT(EM_DIAGRAM):   when("F_DEPVAR") creator = "AutoNeural12";
MPRINT(EM_DIAGRAM):   when("I_DEPVAR") creator = "AutoNeural12";
MPRINT(EM_DIAGRAM):   when("U_DEPVAR") creator = "AutoNeural12";
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "AutoNeural12";
MPRINT(EM_DIAGRAM):   when("DEPVAR") model = "AutoNeural12";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * AutoNeural12: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
667545     data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
667546     set EMWS8.AutoNeural12_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural12_EMINFO;
667547     where DATA='AutoNeural12' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='AutoNeural12' and KEY ^in('DECDATA', 'DECMETA', 
'IMPORTANCE', 'MODEL');
667548     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.AUTONEURAL12_EMINFO.
      WHERE (DATA='AutoNeural12') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

667549     data EMWS8.AutoNeural12_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural12_EMINFO;
667550     length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
667551     input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
667552     cards;
MPRINT(EM_DIAGRAM):   cards;

NOTE: The data set EMWS8.AUTONEURAL12_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   run;
667556     run;
667557     data EMWS8.AutoNeural12_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural12_EMINFO;
667558     set EMWS8.AutoNeural12_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural12_EMINFO WORK.MODELTEMP_INFO;
667559     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.AUTONEURAL12_EMINFO.
NOTE: There were 0 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS8.AUTONEURAL12_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

667560     proc sort data = EMWS8.AutoNeural12_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.AutoNeural12_EMINFO NOTHREADS;
667561     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
667562     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.AUTONEURAL12_EMINFO.
NOTE: The data set EMWS8.AUTONEURAL12_EMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

667563     proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
667564     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
667565     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set EMWS8.FIMPORT_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 1 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

667566     proc sort data = EMWS8.AutoNeural12_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS8.AutoNeural12_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
667567     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
667568     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 3 observations read from the data set EMWS8.AUTONEURAL12_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

667569     data EMWS8.AutoNeural12_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural12_EMINFO;
667570     merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
667571     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
667572     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 3 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS8.AUTONEURAL12_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

667573     proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
667574     delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
667575     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
667576     quit;
MPRINT(EM_DIAGRAM):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

NOTE: View EMWS8.AUTONEURAL12_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
      
NOTE: View EMWS8.AUTONEURAL12_VALIDATE.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
      
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
