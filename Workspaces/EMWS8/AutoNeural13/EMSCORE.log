MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "28. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "09.47 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                28. April 2016
Time:                09.47 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O07B7JI9 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural13\EMSCORE.out" encoding="UTF-8" 
NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O07B7JI9 new;
MPRINT(EM_DIAGRAM):   run;
1708906    filename emflow
1708906  ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural13\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural13\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * AutoNeural13: Scoring DATA data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1708907    *------------------------------------------------------------*;
1708908    * AutoNeural13: Scoring DATA data;
1708909    *------------------------------------------------------------*;
1708910    data EMWS8.AutoNeural13_TRAIN
1708911    / view=EMWS8.AutoNeural13_TRAIN
1708912    ;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural13_TRAIN / view=EMWS8.AutoNeural13_TRAIN ;
1708913    set EMWS8.PRINCOMP_TRAIN
1708914    ;
MPRINT(EM_DIAGRAM):   set EMWS8.PRINCOMP_TRAIN ;
1708915    %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural13\EMFLOWSCORE.sas.
1708916   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1708917   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1708918   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1708919   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1708920   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1708921   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1708922   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1708923   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1708924   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1708925   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1708926   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1708927   +LENGTH _WARN_ $4
1708928   +      F_DepVar  $ 12
1708929   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1708930   +      label S_PC_1 = 'Standard: PC_1' ;
MPRINT(EM_DIAGRAM):   label S_PC_1 = 'Standard: PC_1' ;
1708931   +
1708932   +      label S_PC_10 = 'Standard: PC_10' ;
MPRINT(EM_DIAGRAM):   label S_PC_10 = 'Standard: PC_10' ;
1708933   +
1708934   +      label S_PC_11 = 'Standard: PC_11' ;
MPRINT(EM_DIAGRAM):   label S_PC_11 = 'Standard: PC_11' ;
1708935   +
1708936   +      label S_PC_12 = 'Standard: PC_12' ;
MPRINT(EM_DIAGRAM):   label S_PC_12 = 'Standard: PC_12' ;
1708937   +
1708938   +      label S_PC_13 = 'Standard: PC_13' ;
MPRINT(EM_DIAGRAM):   label S_PC_13 = 'Standard: PC_13' ;
1708939   +
1708940   +      label S_PC_14 = 'Standard: PC_14' ;
MPRINT(EM_DIAGRAM):   label S_PC_14 = 'Standard: PC_14' ;
1708941   +
1708942   +      label S_PC_15 = 'Standard: PC_15' ;
MPRINT(EM_DIAGRAM):   label S_PC_15 = 'Standard: PC_15' ;
1708943   +
1708944   +      label S_PC_16 = 'Standard: PC_16' ;
MPRINT(EM_DIAGRAM):   label S_PC_16 = 'Standard: PC_16' ;
1708945   +
1708946   +      label S_PC_17 = 'Standard: PC_17' ;
MPRINT(EM_DIAGRAM):   label S_PC_17 = 'Standard: PC_17' ;
1708947   +
1708948   +      label S_PC_2 = 'Standard: PC_2' ;
MPRINT(EM_DIAGRAM):   label S_PC_2 = 'Standard: PC_2' ;
1708949   +
1708950   +      label S_PC_3 = 'Standard: PC_3' ;
MPRINT(EM_DIAGRAM):   label S_PC_3 = 'Standard: PC_3' ;
1708951   +
1708952   +      label S_PC_4 = 'Standard: PC_4' ;
MPRINT(EM_DIAGRAM):   label S_PC_4 = 'Standard: PC_4' ;
1708953   +
1708954   +      label S_PC_5 = 'Standard: PC_5' ;
MPRINT(EM_DIAGRAM):   label S_PC_5 = 'Standard: PC_5' ;
1708955   +
1708956   +      label S_PC_6 = 'Standard: PC_6' ;
MPRINT(EM_DIAGRAM):   label S_PC_6 = 'Standard: PC_6' ;
1708957   +
1708958   +      label S_PC_7 = 'Standard: PC_7' ;
MPRINT(EM_DIAGRAM):   label S_PC_7 = 'Standard: PC_7' ;
1708959   +
1708960   +      label S_PC_8 = 'Standard: PC_8' ;
MPRINT(EM_DIAGRAM):   label S_PC_8 = 'Standard: PC_8' ;
1708961   +
1708962   +      label S_PC_9 = 'Standard: PC_9' ;
MPRINT(EM_DIAGRAM):   label S_PC_9 = 'Standard: PC_9' ;
1708963   +
1708964   +      label S_Year_Birth = 'Standard: Year_Birth' ;
MPRINT(EM_DIAGRAM):   label S_Year_Birth = 'Standard: Year_Birth' ;
1708965   +
1708966   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
1708967   +
1708968   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
1708969   +
1708970   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
1708971   +
1708972   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
1708973   +
1708974   +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
1708975   +
1708976   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1708977   +
1708978   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1708979   +
1708980   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1708981   +
1708982   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1708983   +
1708984   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1708985   +
1708986   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1708987   +
1708988   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1708989   +
1708990   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1708991   +
1708992   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1708993   +*** Checking missing input Interval
1708994   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1708995   +
1708996   +IF NMISS(
1708997   +   PC_1 ,
1708998   +   PC_10 ,
1708999   +   PC_11 ,
1709000   +   PC_12 ,
1709001   +   PC_13 ,
1709002   +   PC_14 ,
1709003   +   PC_15 ,
1709004   +   PC_16 ,
1709005   +   PC_17 ,
1709006   +   PC_2 ,
1709007   +   PC_3 ,
1709008   +   PC_4 ,
1709009   +   PC_5 ,
1709010   +   PC_6 ,
1709011   +   PC_7 ,
1709012   +   PC_8 ,
1709013   +   PC_9 ,
1709014   +   Year_Birth   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( PC_1 , PC_10 , PC_11 , PC_12 , PC_13 , PC_14 , PC_15 , PC_16 , 
PC_17 , PC_2 , PC_3 , PC_4 , PC_5 , PC_6 , PC_7 , PC_8 , PC_9 , Year_Birth ) THEN DO;
1709015   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1709016   +
1709017   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1709018   +END;
MPRINT(EM_DIAGRAM):   END;
1709019   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1709020   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
1709021   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1709022   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1709023   +   S_PC_1  =  -3.567597872154E-15 +     0.29892739052271 * PC_1 ;
MPRINT(EM_DIAGRAM):   S_PC_1 = -3.567597872154E-15 + 0.29892739052271 * PC_1 ;
1709024   +   S_PC_10  = -6.0346468636081E-15 +     0.82173953858445 * PC_10 ;
MPRINT(EM_DIAGRAM):   S_PC_10 = -6.0346468636081E-15 + 0.82173953858445 * PC_10 ;
1709025   +   S_PC_11  =   6.055841017477E-15 +     0.85619046033275 * PC_11 ;
MPRINT(EM_DIAGRAM):   S_PC_11 = 6.055841017477E-15 + 0.85619046033275 * PC_11 ;
1709026   +   S_PC_12  = -3.9570415662911E-15 +     0.88816580619395 * PC_12 ;
MPRINT(EM_DIAGRAM):   S_PC_12 = -3.9570415662911E-15 + 0.88816580619395 * PC_12 ;
1709027   +   S_PC_13  =  1.4807903817941E-15 +     0.89679040249719 * PC_13 ;
MPRINT(EM_DIAGRAM):   S_PC_13 = 1.4807903817941E-15 + 0.89679040249719 * PC_13 ;
1709028   +   S_PC_14  = -6.1940871521205E-15 +     0.90336543119982 * PC_14 ;
MPRINT(EM_DIAGRAM):   S_PC_14 = -6.1940871521205E-15 + 0.90336543119982 * PC_14 ;
1709029   +   S_PC_15  =   -3.45147395417E-16 +     0.92997960877389 * PC_15 ;
MPRINT(EM_DIAGRAM):   S_PC_15 = -3.45147395417E-16 + 0.92997960877389 * PC_15 ;
1709030   +   S_PC_16  = -2.0832890955173E-15 +     0.95096832834142 * PC_16 ;
MPRINT(EM_DIAGRAM):   S_PC_16 = -2.0832890955173E-15 + 0.95096832834142 * PC_16 ;
1709031   +   S_PC_17  =  4.0710461992609E-15 +     0.99882451143041 * PC_17 ;
MPRINT(EM_DIAGRAM):   S_PC_17 = 4.0710461992609E-15 + 0.99882451143041 * PC_17 ;
1709032   +   S_PC_2  =  6.4589631283016E-15 +      0.5437311140029 * PC_2 ;
MPRINT(EM_DIAGRAM):   S_PC_2 = 6.4589631283016E-15 + 0.5437311140029 * PC_2 ;
1709033   +   S_PC_3  =  2.2833690425384E-15 +     0.55367740285547 * PC_3 ;
MPRINT(EM_DIAGRAM):   S_PC_3 = 2.2833690425384E-15 + 0.55367740285547 * PC_3 ;
1709034   +   S_PC_4  = -3.6725092169592E-15 +     0.63698127005552 * PC_4 ;
MPRINT(EM_DIAGRAM):   S_PC_4 = -3.6725092169592E-15 + 0.63698127005552 * PC_4 ;
1709035   +   S_PC_5  = -4.6355038408768E-15 +     0.66670299180006 * PC_5 ;
MPRINT(EM_DIAGRAM):   S_PC_5 = -4.6355038408768E-15 + 0.66670299180006 * PC_5 ;
1709036   +   S_PC_6  =  1.5846922792836E-15 +     0.70534791664737 * PC_6 ;
MPRINT(EM_DIAGRAM):   S_PC_6 = 1.5846922792836E-15 + 0.70534791664737 * PC_6 ;
1709037   +   S_PC_7  =  6.7268179657212E-16 +     0.74932361381713 * PC_7 ;
MPRINT(EM_DIAGRAM):   S_PC_7 = 6.7268179657212E-16 + 0.74932361381713 * PC_7 ;
1709038   +   S_PC_8  = -2.3246545307055E-15 +     0.77161638976627 * PC_8 ;
MPRINT(EM_DIAGRAM):   S_PC_8 = -2.3246545307055E-15 + 0.77161638976627 * PC_8 ;
1709039   +   S_PC_9  = -3.7729896578756E-15 +     0.80831761659605 * PC_9 ;
MPRINT(EM_DIAGRAM):   S_PC_9 = -3.7729896578756E-15 + 0.80831761659605 * PC_9 ;
1709040   +   S_Year_Birth  =    -163.205330145852 +     0.08289609202864 * Year_Birth ;
MPRINT(EM_DIAGRAM):   S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
1709041   +END;
MPRINT(EM_DIAGRAM):   END;
1709042   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1709043   +   IF MISSING( PC_1 ) THEN S_PC_1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_1 ) THEN S_PC_1 = . ;
1709044   +   ELSE S_PC_1  =  -3.567597872154E-15 +     0.29892739052271 * PC_1 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_1 = -3.567597872154E-15 + 0.29892739052271 * PC_1 ;
1709045   +   IF MISSING( PC_10 ) THEN S_PC_10  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_10 ) THEN S_PC_10 = . ;
1709046   +   ELSE S_PC_10  = -6.0346468636081E-15 +     0.82173953858445 * PC_10 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_10 = -6.0346468636081E-15 + 0.82173953858445 * PC_10 ;
1709047   +   IF MISSING( PC_11 ) THEN S_PC_11  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_11 ) THEN S_PC_11 = . ;
1709048   +   ELSE S_PC_11  =   6.055841017477E-15 +     0.85619046033275 * PC_11 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_11 = 6.055841017477E-15 + 0.85619046033275 * PC_11 ;
1709049   +   IF MISSING( PC_12 ) THEN S_PC_12  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_12 ) THEN S_PC_12 = . ;
1709050   +   ELSE S_PC_12  = -3.9570415662911E-15 +     0.88816580619395 * PC_12 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_12 = -3.9570415662911E-15 + 0.88816580619395 * PC_12 ;
1709051   +   IF MISSING( PC_13 ) THEN S_PC_13  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_13 ) THEN S_PC_13 = . ;
1709052   +   ELSE S_PC_13  =  1.4807903817941E-15 +     0.89679040249719 * PC_13 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_13 = 1.4807903817941E-15 + 0.89679040249719 * PC_13 ;
1709053   +   IF MISSING( PC_14 ) THEN S_PC_14  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_14 ) THEN S_PC_14 = . ;
1709054   +   ELSE S_PC_14  = -6.1940871521205E-15 +     0.90336543119982 * PC_14 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_14 = -6.1940871521205E-15 + 0.90336543119982 * PC_14 ;
1709055   +   IF MISSING( PC_15 ) THEN S_PC_15  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_15 ) THEN S_PC_15 = . ;
1709056   +   ELSE S_PC_15  =   -3.45147395417E-16 +     0.92997960877389 * PC_15 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_15 = -3.45147395417E-16 + 0.92997960877389 * PC_15 ;
1709057   +   IF MISSING( PC_16 ) THEN S_PC_16  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_16 ) THEN S_PC_16 = . ;
1709058   +   ELSE S_PC_16  = -2.0832890955173E-15 +     0.95096832834142 * PC_16 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_16 = -2.0832890955173E-15 + 0.95096832834142 * PC_16 ;
1709059   +   IF MISSING( PC_17 ) THEN S_PC_17  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_17 ) THEN S_PC_17 = . ;
1709060   +   ELSE S_PC_17  =  4.0710461992609E-15 +     0.99882451143041 * PC_17 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_17 = 4.0710461992609E-15 + 0.99882451143041 * PC_17 ;
1709061   +   IF MISSING( PC_2 ) THEN S_PC_2  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_2 ) THEN S_PC_2 = . ;
1709062   +   ELSE S_PC_2  =  6.4589631283016E-15 +      0.5437311140029 * PC_2 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_2 = 6.4589631283016E-15 + 0.5437311140029 * PC_2 ;
1709063   +   IF MISSING( PC_3 ) THEN S_PC_3  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_3 ) THEN S_PC_3 = . ;
1709064   +   ELSE S_PC_3  =  2.2833690425384E-15 +     0.55367740285547 * PC_3 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_3 = 2.2833690425384E-15 + 0.55367740285547 * PC_3 ;
1709065   +   IF MISSING( PC_4 ) THEN S_PC_4  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_4 ) THEN S_PC_4 = . ;
1709066   +   ELSE S_PC_4  = -3.6725092169592E-15 +     0.63698127005552 * PC_4 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_4 = -3.6725092169592E-15 + 0.63698127005552 * PC_4 ;
1709067   +   IF MISSING( PC_5 ) THEN S_PC_5  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_5 ) THEN S_PC_5 = . ;
1709068   +   ELSE S_PC_5  = -4.6355038408768E-15 +     0.66670299180006 * PC_5 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_5 = -4.6355038408768E-15 + 0.66670299180006 * PC_5 ;
1709069   +   IF MISSING( PC_6 ) THEN S_PC_6  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_6 ) THEN S_PC_6 = . ;
1709070   +   ELSE S_PC_6  =  1.5846922792836E-15 +     0.70534791664737 * PC_6 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_6 = 1.5846922792836E-15 + 0.70534791664737 * PC_6 ;
1709071   +   IF MISSING( PC_7 ) THEN S_PC_7  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_7 ) THEN S_PC_7 = . ;
1709072   +   ELSE S_PC_7  =  6.7268179657212E-16 +     0.74932361381713 * PC_7 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_7 = 6.7268179657212E-16 + 0.74932361381713 * PC_7 ;
1709073   +   IF MISSING( PC_8 ) THEN S_PC_8  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_8 ) THEN S_PC_8 = . ;
1709074   +   ELSE S_PC_8  = -2.3246545307055E-15 +     0.77161638976627 * PC_8 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_8 = -2.3246545307055E-15 + 0.77161638976627 * PC_8 ;
1709075   +   IF MISSING( PC_9 ) THEN S_PC_9  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_9 ) THEN S_PC_9 = . ;
1709076   +   ELSE S_PC_9  = -3.7729896578756E-15 +     0.80831761659605 * PC_9 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_9 = -3.7729896578756E-15 + 0.80831761659605 * PC_9 ;
1709077   +   IF MISSING( Year_Birth ) THEN S_Year_Birth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Year_Birth ) THEN S_Year_Birth = . ;
1709078   +   ELSE S_Year_Birth  =    -163.205330145852 +     0.08289609202864 *
1709079   +        Year_Birth ;
MPRINT(EM_DIAGRAM):   ELSE S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
1709080   +END;
MPRINT(EM_DIAGRAM):   END;
1709081   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1709082   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
1709083   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1709084   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1709085   +   H1x1_1  =    -0.32594323715507 * S_PC_1  +     0.35601244497616 * S_PC_10
1709086   +          +     0.23551037194578 * S_PC_11  +     0.36329343976958 * S_PC_12
1709087   +          +     0.18625241284147 * S_PC_13  +    -0.26738645821727 * S_PC_14
1709088   +          +    -0.11334514198957 * S_PC_15  +    -0.13541776549359 * S_PC_16
1709089   +          +     0.01536562915516 * S_PC_17  +    -0.37475909603056 * S_PC_2
1709090   +          +    -0.39525354848961 * S_PC_3  +     0.23407225580273 * S_PC_4
1709091   +          +     0.14886448532502 * S_PC_5  +    -0.07500687735169 * S_PC_6
1709092   +          +     0.29657240921985 * S_PC_7  +    -0.41074019492767 * S_PC_8
1709093   +          +    -0.46585918851858 * S_PC_9  +    -0.03775321190087 *
1709094   +        S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.32594323715507 * S_PC_1 + 0.35601244497616 * S_PC_10 + 
0.23551037194578 * S_PC_11 + 0.36329343976958 * S_PC_12 + 0.18625241284147 * S_PC_13 + 
-0.26738645821727 * S_PC_14 + -0.11334514198957 * S_PC_15 + -0.13541776549359 * S_PC_16 + 
0.01536562915516 * S_PC_17 + -0.37475909603056 * S_PC_2 + -0.39525354848961 * S_PC_3 + 
0.23407225580273 * S_PC_4 + 0.14886448532502 * S_PC_5 + -0.07500687735169 * S_PC_6 + 
0.29657240921985 * S_PC_7 + -0.41074019492767 * S_PC_8 + -0.46585918851858 * S_PC_9 + 
-0.03775321190087 * S_Year_Birth ;
1709095   +   H1x1_2  =      0.2295203400892 * S_PC_1  +    -0.33102630465707 * S_PC_10
1709096   +          +      0.3982295545742 * S_PC_11  +     0.20462619478042 * S_PC_12
1709097   +          +    -0.68487726222023 * S_PC_13  +     0.37650172545509 * S_PC_14
1709098   +          +    -0.27887735958753 * S_PC_15  +    -0.02581469991742 * S_PC_16
1709099   +          +    -0.28205659737284 * S_PC_17  +    -0.10182055063415 * S_PC_2
1709100   +          +     0.12812251643176 * S_PC_3  +    -0.23066282129667 * S_PC_4
1709101   +          +     0.07541284680186 * S_PC_5  +     0.24012121689661 * S_PC_6
1709102   +          +     0.13842613504509 * S_PC_7  +     0.05569302549963 * S_PC_8
1709103   +          +     0.21283858437275 * S_PC_9  +    -0.07763224593416 *
1709104   +        S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.2295203400892 * S_PC_1 + -0.33102630465707 * S_PC_10 + 
0.3982295545742 * S_PC_11 + 0.20462619478042 * S_PC_12 + -0.68487726222023 * S_PC_13 + 
0.37650172545509 * S_PC_14 + -0.27887735958753 * S_PC_15 + -0.02581469991742 * S_PC_16 + 
-0.28205659737284 * S_PC_17 + -0.10182055063415 * S_PC_2 + 0.12812251643176 * S_PC_3 + 
-0.23066282129667 * S_PC_4 + 0.07541284680186 * S_PC_5 + 0.24012121689661 * S_PC_6 + 
0.13842613504509 * S_PC_7 + 0.05569302549963 * S_PC_8 + 0.21283858437275 * S_PC_9 + 
-0.07763224593416 * S_Year_Birth ;
1709105   +   H1x1_3  =    -0.81897893610437 * S_PC_1  +     0.17086737000156 * S_PC_10
1709106   +          +    -0.41456412659338 * S_PC_11  +    -0.10210116836733 * S_PC_12
1709107   +          +    -0.01781792809366 * S_PC_13  +     0.87937511104362 * S_PC_14
1709108   +          +     0.11363426216873 * S_PC_15  +     0.15473733315317 * S_PC_16
1709109   +          +    -0.25728762971414 * S_PC_17  +     0.14902434266152 * S_PC_2
1709110   +          +    -0.54672153901076 * S_PC_3  +     0.68025560498171 * S_PC_4
1709111   +          +     0.38503442452439 * S_PC_5  +     0.12957351960793 * S_PC_6
1709112   +          +    -0.55840202311292 * S_PC_7  +    -0.04966795126386 * S_PC_8
1709113   +          +    -0.18806551125208 * S_PC_9  +     1.14929153435805 *
1709114   +        S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.81897893610437 * S_PC_1 + 0.17086737000156 * S_PC_10 + 
-0.41456412659338 * S_PC_11 + -0.10210116836733 * S_PC_12 + -0.01781792809366 * S_PC_13 + 
0.87937511104362 * S_PC_14 + 0.11363426216873 * S_PC_15 + 0.15473733315317 * S_PC_16 + 
-0.25728762971414 * S_PC_17 + 0.14902434266152 * S_PC_2 + -0.54672153901076 * S_PC_3 + 
0.68025560498171 * S_PC_4 + 0.38503442452439 * S_PC_5 + 0.12957351960793 * S_PC_6 + 
-0.55840202311292 * S_PC_7 + -0.04966795126386 * S_PC_8 + -0.18806551125208 * S_PC_9 + 
1.14929153435805 * S_Year_Birth ;
1709115   +   H1x1_4  =    -0.14487980505225 * S_PC_1  +     0.17192203332047 * S_PC_10
1709116   +          +     0.03195160273321 * S_PC_11  +    -0.08689400274427 * S_PC_12
1709117   +          +     0.38089132351821 * S_PC_13  +     -0.0266430724512 * S_PC_14
1709118   +          +     0.04400113177839 * S_PC_15  +    -0.11330745510845 * S_PC_16
1709119   +          +    -0.02017896419464 * S_PC_17  +      0.3275023839513 * S_PC_2
1709120   +          +     0.12820167568493 * S_PC_3  +    -0.21125497799085 * S_PC_4
1709121   +          +     0.24494493836545 * S_PC_5  +    -0.05439626774834 * S_PC_6
1709122   +          +    -0.00677402946214 * S_PC_7  +    -0.14431119046299 * S_PC_8
1709123   +          +    -0.05606535418296 * S_PC_9  +    -0.10392063931961 *
1709124   +        S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -0.14487980505225 * S_PC_1 + 0.17192203332047 * S_PC_10 + 
0.03195160273321 * S_PC_11 + -0.08689400274427 * S_PC_12 + 0.38089132351821 * S_PC_13 + 
-0.0266430724512 * S_PC_14 + 0.04400113177839 * S_PC_15 + -0.11330745510845 * S_PC_16 + 
-0.02017896419464 * S_PC_17 + 0.3275023839513 * S_PC_2 + 0.12820167568493 * S_PC_3 + 
-0.21125497799085 * S_PC_4 + 0.24494493836545 * S_PC_5 + -0.05439626774834 * S_PC_6 + 
-0.00677402946214 * S_PC_7 + -0.14431119046299 * S_PC_8 + -0.05606535418296 * S_PC_9 + 
-0.10392063931961 * S_Year_Birth ;
1709125   +   H1x1_5  =     0.46644634016117 * S_PC_1  +     0.24966722326697 * S_PC_10
1709126   +          +    -0.50204053155973 * S_PC_11  +    -0.16163921287329 * S_PC_12
1709127   +          +     -0.2117873065953 * S_PC_13  +     0.00321866119698 * S_PC_14
1709128   +          +      0.0699390312895 * S_PC_15  +     0.04948301682548 * S_PC_16
1709129   +          +      0.3193284933053 * S_PC_17  +     0.83054970008779 * S_PC_2
1709130   +          +       0.926899452502 * S_PC_3  +    -0.65951796203459 * S_PC_4
1709131   +          +    -0.04590479970431 * S_PC_5  +    -0.34410773240721 * S_PC_6
1709132   +          +    -0.57666665311988 * S_PC_7  +     0.13200105511652 * S_PC_8
1709133   +          +     0.22557835400272 * S_PC_9  +     0.37883228433977 *
1709134   +        S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 0.46644634016117 * S_PC_1 + 0.24966722326697 * S_PC_10 + 
-0.50204053155973 * S_PC_11 + -0.16163921287329 * S_PC_12 + -0.2117873065953 * S_PC_13 + 
0.00321866119698 * S_PC_14 + 0.0699390312895 * S_PC_15 + 0.04948301682548 * S_PC_16 + 
0.3193284933053 * S_PC_17 + 0.83054970008779 * S_PC_2 + 0.926899452502 * S_PC_3 + 
-0.65951796203459 * S_PC_4 + -0.04590479970431 * S_PC_5 + -0.34410773240721 * S_PC_6 + 
-0.57666665311988 * S_PC_7 + 0.13200105511652 * S_PC_8 + 0.22557835400272 * S_PC_9 + 
0.37883228433977 * S_Year_Birth ;
1709135   +   H1x1_1  =    -1.47213938689482 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -1.47213938689482 + H1x1_1 ;
1709136   +   H1x1_2  =     0.04468453740373 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.04468453740373 + H1x1_2 ;
1709137   +   H1x1_3  =     1.02710140676845 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.02710140676845 + H1x1_3 ;
1709138   +   H1x1_4  =     0.72012823118527 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.72012823118527 + H1x1_4 ;
1709139   +   H1x1_5  =      0.2940192888358 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 0.2940192888358 + H1x1_5 ;
1709140   +   H1x1_1  = SIN(H1x1_1 );
MPRINT(EM_DIAGRAM):   H1x1_1 = SIN(H1x1_1 );
1709141   +   H1x1_2  = SIN(H1x1_2 );
MPRINT(EM_DIAGRAM):   H1x1_2 = SIN(H1x1_2 );
1709142   +   H1x1_3  = SIN(H1x1_3 );
MPRINT(EM_DIAGRAM):   H1x1_3 = SIN(H1x1_3 );
1709143   +   H1x1_4  = SIN(H1x1_4 );
MPRINT(EM_DIAGRAM):   H1x1_4 = SIN(H1x1_4 );
1709144   +   H1x1_5  = SIN(H1x1_5 );
MPRINT(EM_DIAGRAM):   H1x1_5 = SIN(H1x1_5 );
1709145   +END;
MPRINT(EM_DIAGRAM):   END;
1709146   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1709147   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
1709148   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
1709149   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
1709150   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
1709151   +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
1709152   +END;
MPRINT(EM_DIAGRAM):   END;
1709153   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1709154   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1709155   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1709156   +
1709157   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1709158   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1709159   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1709160   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1709161   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1709162   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1709163   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1709164   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1709165   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1709166   +end;
MPRINT(EM_DIAGRAM):   end;
1709167   +else do;
MPRINT(EM_DIAGRAM):   else do;
1709168   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1709169   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1709170   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1709171   +   end;
MPRINT(EM_DIAGRAM):   end;
1709172   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1709173   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1709174   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1709175   +   end;
MPRINT(EM_DIAGRAM):   end;
1709176   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1709177   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1709178   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1709179   +   end;
MPRINT(EM_DIAGRAM):   end;
1709180   +end;
MPRINT(EM_DIAGRAM):   end;
1709181   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1709182   +   P_DepVar1  =      2.8481167326349 * H1x1_1  +     2.49835781491849 * H1x1_2
1709183   +          +    -1.58189403173494 * H1x1_3  +    -3.82498978068274 * H1x1_4
1709184   +          +     -1.3633590212543 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 2.8481167326349 * H1x1_1 + 2.49835781491849 * H1x1_2 + 
-1.58189403173494 * H1x1_3 + -3.82498978068274 * H1x1_4 + -1.3633590212543 * H1x1_5 ;
1709185   +   P_DepVar1  =     0.71854967580477 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.71854967580477 + P_DepVar1 ;
1709186   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1709187   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1709188   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1709189   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1709190   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1709191   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1709192   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1709193   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1709194   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1709195   +END;
MPRINT(EM_DIAGRAM):   END;
1709196   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1709197   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1709198   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1709199   +END;
MPRINT(EM_DIAGRAM):   END;
1709200   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1709201   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1709202   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1709203   +END;
MPRINT(EM_DIAGRAM):   END;
1709204   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1709205   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1709206   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1709207   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1709208   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1709209   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1709210   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1709211   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1709212   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1709213   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1709214   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1709215   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1709216   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1709217   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1709218   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1709219   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1709220   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1709221   +END;
MPRINT(EM_DIAGRAM):   END;
1709222   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1709223   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1709224   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1709225   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1709226    run;

NOTE: DATA STEP view saved on file EMWS8.AUTONEURAL13_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.PRINCOMP_TRAIN.VIEW used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1709227    quit;
1709228    filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
1709229    filename emflow
1709229  ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural13\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural13\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * AutoNeural13: Scoring VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1709230    *------------------------------------------------------------*;
1709231    * AutoNeural13: Scoring VALIDATE data;
1709232    *------------------------------------------------------------*;
1709233    data EMWS8.AutoNeural13_VALIDATE
1709234    / view=EMWS8.AutoNeural13_VALIDATE
1709235    ;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural13_VALIDATE / view=EMWS8.AutoNeural13_VALIDATE ;
1709236    set EMWS8.PRINCOMP_VALIDATE
1709237    ;
MPRINT(EM_DIAGRAM):   set EMWS8.PRINCOMP_VALIDATE ;
1709238    %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural13\EMFLOWSCORE.sas.
1709239   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1709240   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1709241   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1709242   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1709243   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1709244   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1709245   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1709246   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1709247   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1709248   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1709249   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1709250   +LENGTH _WARN_ $4
1709251   +      F_DepVar  $ 12
1709252   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1709253   +      label S_PC_1 = 'Standard: PC_1' ;
MPRINT(EM_DIAGRAM):   label S_PC_1 = 'Standard: PC_1' ;
1709254   +
1709255   +      label S_PC_10 = 'Standard: PC_10' ;
MPRINT(EM_DIAGRAM):   label S_PC_10 = 'Standard: PC_10' ;
1709256   +
1709257   +      label S_PC_11 = 'Standard: PC_11' ;
MPRINT(EM_DIAGRAM):   label S_PC_11 = 'Standard: PC_11' ;
1709258   +
1709259   +      label S_PC_12 = 'Standard: PC_12' ;
MPRINT(EM_DIAGRAM):   label S_PC_12 = 'Standard: PC_12' ;
1709260   +
1709261   +      label S_PC_13 = 'Standard: PC_13' ;
MPRINT(EM_DIAGRAM):   label S_PC_13 = 'Standard: PC_13' ;
1709262   +
1709263   +      label S_PC_14 = 'Standard: PC_14' ;
MPRINT(EM_DIAGRAM):   label S_PC_14 = 'Standard: PC_14' ;
1709264   +
1709265   +      label S_PC_15 = 'Standard: PC_15' ;
MPRINT(EM_DIAGRAM):   label S_PC_15 = 'Standard: PC_15' ;
1709266   +
1709267   +      label S_PC_16 = 'Standard: PC_16' ;
MPRINT(EM_DIAGRAM):   label S_PC_16 = 'Standard: PC_16' ;
1709268   +
1709269   +      label S_PC_17 = 'Standard: PC_17' ;
MPRINT(EM_DIAGRAM):   label S_PC_17 = 'Standard: PC_17' ;
1709270   +
1709271   +      label S_PC_2 = 'Standard: PC_2' ;
MPRINT(EM_DIAGRAM):   label S_PC_2 = 'Standard: PC_2' ;
1709272   +
1709273   +      label S_PC_3 = 'Standard: PC_3' ;
MPRINT(EM_DIAGRAM):   label S_PC_3 = 'Standard: PC_3' ;
1709274   +
1709275   +      label S_PC_4 = 'Standard: PC_4' ;
MPRINT(EM_DIAGRAM):   label S_PC_4 = 'Standard: PC_4' ;
1709276   +
1709277   +      label S_PC_5 = 'Standard: PC_5' ;
MPRINT(EM_DIAGRAM):   label S_PC_5 = 'Standard: PC_5' ;
1709278   +
1709279   +      label S_PC_6 = 'Standard: PC_6' ;
MPRINT(EM_DIAGRAM):   label S_PC_6 = 'Standard: PC_6' ;
1709280   +
1709281   +      label S_PC_7 = 'Standard: PC_7' ;
MPRINT(EM_DIAGRAM):   label S_PC_7 = 'Standard: PC_7' ;
1709282   +
1709283   +      label S_PC_8 = 'Standard: PC_8' ;
MPRINT(EM_DIAGRAM):   label S_PC_8 = 'Standard: PC_8' ;
1709284   +
1709285   +      label S_PC_9 = 'Standard: PC_9' ;
MPRINT(EM_DIAGRAM):   label S_PC_9 = 'Standard: PC_9' ;
1709286   +
1709287   +      label S_Year_Birth = 'Standard: Year_Birth' ;
MPRINT(EM_DIAGRAM):   label S_Year_Birth = 'Standard: Year_Birth' ;
1709288   +
1709289   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
1709290   +
1709291   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
1709292   +
1709293   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
1709294   +
1709295   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
1709296   +
1709297   +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
1709298   +
1709299   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1709300   +
1709301   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1709302   +
1709303   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1709304   +
1709305   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1709306   +
1709307   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1709308   +
1709309   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1709310   +
1709311   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1709312   +
1709313   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1709314   +
1709315   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1709316   +*** Checking missing input Interval
1709317   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1709318   +
1709319   +IF NMISS(
1709320   +   PC_1 ,
1709321   +   PC_10 ,
1709322   +   PC_11 ,
1709323   +   PC_12 ,
1709324   +   PC_13 ,
1709325   +   PC_14 ,
1709326   +   PC_15 ,
1709327   +   PC_16 ,
1709328   +   PC_17 ,
1709329   +   PC_2 ,
1709330   +   PC_3 ,
1709331   +   PC_4 ,
1709332   +   PC_5 ,
1709333   +   PC_6 ,
1709334   +   PC_7 ,
1709335   +   PC_8 ,
1709336   +   PC_9 ,
1709337   +   Year_Birth   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( PC_1 , PC_10 , PC_11 , PC_12 , PC_13 , PC_14 , PC_15 , PC_16 , 
PC_17 , PC_2 , PC_3 , PC_4 , PC_5 , PC_6 , PC_7 , PC_8 , PC_9 , Year_Birth ) THEN DO;
1709338   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1709339   +
1709340   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1709341   +END;
MPRINT(EM_DIAGRAM):   END;
1709342   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1709343   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
1709344   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1709345   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1709346   +   S_PC_1  =  -3.567597872154E-15 +     0.29892739052271 * PC_1 ;
MPRINT(EM_DIAGRAM):   S_PC_1 = -3.567597872154E-15 + 0.29892739052271 * PC_1 ;
1709347   +   S_PC_10  = -6.0346468636081E-15 +     0.82173953858445 * PC_10 ;
MPRINT(EM_DIAGRAM):   S_PC_10 = -6.0346468636081E-15 + 0.82173953858445 * PC_10 ;
1709348   +   S_PC_11  =   6.055841017477E-15 +     0.85619046033275 * PC_11 ;
MPRINT(EM_DIAGRAM):   S_PC_11 = 6.055841017477E-15 + 0.85619046033275 * PC_11 ;
1709349   +   S_PC_12  = -3.9570415662911E-15 +     0.88816580619395 * PC_12 ;
MPRINT(EM_DIAGRAM):   S_PC_12 = -3.9570415662911E-15 + 0.88816580619395 * PC_12 ;
1709350   +   S_PC_13  =  1.4807903817941E-15 +     0.89679040249719 * PC_13 ;
MPRINT(EM_DIAGRAM):   S_PC_13 = 1.4807903817941E-15 + 0.89679040249719 * PC_13 ;
1709351   +   S_PC_14  = -6.1940871521205E-15 +     0.90336543119982 * PC_14 ;
MPRINT(EM_DIAGRAM):   S_PC_14 = -6.1940871521205E-15 + 0.90336543119982 * PC_14 ;
1709352   +   S_PC_15  =   -3.45147395417E-16 +     0.92997960877389 * PC_15 ;
MPRINT(EM_DIAGRAM):   S_PC_15 = -3.45147395417E-16 + 0.92997960877389 * PC_15 ;
1709353   +   S_PC_16  = -2.0832890955173E-15 +     0.95096832834142 * PC_16 ;
MPRINT(EM_DIAGRAM):   S_PC_16 = -2.0832890955173E-15 + 0.95096832834142 * PC_16 ;
1709354   +   S_PC_17  =  4.0710461992609E-15 +     0.99882451143041 * PC_17 ;
MPRINT(EM_DIAGRAM):   S_PC_17 = 4.0710461992609E-15 + 0.99882451143041 * PC_17 ;
1709355   +   S_PC_2  =  6.4589631283016E-15 +      0.5437311140029 * PC_2 ;
MPRINT(EM_DIAGRAM):   S_PC_2 = 6.4589631283016E-15 + 0.5437311140029 * PC_2 ;
1709356   +   S_PC_3  =  2.2833690425384E-15 +     0.55367740285547 * PC_3 ;
MPRINT(EM_DIAGRAM):   S_PC_3 = 2.2833690425384E-15 + 0.55367740285547 * PC_3 ;
1709357   +   S_PC_4  = -3.6725092169592E-15 +     0.63698127005552 * PC_4 ;
MPRINT(EM_DIAGRAM):   S_PC_4 = -3.6725092169592E-15 + 0.63698127005552 * PC_4 ;
1709358   +   S_PC_5  = -4.6355038408768E-15 +     0.66670299180006 * PC_5 ;
MPRINT(EM_DIAGRAM):   S_PC_5 = -4.6355038408768E-15 + 0.66670299180006 * PC_5 ;
1709359   +   S_PC_6  =  1.5846922792836E-15 +     0.70534791664737 * PC_6 ;
MPRINT(EM_DIAGRAM):   S_PC_6 = 1.5846922792836E-15 + 0.70534791664737 * PC_6 ;
1709360   +   S_PC_7  =  6.7268179657212E-16 +     0.74932361381713 * PC_7 ;
MPRINT(EM_DIAGRAM):   S_PC_7 = 6.7268179657212E-16 + 0.74932361381713 * PC_7 ;
1709361   +   S_PC_8  = -2.3246545307055E-15 +     0.77161638976627 * PC_8 ;
MPRINT(EM_DIAGRAM):   S_PC_8 = -2.3246545307055E-15 + 0.77161638976627 * PC_8 ;
1709362   +   S_PC_9  = -3.7729896578756E-15 +     0.80831761659605 * PC_9 ;
MPRINT(EM_DIAGRAM):   S_PC_9 = -3.7729896578756E-15 + 0.80831761659605 * PC_9 ;
1709363   +   S_Year_Birth  =    -163.205330145852 +     0.08289609202864 * Year_Birth ;
MPRINT(EM_DIAGRAM):   S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
1709364   +END;
MPRINT(EM_DIAGRAM):   END;
1709365   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1709366   +   IF MISSING( PC_1 ) THEN S_PC_1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_1 ) THEN S_PC_1 = . ;
1709367   +   ELSE S_PC_1  =  -3.567597872154E-15 +     0.29892739052271 * PC_1 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_1 = -3.567597872154E-15 + 0.29892739052271 * PC_1 ;
1709368   +   IF MISSING( PC_10 ) THEN S_PC_10  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_10 ) THEN S_PC_10 = . ;
1709369   +   ELSE S_PC_10  = -6.0346468636081E-15 +     0.82173953858445 * PC_10 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_10 = -6.0346468636081E-15 + 0.82173953858445 * PC_10 ;
1709370   +   IF MISSING( PC_11 ) THEN S_PC_11  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_11 ) THEN S_PC_11 = . ;
1709371   +   ELSE S_PC_11  =   6.055841017477E-15 +     0.85619046033275 * PC_11 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_11 = 6.055841017477E-15 + 0.85619046033275 * PC_11 ;
1709372   +   IF MISSING( PC_12 ) THEN S_PC_12  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_12 ) THEN S_PC_12 = . ;
1709373   +   ELSE S_PC_12  = -3.9570415662911E-15 +     0.88816580619395 * PC_12 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_12 = -3.9570415662911E-15 + 0.88816580619395 * PC_12 ;
1709374   +   IF MISSING( PC_13 ) THEN S_PC_13  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_13 ) THEN S_PC_13 = . ;
1709375   +   ELSE S_PC_13  =  1.4807903817941E-15 +     0.89679040249719 * PC_13 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_13 = 1.4807903817941E-15 + 0.89679040249719 * PC_13 ;
1709376   +   IF MISSING( PC_14 ) THEN S_PC_14  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_14 ) THEN S_PC_14 = . ;
1709377   +   ELSE S_PC_14  = -6.1940871521205E-15 +     0.90336543119982 * PC_14 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_14 = -6.1940871521205E-15 + 0.90336543119982 * PC_14 ;
1709378   +   IF MISSING( PC_15 ) THEN S_PC_15  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_15 ) THEN S_PC_15 = . ;
1709379   +   ELSE S_PC_15  =   -3.45147395417E-16 +     0.92997960877389 * PC_15 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_15 = -3.45147395417E-16 + 0.92997960877389 * PC_15 ;
1709380   +   IF MISSING( PC_16 ) THEN S_PC_16  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_16 ) THEN S_PC_16 = . ;
1709381   +   ELSE S_PC_16  = -2.0832890955173E-15 +     0.95096832834142 * PC_16 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_16 = -2.0832890955173E-15 + 0.95096832834142 * PC_16 ;
1709382   +   IF MISSING( PC_17 ) THEN S_PC_17  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_17 ) THEN S_PC_17 = . ;
1709383   +   ELSE S_PC_17  =  4.0710461992609E-15 +     0.99882451143041 * PC_17 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_17 = 4.0710461992609E-15 + 0.99882451143041 * PC_17 ;
1709384   +   IF MISSING( PC_2 ) THEN S_PC_2  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_2 ) THEN S_PC_2 = . ;
1709385   +   ELSE S_PC_2  =  6.4589631283016E-15 +      0.5437311140029 * PC_2 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_2 = 6.4589631283016E-15 + 0.5437311140029 * PC_2 ;
1709386   +   IF MISSING( PC_3 ) THEN S_PC_3  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_3 ) THEN S_PC_3 = . ;
1709387   +   ELSE S_PC_3  =  2.2833690425384E-15 +     0.55367740285547 * PC_3 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_3 = 2.2833690425384E-15 + 0.55367740285547 * PC_3 ;
1709388   +   IF MISSING( PC_4 ) THEN S_PC_4  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_4 ) THEN S_PC_4 = . ;
1709389   +   ELSE S_PC_4  = -3.6725092169592E-15 +     0.63698127005552 * PC_4 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_4 = -3.6725092169592E-15 + 0.63698127005552 * PC_4 ;
1709390   +   IF MISSING( PC_5 ) THEN S_PC_5  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_5 ) THEN S_PC_5 = . ;
1709391   +   ELSE S_PC_5  = -4.6355038408768E-15 +     0.66670299180006 * PC_5 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_5 = -4.6355038408768E-15 + 0.66670299180006 * PC_5 ;
1709392   +   IF MISSING( PC_6 ) THEN S_PC_6  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_6 ) THEN S_PC_6 = . ;
1709393   +   ELSE S_PC_6  =  1.5846922792836E-15 +     0.70534791664737 * PC_6 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_6 = 1.5846922792836E-15 + 0.70534791664737 * PC_6 ;
1709394   +   IF MISSING( PC_7 ) THEN S_PC_7  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_7 ) THEN S_PC_7 = . ;
1709395   +   ELSE S_PC_7  =  6.7268179657212E-16 +     0.74932361381713 * PC_7 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_7 = 6.7268179657212E-16 + 0.74932361381713 * PC_7 ;
1709396   +   IF MISSING( PC_8 ) THEN S_PC_8  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_8 ) THEN S_PC_8 = . ;
1709397   +   ELSE S_PC_8  = -2.3246545307055E-15 +     0.77161638976627 * PC_8 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_8 = -2.3246545307055E-15 + 0.77161638976627 * PC_8 ;
1709398   +   IF MISSING( PC_9 ) THEN S_PC_9  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_9 ) THEN S_PC_9 = . ;
1709399   +   ELSE S_PC_9  = -3.7729896578756E-15 +     0.80831761659605 * PC_9 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_9 = -3.7729896578756E-15 + 0.80831761659605 * PC_9 ;
1709400   +   IF MISSING( Year_Birth ) THEN S_Year_Birth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Year_Birth ) THEN S_Year_Birth = . ;
1709401   +   ELSE S_Year_Birth  =    -163.205330145852 +     0.08289609202864 *
1709402   +        Year_Birth ;
MPRINT(EM_DIAGRAM):   ELSE S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
1709403   +END;
MPRINT(EM_DIAGRAM):   END;
1709404   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1709405   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
1709406   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1709407   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1709408   +   H1x1_1  =    -0.32594323715507 * S_PC_1  +     0.35601244497616 * S_PC_10
1709409   +          +     0.23551037194578 * S_PC_11  +     0.36329343976958 * S_PC_12
1709410   +          +     0.18625241284147 * S_PC_13  +    -0.26738645821727 * S_PC_14
1709411   +          +    -0.11334514198957 * S_PC_15  +    -0.13541776549359 * S_PC_16
1709412   +          +     0.01536562915516 * S_PC_17  +    -0.37475909603056 * S_PC_2
1709413   +          +    -0.39525354848961 * S_PC_3  +     0.23407225580273 * S_PC_4
1709414   +          +     0.14886448532502 * S_PC_5  +    -0.07500687735169 * S_PC_6
1709415   +          +     0.29657240921985 * S_PC_7  +    -0.41074019492767 * S_PC_8
1709416   +          +    -0.46585918851858 * S_PC_9  +    -0.03775321190087 *
1709417   +        S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.32594323715507 * S_PC_1 + 0.35601244497616 * S_PC_10 + 
0.23551037194578 * S_PC_11 + 0.36329343976958 * S_PC_12 + 0.18625241284147 * S_PC_13 + 
-0.26738645821727 * S_PC_14 + -0.11334514198957 * S_PC_15 + -0.13541776549359 * S_PC_16 + 
0.01536562915516 * S_PC_17 + -0.37475909603056 * S_PC_2 + -0.39525354848961 * S_PC_3 + 
0.23407225580273 * S_PC_4 + 0.14886448532502 * S_PC_5 + -0.07500687735169 * S_PC_6 + 
0.29657240921985 * S_PC_7 + -0.41074019492767 * S_PC_8 + -0.46585918851858 * S_PC_9 + 
-0.03775321190087 * S_Year_Birth ;
1709418   +   H1x1_2  =      0.2295203400892 * S_PC_1  +    -0.33102630465707 * S_PC_10
1709419   +          +      0.3982295545742 * S_PC_11  +     0.20462619478042 * S_PC_12
1709420   +          +    -0.68487726222023 * S_PC_13  +     0.37650172545509 * S_PC_14
1709421   +          +    -0.27887735958753 * S_PC_15  +    -0.02581469991742 * S_PC_16
1709422   +          +    -0.28205659737284 * S_PC_17  +    -0.10182055063415 * S_PC_2
1709423   +          +     0.12812251643176 * S_PC_3  +    -0.23066282129667 * S_PC_4
1709424   +          +     0.07541284680186 * S_PC_5  +     0.24012121689661 * S_PC_6
1709425   +          +     0.13842613504509 * S_PC_7  +     0.05569302549963 * S_PC_8
1709426   +          +     0.21283858437275 * S_PC_9  +    -0.07763224593416 *
1709427   +        S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.2295203400892 * S_PC_1 + -0.33102630465707 * S_PC_10 + 
0.3982295545742 * S_PC_11 + 0.20462619478042 * S_PC_12 + -0.68487726222023 * S_PC_13 + 
0.37650172545509 * S_PC_14 + -0.27887735958753 * S_PC_15 + -0.02581469991742 * S_PC_16 + 
-0.28205659737284 * S_PC_17 + -0.10182055063415 * S_PC_2 + 0.12812251643176 * S_PC_3 + 
-0.23066282129667 * S_PC_4 + 0.07541284680186 * S_PC_5 + 0.24012121689661 * S_PC_6 + 
0.13842613504509 * S_PC_7 + 0.05569302549963 * S_PC_8 + 0.21283858437275 * S_PC_9 + 
-0.07763224593416 * S_Year_Birth ;
1709428   +   H1x1_3  =    -0.81897893610437 * S_PC_1  +     0.17086737000156 * S_PC_10
1709429   +          +    -0.41456412659338 * S_PC_11  +    -0.10210116836733 * S_PC_12
1709430   +          +    -0.01781792809366 * S_PC_13  +     0.87937511104362 * S_PC_14
1709431   +          +     0.11363426216873 * S_PC_15  +     0.15473733315317 * S_PC_16
1709432   +          +    -0.25728762971414 * S_PC_17  +     0.14902434266152 * S_PC_2
1709433   +          +    -0.54672153901076 * S_PC_3  +     0.68025560498171 * S_PC_4
1709434   +          +     0.38503442452439 * S_PC_5  +     0.12957351960793 * S_PC_6
1709435   +          +    -0.55840202311292 * S_PC_7  +    -0.04966795126386 * S_PC_8
1709436   +          +    -0.18806551125208 * S_PC_9  +     1.14929153435805 *
1709437   +        S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.81897893610437 * S_PC_1 + 0.17086737000156 * S_PC_10 + 
-0.41456412659338 * S_PC_11 + -0.10210116836733 * S_PC_12 + -0.01781792809366 * S_PC_13 + 
0.87937511104362 * S_PC_14 + 0.11363426216873 * S_PC_15 + 0.15473733315317 * S_PC_16 + 
-0.25728762971414 * S_PC_17 + 0.14902434266152 * S_PC_2 + -0.54672153901076 * S_PC_3 + 
0.68025560498171 * S_PC_4 + 0.38503442452439 * S_PC_5 + 0.12957351960793 * S_PC_6 + 
-0.55840202311292 * S_PC_7 + -0.04966795126386 * S_PC_8 + -0.18806551125208 * S_PC_9 + 
1.14929153435805 * S_Year_Birth ;
1709438   +   H1x1_4  =    -0.14487980505225 * S_PC_1  +     0.17192203332047 * S_PC_10
1709439   +          +     0.03195160273321 * S_PC_11  +    -0.08689400274427 * S_PC_12
1709440   +          +     0.38089132351821 * S_PC_13  +     -0.0266430724512 * S_PC_14
1709441   +          +     0.04400113177839 * S_PC_15  +    -0.11330745510845 * S_PC_16
1709442   +          +    -0.02017896419464 * S_PC_17  +      0.3275023839513 * S_PC_2
1709443   +          +     0.12820167568493 * S_PC_3  +    -0.21125497799085 * S_PC_4
1709444   +          +     0.24494493836545 * S_PC_5  +    -0.05439626774834 * S_PC_6
1709445   +          +    -0.00677402946214 * S_PC_7  +    -0.14431119046299 * S_PC_8
1709446   +          +    -0.05606535418296 * S_PC_9  +    -0.10392063931961 *
1709447   +        S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -0.14487980505225 * S_PC_1 + 0.17192203332047 * S_PC_10 + 
0.03195160273321 * S_PC_11 + -0.08689400274427 * S_PC_12 + 0.38089132351821 * S_PC_13 + 
-0.0266430724512 * S_PC_14 + 0.04400113177839 * S_PC_15 + -0.11330745510845 * S_PC_16 + 
-0.02017896419464 * S_PC_17 + 0.3275023839513 * S_PC_2 + 0.12820167568493 * S_PC_3 + 
-0.21125497799085 * S_PC_4 + 0.24494493836545 * S_PC_5 + -0.05439626774834 * S_PC_6 + 
-0.00677402946214 * S_PC_7 + -0.14431119046299 * S_PC_8 + -0.05606535418296 * S_PC_9 + 
-0.10392063931961 * S_Year_Birth ;
1709448   +   H1x1_5  =     0.46644634016117 * S_PC_1  +     0.24966722326697 * S_PC_10
1709449   +          +    -0.50204053155973 * S_PC_11  +    -0.16163921287329 * S_PC_12
1709450   +          +     -0.2117873065953 * S_PC_13  +     0.00321866119698 * S_PC_14
1709451   +          +      0.0699390312895 * S_PC_15  +     0.04948301682548 * S_PC_16
1709452   +          +      0.3193284933053 * S_PC_17  +     0.83054970008779 * S_PC_2
1709453   +          +       0.926899452502 * S_PC_3  +    -0.65951796203459 * S_PC_4
1709454   +          +    -0.04590479970431 * S_PC_5  +    -0.34410773240721 * S_PC_6
1709455   +          +    -0.57666665311988 * S_PC_7  +     0.13200105511652 * S_PC_8
1709456   +          +     0.22557835400272 * S_PC_9  +     0.37883228433977 *
1709457   +        S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 0.46644634016117 * S_PC_1 + 0.24966722326697 * S_PC_10 + 
-0.50204053155973 * S_PC_11 + -0.16163921287329 * S_PC_12 + -0.2117873065953 * S_PC_13 + 
0.00321866119698 * S_PC_14 + 0.0699390312895 * S_PC_15 + 0.04948301682548 * S_PC_16 + 
0.3193284933053 * S_PC_17 + 0.83054970008779 * S_PC_2 + 0.926899452502 * S_PC_3 + 
-0.65951796203459 * S_PC_4 + -0.04590479970431 * S_PC_5 + -0.34410773240721 * S_PC_6 + 
-0.57666665311988 * S_PC_7 + 0.13200105511652 * S_PC_8 + 0.22557835400272 * S_PC_9 + 
0.37883228433977 * S_Year_Birth ;
1709458   +   H1x1_1  =    -1.47213938689482 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -1.47213938689482 + H1x1_1 ;
1709459   +   H1x1_2  =     0.04468453740373 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.04468453740373 + H1x1_2 ;
1709460   +   H1x1_3  =     1.02710140676845 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.02710140676845 + H1x1_3 ;
1709461   +   H1x1_4  =     0.72012823118527 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.72012823118527 + H1x1_4 ;
1709462   +   H1x1_5  =      0.2940192888358 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 0.2940192888358 + H1x1_5 ;
1709463   +   H1x1_1  = SIN(H1x1_1 );
MPRINT(EM_DIAGRAM):   H1x1_1 = SIN(H1x1_1 );
1709464   +   H1x1_2  = SIN(H1x1_2 );
MPRINT(EM_DIAGRAM):   H1x1_2 = SIN(H1x1_2 );
1709465   +   H1x1_3  = SIN(H1x1_3 );
MPRINT(EM_DIAGRAM):   H1x1_3 = SIN(H1x1_3 );
1709466   +   H1x1_4  = SIN(H1x1_4 );
MPRINT(EM_DIAGRAM):   H1x1_4 = SIN(H1x1_4 );
1709467   +   H1x1_5  = SIN(H1x1_5 );
MPRINT(EM_DIAGRAM):   H1x1_5 = SIN(H1x1_5 );
1709468   +END;
MPRINT(EM_DIAGRAM):   END;
1709469   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1709470   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
1709471   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
1709472   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
1709473   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
1709474   +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
1709475   +END;
MPRINT(EM_DIAGRAM):   END;
1709476   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1709477   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1709478   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1709479   +
1709480   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1709481   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1709482   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1709483   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1709484   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1709485   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1709486   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1709487   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1709488   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1709489   +end;
MPRINT(EM_DIAGRAM):   end;
1709490   +else do;
MPRINT(EM_DIAGRAM):   else do;
1709491   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1709492   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1709493   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1709494   +   end;
MPRINT(EM_DIAGRAM):   end;
1709495   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1709496   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1709497   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1709498   +   end;
MPRINT(EM_DIAGRAM):   end;
1709499   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1709500   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1709501   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1709502   +   end;
MPRINT(EM_DIAGRAM):   end;
1709503   +end;
MPRINT(EM_DIAGRAM):   end;
1709504   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1709505   +   P_DepVar1  =      2.8481167326349 * H1x1_1  +     2.49835781491849 * H1x1_2
1709506   +          +    -1.58189403173494 * H1x1_3  +    -3.82498978068274 * H1x1_4
1709507   +          +     -1.3633590212543 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 2.8481167326349 * H1x1_1 + 2.49835781491849 * H1x1_2 + 
-1.58189403173494 * H1x1_3 + -3.82498978068274 * H1x1_4 + -1.3633590212543 * H1x1_5 ;
1709508   +   P_DepVar1  =     0.71854967580477 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.71854967580477 + P_DepVar1 ;
1709509   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1709510   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1709511   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1709512   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1709513   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1709514   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1709515   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1709516   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1709517   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1709518   +END;
MPRINT(EM_DIAGRAM):   END;
1709519   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1709520   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1709521   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1709522   +END;
MPRINT(EM_DIAGRAM):   END;
1709523   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1709524   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1709525   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1709526   +END;
MPRINT(EM_DIAGRAM):   END;
1709527   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1709528   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1709529   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1709530   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1709531   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1709532   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1709533   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1709534   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1709535   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1709536   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1709537   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1709538   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1709539   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1709540   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1709541   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1709542   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1709543   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1709544   +END;
MPRINT(EM_DIAGRAM):   END;
1709545   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1709546   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1709547   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1709548   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1709549    run;

NOTE: DATA STEP view saved on file EMWS8.AUTONEURAL13_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.PRINCOMP_VALIDATE.VIEW used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1709550    quit;
1709551    filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
1709552    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
1709553    * AutoNeural13: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * AutoNeural13: Computing metadata for TRAIN data;
1709554    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;

NOTE: View EMWS8.AUTONEURAL13_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural13\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS8.AutoNeural13_TRAIN out=_tempAdvisor 
noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS8.AutoNeural13_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS8.AutoNeural13_TRAIN out=WORK.M1NTPQ5N 
noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1NTPQ5N;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20 
INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M1NTPQ5N(keep=name type length label format formatl 
formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then format = strip(format)!!strip(put(formatl, 
best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, 
best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then informat = 
strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, 
best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1NTPQ5N;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M1NTPQ5N;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M2JTKMXP NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2JTKMXP;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M2JTKMXP;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M22MELS6(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M2JTKMXP;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2JTKMXP;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 
FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M2JTKMXP;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" 
"MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" 
"QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" "YEAR" "YYMMDD" "YYMON" 
"YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" 
"EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) 
formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = 
"DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) 
formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" 
"NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" 
"SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = 
"DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then 
level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 
'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 
'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ 
('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 
'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 
'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2JTKMXP;
MPRINT(EMADVISECOLUMNS):   set WORK.M2JTKMXP;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= 
"Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= 
"Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower limit" UPPERLIMIT= 
"Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= 
"Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.PRINCOMP_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.PRINCOMP_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural13_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT 
LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "AutoNeural13";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("P_DEPVAR1") creator = "AutoNeural13";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR1") creator = "AutoNeural13";
MPRINT(EM_DIAGRAM):   when("P_DEPVAR0") creator = "AutoNeural13";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR0") creator = "AutoNeural13";
MPRINT(EM_DIAGRAM):   when("F_DEPVAR") creator = "AutoNeural13";
MPRINT(EM_DIAGRAM):   when("I_DEPVAR") creator = "AutoNeural13";
MPRINT(EM_DIAGRAM):   when("U_DEPVAR") creator = "AutoNeural13";
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "AutoNeural13";
MPRINT(EM_DIAGRAM):   when("DEPVAR") model = "AutoNeural13";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * AutoNeural13: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
1709866    data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
1709867    set EMWS8.AutoNeural13_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural13_EMINFO;
1709868    where DATA='AutoNeural13' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='AutoNeural13' and KEY ^in('DECDATA', 'DECMETA', 
'IMPORTANCE', 'MODEL');
1709869    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.AUTONEURAL13_EMINFO.
      WHERE (DATA='AutoNeural13') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1709870    data EMWS8.AutoNeural13_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural13_EMINFO;
1709871    length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
1709872    input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
1709873    cards;
MPRINT(EM_DIAGRAM):   cards;

NOTE: The data set EMWS8.AUTONEURAL13_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   run;
1709877    run;
1709878    data EMWS8.AutoNeural13_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural13_EMINFO;
1709879    set EMWS8.AutoNeural13_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural13_EMINFO WORK.MODELTEMP_INFO;
1709880    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.AUTONEURAL13_EMINFO.
NOTE: There were 0 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS8.AUTONEURAL13_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1709881    proc sort data = EMWS8.AutoNeural13_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.AutoNeural13_EMINFO NOTHREADS;
1709882    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
1709883    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.AUTONEURAL13_EMINFO.
NOTE: The data set EMWS8.AUTONEURAL13_EMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1709884    proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
1709885    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
1709886    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set EMWS8.FIMPORT_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 1 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1709887    proc sort data = EMWS8.AutoNeural13_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS8.AutoNeural13_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
1709888    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
1709889    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 3 observations read from the data set EMWS8.AUTONEURAL13_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1709890    data EMWS8.AutoNeural13_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural13_EMINFO;
1709891    merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
1709892    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
1709893    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 3 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS8.AUTONEURAL13_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1709894    proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
1709895    delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
1709896    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
1709897    quit;
MPRINT(EM_DIAGRAM):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

NOTE: View EMWS8.AUTONEURAL13_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
NOTE: View EMWS8.AUTONEURAL13_VALIDATE.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
