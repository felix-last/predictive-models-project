*------------------------------------------------------------*;
* Rule Induction Scoring Code;
*------------------------------------------------------------*;
length _bin $12 I__bin $12 I_DepVar $32;
label I_DepVar = 'Into: DepVar';
*;
I_DepVar = '';
I__bin= '0';
*;
*------------------------------------------------------------*;
* No Ripping Models were created;
*------------------------------------------------------------*;
*------------------------------------------------------------*;
* Binary model for DepVar = 0;
*------------------------------------------------------------*;
*************************************;
*** begin scoring code for regression;
*************************************;

length _WARN_ $4;
label _WARN_ = 'Warnings' ;

length I__bin $ 12;
label I__bin = 'Into: _bin' ;
*** Target Values;
array RULE3_1DRF [2] $12 _temporary_ ('1' '0' );
label U__bin = 'Unnormalized Into: _bin' ;
length U__bin $ 12;
*** Unnormalized target values;
array RULE3_1DRU[2] $ 12 _temporary_ ('1           '  '0           ' );

drop _DM_BAD;
_DM_BAD=0;

*** Check Year_Birth for missing values ;
if missing( Year_Birth ) then do;
   substr(_warn_,1,1) = 'M';
   _DM_BAD = 1;
end;

*** Generate dummy variables for GRP_AcceptedCmp5 ;
drop _1_0 ;
if missing( GRP_AcceptedCmp5 ) then do;
   _1_0 = .;
   substr(_warn_,1,1) = 'M';
   _DM_BAD = 1;
end;
else do;
   length _dm12 $ 12; drop _dm12 ;
   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
   %DMNORMIP( _dm12 )
   if _dm12 = '2'  then do;
      _1_0 = 1;
   end;
   else if _dm12 = '3'  then do;
      _1_0 = -1;
   end;
   else do;
      _1_0 = .;
      substr(_warn_,2,1) = 'U';
      _DM_BAD = 1;
   end;
end;

*** Generate dummy variables for GRP_Frq ;
drop _2_0 _2_1 _2_2 ;
if missing( GRP_Frq ) then do;
   _2_0 = .;
   _2_1 = .;
   _2_2 = .;
   substr(_warn_,1,1) = 'M';
   _DM_BAD = 1;
end;
else do;
   length _dm12 $ 12; drop _dm12 ;
   _dm12 = put( GRP_Frq , BEST12. );
   %DMNORMIP( _dm12 )
   if _dm12 = '5'  then do;
      _2_0 = -1;
      _2_1 = -1;
      _2_2 = -1;
   end;
   else if _dm12 = '3'  then do;
      _2_0 = 0;
      _2_1 = 1;
      _2_2 = 0;
   end;
   else if _dm12 = '4'  then do;
      _2_0 = 0;
      _2_1 = 0;
      _2_2 = 1;
   end;
   else if _dm12 = '2'  then do;
      _2_0 = 1;
      _2_1 = 0;
      _2_2 = 0;
   end;
   else do;
      _2_0 = .;
      _2_1 = .;
      _2_2 = .;
      substr(_warn_,2,1) = 'U';
      _DM_BAD = 1;
   end;
end;

*** Generate dummy variables for GRP_Income ;
drop _3_0 _3_1 _3_2 ;
if missing( GRP_Income ) then do;
   _3_0 = .;
   _3_1 = .;
   _3_2 = .;
   substr(_warn_,1,1) = 'M';
   _DM_BAD = 1;
end;
else do;
   length _dm12 $ 12; drop _dm12 ;
   _dm12 = put( GRP_Income , BEST12. );
   %DMNORMIP( _dm12 )
   if _dm12 = '5'  then do;
      _3_0 = -1;
      _3_1 = -1;
      _3_2 = -1;
   end;
   else if _dm12 = '4'  then do;
      _3_0 = 0;
      _3_1 = 0;
      _3_2 = 1;
   end;
   else if _dm12 = '3'  then do;
      _3_0 = 0;
      _3_1 = 1;
      _3_2 = 0;
   end;
   else if _dm12 = '2'  then do;
      _3_0 = 1;
      _3_1 = 0;
      _3_2 = 0;
   end;
   else do;
      _3_0 = .;
      _3_1 = .;
      _3_2 = .;
      substr(_warn_,2,1) = 'U';
      _DM_BAD = 1;
   end;
end;

*** Generate dummy variables for GRP_Mnt ;
drop _4_0 _4_1 _4_2 ;
if missing( GRP_Mnt ) then do;
   _4_0 = .;
   _4_1 = .;
   _4_2 = .;
   substr(_warn_,1,1) = 'M';
   _DM_BAD = 1;
end;
else do;
   length _dm12 $ 12; drop _dm12 ;
   _dm12 = put( GRP_Mnt , BEST12. );
   %DMNORMIP( _dm12 )
   if _dm12 = '3'  then do;
      _4_0 = 0;
      _4_1 = 1;
      _4_2 = 0;
   end;
   else if _dm12 = '5'  then do;
      _4_0 = -1;
      _4_1 = -1;
      _4_2 = -1;
   end;
   else if _dm12 = '4'  then do;
      _4_0 = 0;
      _4_1 = 0;
      _4_2 = 1;
   end;
   else if _dm12 = '2'  then do;
      _4_0 = 1;
      _4_1 = 0;
      _4_2 = 0;
   end;
   else do;
      _4_0 = .;
      _4_1 = .;
      _4_2 = .;
      substr(_warn_,2,1) = 'U';
      _DM_BAD = 1;
   end;
end;

*** Generate dummy variables for GRP_MntFishProducts ;
drop _5_0 _5_1 _5_2 ;
if missing( GRP_MntFishProducts ) then do;
   _5_0 = .;
   _5_1 = .;
   _5_2 = .;
   substr(_warn_,1,1) = 'M';
   _DM_BAD = 1;
end;
else do;
   length _dm12 $ 12; drop _dm12 ;
   _dm12 = put( GRP_MntFishProducts , BEST12. );
   %DMNORMIP( _dm12 )
   if _dm12 = '3'  then do;
      _5_0 = 0;
      _5_1 = 1;
      _5_2 = 0;
   end;
   else if _dm12 = '5'  then do;
      _5_0 = -1;
      _5_1 = -1;
      _5_2 = -1;
   end;
   else if _dm12 = '4'  then do;
      _5_0 = 0;
      _5_1 = 0;
      _5_2 = 1;
   end;
   else if _dm12 = '2'  then do;
      _5_0 = 1;
      _5_1 = 0;
      _5_2 = 0;
   end;
   else do;
      _5_0 = .;
      _5_1 = .;
      _5_2 = .;
      substr(_warn_,2,1) = 'U';
      _DM_BAD = 1;
   end;
end;

*** Generate dummy variables for GRP_MntGoldProds ;
drop _6_0 _6_1 _6_2 ;
if missing( GRP_MntGoldProds ) then do;
   _6_0 = .;
   _6_1 = .;
   _6_2 = .;
   substr(_warn_,1,1) = 'M';
   _DM_BAD = 1;
end;
else do;
   length _dm12 $ 12; drop _dm12 ;
   _dm12 = put( GRP_MntGoldProds , BEST12. );
   %DMNORMIP( _dm12 )
   if _dm12 = '3'  then do;
      _6_0 = 0;
      _6_1 = 1;
      _6_2 = 0;
   end;
   else if _dm12 = '4'  then do;
      _6_0 = 0;
      _6_1 = 0;
      _6_2 = 1;
   end;
   else if _dm12 = '5'  then do;
      _6_0 = -1;
      _6_1 = -1;
      _6_2 = -1;
   end;
   else if _dm12 = '2'  then do;
      _6_0 = 1;
      _6_1 = 0;
      _6_2 = 0;
   end;
   else do;
      _6_0 = .;
      _6_1 = .;
      _6_2 = .;
      substr(_warn_,2,1) = 'U';
      _DM_BAD = 1;
   end;
end;

*** Generate dummy variables for GRP_MntMeatProducts ;
drop _7_0 _7_1 _7_2 ;
if missing( GRP_MntMeatProducts ) then do;
   _7_0 = .;
   _7_1 = .;
   _7_2 = .;
   substr(_warn_,1,1) = 'M';
   _DM_BAD = 1;
end;
else do;
   length _dm12 $ 12; drop _dm12 ;
   _dm12 = put( GRP_MntMeatProducts , BEST12. );
   %DMNORMIP( _dm12 )
   if _dm12 = '3'  then do;
      _7_0 = 0;
      _7_1 = 1;
      _7_2 = 0;
   end;
   else if _dm12 = '4'  then do;
      _7_0 = 0;
      _7_1 = 0;
      _7_2 = 1;
   end;
   else if _dm12 = '5'  then do;
      _7_0 = -1;
      _7_1 = -1;
      _7_2 = -1;
   end;
   else if _dm12 = '2'  then do;
      _7_0 = 1;
      _7_1 = 0;
      _7_2 = 0;
   end;
   else do;
      _7_0 = .;
      _7_1 = .;
      _7_2 = .;
      substr(_warn_,2,1) = 'U';
      _DM_BAD = 1;
   end;
end;

*** Generate dummy variables for GRP_MntWines ;
drop _8_0 _8_1 _8_2 ;
if missing( GRP_MntWines ) then do;
   _8_0 = .;
   _8_1 = .;
   _8_2 = .;
   substr(_warn_,1,1) = 'M';
   _DM_BAD = 1;
end;
else do;
   length _dm12 $ 12; drop _dm12 ;
   _dm12 = put( GRP_MntWines , BEST12. );
   %DMNORMIP( _dm12 )
   if _dm12 = '3'  then do;
      _8_0 = 0;
      _8_1 = 1;
      _8_2 = 0;
   end;
   else if _dm12 = '5'  then do;
      _8_0 = -1;
      _8_1 = -1;
      _8_2 = -1;
   end;
   else if _dm12 = '4'  then do;
      _8_0 = 0;
      _8_1 = 0;
      _8_2 = 1;
   end;
   else if _dm12 = '2'  then do;
      _8_0 = 1;
      _8_1 = 0;
      _8_2 = 0;
   end;
   else do;
      _8_0 = .;
      _8_1 = .;
      _8_2 = .;
      substr(_warn_,2,1) = 'U';
      _DM_BAD = 1;
   end;
end;

*** Generate dummy variables for GRP_NumCatalogPurchases ;
drop _9_0 _9_1 ;
if missing( GRP_NumCatalogPurchases ) then do;
   _9_0 = .;
   _9_1 = .;
   substr(_warn_,1,1) = 'M';
   _DM_BAD = 1;
end;
else do;
   length _dm12 $ 12; drop _dm12 ;
   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
   %DMNORMIP( _dm12 )
   if _dm12 = '3'  then do;
      _9_0 = 1;
      _9_1 = 0;
   end;
   else if _dm12 = '5'  then do;
      _9_0 = -1;
      _9_1 = -1;
   end;
   else if _dm12 = '4'  then do;
      _9_0 = 0;
      _9_1 = 1;
   end;
   else do;
      _9_0 = .;
      _9_1 = .;
      substr(_warn_,2,1) = 'U';
      _DM_BAD = 1;
   end;
end;

*** Generate dummy variables for GRP_NumDistPurchases ;
drop _10_0 _10_1 _10_2 ;
if missing( GRP_NumDistPurchases ) then do;
   _10_0 = .;
   _10_1 = .;
   _10_2 = .;
   substr(_warn_,1,1) = 'M';
   _DM_BAD = 1;
end;
else do;
   length _dm12 $ 12; drop _dm12 ;
   _dm12 = put( GRP_NumDistPurchases , BEST12. );
   %DMNORMIP( _dm12 )
   if _dm12 = '5'  then do;
      _10_0 = -1;
      _10_1 = -1;
      _10_2 = -1;
   end;
   else if _dm12 = '4'  then do;
      _10_0 = 0;
      _10_1 = 0;
      _10_2 = 1;
   end;
   else if _dm12 = '2'  then do;
      _10_0 = 1;
      _10_1 = 0;
      _10_2 = 0;
   end;
   else if _dm12 = '3'  then do;
      _10_0 = 0;
      _10_1 = 1;
      _10_2 = 0;
   end;
   else do;
      _10_0 = .;
      _10_1 = .;
      _10_2 = .;
      substr(_warn_,2,1) = 'U';
      _DM_BAD = 1;
   end;
end;

*** Generate dummy variables for GRP_NumWebPurchases ;
drop _11_0 _11_1 _11_2 ;
if missing( GRP_NumWebPurchases ) then do;
   _11_0 = .;
   _11_1 = .;
   _11_2 = .;
   substr(_warn_,1,1) = 'M';
   _DM_BAD = 1;
end;
else do;
   length _dm12 $ 12; drop _dm12 ;
   _dm12 = put( GRP_NumWebPurchases , BEST12. );
   %DMNORMIP( _dm12 )
   if _dm12 = '3'  then do;
      _11_0 = 0;
      _11_1 = 1;
      _11_2 = 0;
   end;
   else if _dm12 = '5'  then do;
      _11_0 = -1;
      _11_1 = -1;
      _11_2 = -1;
   end;
   else if _dm12 = '4'  then do;
      _11_0 = 0;
      _11_1 = 0;
      _11_2 = 1;
   end;
   else if _dm12 = '2'  then do;
      _11_0 = 1;
      _11_1 = 0;
      _11_2 = 0;
   end;
   else do;
      _11_0 = .;
      _11_1 = .;
      _11_2 = .;
      substr(_warn_,2,1) = 'U';
      _DM_BAD = 1;
   end;
end;

*** Generate dummy variables for GRP_RFMstat ;
drop _12_0 _12_1 _12_2 ;
if missing( GRP_RFMstat ) then do;
   _12_0 = .;
   _12_1 = .;
   _12_2 = .;
   substr(_warn_,1,1) = 'M';
   _DM_BAD = 1;
end;
else do;
   length _dm12 $ 12; drop _dm12 ;
   _dm12 = put( GRP_RFMstat , BEST12. );
   %DMNORMIP( _dm12 )
   if _dm12 = '4'  then do;
      _12_0 = 0;
      _12_1 = 0;
      _12_2 = 1;
   end;
   else if _dm12 = '3'  then do;
      _12_0 = 0;
      _12_1 = 1;
      _12_2 = 0;
   end;
   else if _dm12 = '5'  then do;
      _12_0 = -1;
      _12_1 = -1;
      _12_2 = -1;
   end;
   else if _dm12 = '2'  then do;
      _12_0 = 1;
      _12_1 = 0;
      _12_2 = 0;
   end;
   else do;
      _12_0 = .;
      _12_1 = .;
      _12_2 = .;
      substr(_warn_,2,1) = 'U';
      _DM_BAD = 1;
   end;
end;

*** Generate dummy variables for GRP_RMntFrq ;
drop _13_0 _13_1 _13_2 ;
if missing( GRP_RMntFrq ) then do;
   _13_0 = .;
   _13_1 = .;
   _13_2 = .;
   substr(_warn_,1,1) = 'M';
   _DM_BAD = 1;
end;
else do;
   length _dm12 $ 12; drop _dm12 ;
   _dm12 = put( GRP_RMntFrq , BEST12. );
   %DMNORMIP( _dm12 )
   if _dm12 = '3'  then do;
      _13_0 = 0;
      _13_1 = 1;
      _13_2 = 0;
   end;
   else if _dm12 = '5'  then do;
      _13_0 = -1;
      _13_1 = -1;
      _13_2 = -1;
   end;
   else if _dm12 = '4'  then do;
      _13_0 = 0;
      _13_1 = 0;
      _13_2 = 1;
   end;
   else if _dm12 = '2'  then do;
      _13_0 = 1;
      _13_1 = 0;
      _13_2 = 0;
   end;
   else do;
      _13_0 = .;
      _13_1 = .;
      _13_2 = .;
      substr(_warn_,2,1) = 'U';
      _DM_BAD = 1;
   end;
end;

*** Generate dummy variables for GRP_Recency ;
drop _14_0 _14_1 _14_2 ;
if missing( GRP_Recency ) then do;
   _14_0 = .;
   _14_1 = .;
   _14_2 = .;
   substr(_warn_,1,1) = 'M';
   _DM_BAD = 1;
end;
else do;
   length _dm12 $ 12; drop _dm12 ;
   _dm12 = put( GRP_Recency , BEST12. );
   %DMNORMIP( _dm12 )
   if _dm12 = '5'  then do;
      _14_0 = -1;
      _14_1 = -1;
      _14_2 = -1;
   end;
   else if _dm12 = '4'  then do;
      _14_0 = 0;
      _14_1 = 0;
      _14_2 = 1;
   end;
   else if _dm12 = '3'  then do;
      _14_0 = 0;
      _14_1 = 1;
      _14_2 = 0;
   end;
   else if _dm12 = '2'  then do;
      _14_0 = 1;
      _14_1 = 0;
      _14_2 = 0;
   end;
   else do;
      _14_0 = .;
      _14_1 = .;
      _14_2 = .;
      substr(_warn_,2,1) = 'U';
      _DM_BAD = 1;
   end;
end;

*** If missing inputs, use averages;
if _DM_BAD > 0 then do;
   _P0 = 0.848778433;
   _P1 = 0.151221567;
   goto RULE3_1DR1;
end;

*** Compute Linear Predictor;
drop _TEMP;
drop _LP0;
_LP0 = 0;

***  Effect: GRP_AcceptedCmp5 ;
_TEMP = 1;
_LP0 = _LP0 + (    0.99733656758775) * _TEMP * _1_0;

***  Effect: GRP_Frq ;
_TEMP = 1;
_LP0 = _LP0 + (   -2.23368933318007) * _TEMP * _2_0;
_LP0 = _LP0 + (   -0.25095248894121) * _TEMP * _2_1;
_LP0 = _LP0 + (     0.8387769347269) * _TEMP * _2_2;

***  Effect: GRP_Income ;
_TEMP = 1;
_LP0 = _LP0 + (   -0.99078035521361) * _TEMP * _3_0;
_LP0 = _LP0 + (   -0.88661982524205) * _TEMP * _3_1;
_LP0 = _LP0 + (    0.95470778586134) * _TEMP * _3_2;

***  Effect: GRP_Mnt ;
_TEMP = 1;
_LP0 = _LP0 + (    0.56285493845236) * _TEMP * _4_0;
_LP0 = _LP0 + (    0.33650487164657) * _TEMP * _4_1;
_LP0 = _LP0 + (   -0.26285568117112) * _TEMP * _4_2;

***  Effect: GRP_MntFishProducts ;
_TEMP = 1;
_LP0 = _LP0 + (     -0.721500716476) * _TEMP * _5_0;
_LP0 = _LP0 + (   -0.08163727747607) * _TEMP * _5_1;
_LP0 = _LP0 + (    0.08970108712955) * _TEMP * _5_2;

***  Effect: GRP_MntGoldProds ;
_TEMP = 1;
_LP0 = _LP0 + (    0.23750271092964) * _TEMP * _6_0;
_LP0 = _LP0 + (    0.04814501514157) * _TEMP * _6_1;
_LP0 = _LP0 + (    0.00356893973566) * _TEMP * _6_2;

***  Effect: GRP_MntMeatProducts ;
_TEMP = 1;
_LP0 = _LP0 + (    1.37278090702821) * _TEMP * _7_0;
_LP0 = _LP0 + (    0.22207512218681) * _TEMP * _7_1;
_LP0 = _LP0 + (   -0.53385403881984) * _TEMP * _7_2;

***  Effect: GRP_MntWines ;
_TEMP = 1;
_LP0 = _LP0 + (   -1.11716202001212) * _TEMP * _8_0;
_LP0 = _LP0 + (   -0.51167594500869) * _TEMP * _8_1;
_LP0 = _LP0 + (    0.64784283470689) * _TEMP * _8_2;

***  Effect: GRP_NumCatalogPurchases ;
_TEMP = 1;
_LP0 = _LP0 + (    1.01474391679706) * _TEMP * _9_0;
_LP0 = _LP0 + (   -0.03038001206526) * _TEMP * _9_1;

***  Effect: GRP_NumDistPurchases ;
_TEMP = 1;
_LP0 = _LP0 + (    2.66475250943038) * _TEMP * _10_0;
_LP0 = _LP0 + (    0.04624841851569) * _TEMP * _10_1;
_LP0 = _LP0 + (   -0.53479007375242) * _TEMP * _10_2;

***  Effect: GRP_NumWebPurchases ;
_TEMP = 1;
_LP0 = _LP0 + (   -0.13829564901609) * _TEMP * _11_0;
_LP0 = _LP0 + (   -0.12263501103992) * _TEMP * _11_1;
_LP0 = _LP0 + (    0.02226799691206) * _TEMP * _11_2;

***  Effect: GRP_RFMstat ;
_TEMP = 1;
_LP0 = _LP0 + (    0.75053078016285) * _TEMP * _12_0;
_LP0 = _LP0 + (    0.13674904177699) * _TEMP * _12_1;
_LP0 = _LP0 + (   -0.28040137971405) * _TEMP * _12_2;

***  Effect: GRP_RMntFrq ;
_TEMP = 1;
_LP0 = _LP0 + (   -0.36702439031685) * _TEMP * _13_0;
_LP0 = _LP0 + (   -0.24550330955003) * _TEMP * _13_1;
_LP0 = _LP0 + (    0.69153126983534) * _TEMP * _13_2;

***  Effect: GRP_Recency ;
_TEMP = 1;
_LP0 = _LP0 + (    -1.7633808694344) * _TEMP * _14_0;
_LP0 = _LP0 + (   -0.48174022563147) * _TEMP * _14_1;
_LP0 = _LP0 + (    0.55544312461752) * _TEMP * _14_2;

***  Effect: Year_Birth ;
_TEMP = Year_Birth ;
_LP0 = _LP0 + (   -0.01709272489091 * _TEMP);

*** Naive Posterior Probabilities;
drop _MAXP _IY _P0 _P1;
_TEMP =      35.509534550978 + _LP0;
if (_TEMP < 0) then do;
   _TEMP = exp(_TEMP);
   _P0 = _TEMP / (1 + _TEMP);
end;
else _P0 = 1 / (1 + exp(-_TEMP));
_P1 = 1.0 - _P0;

RULE3_1DR1:


*** Posterior Probabilities and Predicted Level;
label P__bin1 = 'Predicted: _bin=1' ;
label P__bin0 = 'Predicted: _bin=0' ;
P__bin1 = _P0;
_MAXP = _P0;
_IY = 1;
P__bin0 = _P1;
if (_P1 >  _MAXP + 1E-8) then do;
   _MAXP = _P1;
   _IY = 2;
end;
I__bin = RULE3_1DRF[_IY];
U__bin = RULE3_1DRU[_IY];

*************************************;
***** end scoring code for regression;
*************************************;
*;
%DMNORMIP(I__bin);
if I__bin eq '1' then do;
I_DepVar = ("0");
%DMNORMCP(I_DepVar, I_DepVar);
P_DepVar0=P__bin1;
P_DepVar1 = 1-P__bin1;
end;
*;
*;
* END Binary Model for DepVar = 0;
;
*;
DROP P__bin1 P__bin0;
*------------------------------------------------------------*;
* Binary model for DepVar = 1;
*------------------------------------------------------------*;
*;
%DMNORMIP(I__bin);
if I__bin ne '1' then do;
*;
*************************************;
*** begin scoring code for regression;
*************************************;

length _WARN_ $4;
label _WARN_ = 'Warnings' ;

length I__bin $ 12;
label I__bin = 'Into: _bin' ;
*** Target Values;
array RULE3_2DRF [2] $12 _temporary_ ('1' '0' );
label U__bin = 'Unnormalized Into: _bin' ;
length U__bin $ 12;
*** Unnormalized target values;
array RULE3_2DRU[2] $ 12 _temporary_ ('1           '  '0           ' );

drop _DM_BAD;
_DM_BAD=0;

*** Check Year_Birth for missing values ;
if missing( Year_Birth ) then do;
   substr(_warn_,1,1) = 'M';
   _DM_BAD = 1;
end;

*** Generate dummy variables for GRP_AcceptedCmp5 ;
drop _1_0 ;
if missing( GRP_AcceptedCmp5 ) then do;
   _1_0 = .;
   substr(_warn_,1,1) = 'M';
   _DM_BAD = 1;
end;
else do;
   length _dm12 $ 12; drop _dm12 ;
   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
   %DMNORMIP( _dm12 )
   if _dm12 = '2'  then do;
      _1_0 = 1;
   end;
   else if _dm12 = '3'  then do;
      _1_0 = -1;
   end;
   else do;
      _1_0 = .;
      substr(_warn_,2,1) = 'U';
      _DM_BAD = 1;
   end;
end;

*** Generate dummy variables for GRP_Frq ;
drop _2_0 _2_1 _2_2 ;
if missing( GRP_Frq ) then do;
   _2_0 = .;
   _2_1 = .;
   _2_2 = .;
   substr(_warn_,1,1) = 'M';
   _DM_BAD = 1;
end;
else do;
   length _dm12 $ 12; drop _dm12 ;
   _dm12 = put( GRP_Frq , BEST12. );
   %DMNORMIP( _dm12 )
   if _dm12 = '5'  then do;
      _2_0 = -1;
      _2_1 = -1;
      _2_2 = -1;
   end;
   else if _dm12 = '4'  then do;
      _2_0 = 0;
      _2_1 = 0;
      _2_2 = 1;
   end;
   else if _dm12 = '3'  then do;
      _2_0 = 0;
      _2_1 = 1;
      _2_2 = 0;
   end;
   else if _dm12 = '2'  then do;
      _2_0 = 1;
      _2_1 = 0;
      _2_2 = 0;
   end;
   else do;
      _2_0 = .;
      _2_1 = .;
      _2_2 = .;
      substr(_warn_,2,1) = 'U';
      _DM_BAD = 1;
   end;
end;

*** Generate dummy variables for GRP_Income ;
drop _3_0 _3_1 _3_2 ;
if missing( GRP_Income ) then do;
   _3_0 = .;
   _3_1 = .;
   _3_2 = .;
   substr(_warn_,1,1) = 'M';
   _DM_BAD = 1;
end;
else do;
   length _dm12 $ 12; drop _dm12 ;
   _dm12 = put( GRP_Income , BEST12. );
   %DMNORMIP( _dm12 )
   if _dm12 = '5'  then do;
      _3_0 = -1;
      _3_1 = -1;
      _3_2 = -1;
   end;
   else if _dm12 = '3'  then do;
      _3_0 = 0;
      _3_1 = 1;
      _3_2 = 0;
   end;
   else if _dm12 = '2'  then do;
      _3_0 = 1;
      _3_1 = 0;
      _3_2 = 0;
   end;
   else if _dm12 = '4'  then do;
      _3_0 = 0;
      _3_1 = 0;
      _3_2 = 1;
   end;
   else do;
      _3_0 = .;
      _3_1 = .;
      _3_2 = .;
      substr(_warn_,2,1) = 'U';
      _DM_BAD = 1;
   end;
end;

*** Generate dummy variables for GRP_Mnt ;
drop _4_0 _4_1 _4_2 ;
if missing( GRP_Mnt ) then do;
   _4_0 = .;
   _4_1 = .;
   _4_2 = .;
   substr(_warn_,1,1) = 'M';
   _DM_BAD = 1;
end;
else do;
   length _dm12 $ 12; drop _dm12 ;
   _dm12 = put( GRP_Mnt , BEST12. );
   %DMNORMIP( _dm12 )
   if _dm12 = '5'  then do;
      _4_0 = -1;
      _4_1 = -1;
      _4_2 = -1;
   end;
   else if _dm12 = '3'  then do;
      _4_0 = 0;
      _4_1 = 1;
      _4_2 = 0;
   end;
   else if _dm12 = '4'  then do;
      _4_0 = 0;
      _4_1 = 0;
      _4_2 = 1;
   end;
   else if _dm12 = '2'  then do;
      _4_0 = 1;
      _4_1 = 0;
      _4_2 = 0;
   end;
   else do;
      _4_0 = .;
      _4_1 = .;
      _4_2 = .;
      substr(_warn_,2,1) = 'U';
      _DM_BAD = 1;
   end;
end;

*** Generate dummy variables for GRP_MntFishProducts ;
drop _5_0 _5_1 _5_2 ;
if missing( GRP_MntFishProducts ) then do;
   _5_0 = .;
   _5_1 = .;
   _5_2 = .;
   substr(_warn_,1,1) = 'M';
   _DM_BAD = 1;
end;
else do;
   length _dm12 $ 12; drop _dm12 ;
   _dm12 = put( GRP_MntFishProducts , BEST12. );
   %DMNORMIP( _dm12 )
   if _dm12 = '5'  then do;
      _5_0 = -1;
      _5_1 = -1;
      _5_2 = -1;
   end;
   else if _dm12 = '4'  then do;
      _5_0 = 0;
      _5_1 = 0;
      _5_2 = 1;
   end;
   else if _dm12 = '2'  then do;
      _5_0 = 1;
      _5_1 = 0;
      _5_2 = 0;
   end;
   else if _dm12 = '3'  then do;
      _5_0 = 0;
      _5_1 = 1;
      _5_2 = 0;
   end;
   else do;
      _5_0 = .;
      _5_1 = .;
      _5_2 = .;
      substr(_warn_,2,1) = 'U';
      _DM_BAD = 1;
   end;
end;

*** Generate dummy variables for GRP_MntGoldProds ;
drop _6_0 _6_1 _6_2 ;
if missing( GRP_MntGoldProds ) then do;
   _6_0 = .;
   _6_1 = .;
   _6_2 = .;
   substr(_warn_,1,1) = 'M';
   _DM_BAD = 1;
end;
else do;
   length _dm12 $ 12; drop _dm12 ;
   _dm12 = put( GRP_MntGoldProds , BEST12. );
   %DMNORMIP( _dm12 )
   if _dm12 = '5'  then do;
      _6_0 = -1;
      _6_1 = -1;
      _6_2 = -1;
   end;
   else if _dm12 = '4'  then do;
      _6_0 = 0;
      _6_1 = 0;
      _6_2 = 1;
   end;
   else if _dm12 = '3'  then do;
      _6_0 = 0;
      _6_1 = 1;
      _6_2 = 0;
   end;
   else if _dm12 = '2'  then do;
      _6_0 = 1;
      _6_1 = 0;
      _6_2 = 0;
   end;
   else do;
      _6_0 = .;
      _6_1 = .;
      _6_2 = .;
      substr(_warn_,2,1) = 'U';
      _DM_BAD = 1;
   end;
end;

*** Generate dummy variables for GRP_MntMeatProducts ;
drop _7_0 _7_1 _7_2 ;
if missing( GRP_MntMeatProducts ) then do;
   _7_0 = .;
   _7_1 = .;
   _7_2 = .;
   substr(_warn_,1,1) = 'M';
   _DM_BAD = 1;
end;
else do;
   length _dm12 $ 12; drop _dm12 ;
   _dm12 = put( GRP_MntMeatProducts , BEST12. );
   %DMNORMIP( _dm12 )
   if _dm12 = '5'  then do;
      _7_0 = -1;
      _7_1 = -1;
      _7_2 = -1;
   end;
   else if _dm12 = '4'  then do;
      _7_0 = 0;
      _7_1 = 0;
      _7_2 = 1;
   end;
   else if _dm12 = '3'  then do;
      _7_0 = 0;
      _7_1 = 1;
      _7_2 = 0;
   end;
   else if _dm12 = '2'  then do;
      _7_0 = 1;
      _7_1 = 0;
      _7_2 = 0;
   end;
   else do;
      _7_0 = .;
      _7_1 = .;
      _7_2 = .;
      substr(_warn_,2,1) = 'U';
      _DM_BAD = 1;
   end;
end;

*** Generate dummy variables for GRP_MntWines ;
drop _8_0 _8_1 _8_2 ;
if missing( GRP_MntWines ) then do;
   _8_0 = .;
   _8_1 = .;
   _8_2 = .;
   substr(_warn_,1,1) = 'M';
   _DM_BAD = 1;
end;
else do;
   length _dm12 $ 12; drop _dm12 ;
   _dm12 = put( GRP_MntWines , BEST12. );
   %DMNORMIP( _dm12 )
   if _dm12 = '5'  then do;
      _8_0 = -1;
      _8_1 = -1;
      _8_2 = -1;
   end;
   else if _dm12 = '3'  then do;
      _8_0 = 0;
      _8_1 = 1;
      _8_2 = 0;
   end;
   else if _dm12 = '4'  then do;
      _8_0 = 0;
      _8_1 = 0;
      _8_2 = 1;
   end;
   else if _dm12 = '2'  then do;
      _8_0 = 1;
      _8_1 = 0;
      _8_2 = 0;
   end;
   else do;
      _8_0 = .;
      _8_1 = .;
      _8_2 = .;
      substr(_warn_,2,1) = 'U';
      _DM_BAD = 1;
   end;
end;

*** Generate dummy variables for GRP_NumCatalogPurchases ;
drop _9_0 _9_1 ;
if missing( GRP_NumCatalogPurchases ) then do;
   _9_0 = .;
   _9_1 = .;
   substr(_warn_,1,1) = 'M';
   _DM_BAD = 1;
end;
else do;
   length _dm12 $ 12; drop _dm12 ;
   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
   %DMNORMIP( _dm12 )
   if _dm12 = '5'  then do;
      _9_0 = -1;
      _9_1 = -1;
   end;
   else if _dm12 = '3'  then do;
      _9_0 = 1;
      _9_1 = 0;
   end;
   else if _dm12 = '4'  then do;
      _9_0 = 0;
      _9_1 = 1;
   end;
   else do;
      _9_0 = .;
      _9_1 = .;
      substr(_warn_,2,1) = 'U';
      _DM_BAD = 1;
   end;
end;

*** Generate dummy variables for GRP_NumDistPurchases ;
drop _10_0 _10_1 _10_2 ;
if missing( GRP_NumDistPurchases ) then do;
   _10_0 = .;
   _10_1 = .;
   _10_2 = .;
   substr(_warn_,1,1) = 'M';
   _DM_BAD = 1;
end;
else do;
   length _dm12 $ 12; drop _dm12 ;
   _dm12 = put( GRP_NumDistPurchases , BEST12. );
   %DMNORMIP( _dm12 )
   if _dm12 = '5'  then do;
      _10_0 = -1;
      _10_1 = -1;
      _10_2 = -1;
   end;
   else if _dm12 = '4'  then do;
      _10_0 = 0;
      _10_1 = 0;
      _10_2 = 1;
   end;
   else if _dm12 = '3'  then do;
      _10_0 = 0;
      _10_1 = 1;
      _10_2 = 0;
   end;
   else if _dm12 = '2'  then do;
      _10_0 = 1;
      _10_1 = 0;
      _10_2 = 0;
   end;
   else do;
      _10_0 = .;
      _10_1 = .;
      _10_2 = .;
      substr(_warn_,2,1) = 'U';
      _DM_BAD = 1;
   end;
end;

*** Generate dummy variables for GRP_NumWebPurchases ;
drop _11_0 _11_1 _11_2 ;
if missing( GRP_NumWebPurchases ) then do;
   _11_0 = .;
   _11_1 = .;
   _11_2 = .;
   substr(_warn_,1,1) = 'M';
   _DM_BAD = 1;
end;
else do;
   length _dm12 $ 12; drop _dm12 ;
   _dm12 = put( GRP_NumWebPurchases , BEST12. );
   %DMNORMIP( _dm12 )
   if _dm12 = '5'  then do;
      _11_0 = -1;
      _11_1 = -1;
      _11_2 = -1;
   end;
   else if _dm12 = '4'  then do;
      _11_0 = 0;
      _11_1 = 0;
      _11_2 = 1;
   end;
   else if _dm12 = '3'  then do;
      _11_0 = 0;
      _11_1 = 1;
      _11_2 = 0;
   end;
   else if _dm12 = '2'  then do;
      _11_0 = 1;
      _11_1 = 0;
      _11_2 = 0;
   end;
   else do;
      _11_0 = .;
      _11_1 = .;
      _11_2 = .;
      substr(_warn_,2,1) = 'U';
      _DM_BAD = 1;
   end;
end;

*** Generate dummy variables for GRP_RFMstat ;
drop _12_0 _12_1 _12_2 ;
if missing( GRP_RFMstat ) then do;
   _12_0 = .;
   _12_1 = .;
   _12_2 = .;
   substr(_warn_,1,1) = 'M';
   _DM_BAD = 1;
end;
else do;
   length _dm12 $ 12; drop _dm12 ;
   _dm12 = put( GRP_RFMstat , BEST12. );
   %DMNORMIP( _dm12 )
   if _dm12 = '5'  then do;
      _12_0 = -1;
      _12_1 = -1;
      _12_2 = -1;
   end;
   else if _dm12 = '4'  then do;
      _12_0 = 0;
      _12_1 = 0;
      _12_2 = 1;
   end;
   else if _dm12 = '3'  then do;
      _12_0 = 0;
      _12_1 = 1;
      _12_2 = 0;
   end;
   else if _dm12 = '2'  then do;
      _12_0 = 1;
      _12_1 = 0;
      _12_2 = 0;
   end;
   else do;
      _12_0 = .;
      _12_1 = .;
      _12_2 = .;
      substr(_warn_,2,1) = 'U';
      _DM_BAD = 1;
   end;
end;

*** Generate dummy variables for GRP_RMntFrq ;
drop _13_0 _13_1 _13_2 ;
if missing( GRP_RMntFrq ) then do;
   _13_0 = .;
   _13_1 = .;
   _13_2 = .;
   substr(_warn_,1,1) = 'M';
   _DM_BAD = 1;
end;
else do;
   length _dm12 $ 12; drop _dm12 ;
   _dm12 = put( GRP_RMntFrq , BEST12. );
   %DMNORMIP( _dm12 )
   if _dm12 = '5'  then do;
      _13_0 = -1;
      _13_1 = -1;
      _13_2 = -1;
   end;
   else if _dm12 = '3'  then do;
      _13_0 = 0;
      _13_1 = 1;
      _13_2 = 0;
   end;
   else if _dm12 = '4'  then do;
      _13_0 = 0;
      _13_1 = 0;
      _13_2 = 1;
   end;
   else if _dm12 = '2'  then do;
      _13_0 = 1;
      _13_1 = 0;
      _13_2 = 0;
   end;
   else do;
      _13_0 = .;
      _13_1 = .;
      _13_2 = .;
      substr(_warn_,2,1) = 'U';
      _DM_BAD = 1;
   end;
end;

*** Generate dummy variables for GRP_Recency ;
drop _14_0 _14_1 _14_2 ;
if missing( GRP_Recency ) then do;
   _14_0 = .;
   _14_1 = .;
   _14_2 = .;
   substr(_warn_,1,1) = 'M';
   _DM_BAD = 1;
end;
else do;
   length _dm12 $ 12; drop _dm12 ;
   _dm12 = put( GRP_Recency , BEST12. );
   %DMNORMIP( _dm12 )
   if _dm12 = '2'  then do;
      _14_0 = 1;
      _14_1 = 0;
      _14_2 = 0;
   end;
   else if _dm12 = '3'  then do;
      _14_0 = 0;
      _14_1 = 1;
      _14_2 = 0;
   end;
   else if _dm12 = '4'  then do;
      _14_0 = 0;
      _14_1 = 0;
      _14_2 = 1;
   end;
   else if _dm12 = '5'  then do;
      _14_0 = -1;
      _14_1 = -1;
      _14_2 = -1;
   end;
   else do;
      _14_0 = .;
      _14_1 = .;
      _14_2 = .;
      substr(_warn_,2,1) = 'U';
      _DM_BAD = 1;
   end;
end;

*** If missing inputs, use averages;
if _DM_BAD > 0 then do;
   _P0 = 0.8348837209;
   _P1 = 0.1651162791;
   goto RULE3_2DR1;
end;

*** Compute Linear Predictor;
drop _TEMP;
drop _LP0;
_LP0 = 0;

***  Effect: GRP_AcceptedCmp5 ;
_TEMP = 1;
_LP0 = _LP0 + (     0.2755854906389) * _TEMP * _1_0;

***  Effect: GRP_Frq ;
_TEMP = 1;
_LP0 = _LP0 + (   -3.75810078867511) * _TEMP * _2_0;
_LP0 = _LP0 + (    0.54972535728544) * _TEMP * _2_1;
_LP0 = _LP0 + (     1.1432462397042) * _TEMP * _2_2;

***  Effect: GRP_Income ;
_TEMP = 1;
_LP0 = _LP0 + (   -1.97297373633573) * _TEMP * _3_0;
_LP0 = _LP0 + (   -0.67820578191593) * _TEMP * _3_1;
_LP0 = _LP0 + (    1.37979656554052) * _TEMP * _3_2;

***  Effect: GRP_Mnt ;
_TEMP = 1;
_LP0 = _LP0 + (    3.56520060916351) * _TEMP * _4_0;
_LP0 = _LP0 + (    0.27230485121635) * _TEMP * _4_1;
_LP0 = _LP0 + (   -1.78790448642515) * _TEMP * _4_2;

***  Effect: GRP_MntFishProducts ;
_TEMP = 1;
_LP0 = _LP0 + (   -0.72129392998676) * _TEMP * _5_0;
_LP0 = _LP0 + (    0.38499939670176) * _TEMP * _5_1;
_LP0 = _LP0 + (    0.22388001037485) * _TEMP * _5_2;

***  Effect: GRP_MntGoldProds ;
_TEMP = 1;
_LP0 = _LP0 + (    0.76717357691553) * _TEMP * _6_0;
_LP0 = _LP0 + (   -0.24937326232659) * _TEMP * _6_1;
_LP0 = _LP0 + (    0.11092888065087) * _TEMP * _6_2;

***  Effect: GRP_MntMeatProducts ;
_TEMP = 1;
_LP0 = _LP0 + (    2.39898778191823) * _TEMP * _7_0;
_LP0 = _LP0 + (    0.55195796238636) * _TEMP * _7_1;
_LP0 = _LP0 + (   -1.40436175575026) * _TEMP * _7_2;

***  Effect: GRP_MntWines ;
_TEMP = 1;
_LP0 = _LP0 + (    0.84803792934378) * _TEMP * _8_0;
_LP0 = _LP0 + (    0.20838403498632) * _TEMP * _8_1;
_LP0 = _LP0 + (   -0.45106764907277) * _TEMP * _8_2;

***  Effect: GRP_NumCatalogPurchases ;
_TEMP = 1;
_LP0 = _LP0 + (    1.39844808004489) * _TEMP * _9_0;
_LP0 = _LP0 + (   -0.32023677204533) * _TEMP * _9_1;

***  Effect: GRP_NumDistPurchases ;
_TEMP = 1;
_LP0 = _LP0 + (    9.48183440350088) * _TEMP * _10_0;
_LP0 = _LP0 + (   -3.69312594582071) * _TEMP * _10_1;
_LP0 = _LP0 + (   -2.42567033749322) * _TEMP * _10_2;

***  Effect: GRP_NumWebPurchases ;
_TEMP = 1;
_LP0 = _LP0 + (    0.73155492362896) * _TEMP * _11_0;
_LP0 = _LP0 + (    -0.0632363477256) * _TEMP * _11_1;
_LP0 = _LP0 + (   -0.23160884340405) * _TEMP * _11_2;

***  Effect: GRP_RFMstat ;
_TEMP = 1;
_LP0 = _LP0 + (    0.80547627121444) * _TEMP * _12_0;
_LP0 = _LP0 + (    0.18872433644203) * _TEMP * _12_1;
_LP0 = _LP0 + (   -0.00439389281149) * _TEMP * _12_2;

***  Effect: GRP_RMntFrq ;
_TEMP = 1;
_LP0 = _LP0 + (   -4.38345957326098) * _TEMP * _13_0;
_LP0 = _LP0 + (   -0.82877013686493) * _TEMP * _13_1;
_LP0 = _LP0 + (    2.87379405520898) * _TEMP * _13_2;

***  Effect: GRP_Recency ;
_TEMP = 1;
_LP0 = _LP0 + (   -0.84415144261954) * _TEMP * _14_0;
_LP0 = _LP0 + (   -0.06961662518501) * _TEMP * _14_1;
_LP0 = _LP0 + (    -0.4618611915042) * _TEMP * _14_2;

***  Effect: Year_Birth ;
_TEMP = Year_Birth ;
_LP0 = _LP0 + (    -0.0039991752783 * _TEMP);

*** Naive Posterior Probabilities;
drop _MAXP _IY _P0 _P1;
_TEMP =     14.2898298532565 + _LP0;
if (_TEMP < 0) then do;
   _TEMP = exp(_TEMP);
   _P0 = _TEMP / (1 + _TEMP);
end;
else _P0 = 1 / (1 + exp(-_TEMP));
_P1 = 1.0 - _P0;

RULE3_2DR1:


*** Posterior Probabilities and Predicted Level;
label P__bin1 = 'Predicted: _bin=1' ;
label P__bin0 = 'Predicted: _bin=0' ;
P__bin1 = _P0;
_MAXP = _P0;
_IY = 1;
P__bin0 = _P1;
if (_P1 >  _MAXP + 1E-8) then do;
   _MAXP = _P1;
   _IY = 2;
end;
I__bin = RULE3_2DRF[_IY];
U__bin = RULE3_2DRU[_IY];

*************************************;
***** end scoring code for regression;
*************************************;
*;
%DMNORMIP(I__bin);
if I__bin eq '1' then do;
I_DepVar = ("1");
%DMNORMCP(I_DepVar, I_DepVar);
P_DepVar1=P__bin1;
P_DepVar0 = 1-P__bin1;
end;
*;
*;
end;
*;
DROP P__bin1 P__bin0;
*------------------------------------------------------------*;
* Cleanup Model for DepVar * Null Model based on training frequencies;
*------------------------------------------------------------*;
%DMNORMIP(I__bin);
if I__bin ne '1' then do;
I_DepVar = ("1");
%DMNORMCP(I_DepVar, I_DepVar);
P_DepVar1 = 0.15122156697556;
P_DepVar0 = 0.84877843302443;
*;
end;
*;
drop I__bin U__bin;
