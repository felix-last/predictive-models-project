MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "28. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "16.25 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Training Log
Date:                28. April 2016
Time:                16.25 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O0TXSIGR 
"C:\\predictive-models-project\Workspaces\EMWS8\Rule3\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O0TXSIGR new;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOG 
"C:\\predictive-models-project\Workspaces\EMWS8\Rule3\EMLOG.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "28. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "16.25 Uhr" );
MPRINT(EM_DIAGRAM):   file _LOG;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                Lukas Fahr";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "Site:                70107571";
MPRINT(EM_DIAGRAM):   put "Platform:            X64_7PRO";
MPRINT(EM_DIAGRAM):   put "Maintenance Release: 9.03.01M2P081512";
MPRINT(EM_DIAGRAM):   put "EM Version:          12.1";
MPRINT(EM_DIAGRAM):   put "* ";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN 
"C:\\predictive-models-project\Workspaces\EMWS8\Rule3\EMTRAIN.log" encoding="UTF-8" NOBOM;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _LOG MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_LOGIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _LOGIN 
"C:\\predictive-models-project\Workspaces\EMWS8\Rule3\EMSCORE.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN 
"C:\\predictive-models-project\Workspaces\EMWS8\Rule3\EMREPORT.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    filename _LOG;
MPRINT(EM_DIAGRAM):    filename _OUT 
"C:\\predictive-models-project\Workspaces\EMWS8\Rule3\EMOUTPUT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "28. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "16.25 Uhr" );
MPRINT(EM_DIAGRAM):   file _OUT;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                Lukas Fahr";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN 
"C:\\predictive-models-project\Workspaces\EMWS8\Rule3\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _OUT MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_OUTIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN 
"C:\\predictive-models-project\Workspaces\EMWS8\Rule3\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN 
"C:\\predictive-models-project\Workspaces\EMWS8\Rule3\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    filename _OUT;
MPRINT(EM_DIAGRAM):    filename _emtool_ 
'C:\\predictive-models-project\Workspaces\EMWS8\Rule3\EMRUNSTATUS.xml' encoding="UTF-8" NOBOM;
604253     proc freq data=EMWS8.Rule3_VariableSet noprint;
MPRINT(EM_DIAGRAM):    proc freq data=EMWS8.Rule3_VariableSet noprint;
604254     table ROLE*LEVEL/out=WORK.Rule3META;
MPRINT(EM_DIAGRAM):   table ROLE*LEVEL/out=WORK.Rule3META;
604255     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 51 observations read from the data set EMWS8.RULE3_VARIABLESET.
NOTE: The data set WORK.RULE3META has 6 observations and 4 variables.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

604256     proc print data=WORK.Rule3META label noobs;
MPRINT(EM_DIAGRAM):   proc print data=WORK.Rule3META label noobs;
604257     var ROLE LEVEL COUNT;
MPRINT(EM_DIAGRAM):   var ROLE LEVEL COUNT;
604258     label ROLE = "%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel, NOQUOTE))" LEVEL =
604258   ! "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" COUNT =
604258   ! "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label ROLE = "Role" LEVEL = "Measurement Level" COUNT = "Frequency 
Count";
604259     title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
604260     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_varSummary_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Variable Summary";
MPRINT(EM_DIAGRAM):   run;
604261     run;

NOTE: There were 6 observations read from the data set WORK.RULE3META.
NOTE: The PROCEDURE PRINT printed page 588.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

604262     title10;
MPRINT(EM_DIAGRAM):   title10;
604263     %let EMNORLEN = %DMNORLEN;
MPRINT(EM_DIAGRAM):   
EMWS8.BINNING_TRAIN EMWS8.BINNING_TRAIN 
EMWS8.BINNING_TRAIN EMWS8.BINNING_TRAIN EMWS8 BINNING_TRAIN 
EMWS8.BINNING_TRAIN EMWS8.BINNING_TRAIN 
EMWS8.BINNING_TRAIN EMWS8.BINNING_TRAIN EMWS8 BINNING_TRAIN 
MPRINT(EM_DIAGRAM):    proc dmdb data=EMWS8.BINNING_TRAIN 
classout=WORK._DMDBCLASSTARGET(keep=NAME NRAW CRAW LEVEL FREQUENCY NMISSPERCENT);
MPRINT(EM_DIAGRAM):   class DepVar(DESC) ;
MPRINT(EM_DIAGRAM):   run;
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _INIT >> 
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL setMetaData >> 
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >> 
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL setMetaData >> 
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >> 
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _term >> 
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set WORK._DMDBCLASSTARGET;
MPRINT(EM_DIAGRAM):   where ^(NRAW eq . and CRAW eq '') and NAME="DepVar";
MPRINT(EM_DIAGRAM):   if _N_=1 then call symput('_newevent', strip(LEVEL));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK._DMDBCLASSTARGET out=_TEMPCLASS(keep=LEVEL FREQUENCY 
NMISSPERCENT rename=(LEVEL=DepVar));
MPRINT(EM_DIAGRAM):   by LEVEL;
MPRINT(EM_DIAGRAM):   where ^(NRAW eq . and CRAW eq '') and NAME="DepVar";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _TEMPCLASS;
MPRINT(EM_DIAGRAM):   set _TEMPCLASS;
MPRINT(EM_DIAGRAM):   NMISSPERCENT= NMISSPERCENT/100;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _sortedDecData;
MPRINT(EM_DIAGRAM):   set EMWS8.Rule3_DepVar_DD;
MPRINT(EM_DIAGRAM):   _levelorder_=_N_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_sortedDecdata;
MPRINT(EM_DIAGRAM):   by DepVar;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   merge _TEMPCLASS(in=_a) _sortedDecdata(in=_b);
MPRINT(EM_DIAGRAM):   by DepVar;
MPRINT(EM_DIAGRAM):   if (_a and ^_b) or (^_a and _b) then call symput('_emresetDec', '1');
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS8.Rule3_DepVar_DD;
MPRINT(EM_DIAGRAM):   set EMWS8.Rule3_DepVar_DD;
MPRINT(EM_DIAGRAM):   _levelorder_=_N_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Rule3_DepVar_DD;
MPRINT(EM_DIAGRAM):   by DepVar;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Rule3_DepVar_DD;
MPRINT(EM_DIAGRAM):   merge EMWS8.Rule3_DepVar_DD _TEMPCLASS(rename=(NMISSPERCENT=TRAINPRIOR 
FREQUENCY=COUNT));
MPRINT(EM_DIAGRAM):   by DepVar;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Rule3_DepVar_DD 
out=EMWS8.Rule3_DepVar_DD(drop=_levelorder_);
MPRINT(EM_DIAGRAM):   by _levelorder_;
MPRINT(EM_DIAGRAM):   run;
604310     data WORK.Rule3_EVENT(KEEP=VARIABLE LABEL LEVEL EVENT NUMLEVELS ORDER);
MPRINT(EM_DIAGRAM):    data WORK.Rule3_EVENT(KEEP=VARIABLE LABEL LEVEL EVENT NUMLEVELS ORDER);
604311     length ORDER $20;
MPRINT(EM_DIAGRAM):   length ORDER $20;
604312     label VARIABLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel,  NOQUOTE))"
604312   ! EVENT = "%sysfunc(sasmsg(sashelp.dmine, assmt_event_vlabel, NOQUOTE))" NUMLEVELS =
604312   ! "%sysfunc(sasmsg(sashelp.dmine, rpt_numcat_vlabel, NOQUOTE))" LEVEL =
604313        "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" ORDER =
604313   ! "%sysfunc(sasmsg(sashelp.dmine, meta_order_vlabel, NOQUOTE))" LABEL =
604313   ! "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label VARIABLE = "Target" EVENT = "Event" NUMLEVELS = "Number of Levels" 
LEVEL = "Measurement Level" ORDER = "Order" LABEL = "Label";
604314     set EMWS8.RULE3_DEPVAR_DM( where=(_TYPE_="TARGET"));
MPRINT(EM_DIAGRAM):   set EMWS8.RULE3_DEPVAR_DM( where=(_TYPE_="TARGET"));
604315     NumLevels=2;
MPRINT(EM_DIAGRAM):   NumLevels=2;
604316     select(upcase(ORDER));
MPRINT(EM_DIAGRAM):   select(upcase(ORDER));
604317     when('DESC') ORDER = 'Descending';
MPRINT(EM_DIAGRAM):   when('DESC') ORDER = 'Descending';
604318     when('ASC') ORDER = 'Ascending';
MPRINT(EM_DIAGRAM):   when('ASC') ORDER = 'Ascending';
604319     when('FMTDESC') ORDER = 'Formatted Descending';
MPRINT(EM_DIAGRAM):   when('FMTDESC') ORDER = 'Formatted Descending';
604320     when('FMTASC') ORDER = 'Formatted Ascending';
MPRINT(EM_DIAGRAM):   when('FMTASC') ORDER = 'Formatted Ascending';
604321     otherwise ORDER = 'Descending';
MPRINT(EM_DIAGRAM):   otherwise ORDER = 'Descending';
604322     end;
MPRINT(EM_DIAGRAM):   end;
604323     output;
MPRINT(EM_DIAGRAM):   output;
604324     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set EMWS8.RULE3_DEPVAR_DM.
      WHERE _TYPE_='TARGET';
NOTE: The data set WORK.RULE3_EVENT has 1 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

604325     title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
604326     proc print data=WORK.Rule3_EVENT noobs label;
MPRINT(EM_DIAGRAM):   proc print data=WORK.Rule3_EVENT noobs label;
604327     var VARIABLE EVENT LEVEL NUMLEVELS ORDER LABEL;
MPRINT(EM_DIAGRAM):   var VARIABLE EVENT LEVEL NUMLEVELS ORDER LABEL;
604328     title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
604329     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_modelEvent_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Model Events";
MPRINT(EM_DIAGRAM):   run;
604330     run;

NOTE: There were 1 observations read from the data set WORK.RULE3_EVENT.
NOTE: The PROCEDURE PRINT printed page 589.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

604331     title10;
MPRINT(EM_DIAGRAM):   title10;
"No decisions defined for target "DepVar"." 
604332     proc print data = EMWS8.Rule3_DepVar_DM noobs label;
MPRINT(EM_DIAGRAM):    proc print data = EMWS8.Rule3_DepVar_DM noobs label;
604333     var _type_ variable label;
MPRINT(EM_DIAGRAM):   var _type_ variable label;
604334     where _type_ ^in('MATRIX', 'DECISION', 'TRAINPRIOR', 'DATAPRIOR', 'DECPRIOR');
MPRINT(EM_DIAGRAM):   where _type_ ^in('MATRIX', 'DECISION', 'TRAINPRIOR', 'DATAPRIOR', 
'DECPRIOR');
604335     label _TYPE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_type_vlabel,     NOQUOTE))"
604335   ! VARIABLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel, NOQUOTE))" LABEL =
604335   ! "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _TYPE_ = "Type" VARIABLE = "Variable" LABEL = "Label";
604336     title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
604337     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_predDecVars_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Predicted and decision variables";
MPRINT(EM_DIAGRAM):   run;
604338     run;

NOTE: There were 7 observations read from the data set EMWS8.RULE3_DEPVAR_DM.
      WHERE _type_ not in ('DATAPRIOR', 'DECISION', 'DECPRIOR', 'MATRIX', 'TRAINPRIOR');
NOTE: The PROCEDURE PRINT printed page 590.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

604339     title10;
MPRINT(EM_DIAGRAM):   title10;
604340     data WORK.M2UWUMIX;
MPRINT(EM_DIAGRAM):    data WORK.M2UWUMIX;
604341     set WORK.M2UWUMIX;
MPRINT(EM_DIAGRAM):   set WORK.M2UWUMIX;
604342     where(use = 'Y' or (role = 'INPUT' and use = 'D'));
MPRINT(EM_DIAGRAM):   where(use = 'Y' or (role = 'INPUT' and use = 'D'));
604343     if (role='REJECTED') then role='INPUT';
MPRINT(EM_DIAGRAM):   if (role='REJECTED') then role='INPUT';
604344     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 19 observations read from the data set WORK.M2UWUMIX.
      WHERE (use='Y') or ((role='INPUT') and (use='D'));
NOTE: The data set WORK.M2UWUMIX has 19 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

604345     *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------* ;
604346     * EM: DMDBClass Macro ;
MPRINT(EM_DIAGRAM):   * EM: DMDBClass Macro ;
604347     *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
604348     %macro DMDBClass;
604349         DepVar(DESC) GRP_AcceptedCmp5(ASC) GRP_AcceptedCmpTotal(ASC) GRP_Frq(ASC)
604350        GRP_Income(ASC) GRP_Mnt(ASC) GRP_MntFishProducts(ASC) GRP_MntGoldProds(ASC)
604351        GRP_MntMeatProducts(ASC) GRP_MntSweetProducts(ASC) GRP_MntWines(ASC)
604352        GRP_NumCatalogPurchases(ASC) GRP_NumDistPurchases(ASC) GRP_NumWebPurchases(ASC)
604353        GRP_NumWebVisitsMonth(ASC) GRP_RFMstat(ASC) GRP_RMntFrq(ASC) GRP_Recency(ASC)
604354     %mend DMDBClass;
604355     *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
604356     * EM: DMDBVar Macro ;
MPRINT(EM_DIAGRAM):   * EM: DMDBVar Macro ;
604357     *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
604358     %macro DMDBVar;
604359         Year_Birth
604360     %mend DMDBVar;
604361     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
604362     * EM: Create DMDB;
MPRINT(EM_DIAGRAM):   * EM: Create DMDB;
604363     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
604364     proc dmdb batch data=EMWS8.BINNING_TRAIN
604365     dmdbcat=WORK.EM_DMDB
604366     maxlevel = 513
604367     ;
MPRINT(EM_DIAGRAM):   proc dmdb batch data=EMWS8.BINNING_TRAIN dmdbcat=WORK.EM_DMDB maxlevel = 
513 ;
MPRINT(EM_DIAGRAM):   class
604368     class %DMDBClass;
MPRINT(DMDBCLASS):   DepVar(DESC) GRP_AcceptedCmp5(ASC) GRP_AcceptedCmpTotal(ASC) GRP_Frq(ASC) 
GRP_Income(ASC) GRP_Mnt(ASC) GRP_MntFishProducts(ASC) GRP_MntGoldProds(ASC) 
GRP_MntMeatProducts(ASC) GRP_MntSweetProducts(ASC) GRP_MntWines(ASC) 
GRP_NumCatalogPurchases(ASC) GRP_NumDistPurchases(ASC) GRP_NumWebPurchases(ASC) 
GRP_NumWebVisitsMonth(ASC) GRP_RFMstat(ASC) GRP_RMntFrq(ASC) GRP_Recency(ASC)
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   var
604369     var %DMDBVar;
MPRINT(DMDBVAR):   Year_Birth
MPRINT(EM_DIAGRAM):  ;
604370     target
604371     DepVar
604372     ;
MPRINT(EM_DIAGRAM):   target DepVar ;
604373     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Records processed = 2374   Memory used = 511K.
NOTE: View EMWS8.BINNING_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
NOTE: There were 2374 observations read from the data set EMWS8.PART_TRAIN.
NOTE: There were 2374 observations read from the data set EMWS8.BINNING_TRAIN.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):   *--- end code ---*;
604374     quit;
604375     *--- end code ---*;

604376     data WORK.M2UWUMIX;
MPRINT(EM_DIAGRAM):    data WORK.M2UWUMIX;
604377     set WORK.M2UWUMIX end=eof;
MPRINT(EM_DIAGRAM):   set WORK.M2UWUMIX end=eof;
604378     output;
MPRINT(EM_DIAGRAM):   output;
604379     if eof then do;
MPRINT(EM_DIAGRAM):   if eof then do;
604380     NAME="";
MPRINT(EM_DIAGRAM):   NAME="";
604381     ROLE="COST";
MPRINT(EM_DIAGRAM):   ROLE="COST";
604382     LEVEL="INTERVAL";
MPRINT(EM_DIAGRAM):   LEVEL="INTERVAL";
604383     TYPE="N";
MPRINT(EM_DIAGRAM):   TYPE="N";
604384     output;
MPRINT(EM_DIAGRAM):   output;
604385     end;
MPRINT(EM_DIAGRAM):   end;
604386     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 19 observations read from the data set WORK.M2UWUMIX.
NOTE: The data set WORK.M2UWUMIX has 20 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

NOTE: There were 2 observations read from the data set EMWS8.RULE3_DEPVAR_DD.
NOTE: The data set WORK.DEPVAR has 2 observations and 7 variables.
604387     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
604388     * Rule3: Create decision matrix;
MPRINT(EM_DIAGRAM):   * Rule3: Create decision matrix;
604389     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
604390     data WORK.DepVar;
MPRINT(EM_DIAGRAM):   data WORK.DepVar;
604391       length   DepVar                           $  32
604392                COUNT                                8
604393                DATAPRIOR                            8
604394                TRAINPRIOR                           8
604395                DECPRIOR                             8
604396                DECISION1                            8
604397                DECISION2                            8
604398                ;
MPRINT(EM_DIAGRAM):   length DepVar $ 32 COUNT 8 DATAPRIOR 8 TRAINPRIOR 8 DECPRIOR 8 DECISION1 
8 DECISION2 8 ;
604399     
604400       label    COUNT="Level Counts"
604401                DATAPRIOR="Data Proportions"
604402                TRAINPRIOR="Training Proportions"
604403                DECPRIOR="Decision Priors"
604404                DECISION1="1"
604405                DECISION2="0"
604406                ;
MPRINT(EM_DIAGRAM):   label COUNT= "Level Counts" DATAPRIOR= "Data Proportions" TRAINPRIOR= 
"Training Proportions" DECPRIOR= "Decision Priors" DECISION1= "1" DECISION2= "0" ;
604407       format   COUNT 10.
604408                ;
MPRINT(EM_DIAGRAM):   format COUNT 10. ;
604409     DepVar="1"; COUNT=359; DATAPRIOR=0.151221567; TRAINPRIOR=0.15122156697556;
604409   ! DECPRIOR=.; DECISION1=1; DECISION2=0;
MPRINT(EM_DIAGRAM):   DepVar="1";
MPRINT(EM_DIAGRAM):   COUNT=359;
MPRINT(EM_DIAGRAM):   DATAPRIOR=0.151221567;
MPRINT(EM_DIAGRAM):   TRAINPRIOR=0.15122156697556;
MPRINT(EM_DIAGRAM):   DECPRIOR=.;
MPRINT(EM_DIAGRAM):   DECISION1=1;
MPRINT(EM_DIAGRAM):   DECISION2=0;
604410     output;
MPRINT(EM_DIAGRAM):   output;
604411     DepVar="0"; COUNT=2015; DATAPRIOR=0.848778433; TRAINPRIOR=0.84877843302443;
604411   ! DECPRIOR=.; DECISION1=0; DECISION2=1;
MPRINT(EM_DIAGRAM):   DepVar="0";
MPRINT(EM_DIAGRAM):   COUNT=2015;
MPRINT(EM_DIAGRAM):   DATAPRIOR=0.848778433;
MPRINT(EM_DIAGRAM):   TRAINPRIOR=0.84877843302443;
MPRINT(EM_DIAGRAM):   DECPRIOR=.;
MPRINT(EM_DIAGRAM):   DECISION1=0;
MPRINT(EM_DIAGRAM):   DECISION2=1;
604412     output;
MPRINT(EM_DIAGRAM):   output;
604413     ;
MPRINT(EM_DIAGRAM):   ;
604414     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK.DEPVAR has 2 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

604415     proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
604416     modify DepVar(type=PROFIT label=DepVar);
MPRINT(EM_DIAGRAM):   modify DepVar(type=PROFIT label= DepVar);
MPRINT(EM_DIAGRAM):   label DECISION1= '1';
MPRINT(EM_DIAGRAM):   label DECISION2= '0';
MPRINT(EM_DIAGRAM):   run;
604417     label DECISION1= '1';
604418     label DECISION2= '0';
604419     run;

NOTE: MODIFY was successful for WORK.DEPVAR.DATA.
604420     quit;
MPRINT(EM_DIAGRAM):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * Rule3: DMDBClass Macro ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
604421     *------------------------------------------------------------* ;
604422     * Rule3: DMDBClass Macro ;
604423     *------------------------------------------------------------* ;
604424     %macro DMDBClass;
604425         DepVar(DESC) GRP_AcceptedCmp5(ASC) GRP_AcceptedCmpTotal(ASC) GRP_Frq(ASC)
604426        GRP_Income(ASC) GRP_Mnt(ASC) GRP_MntFishProducts(ASC) GRP_MntGoldProds(ASC)
604427        GRP_MntMeatProducts(ASC) GRP_MntSweetProducts(ASC) GRP_MntWines(ASC)
604428        GRP_NumCatalogPurchases(ASC) GRP_NumDistPurchases(ASC) GRP_NumWebPurchases(ASC)
604429        GRP_NumWebVisitsMonth(ASC) GRP_RFMstat(ASC) GRP_RMntFrq(ASC) GRP_Recency(ASC)
604430     %mend DMDBClass;
604431     *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
604432     * Rule3: DMDBVar Macro ;
MPRINT(EM_DIAGRAM):   * Rule3: DMDBVar Macro ;
604433     *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
604434     %macro DMDBVar;
604435         Year_Birth
604436     %mend DMDBVar;
604437     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
604438     * Rule3: Create DMDB;
MPRINT(EM_DIAGRAM):   * Rule3: Create DMDB;
604439     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
604440     proc dmdb batch data=EMWS8.BINNING_TRAIN
604441     dmdbcat=WORK.Rule3_DMDB
604442     maxlevel = 513
604443     ;
MPRINT(EM_DIAGRAM):   proc dmdb batch data=EMWS8.BINNING_TRAIN dmdbcat=WORK.Rule3_DMDB 
maxlevel = 513 ;
MPRINT(EM_DIAGRAM):   class
604444     class %DMDBClass;
MPRINT(DMDBCLASS):   DepVar(DESC) GRP_AcceptedCmp5(ASC) GRP_AcceptedCmpTotal(ASC) GRP_Frq(ASC) 
GRP_Income(ASC) GRP_Mnt(ASC) GRP_MntFishProducts(ASC) GRP_MntGoldProds(ASC) 
GRP_MntMeatProducts(ASC) GRP_MntSweetProducts(ASC) GRP_MntWines(ASC) 
GRP_NumCatalogPurchases(ASC) GRP_NumDistPurchases(ASC) GRP_NumWebPurchases(ASC) 
GRP_NumWebVisitsMonth(ASC) GRP_RFMstat(ASC) GRP_RMntFrq(ASC) GRP_Recency(ASC)
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   var
604445     var %DMDBVar;
MPRINT(DMDBVAR):   Year_Birth
MPRINT(EM_DIAGRAM):  ;
604446     target
604447     DepVar
604448     ;
MPRINT(EM_DIAGRAM):   target DepVar ;
604449     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Records processed = 2374   Memory used = 511K.
NOTE: View EMWS8.BINNING_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
NOTE: There were 2374 observations read from the data set EMWS8.PART_TRAIN.
NOTE: There were 2374 observations read from the data set EMWS8.BINNING_TRAIN.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):   *--- end code ---*;
604450     quit;
604451     *--- end code ---*;

604452     data WORK.M2CBN33G;
MPRINT(EM_DIAGRAM):    data WORK.M2CBN33G;
604453     set WORK.M2CBN33G;
MPRINT(EM_DIAGRAM):   set WORK.M2CBN33G;
604454     if NAME^='DepVar' then delete;
MPRINT(EM_DIAGRAM):   if NAME^='DepVar' then delete;
604455     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 20 observations read from the data set WORK.M2CBN33G.
NOTE: The data set WORK.M2CBN33G has 1 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

604456     *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------* ;
604457     * EM: DMDBClass Macro ;
MPRINT(EM_DIAGRAM):   * EM: DMDBClass Macro ;
604458     *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
604459     %macro DMDBClass;
604460         DepVar(DESC)
604461     %mend DMDBClass;
604462     *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
604463     * EM: DMDBVar Macro ;
MPRINT(EM_DIAGRAM):   * EM: DMDBVar Macro ;
604464     *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
604465     %macro DMDBVar;
604466     
604467     %mend DMDBVar;
604468     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
604469     * EM: Create DMDB;
MPRINT(EM_DIAGRAM):   * EM: Create DMDB;
604470     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
604471     proc dmdb batch data=EMWS8.BINNING_TRAIN
604472     dmdbcat=WORK.EM_DMDB
604473     maxlevel = 513
604474     ;
MPRINT(EM_DIAGRAM):   proc dmdb batch data=EMWS8.BINNING_TRAIN dmdbcat=WORK.EM_DMDB maxlevel = 
513 ;
MPRINT(EM_DIAGRAM):   class
604475     class %DMDBClass;
MPRINT(DMDBCLASS):   DepVar(DESC)
MPRINT(EM_DIAGRAM):  ;
604476     target
604477     DepVar
604478     ;
MPRINT(EM_DIAGRAM):   target DepVar ;
604479     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Records processed = 2374   Memory used = 511K.
NOTE: View EMWS8.BINNING_TRAIN.VIEW used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      
NOTE: There were 2374 observations read from the data set EMWS8.PART_TRAIN.
NOTE: There were 2374 observations read from the data set EMWS8.BINNING_TRAIN.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):   *--- end code ---*;
604480     quit;
604481     *--- end code ---*;

604482     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
604483     * Rule Induction Training;
MPRINT(EM_DIAGRAM):   * Rule Induction Training;
604484     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;

604485     * Get counts for DepVar;
MPRINT(EM_DIAGRAM):    * Get counts for DepVar;
604486     ;
MPRINT(EM_DIAGRAM):   ;
604487     data _scr(keep= _level_ DepVar);
MPRINT(EM_DIAGRAM):   data _scr(keep= _level_ DepVar);
604488     set EMWS8.BINNING_TRAIN;
MPRINT(EM_DIAGRAM):   set EMWS8.BINNING_TRAIN;
604489     length _level_ $16;
MPRINT(EM_DIAGRAM):   length _level_ $16;
604490     label _level_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_rulelevel_vlabel, NOQUOTE,
604490   ! DepVar))";
MPRINT(EM_DIAGRAM):   label _level_ = "DepVar";
604491     _tmp=putn(DepVar, 'best.');
MPRINT(EM_DIAGRAM):   _tmp=putn(DepVar, 'best.');
604492     %DMNORMCP(_tmp, _level_);
MPRINT(DMNORMCP):   _level_=dmnorm(_tmp,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
604493     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: View EMWS8.BINNING_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
NOTE: There were 2374 observations read from the data set EMWS8.PART_TRAIN.
NOTE: There were 2374 observations read from the data set EMWS8.BINNING_TRAIN.
NOTE: The data set WORK._SCR has 2374 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

604494     proc freq data=_scr noprint;
MPRINT(EM_DIAGRAM):   proc freq data=_scr noprint;
604495     table _level_ / out=_count;
MPRINT(EM_DIAGRAM):   table _level_ / out=_count;
604496     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2374 observations read from the data set WORK._SCR.
NOTE: The data set WORK._COUNT has 2 observations and 3 variables.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

604497     * Get Normalized counts for DepVar;
MPRINT(EM_DIAGRAM):    * Get Normalized counts for DepVar;
604498     ;
MPRINT(EM_DIAGRAM):   ;
604499     data _scr(keep= _level_ DepVar);
MPRINT(EM_DIAGRAM):   data _scr(keep= _level_ DepVar);
604500     set EMWS8.BINNING_VALIDATE;
MPRINT(EM_DIAGRAM):   set EMWS8.BINNING_VALIDATE;
604501     length _level_ $16;
MPRINT(EM_DIAGRAM):   length _level_ $16;
604502     label _level_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_rulelevel_vlabel, NOQUOTE,
604502   ! DepVar))";
MPRINT(EM_DIAGRAM):   label _level_ = "DepVar";
604503     _tmp = putn(DepVar, 'best.');
MPRINT(EM_DIAGRAM):   _tmp = putn(DepVar, 'best.');
604504     %DMNORMCP(_tmp, _level_);
MPRINT(DMNORMCP):   _level_=dmnorm(_tmp,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
604505     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: View EMWS8.BINNING_VALIDATE.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: There were 1018 observations read from the data set EMWS8.BINNING_VALIDATE.
NOTE: The data set WORK._SCR has 1018 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

604506     proc freq data=_scr noprint;
MPRINT(EM_DIAGRAM):   proc freq data=_scr noprint;
604507     table _level_ / out= _vcount;
MPRINT(EM_DIAGRAM):   table _level_ / out= _vcount;
604508     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1018 observations read from the data set WORK._SCR.
NOTE: The data set WORK._VCOUNT has 2 observations and 3 variables.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

604509     data _vcount;
MPRINT(EM_DIAGRAM):    data _vcount;
604510     set _vcount;
MPRINT(EM_DIAGRAM):   set _vcount;
604511     label count = "%sysfunc(sasmsg(sashelp.dmine, rpt_validcount_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label count = "Valid Count";
604512     label percent = "%sysfunc(sasmsg(sashelp.dmine, rpt_validpercent_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label percent = "Valid Percent";
604513     rename count = vcount;
MPRINT(EM_DIAGRAM):   rename count = vcount;
604514     rename percent = vpercent;
MPRINT(EM_DIAGRAM):   rename percent = vpercent;
604515     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2 observations read from the data set WORK._VCOUNT.
NOTE: The data set WORK._VCOUNT has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

604516     data _count;
MPRINT(EM_DIAGRAM):   data _count;
604517     merge _count _vcount;
MPRINT(EM_DIAGRAM):   merge _count _vcount;
604518     by _level_;
MPRINT(EM_DIAGRAM):   by _level_;
604519     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2 observations read from the data set WORK._COUNT.
NOTE: There were 2 observations read from the data set WORK._VCOUNT.
NOTE: The data set WORK._COUNT has 2 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

604520     data _count;
MPRINT(EM_DIAGRAM):    data _count;
604521     set _count;
MPRINT(EM_DIAGRAM):   set _count;
604522     label count = "%sysfunc(sasmsg(sashelp.dmine, rpt_traincount_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label count = "Train Count";
604523     label percent = "%sysfunc(sasmsg(sashelp.dmine, rpt_trainpercent_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label percent = "Train Percent";
604524     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2 observations read from the data set WORK._COUNT.
NOTE: The data set WORK._COUNT has 2 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

604525     proc sort data=_count;
MPRINT(EM_DIAGRAM):   proc sort data=_count;
604526     by DESCENDING count;
MPRINT(EM_DIAGRAM):   by DESCENDING count;
604527     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2 observations read from the data set WORK._COUNT.
NOTE: The data set WORK._COUNT has 2 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   *;
604528     *;
604529     title9 "%sysfunc(sasmsg(sashelp.dmine, rpt_tarfreq_title, NOQUOTE, DepVar))";
MPRINT(EM_DIAGRAM):   title9 "Target=DepVar: Frequencies";
MPRINT(EM_DIAGRAM):   *;
604530     *;
604531     proc print data=_count noobs label;
MPRINT(EM_DIAGRAM):   proc print data=_count noobs label;
604532     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2 observations read from the data set WORK._COUNT.
NOTE: The PROCEDURE PRINT printed page 591.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

604533     title9;
MPRINT(EM_DIAGRAM):   title9;
604534     data WORK.M0DAV4VH;
MPRINT(EM_DIAGRAM):    data WORK.M0DAV4VH;
604535     set WORK.M0DAV4VH;
MPRINT(EM_DIAGRAM):   set WORK.M0DAV4VH;
604536     if NAME^='DepVar' then delete;
MPRINT(EM_DIAGRAM):   if NAME^='DepVar' then delete;
604537     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 20 observations read from the data set WORK.M0DAV4VH.
NOTE: The data set WORK.M0DAV4VH has 1 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

604538     *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------* ;
604539     * EM: DMDBClass Macro ;
MPRINT(EM_DIAGRAM):   * EM: DMDBClass Macro ;
604540     *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
604541     %macro DMDBClass;
604542         DepVar(DESC)
604543     %mend DMDBClass;
604544     *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
604545     * EM: DMDBVar Macro ;
MPRINT(EM_DIAGRAM):   * EM: DMDBVar Macro ;
604546     *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
604547     %macro DMDBVar;
604548     
604549     %mend DMDBVar;
604550     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
604551     * EM: Create DMDB;
MPRINT(EM_DIAGRAM):   * EM: Create DMDB;
604552     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
604553     proc dmdb batch data=EMWS8.BINNING_TRAIN
604554     dmdbcat=WORK.EM_DMDB
604555     maxlevel = 513
604556     ;
MPRINT(EM_DIAGRAM):   proc dmdb batch data=EMWS8.BINNING_TRAIN dmdbcat=WORK.EM_DMDB maxlevel = 
513 ;
MPRINT(EM_DIAGRAM):   class
604557     class %DMDBClass;
MPRINT(DMDBCLASS):   DepVar(DESC)
MPRINT(EM_DIAGRAM):  ;
604558     target
604559     DepVar
604560     ;
MPRINT(EM_DIAGRAM):   target DepVar ;
604561     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Records processed = 2374   Memory used = 511K.
NOTE: View EMWS8.BINNING_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
NOTE: There were 2374 observations read from the data set EMWS8.PART_TRAIN.
NOTE: There were 2374 observations read from the data set EMWS8.BINNING_TRAIN.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):   *--- end code ---*;
604562     quit;
604563     *--- end code ---*;

604564     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
604565     * Rip Model 1;
MPRINT(EM_DIAGRAM):   * Rip Model 1;
604566     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
604567     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
604568     * TREE MODEL DepVar BINARY RIP1;
MPRINT(EM_DIAGRAM):   * TREE MODEL DepVar BINARY RIP1;
604569     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;

MPRINT(EM_DIAGRAM):   reset noprint;
MPRINT(EM_DIAGRAM):   select count(*) into :_tmpnobs from EMWS8.BINNING_TRAIN;
NOTE: View EMWS8.BINNING_TRAIN.VIEW used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      
NOTE: There were 2374 observations read from the data set EMWS8.PART_TRAIN.
MPRINT(EM_DIAGRAM):   quit;
604570     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
604571     * Rule3: Create decision matrix;
MPRINT(EM_DIAGRAM):   * Rule3: Create decision matrix;
604572     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
604573     *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
604574     * Rule3: Tree Variables Macro ;
MPRINT(EM_DIAGRAM):   * Rule3: Tree Variables Macro ;
604575     *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
604576     %macro EM_TREEVARS;
604577         GRP_AcceptedCmp5 GRP_AcceptedCmpTotal GRP_Frq GRP_Income GRP_Mnt
604578        GRP_MntFishProducts GRP_MntGoldProds GRP_MntMeatProducts GRP_MntSweetProducts
604579        GRP_MntWines GRP_NumCatalogPurchases GRP_NumDistPurchases GRP_NumWebPurchases
604580        GRP_NumWebVisitsMonth GRP_RFMstat GRP_RMntFrq GRP_Recency Year_Birth
604581     %mend EM_TREEVARS;
604582     *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
604583     * Rule3: Tree Targets Macro ;
MPRINT(EM_DIAGRAM):   * Rule3: Tree Targets Macro ;
604584     *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
604585     %macro EM_TREETARGETS;
604586         DepVar
604587     %mend EM_TREETARGETS;
604588     data WORK.EM_Rule3 / view=WORK.EM_Rule3;
MPRINT(EM_DIAGRAM):   data WORK.EM_Rule3 / view=WORK.EM_Rule3;
604589     set
604589   ! EMWS8.BINNING_TRAIN(keep=%EM_TREEVARS %EM_TREETARGETS);
MPRINT(EM_DIAGRAM):   set EMWS8.BINNING_TRAIN(keep
MPRINT(EM_DIAGRAM):  =GRP_AcceptedCmp5 GRP_AcceptedCmpTotal GRP_Frq GRP_Income GRP_Mnt 
GRP_MntFishProducts GRP_MntGoldProds GRP_MntMeatProducts GRP_MntSweetProducts GRP_MntWines 
GRP_NumCatalogPurchases GRP_NumDistPurchases GRP_NumWebPurchases GRP_NumWebVisitsMonth 
GRP_RFMstat GRP_RMntFrq GRP_Recency Year_Birth DepVar);
604590     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: DATA STEP view saved on file WORK.EM_RULE3.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.BINNING_TRAIN.VIEW used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * Rule3: Interval Inputs Macro ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
604591     *------------------------------------------------------------* ;
604592     * Rule3: Interval Inputs Macro ;
604593     *------------------------------------------------------------* ;
604594     %macro INTINPUTS;
604595         Year_Birth
604596     %mend INTINPUTS;
604597     *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
604598     * Rule3: Binary and Nominal Inputs Macro ;
MPRINT(EM_DIAGRAM):   * Rule3: Binary and Nominal Inputs Macro ;
604599     *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
604600     %macro NOMINPUTS;
604601         GRP_AcceptedCmp5 GRP_AcceptedCmpTotal GRP_Frq GRP_Income GRP_Mnt
604602        GRP_MntFishProducts GRP_MntGoldProds GRP_MntMeatProducts GRP_MntSweetProducts
604603        GRP_MntWines GRP_NumCatalogPurchases GRP_NumDistPurchases GRP_NumWebPurchases
604604        GRP_NumWebVisitsMonth GRP_RFMstat GRP_RMntFrq GRP_Recency
604605     %mend NOMINPUTS;
604606     *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
604607     * Rule3: Ordinal Inputs Macro ;
MPRINT(EM_DIAGRAM):   * Rule3: Ordinal Inputs Macro ;
604608     *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
604609     %macro ORDINPUTS;
604610     
604611     %mend ORDINPUTS;
604612     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
604613     * Rule3: Run ARBOR procedure;
MPRINT(EM_DIAGRAM):   * Rule3: Run ARBOR procedure;
604614     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;

604615     proc arbor data=WORK.EM_Rule3
604616     Leafsize=50
604617     Mincatsize = 5
604618     Maxdepth=4
604619     Missing=USEINSEARCH
604620     ;
MPRINT(EM_DIAGRAM):    proc arbor data=WORK.EM_Rule3 Leafsize=50 Mincatsize = 5 Maxdepth=4 
Missing=USEINSEARCH ;
604621     ;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):   input
604622     input %INTINPUTS
MPRINT(INTINPUTS):   Year_Birth
604623     / level = interval;
MPRINT(EM_DIAGRAM):   / level = interval;
MPRINT(EM_DIAGRAM):   input
604624     input %NOMINPUTS
MPRINT(NOMINPUTS):   GRP_AcceptedCmp5 GRP_AcceptedCmpTotal GRP_Frq GRP_Income GRP_Mnt 
GRP_MntFishProducts GRP_MntGoldProds GRP_MntMeatProducts GRP_MntSweetProducts GRP_MntWines 
GRP_NumCatalogPurchases GRP_NumDistPurchases GRP_NumWebPurchases GRP_NumWebVisitsMonth 
GRP_RFMstat GRP_RMntFrq GRP_Recency
604625     / level=nominal;
MPRINT(EM_DIAGRAM):   / level=nominal;
604626     target DepVar / level=BINARY
604627     Criterion=GINI
604628     ;
MPRINT(EM_DIAGRAM):   target DepVar / level=BINARY Criterion=GINI ;
604629     ;
MPRINT(EM_DIAGRAM):   ;
604630     Performance DISK
604631     ;
MPRINT(EM_DIAGRAM):   Performance DISK ;
NOTE: View EMWS8.BINNING_VALIDATE.VIEW used (Total process time):
      real time           0.21 seconds
      cpu time            0.21 seconds
      
604632     Assess
604633     Validata=EMWS8.BINNING_VALIDATE
604634     measure=ASE
604635     ;
MPRINT(EM_DIAGRAM):   Assess Validata=EMWS8.BINNING_VALIDATE measure=ASE ;
NOTE: 1442412 kilobytes of physical memory.
NOTE: Will use 2374 out of 2374 training cases.
NOTE: Using memory pool with 100745216 bytes.
NOTE: Passed training data 8 times.
NOTE: Training used 1135944 bytes of work memory.
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: The subtree sequence contains 13 subtrees. The largest has 25 nodes and 13 leaves.
NOTE: Using subtree with 17 nodes and 9 leaves.
604636     MAKEMACRO NLEAVES=nleaves;
MPRINT(EM_DIAGRAM):   MAKEMACRO NLEAVES=nleaves;
NOTE: Created macro variable NLEAVES equal to 9.
604637     save
604638     MODEL=WORK.OUTTREE_TREE_3P7F1LK
604639     SEQUENCE=WORK.OUTSEQ_TREE_3P7F1LK
604640     IMPORTANCE=WORK.OUTIMPORT_TREE_3P7F1LK
604641     NODESTAT=WORK.OUTNODES_TREE_3P7F1LK
604642     SUMMARY=WORK.OUTSUMMARY_TREE_3P7F1LK
604643     STATSBYNODE=WORK.OUTSTATS_TREE_3P7F1LK
604644     Pathlistnonmissing = WORK.OUTPATH_TREE_3P7F1LK
604645     Rules = WORK.OUTRULES_TREE_3P7F1LK
604646     ;
MPRINT(EM_DIAGRAM):   save MODEL=WORK.OUTTREE_TREE_3P7F1LK SEQUENCE=WORK.OUTSEQ_TREE_3P7F1LK 
IMPORTANCE=WORK.OUTIMPORT_TREE_3P7F1LK NODESTAT=WORK.OUTNODES_TREE_3P7F1LK 
SUMMARY=WORK.OUTSUMMARY_TREE_3P7F1LK STATSBYNODE=WORK.OUTSTATS_TREE_3P7F1LK Pathlistnonmissing 
= WORK.OUTPATH_TREE_3P7F1LK Rules = WORK.OUTRULES_TREE_3P7F1LK ;
NOTE: The data set WORK.OUTIMPORT_TREE_3P7F1LK has 18 observations and 6 variables.
NOTE: The data set WORK.OUTTREE_TREE_3P7F1LK has 1078 observations and 4 variables.
NOTE: The data set WORK.OUTNODES_TREE_3P7F1LK has 17 observations and 24 variables.
NOTE: The data set WORK.OUTPATH_TREE_3P7F1LK has 126 observations and 7 variables.
NOTE: The data set WORK.OUTRULES_TREE_3P7F1LK has 438 observations and 6 variables.
NOTE: The data set WORK.OUTSEQ_TREE_3P7F1LK has 13 observations and 20 variables.
NOTE: The data set WORK.OUTSTATS_TREE_3P7F1LK has 119 observations and 5 variables.
NOTE: The data set WORK.OUTSUMMARY_TREE_3P7F1LK has 24 observations and 6 variables.
604647     code file="C:\Users\LUKASF~1\AppData\Local\Temp\SAS Temporary
604647   ! Files\_TD115000_WN7LF-LEAVE_\Prc2\RIP1.sas"
604648     group=Rule3
604649     ;
MPRINT(EM_DIAGRAM):   code file="C:\Users\LUKASF~1\AppData\Local\Temp\SAS Temporary 
Files\_TD115000_WN7LF-LEAVE_\Prc2\RIP1.sas" group=Rule3 ;
NOTE: External file C:\Users\LUKASF~1\AppData\Local\Temp\SAS Temporary 
      Files\_TD115000_WN7LF-LEAVE_\Prc2\RIP1.sas opened.
604650     code file="C:\Users\LUKASF~1\AppData\Local\Temp\SAS Temporary
604650   ! Files\_TD115000_WN7LF-LEAVE_\Prc2\RIP1_res.sas"
604651     group=Rule3
604652     residual
604653     ;
MPRINT(EM_DIAGRAM):   code file="C:\Users\LUKASF~1\AppData\Local\Temp\SAS Temporary 
Files\_TD115000_WN7LF-LEAVE_\Prc2\RIP1_res.sas" group=Rule3 residual ;
NOTE: External file C:\Users\LUKASF~1\AppData\Local\Temp\SAS Temporary 
      Files\_TD115000_WN7LF-LEAVE_\Prc2\RIP1_res.sas opened.
NOTE: View EMWS8.BINNING_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
604654     score data=EMWS8.BINNING_TRAIN out=_ptrain
604655     ;
MPRINT(EM_DIAGRAM):   score data=EMWS8.BINNING_TRAIN out=_ptrain ;
NOTE: There were 2374 observations read from the data set EMWS8.PART_TRAIN.
NOTE: The data set WORK._PTRAIN has 2374 observations and 76 variables.
NOTE: View EMWS8.BINNING_VALIDATE.VIEW used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      
604656     score data=EMWS8.BINNING_VALIDATE out=_pvalid
604657     ;
MPRINT(EM_DIAGRAM):   score data=EMWS8.BINNING_VALIDATE out=_pvalid ;
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: The data set WORK._PVALID has 1018 observations and 76 variables.
604658     run;
MPRINT(EM_DIAGRAM):   run;

604659     quit;
MPRINT(EM_DIAGRAM):   quit;

NOTE: There were 2374 observations read from the data set EMWS8.PART_TRAIN.
NOTE: View WORK.EM_RULE3.VIEW used (Total process time):
      real time           0.35 seconds
      cpu time            0.34 seconds
      
NOTE: There were 2374 observations read from the data set EMWS8.BINNING_TRAIN.
NOTE: There were 2374 observations read from the data set WORK.EM_RULE3.
NOTE: The data set WORK._NAMEDAT has 2 observations and 5 variables.
NOTE: PROCEDURE ARBOR used (Total process time):
      real time           0.37 seconds
      cpu time            0.35 seconds
      

604660     data WORK.OUTIMPORT_TREE_3P7F1LK;
MPRINT(EM_DIAGRAM):    data WORK.OUTIMPORT_TREE_3P7F1LK;
604661     set WORK.OUTIMPORT_TREE_3P7F1LK;
MPRINT(EM_DIAGRAM):   set WORK.OUTIMPORT_TREE_3P7F1LK;
604662     label NAME = "%sysfunc(sasmsg(sashelp.dmine, meta_name_vlabel, noquote))" LABEL =
604662   ! "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, noquote))" NRULES =
604662   ! "%sysfunc(sasmsg(sashelp.dmine, rpt_nrules_vlabel, noquote))" IMPORTANCE =
604663        "%sysfunc(sasmsg(sashelp.dmine, rpt_importance_vlabel, noquote))" NSURROGATES =
604663   ! "%sysfunc(sasmsg(sashelp.dmine, rpt_nsurrogates_vlabel, noquote))"
604664     VIMPORTANCE = "%sysfunc(sasmsg(sashelp.dmine, rpt_vimportance_vlabel, noquote))"
604664   ! RATIO = "%sysfunc(sasmsg(sashelp.dmine, rpt_ratio_vlabel, noquote))"
604665     ;
MPRINT(EM_DIAGRAM):   label NAME = "Variable Name" LABEL = "Label" NRULES = "Number of 
Splitting Rules" IMPORTANCE = "Importance" NSURROGATES = "Number of Surrogate Rules" 
VIMPORTANCE = "Validation Importance" RATIO = "Ratio of Validation to Training Importance" ;
604666     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Variable NSURROGATES is uninitialized.
NOTE: There were 18 observations read from the data set WORK.OUTIMPORT_TREE_3P7F1LK.
NOTE: The data set WORK.OUTIMPORT_TREE_3P7F1LK has 18 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

604667     filename x "C:\Users\LUKASF~1\AppData\Local\Temp\SAS Temporary
604667   ! Files\_TD115000_WN7LF-LEAVE_\Prc2\DESCRIBE.SOURCE" encoding='utf-8' NOBOM;
MPRINT(EM_DIAGRAM):   filename x "C:\Users\LUKASF~1\AppData\Local\Temp\SAS Temporary 
Files\_TD115000_WN7LF-LEAVE_\Prc2\DESCRIBE.SOURCE" encoding='utf-8' NOBOM;
604668     data temp;
MPRINT(EM_DIAGRAM):    data temp;
604669     length varname $28;
MPRINT(EM_DIAGRAM):   length varname $28;
604670     retain varname;
MPRINT(EM_DIAGRAM):   retain varname;
604671     set WORK.OUTPATH_TREE_3P7F1LK;
MPRINT(EM_DIAGRAM):   set WORK.OUTPATH_TREE_3P7F1LK;
604672     if ^missing(variable) then varname=variable;
MPRINT(EM_DIAGRAM):   if ^missing(variable) then varname=variable;
604673     else if ^missing(var_name) then varname=var_name;
MPRINT(EM_DIAGRAM):   else if ^missing(var_name) then varname=var_name;
604674     output;
MPRINT(EM_DIAGRAM):   output;
604675     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 126 observations read from the data set WORK.OUTPATH_TREE_3P7F1LK.
NOTE: The data set WORK.TEMP has 126 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

604676     proc sort data=temp;
MPRINT(EM_DIAGRAM):   proc sort data=temp;
604677     by node;
MPRINT(EM_DIAGRAM):   by node;
604678     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 126 observations read from the data set WORK.TEMP.
NOTE: The data set WORK.TEMP has 126 observations and 8 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

604679     proc sort data=WORK.OUTNODES_TREE_3P7F1LK out=outnodes;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.OUTNODES_TREE_3P7F1LK out=outnodes;
604680     by node;
MPRINT(EM_DIAGRAM):   by node;
604681     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 17 observations read from the data set WORK.OUTNODES_TREE_3P7F1LK.
NOTE: The data set WORK.OUTNODES has 17 observations and 24 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

604682     data temp;
MPRINT(EM_DIAGRAM):   data temp;
604683     merge temp(in=_a) outnodes(keep= node
604684     NPRIORS
604685     P_DepVar0
604686     P_DepVar1
604687     );
MPRINT(EM_DIAGRAM):   merge temp(in=_a) outnodes(keep= node NPRIORS P_DepVar0 P_DepVar1 );
604688     by node;
MPRINT(EM_DIAGRAM):   by node;
604689     if _a;
MPRINT(EM_DIAGRAM):   if _a;
604690     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 126 observations read from the data set WORK.TEMP.
NOTE: There were 17 observations read from the data set WORK.OUTNODES.
NOTE: The data set WORK.TEMP has 126 observations and 11 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

604691     proc sort data=temp;
MPRINT(EM_DIAGRAM):   proc sort data=temp;
604692     by node descending varname descending numeric_value;
MPRINT(EM_DIAGRAM):   by node descending varname descending numeric_value;
604693     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 126 observations read from the data set WORK.TEMP.
NOTE: The data set WORK.TEMP has 126 observations and 11 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

604694     data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
604695     file x;
MPRINT(EM_DIAGRAM):   file x;
604696     set temp;
MPRINT(EM_DIAGRAM):   set temp;
604697     by node descending varname;
MPRINT(EM_DIAGRAM):   by node descending varname;
604698     retain origvar oldnode string;
MPRINT(EM_DIAGRAM):   retain origvar oldnode string;
604699     length origvar $32 oldnode 8 string $200;
MPRINT(EM_DIAGRAM):   length origvar $32 oldnode 8 string $200;
604700     if _n_ = 1 then do;
MPRINT(EM_DIAGRAM):   if _n_ = 1 then do;
604701     origvar = varname;
MPRINT(EM_DIAGRAM):   origvar = varname;
604702     oldnode = node;
MPRINT(EM_DIAGRAM):   oldnode = node;
604703     end;
MPRINT(EM_DIAGRAM):   end;
604704     if first.node then do;
MPRINT(EM_DIAGRAM):   if first.node then do;
604705     put "&EM_CODEBAR";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
604706     put " Node = " node;
MPRINT(EM_DIAGRAM):   put " Node = " node;
604707     put "&EM_CODEBAR";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
604708     end;
MPRINT(EM_DIAGRAM):   end;
604709     if first.varname then do;
MPRINT(EM_DIAGRAM):   if first.varname then do;
604710     if RELATION ^in ("=", "ISMISSING", "ISNOTMISSING") then do;
MPRINT(EM_DIAGRAM):   if RELATION ^in ("=", "ISMISSING", "ISNOTMISSING") then do;
604711     if MISSING(CHARACTER_VALUE) then do;
MPRINT(EM_DIAGRAM):   if MISSING(CHARACTER_VALUE) then do;
604712     if NUMERIC_VALUE ne . then do;
MPRINT(EM_DIAGRAM):   if NUMERIC_VALUE ne . then do;
604713     if ^first.node then do;
MPRINT(EM_DIAGRAM):   if ^first.node then do;
604714     string= "AND "|| strip(varname)||" "||strip(relation)||" "||strip(numeric_value);
MPRINT(EM_DIAGRAM):   string= "AND "|| strip(varname)||" "||strip(relation)||" 
"||strip(numeric_value);
604715     end;
MPRINT(EM_DIAGRAM):   end;
604716     else do;
MPRINT(EM_DIAGRAM):   else do;
604717     string= "if "|| strip(varname)||" "||strip(relation)||" "||strip(numeric_value);
MPRINT(EM_DIAGRAM):   string= "if "|| strip(varname)||" "||strip(relation)||" 
"||strip(numeric_value);
604718     end;
MPRINT(EM_DIAGRAM):   end;
604719     end;
MPRINT(EM_DIAGRAM):   end;
604720     end;
MPRINT(EM_DIAGRAM):   end;
604721     else do;
MPRINT(EM_DIAGRAM):   else do;
604722     if ^first.node then do;
MPRINT(EM_DIAGRAM):   if ^first.node then do;
604723     string= "AND "|| strip(varname)||" "||strip(relation)||" "||strip(character_value);
MPRINT(EM_DIAGRAM):   string= "AND "|| strip(varname)||" "||strip(relation)||" 
"||strip(character_value);
604724     end;
MPRINT(EM_DIAGRAM):   end;
604725     else do;
MPRINT(EM_DIAGRAM):   else do;
604726     string= "if "|| strip(varname)||" "||strip(relation)||" "||strip(character_value);
MPRINT(EM_DIAGRAM):   string= "if "|| strip(varname)||" "||strip(relation)||" 
"||strip(character_value);
604727     end;
MPRINT(EM_DIAGRAM):   end;
604728     end;
MPRINT(EM_DIAGRAM):   end;
604729     end;
MPRINT(EM_DIAGRAM):   end;
604730     else if RELATION in ("=") then do;
MPRINT(EM_DIAGRAM):   else if RELATION in ("=") then do;
604731     if ^first.node then do;
MPRINT(EM_DIAGRAM):   if ^first.node then do;
604732     string = "AND "||strip(varname) ||" IS ONE OF: "||character_value;
MPRINT(EM_DIAGRAM):   string = "AND "||strip(varname) ||" IS ONE OF: "||character_value;
604733     end;
MPRINT(EM_DIAGRAM):   end;
604734     else do;
MPRINT(EM_DIAGRAM):   else do;
604735     string = "if "|| strip(varname) ||" IS ONE OF: "||character_value;
MPRINT(EM_DIAGRAM):   string = "if "|| strip(varname) ||" IS ONE OF: "||character_value;
604736     end;
MPRINT(EM_DIAGRAM):   end;
604737     end;
MPRINT(EM_DIAGRAM):   end;
604738     else if RELATION in ("ISMISSING") then do;
MPRINT(EM_DIAGRAM):   else if RELATION in ("ISMISSING") then do;
604739     if ^first.node then do;
MPRINT(EM_DIAGRAM):   if ^first.node then do;
604740     string = " AND "|| strip(varname) || " equals Missing";
MPRINT(EM_DIAGRAM):   string = " AND "|| strip(varname) || " equals Missing";
604741     end;
MPRINT(EM_DIAGRAM):   end;
604742     else do;
MPRINT(EM_DIAGRAM):   else do;
604743     string = "if "|| strip(varname) ||" equals Missing";
MPRINT(EM_DIAGRAM):   string = "if "|| strip(varname) ||" equals Missing";
604744     end;
MPRINT(EM_DIAGRAM):   end;
604745     end;
MPRINT(EM_DIAGRAM):   end;
604746     else if RELATION in ("ISNOTMISSING") then do;
MPRINT(EM_DIAGRAM):   else if RELATION in ("ISNOTMISSING") then do;
604747     if ^first.node then do;
MPRINT(EM_DIAGRAM):   if ^first.node then do;
604748     string = " AND "|| strip(varname) || " equals All Values";
MPRINT(EM_DIAGRAM):   string = " AND "|| strip(varname) || " equals All Values";
604749     end;
MPRINT(EM_DIAGRAM):   end;
604750     else do;
MPRINT(EM_DIAGRAM):   else do;
604751     string = "if "|| strip(varname) ||" equals All Values";
MPRINT(EM_DIAGRAM):   string = "if "|| strip(varname) ||" equals All Values";
604752     end;
MPRINT(EM_DIAGRAM):   end;
604753     end;
MPRINT(EM_DIAGRAM):   end;
604754     if ^missing(varname) then origvar = varname;
MPRINT(EM_DIAGRAM):   if ^missing(varname) then origvar = varname;
604755     oldnode=node;
MPRINT(EM_DIAGRAM):   oldnode=node;
604756     end;
MPRINT(EM_DIAGRAM):   end;
604757     else do;
MPRINT(EM_DIAGRAM):   else do;
604758     if RELATION ^in ("=", "ISMISSING", "ISNOTMISSING") then do;
MPRINT(EM_DIAGRAM):   if RELATION ^in ("=", "ISMISSING", "ISNOTMISSING") then do;
604759     if MISSING(CHARACTER_VALUE) then do;
MPRINT(EM_DIAGRAM):   if MISSING(CHARACTER_VALUE) then do;
604760     if NUMERIC_VALUE ne . then do;
MPRINT(EM_DIAGRAM):   if NUMERIC_VALUE ne . then do;
604761     if ^MISSING(string) then string= strip(string)||" AND "|| strip(varname)||"
604761   ! "||strip(relation)||" "||strip(numeric_value);
MPRINT(EM_DIAGRAM):   if ^MISSING(string) then string= strip(string)||" AND "|| 
strip(varname)||" "||strip(relation)||" "||strip(numeric_value);
604762     else string= " if "|| strip(varname)||" "||strip(relation)||"
604762   ! "||strip(numeric_value);
MPRINT(EM_DIAGRAM):   else string= " if "|| strip(varname)||" "||strip(relation)||" 
"||strip(numeric_value);
604763     end;
MPRINT(EM_DIAGRAM):   end;
604764     end;
MPRINT(EM_DIAGRAM):   end;
604765     else do;
MPRINT(EM_DIAGRAM):   else do;
604766     if ^MISSING(string) then string= strip(string)||" AND "|| strip(varname)||"
604766   ! "||strip(relation)||" "||strip(character_value);
MPRINT(EM_DIAGRAM):   if ^MISSING(string) then string= strip(string)||" AND "|| 
strip(varname)||" "||strip(relation)||" "||strip(character_value);
604767     else string= " if "|| strip(varname)||" "||strip(relation)||"
604767   ! "||strip(character_value);
MPRINT(EM_DIAGRAM):   else string= " if "|| strip(varname)||" "||strip(relation)||" 
"||strip(character_value);
604768     end;
MPRINT(EM_DIAGRAM):   end;
604769     end;
MPRINT(EM_DIAGRAM):   end;
604770     else if RELATION in ("=") then do;
MPRINT(EM_DIAGRAM):   else if RELATION in ("=") then do;
604771     string = strip(string)||", "||strip(character_value);
MPRINT(EM_DIAGRAM):   string = strip(string)||", "||strip(character_value);
604772     end;
MPRINT(EM_DIAGRAM):   end;
604773     else if RELATION in ("ISMISSING") then do;
MPRINT(EM_DIAGRAM):   else if RELATION in ("ISMISSING") then do;
604774     end;
MPRINT(EM_DIAGRAM):   end;
604775     if ^missing(varname) then origvar = varname;
MPRINT(EM_DIAGRAM):   if ^missing(varname) then origvar = varname;
604776     oldnode=node;
MPRINT(EM_DIAGRAM):   oldnode=node;
604777     end;
MPRINT(EM_DIAGRAM):   end;
604778     if last.varname then do;
MPRINT(EM_DIAGRAM):   if last.varname then do;
604779     if RELATION in ("ISMISSING") then do;
MPRINT(EM_DIAGRAM):   if RELATION in ("ISMISSING") then do;
604780     if ^first.varname then do;
MPRINT(EM_DIAGRAM):   if ^first.varname then do;
604781     string = strip(string) || " or MISSING";
MPRINT(EM_DIAGRAM):   string = strip(string) || " or MISSING";
604782     end;
MPRINT(EM_DIAGRAM):   end;
604783     end;
MPRINT(EM_DIAGRAM):   end;
604784     put string;
MPRINT(EM_DIAGRAM):   put string;
604785     if ^missing(varname) then origvar = varname;
MPRINT(EM_DIAGRAM):   if ^missing(varname) then origvar = varname;
604786     oldnode=node;
MPRINT(EM_DIAGRAM):   oldnode=node;
604787     end;
MPRINT(EM_DIAGRAM):   end;
604788     if last.node then do;
MPRINT(EM_DIAGRAM):   if last.node then do;
604789     put "then ";
MPRINT(EM_DIAGRAM):   put "then ";
604790     put " Tree Node Identifier   = " node;
MPRINT(EM_DIAGRAM):   put " Tree Node Identifier   = " node;
604791     put " Number of Observations = " NPRIORS;
MPRINT(EM_DIAGRAM):   put " Number of Observations = " NPRIORS;
604792     put " Predicted: DepVar=0  = " P_DepVar0;
MPRINT(EM_DIAGRAM):   put " Predicted: DepVar=0  = " P_DepVar0;
604793     put " Predicted: DepVar=1  = " P_DepVar1;
MPRINT(EM_DIAGRAM):   put " Predicted: DepVar=1  = " P_DepVar1;
604794     put " ";
MPRINT(EM_DIAGRAM):   put " ";
604795     if ^missing(varname) then origvar = varname;
MPRINT(EM_DIAGRAM):   if ^missing(varname) then origvar = varname;
604796     oldnode=node;
MPRINT(EM_DIAGRAM):   oldnode=node;
604797     end;
MPRINT(EM_DIAGRAM):   end;
604798     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Numeric values have been converted to character values at the places given by: 
      (Line):(Column).
      604714:67    604717:66    604761:108   604762:72    
NOTE: The file X is:
      
      Filename=C:\Users\LUKASF~1\AppData\Local\Temp\SAS Temporary 
      Files\_TD115000_WN7LF-LEAVE_\Prc2\DESCRIBE.SOURCE,
      RECFM=V,LRECL=1536,File Size (bytes)=0,
      Last Modified=28. April 2016 16.25 Uhr,
      Create Time=28. April 2016 16.25 Uhr

NOTE: 111 records were written to the file X.
      The minimum record length was 1.
      The maximum record length was 72.
NOTE: There were 126 observations read from the data set WORK.TEMP.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

604799     filename x;
MPRINT(EM_DIAGRAM):    filename x;
NOTE: Fileref X has been deassigned.
604800     data leafds;
MPRINT(EM_DIAGRAM):    data leafds;
604801     set WORK.OUTNODES_TREE_3P7F1LK;
MPRINT(EM_DIAGRAM):   set WORK.OUTNODES_TREE_3P7F1LK;
604802     if LEAF ne .;
MPRINT(EM_DIAGRAM):   if LEAF ne .;
604803     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 17 observations read from the data set WORK.OUTNODES_TREE_3P7F1LK.
NOTE: The data set WORK.LEAFDS has 9 observations and 24 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

604804     proc sort data=leafds;
MPRINT(EM_DIAGRAM):   proc sort data=leafds;
604805     by descending N;
MPRINT(EM_DIAGRAM):   by descending N;
604806     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 9 observations read from the data set WORK.LEAFDS.
NOTE: The data set WORK.LEAFDS has 9 observations and 24 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

NOTE: Argument three to KSUBSTR exceeds the length of the input string, the function has 
      recalculated the length of the string.
RIP LEAF: N=1  varid=17  nodeid=7  val=0.98672566371681  count=1130 
RIP LEAF: N=2  varid=18  nodeid=7  val=0.01327433628318  count=1130 
RIP LEAF: N=1  varid=17  nodeid=21  val=0.93187347931873  count=411 
RIP LEAF: N=2  varid=18  nodeid=21  val=0.06812652068126  count=411 
RIP LEAF: N=1  varid=17  nodeid=13  val=0.63783783783783  count=185 
RIP LEAF: N=2  varid=18  nodeid=13  val=0.36216216216216  count=185 
RIP LEAF: N=1  varid=17  nodeid=19  val=0.89743589743589  count=156 
RIP LEAF: N=2  varid=18  nodeid=19  val=0.1025641025641  count=156 
RIP LEAF: N=1  varid=17  nodeid=8  val=0.59210526315789  count=152 
RIP LEAF: N=2  varid=18  nodeid=8  val=0.4078947368421  count=152 
RIP LEAF: N=1  varid=17  nodeid=20  val=0.72033898305084  count=118 
RIP LEAF: N=2  varid=18  nodeid=20  val=0.27966101694915  count=118 
RIP LEAF: N=1  varid=17  nodeid=10  val=0.44318181818181  count=88 
RIP LEAF: N=2  varid=18  nodeid=10  val=0.55681818181818  count=88 
RIP LEAF: N=1  varid=17  nodeid=11  val=0.10126582278481  count=79 
RIP LEAF: N=2  varid=18  nodeid=11  val=0.89873417721519  count=79 
RIP LEAF: N=1  varid=17  nodeid=18  val=0.67272727272727  count=55 
RIP LEAF: N=2  varid=18  nodeid=18  val=0.32727272727272  count=55 
604807     * RIP1: Print leaf table;
MPRINT(EM_DIAGRAM):    * RIP1: Print leaf table;
604808     ;
MPRINT(EM_DIAGRAM):   ;
604809     data leafds;
MPRINT(EM_DIAGRAM):   data leafds;
604810     set leafds;
MPRINT(EM_DIAGRAM):   set leafds;
604811     format P_DEPVAR0 8.4;
MPRINT(EM_DIAGRAM):   format P_DEPVAR0 8.4;
604812     format P_DEPVAR1 8.4;
MPRINT(EM_DIAGRAM):   format P_DEPVAR1 8.4;
604813     ;
MPRINT(EM_DIAGRAM):   ;
604814     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 9 observations read from the data set WORK.LEAFDS.
NOTE: The data set WORK.LEAFDS has 9 observations and 24 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

604815     title9 "%sysfunc(sasmsg(sashelp.dmine, rpt_leaftable_title, NOQUOTE, RIP1, 100))";
MPRINT(EM_DIAGRAM):   title9 "RIP1 Leaf Table: Threshold= 100";
604816     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_text_title, NOQUOTE, %nrbquote(No leaf
604816   ! was ripped from the model.)))";
MPRINT(EM_DIAGRAM):   title10 "No leaf was ripped from the model.";
604817     proc print data = leafds NOOBS LABEL;
MPRINT(EM_DIAGRAM):   proc print data = leafds NOOBS LABEL;
604818     var NODE N
604819     P_DEPVAR0
604820     P_DEPVAR1
604821     ;
MPRINT(EM_DIAGRAM):   var NODE N P_DEPVAR0 P_DEPVAR1 ;
604822     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 9 observations read from the data set WORK.LEAFDS.
NOTE: The PROCEDURE PRINT printed page 592.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

604823     title9;
MPRINT(EM_DIAGRAM):   title9;
604824     title10;
MPRINT(EM_DIAGRAM):   title10;
MPRINT(EM_DIAGRAM):   * Create training data set with binary target for modeling;
MPRINT(EM_DIAGRAM):   ;
604825     * Create training data set with binary target for modeling;
604826     ;
604827     data _ptrain;
MPRINT(EM_DIAGRAM):   data _ptrain;
604828     length _bin $12;
MPRINT(EM_DIAGRAM):   length _bin $12;
604829     set _ptrain;
MPRINT(EM_DIAGRAM):   set _ptrain;
604830     _tmp=putn(DepVar, 'best.');
MPRINT(EM_DIAGRAM):   _tmp=putn(DepVar, 'best.');
604831     %DMNORMIP(_tmp);
MPRINT(DMNORMIP):   call dmnorm(_tmp,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
604832     _tmpLevel = '0';
MPRINT(EM_DIAGRAM):   _tmpLevel = '0';
604833     %DMNORMCP(_tmpLevel, _tmpLevel);
MPRINT(DMNORMCP):   _tmpLevel=dmnorm(_tmpLevel,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
604834     if _tmp eq _tmpLevel then _bin = '1';
MPRINT(EM_DIAGRAM):   if _tmp eq _tmpLevel then _bin = '1';
604835     else _bin = '0';
MPRINT(EM_DIAGRAM):   else _bin = '0';
604836     drop _tmp _tmpLevel
604837     ;
MPRINT(EM_DIAGRAM):   drop _tmp _tmpLevel ;
604838     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2374 observations read from the data set WORK._PTRAIN.
NOTE: The data set WORK._PTRAIN has 2374 observations and 77 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

604839     * Create validation data set with binary target for modeling;
MPRINT(EM_DIAGRAM):    * Create validation data set with binary target for modeling;
604840     ;
MPRINT(EM_DIAGRAM):   ;
604841     data _pvalid;
MPRINT(EM_DIAGRAM):   data _pvalid;
604842     length _bin $12;
MPRINT(EM_DIAGRAM):   length _bin $12;
604843     set _pvalid;
MPRINT(EM_DIAGRAM):   set _pvalid;
604844     _tmp = putn(DepVar, 'best.');
MPRINT(EM_DIAGRAM):   _tmp = putn(DepVar, 'best.');
604845     %DMNORMIP(_TMP);
MPRINT(DMNORMIP):   call dmnorm(_TMP,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
604846     _tmpLevel = '0';
MPRINT(EM_DIAGRAM):   _tmpLevel = '0';
604847     %DMNORMCP(_tmpLevel, _tmpLevel);
MPRINT(DMNORMCP):   _tmpLevel=dmnorm(_tmpLevel,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
604848     if _tmp eq _tmpLevel then _bin = '1';
MPRINT(EM_DIAGRAM):   if _tmp eq _tmpLevel then _bin = '1';
604849     else _bin = '0';
MPRINT(EM_DIAGRAM):   else _bin = '0';
604850     drop _tmp
604851     ;
MPRINT(EM_DIAGRAM):   drop _tmp ;
604852     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1018 observations read from the data set WORK._PVALID.
NOTE: The data set WORK._PVALID has 1018 observations and 78 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

604853     data _train;
MPRINT(EM_DIAGRAM):    data _train;
604854     set _ptrain;
MPRINT(EM_DIAGRAM):   set _ptrain;
604855     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2374 observations read from the data set WORK._PTRAIN.
NOTE: The data set WORK._TRAIN has 2374 observations and 77 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

604856     data _valid;
MPRINT(EM_DIAGRAM):   data _valid;
604857     set _pvalid;
MPRINT(EM_DIAGRAM):   set _pvalid;
604858     options validvarname=any;
MPRINT(EM_DIAGRAM):   options validvarname=any;

NOTE: There were 1018 observations read from the data set WORK._PVALID.
NOTE: The data set WORK._VALID has 1018 observations and 78 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

604859     proc contents data=work._train out=_tempAdvisor noprint;
MPRINT(EM_DIAGRAM):   proc contents data=work._train out=_tempAdvisor noprint;
604860     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._TEMPADVISOR has 77 observations and 40 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

604861     options validvarname=V7;
MPRINT(EM_DIAGRAM):   options validvarname=V7;
604862     %let _dsidTable = 0;
604863     %let _engineTable =;
604864     data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
604865     dsid = open('work._train');
MPRINT(EM_DIAGRAM):   dsid = open('work._train');
604866     call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EM_DIAGRAM):   call symput('_dsidTable', strip(put(dsid, best.)));
604867     if dsid then do;
MPRINT(EM_DIAGRAM):   if dsid then do;
604868     call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EM_DIAGRAM):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
604869     dsid = close(dsid);
MPRINT(EM_DIAGRAM):   dsid = close(dsid);
604870     end;
MPRINT(EM_DIAGRAM):   end;
604871     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

604872     options fmterr;
MPRINT(EM_DIAGRAM):    options fmterr;
604873     data _metaTestView;
MPRINT(EM_DIAGRAM):   data _metaTestView;
604874     set work._train;
MPRINT(EM_DIAGRAM):   set work._train;
604875     if _N_=1 then do;
MPRINT(EM_DIAGRAM):   if _N_=1 then do;
604876     output;
MPRINT(EM_DIAGRAM):   output;
604877     stop;
MPRINT(EM_DIAGRAM):   stop;
604878     end;
MPRINT(EM_DIAGRAM):   end;
604879     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set WORK._TRAIN.
NOTE: The data set WORK._METATESTVIEW has 1 observations and 77 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

604880     proc contents data=work._train
604881     out=WORK.M0HDGWPD noprint;
MPRINT(EM_DIAGRAM):    proc contents data=work._train out=WORK.M0HDGWPD noprint;
604882     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK.M0HDGWPD has 77 observations and 40 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

604883     data WORK.M0HDGWPD;
MPRINT(EM_DIAGRAM):    data WORK.M0HDGWPD;
604884     length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20 INDEX $ 1 INDEXTYPE $
604884   !  9;
MPRINT(EM_DIAGRAM):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20 INDEX $ 1 
INDEXTYPE $ 9;
604885     label NAME =;
MPRINT(EM_DIAGRAM):   label NAME =;
604886     set WORK.M0HDGWPD(keep=name type length label format formatl formatd informat
604886   ! informl informd idxusage rename=(type=itype));
MPRINT(EM_DIAGRAM):   set WORK.M0HDGWPD(keep=name type length label format formatl formatd 
informat informl informd idxusage rename=(type=itype));
604887     if itype = 1 then type = 'N';
MPRINT(EM_DIAGRAM):   if itype = 1 then type = 'N';
604888     else type = 'C';
MPRINT(EM_DIAGRAM):   else type = 'C';
604889     if formatl > 0 then do;
MPRINT(EM_DIAGRAM):   if formatl > 0 then do;
604890     if format ne ' ' then format = strip(format)!!strip(put(formatl,
604890   ! best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EM_DIAGRAM):   if format ne ' ' then format = strip(format)!!strip(put(formatl, 
best12.))!!'.'!!strip(put(formatd, best12.));
604891     else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EM_DIAGRAM):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, 
best12.));
604892     end;
MPRINT(EM_DIAGRAM):   end;
604893     else if format ne '' then format = strip(format)!!'.';
MPRINT(EM_DIAGRAM):   else if format ne '' then format = strip(format)!!'.';
604894     if informl > 0 then do;
MPRINT(EM_DIAGRAM):   if informl > 0 then do;
604895     if informat ne ' ' then informat = strip(informat)!!strip(put(informl,
604895   ! best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EM_DIAGRAM):   if informat ne ' ' then informat = strip(informat)!!strip(put(informl, 
best12.))!!'.'!!strip(put(informd, best12.));
604896     else informat = strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EM_DIAGRAM):   else informat = strip(put(informl, best12.))!!'.'!!strip(put(informd, 
best12.));
604897     end;
MPRINT(EM_DIAGRAM):   end;
604898     else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EM_DIAGRAM):   else if informat ne '' then informat = strip(informat)!!'.';
604899     if idxusage = 'NONE' then index ="N";
MPRINT(EM_DIAGRAM):   if idxusage = 'NONE' then index ="N";
604900     else index = "Y";
MPRINT(EM_DIAGRAM):   else index = "Y";
604901     indextype = idxusage;
MPRINT(EM_DIAGRAM):   indextype = idxusage;
604902     drop idxusage itype formatl formatd informl informd;
MPRINT(EM_DIAGRAM):   drop idxusage itype formatl formatd informl informd;
604903     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 77 observations read from the data set WORK.M0HDGWPD.
NOTE: The data set WORK.M0HDGWPD has 77 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

604904     data WORK.M0HDGWPD;
MPRINT(EM_DIAGRAM):    data WORK.M0HDGWPD;
604905     length UNAME $64;
MPRINT(EM_DIAGRAM):   length UNAME $64;
604906     set WORK.M0HDGWPD;
MPRINT(EM_DIAGRAM):   set WORK.M0HDGWPD;
604907     UNAME = upcase(NAME);
MPRINT(EM_DIAGRAM):   UNAME = upcase(NAME);
604908     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 77 observations read from the data set WORK.M0HDGWPD.
NOTE: The data set WORK.M0HDGWPD has 77 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):    proc sort data=WORK.M17X16Y_ NOTHREADS;
MPRINT(EM_DIAGRAM):   by UNAME;
MPRINT(EM_DIAGRAM):   run;
604912     data WORK.M17X16Y_;
MPRINT(EM_DIAGRAM):    data WORK.M17X16Y_;
604913     drop UNAME;
MPRINT(EM_DIAGRAM):   drop UNAME;
604914     set WORK.M17X16Y_;
MPRINT(EM_DIAGRAM):   set WORK.M17X16Y_;
604915     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 77 observations read from the data set WORK.M17X16Y_.
NOTE: The data set WORK.M17X16Y_ has 77 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):    data WORK.M283UB17(keep=NAME ATTR);
MPRINT(EM_DIAGRAM):   length ATTR $ 20;
MPRINT(EM_DIAGRAM):   set WORK.M17X16Y_;
MPRINT(EM_DIAGRAM):   if level ne "INTERVAL" then do;
MPRINT(EM_DIAGRAM):   if order = ' ' then do;
MPRINT(EM_DIAGRAM):   attr = 'ORDER';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EM_DIAGRAM):   attr = 'FORMATTYPE';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if role = ' ' then do;
MPRINT(EM_DIAGRAM):   attr = 'ROLE';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if level = ' ' then do;
MPRINT(EM_DIAGRAM):   attr = 'LEVEL';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if type = ' ' then do;
MPRINT(EM_DIAGRAM):   attr = 'TYPE';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if index = ' ' then do;
MPRINT(EM_DIAGRAM):   attr = 'INDEX';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if report = ' ' then do;
MPRINT(EM_DIAGRAM):   attr = 'REPORT';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort NOTHREADS;
MPRINT(EM_DIAGRAM):   by attr;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.M17X16Y_;
MPRINT(EM_DIAGRAM):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 FORMATTYPE $ 
10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EM_DIAGRAM):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EM_DIAGRAM):   set WORK.M17X16Y_;
MPRINT(EM_DIAGRAM):   if formattype = ' ' then do;
MPRINT(EM_DIAGRAM):   if format ne ' ' then do;
MPRINT(EM_DIAGRAM):   if type = 'N' then do;
MPRINT(EM_DIAGRAM):   pos = indexc(format,'.1234567890');
MPRINT(EM_DIAGRAM):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EM_DIAGRAM):   else tempfmt = ' ';
MPRINT(EM_DIAGRAM):   flen = length(tempfmt);
MPRINT(EM_DIAGRAM):   select;
MPRINT(EM_DIAGRAM):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" 
"MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" 
"QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" "YEAR" "YYMMDD" "YYMON" 
"YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" 
"EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) 
formattype = 'DATE';
MPRINT(EM_DIAGRAM):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = "DATETIME";
MPRINT(EM_DIAGRAM):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) formattype = 
"TIME";
MPRINT(EM_DIAGRAM):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" 
"NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EM_DIAGRAM):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" "SSN" 
"Z" "ZD")) formattype = "CODING";
MPRINT(EM_DIAGRAM):   otherwise do;
MPRINT(EM_DIAGRAM):   formattype = "USER";
MPRINT(EM_DIAGRAM):   if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EM_DIAGRAM):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EM_DIAGRAM):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EM_DIAGRAM):   else if flen >= 4 then do;
MPRINT(EM_DIAGRAM):   str = substr(tempfmt,1,4);
MPRINT(EM_DIAGRAM):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EM_DIAGRAM):   else if str = "S370" then formattype = "CODING";
MPRINT(EM_DIAGRAM):   else if str = "BEST" then formattype = "NUM";
MPRINT(EM_DIAGRAM):   drop str;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = 
"DATE";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   drop flen tempfmt pos;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   formatType = "CATEGORY";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if formatType = "NUM" then do;
MPRINT(EM_DIAGRAM):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EM_DIAGRAM):   else formatType = "QUANTITY";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if level = ' ' then do;
MPRINT(EM_DIAGRAM):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then level = 
"NOMINAL";
MPRINT(EM_DIAGRAM):   else level = "INTERVAL";
MPRINT(EM_DIAGRAM):   levelAssigned = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else level = upcase(level);
MPRINT(EM_DIAGRAM):   if role = ' ' then do;
MPRINT(EM_DIAGRAM):   length name_prefix $8 _uname $64;
MPRINT(EM_DIAGRAM):   drop name_prefix _uname _freqflag;
MPRINT(EM_DIAGRAM):   retain _freqflag;
MPRINT(EM_DIAGRAM):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EM_DIAGRAM):   _uname = upcase(NAME);
MPRINT(EM_DIAGRAM):   select(_uname);
MPRINT(EM_DIAGRAM):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EM_DIAGRAM):   when('EM_SEGMENT') do;
MPRINT(EM_DIAGRAM):   ROLE = 'SEGMENT';
MPRINT(EM_DIAGRAM):   LEVEL = 'NOMINAL';
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   when('_NODE_') do;
MPRINT(EM_DIAGRAM):   ROLE = 'SEGMENT';
MPRINT(EM_DIAGRAM):   LEVEL = 'NOMINAL';
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EM_DIAGRAM):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EM_DIAGRAM):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EM_DIAGRAM):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EM_DIAGRAM):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EM_DIAGRAM):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EM_DIAGRAM):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EM_DIAGRAM):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EM_DIAGRAM):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EM_DIAGRAM):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EM_DIAGRAM):   when('URI') ROLE = 'URL';
MPRINT(EM_DIAGRAM):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EM_DIAGRAM):   otherwise do;
MPRINT(EM_DIAGRAM):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EM_DIAGRAM):   ROLE = 'REJECTED';
MPRINT(EM_DIAGRAM):   LEVEL = 'NOMINAL';
MPRINT(EM_DIAGRAM):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EM_DIAGRAM):   ROLE = 'FREQ';
MPRINT(EM_DIAGRAM):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EM_DIAGRAM):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   name_prefix = scan(_uname, 1, '_');
MPRINT(EM_DIAGRAM):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EM_DIAGRAM):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EM_DIAGRAM):   ROLE = 'CLASSIFICATION';
MPRINT(EM_DIAGRAM):   LEVEL = 'NOMINAL';
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EM_DIAGRAM):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 'RAS', 
'RAT') then ROLE = 'RESIDUAL';
MPRINT(EM_DIAGRAM):   else if name_prefix ='D' then do;
MPRINT(EM_DIAGRAM):   ROLE = 'DECISION';
MPRINT(EM_DIAGRAM):   LEVEL = 'NOMINAL';
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if name_prefix ='B' then do;
MPRINT(EM_DIAGRAM):   ROLE = 'SEGMENT';
MPRINT(EM_DIAGRAM):   LEVEL = 'NOMINAL';
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 'ROI', 
'IC') then ROLE = 'ASSESS';
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   array _ROLE_ (19) $32 _TEMPORARY_ ('ASSESS','CLASSIFICATION','CENSOR', 
'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 
'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 
'TIMEID');
MPRINT(EM_DIAGRAM):   drop _found_ i;
MPRINT(EM_DIAGRAM):   _found_=0;
MPRINT(EM_DIAGRAM):   do i=1 to 19 until(_found_=1);
MPRINT(EM_DIAGRAM):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EM_DIAGRAM):   ROLE=_ROLE_{i};
MPRINT(EM_DIAGRAM):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EM_DIAGRAM):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EM_DIAGRAM):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EM_DIAGRAM):   _found_=1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if length(_uname)>2 then do;
MPRINT(EM_DIAGRAM):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EM_DIAGRAM):   ROLE = 'ID';
MPRINT(EM_DIAGRAM):   LEVEL = 'NOMINAL';
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EM_DIAGRAM):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if role = ' ' then do;
MPRINT(EM_DIAGRAM):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EM_DIAGRAM):   else role = 'INPUT';
MPRINT(EM_DIAGRAM):   roleAssigned = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else role = upcase(role);
MPRINT(EM_DIAGRAM):   if REPORT = '' then REPORT = 'N';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * DMDBClass Macro ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(HPDM_PERFORMANCE):  ;
PERFORMANCE  DETAILS
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):    proc dmdb data=work._train(obs=1000000) batch classOut=_DMDB2D0EYB8 
maxLevel=22;
MPRINT(EM_DIAGRAM):   class
MPRINT(DMDBCLASS):   AcceptedCmp1 AcceptedCmp2 AcceptedCmp3 AcceptedCmp4 AcceptedCmp5 
AcceptedCmpTotal Age Complain Custid DepVar Dt_Customer Education Element1 Element2 Element3 
Element4 Frq F_DepVar Group GRP_AcceptedCmp5 GRP_AcceptedCmpTotal GRP_Frq GRP_Income GRP_Mnt 
GRP_MntFishProducts GRP_MntGoldProds GRP_MntMeatProducts GRP_MntSweetProducts GRP_MntWines 
GRP_NumCatalogPurchases GRP_NumDistPurchases GRP_NumWebPurchases GRP_NumWebVisitsMonth 
GRP_Recency GRP_RFMstat GRP_RMntFrq HigherEducation HigherEducationBinary Income I_DepVar 
Kidhome Marital_Status Mnt MntFishProducts MntFruits MntGoldProds MntMeatProducts 
MntSweetProducts MntWines MonthsAsCustomer NumCatalogPurchases NumDealsPurchases 
NumDistPurchases NumStorePurchases NumWebPurchases NumWebVisitsMonth P_DepVar0 P_DepVar1 
Q_DepVar0 Q_DepVar1 Recency RFMstat RMntFrq R_DepVar0 R_DepVar1 Teenhome U_DepVar V_DepVar0 
V_DepVar1 Year_Birth Z_CostContact Z_Revenue _bin _dataobs_ _LEAF_ _NODE_ _WARN_
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    proc freq data=_DMDB2D0EYB8 noprint;
MPRINT(EM_DIAGRAM):   table name / out=_DMDBCOUNT2D0EYB8(drop=percent rename=(count=NLEVEL));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _MISS2D0EYB8(rename=(frequency=NMISS));
MPRINT(EM_DIAGRAM):   set _DMDB2D0EYB8(where=(NRAW=. and CRAW=''));
MPRINT(EM_DIAGRAM):   keep name frequency;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_MISS2D0EYB8;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_DMDBCOUNT2D0EYB8;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _COUNTS2D0EYB8;
MPRINT(EM_DIAGRAM):   merge _DMDBCOUNT2D0EYB8 _MISS2D0EYB8;
MPRINT(EM_DIAGRAM):   label NLEVEL= 'Number of Category';
MPRINT(EM_DIAGRAM):   by name;
MPRINT(EM_DIAGRAM):   if NMISS > 0 then do;
MPRINT(EM_DIAGRAM):   NLEVEL= NLEVEL-1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else NMISS = 0;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    proc sort data=_COUNTS2D0EYB8 NOTHREADS;
MPRINT(EM_DIAGRAM):   by name;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.M17X16Y_ NOTHREADS;
MPRINT(EM_DIAGRAM):   by name;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data WORK.M17X16Y_;
MPRINT(EM_DIAGRAM):   length NLEVEL 8 nmiss 8;
MPRINT(EM_DIAGRAM):   update WORK.M17X16Y_ _COUNTS2D0EYB8;
MPRINT(EM_DIAGRAM):   by name;
MPRINT(EM_DIAGRAM):   if name='' then name='_';
MPRINT(EM_DIAGRAM):   if levelAssigned and ROLE ne 'FREQ' then do;
MPRINT(EM_DIAGRAM):   select(NLEVEL);
MPRINT(EM_DIAGRAM):   when(.) do;
MPRINT(EM_DIAGRAM):   if type eq 'C' then level = 'NOMINAL';
MPRINT(EM_DIAGRAM):   else level = 'INTERVAL';
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   when(0) level = 'UNARY';
MPRINT(EM_DIAGRAM):   when(1) level = 'UNARY';
MPRINT(EM_DIAGRAM):   when(2) level = 'BINARY';
MPRINT(EM_DIAGRAM):   otherwise do;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if roleAssigned then do;
MPRINT(EM_DIAGRAM):   if level = 'NOMINAL' and NLEVEL > 20 then do;
MPRINT(EM_DIAGRAM):   role = 'REJECTED';
MPRINT(EM_DIAGRAM):   comment = "Exceeds maximum number of levels cutoff";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if level = 'UNARY' and ROLE ne 'FREQ' then role='REJECTED';
MPRINT(EM_DIAGRAM):   drop NLEVEL nmiss;
MPRINT(EM_DIAGRAM):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= 
"Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= 
"Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower limit" UPPERLIMIT= 
"Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= 
"Label" LENGTH= "Length";
MPRINT(EM_DIAGRAM):   drop levelAssigned roleAssigned;
MPRINT(EM_DIAGRAM):   run;
605209     data WORK.M2UWUMIX;
MPRINT(EM_DIAGRAM):    data WORK.M2UWUMIX;
605210     set WORK.M2UWUMIX;
MPRINT(EM_DIAGRAM):   set WORK.M2UWUMIX;
605211     if NAME='Element1' then delete;
MPRINT(EM_DIAGRAM):   if NAME='Element1' then delete;
605212     if NAME='Element2' then delete;
MPRINT(EM_DIAGRAM):   if NAME='Element2' then delete;
605213     if NAME='Element3' then delete;
MPRINT(EM_DIAGRAM):   if NAME='Element3' then delete;
605214     if NAME='Element4' then delete;
MPRINT(EM_DIAGRAM):   if NAME='Element4' then delete;
605215     if NAME='Group' then delete;
MPRINT(EM_DIAGRAM):   if NAME='Group' then delete;
605216     if NAME='Z_CostContact' then delete;
MPRINT(EM_DIAGRAM):   if NAME='Z_CostContact' then delete;
605217     if NAME='Z_Revenue' then delete;
MPRINT(EM_DIAGRAM):   if NAME='Z_Revenue' then delete;
605218     if NAME='_WARN_' then delete;
MPRINT(EM_DIAGRAM):   if NAME='_WARN_' then delete;
605219     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 20 observations read from the data set WORK.M2UWUMIX.
NOTE: The data set WORK.M2UWUMIX has 20 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

605220     data WORK.M2ZPB67R;
MPRINT(EM_DIAGRAM):    data WORK.M2ZPB67R;
605221     set WORK.M2ZPB67R;
MPRINT(EM_DIAGRAM):   set WORK.M2ZPB67R;
605222     if role='INPUT' and use='D' then use='Y';
MPRINT(EM_DIAGRAM):   if role='INPUT' and use='D' then use='Y';
605223     if NAME='_bin' then do;
MPRINT(EM_DIAGRAM):   if NAME='_bin' then do;
605224     ROLE='TARGET';
MPRINT(EM_DIAGRAM):   ROLE='TARGET';
605225     LEVEL='BINARY';
MPRINT(EM_DIAGRAM):   LEVEL='BINARY';
605226     USE='Y';
MPRINT(EM_DIAGRAM):   USE='Y';
605227     end;
MPRINT(EM_DIAGRAM):   end;
605228     if NAME='DepVar' then do;
MPRINT(EM_DIAGRAM):   if NAME='DepVar' then do;
605229     ROLE='REJECTED';
MPRINT(EM_DIAGRAM):   ROLE='REJECTED';
605230     end;
MPRINT(EM_DIAGRAM):   end;
605231     if NAME='Element1' then delete;
MPRINT(EM_DIAGRAM):   if NAME='Element1' then delete;
605232     if NAME='Element2' then delete;
MPRINT(EM_DIAGRAM):   if NAME='Element2' then delete;
605233     if NAME='Element3' then delete;
MPRINT(EM_DIAGRAM):   if NAME='Element3' then delete;
605234     if NAME='Element4' then delete;
MPRINT(EM_DIAGRAM):   if NAME='Element4' then delete;
605235     if NAME='Group' then delete;
MPRINT(EM_DIAGRAM):   if NAME='Group' then delete;
605236     if NAME='Z_CostContact' then delete;
MPRINT(EM_DIAGRAM):   if NAME='Z_CostContact' then delete;
605237     if NAME='Z_Revenue' then delete;
MPRINT(EM_DIAGRAM):   if NAME='Z_Revenue' then delete;
605238     if NAME='_WARN_' then delete;
MPRINT(EM_DIAGRAM):   if NAME='_WARN_' then delete;
605239     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 21 observations read from the data set WORK.M2ZPB67R.
NOTE: The data set WORK.M2ZPB67R has 21 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

605240     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
605241     * Binary Model DepVar = 0;
MPRINT(EM_DIAGRAM):   * Binary Model DepVar = 0;
605242     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
605243     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
605244     * REGRESSION MODEL DepVar binary BIN1;
MPRINT(EM_DIAGRAM):   * REGRESSION MODEL DepVar binary BIN1;
605245     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
605246     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
605247     * Rule3: Create decision matrix;
MPRINT(EM_DIAGRAM):   * Rule3: Create decision matrix;
605248     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
605249     data EM_DMREG / view=EM_DMREG;
MPRINT(EM_DIAGRAM):   data EM_DMREG / view=EM_DMREG;
605250     set work._train(keep=
605251     DepVar GRP_AcceptedCmp5 GRP_AcceptedCmpTotal GRP_Frq GRP_Income GRP_Mnt
605252     GRP_MntFishProducts GRP_MntGoldProds GRP_MntMeatProducts GRP_MntSweetProducts
605253     GRP_MntWines GRP_NumCatalogPurchases GRP_NumDistPurchases GRP_NumWebPurchases
605254     GRP_NumWebVisitsMonth GRP_RFMstat GRP_RMntFrq GRP_Recency Year_Birth _bin);
MPRINT(EM_DIAGRAM):   set work._train(keep= DepVar GRP_AcceptedCmp5 GRP_AcceptedCmpTotal 
GRP_Frq GRP_Income GRP_Mnt GRP_MntFishProducts GRP_MntGoldProds GRP_MntMeatProducts 
GRP_MntSweetProducts GRP_MntWines GRP_NumCatalogPurchases GRP_NumDistPurchases 
GRP_NumWebPurchases GRP_NumWebVisitsMonth GRP_RFMstat GRP_RMntFrq GRP_Recency Year_Birth _bin);
605255     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: DATA STEP view saved on file WORK.EM_DMREG.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * Rule3: DMDBClass Macro ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
605256     *------------------------------------------------------------* ;
605257     * Rule3: DMDBClass Macro ;
605258     *------------------------------------------------------------* ;
605259     %macro DMDBClass;
605260         DepVar(ASC) GRP_AcceptedCmp5(ASC) GRP_AcceptedCmpTotal(ASC) GRP_Frq(ASC)
605261        GRP_Income(ASC) GRP_Mnt(ASC) GRP_MntFishProducts(ASC) GRP_MntGoldProds(ASC)
605262        GRP_MntMeatProducts(ASC) GRP_MntSweetProducts(ASC) GRP_MntWines(ASC)
605263        GRP_NumCatalogPurchases(ASC) GRP_NumDistPurchases(ASC) GRP_NumWebPurchases(ASC)
605264        GRP_NumWebVisitsMonth(ASC) GRP_RFMstat(ASC) GRP_RMntFrq(ASC) GRP_Recency(ASC)
605265        _bin(DESC)
605266     %mend DMDBClass;
605267     *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
605268     * Rule3: DMDBVar Macro ;
MPRINT(EM_DIAGRAM):   * Rule3: DMDBVar Macro ;
605269     *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
605270     %macro DMDBVar;
605271         Year_Birth
605272     %mend DMDBVar;
605273     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
605274     * Rule3: Create DMDB;
MPRINT(EM_DIAGRAM):   * Rule3: Create DMDB;
605275     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
605276     proc dmdb batch data=WORK.EM_DMREG
605277     dmdbcat=WORK.Rule3_DMDB
605278     maxlevel = 513
605279     ;
MPRINT(EM_DIAGRAM):   proc dmdb batch data=WORK.EM_DMREG dmdbcat=WORK.Rule3_DMDB maxlevel = 
513 ;
MPRINT(EM_DIAGRAM):   class
605280     class %DMDBClass;
MPRINT(DMDBCLASS):   DepVar(ASC) GRP_AcceptedCmp5(ASC) GRP_AcceptedCmpTotal(ASC) GRP_Frq(ASC) 
GRP_Income(ASC) GRP_Mnt(ASC) GRP_MntFishProducts(ASC) GRP_MntGoldProds(ASC) 
GRP_MntMeatProducts(ASC) GRP_MntSweetProducts(ASC) GRP_MntWines(ASC) 
GRP_NumCatalogPurchases(ASC) GRP_NumDistPurchases(ASC) GRP_NumWebPurchases(ASC) 
GRP_NumWebVisitsMonth(ASC) GRP_RFMstat(ASC) GRP_RMntFrq(ASC) GRP_Recency(ASC) _bin(DESC)
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   var
605281     var %DMDBVar;
MPRINT(DMDBVAR):   Year_Birth
MPRINT(EM_DIAGRAM):  ;
605282     target
605283     _bin
605284     ;
MPRINT(EM_DIAGRAM):   target _bin ;
605285     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Records processed = 2374   Memory used = 511K.
NOTE: View WORK.EM_DMREG.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
NOTE: There were 2374 observations read from the data set WORK._TRAIN.
NOTE: There were 2374 observations read from the data set WORK.EM_DMREG.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):   *--- end code ---*;
605286     quit;
605287     *--- end code ---*;

605288     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
605289     * Rule3: Run DMREG procedure;
MPRINT(EM_DIAGRAM):   * Rule3: Run DMREG procedure;
605290     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
605291     proc dmreg data=EM_DMREG dmdbcat=WORK.Rule3_DMDB
605292     validata = work._valid
605293     outest = WORK.DMREG_2RSANHF_OUTEST
605294     outterms = WORK.DMREG_2RSANHF_OUTTERMS
605295     outmap= WORK.DMREG_2RSANHF_MAP namelen=200
605296     ;
MPRINT(EM_DIAGRAM):   proc dmreg data=EM_DMREG dmdbcat=WORK.Rule3_DMDB validata = work._valid 
outest = WORK.DMREG_2RSANHF_OUTEST outterms = WORK.DMREG_2RSANHF_OUTTERMS outmap= 
WORK.DMREG_2RSANHF_MAP namelen=200 ;
605297     class
605298     _bin
605299     GRP_AcceptedCmp5
605300     GRP_AcceptedCmpTotal
605301     GRP_Frq
605302     GRP_Income
605303     GRP_Mnt
605304     GRP_MntFishProducts
605305     GRP_MntGoldProds
605306     GRP_MntMeatProducts
605307     GRP_MntSweetProducts
605308     GRP_MntWines
605309     GRP_NumCatalogPurchases
605310     GRP_NumDistPurchases
605311     GRP_NumWebPurchases
605312     GRP_NumWebVisitsMonth
605313     GRP_RFMstat
605314     GRP_RMntFrq
605315     GRP_Recency
605316     ;
MPRINT(EM_DIAGRAM):   class _bin GRP_AcceptedCmp5 GRP_AcceptedCmpTotal GRP_Frq GRP_Income 
GRP_Mnt GRP_MntFishProducts GRP_MntGoldProds GRP_MntMeatProducts GRP_MntSweetProducts 
GRP_MntWines GRP_NumCatalogPurchases GRP_NumDistPurchases GRP_NumWebPurchases 
GRP_NumWebVisitsMonth GRP_RFMstat GRP_RMntFrq GRP_Recency ;
605317     model _bin =
605318     GRP_AcceptedCmp5
605319     GRP_AcceptedCmpTotal
605320     GRP_Frq
605321     GRP_Income
605322     GRP_Mnt
605323     GRP_MntFishProducts
605324     GRP_MntGoldProds
605325     GRP_MntMeatProducts
605326     GRP_MntSweetProducts
605327     GRP_MntWines
605328     GRP_NumCatalogPurchases
605329     GRP_NumDistPurchases
605330     GRP_NumWebPurchases
605331     GRP_NumWebVisitsMonth
605332     GRP_RFMstat
605333     GRP_RMntFrq
605334     GRP_Recency
605335     Year_Birth
605336     /error=binomial link=LOGIT
605337     coding=DEVIATION
605338     nodesignprint
605339     ;
MPRINT(EM_DIAGRAM):   model _bin = GRP_AcceptedCmp5 GRP_AcceptedCmpTotal GRP_Frq GRP_Income 
GRP_Mnt GRP_MntFishProducts GRP_MntGoldProds GRP_MntMeatProducts GRP_MntSweetProducts 
GRP_MntWines GRP_NumCatalogPurchases GRP_NumDistPurchases GRP_NumWebPurchases 
GRP_NumWebVisitsMonth GRP_RFMstat GRP_RMntFrq GRP_Recency Year_Birth /error=binomial 
link=LOGIT coding=DEVIATION nodesignprint ;
605340     ;
MPRINT(EM_DIAGRAM):   ;
605341     score data=_train
605342     out=_ptrain(label="")
605343     ;
MPRINT(EM_DIAGRAM):   score data=_train out=_ptrain(label="") ;
605344     score data=_valid
605345     out=_pvalid(label="")
605346     ;
MPRINT(EM_DIAGRAM):   score data=_valid out=_pvalid(label="") ;
605347     code file="C:\Users\LUKASF~1\AppData\Local\Temp\SAS Temporary
605347   ! Files\_TD115000_WN7LF-LEAVE_\Prc2\BIN1.sas"
605348     group=Rule3_1
605349     ;
MPRINT(EM_DIAGRAM):   code file="C:\Users\LUKASF~1\AppData\Local\Temp\SAS Temporary 
Files\_TD115000_WN7LF-LEAVE_\Prc2\BIN1.sas" group=Rule3_1 ;
605350     code file="C:\Users\LUKASF~1\AppData\Local\Temp\SAS Temporary
605350   ! Files\_TD115000_WN7LF-LEAVE_\Prc2\BIN1_res.sas"
605351     group=Rule3_1
605352     residual
605353     ;
MPRINT(EM_DIAGRAM):   code file="C:\Users\LUKASF~1\AppData\Local\Temp\SAS Temporary 
Files\_TD115000_WN7LF-LEAVE_\Prc2\BIN1_res.sas" group=Rule3_1 residual ;
605354     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Variable _WARN_ already exists on file WORK._PTRAIN, using _WARN_2 instead.
NOTE: Variable _WARN_ already exists on file WORK._PVALID, using _WARN_2 instead.

NOTE: PROC DMREG is modeling the probability that _bin='1'.
NOTE: Convergence criterion (FCONV=0.0001) satisfied.
NOTE: At least one element of the gradient is greater than 1e-3.
NOTE: External file C:\Users\LUKASF~1\AppData\Local\Temp\SAS Temporary 
      Files\_TD115000_WN7LF-LEAVE_\Prc2\BIN1.sas opened.
NOTE: External file C:\Users\LUKASF~1\AppData\Local\Temp\SAS Temporary 
      Files\_TD115000_WN7LF-LEAVE_\Prc2\BIN1_res.sas opened.
NOTE: View WORK.EM_DMREG.VIEW used (Total process time):
      real time           0.35 seconds
      cpu time            0.35 seconds
      
NOTE: There were 2374 observations read from the data set WORK._TRAIN.
NOTE: There were 2374 observations read from the data set WORK.EM_DMREG.
NOTE: There were 1018 observations read from the data set WORK._VALID.
NOTE: There were 2374 observations read from the data set WORK._TRAIN.
NOTE: There were 1018 observations read from the data set WORK._VALID.
NOTE: The data set WORK.DMREG_2RSANHF_OUTEST has 3 observations and 163 variables.
NOTE: The data set WORK.DMREG_2RSANHF_OUTTERMS has 129 observations and 6 variables.
NOTE: The data set WORK.DMREG_2RSANHF_MAP has 2 observations and 130 variables.
NOTE: The data set WORK._PTRAIN has 2374 observations and 86 variables.
NOTE: The data set WORK._PVALID has 1018 observations and 87 variables.
NOTE: The PROCEDURE DMREG printed pages 593-594.
NOTE: PROCEDURE DMREG used (Total process time):
      real time           0.37 seconds
      cpu time            0.37 seconds
      

MPRINT(EM_DIAGRAM):   quit;
605355     quit;

605356     proc datasets lib=WORK nolist;
MPRINT(EM_DIAGRAM):    proc datasets lib=WORK nolist;
605357     delete Rule3_DMDB;
MPRINT(EM_DIAGRAM):   delete Rule3_DMDB;
605358     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file WORK.RULE3_DMDB (memtype=DATA) was not found, but appears on a DELETE statement.
605359     quit;
MPRINT(EM_DIAGRAM):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

605360     proc datasets lib=WORK nolist;
MPRINT(EM_DIAGRAM):    proc datasets lib=WORK nolist;
605361     delete Rule3_DMDB / memtype=catalog;
MPRINT(EM_DIAGRAM):   delete Rule3_DMDB / memtype=catalog;
605362     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Deleting WORK.RULE3_DMDB (memtype=CATALOG).
605363     quit;
MPRINT(EM_DIAGRAM):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

605364     * BINARY: Training Classification;
MPRINT(EM_DIAGRAM):    * BINARY: Training Classification;
605365     ;
MPRINT(EM_DIAGRAM):   ;
605366     proc freq data = _ptrain noprint;
MPRINT(EM_DIAGRAM):   proc freq data = _ptrain noprint;
605367     tables F__bin * I__bin / out = _count;
MPRINT(EM_DIAGRAM):   tables F__bin * I__bin / out = _count;
605368     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2374 observations read from the data set WORK._PTRAIN.
NOTE: The data set WORK._COUNT has 4 observations and 4 variables.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

605369     data _count;
MPRINT(EM_DIAGRAM):   data _count;
605370     set _count;
MPRINT(EM_DIAGRAM):   set _count;
605371     label count = "%sysfunc(sasmsg(sashelp.dmine, rpt_traincount_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label count = "Train Count";
605372     label percent = "%sysfunc(sasmsg(sashelp.dmine, rpt_trainpercent_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label percent = "Train Percent";
605373     label F__bin = "%sysfunc(sasmsg(sashelp.dmine, rpt_from_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label F__bin = "From";
605374     label I__bin = "%sysfunc(sasmsg(sashelp.dmine, rpt_into_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label I__bin = "Into";
605375     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._COUNT.
NOTE: The data set WORK._COUNT has 4 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   * BINARY: Validation Classification;
MPRINT(EM_DIAGRAM):   ;
605376     * BINARY: Validation Classification;
605377     ;
605378     proc freq data = _pvalid noprint;
MPRINT(EM_DIAGRAM):   proc freq data = _pvalid noprint;
605379     tables f__bin * i__bin / out=_vcount;
MPRINT(EM_DIAGRAM):   tables f__bin * i__bin / out=_vcount;
605380     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1018 observations read from the data set WORK._PVALID.
NOTE: The data set WORK._VCOUNT has 4 observations and 4 variables.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

605381     data _vcount;
MPRINT(EM_DIAGRAM):   data _vcount;
605382     set _vcount;
MPRINT(EM_DIAGRAM):   set _vcount;
605383     length key $64;
MPRINT(EM_DIAGRAM):   length key $64;
605384     label count = "%sysfunc(sasmsg(sashelp.dmine, rpt_validcount_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label count = "Valid Count";
605385     label percent = "%sysfunc(sasmsg(sashelp.dmine, rpt_validpercent_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label percent = "Valid Percent";
605386     label f__bin = "%sysfunc(sasmsg(sashelp.dmine, rpt_from_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label f__bin = "From";
605387     label i__bin = "%sysfunc(sasmsg(sashelp.dmine, rpt_into_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label i__bin = "Into";
605388     rename count = vcount;
MPRINT(EM_DIAGRAM):   rename count = vcount;
605389     rename percent= vpercent;
MPRINT(EM_DIAGRAM):   rename percent= vpercent;
605390     key = ktrim(kleft(f__bin) !! '_' !! ktrim(kleft(i__bin)));
MPRINT(EM_DIAGRAM):   key = ktrim(kleft(f__bin) !! '_' !! ktrim(kleft(i__bin)));
605391     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._VCOUNT.
NOTE: The data set WORK._VCOUNT has 4 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   *;
605392     *;
605393     data _count;
MPRINT(EM_DIAGRAM):   data _count;
605394     set _count;
MPRINT(EM_DIAGRAM):   set _count;
605395     length key $64;
MPRINT(EM_DIAGRAM):   length key $64;
605396     key = ktrim(kleft(f__bin) !! '_' !! ktrim(kleft(i__bin)));
MPRINT(EM_DIAGRAM):   key = ktrim(kleft(f__bin) !! '_' !! ktrim(kleft(i__bin)));
605397     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._COUNT.
NOTE: The data set WORK._COUNT has 4 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   * Merge Train and Valid classification;
MPRINT(EM_DIAGRAM):   ;
605398     * Merge Train and Valid classification;
605399     ;
605400     proc sort data=_count;
MPRINT(EM_DIAGRAM):   proc sort data=_count;
605401     by key;
MPRINT(EM_DIAGRAM):   by key;
605402     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._COUNT.
NOTE: The data set WORK._COUNT has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

605403     proc sort data=_vcount;
MPRINT(EM_DIAGRAM):   proc sort data=_vcount;
605404     by key;
MPRINT(EM_DIAGRAM):   by key;
605405     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._VCOUNT.
NOTE: The data set WORK._VCOUNT has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   *;
605406     *;
605407     data _count;
MPRINT(EM_DIAGRAM):   data _count;
605408     merge _count _vcount;
MPRINT(EM_DIAGRAM):   merge _count _vcount;
605409     by key;
MPRINT(EM_DIAGRAM):   by key;
605410     drop key;
MPRINT(EM_DIAGRAM):   drop key;
605411     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._COUNT.
NOTE: There were 4 observations read from the data set WORK._VCOUNT.
NOTE: The data set WORK._COUNT has 4 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   *BINARY: Print Classification;
MPRINT(EM_DIAGRAM):   ;
605412     *BINARY: Print Classification;
605413     ;
605414     title9 "%sysfunc(sasmsg(sashelp.dmine, rpt_binmodel_title, NOQUOTE, DepVar,
605414   ! %nrbquote(0)))";
MPRINT(EM_DIAGRAM):   title9 "Binary Model DepVar = 0";
605415     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_classification_title, NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Classification Table";
605416     proc print data = _count noobs label;
MPRINT(EM_DIAGRAM):   proc print data = _count noobs label;
605417     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._COUNT.
NOTE: The PROCEDURE PRINT printed page 595.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

605418     title9;
MPRINT(EM_DIAGRAM):   title9;
605419     title10;
MPRINT(EM_DIAGRAM):   title10;
605420     * Extract misfit training values;
MPRINT(EM_DIAGRAM):    * Extract misfit training values;
605421     ;
MPRINT(EM_DIAGRAM):   ;
605422     data _ptrain;
MPRINT(EM_DIAGRAM):   data _ptrain;
605423     set _ptrain;
MPRINT(EM_DIAGRAM):   set _ptrain;
605424     if not ( I__bin eq '1' and F__bin eq '1') then output;
MPRINT(EM_DIAGRAM):   if not ( I__bin eq '1' and F__bin eq '1') then output;
605425     keep
605426     GRP_AcceptedCmp5
605427     GRP_AcceptedCmpTotal
605428     GRP_Frq
605429     GRP_Income
605430     GRP_Mnt
605431     GRP_MntFishProducts
605432     GRP_MntGoldProds
605433     GRP_MntMeatProducts
605434     GRP_MntSweetProducts
605435     GRP_MntWines
605436     GRP_NumCatalogPurchases
605437     GRP_NumDistPurchases
605438     GRP_NumWebPurchases
605439     GRP_NumWebVisitsMonth
605440     GRP_RFMstat
605441     GRP_RMntFrq
605442     GRP_Recency
605443     Year_Birth
605444     DepVar;
MPRINT(EM_DIAGRAM):   keep GRP_AcceptedCmp5 GRP_AcceptedCmpTotal GRP_Frq GRP_Income GRP_Mnt 
GRP_MntFishProducts GRP_MntGoldProds GRP_MntMeatProducts GRP_MntSweetProducts GRP_MntWines 
GRP_NumCatalogPurchases GRP_NumDistPurchases GRP_NumWebPurchases GRP_NumWebVisitsMonth 
GRP_RFMstat GRP_RMntFrq GRP_Recency Year_Birth DepVar;
605445     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2374 observations read from the data set WORK._PTRAIN.
NOTE: The data set WORK._PTRAIN has 409 observations and 19 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   * Extract misfit validation values;
MPRINT(EM_DIAGRAM):   ;
605446     * Extract misfit validation values;
605447     ;
605448     data _pvalid;
MPRINT(EM_DIAGRAM):   data _pvalid;
605449     set _pvalid;
MPRINT(EM_DIAGRAM):   set _pvalid;
605450     if not (I__bin eq '1' and F__bin eq '1') then output;
MPRINT(EM_DIAGRAM):   if not (I__bin eq '1' and F__bin eq '1') then output;
605451     keep
605452     GRP_AcceptedCmp5
605453     GRP_AcceptedCmpTotal
605454     GRP_Frq
605455     GRP_Income
605456     GRP_Mnt
605457     GRP_MntFishProducts
605458     GRP_MntGoldProds
605459     GRP_MntMeatProducts
605460     GRP_MntSweetProducts
605461     GRP_MntWines
605462     GRP_NumCatalogPurchases
605463     GRP_NumDistPurchases
605464     GRP_NumWebPurchases
605465     GRP_NumWebVisitsMonth
605466     GRP_RFMstat
605467     GRP_RMntFrq
605468     GRP_Recency
605469     Year_Birth
605470     DepVar;
MPRINT(EM_DIAGRAM):   keep GRP_AcceptedCmp5 GRP_AcceptedCmpTotal GRP_Frq GRP_Income GRP_Mnt 
GRP_MntFishProducts GRP_MntGoldProds GRP_MntMeatProducts GRP_MntSweetProducts GRP_MntWines 
GRP_NumCatalogPurchases GRP_NumDistPurchases GRP_NumWebPurchases GRP_NumWebVisitsMonth 
GRP_RFMstat GRP_RMntFrq GRP_Recency Year_Birth DepVar;
605471     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1018 observations read from the data set WORK._PVALID.
NOTE: The data set WORK._PVALID has 203 observations and 19 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

605472     * Create training data set with binary target for modeling;
MPRINT(EM_DIAGRAM):    * Create training data set with binary target for modeling;
605473     ;
MPRINT(EM_DIAGRAM):   ;
605474     data _ptrain;
MPRINT(EM_DIAGRAM):   data _ptrain;
605475     length _bin $12;
MPRINT(EM_DIAGRAM):   length _bin $12;
605476     set _ptrain;
MPRINT(EM_DIAGRAM):   set _ptrain;
605477     _tmp=putn(DepVar, 'best.');
MPRINT(EM_DIAGRAM):   _tmp=putn(DepVar, 'best.');
605478     %DMNORMIP(_tmp);
MPRINT(DMNORMIP):   call dmnorm(_tmp,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
605479     _tmpLevel = '1';
MPRINT(EM_DIAGRAM):   _tmpLevel = '1';
605480     %DMNORMCP(_tmpLevel, _tmpLevel);
MPRINT(DMNORMCP):   _tmpLevel=dmnorm(_tmpLevel,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
605481     if _tmp eq _tmpLevel then _bin = '1';
MPRINT(EM_DIAGRAM):   if _tmp eq _tmpLevel then _bin = '1';
605482     else _bin = '0';
MPRINT(EM_DIAGRAM):   else _bin = '0';
605483     drop _tmp _tmpLevel
605484     ;
MPRINT(EM_DIAGRAM):   drop _tmp _tmpLevel ;
605485     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 409 observations read from the data set WORK._PTRAIN.
NOTE: The data set WORK._PTRAIN has 409 observations and 20 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

605486     * Create validation data set with binary target for modeling;
MPRINT(EM_DIAGRAM):    * Create validation data set with binary target for modeling;
605487     ;
MPRINT(EM_DIAGRAM):   ;
605488     data _pvalid;
MPRINT(EM_DIAGRAM):   data _pvalid;
605489     length _bin $12;
MPRINT(EM_DIAGRAM):   length _bin $12;
605490     set _pvalid;
MPRINT(EM_DIAGRAM):   set _pvalid;
605491     _tmp = putn(DepVar, 'best.');
MPRINT(EM_DIAGRAM):   _tmp = putn(DepVar, 'best.');
605492     %DMNORMIP(_TMP);
MPRINT(DMNORMIP):   call dmnorm(_TMP,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
605493     _tmpLevel = '1';
MPRINT(EM_DIAGRAM):   _tmpLevel = '1';
605494     %DMNORMCP(_tmpLevel, _tmpLevel);
MPRINT(DMNORMCP):   _tmpLevel=dmnorm(_tmpLevel,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
605495     if _tmp eq _tmpLevel then _bin = '1';
MPRINT(EM_DIAGRAM):   if _tmp eq _tmpLevel then _bin = '1';
605496     else _bin = '0';
MPRINT(EM_DIAGRAM):   else _bin = '0';
605497     drop _tmp
605498     ;
MPRINT(EM_DIAGRAM):   drop _tmp ;
605499     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 203 observations read from the data set WORK._PVALID.
NOTE: The data set WORK._PVALID has 203 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

605500     data _train;
MPRINT(EM_DIAGRAM):    data _train;
605501     set _ptrain;
MPRINT(EM_DIAGRAM):   set _ptrain;
605502     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 409 observations read from the data set WORK._PTRAIN.
NOTE: The data set WORK._TRAIN has 409 observations and 20 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

605503     data _valid;
MPRINT(EM_DIAGRAM):   data _valid;
605504     set _pvalid;
MPRINT(EM_DIAGRAM):   set _pvalid;
605505     options validvarname=any;
MPRINT(EM_DIAGRAM):   options validvarname=any;

NOTE: There were 203 observations read from the data set WORK._PVALID.
NOTE: The data set WORK._VALID has 203 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

605506     proc contents data=work._train out=_tempAdvisor noprint;
MPRINT(EM_DIAGRAM):   proc contents data=work._train out=_tempAdvisor noprint;
605507     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._TEMPADVISOR has 20 observations and 40 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

605508     options validvarname=V7;
MPRINT(EM_DIAGRAM):   options validvarname=V7;
605509     %let _dsidTable = 0;
605510     %let _engineTable =;
605511     data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
605512     dsid = open('work._train');
MPRINT(EM_DIAGRAM):   dsid = open('work._train');
605513     call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EM_DIAGRAM):   call symput('_dsidTable', strip(put(dsid, best.)));
605514     if dsid then do;
MPRINT(EM_DIAGRAM):   if dsid then do;
605515     call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EM_DIAGRAM):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
605516     dsid = close(dsid);
MPRINT(EM_DIAGRAM):   dsid = close(dsid);
605517     end;
MPRINT(EM_DIAGRAM):   end;
605518     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

605519     options fmterr;
MPRINT(EM_DIAGRAM):    options fmterr;
605520     data _metaTestView;
MPRINT(EM_DIAGRAM):   data _metaTestView;
605521     set work._train;
MPRINT(EM_DIAGRAM):   set work._train;
605522     if _N_=1 then do;
MPRINT(EM_DIAGRAM):   if _N_=1 then do;
605523     output;
MPRINT(EM_DIAGRAM):   output;
605524     stop;
MPRINT(EM_DIAGRAM):   stop;
605525     end;
MPRINT(EM_DIAGRAM):   end;
605526     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set WORK._TRAIN.
NOTE: The data set WORK._METATESTVIEW has 1 observations and 20 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

605527     proc contents data=work._train
605528     out=WORK.M1N8XRU1 noprint;
MPRINT(EM_DIAGRAM):    proc contents data=work._train out=WORK.M1N8XRU1 noprint;
605529     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK.M1N8XRU1 has 20 observations and 40 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

605530     data WORK.M1N8XRU1;
MPRINT(EM_DIAGRAM):    data WORK.M1N8XRU1;
605531     length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20 INDEX $ 1 INDEXTYPE $
605531   !  9;
MPRINT(EM_DIAGRAM):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20 INDEX $ 1 
INDEXTYPE $ 9;
605532     label NAME =;
MPRINT(EM_DIAGRAM):   label NAME =;
605533     set WORK.M1N8XRU1(keep=name type length label format formatl formatd informat
605533   ! informl informd idxusage rename=(type=itype));
MPRINT(EM_DIAGRAM):   set WORK.M1N8XRU1(keep=name type length label format formatl formatd 
informat informl informd idxusage rename=(type=itype));
605534     if itype = 1 then type = 'N';
MPRINT(EM_DIAGRAM):   if itype = 1 then type = 'N';
605535     else type = 'C';
MPRINT(EM_DIAGRAM):   else type = 'C';
605536     if formatl > 0 then do;
MPRINT(EM_DIAGRAM):   if formatl > 0 then do;
605537     if format ne ' ' then format = strip(format)!!strip(put(formatl,
605537   ! best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EM_DIAGRAM):   if format ne ' ' then format = strip(format)!!strip(put(formatl, 
best12.))!!'.'!!strip(put(formatd, best12.));
605538     else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EM_DIAGRAM):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, 
best12.));
605539     end;
MPRINT(EM_DIAGRAM):   end;
605540     else if format ne '' then format = strip(format)!!'.';
MPRINT(EM_DIAGRAM):   else if format ne '' then format = strip(format)!!'.';
605541     if informl > 0 then do;
MPRINT(EM_DIAGRAM):   if informl > 0 then do;
605542     if informat ne ' ' then informat = strip(informat)!!strip(put(informl,
605542   ! best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EM_DIAGRAM):   if informat ne ' ' then informat = strip(informat)!!strip(put(informl, 
best12.))!!'.'!!strip(put(informd, best12.));
605543     else informat = strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EM_DIAGRAM):   else informat = strip(put(informl, best12.))!!'.'!!strip(put(informd, 
best12.));
605544     end;
MPRINT(EM_DIAGRAM):   end;
605545     else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EM_DIAGRAM):   else if informat ne '' then informat = strip(informat)!!'.';
605546     if idxusage = 'NONE' then index ="N";
MPRINT(EM_DIAGRAM):   if idxusage = 'NONE' then index ="N";
605547     else index = "Y";
MPRINT(EM_DIAGRAM):   else index = "Y";
605548     indextype = idxusage;
MPRINT(EM_DIAGRAM):   indextype = idxusage;
605549     drop idxusage itype formatl formatd informl informd;
MPRINT(EM_DIAGRAM):   drop idxusage itype formatl formatd informl informd;
605550     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 20 observations read from the data set WORK.M1N8XRU1.
NOTE: The data set WORK.M1N8XRU1 has 20 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

605551     data WORK.M1N8XRU1;
MPRINT(EM_DIAGRAM):    data WORK.M1N8XRU1;
605552     length UNAME $64;
MPRINT(EM_DIAGRAM):   length UNAME $64;
605553     set WORK.M1N8XRU1;
MPRINT(EM_DIAGRAM):   set WORK.M1N8XRU1;
605554     UNAME = upcase(NAME);
MPRINT(EM_DIAGRAM):   UNAME = upcase(NAME);
605555     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 20 observations read from the data set WORK.M1N8XRU1.
NOTE: The data set WORK.M1N8XRU1 has 20 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):    proc sort data=WORK.M1KWNLHI NOTHREADS;
MPRINT(EM_DIAGRAM):   by UNAME;
MPRINT(EM_DIAGRAM):   run;
605559     data WORK.M1KWNLHI;
MPRINT(EM_DIAGRAM):    data WORK.M1KWNLHI;
605560     drop UNAME;
MPRINT(EM_DIAGRAM):   drop UNAME;
605561     set WORK.M1KWNLHI;
MPRINT(EM_DIAGRAM):   set WORK.M1KWNLHI;
605562     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 20 observations read from the data set WORK.M1KWNLHI.
NOTE: The data set WORK.M1KWNLHI has 20 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):    data WORK.M0OZKO9P(keep=NAME ATTR);
MPRINT(EM_DIAGRAM):   length ATTR $ 20;
MPRINT(EM_DIAGRAM):   set WORK.M1KWNLHI;
MPRINT(EM_DIAGRAM):   if level ne "INTERVAL" then do;
MPRINT(EM_DIAGRAM):   if order = ' ' then do;
MPRINT(EM_DIAGRAM):   attr = 'ORDER';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EM_DIAGRAM):   attr = 'FORMATTYPE';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if role = ' ' then do;
MPRINT(EM_DIAGRAM):   attr = 'ROLE';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if level = ' ' then do;
MPRINT(EM_DIAGRAM):   attr = 'LEVEL';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if type = ' ' then do;
MPRINT(EM_DIAGRAM):   attr = 'TYPE';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if index = ' ' then do;
MPRINT(EM_DIAGRAM):   attr = 'INDEX';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if report = ' ' then do;
MPRINT(EM_DIAGRAM):   attr = 'REPORT';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort NOTHREADS;
MPRINT(EM_DIAGRAM):   by attr;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.M1KWNLHI;
MPRINT(EM_DIAGRAM):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 FORMATTYPE $ 
10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EM_DIAGRAM):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EM_DIAGRAM):   set WORK.M1KWNLHI;
MPRINT(EM_DIAGRAM):   if formattype = ' ' then do;
MPRINT(EM_DIAGRAM):   if format ne ' ' then do;
MPRINT(EM_DIAGRAM):   if type = 'N' then do;
MPRINT(EM_DIAGRAM):   pos = indexc(format,'.1234567890');
MPRINT(EM_DIAGRAM):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EM_DIAGRAM):   else tempfmt = ' ';
MPRINT(EM_DIAGRAM):   flen = length(tempfmt);
MPRINT(EM_DIAGRAM):   select;
MPRINT(EM_DIAGRAM):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" 
"MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" 
"QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" "YEAR" "YYMMDD" "YYMON" 
"YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" 
"EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) 
formattype = 'DATE';
MPRINT(EM_DIAGRAM):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = "DATETIME";
MPRINT(EM_DIAGRAM):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) formattype = 
"TIME";
MPRINT(EM_DIAGRAM):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" 
"NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EM_DIAGRAM):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" "SSN" 
"Z" "ZD")) formattype = "CODING";
MPRINT(EM_DIAGRAM):   otherwise do;
MPRINT(EM_DIAGRAM):   formattype = "USER";
MPRINT(EM_DIAGRAM):   if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EM_DIAGRAM):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EM_DIAGRAM):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EM_DIAGRAM):   else if flen >= 4 then do;
MPRINT(EM_DIAGRAM):   str = substr(tempfmt,1,4);
MPRINT(EM_DIAGRAM):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EM_DIAGRAM):   else if str = "S370" then formattype = "CODING";
MPRINT(EM_DIAGRAM):   else if str = "BEST" then formattype = "NUM";
MPRINT(EM_DIAGRAM):   drop str;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = 
"DATE";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   drop flen tempfmt pos;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   formatType = "CATEGORY";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if formatType = "NUM" then do;
MPRINT(EM_DIAGRAM):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EM_DIAGRAM):   else formatType = "QUANTITY";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if level = ' ' then do;
MPRINT(EM_DIAGRAM):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then level = 
"NOMINAL";
MPRINT(EM_DIAGRAM):   else level = "INTERVAL";
MPRINT(EM_DIAGRAM):   levelAssigned = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else level = upcase(level);
MPRINT(EM_DIAGRAM):   if role = ' ' then do;
MPRINT(EM_DIAGRAM):   length name_prefix $8 _uname $64;
MPRINT(EM_DIAGRAM):   drop name_prefix _uname _freqflag;
MPRINT(EM_DIAGRAM):   retain _freqflag;
MPRINT(EM_DIAGRAM):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EM_DIAGRAM):   _uname = upcase(NAME);
MPRINT(EM_DIAGRAM):   select(_uname);
MPRINT(EM_DIAGRAM):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EM_DIAGRAM):   when('EM_SEGMENT') do;
MPRINT(EM_DIAGRAM):   ROLE = 'SEGMENT';
MPRINT(EM_DIAGRAM):   LEVEL = 'NOMINAL';
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   when('_NODE_') do;
MPRINT(EM_DIAGRAM):   ROLE = 'SEGMENT';
MPRINT(EM_DIAGRAM):   LEVEL = 'NOMINAL';
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EM_DIAGRAM):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EM_DIAGRAM):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EM_DIAGRAM):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EM_DIAGRAM):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EM_DIAGRAM):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EM_DIAGRAM):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EM_DIAGRAM):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EM_DIAGRAM):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EM_DIAGRAM):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EM_DIAGRAM):   when('URI') ROLE = 'URL';
MPRINT(EM_DIAGRAM):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EM_DIAGRAM):   otherwise do;
MPRINT(EM_DIAGRAM):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EM_DIAGRAM):   ROLE = 'REJECTED';
MPRINT(EM_DIAGRAM):   LEVEL = 'NOMINAL';
MPRINT(EM_DIAGRAM):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EM_DIAGRAM):   ROLE = 'FREQ';
MPRINT(EM_DIAGRAM):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EM_DIAGRAM):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   name_prefix = scan(_uname, 1, '_');
MPRINT(EM_DIAGRAM):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EM_DIAGRAM):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EM_DIAGRAM):   ROLE = 'CLASSIFICATION';
MPRINT(EM_DIAGRAM):   LEVEL = 'NOMINAL';
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EM_DIAGRAM):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 'RAS', 
'RAT') then ROLE = 'RESIDUAL';
MPRINT(EM_DIAGRAM):   else if name_prefix ='D' then do;
MPRINT(EM_DIAGRAM):   ROLE = 'DECISION';
MPRINT(EM_DIAGRAM):   LEVEL = 'NOMINAL';
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if name_prefix ='B' then do;
MPRINT(EM_DIAGRAM):   ROLE = 'SEGMENT';
MPRINT(EM_DIAGRAM):   LEVEL = 'NOMINAL';
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 'ROI', 
'IC') then ROLE = 'ASSESS';
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   array _ROLE_ (19) $32 _TEMPORARY_ ('ASSESS','CLASSIFICATION','CENSOR', 
'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 
'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 
'TIMEID');
MPRINT(EM_DIAGRAM):   drop _found_ i;
MPRINT(EM_DIAGRAM):   _found_=0;
MPRINT(EM_DIAGRAM):   do i=1 to 19 until(_found_=1);
MPRINT(EM_DIAGRAM):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EM_DIAGRAM):   ROLE=_ROLE_{i};
MPRINT(EM_DIAGRAM):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EM_DIAGRAM):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EM_DIAGRAM):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EM_DIAGRAM):   _found_=1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if length(_uname)>2 then do;
MPRINT(EM_DIAGRAM):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EM_DIAGRAM):   ROLE = 'ID';
MPRINT(EM_DIAGRAM):   LEVEL = 'NOMINAL';
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EM_DIAGRAM):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if role = ' ' then do;
MPRINT(EM_DIAGRAM):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EM_DIAGRAM):   else role = 'INPUT';
MPRINT(EM_DIAGRAM):   roleAssigned = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else role = upcase(role);
MPRINT(EM_DIAGRAM):   if REPORT = '' then REPORT = 'N';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * DMDBClass Macro ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(HPDM_PERFORMANCE):  ;
PERFORMANCE  DETAILS
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):    proc dmdb data=work._train(obs=1000000) batch classOut=_DMDB2FICHAW 
maxLevel=22;
MPRINT(EM_DIAGRAM):   class
MPRINT(DMDBCLASS):   DepVar GRP_AcceptedCmp5 GRP_AcceptedCmpTotal GRP_Frq GRP_Income GRP_Mnt 
GRP_MntFishProducts GRP_MntGoldProds GRP_MntMeatProducts GRP_MntSweetProducts GRP_MntWines 
GRP_NumCatalogPurchases GRP_NumDistPurchases GRP_NumWebPurchases GRP_NumWebVisitsMonth 
GRP_Recency GRP_RFMstat GRP_RMntFrq Year_Birth _bin
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    proc freq data=_DMDB2FICHAW noprint;
MPRINT(EM_DIAGRAM):   table name / out=_DMDBCOUNT2FICHAW(drop=percent rename=(count=NLEVEL));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _MISS2FICHAW(rename=(frequency=NMISS));
MPRINT(EM_DIAGRAM):   set _DMDB2FICHAW(where=(NRAW=. and CRAW=''));
MPRINT(EM_DIAGRAM):   keep name frequency;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_MISS2FICHAW;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_DMDBCOUNT2FICHAW;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _COUNTS2FICHAW;
MPRINT(EM_DIAGRAM):   merge _DMDBCOUNT2FICHAW _MISS2FICHAW;
MPRINT(EM_DIAGRAM):   label NLEVEL= 'Number of Category';
MPRINT(EM_DIAGRAM):   by name;
MPRINT(EM_DIAGRAM):   if NMISS > 0 then do;
MPRINT(EM_DIAGRAM):   NLEVEL= NLEVEL-1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else NMISS = 0;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    proc sort data=_COUNTS2FICHAW NOTHREADS;
MPRINT(EM_DIAGRAM):   by name;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.M1KWNLHI NOTHREADS;
MPRINT(EM_DIAGRAM):   by name;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data WORK.M1KWNLHI;
MPRINT(EM_DIAGRAM):   length NLEVEL 8 nmiss 8;
MPRINT(EM_DIAGRAM):   update WORK.M1KWNLHI _COUNTS2FICHAW;
MPRINT(EM_DIAGRAM):   by name;
MPRINT(EM_DIAGRAM):   if name='' then name='_';
MPRINT(EM_DIAGRAM):   if levelAssigned and ROLE ne 'FREQ' then do;
MPRINT(EM_DIAGRAM):   select(NLEVEL);
MPRINT(EM_DIAGRAM):   when(.) do;
MPRINT(EM_DIAGRAM):   if type eq 'C' then level = 'NOMINAL';
MPRINT(EM_DIAGRAM):   else level = 'INTERVAL';
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   when(0) level = 'UNARY';
MPRINT(EM_DIAGRAM):   when(1) level = 'UNARY';
MPRINT(EM_DIAGRAM):   when(2) level = 'BINARY';
MPRINT(EM_DIAGRAM):   otherwise do;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if roleAssigned then do;
MPRINT(EM_DIAGRAM):   if level = 'NOMINAL' and NLEVEL > 20 then do;
MPRINT(EM_DIAGRAM):   role = 'REJECTED';
MPRINT(EM_DIAGRAM):   comment = "Exceeds maximum number of levels cutoff";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if level = 'UNARY' and ROLE ne 'FREQ' then role='REJECTED';
MPRINT(EM_DIAGRAM):   drop NLEVEL nmiss;
MPRINT(EM_DIAGRAM):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= 
"Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= 
"Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower limit" UPPERLIMIT= 
"Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= 
"Label" LENGTH= "Length";
MPRINT(EM_DIAGRAM):   drop levelAssigned roleAssigned;
MPRINT(EM_DIAGRAM):   run;
605846     data WORK.M2UWUMIX;
MPRINT(EM_DIAGRAM):    data WORK.M2UWUMIX;
605847     set WORK.M2UWUMIX;
MPRINT(EM_DIAGRAM):   set WORK.M2UWUMIX;
605848     if NAME='Element1' then delete;
MPRINT(EM_DIAGRAM):   if NAME='Element1' then delete;
605849     if NAME='Element2' then delete;
MPRINT(EM_DIAGRAM):   if NAME='Element2' then delete;
605850     if NAME='Element3' then delete;
MPRINT(EM_DIAGRAM):   if NAME='Element3' then delete;
605851     if NAME='Element4' then delete;
MPRINT(EM_DIAGRAM):   if NAME='Element4' then delete;
605852     if NAME='Group' then delete;
MPRINT(EM_DIAGRAM):   if NAME='Group' then delete;
605853     if NAME='Z_CostContact' then delete;
MPRINT(EM_DIAGRAM):   if NAME='Z_CostContact' then delete;
605854     if NAME='Z_Revenue' then delete;
MPRINT(EM_DIAGRAM):   if NAME='Z_Revenue' then delete;
605855     if NAME='_WARN_' then delete;
MPRINT(EM_DIAGRAM):   if NAME='_WARN_' then delete;
605856     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 20 observations read from the data set WORK.M2UWUMIX.
NOTE: The data set WORK.M2UWUMIX has 20 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

605857     data WORK.M1DT7QO6;
MPRINT(EM_DIAGRAM):    data WORK.M1DT7QO6;
605858     set WORK.M1DT7QO6;
MPRINT(EM_DIAGRAM):   set WORK.M1DT7QO6;
605859     if role='INPUT' and use='D' then use='Y';
MPRINT(EM_DIAGRAM):   if role='INPUT' and use='D' then use='Y';
605860     if NAME='_bin' then do;
MPRINT(EM_DIAGRAM):   if NAME='_bin' then do;
605861     ROLE='TARGET';
MPRINT(EM_DIAGRAM):   ROLE='TARGET';
605862     LEVEL='BINARY';
MPRINT(EM_DIAGRAM):   LEVEL='BINARY';
605863     USE='Y';
MPRINT(EM_DIAGRAM):   USE='Y';
605864     end;
MPRINT(EM_DIAGRAM):   end;
605865     if NAME='DepVar' then do;
MPRINT(EM_DIAGRAM):   if NAME='DepVar' then do;
605866     ROLE='REJECTED';
MPRINT(EM_DIAGRAM):   ROLE='REJECTED';
605867     end;
MPRINT(EM_DIAGRAM):   end;
605868     if NAME='Element1' then delete;
MPRINT(EM_DIAGRAM):   if NAME='Element1' then delete;
605869     if NAME='Element2' then delete;
MPRINT(EM_DIAGRAM):   if NAME='Element2' then delete;
605870     if NAME='Element3' then delete;
MPRINT(EM_DIAGRAM):   if NAME='Element3' then delete;
605871     if NAME='Element4' then delete;
MPRINT(EM_DIAGRAM):   if NAME='Element4' then delete;
605872     if NAME='Group' then delete;
MPRINT(EM_DIAGRAM):   if NAME='Group' then delete;
605873     if NAME='Z_CostContact' then delete;
MPRINT(EM_DIAGRAM):   if NAME='Z_CostContact' then delete;
605874     if NAME='Z_Revenue' then delete;
MPRINT(EM_DIAGRAM):   if NAME='Z_Revenue' then delete;
605875     if NAME='_WARN_' then delete;
MPRINT(EM_DIAGRAM):   if NAME='_WARN_' then delete;
605876     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 21 observations read from the data set WORK.M1DT7QO6.
NOTE: The data set WORK.M1DT7QO6 has 21 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

605877     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
605878     * Binary Model DepVar = 1;
MPRINT(EM_DIAGRAM):   * Binary Model DepVar = 1;
605879     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
605880     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
605881     * REGRESSION MODEL DepVar binary BIN2;
MPRINT(EM_DIAGRAM):   * REGRESSION MODEL DepVar binary BIN2;
605882     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
605883     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
605884     * Rule3: Create decision matrix;
MPRINT(EM_DIAGRAM):   * Rule3: Create decision matrix;
605885     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
605886     data EM_DMREG / view=EM_DMREG;
MPRINT(EM_DIAGRAM):   data EM_DMREG / view=EM_DMREG;
605887     set work._train(keep=
605888     DepVar GRP_AcceptedCmp5 GRP_AcceptedCmpTotal GRP_Frq GRP_Income GRP_Mnt
605889     GRP_MntFishProducts GRP_MntGoldProds GRP_MntMeatProducts GRP_MntSweetProducts
605890     GRP_MntWines GRP_NumCatalogPurchases GRP_NumDistPurchases GRP_NumWebPurchases
605891     GRP_NumWebVisitsMonth GRP_RFMstat GRP_RMntFrq GRP_Recency Year_Birth _bin);
MPRINT(EM_DIAGRAM):   set work._train(keep= DepVar GRP_AcceptedCmp5 GRP_AcceptedCmpTotal 
GRP_Frq GRP_Income GRP_Mnt GRP_MntFishProducts GRP_MntGoldProds GRP_MntMeatProducts 
GRP_MntSweetProducts GRP_MntWines GRP_NumCatalogPurchases GRP_NumDistPurchases 
GRP_NumWebPurchases GRP_NumWebVisitsMonth GRP_RFMstat GRP_RMntFrq GRP_Recency Year_Birth _bin);
605892     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: DATA STEP view saved on file WORK.EM_DMREG.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * Rule3: DMDBClass Macro ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
605893     *------------------------------------------------------------* ;
605894     * Rule3: DMDBClass Macro ;
605895     *------------------------------------------------------------* ;
605896     %macro DMDBClass;
605897         DepVar(ASC) GRP_AcceptedCmp5(ASC) GRP_AcceptedCmpTotal(ASC) GRP_Frq(ASC)
605898        GRP_Income(ASC) GRP_Mnt(ASC) GRP_MntFishProducts(ASC) GRP_MntGoldProds(ASC)
605899        GRP_MntMeatProducts(ASC) GRP_MntSweetProducts(ASC) GRP_MntWines(ASC)
605900        GRP_NumCatalogPurchases(ASC) GRP_NumDistPurchases(ASC) GRP_NumWebPurchases(ASC)
605901        GRP_NumWebVisitsMonth(ASC) GRP_RFMstat(ASC) GRP_RMntFrq(ASC) GRP_Recency(ASC)
605902        _bin(DESC)
605903     %mend DMDBClass;
605904     *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
605905     * Rule3: DMDBVar Macro ;
MPRINT(EM_DIAGRAM):   * Rule3: DMDBVar Macro ;
605906     *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
605907     %macro DMDBVar;
605908         Year_Birth
605909     %mend DMDBVar;
605910     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
605911     * Rule3: Create DMDB;
MPRINT(EM_DIAGRAM):   * Rule3: Create DMDB;
605912     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
605913     proc dmdb batch data=WORK.EM_DMREG
605914     dmdbcat=WORK.Rule3_DMDB
605915     maxlevel = 513
605916     ;
MPRINT(EM_DIAGRAM):   proc dmdb batch data=WORK.EM_DMREG dmdbcat=WORK.Rule3_DMDB maxlevel = 
513 ;
MPRINT(EM_DIAGRAM):   class
605917     class %DMDBClass;
MPRINT(DMDBCLASS):   DepVar(ASC) GRP_AcceptedCmp5(ASC) GRP_AcceptedCmpTotal(ASC) GRP_Frq(ASC) 
GRP_Income(ASC) GRP_Mnt(ASC) GRP_MntFishProducts(ASC) GRP_MntGoldProds(ASC) 
GRP_MntMeatProducts(ASC) GRP_MntSweetProducts(ASC) GRP_MntWines(ASC) 
GRP_NumCatalogPurchases(ASC) GRP_NumDistPurchases(ASC) GRP_NumWebPurchases(ASC) 
GRP_NumWebVisitsMonth(ASC) GRP_RFMstat(ASC) GRP_RMntFrq(ASC) GRP_Recency(ASC) _bin(DESC)
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   var
605918     var %DMDBVar;
MPRINT(DMDBVAR):   Year_Birth
MPRINT(EM_DIAGRAM):  ;
605919     target
605920     _bin
605921     ;
MPRINT(EM_DIAGRAM):   target _bin ;
605922     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Records processed = 409   Memory used = 511K.
NOTE: View WORK.EM_DMREG.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
NOTE: There were 409 observations read from the data set WORK._TRAIN.
NOTE: There were 409 observations read from the data set WORK.EM_DMREG.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):   *--- end code ---*;
605923     quit;
605924     *--- end code ---*;

605925     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
605926     * Rule3: Run DMREG procedure;
MPRINT(EM_DIAGRAM):   * Rule3: Run DMREG procedure;
605927     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
605928     proc dmreg data=EM_DMREG dmdbcat=WORK.Rule3_DMDB
605929     validata = work._valid
605930     outest = WORK.DMREG_1OHHU03_OUTEST
605931     outterms = WORK.DMREG_1OHHU03_OUTTERMS
605932     outmap= WORK.DMREG_1OHHU03_MAP namelen=200
605933     ;
MPRINT(EM_DIAGRAM):   proc dmreg data=EM_DMREG dmdbcat=WORK.Rule3_DMDB validata = work._valid 
outest = WORK.DMREG_1OHHU03_OUTEST outterms = WORK.DMREG_1OHHU03_OUTTERMS outmap= 
WORK.DMREG_1OHHU03_MAP namelen=200 ;
605934     class
605935     _bin
605936     GRP_AcceptedCmp5
605937     GRP_AcceptedCmpTotal
605938     GRP_Frq
605939     GRP_Income
605940     GRP_Mnt
605941     GRP_MntFishProducts
605942     GRP_MntGoldProds
605943     GRP_MntMeatProducts
605944     GRP_MntSweetProducts
605945     GRP_MntWines
605946     GRP_NumCatalogPurchases
605947     GRP_NumDistPurchases
605948     GRP_NumWebPurchases
605949     GRP_NumWebVisitsMonth
605950     GRP_RFMstat
605951     GRP_RMntFrq
605952     GRP_Recency
605953     ;
MPRINT(EM_DIAGRAM):   class _bin GRP_AcceptedCmp5 GRP_AcceptedCmpTotal GRP_Frq GRP_Income 
GRP_Mnt GRP_MntFishProducts GRP_MntGoldProds GRP_MntMeatProducts GRP_MntSweetProducts 
GRP_MntWines GRP_NumCatalogPurchases GRP_NumDistPurchases GRP_NumWebPurchases 
GRP_NumWebVisitsMonth GRP_RFMstat GRP_RMntFrq GRP_Recency ;
605954     model _bin =
605955     GRP_AcceptedCmp5
605956     GRP_AcceptedCmpTotal
605957     GRP_Frq
605958     GRP_Income
605959     GRP_Mnt
605960     GRP_MntFishProducts
605961     GRP_MntGoldProds
605962     GRP_MntMeatProducts
605963     GRP_MntSweetProducts
605964     GRP_MntWines
605965     GRP_NumCatalogPurchases
605966     GRP_NumDistPurchases
605967     GRP_NumWebPurchases
605968     GRP_NumWebVisitsMonth
605969     GRP_RFMstat
605970     GRP_RMntFrq
605971     GRP_Recency
605972     Year_Birth
605973     /error=binomial link=LOGIT
605974     coding=DEVIATION
605975     nodesignprint
605976     ;
MPRINT(EM_DIAGRAM):   model _bin = GRP_AcceptedCmp5 GRP_AcceptedCmpTotal GRP_Frq GRP_Income 
GRP_Mnt GRP_MntFishProducts GRP_MntGoldProds GRP_MntMeatProducts GRP_MntSweetProducts 
GRP_MntWines GRP_NumCatalogPurchases GRP_NumDistPurchases GRP_NumWebPurchases 
GRP_NumWebVisitsMonth GRP_RFMstat GRP_RMntFrq GRP_Recency Year_Birth /error=binomial 
link=LOGIT coding=DEVIATION nodesignprint ;
605977     ;
MPRINT(EM_DIAGRAM):   ;
605978     score data=_train
605979     out=_ptrain(label="")
605980     ;
MPRINT(EM_DIAGRAM):   score data=_train out=_ptrain(label="") ;
605981     score data=_valid
605982     out=_pvalid(label="")
605983     ;
MPRINT(EM_DIAGRAM):   score data=_valid out=_pvalid(label="") ;
605984     code file="C:\Users\LUKASF~1\AppData\Local\Temp\SAS Temporary
605984   ! Files\_TD115000_WN7LF-LEAVE_\Prc2\BIN2.sas"
605985     group=Rule3_2
605986     ;
MPRINT(EM_DIAGRAM):   code file="C:\Users\LUKASF~1\AppData\Local\Temp\SAS Temporary 
Files\_TD115000_WN7LF-LEAVE_\Prc2\BIN2.sas" group=Rule3_2 ;
605987     code file="C:\Users\LUKASF~1\AppData\Local\Temp\SAS Temporary
605987   ! Files\_TD115000_WN7LF-LEAVE_\Prc2\BIN2_res.sas"
605988     group=Rule3_2
605989     residual
605990     ;
MPRINT(EM_DIAGRAM):   code file="C:\Users\LUKASF~1\AppData\Local\Temp\SAS Temporary 
Files\_TD115000_WN7LF-LEAVE_\Prc2\BIN2_res.sas" group=Rule3_2 residual ;
605991     run;
MPRINT(EM_DIAGRAM):   run;


NOTE: PROC DMREG is modeling the probability that _bin='1'.
NOTE: Convergence criterion (FCONV=0.0001) satisfied.
NOTE: At least one element of the gradient is greater than 1e-3.
NOTE: External file C:\Users\LUKASF~1\AppData\Local\Temp\SAS Temporary 
      Files\_TD115000_WN7LF-LEAVE_\Prc2\BIN2.sas opened.
NOTE: External file C:\Users\LUKASF~1\AppData\Local\Temp\SAS Temporary 
      Files\_TD115000_WN7LF-LEAVE_\Prc2\BIN2_res.sas opened.
NOTE: View WORK.EM_DMREG.VIEW used (Total process time):
      real time           0.20 seconds
      cpu time            0.20 seconds
      
NOTE: There were 409 observations read from the data set WORK._TRAIN.
NOTE: There were 409 observations read from the data set WORK.EM_DMREG.
NOTE: There were 203 observations read from the data set WORK._VALID.
NOTE: There were 409 observations read from the data set WORK._TRAIN.
NOTE: There were 203 observations read from the data set WORK._VALID.
NOTE: The data set WORK.DMREG_1OHHU03_OUTEST has 3 observations and 161 variables.
NOTE: The data set WORK.DMREG_1OHHU03_OUTTERMS has 127 observations and 6 variables.
NOTE: The data set WORK.DMREG_1OHHU03_MAP has 2 observations and 128 variables.
NOTE: The data set WORK._PTRAIN has 409 observations and 29 variables.
NOTE: The data set WORK._PVALID has 203 observations and 30 variables.
NOTE: The PROCEDURE DMREG printed pages 596-597.
NOTE: PROCEDURE DMREG used (Total process time):
      real time           0.21 seconds
      cpu time            0.21 seconds
      

MPRINT(EM_DIAGRAM):   quit;
605992     quit;

605993     proc datasets lib=WORK nolist;
MPRINT(EM_DIAGRAM):    proc datasets lib=WORK nolist;
605994     delete Rule3_DMDB;
MPRINT(EM_DIAGRAM):   delete Rule3_DMDB;
605995     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file WORK.RULE3_DMDB (memtype=DATA) was not found, but appears on a DELETE statement.
605996     quit;
MPRINT(EM_DIAGRAM):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

605997     proc datasets lib=WORK nolist;
MPRINT(EM_DIAGRAM):    proc datasets lib=WORK nolist;
605998     delete Rule3_DMDB / memtype=catalog;
MPRINT(EM_DIAGRAM):   delete Rule3_DMDB / memtype=catalog;
605999     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Deleting WORK.RULE3_DMDB (memtype=CATALOG).
606000     quit;
MPRINT(EM_DIAGRAM):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      

606001     * BINARY: Training Classification;
MPRINT(EM_DIAGRAM):    * BINARY: Training Classification;
606002     ;
MPRINT(EM_DIAGRAM):   ;
606003     proc freq data = _ptrain noprint;
MPRINT(EM_DIAGRAM):   proc freq data = _ptrain noprint;
606004     tables F__bin * I__bin / out = _count;
MPRINT(EM_DIAGRAM):   tables F__bin * I__bin / out = _count;
606005     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 409 observations read from the data set WORK._PTRAIN.
NOTE: The data set WORK._COUNT has 4 observations and 4 variables.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

606006     data _count;
MPRINT(EM_DIAGRAM):   data _count;
606007     set _count;
MPRINT(EM_DIAGRAM):   set _count;
606008     label count = "%sysfunc(sasmsg(sashelp.dmine, rpt_traincount_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label count = "Train Count";
606009     label percent = "%sysfunc(sasmsg(sashelp.dmine, rpt_trainpercent_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label percent = "Train Percent";
606010     label F__bin = "%sysfunc(sasmsg(sashelp.dmine, rpt_from_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label F__bin = "From";
606011     label I__bin = "%sysfunc(sasmsg(sashelp.dmine, rpt_into_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label I__bin = "Into";
606012     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._COUNT.
NOTE: The data set WORK._COUNT has 4 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   * BINARY: Validation Classification;
MPRINT(EM_DIAGRAM):   ;
606013     * BINARY: Validation Classification;
606014     ;
606015     proc freq data = _pvalid noprint;
MPRINT(EM_DIAGRAM):   proc freq data = _pvalid noprint;
606016     tables f__bin * i__bin / out=_vcount;
MPRINT(EM_DIAGRAM):   tables f__bin * i__bin / out=_vcount;
606017     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 203 observations read from the data set WORK._PVALID.
NOTE: The data set WORK._VCOUNT has 4 observations and 4 variables.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

606018     data _vcount;
MPRINT(EM_DIAGRAM):   data _vcount;
606019     set _vcount;
MPRINT(EM_DIAGRAM):   set _vcount;
606020     length key $64;
MPRINT(EM_DIAGRAM):   length key $64;
606021     label count = "%sysfunc(sasmsg(sashelp.dmine, rpt_validcount_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label count = "Valid Count";
606022     label percent = "%sysfunc(sasmsg(sashelp.dmine, rpt_validpercent_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label percent = "Valid Percent";
606023     label f__bin = "%sysfunc(sasmsg(sashelp.dmine, rpt_from_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label f__bin = "From";
606024     label i__bin = "%sysfunc(sasmsg(sashelp.dmine, rpt_into_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label i__bin = "Into";
606025     rename count = vcount;
MPRINT(EM_DIAGRAM):   rename count = vcount;
606026     rename percent= vpercent;
MPRINT(EM_DIAGRAM):   rename percent= vpercent;
606027     key = ktrim(kleft(f__bin) !! '_' !! ktrim(kleft(i__bin)));
MPRINT(EM_DIAGRAM):   key = ktrim(kleft(f__bin) !! '_' !! ktrim(kleft(i__bin)));
606028     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._VCOUNT.
NOTE: The data set WORK._VCOUNT has 4 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   *;
606029     *;
606030     data _count;
MPRINT(EM_DIAGRAM):   data _count;
606031     set _count;
MPRINT(EM_DIAGRAM):   set _count;
606032     length key $64;
MPRINT(EM_DIAGRAM):   length key $64;
606033     key = ktrim(kleft(f__bin) !! '_' !! ktrim(kleft(i__bin)));
MPRINT(EM_DIAGRAM):   key = ktrim(kleft(f__bin) !! '_' !! ktrim(kleft(i__bin)));
606034     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._COUNT.
NOTE: The data set WORK._COUNT has 4 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.60 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   * Merge Train and Valid classification;
MPRINT(EM_DIAGRAM):   ;
606035     * Merge Train and Valid classification;
606036     ;
606037     proc sort data=_count;
MPRINT(EM_DIAGRAM):   proc sort data=_count;
606038     by key;
MPRINT(EM_DIAGRAM):   by key;
606039     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._COUNT.
NOTE: The data set WORK._COUNT has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

606040     proc sort data=_vcount;
MPRINT(EM_DIAGRAM):   proc sort data=_vcount;
606041     by key;
MPRINT(EM_DIAGRAM):   by key;
606042     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._VCOUNT.
NOTE: The data set WORK._VCOUNT has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   *;
606043     *;
606044     data _count;
MPRINT(EM_DIAGRAM):   data _count;
606045     merge _count _vcount;
MPRINT(EM_DIAGRAM):   merge _count _vcount;
606046     by key;
MPRINT(EM_DIAGRAM):   by key;
606047     drop key;
MPRINT(EM_DIAGRAM):   drop key;
606048     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._COUNT.
NOTE: There were 4 observations read from the data set WORK._VCOUNT.
NOTE: The data set WORK._COUNT has 4 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   *BINARY: Print Classification;
MPRINT(EM_DIAGRAM):   ;
606049     *BINARY: Print Classification;
606050     ;
606051     title9 "%sysfunc(sasmsg(sashelp.dmine, rpt_binmodel_title, NOQUOTE, DepVar,
606051   ! %nrbquote(1)))";
MPRINT(EM_DIAGRAM):   title9 "Binary Model DepVar = 1";
606052     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_classification_title, NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Classification Table";
606053     proc print data = _count noobs label;
MPRINT(EM_DIAGRAM):   proc print data = _count noobs label;
606054     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._COUNT.
NOTE: The PROCEDURE PRINT printed page 598.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

606055     title9;
MPRINT(EM_DIAGRAM):   title9;
606056     title10;
MPRINT(EM_DIAGRAM):   title10;
606057     * Extract misfit training values;
MPRINT(EM_DIAGRAM):    * Extract misfit training values;
606058     ;
MPRINT(EM_DIAGRAM):   ;
606059     data _ptrain;
MPRINT(EM_DIAGRAM):   data _ptrain;
606060     set _ptrain;
MPRINT(EM_DIAGRAM):   set _ptrain;
606061     if not ( I__bin eq '1' and F__bin eq '1') then output;
MPRINT(EM_DIAGRAM):   if not ( I__bin eq '1' and F__bin eq '1') then output;
606062     keep
606063     GRP_AcceptedCmp5
606064     GRP_AcceptedCmpTotal
606065     GRP_Frq
606066     GRP_Income
606067     GRP_Mnt
606068     GRP_MntFishProducts
606069     GRP_MntGoldProds
606070     GRP_MntMeatProducts
606071     GRP_MntSweetProducts
606072     GRP_MntWines
606073     GRP_NumCatalogPurchases
606074     GRP_NumDistPurchases
606075     GRP_NumWebPurchases
606076     GRP_NumWebVisitsMonth
606077     GRP_RFMstat
606078     GRP_RMntFrq
606079     GRP_Recency
606080     Year_Birth
606081     DepVar;
MPRINT(EM_DIAGRAM):   keep GRP_AcceptedCmp5 GRP_AcceptedCmpTotal GRP_Frq GRP_Income GRP_Mnt 
GRP_MntFishProducts GRP_MntGoldProds GRP_MntMeatProducts GRP_MntSweetProducts GRP_MntWines 
GRP_NumCatalogPurchases GRP_NumDistPurchases GRP_NumWebPurchases GRP_NumWebVisitsMonth 
GRP_RFMstat GRP_RMntFrq GRP_Recency Year_Birth DepVar;
606082     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 409 observations read from the data set WORK._PTRAIN.
NOTE: The data set WORK._PTRAIN has 58 observations and 19 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   * Extract misfit validation values;
MPRINT(EM_DIAGRAM):   ;
606083     * Extract misfit validation values;
606084     ;
606085     data _pvalid;
MPRINT(EM_DIAGRAM):   data _pvalid;
606086     set _pvalid;
MPRINT(EM_DIAGRAM):   set _pvalid;
606087     if not (I__bin eq '1' and F__bin eq '1') then output;
MPRINT(EM_DIAGRAM):   if not (I__bin eq '1' and F__bin eq '1') then output;
606088     keep
606089     GRP_AcceptedCmp5
606090     GRP_AcceptedCmpTotal
606091     GRP_Frq
606092     GRP_Income
606093     GRP_Mnt
606094     GRP_MntFishProducts
606095     GRP_MntGoldProds
606096     GRP_MntMeatProducts
606097     GRP_MntSweetProducts
606098     GRP_MntWines
606099     GRP_NumCatalogPurchases
606100     GRP_NumDistPurchases
606101     GRP_NumWebPurchases
606102     GRP_NumWebVisitsMonth
606103     GRP_RFMstat
606104     GRP_RMntFrq
606105     GRP_Recency
606106     Year_Birth
606107     DepVar;
MPRINT(EM_DIAGRAM):   keep GRP_AcceptedCmp5 GRP_AcceptedCmpTotal GRP_Frq GRP_Income GRP_Mnt 
GRP_MntFishProducts GRP_MntGoldProds GRP_MntMeatProducts GRP_MntSweetProducts GRP_MntWines 
GRP_NumCatalogPurchases GRP_NumDistPurchases GRP_NumWebPurchases GRP_NumWebVisitsMonth 
GRP_RFMstat GRP_RMntFrq GRP_Recency Year_Birth DepVar;
606108     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 203 observations read from the data set WORK._PVALID.
NOTE: The data set WORK._PVALID has 64 observations and 19 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

606109     data _train;
MPRINT(EM_DIAGRAM):    data _train;
606110     set _ptrain;
MPRINT(EM_DIAGRAM):   set _ptrain;
606111     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 58 observations read from the data set WORK._PTRAIN.
NOTE: The data set WORK._TRAIN has 58 observations and 19 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

606112     data _valid;
MPRINT(EM_DIAGRAM):   data _valid;
606113     set _pvalid;
MPRINT(EM_DIAGRAM):   set _pvalid;
606114     options validvarname=any;
MPRINT(EM_DIAGRAM):   options validvarname=any;

NOTE: There were 64 observations read from the data set WORK._PVALID.
NOTE: The data set WORK._VALID has 64 observations and 19 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

606115     proc contents data=work._train out=_tempAdvisor noprint;
MPRINT(EM_DIAGRAM):   proc contents data=work._train out=_tempAdvisor noprint;
606116     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._TEMPADVISOR has 19 observations and 40 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

606117     options validvarname=V7;
MPRINT(EM_DIAGRAM):   options validvarname=V7;
606118     %let _dsidTable = 0;
606119     %let _engineTable =;
606120     data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
606121     dsid = open('work._train');
MPRINT(EM_DIAGRAM):   dsid = open('work._train');
606122     call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EM_DIAGRAM):   call symput('_dsidTable', strip(put(dsid, best.)));
606123     if dsid then do;
MPRINT(EM_DIAGRAM):   if dsid then do;
606124     call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EM_DIAGRAM):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
606125     dsid = close(dsid);
MPRINT(EM_DIAGRAM):   dsid = close(dsid);
606126     end;
MPRINT(EM_DIAGRAM):   end;
606127     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

606128     options fmterr;
MPRINT(EM_DIAGRAM):    options fmterr;
606129     data _metaTestView;
MPRINT(EM_DIAGRAM):   data _metaTestView;
606130     set work._train;
MPRINT(EM_DIAGRAM):   set work._train;
606131     if _N_=1 then do;
MPRINT(EM_DIAGRAM):   if _N_=1 then do;
606132     output;
MPRINT(EM_DIAGRAM):   output;
606133     stop;
MPRINT(EM_DIAGRAM):   stop;
606134     end;
MPRINT(EM_DIAGRAM):   end;
606135     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set WORK._TRAIN.
NOTE: The data set WORK._METATESTVIEW has 1 observations and 19 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

606136     proc contents data=work._train
606137     out=WORK.M31I18MF noprint;
MPRINT(EM_DIAGRAM):    proc contents data=work._train out=WORK.M31I18MF noprint;
606138     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK.M31I18MF has 19 observations and 40 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

606139     data WORK.M31I18MF;
MPRINT(EM_DIAGRAM):    data WORK.M31I18MF;
606140     length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20 INDEX $ 1 INDEXTYPE $
606140   !  9;
MPRINT(EM_DIAGRAM):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20 INDEX $ 1 
INDEXTYPE $ 9;
606141     label NAME =;
MPRINT(EM_DIAGRAM):   label NAME =;
606142     set WORK.M31I18MF(keep=name type length label format formatl formatd informat
606142   ! informl informd idxusage rename=(type=itype));
MPRINT(EM_DIAGRAM):   set WORK.M31I18MF(keep=name type length label format formatl formatd 
informat informl informd idxusage rename=(type=itype));
606143     if itype = 1 then type = 'N';
MPRINT(EM_DIAGRAM):   if itype = 1 then type = 'N';
606144     else type = 'C';
MPRINT(EM_DIAGRAM):   else type = 'C';
606145     if formatl > 0 then do;
MPRINT(EM_DIAGRAM):   if formatl > 0 then do;
606146     if format ne ' ' then format = strip(format)!!strip(put(formatl,
606146   ! best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EM_DIAGRAM):   if format ne ' ' then format = strip(format)!!strip(put(formatl, 
best12.))!!'.'!!strip(put(formatd, best12.));
606147     else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EM_DIAGRAM):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, 
best12.));
606148     end;
MPRINT(EM_DIAGRAM):   end;
606149     else if format ne '' then format = strip(format)!!'.';
MPRINT(EM_DIAGRAM):   else if format ne '' then format = strip(format)!!'.';
606150     if informl > 0 then do;
MPRINT(EM_DIAGRAM):   if informl > 0 then do;
606151     if informat ne ' ' then informat = strip(informat)!!strip(put(informl,
606151   ! best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EM_DIAGRAM):   if informat ne ' ' then informat = strip(informat)!!strip(put(informl, 
best12.))!!'.'!!strip(put(informd, best12.));
606152     else informat = strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EM_DIAGRAM):   else informat = strip(put(informl, best12.))!!'.'!!strip(put(informd, 
best12.));
606153     end;
MPRINT(EM_DIAGRAM):   end;
606154     else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EM_DIAGRAM):   else if informat ne '' then informat = strip(informat)!!'.';
606155     if idxusage = 'NONE' then index ="N";
MPRINT(EM_DIAGRAM):   if idxusage = 'NONE' then index ="N";
606156     else index = "Y";
MPRINT(EM_DIAGRAM):   else index = "Y";
606157     indextype = idxusage;
MPRINT(EM_DIAGRAM):   indextype = idxusage;
606158     drop idxusage itype formatl formatd informl informd;
MPRINT(EM_DIAGRAM):   drop idxusage itype formatl formatd informl informd;
606159     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 19 observations read from the data set WORK.M31I18MF.
NOTE: The data set WORK.M31I18MF has 19 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

606160     data WORK.M31I18MF;
MPRINT(EM_DIAGRAM):    data WORK.M31I18MF;
606161     length UNAME $64;
MPRINT(EM_DIAGRAM):   length UNAME $64;
606162     set WORK.M31I18MF;
MPRINT(EM_DIAGRAM):   set WORK.M31I18MF;
606163     UNAME = upcase(NAME);
MPRINT(EM_DIAGRAM):   UNAME = upcase(NAME);
606164     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 19 observations read from the data set WORK.M31I18MF.
NOTE: The data set WORK.M31I18MF has 19 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):    proc sort data=WORK.M2948S9E NOTHREADS;
MPRINT(EM_DIAGRAM):   by UNAME;
MPRINT(EM_DIAGRAM):   run;
606168     data WORK.M2948S9E;
MPRINT(EM_DIAGRAM):    data WORK.M2948S9E;
606169     drop UNAME;
MPRINT(EM_DIAGRAM):   drop UNAME;
606170     set WORK.M2948S9E;
MPRINT(EM_DIAGRAM):   set WORK.M2948S9E;
606171     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 19 observations read from the data set WORK.M2948S9E.
NOTE: The data set WORK.M2948S9E has 19 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):    data WORK.M1EFKA83(keep=NAME ATTR);
MPRINT(EM_DIAGRAM):   length ATTR $ 20;
MPRINT(EM_DIAGRAM):   set WORK.M2948S9E;
MPRINT(EM_DIAGRAM):   if level ne "INTERVAL" then do;
MPRINT(EM_DIAGRAM):   if order = ' ' then do;
MPRINT(EM_DIAGRAM):   attr = 'ORDER';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EM_DIAGRAM):   attr = 'FORMATTYPE';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if role = ' ' then do;
MPRINT(EM_DIAGRAM):   attr = 'ROLE';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if level = ' ' then do;
MPRINT(EM_DIAGRAM):   attr = 'LEVEL';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if type = ' ' then do;
MPRINT(EM_DIAGRAM):   attr = 'TYPE';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if index = ' ' then do;
MPRINT(EM_DIAGRAM):   attr = 'INDEX';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if report = ' ' then do;
MPRINT(EM_DIAGRAM):   attr = 'REPORT';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort NOTHREADS;
MPRINT(EM_DIAGRAM):   by attr;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.M2948S9E;
MPRINT(EM_DIAGRAM):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 FORMATTYPE $ 
10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EM_DIAGRAM):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EM_DIAGRAM):   set WORK.M2948S9E;
MPRINT(EM_DIAGRAM):   if formattype = ' ' then do;
MPRINT(EM_DIAGRAM):   if format ne ' ' then do;
MPRINT(EM_DIAGRAM):   if type = 'N' then do;
MPRINT(EM_DIAGRAM):   pos = indexc(format,'.1234567890');
MPRINT(EM_DIAGRAM):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EM_DIAGRAM):   else tempfmt = ' ';
MPRINT(EM_DIAGRAM):   flen = length(tempfmt);
MPRINT(EM_DIAGRAM):   select;
MPRINT(EM_DIAGRAM):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" 
"MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" 
"QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" "YEAR" "YYMMDD" "YYMON" 
"YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" 
"EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) 
formattype = 'DATE';
MPRINT(EM_DIAGRAM):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = "DATETIME";
MPRINT(EM_DIAGRAM):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) formattype = 
"TIME";
MPRINT(EM_DIAGRAM):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" 
"NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EM_DIAGRAM):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" "SSN" 
"Z" "ZD")) formattype = "CODING";
MPRINT(EM_DIAGRAM):   otherwise do;
MPRINT(EM_DIAGRAM):   formattype = "USER";
MPRINT(EM_DIAGRAM):   if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EM_DIAGRAM):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EM_DIAGRAM):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EM_DIAGRAM):   else if flen >= 4 then do;
MPRINT(EM_DIAGRAM):   str = substr(tempfmt,1,4);
MPRINT(EM_DIAGRAM):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EM_DIAGRAM):   else if str = "S370" then formattype = "CODING";
MPRINT(EM_DIAGRAM):   else if str = "BEST" then formattype = "NUM";
MPRINT(EM_DIAGRAM):   drop str;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = 
"DATE";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   drop flen tempfmt pos;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   formatType = "CATEGORY";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if formatType = "NUM" then do;
MPRINT(EM_DIAGRAM):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EM_DIAGRAM):   else formatType = "QUANTITY";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if level = ' ' then do;
MPRINT(EM_DIAGRAM):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then level = 
"NOMINAL";
MPRINT(EM_DIAGRAM):   else level = "INTERVAL";
MPRINT(EM_DIAGRAM):   levelAssigned = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else level = upcase(level);
MPRINT(EM_DIAGRAM):   if role = ' ' then do;
MPRINT(EM_DIAGRAM):   length name_prefix $8 _uname $64;
MPRINT(EM_DIAGRAM):   drop name_prefix _uname _freqflag;
MPRINT(EM_DIAGRAM):   retain _freqflag;
MPRINT(EM_DIAGRAM):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EM_DIAGRAM):   _uname = upcase(NAME);
MPRINT(EM_DIAGRAM):   select(_uname);
MPRINT(EM_DIAGRAM):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EM_DIAGRAM):   when('EM_SEGMENT') do;
MPRINT(EM_DIAGRAM):   ROLE = 'SEGMENT';
MPRINT(EM_DIAGRAM):   LEVEL = 'NOMINAL';
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   when('_NODE_') do;
MPRINT(EM_DIAGRAM):   ROLE = 'SEGMENT';
MPRINT(EM_DIAGRAM):   LEVEL = 'NOMINAL';
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EM_DIAGRAM):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EM_DIAGRAM):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EM_DIAGRAM):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EM_DIAGRAM):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EM_DIAGRAM):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EM_DIAGRAM):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EM_DIAGRAM):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EM_DIAGRAM):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EM_DIAGRAM):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EM_DIAGRAM):   when('URI') ROLE = 'URL';
MPRINT(EM_DIAGRAM):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EM_DIAGRAM):   otherwise do;
MPRINT(EM_DIAGRAM):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EM_DIAGRAM):   ROLE = 'REJECTED';
MPRINT(EM_DIAGRAM):   LEVEL = 'NOMINAL';
MPRINT(EM_DIAGRAM):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EM_DIAGRAM):   ROLE = 'FREQ';
MPRINT(EM_DIAGRAM):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EM_DIAGRAM):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   name_prefix = scan(_uname, 1, '_');
MPRINT(EM_DIAGRAM):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EM_DIAGRAM):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EM_DIAGRAM):   ROLE = 'CLASSIFICATION';
MPRINT(EM_DIAGRAM):   LEVEL = 'NOMINAL';
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EM_DIAGRAM):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 'RAS', 
'RAT') then ROLE = 'RESIDUAL';
MPRINT(EM_DIAGRAM):   else if name_prefix ='D' then do;
MPRINT(EM_DIAGRAM):   ROLE = 'DECISION';
MPRINT(EM_DIAGRAM):   LEVEL = 'NOMINAL';
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if name_prefix ='B' then do;
MPRINT(EM_DIAGRAM):   ROLE = 'SEGMENT';
MPRINT(EM_DIAGRAM):   LEVEL = 'NOMINAL';
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 'ROI', 
'IC') then ROLE = 'ASSESS';
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   array _ROLE_ (19) $32 _TEMPORARY_ ('ASSESS','CLASSIFICATION','CENSOR', 
'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 
'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 
'TIMEID');
MPRINT(EM_DIAGRAM):   drop _found_ i;
MPRINT(EM_DIAGRAM):   _found_=0;
MPRINT(EM_DIAGRAM):   do i=1 to 19 until(_found_=1);
MPRINT(EM_DIAGRAM):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EM_DIAGRAM):   ROLE=_ROLE_{i};
MPRINT(EM_DIAGRAM):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EM_DIAGRAM):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EM_DIAGRAM):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EM_DIAGRAM):   _found_=1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if length(_uname)>2 then do;
MPRINT(EM_DIAGRAM):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EM_DIAGRAM):   ROLE = 'ID';
MPRINT(EM_DIAGRAM):   LEVEL = 'NOMINAL';
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EM_DIAGRAM):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if role = ' ' then do;
MPRINT(EM_DIAGRAM):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EM_DIAGRAM):   else role = 'INPUT';
MPRINT(EM_DIAGRAM):   roleAssigned = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else role = upcase(role);
MPRINT(EM_DIAGRAM):   if REPORT = '' then REPORT = 'N';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * DMDBClass Macro ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(HPDM_PERFORMANCE):  ;
PERFORMANCE  DETAILS
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):    proc dmdb data=work._train(obs=1000000) batch classOut=_DMDB3FCSREF 
maxLevel=22;
MPRINT(EM_DIAGRAM):   class
MPRINT(DMDBCLASS):   DepVar GRP_AcceptedCmp5 GRP_AcceptedCmpTotal GRP_Frq GRP_Income GRP_Mnt 
GRP_MntFishProducts GRP_MntGoldProds GRP_MntMeatProducts GRP_MntSweetProducts GRP_MntWines 
GRP_NumCatalogPurchases GRP_NumDistPurchases GRP_NumWebPurchases GRP_NumWebVisitsMonth 
GRP_Recency GRP_RFMstat GRP_RMntFrq Year_Birth
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    proc freq data=_DMDB3FCSREF noprint;
MPRINT(EM_DIAGRAM):   table name / out=_DMDBCOUNT3FCSREF(drop=percent rename=(count=NLEVEL));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _MISS3FCSREF(rename=(frequency=NMISS));
MPRINT(EM_DIAGRAM):   set _DMDB3FCSREF(where=(NRAW=. and CRAW=''));
MPRINT(EM_DIAGRAM):   keep name frequency;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_MISS3FCSREF;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_DMDBCOUNT3FCSREF;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _COUNTS3FCSREF;
MPRINT(EM_DIAGRAM):   merge _DMDBCOUNT3FCSREF _MISS3FCSREF;
MPRINT(EM_DIAGRAM):   label NLEVEL= 'Number of Category';
MPRINT(EM_DIAGRAM):   by name;
MPRINT(EM_DIAGRAM):   if NMISS > 0 then do;
MPRINT(EM_DIAGRAM):   NLEVEL= NLEVEL-1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else NMISS = 0;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    proc sort data=_COUNTS3FCSREF NOTHREADS;
MPRINT(EM_DIAGRAM):   by name;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.M2948S9E NOTHREADS;
MPRINT(EM_DIAGRAM):   by name;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data WORK.M2948S9E;
MPRINT(EM_DIAGRAM):   length NLEVEL 8 nmiss 8;
MPRINT(EM_DIAGRAM):   update WORK.M2948S9E _COUNTS3FCSREF;
MPRINT(EM_DIAGRAM):   by name;
MPRINT(EM_DIAGRAM):   if name='' then name='_';
MPRINT(EM_DIAGRAM):   if levelAssigned and ROLE ne 'FREQ' then do;
MPRINT(EM_DIAGRAM):   select(NLEVEL);
MPRINT(EM_DIAGRAM):   when(.) do;
MPRINT(EM_DIAGRAM):   if type eq 'C' then level = 'NOMINAL';
MPRINT(EM_DIAGRAM):   else level = 'INTERVAL';
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   when(0) level = 'UNARY';
MPRINT(EM_DIAGRAM):   when(1) level = 'UNARY';
MPRINT(EM_DIAGRAM):   when(2) level = 'BINARY';
MPRINT(EM_DIAGRAM):   otherwise do;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if roleAssigned then do;
MPRINT(EM_DIAGRAM):   if level = 'NOMINAL' and NLEVEL > 20 then do;
MPRINT(EM_DIAGRAM):   role = 'REJECTED';
MPRINT(EM_DIAGRAM):   comment = "Exceeds maximum number of levels cutoff";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if level = 'UNARY' and ROLE ne 'FREQ' then role='REJECTED';
MPRINT(EM_DIAGRAM):   drop NLEVEL nmiss;
MPRINT(EM_DIAGRAM):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= 
"Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= 
"Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower limit" UPPERLIMIT= 
"Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= 
"Label" LENGTH= "Length";
MPRINT(EM_DIAGRAM):   drop levelAssigned roleAssigned;
MPRINT(EM_DIAGRAM):   run;
606455     title8 "%sysfunc(sasmsg(sashelp.dmine, rpt_clean_title, NOQUOTE))";
MPRINT(EM_DIAGRAM):    title8 "Cleanup Model";
606456     data WORK.M2UWUMIX;
MPRINT(EM_DIAGRAM):   data WORK.M2UWUMIX;
606457     set WORK.M2UWUMIX;
MPRINT(EM_DIAGRAM):   set WORK.M2UWUMIX;
606458     if NAME='Element1' then delete;
MPRINT(EM_DIAGRAM):   if NAME='Element1' then delete;
606459     if NAME='Element2' then delete;
MPRINT(EM_DIAGRAM):   if NAME='Element2' then delete;
606460     if NAME='Element3' then delete;
MPRINT(EM_DIAGRAM):   if NAME='Element3' then delete;
606461     if NAME='Element4' then delete;
MPRINT(EM_DIAGRAM):   if NAME='Element4' then delete;
606462     if NAME='Group' then delete;
MPRINT(EM_DIAGRAM):   if NAME='Group' then delete;
606463     if NAME='Z_CostContact' then delete;
MPRINT(EM_DIAGRAM):   if NAME='Z_CostContact' then delete;
606464     if NAME='Z_Revenue' then delete;
MPRINT(EM_DIAGRAM):   if NAME='Z_Revenue' then delete;
606465     if NAME='_WARN_' then delete;
MPRINT(EM_DIAGRAM):   if NAME='_WARN_' then delete;
606466     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 20 observations read from the data set WORK.M2UWUMIX.
NOTE: The data set WORK.M2UWUMIX has 20 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

606467     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
606468     * Cleanup Model;
MPRINT(EM_DIAGRAM):   * Cleanup Model;
606469     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
606470     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
606471     * NEURAL MODEL DepVar BINARY CM;
MPRINT(EM_DIAGRAM):   * NEURAL MODEL DepVar BINARY CM;
606472     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
606473     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
606474     * Rule3: Create decision matrix;
MPRINT(EM_DIAGRAM):   * Rule3: Create decision matrix;
606475     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
606476     data EM_Rule3;
MPRINT(EM_DIAGRAM):   data EM_Rule3;
606477     set work._train(keep=
606478     DepVar GRP_AcceptedCmp5 GRP_AcceptedCmpTotal GRP_Frq GRP_Income GRP_Mnt
606479     GRP_MntFishProducts GRP_MntGoldProds GRP_MntMeatProducts GRP_MntSweetProducts
606480     GRP_MntWines GRP_NumCatalogPurchases GRP_NumDistPurchases GRP_NumWebPurchases
606481     GRP_NumWebVisitsMonth GRP_RFMstat GRP_RMntFrq GRP_Recency Year_Birth );
MPRINT(EM_DIAGRAM):   set work._train(keep= DepVar GRP_AcceptedCmp5 GRP_AcceptedCmpTotal 
GRP_Frq GRP_Income GRP_Mnt GRP_MntFishProducts GRP_MntGoldProds GRP_MntMeatProducts 
GRP_MntSweetProducts GRP_MntWines GRP_NumCatalogPurchases GRP_NumDistPurchases 
GRP_NumWebPurchases GRP_NumWebVisitsMonth GRP_RFMstat GRP_RMntFrq GRP_Recency Year_Birth );
606482     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 58 observations read from the data set WORK._TRAIN.
NOTE: The data set WORK.EM_RULE3 has 58 observations and 19 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * Rule3: DMDBClass Macro ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
606483     *------------------------------------------------------------* ;
606484     * Rule3: DMDBClass Macro ;
606485     *------------------------------------------------------------* ;
606486     %macro DMDBClass;
606487         DepVar(DESC) GRP_AcceptedCmp5(ASC) GRP_AcceptedCmpTotal(ASC) GRP_Frq(ASC)
606488        GRP_Income(ASC) GRP_Mnt(ASC) GRP_MntFishProducts(ASC) GRP_MntGoldProds(ASC)
606489        GRP_MntMeatProducts(ASC) GRP_MntSweetProducts(ASC) GRP_MntWines(ASC)
606490        GRP_NumCatalogPurchases(ASC) GRP_NumDistPurchases(ASC) GRP_NumWebPurchases(ASC)
606491        GRP_NumWebVisitsMonth(ASC) GRP_RFMstat(ASC) GRP_RMntFrq(ASC) GRP_Recency(ASC)
606492     %mend DMDBClass;
606493     *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
606494     * Rule3: DMDBVar Macro ;
MPRINT(EM_DIAGRAM):   * Rule3: DMDBVar Macro ;
606495     *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
606496     %macro DMDBVar;
606497         Year_Birth
606498     %mend DMDBVar;
606499     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
606500     * Rule3: Create DMDB;
MPRINT(EM_DIAGRAM):   * Rule3: Create DMDB;
606501     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
606502     proc dmdb batch data=WORK.EM_Rule3
606503     dmdbcat=WORK.Rule3_DMDB
606504     maxlevel = 513
606505     ;
MPRINT(EM_DIAGRAM):   proc dmdb batch data=WORK.EM_Rule3 dmdbcat=WORK.Rule3_DMDB maxlevel = 
513 ;
MPRINT(EM_DIAGRAM):   class
606506     class %DMDBClass;
MPRINT(DMDBCLASS):   DepVar(DESC) GRP_AcceptedCmp5(ASC) GRP_AcceptedCmpTotal(ASC) GRP_Frq(ASC) 
GRP_Income(ASC) GRP_Mnt(ASC) GRP_MntFishProducts(ASC) GRP_MntGoldProds(ASC) 
GRP_MntMeatProducts(ASC) GRP_MntSweetProducts(ASC) GRP_MntWines(ASC) 
GRP_NumCatalogPurchases(ASC) GRP_NumDistPurchases(ASC) GRP_NumWebPurchases(ASC) 
GRP_NumWebVisitsMonth(ASC) GRP_RFMstat(ASC) GRP_RMntFrq(ASC) GRP_Recency(ASC)
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   var
606507     var %DMDBVar;
MPRINT(DMDBVAR):   Year_Birth
MPRINT(EM_DIAGRAM):  ;
606508     target
606509     DepVar
606510     ;
MPRINT(EM_DIAGRAM):   target DepVar ;
606511     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Records processed = 58   Memory used = 511K.
NOTE: There were 58 observations read from the data set WORK.EM_RULE3.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):   *--- end code ---*;
606512     quit;
606513     *--- end code ---*;

606514     *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------* ;
606515     * Rule3: Interval Input Variables Macro ;
MPRINT(EM_DIAGRAM):   * Rule3: Interval Input Variables Macro ;
606516     *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
606517     %macro INTINPUTS;
606518         Year_Birth
606519     %mend INTINPUTS;
606520     *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
606521     * Rule3: Binary Inputs Macro ;
MPRINT(EM_DIAGRAM):   * Rule3: Binary Inputs Macro ;
606522     *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
606523     %macro BININPUTS;
606524     
606525     %mend BININPUTS;
606526     *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
606527     * Rule3: Nominal Inputs Macro ;
MPRINT(EM_DIAGRAM):   * Rule3: Nominal Inputs Macro ;
606528     *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
606529     %macro NOMINPUTS;
606530         GRP_AcceptedCmp5 GRP_AcceptedCmpTotal GRP_Frq GRP_Income GRP_Mnt
606531        GRP_MntFishProducts GRP_MntGoldProds GRP_MntMeatProducts GRP_MntSweetProducts
606532        GRP_MntWines GRP_NumCatalogPurchases GRP_NumDistPurchases GRP_NumWebPurchases
606533        GRP_NumWebVisitsMonth GRP_RFMstat GRP_RMntFrq GRP_Recency
606534     %mend NOMINPUTS;
606535     *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
606536     * Rule3: Ordinal Inputs Macro ;
MPRINT(EM_DIAGRAM):   * Rule3: Ordinal Inputs Macro ;
606537     *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
606538     %macro ORDINPUTS;
606539     
606540     %mend ORDINPUTS;
606541     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
606542     * Neural Network Training;
MPRINT(EM_DIAGRAM):   * Neural Network Training;
606543     ;
MPRINT(EM_DIAGRAM):   ;
606544     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
606545     proc neural data=EM_Rule3 dmdbcat=WORK.Rule3_DMDB
606546     validdata = work._valid
606547     random=12345
606548     ;
MPRINT(EM_DIAGRAM):   proc neural data=EM_Rule3 dmdbcat=WORK.Rule3_DMDB validdata = 
work._valid random=12345 ;
606549     nloptions
606550     noprint
606551     ;
MPRINT(EM_DIAGRAM):   nloptions noprint ;
606552     performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   performance alldetails noutilfile;
606553     netopts
606554     decay=0;
MPRINT(EM_DIAGRAM):   netopts decay=0;
MPRINT(EM_DIAGRAM):   input
606555     input %INTINPUTS / level=interval id=intvl
MPRINT(INTINPUTS):   Year_Birth
606556     ;
MPRINT(EM_DIAGRAM):   / level=interval id=intvl ;
MPRINT(EM_DIAGRAM):   input
606557     input %NOMINPUTS / level=nominal id=nom
MPRINT(NOMINPUTS):   GRP_AcceptedCmp5 GRP_AcceptedCmpTotal GRP_Frq GRP_Income GRP_Mnt 
GRP_MntFishProducts GRP_MntGoldProds GRP_MntMeatProducts GRP_MntSweetProducts GRP_MntWines 
GRP_NumCatalogPurchases GRP_NumDistPurchases GRP_NumWebPurchases GRP_NumWebVisitsMonth 
GRP_RFMstat GRP_RMntFrq GRP_Recency
606558     ;
MPRINT(EM_DIAGRAM):   / level=nominal id=nom ;
606559     target DepVar / level=NOMINAL id=DepVar
606560     bias
606561     ;
MPRINT(EM_DIAGRAM):   target DepVar / level=NOMINAL id=DepVar bias ;
606562     arch NRBFEQ
606563     Hidden=3
606564     ;
MPRINT(EM_DIAGRAM):   arch NRBFEQ Hidden=3 ;
606565     Prelim 8 preiter=10
606566     pretime=3600
606567     Outest=WORK.PRELIMOUTEST_EMNEURAL_3N1RX2Z
606568     ;
MPRINT(EM_DIAGRAM):   Prelim 8 preiter=10 pretime=3600 
Outest=WORK.PRELIMOUTEST_EMNEURAL_3N1RX2Z ;
NOTE:  Synchronizing the objectives and the Solution.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 10 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 10 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 10 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 10 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 10 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 10 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 10 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 10 iterations or 2147483647 function calls.
NOTE: The data set WORK.PRELIMOUTEST_EMNEURAL_3N1RX2Z has 17 observations and 370 variables.
606569     save network=WORK.NETWORK.dm_neural;
MPRINT(EM_DIAGRAM):   save network=WORK.NETWORK.dm_neural;
NOTE: Creating a new Catalogue with entry WORK.NETWORK.DM_NEURAL.
NOTE: Entry WORK.NETWORK.DM_NEURAL has been opened.
NOTE: Entry WORK.NETWORK.DM_NEURAL has been closed.
606570     train Maxiter=20
606571     maxtime=14400
606572     Outest=WORK.Rule3_outest estiter=1
606573     Outfit=_rnfit
606574     ;
MPRINT(EM_DIAGRAM):   train Maxiter=20 maxtime=14400 Outest=WORK.Rule3_outest estiter=1 
Outfit=_rnfit ;
NOTE: Convergence criterion (ABSGCONV=0.00001) satisfied.
NOTE: The data set WORK.RULE3_OUTEST has 20 observations and 370 variables.
NOTE: The data set WORK._RNFIT has 38 observations and 36 variables.
606575     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK.EM_RULE3 has 58 observations and 19 variables.
NOTE: The data set WORK._VALID has 64 observations and 19 variables.
NOTE: Closing the Neural Application.
NOTE: The PROCEDURE NEURAL printed page 599.
NOTE: PROCEDURE NEURAL used (Total process time):
      real time           0.17 seconds
      cpu time            0.17 seconds
      

MPRINT(EM_DIAGRAM):   quit;
606576     quit;

606577     proc sort data=_rnfit(where=(_iter_ ne . and _NAME_="OVERALL")) out=fit_Rule3;
MPRINT(EM_DIAGRAM):    proc sort data=_rnfit(where=(_iter_ ne . and _NAME_="OVERALL")) 
out=fit_Rule3;
606578     by _VAVERR_;
MPRINT(EM_DIAGRAM):   by _VAVERR_;
606579     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 19 observations read from the data set WORK._RNFIT.
      WHERE (_iter_ not = .) and (_NAME_='OVERALL');
NOTE: The data set WORK.FIT_RULE3 has 19 observations and 36 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

606580     %GLOBAL ITER;
606581     data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
606582     set fit_Rule3(obs=1);
MPRINT(EM_DIAGRAM):   set fit_Rule3(obs=1);
606583     call symput('ITER',put(_ITER_, 6.));
MPRINT(EM_DIAGRAM):   call symput('ITER',put(_ITER_, 6.));
606584     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set WORK.FIT_RULE3.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

606585     data WORK.INITIAL_EMNEURAL_3N1RX2Z;
MPRINT(EM_DIAGRAM):   data WORK.INITIAL_EMNEURAL_3N1RX2Z;
606586     set WORK.Rule3_outest(where=(_ITER_ eq &ITER and _OBJ_ ne .));
MPRINT(EM_DIAGRAM):   set WORK.Rule3_outest(where=(_ITER_ eq 1 and _OBJ_ ne .));
606587     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set WORK.RULE3_OUTEST.
      WHERE (_ITER_=1) and (_OBJ_ not = .);
NOTE: The data set WORK.INITIAL_EMNEURAL_3N1RX2Z has 1 observations and 370 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

606588     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
606589     * Neural Network Model Selection;
MPRINT(EM_DIAGRAM):   * Neural Network Model Selection;
606590     ;
MPRINT(EM_DIAGRAM):   ;
606591     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
606592     proc neural data=EM_Rule3 dmdbcat=WORK.Rule3_DMDB
606593     validdata = work._valid
606594     network = WORK.NETWORK.dm_neural
606595     random=12345
606596     ;
MPRINT(EM_DIAGRAM):   proc neural data=EM_Rule3 dmdbcat=WORK.Rule3_DMDB validdata = 
work._valid network = WORK.NETWORK.dm_neural random=12345 ;
NOTE: Entry WORK.NETWORK.DM_NEURAL has been opened.
NOTE: Entry WORK.NETWORK.DM_NEURAL has been closed.
606597     nloptions noprint;
MPRINT(EM_DIAGRAM):   nloptions noprint;
606598     performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   performance alldetails noutilfile;
606599     initial inest=WORK.INITIAL_EMNEURAL_3N1RX2Z;
MPRINT(EM_DIAGRAM):   initial inest=WORK.INITIAL_EMNEURAL_3N1RX2Z;
NOTE: The data set WORK.INITIAL_EMNEURAL_3N1RX2Z has 1 observations and 370 variables.
606600     train tech=NONE;
MPRINT(EM_DIAGRAM):   train tech=NONE;
NOTE: No optimization performed.
606601     code file="C:\Users\LUKASF~1\AppData\Local\Temp\SAS Temporary
606601   ! Files\_TD115000_WN7LF-LEAVE_\Prc2\CM.sas"
606602     group=Rule3
606603     ;
MPRINT(EM_DIAGRAM):   code file="C:\Users\LUKASF~1\AppData\Local\Temp\SAS Temporary 
Files\_TD115000_WN7LF-LEAVE_\Prc2\CM.sas" group=Rule3 ;
NOTE: External file C:\Users\LUKASF~1\AppData\Local\Temp\SAS Temporary 
      Files\_TD115000_WN7LF-LEAVE_\Prc2\CM.sas opened.
606604     ;
MPRINT(EM_DIAGRAM):   ;
606605     code file="C:\Users\LUKASF~1\AppData\Local\Temp\SAS Temporary
606605   ! Files\_TD115000_WN7LF-LEAVE_\Prc2\CM_res.sas"
606606     group=Rule3
606607     residual
606608     ;
MPRINT(EM_DIAGRAM):   code file="C:\Users\LUKASF~1\AppData\Local\Temp\SAS Temporary 
Files\_TD115000_WN7LF-LEAVE_\Prc2\CM_res.sas" group=Rule3 residual ;
NOTE: External file C:\Users\LUKASF~1\AppData\Local\Temp\SAS Temporary 
      Files\_TD115000_WN7LF-LEAVE_\Prc2\CM_res.sas opened.
606609     ;
MPRINT(EM_DIAGRAM):   ;
606610     score data=_train out=_ptrain
606611     outkey=WORK.OUTKEY_EMNEURAL_3N1RX2Z;
MPRINT(EM_DIAGRAM):   score data=_train out=_ptrain outkey=WORK.OUTKEY_EMNEURAL_3N1RX2Z;
NOTE: The data set WORK.OUTKEY_EMNEURAL_3N1RX2Z has 14 observations and 8 variables.
NOTE: The data set WORK._TRAIN has 58 observations and 19 variables.
NOTE: The data set WORK._PTRAIN has 58 observations and 33 variables.
606612     score data=_valid out=_pvalid
606613     outkey=WORK.OUTKEY_EMNEURAL_3N1RX2Z;
MPRINT(EM_DIAGRAM):   score data=_valid out=_pvalid outkey=WORK.OUTKEY_EMNEURAL_3N1RX2Z;
NOTE: The data set WORK.OUTKEY_EMNEURAL_3N1RX2Z has 14 observations and 8 variables.
NOTE: The data set WORK._VALID has 64 observations and 19 variables.
NOTE: The data set WORK._PVALID has 64 observations and 33 variables.
606614     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK.EM_RULE3 has 58 observations and 19 variables.
NOTE: The data set WORK._VALID has 64 observations and 19 variables.
NOTE: Closing the Neural Application.
NOTE: PROCEDURE NEURAL used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
606615     quit;
606616     data _rnest;
MPRINT(EM_DIAGRAM):   data _rnest;
606617     set WORK.Rule3_outest;
MPRINT(EM_DIAGRAM):   set WORK.Rule3_outest;
606618     if _type_ ^in('HESSIAN' 'GRAD');
MPRINT(EM_DIAGRAM):   if _type_ ^in('HESSIAN' 'GRAD');
606619     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 20 observations read from the data set WORK.RULE3_OUTEST.
NOTE: The data set WORK._RNEST has 19 observations and 370 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

606620     proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
606621     delete EM_Rule3;
MPRINT(EM_DIAGRAM):   delete EM_Rule3;
606622     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Deleting WORK.EM_RULE3 (memtype=DATA).
606623     quit;
MPRINT(EM_DIAGRAM):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

606624     * CLEANUP: Training Classification;
MPRINT(EM_DIAGRAM):    * CLEANUP: Training Classification;
606625     ;
MPRINT(EM_DIAGRAM):   ;
606626     proc freq data= _ptrain noprint;
MPRINT(EM_DIAGRAM):   proc freq data= _ptrain noprint;
606627     tables F_DepVar * I_DepVar / out = _count;
MPRINT(EM_DIAGRAM):   tables F_DepVar * I_DepVar / out = _count;
606628     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 58 observations read from the data set WORK._PTRAIN.
NOTE: The data set WORK._COUNT has 3 observations and 4 variables.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

606629     data _count;
MPRINT(EM_DIAGRAM):   data _count;
606630     set _count;
MPRINT(EM_DIAGRAM):   set _count;
606631     label count = "%sysfunc(sasmsg(sashelp.dmine, rpt_traincount_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label count = "Train Count";
606632     label percent = "%sysfunc(sasmsg(sashelp.dmine, rpt_trainpercent_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label percent = "Train Percent";
606633     label F_DepVar = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label F_DepVar = "Target";
606634     label I_DepVar = "%sysfunc(sasmsg(sashelp.dmine, rpt_predict_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label I_DepVar = "Predict";
606635     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set WORK._COUNT.
NOTE: The data set WORK._COUNT has 3 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   * CLEANUP: Validation Classification;
MPRINT(EM_DIAGRAM):   ;
606636     * CLEANUP: Validation Classification;
606637     ;
606638     proc freq data= _pvalid noprint;
MPRINT(EM_DIAGRAM):   proc freq data= _pvalid noprint;
606639     tables F_DepVar * I_DepVar / out = _vcount;
MPRINT(EM_DIAGRAM):   tables F_DepVar * I_DepVar / out = _vcount;
606640     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 64 observations read from the data set WORK._PVALID.
NOTE: The data set WORK._VCOUNT has 3 observations and 4 variables.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

606641     data _vcount;
MPRINT(EM_DIAGRAM):   data _vcount;
606642     set _vcount;
MPRINT(EM_DIAGRAM):   set _vcount;
606643     length key $64;
MPRINT(EM_DIAGRAM):   length key $64;
606644     label count = "%sysfunc(sasmsg(sashelp.dmine, rpt_validcount_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label count = "Valid Count";
606645     label percent = "%sysfunc(sasmsg(sashelp.dmine, rpt_validpercent_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label percent = "Valid Percent";
606646     label F_DepVar = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label F_DepVar = "Target";
606647     label I_DepVar = "%sysfunc(sasmsg(sashelp.dmine, rpt_predict_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label I_DepVar = "Predict";
606648     rename count = vcount;
MPRINT(EM_DIAGRAM):   rename count = vcount;
606649     rename percent= vpercent;
MPRINT(EM_DIAGRAM):   rename percent= vpercent;
606650     key = ktrim(kleft(F_DepVar) !! '_' !! ktrim(kleft(I_DepVar)));
MPRINT(EM_DIAGRAM):   key = ktrim(kleft(F_DepVar) !! '_' !! ktrim(kleft(I_DepVar)));
606651     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set WORK._VCOUNT.
NOTE: The data set WORK._VCOUNT has 3 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   *;
606652     *;
606653     data _count;
MPRINT(EM_DIAGRAM):   data _count;
606654     set _count;
MPRINT(EM_DIAGRAM):   set _count;
606655     length key $64;
MPRINT(EM_DIAGRAM):   length key $64;
606656     key = ktrim(kleft(F_DepVar) !!'_' !!ktrim(kleft(I_DepVar)));
MPRINT(EM_DIAGRAM):   key = ktrim(kleft(F_DepVar) !!'_' !!ktrim(kleft(I_DepVar)));
606657     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set WORK._COUNT.
NOTE: The data set WORK._COUNT has 3 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   * Merge Train and Valid classification;
MPRINT(EM_DIAGRAM):   ;
606658     * Merge Train and Valid classification;
606659     ;
606660     proc sort data=_count;
MPRINT(EM_DIAGRAM):   proc sort data=_count;
606661     by key;
MPRINT(EM_DIAGRAM):   by key;
606662     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set WORK._COUNT.
NOTE: The data set WORK._COUNT has 3 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

606663     proc sort data=_vcount;
MPRINT(EM_DIAGRAM):   proc sort data=_vcount;
606664     by key;
MPRINT(EM_DIAGRAM):   by key;
606665     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set WORK._VCOUNT.
NOTE: The data set WORK._VCOUNT has 3 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   *;
606666     *;
606667     data _count;
MPRINT(EM_DIAGRAM):   data _count;
606668     merge _count _vcount;
MPRINT(EM_DIAGRAM):   merge _count _vcount;
606669     by key;
MPRINT(EM_DIAGRAM):   by key;
606670     drop key;
MPRINT(EM_DIAGRAM):   drop key;
606671     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set WORK._COUNT.
NOTE: There were 3 observations read from the data set WORK._VCOUNT.
NOTE: The data set WORK._COUNT has 4 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   * CLEANUP: Print Classification;
MPRINT(EM_DIAGRAM):   ;
606672     * CLEANUP: Print Classification;
606673     ;
606674     title9 "%sysfunc(sasmsg(sashelp.dmine, rpt_cleanup_title, NOQUOTE, DepVar))";
MPRINT(EM_DIAGRAM):   title9 "TARGET=DepVar : Cleanup Model";
606675     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_classification_title, NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Classification Table";
606676     proc print data = _count noobs label;
MPRINT(EM_DIAGRAM):   proc print data = _count noobs label;
606677     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._COUNT.
NOTE: The PROCEDURE PRINT printed page 600.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

606678     title9;
MPRINT(EM_DIAGRAM):   title9;
606679     title10;
MPRINT(EM_DIAGRAM):   title10;
606680     title8;
MPRINT(EM_DIAGRAM):    title8;
606681     proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):    proc datasets lib=work nolist;
606682     delete _train;
MPRINT(EM_DIAGRAM):   delete _train;
606683     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Deleting WORK._TRAIN (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

606684     proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
606685     delete _ptrain;
MPRINT(EM_DIAGRAM):   delete _ptrain;
606686     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Deleting WORK._PTRAIN (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

606687     proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
606688     delete _valid;
MPRINT(EM_DIAGRAM):   delete _valid;
606689     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Deleting WORK._VALID (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

606690     proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
606691     delete _pvalid;
MPRINT(EM_DIAGRAM):   delete _pvalid;
606692     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Deleting WORK._PVALID (memtype=DATA).
606693     %makeResidualVars(target=DepVar, decmeta=EMWS8.Rule3_DepVar_DM , fref=#LN05822);

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.07 seconds
      cpu time            0.06 seconds
      

MPRINT(MAKERESIDUALVARS):   data _null_;
MPRINT(MAKERESIDUALVARS):   set EMWS8.Rule3_DepVar_DM end=eof;
MPRINT(MAKERESIDUALVARS):   where _TYPE_ in('TARGET', 'FROM');
MPRINT(MAKERESIDUALVARS):   if _TYPE_='TARGET' then call symput('target_level', strip(LEVEL));
MPRINT(MAKERESIDUALVARS):   else call symput('from_var', strip(VARIABLE));
MPRINT(MAKERESIDUALVARS):   run;

NOTE: There were 2 observations read from the data set EMWS8.RULE3_DEPVAR_DM.
      WHERE _TYPE_ in ('FROM', 'TARGET');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(MAKERESIDUALVARS):   data _null_;
MPRINT(MAKERESIDUALVARS):   set EMWS8.Rule3_DepVar_DM;
MPRINT(MAKERESIDUALVARS):   where _TYPE_ ='PREDICTED';
MPRINT(MAKERESIDUALVARS):   call symput('pred_vars'!!strip(put(_N_,BEST.)), strip(Variable));
MPRINT(MAKERESIDUALVARS):   run;

NOTE: There were 2 observations read from the data set EMWS8.RULE3_DEPVAR_DM.
      WHERE _TYPE_='PREDICTED';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(MAKERESIDUALVARS):   data _null_;
MPRINT(MAKERESIDUALVARS):   set EMWS8.Rule3_DepVar_DM end=eof;
MPRINT(MAKERESIDUALVARS):   where _TYPE_ ='RESIDUAL';
MPRINT(MAKERESIDUALVARS):   call symput('res_vars'!!strip(put(_N_,BEST.)), strip(Variable));
MPRINT(MAKERESIDUALVARS):   call symput('res_labels'!!strip(put(_N_,BEST.)), 
strip(tranwrd(LABEL,"'","''")));
MPRINT(MAKERESIDUALVARS):   call symput('res_levels'!!strip(put(_N_,BEST.)), 
strip(tranwrd(LEVEL,"'","''")));
MPRINT(MAKERESIDUALVARS):   if eof then call symput('numLevels', strip(put(_N_,BEST.)));
MPRINT(MAKERESIDUALVARS):   run;

NOTE: There were 2 observations read from the data set EMWS8.RULE3_DEPVAR_DM.
      WHERE _TYPE_='RESIDUAL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(MAKERESIDUALVARS):   data _null_;
MPRINT(MAKERESIDUALVARS):   file #LN05822;
MPRINT(MAKERESIDUALVARS):   put 
"*------------------------------------------------------------*;";
MPRINT(MAKERESIDUALVARS):   put "*Computing Residual Vars: DepVar;";
MPRINT(MAKERESIDUALVARS):   put 
"*------------------------------------------------------------*;";
MPRINT(MAKERESIDUALVARS):   put "Label R_DepVar1='Residual: DepVar=1';";
MPRINT(MAKERESIDUALVARS):   put "Label R_DepVar0='Residual: DepVar=0';";
MPRINT(MAKERESIDUALVARS):   put "if ";
MPRINT(MAKERESIDUALVARS):   put " F_DepVar ne '1'";
MPRINT(MAKERESIDUALVARS):   put "and F_DepVar ne '0'";
MPRINT(MAKERESIDUALVARS):   put " then do;";
MPRINT(MAKERESIDUALVARS):   put "R_DepVar1=.;";
MPRINT(MAKERESIDUALVARS):   put "R_DepVar0=.;";
MPRINT(MAKERESIDUALVARS):   put "end;";
MPRINT(MAKERESIDUALVARS):   put "else do;";
MPRINT(MAKERESIDUALVARS):   put "R_DepVar1= - P_DepVar1;";
MPRINT(MAKERESIDUALVARS):   put "R_DepVar0= - P_DepVar0;";
MPRINT(MAKERESIDUALVARS):   put "select(F_DepVar);";
MPRINT(MAKERESIDUALVARS):   put "when('1')R_DepVar1= R_DepVar1+1;";
MPRINT(MAKERESIDUALVARS):   put "when('0')R_DepVar0= R_DepVar0+1;";
MPRINT(MAKERESIDUALVARS):   put 'otherwise;';
MPRINT(MAKERESIDUALVARS):   put 'end;';
MPRINT(MAKERESIDUALVARS):   put 'end;';
MPRINT(MAKERESIDUALVARS):   run;

NOTE: The file #LN05822 is:
      Filename=C:\\predictive-models-project\Workspaces\EMWS8\Rule3\RESIDUALCODE.sas,
      RECFM=V,LRECL=256,File Size (bytes)=0,
      Last Modified=28. April 2016 16.25 Uhr,
      Create Time=27. April 2016 22.29 Uhr

NOTE: 21 records were written to the file #LN05822.
      The minimum record length was 3.
      The maximum record length was 63.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):  ;

MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
