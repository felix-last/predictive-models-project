MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "28. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "09.51 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Training Log
Date:                28. April 2016
Time:                09.51 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O3RSIYJZ 
"C:\\predictive-models-project\Workspaces\EMWS8\Rule3\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O3RSIYJZ new;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOG 
"C:\\predictive-models-project\Workspaces\EMWS8\Rule3\EMLOG.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "28. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "09.51 Uhr" );
MPRINT(EM_DIAGRAM):   file _LOG;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                Lukas Fahr";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "Site:                70107571";
MPRINT(EM_DIAGRAM):   put "Platform:            X64_7PRO";
MPRINT(EM_DIAGRAM):   put "Maintenance Release: 9.03.01M2P081512";
MPRINT(EM_DIAGRAM):   put "EM Version:          12.1";
MPRINT(EM_DIAGRAM):   put "* ";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN 
"C:\\predictive-models-project\Workspaces\EMWS8\Rule3\EMTRAIN.log" encoding="UTF-8" NOBOM;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _LOG MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_LOGIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _LOGIN 
"C:\\predictive-models-project\Workspaces\EMWS8\Rule3\EMSCORE.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN 
"C:\\predictive-models-project\Workspaces\EMWS8\Rule3\EMREPORT.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    filename _LOG;
MPRINT(EM_DIAGRAM):    filename _OUT 
"C:\\predictive-models-project\Workspaces\EMWS8\Rule3\EMOUTPUT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "28. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "09.51 Uhr" );
MPRINT(EM_DIAGRAM):   file _OUT;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                Lukas Fahr";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN 
"C:\\predictive-models-project\Workspaces\EMWS8\Rule3\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _OUT MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_OUTIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN 
"C:\\predictive-models-project\Workspaces\EMWS8\Rule3\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN 
"C:\\predictive-models-project\Workspaces\EMWS8\Rule3\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    filename _OUT;
MPRINT(EM_DIAGRAM):    filename _emtool_ 
'C:\\predictive-models-project\Workspaces\EMWS8\Rule3\EMRUNSTATUS.xml' encoding="UTF-8" NOBOM;
1781116    proc freq data=EMWS8.Rule3_VariableSet noprint;
MPRINT(EM_DIAGRAM):    proc freq data=EMWS8.Rule3_VariableSet noprint;
1781117    table ROLE*LEVEL/out=WORK.Rule3META;
MPRINT(EM_DIAGRAM):   table ROLE*LEVEL/out=WORK.Rule3META;
1781118    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 48 observations read from the data set EMWS8.RULE3_VARIABLESET.
NOTE: The data set WORK.RULE3META has 6 observations and 4 variables.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1781119    proc print data=WORK.Rule3META label noobs;
MPRINT(EM_DIAGRAM):   proc print data=WORK.Rule3META label noobs;
1781120    var ROLE LEVEL COUNT;
MPRINT(EM_DIAGRAM):   var ROLE LEVEL COUNT;
1781121    label ROLE = "%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel, NOQUOTE))" LEVEL =
1781121  ! "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" COUNT =
1781121  ! "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label ROLE = "Role" LEVEL = "Measurement Level" COUNT = "Frequency 
Count";
1781122    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
1781123    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_varSummary_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Variable Summary";
MPRINT(EM_DIAGRAM):   run;
1781124    run;

NOTE: There were 6 observations read from the data set WORK.RULE3META.
NOTE: The PROCEDURE PRINT printed page 1755.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1781125    title10;
MPRINT(EM_DIAGRAM):   title10;
1781126    %let EMNORLEN = %DMNORLEN;
MPRINT(EM_DIAGRAM):   
EMWS8.BINNING_TRAIN EMWS8.BINNING_TRAIN 
EMWS8.BINNING_TRAIN EMWS8.BINNING_TRAIN EMWS8 BINNING_TRAIN 
EMWS8.BINNING_TRAIN EMWS8.BINNING_TRAIN 
EMWS8.BINNING_TRAIN EMWS8.BINNING_TRAIN EMWS8 BINNING_TRAIN 
MPRINT(EM_DIAGRAM):    proc dmdb data=EMWS8.BINNING_TRAIN 
classout=WORK._DMDBCLASSTARGET(keep=NAME NRAW CRAW LEVEL FREQUENCY NMISSPERCENT);
MPRINT(EM_DIAGRAM):   class DepVar(DESC) ;
MPRINT(EM_DIAGRAM):   run;
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _INIT >> 
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL setMetaData >> 
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >> 
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL setMetaData >> 
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >> 
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _term >> 
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set WORK._DMDBCLASSTARGET;
MPRINT(EM_DIAGRAM):   where ^(NRAW eq . and CRAW eq '') and NAME="DepVar";
MPRINT(EM_DIAGRAM):   if _N_=1 then call symput('_newevent', strip(LEVEL));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK._DMDBCLASSTARGET out=_TEMPCLASS(keep=LEVEL FREQUENCY 
NMISSPERCENT rename=(LEVEL=DepVar));
MPRINT(EM_DIAGRAM):   by LEVEL;
MPRINT(EM_DIAGRAM):   where ^(NRAW eq . and CRAW eq '') and NAME="DepVar";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _TEMPCLASS;
MPRINT(EM_DIAGRAM):   set _TEMPCLASS;
MPRINT(EM_DIAGRAM):   NMISSPERCENT= NMISSPERCENT/100;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _sortedDecData;
MPRINT(EM_DIAGRAM):   set EMWS8.Rule3_DepVar_DD;
MPRINT(EM_DIAGRAM):   _levelorder_=_N_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_sortedDecdata;
MPRINT(EM_DIAGRAM):   by DepVar;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   merge _TEMPCLASS(in=_a) _sortedDecdata(in=_b);
MPRINT(EM_DIAGRAM):   by DepVar;
MPRINT(EM_DIAGRAM):   if (_a and ^_b) or (^_a and _b) then call symput('_emresetDec', '1');
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS8.Rule3_DepVar_DD;
MPRINT(EM_DIAGRAM):   set EMWS8.Rule3_DepVar_DD;
MPRINT(EM_DIAGRAM):   _levelorder_=_N_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Rule3_DepVar_DD;
MPRINT(EM_DIAGRAM):   by DepVar;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Rule3_DepVar_DD;
MPRINT(EM_DIAGRAM):   merge EMWS8.Rule3_DepVar_DD _TEMPCLASS(rename=(NMISSPERCENT=TRAINPRIOR 
FREQUENCY=COUNT));
MPRINT(EM_DIAGRAM):   by DepVar;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Rule3_DepVar_DD 
out=EMWS8.Rule3_DepVar_DD(drop=_levelorder_);
MPRINT(EM_DIAGRAM):   by _levelorder_;
MPRINT(EM_DIAGRAM):   run;
1781173    data WORK.Rule3_EVENT(KEEP=VARIABLE LABEL LEVEL EVENT NUMLEVELS ORDER);
MPRINT(EM_DIAGRAM):    data WORK.Rule3_EVENT(KEEP=VARIABLE LABEL LEVEL EVENT NUMLEVELS ORDER);
1781174    length ORDER $20;
MPRINT(EM_DIAGRAM):   length ORDER $20;
1781175    label VARIABLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel,  NOQUOTE))"
1781175  ! EVENT = "%sysfunc(sasmsg(sashelp.dmine, assmt_event_vlabel, NOQUOTE))" NUMLEVELS =
1781175  ! "%sysfunc(sasmsg(sashelp.dmine, rpt_numcat_vlabel, NOQUOTE))" LEVEL =
1781176       "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" ORDER =
1781176  ! "%sysfunc(sasmsg(sashelp.dmine, meta_order_vlabel, NOQUOTE))" LABEL =
1781176  ! "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label VARIABLE = "Target" EVENT = "Event" NUMLEVELS = "Number of Levels" 
LEVEL = "Measurement Level" ORDER = "Order" LABEL = "Label";
1781177    set EMWS8.RULE3_DEPVAR_DM( where=(_TYPE_="TARGET"));
MPRINT(EM_DIAGRAM):   set EMWS8.RULE3_DEPVAR_DM( where=(_TYPE_="TARGET"));
1781178    NumLevels=2;
MPRINT(EM_DIAGRAM):   NumLevels=2;
1781179    select(upcase(ORDER));
MPRINT(EM_DIAGRAM):   select(upcase(ORDER));
1781180    when('DESC') ORDER = 'Descending';
MPRINT(EM_DIAGRAM):   when('DESC') ORDER = 'Descending';
1781181    when('ASC') ORDER = 'Ascending';
MPRINT(EM_DIAGRAM):   when('ASC') ORDER = 'Ascending';
1781182    when('FMTDESC') ORDER = 'Formatted Descending';
MPRINT(EM_DIAGRAM):   when('FMTDESC') ORDER = 'Formatted Descending';
1781183    when('FMTASC') ORDER = 'Formatted Ascending';
MPRINT(EM_DIAGRAM):   when('FMTASC') ORDER = 'Formatted Ascending';
1781184    otherwise ORDER = 'Descending';
MPRINT(EM_DIAGRAM):   otherwise ORDER = 'Descending';
1781185    end;
MPRINT(EM_DIAGRAM):   end;
1781186    output;
MPRINT(EM_DIAGRAM):   output;
1781187    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set EMWS8.RULE3_DEPVAR_DM.
      WHERE _TYPE_='TARGET';
NOTE: The data set WORK.RULE3_EVENT has 1 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1781188    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
1781189    proc print data=WORK.Rule3_EVENT noobs label;
MPRINT(EM_DIAGRAM):   proc print data=WORK.Rule3_EVENT noobs label;
1781190    var VARIABLE EVENT LEVEL NUMLEVELS ORDER LABEL;
MPRINT(EM_DIAGRAM):   var VARIABLE EVENT LEVEL NUMLEVELS ORDER LABEL;
1781191    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
1781192    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_modelEvent_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Model Events";
MPRINT(EM_DIAGRAM):   run;
1781193    run;

NOTE: There were 1 observations read from the data set WORK.RULE3_EVENT.
NOTE: The PROCEDURE PRINT printed page 1756.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1781194    title10;
MPRINT(EM_DIAGRAM):   title10;
"No decisions defined for target "DepVar"." 
1781195    proc print data = EMWS8.Rule3_DepVar_DM noobs label;
MPRINT(EM_DIAGRAM):    proc print data = EMWS8.Rule3_DepVar_DM noobs label;
1781196    var _type_ variable label;
MPRINT(EM_DIAGRAM):   var _type_ variable label;
1781197    where _type_ ^in('MATRIX', 'DECISION', 'TRAINPRIOR', 'DATAPRIOR', 'DECPRIOR');
MPRINT(EM_DIAGRAM):   where _type_ ^in('MATRIX', 'DECISION', 'TRAINPRIOR', 'DATAPRIOR', 
'DECPRIOR');
1781198    label _TYPE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_type_vlabel,     NOQUOTE))"
1781198  ! VARIABLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel, NOQUOTE))" LABEL =
1781198  ! "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _TYPE_ = "Type" VARIABLE = "Variable" LABEL = "Label";
1781199    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
1781200    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_predDecVars_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Predicted and decision variables";
MPRINT(EM_DIAGRAM):   run;
1781201    run;

NOTE: There were 7 observations read from the data set EMWS8.RULE3_DEPVAR_DM.
      WHERE _type_ not in ('DATAPRIOR', 'DECISION', 'DECPRIOR', 'MATRIX', 'TRAINPRIOR');
NOTE: The PROCEDURE PRINT printed page 1757.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1781202    title10;
MPRINT(EM_DIAGRAM):   title10;
1781203    data WORK.M145BPSG;
MPRINT(EM_DIAGRAM):    data WORK.M145BPSG;
1781204    set WORK.M145BPSG;
MPRINT(EM_DIAGRAM):   set WORK.M145BPSG;
1781205    where(use = 'Y' or (role = 'INPUT' and use = 'D'));
MPRINT(EM_DIAGRAM):   where(use = 'Y' or (role = 'INPUT' and use = 'D'));
1781206    if (role='REJECTED') then role='INPUT';
MPRINT(EM_DIAGRAM):   if (role='REJECTED') then role='INPUT';
1781207    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 16 observations read from the data set WORK.M145BPSG.
      WHERE (use='Y') or ((role='INPUT') and (use='D'));
NOTE: The data set WORK.M145BPSG has 16 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1781208    *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------* ;
1781209    * EM: DMDBClass Macro ;
MPRINT(EM_DIAGRAM):   * EM: DMDBClass Macro ;
1781210    *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
1781211    %macro DMDBClass;
1781212        DepVar(DESC) GRP_AcceptedCmp5(ASC) GRP_Frq(ASC) GRP_Income(ASC) GRP_Mnt(ASC)
1781213       GRP_MntFishProducts(ASC) GRP_MntGoldProds(ASC) GRP_MntMeatProducts(ASC)
1781214       GRP_MntWines(ASC) GRP_NumCatalogPurchases(ASC) GRP_NumDistPurchases(ASC)
1781215       GRP_NumWebPurchases(ASC) GRP_RFMstat(ASC) GRP_RMntFrq(ASC) GRP_Recency(ASC)
1781216    %mend DMDBClass;
1781217    *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
1781218    * EM: DMDBVar Macro ;
MPRINT(EM_DIAGRAM):   * EM: DMDBVar Macro ;
1781219    *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
1781220    %macro DMDBVar;
1781221        Year_Birth
1781222    %mend DMDBVar;
1781223    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1781224    * EM: Create DMDB;
MPRINT(EM_DIAGRAM):   * EM: Create DMDB;
1781225    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1781226    proc dmdb batch data=EMWS8.BINNING_TRAIN
1781227    dmdbcat=WORK.EM_DMDB
1781228    maxlevel = 513
1781229    ;
MPRINT(EM_DIAGRAM):   proc dmdb batch data=EMWS8.BINNING_TRAIN dmdbcat=WORK.EM_DMDB maxlevel = 
513 ;
MPRINT(EM_DIAGRAM):   class
1781230    class %DMDBClass;
MPRINT(DMDBCLASS):   DepVar(DESC) GRP_AcceptedCmp5(ASC) GRP_Frq(ASC) GRP_Income(ASC) 
GRP_Mnt(ASC) GRP_MntFishProducts(ASC) GRP_MntGoldProds(ASC) GRP_MntMeatProducts(ASC) 
GRP_MntWines(ASC) GRP_NumCatalogPurchases(ASC) GRP_NumDistPurchases(ASC) 
GRP_NumWebPurchases(ASC) GRP_RFMstat(ASC) GRP_RMntFrq(ASC) GRP_Recency(ASC)
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   var
1781231    var %DMDBVar;
MPRINT(DMDBVAR):   Year_Birth
MPRINT(EM_DIAGRAM):  ;
1781232    target
1781233    DepVar
1781234    ;
MPRINT(EM_DIAGRAM):   target DepVar ;
1781235    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Records processed = 2374   Memory used = 511K.
NOTE: View EMWS8.BINNING_TRAIN.VIEW used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      
NOTE: There were 2374 observations read from the data set EMWS8.PART_TRAIN.
NOTE: There were 2374 observations read from the data set EMWS8.BINNING_TRAIN.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):   *--- end code ---*;
1781236    quit;
1781237    *--- end code ---*;

1781238    data WORK.M145BPSG;
MPRINT(EM_DIAGRAM):    data WORK.M145BPSG;
1781239    set WORK.M145BPSG end=eof;
MPRINT(EM_DIAGRAM):   set WORK.M145BPSG end=eof;
1781240    output;
MPRINT(EM_DIAGRAM):   output;
1781241    if eof then do;
MPRINT(EM_DIAGRAM):   if eof then do;
1781242    NAME="";
MPRINT(EM_DIAGRAM):   NAME="";
1781243    ROLE="COST";
MPRINT(EM_DIAGRAM):   ROLE="COST";
1781244    LEVEL="INTERVAL";
MPRINT(EM_DIAGRAM):   LEVEL="INTERVAL";
1781245    TYPE="N";
MPRINT(EM_DIAGRAM):   TYPE="N";
1781246    output;
MPRINT(EM_DIAGRAM):   output;
1781247    end;
MPRINT(EM_DIAGRAM):   end;
1781248    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 16 observations read from the data set WORK.M145BPSG.
NOTE: The data set WORK.M145BPSG has 17 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

NOTE: There were 2 observations read from the data set EMWS8.RULE3_DEPVAR_DD.
NOTE: The data set WORK.DEPVAR has 2 observations and 7 variables.
1781249    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
1781250    * Rule3: Create decision matrix;
MPRINT(EM_DIAGRAM):   * Rule3: Create decision matrix;
1781251    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1781252    data WORK.DepVar;
MPRINT(EM_DIAGRAM):   data WORK.DepVar;
1781253      length   DepVar                           $  32
1781254               COUNT                                8
1781255               DATAPRIOR                            8
1781256               TRAINPRIOR                           8
1781257               DECPRIOR                             8
1781258               DECISION1                            8
1781259               DECISION2                            8
1781260               ;
MPRINT(EM_DIAGRAM):   length DepVar $ 32 COUNT 8 DATAPRIOR 8 TRAINPRIOR 8 DECPRIOR 8 DECISION1 
8 DECISION2 8 ;
1781261    
1781262      label    COUNT="Level Counts"
1781263               DATAPRIOR="Data Proportions"
1781264               TRAINPRIOR="Training Proportions"
1781265               DECPRIOR="Decision Priors"
1781266               DECISION1="1"
1781267               DECISION2="0"
1781268               ;
MPRINT(EM_DIAGRAM):   label COUNT= "Level Counts" DATAPRIOR= "Data Proportions" TRAINPRIOR= 
"Training Proportions" DECPRIOR= "Decision Priors" DECISION1= "1" DECISION2= "0" ;
1781269      format   COUNT 10.
1781270               ;
MPRINT(EM_DIAGRAM):   format COUNT 10. ;
1781271    DepVar="1"; COUNT=359; DATAPRIOR=0.151221567; TRAINPRIOR=0.15122156697556;
1781271  ! DECPRIOR=.; DECISION1=1; DECISION2=0;
MPRINT(EM_DIAGRAM):   DepVar="1";
MPRINT(EM_DIAGRAM):   COUNT=359;
MPRINT(EM_DIAGRAM):   DATAPRIOR=0.151221567;
MPRINT(EM_DIAGRAM):   TRAINPRIOR=0.15122156697556;
MPRINT(EM_DIAGRAM):   DECPRIOR=.;
MPRINT(EM_DIAGRAM):   DECISION1=1;
MPRINT(EM_DIAGRAM):   DECISION2=0;
1781272    output;
MPRINT(EM_DIAGRAM):   output;
1781273    DepVar="0"; COUNT=2015; DATAPRIOR=0.848778433; TRAINPRIOR=0.84877843302443;
1781273  ! DECPRIOR=.; DECISION1=0; DECISION2=1;
MPRINT(EM_DIAGRAM):   DepVar="0";
MPRINT(EM_DIAGRAM):   COUNT=2015;
MPRINT(EM_DIAGRAM):   DATAPRIOR=0.848778433;
MPRINT(EM_DIAGRAM):   TRAINPRIOR=0.84877843302443;
MPRINT(EM_DIAGRAM):   DECPRIOR=.;
MPRINT(EM_DIAGRAM):   DECISION1=0;
MPRINT(EM_DIAGRAM):   DECISION2=1;
1781274    output;
MPRINT(EM_DIAGRAM):   output;
1781275    ;
MPRINT(EM_DIAGRAM):   ;
1781276    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK.DEPVAR has 2 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1781277    proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
1781278    modify DepVar(type=PROFIT label=DepVar);
MPRINT(EM_DIAGRAM):   modify DepVar(type=PROFIT label= DepVar);
MPRINT(EM_DIAGRAM):   label DECISION1= '1';
MPRINT(EM_DIAGRAM):   label DECISION2= '0';
MPRINT(EM_DIAGRAM):   run;
1781279    label DECISION1= '1';
1781280    label DECISION2= '0';
1781281    run;

NOTE: MODIFY was successful for WORK.DEPVAR.DATA.
1781282    quit;
MPRINT(EM_DIAGRAM):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * Rule3: DMDBClass Macro ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
1781283    *------------------------------------------------------------* ;
1781284    * Rule3: DMDBClass Macro ;
1781285    *------------------------------------------------------------* ;
1781286    %macro DMDBClass;
1781287        DepVar(DESC) GRP_AcceptedCmp5(ASC) GRP_Frq(ASC) GRP_Income(ASC) GRP_Mnt(ASC)
1781288       GRP_MntFishProducts(ASC) GRP_MntGoldProds(ASC) GRP_MntMeatProducts(ASC)
1781289       GRP_MntWines(ASC) GRP_NumCatalogPurchases(ASC) GRP_NumDistPurchases(ASC)
1781290       GRP_NumWebPurchases(ASC) GRP_RFMstat(ASC) GRP_RMntFrq(ASC) GRP_Recency(ASC)
1781291    %mend DMDBClass;
1781292    *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
1781293    * Rule3: DMDBVar Macro ;
MPRINT(EM_DIAGRAM):   * Rule3: DMDBVar Macro ;
1781294    *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
1781295    %macro DMDBVar;
1781296        Year_Birth
1781297    %mend DMDBVar;
1781298    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1781299    * Rule3: Create DMDB;
MPRINT(EM_DIAGRAM):   * Rule3: Create DMDB;
1781300    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1781301    proc dmdb batch data=EMWS8.BINNING_TRAIN
1781302    dmdbcat=WORK.Rule3_DMDB
1781303    maxlevel = 513
1781304    ;
MPRINT(EM_DIAGRAM):   proc dmdb batch data=EMWS8.BINNING_TRAIN dmdbcat=WORK.Rule3_DMDB 
maxlevel = 513 ;
MPRINT(EM_DIAGRAM):   class
1781305    class %DMDBClass;
MPRINT(DMDBCLASS):   DepVar(DESC) GRP_AcceptedCmp5(ASC) GRP_Frq(ASC) GRP_Income(ASC) 
GRP_Mnt(ASC) GRP_MntFishProducts(ASC) GRP_MntGoldProds(ASC) GRP_MntMeatProducts(ASC) 
GRP_MntWines(ASC) GRP_NumCatalogPurchases(ASC) GRP_NumDistPurchases(ASC) 
GRP_NumWebPurchases(ASC) GRP_RFMstat(ASC) GRP_RMntFrq(ASC) GRP_Recency(ASC)
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   var
1781306    var %DMDBVar;
MPRINT(DMDBVAR):   Year_Birth
MPRINT(EM_DIAGRAM):  ;
1781307    target
1781308    DepVar
1781309    ;
MPRINT(EM_DIAGRAM):   target DepVar ;
1781310    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Records processed = 2374   Memory used = 511K.
NOTE: View EMWS8.BINNING_TRAIN.VIEW used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      
NOTE: There were 2374 observations read from the data set EMWS8.PART_TRAIN.
NOTE: There were 2374 observations read from the data set EMWS8.BINNING_TRAIN.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):   *--- end code ---*;
1781311    quit;
1781312    *--- end code ---*;

1781313    data WORK.M03AL0Q2;
MPRINT(EM_DIAGRAM):    data WORK.M03AL0Q2;
1781314    set WORK.M03AL0Q2;
MPRINT(EM_DIAGRAM):   set WORK.M03AL0Q2;
1781315    if NAME^='DepVar' then delete;
MPRINT(EM_DIAGRAM):   if NAME^='DepVar' then delete;
1781316    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 17 observations read from the data set WORK.M03AL0Q2.
NOTE: The data set WORK.M03AL0Q2 has 1 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1781317    *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------* ;
1781318    * EM: DMDBClass Macro ;
MPRINT(EM_DIAGRAM):   * EM: DMDBClass Macro ;
1781319    *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
1781320    %macro DMDBClass;
1781321        DepVar(DESC)
1781322    %mend DMDBClass;
1781323    *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
1781324    * EM: DMDBVar Macro ;
MPRINT(EM_DIAGRAM):   * EM: DMDBVar Macro ;
1781325    *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
1781326    %macro DMDBVar;
1781327    
1781328    %mend DMDBVar;
1781329    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1781330    * EM: Create DMDB;
MPRINT(EM_DIAGRAM):   * EM: Create DMDB;
1781331    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1781332    proc dmdb batch data=EMWS8.BINNING_TRAIN
1781333    dmdbcat=WORK.EM_DMDB
1781334    maxlevel = 513
1781335    ;
MPRINT(EM_DIAGRAM):   proc dmdb batch data=EMWS8.BINNING_TRAIN dmdbcat=WORK.EM_DMDB maxlevel = 
513 ;
MPRINT(EM_DIAGRAM):   class
1781336    class %DMDBClass;
MPRINT(DMDBCLASS):   DepVar(DESC)
MPRINT(EM_DIAGRAM):  ;
1781337    target
1781338    DepVar
1781339    ;
MPRINT(EM_DIAGRAM):   target DepVar ;
1781340    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Records processed = 2374   Memory used = 511K.
NOTE: View EMWS8.BINNING_TRAIN.VIEW used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      
NOTE: There were 2374 observations read from the data set EMWS8.PART_TRAIN.
NOTE: There were 2374 observations read from the data set EMWS8.BINNING_TRAIN.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):   *--- end code ---*;
1781341    quit;
1781342    *--- end code ---*;

1781343    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
1781344    * Rule Induction Training;
MPRINT(EM_DIAGRAM):   * Rule Induction Training;
1781345    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;

1781346    * Get counts for DepVar;
MPRINT(EM_DIAGRAM):    * Get counts for DepVar;
1781347    ;
MPRINT(EM_DIAGRAM):   ;
1781348    data _scr(keep= _level_ DepVar);
MPRINT(EM_DIAGRAM):   data _scr(keep= _level_ DepVar);
1781349    set EMWS8.BINNING_TRAIN;
MPRINT(EM_DIAGRAM):   set EMWS8.BINNING_TRAIN;
1781350    length _level_ $16;
MPRINT(EM_DIAGRAM):   length _level_ $16;
1781351    label _level_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_rulelevel_vlabel, NOQUOTE,
1781351  ! DepVar))";
MPRINT(EM_DIAGRAM):   label _level_ = "DepVar";
1781352    _tmp=putn(DepVar, 'best.');
MPRINT(EM_DIAGRAM):   _tmp=putn(DepVar, 'best.');
1781353    %DMNORMCP(_tmp, _level_);
MPRINT(DMNORMCP):   _level_=dmnorm(_tmp,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1781354    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: View EMWS8.BINNING_TRAIN.VIEW used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      
NOTE: There were 2374 observations read from the data set EMWS8.PART_TRAIN.
NOTE: There were 2374 observations read from the data set EMWS8.BINNING_TRAIN.
NOTE: The data set WORK._SCR has 2374 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

1781355    proc freq data=_scr noprint;
MPRINT(EM_DIAGRAM):   proc freq data=_scr noprint;
1781356    table _level_ / out=_count;
MPRINT(EM_DIAGRAM):   table _level_ / out=_count;
1781357    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2374 observations read from the data set WORK._SCR.
NOTE: The data set WORK._COUNT has 2 observations and 3 variables.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1781358    * Get Normalized counts for DepVar;
MPRINT(EM_DIAGRAM):    * Get Normalized counts for DepVar;
1781359    ;
MPRINT(EM_DIAGRAM):   ;
1781360    data _scr(keep= _level_ DepVar);
MPRINT(EM_DIAGRAM):   data _scr(keep= _level_ DepVar);
1781361    set EMWS8.BINNING_VALIDATE;
MPRINT(EM_DIAGRAM):   set EMWS8.BINNING_VALIDATE;
1781362    length _level_ $16;
MPRINT(EM_DIAGRAM):   length _level_ $16;
1781363    label _level_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_rulelevel_vlabel, NOQUOTE,
1781363  ! DepVar))";
MPRINT(EM_DIAGRAM):   label _level_ = "DepVar";
1781364    _tmp = putn(DepVar, 'best.');
MPRINT(EM_DIAGRAM):   _tmp = putn(DepVar, 'best.');
1781365    %DMNORMCP(_tmp, _level_);
MPRINT(DMNORMCP):   _level_=dmnorm(_tmp,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1781366    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: View EMWS8.BINNING_VALIDATE.VIEW used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: There were 1018 observations read from the data set EMWS8.BINNING_VALIDATE.
NOTE: The data set WORK._SCR has 1018 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

1781367    proc freq data=_scr noprint;
MPRINT(EM_DIAGRAM):   proc freq data=_scr noprint;
1781368    table _level_ / out= _vcount;
MPRINT(EM_DIAGRAM):   table _level_ / out= _vcount;
1781369    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1018 observations read from the data set WORK._SCR.
NOTE: The data set WORK._VCOUNT has 2 observations and 3 variables.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1781370    data _vcount;
MPRINT(EM_DIAGRAM):    data _vcount;
1781371    set _vcount;
MPRINT(EM_DIAGRAM):   set _vcount;
1781372    label count = "%sysfunc(sasmsg(sashelp.dmine, rpt_validcount_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label count = "Valid Count";
1781373    label percent = "%sysfunc(sasmsg(sashelp.dmine, rpt_validpercent_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label percent = "Valid Percent";
1781374    rename count = vcount;
MPRINT(EM_DIAGRAM):   rename count = vcount;
1781375    rename percent = vpercent;
MPRINT(EM_DIAGRAM):   rename percent = vpercent;
1781376    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2 observations read from the data set WORK._VCOUNT.
NOTE: The data set WORK._VCOUNT has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1781377    data _count;
MPRINT(EM_DIAGRAM):   data _count;
1781378    merge _count _vcount;
MPRINT(EM_DIAGRAM):   merge _count _vcount;
1781379    by _level_;
MPRINT(EM_DIAGRAM):   by _level_;
1781380    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2 observations read from the data set WORK._COUNT.
NOTE: There were 2 observations read from the data set WORK._VCOUNT.
NOTE: The data set WORK._COUNT has 2 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1781381    data _count;
MPRINT(EM_DIAGRAM):    data _count;
1781382    set _count;
MPRINT(EM_DIAGRAM):   set _count;
1781383    label count = "%sysfunc(sasmsg(sashelp.dmine, rpt_traincount_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label count = "Train Count";
1781384    label percent = "%sysfunc(sasmsg(sashelp.dmine, rpt_trainpercent_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label percent = "Train Percent";
1781385    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2 observations read from the data set WORK._COUNT.
NOTE: The data set WORK._COUNT has 2 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1781386    proc sort data=_count;
MPRINT(EM_DIAGRAM):   proc sort data=_count;
1781387    by DESCENDING count;
MPRINT(EM_DIAGRAM):   by DESCENDING count;
1781388    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2 observations read from the data set WORK._COUNT.
NOTE: The data set WORK._COUNT has 2 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   *;
1781389    *;
1781390    title9 "%sysfunc(sasmsg(sashelp.dmine, rpt_tarfreq_title, NOQUOTE, DepVar))";
MPRINT(EM_DIAGRAM):   title9 "Target=DepVar: Frequencies";
MPRINT(EM_DIAGRAM):   *;
1781391    *;
1781392    proc print data=_count noobs label;
MPRINT(EM_DIAGRAM):   proc print data=_count noobs label;
1781393    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2 observations read from the data set WORK._COUNT.
NOTE: The PROCEDURE PRINT printed page 1758.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1781394    title9;
MPRINT(EM_DIAGRAM):   title9;
1781395    data WORK.M2TAHXKY;
MPRINT(EM_DIAGRAM):    data WORK.M2TAHXKY;
1781396    set WORK.M2TAHXKY;
MPRINT(EM_DIAGRAM):   set WORK.M2TAHXKY;
1781397    if NAME^='DepVar' then delete;
MPRINT(EM_DIAGRAM):   if NAME^='DepVar' then delete;
1781398    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 17 observations read from the data set WORK.M2TAHXKY.
NOTE: The data set WORK.M2TAHXKY has 1 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1781399    *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------* ;
1781400    * EM: DMDBClass Macro ;
MPRINT(EM_DIAGRAM):   * EM: DMDBClass Macro ;
1781401    *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
1781402    %macro DMDBClass;
1781403        DepVar(DESC)
1781404    %mend DMDBClass;
1781405    *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
1781406    * EM: DMDBVar Macro ;
MPRINT(EM_DIAGRAM):   * EM: DMDBVar Macro ;
1781407    *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
1781408    %macro DMDBVar;
1781409    
1781410    %mend DMDBVar;
1781411    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1781412    * EM: Create DMDB;
MPRINT(EM_DIAGRAM):   * EM: Create DMDB;
1781413    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1781414    proc dmdb batch data=EMWS8.BINNING_TRAIN
1781415    dmdbcat=WORK.EM_DMDB
1781416    maxlevel = 513
1781417    ;
MPRINT(EM_DIAGRAM):   proc dmdb batch data=EMWS8.BINNING_TRAIN dmdbcat=WORK.EM_DMDB maxlevel = 
513 ;
MPRINT(EM_DIAGRAM):   class
1781418    class %DMDBClass;
MPRINT(DMDBCLASS):   DepVar(DESC)
MPRINT(EM_DIAGRAM):  ;
1781419    target
1781420    DepVar
1781421    ;
MPRINT(EM_DIAGRAM):   target DepVar ;
1781422    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Records processed = 2374   Memory used = 511K.
NOTE: View EMWS8.BINNING_TRAIN.VIEW used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      
NOTE: There were 2374 observations read from the data set EMWS8.PART_TRAIN.
NOTE: There were 2374 observations read from the data set EMWS8.BINNING_TRAIN.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):   *--- end code ---*;
1781423    quit;
1781424    *--- end code ---*;

1781425    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
1781426    * Rip Model 1;
MPRINT(EM_DIAGRAM):   * Rip Model 1;
1781427    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1781428    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1781429    * TREE MODEL DepVar BINARY RIP1;
MPRINT(EM_DIAGRAM):   * TREE MODEL DepVar BINARY RIP1;
1781430    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;

MPRINT(EM_DIAGRAM):   reset noprint;
MPRINT(EM_DIAGRAM):   select count(*) into :_tmpnobs from EMWS8.BINNING_TRAIN;
NOTE: View EMWS8.BINNING_TRAIN.VIEW used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      
NOTE: There were 2374 observations read from the data set EMWS8.PART_TRAIN.
MPRINT(EM_DIAGRAM):   quit;
1781431    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
1781432    * Rule3: Create decision matrix;
MPRINT(EM_DIAGRAM):   * Rule3: Create decision matrix;
1781433    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1781434    *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
1781435    * Rule3: Tree Variables Macro ;
MPRINT(EM_DIAGRAM):   * Rule3: Tree Variables Macro ;
1781436    *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
1781437    %macro EM_TREEVARS;
1781438        GRP_AcceptedCmp5 GRP_Frq GRP_Income GRP_Mnt GRP_MntFishProducts
1781439       GRP_MntGoldProds GRP_MntMeatProducts GRP_MntWines GRP_NumCatalogPurchases
1781440       GRP_NumDistPurchases GRP_NumWebPurchases GRP_RFMstat GRP_RMntFrq GRP_Recency
1781441       Year_Birth
1781442    %mend EM_TREEVARS;
1781443    *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
1781444    * Rule3: Tree Targets Macro ;
MPRINT(EM_DIAGRAM):   * Rule3: Tree Targets Macro ;
1781445    *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
1781446    %macro EM_TREETARGETS;
1781447        DepVar
1781448    %mend EM_TREETARGETS;
1781449    data WORK.EM_Rule3 / view=WORK.EM_Rule3;
MPRINT(EM_DIAGRAM):   data WORK.EM_Rule3 / view=WORK.EM_Rule3;
1781450    set
1781450  ! EMWS8.BINNING_TRAIN(keep=%EM_TREEVARS %EM_TREETARGETS);
MPRINT(EM_DIAGRAM):   set EMWS8.BINNING_TRAIN(keep
MPRINT(EM_DIAGRAM):  =GRP_AcceptedCmp5 GRP_Frq GRP_Income GRP_Mnt GRP_MntFishProducts 
GRP_MntGoldProds GRP_MntMeatProducts GRP_MntWines GRP_NumCatalogPurchases GRP_NumDistPurchases 
GRP_NumWebPurchases GRP_RFMstat GRP_RMntFrq GRP_Recency Year_Birth DepVar);
1781451    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: DATA STEP view saved on file WORK.EM_RULE3.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.BINNING_TRAIN.VIEW used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * Rule3: Interval Inputs Macro ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
1781452    *------------------------------------------------------------* ;
1781453    * Rule3: Interval Inputs Macro ;
1781454    *------------------------------------------------------------* ;
1781455    %macro INTINPUTS;
1781456        Year_Birth
1781457    %mend INTINPUTS;
1781458    *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
1781459    * Rule3: Binary and Nominal Inputs Macro ;
MPRINT(EM_DIAGRAM):   * Rule3: Binary and Nominal Inputs Macro ;
1781460    *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
1781461    %macro NOMINPUTS;
1781462        GRP_AcceptedCmp5 GRP_Frq GRP_Income GRP_Mnt GRP_MntFishProducts
1781463       GRP_MntGoldProds GRP_MntMeatProducts GRP_MntWines GRP_NumCatalogPurchases
1781464       GRP_NumDistPurchases GRP_NumWebPurchases GRP_RFMstat GRP_RMntFrq GRP_Recency
1781465    %mend NOMINPUTS;
1781466    *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
1781467    * Rule3: Ordinal Inputs Macro ;
MPRINT(EM_DIAGRAM):   * Rule3: Ordinal Inputs Macro ;
1781468    *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
1781469    %macro ORDINPUTS;
1781470    
1781471    %mend ORDINPUTS;
1781472    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1781473    * Rule3: Run ARBOR procedure;
MPRINT(EM_DIAGRAM):   * Rule3: Run ARBOR procedure;
1781474    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;

1781475    proc arbor data=WORK.EM_Rule3
1781476    Leafsize=50
1781477    Mincatsize = 5
1781478    Maxdepth=4
1781479    Missing=USEINSEARCH
1781480    ;
MPRINT(EM_DIAGRAM):    proc arbor data=WORK.EM_Rule3 Leafsize=50 Mincatsize = 5 Maxdepth=4 
Missing=USEINSEARCH ;
1781481    ;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):   input
1781482    input %INTINPUTS
MPRINT(INTINPUTS):   Year_Birth
1781483    / level = interval;
MPRINT(EM_DIAGRAM):   / level = interval;
MPRINT(EM_DIAGRAM):   input
1781484    input %NOMINPUTS
MPRINT(NOMINPUTS):   GRP_AcceptedCmp5 GRP_Frq GRP_Income GRP_Mnt GRP_MntFishProducts 
GRP_MntGoldProds GRP_MntMeatProducts GRP_MntWines GRP_NumCatalogPurchases GRP_NumDistPurchases 
GRP_NumWebPurchases GRP_RFMstat GRP_RMntFrq GRP_Recency
1781485    / level=nominal;
The SAS System

MPRINT(EM_DIAGRAM):   / level=nominal;
1781486    target DepVar / level=BINARY
1781487    Criterion=GINI
1781488    ;
MPRINT(EM_DIAGRAM):   target DepVar / level=BINARY Criterion=GINI ;
1781489    ;
MPRINT(EM_DIAGRAM):   ;
1781490    Performance DISK
1781491    ;
MPRINT(EM_DIAGRAM):   Performance DISK ;
NOTE: View EMWS8.BINNING_VALIDATE.VIEW used (Total process time):
      real time           0.20 seconds
      cpu time            0.20 seconds
      
1781492    Assess
1781493    Validata=EMWS8.BINNING_VALIDATE
1781494    measure=ASE
1781495    ;
MPRINT(EM_DIAGRAM):   Assess Validata=EMWS8.BINNING_VALIDATE measure=ASE ;
NOTE: 1402517 kilobytes of physical memory.
NOTE: Will use 2374 out of 2374 training cases.
NOTE: Using memory pool with 85638144 bytes.
NOTE: Passed training data 8 times.
NOTE: Training used 962976 bytes of work memory.
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: The subtree sequence contains 13 subtrees. The largest has 25 nodes and 13 leaves.
NOTE: Using subtree with 17 nodes and 9 leaves.
1781496    MAKEMACRO NLEAVES=nleaves;
MPRINT(EM_DIAGRAM):   MAKEMACRO NLEAVES=nleaves;
NOTE: Created macro variable NLEAVES equal to 9.
1781497    save
1781498    MODEL=WORK.OUTTREE_TREE_0NF5BC8
1781499    SEQUENCE=WORK.OUTSEQ_TREE_0NF5BC8
1781500    IMPORTANCE=WORK.OUTIMPORT_TREE_0NF5BC8
1781501    NODESTAT=WORK.OUTNODES_TREE_0NF5BC8
1781502    SUMMARY=WORK.OUTSUMMARY_TREE_0NF5BC8
1781503    STATSBYNODE=WORK.OUTSTATS_TREE_0NF5BC8
1781504    Pathlistnonmissing = WORK.OUTPATH_TREE_0NF5BC8
1781505    Rules = WORK.OUTRULES_TREE_0NF5BC8
1781506    ;
MPRINT(EM_DIAGRAM):   save MODEL=WORK.OUTTREE_TREE_0NF5BC8 SEQUENCE=WORK.OUTSEQ_TREE_0NF5BC8 
IMPORTANCE=WORK.OUTIMPORT_TREE_0NF5BC8 NODESTAT=WORK.OUTNODES_TREE_0NF5BC8 
SUMMARY=WORK.OUTSUMMARY_TREE_0NF5BC8 STATSBYNODE=WORK.OUTSTATS_TREE_0NF5BC8 Pathlistnonmissing 
= WORK.OUTPATH_TREE_0NF5BC8 Rules = WORK.OUTRULES_TREE_0NF5BC8 ;
NOTE: The data set WORK.OUTIMPORT_TREE_0NF5BC8 has 15 observations and 6 variables.
NOTE: The data set WORK.OUTTREE_TREE_0NF5BC8 has 846 observations and 4 variables.
NOTE: The data set WORK.OUTNODES_TREE_0NF5BC8 has 17 observations and 24 variables.
NOTE: The data set WORK.OUTPATH_TREE_0NF5BC8 has 68 observations and 7 variables.
NOTE: The data set WORK.OUTRULES_TREE_0NF5BC8 has 282 observations and 6 variables.
NOTE: The data set WORK.OUTSEQ_TREE_0NF5BC8 has 13 observations and 20 variables.
NOTE: The data set WORK.OUTSTATS_TREE_0NF5BC8 has 119 observations and 5 variables.
NOTE: The data set WORK.OUTSUMMARY_TREE_0NF5BC8 has 24 observations and 6 variables.
1781507    code file="C:\Users\LUKASF~1\AppData\Local\Temp\SAS Temporary
1781507  ! Files\_TD9752_WN7LF-LEAVE_\Prc2\RIP1.sas"
1781508    group=Rule3
1781509    ;
MPRINT(EM_DIAGRAM):   code file="C:\Users\LUKASF~1\AppData\Local\Temp\SAS Temporary 
Files\_TD9752_WN7LF-LEAVE_\Prc2\RIP1.sas" group=Rule3 ;
NOTE: External file C:\Users\LUKASF~1\AppData\Local\Temp\SAS Temporary 
      Files\_TD9752_WN7LF-LEAVE_\Prc2\RIP1.sas opened.
1781510    code file="C:\Users\LUKASF~1\AppData\Local\Temp\SAS Temporary
1781510  ! Files\_TD9752_WN7LF-LEAVE_\Prc2\RIP1_res.sas"
1781511    group=Rule3
1781512    residual
1781513    ;
MPRINT(EM_DIAGRAM):   code file="C:\Users\LUKASF~1\AppData\Local\Temp\SAS Temporary 
Files\_TD9752_WN7LF-LEAVE_\Prc2\RIP1_res.sas" group=Rule3 residual ;
NOTE: External file C:\Users\LUKASF~1\AppData\Local\Temp\SAS Temporary 
      Files\_TD9752_WN7LF-LEAVE_\Prc2\RIP1_res.sas opened.
NOTE: View EMWS8.BINNING_TRAIN.VIEW used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      
1781514    score data=EMWS8.BINNING_TRAIN out=_ptrain
1781515    ;
MPRINT(EM_DIAGRAM):   score data=EMWS8.BINNING_TRAIN out=_ptrain ;
NOTE: There were 2374 observations read from the data set EMWS8.PART_TRAIN.
NOTE: The data set WORK._PTRAIN has 2374 observations and 73 variables.
NOTE: View EMWS8.BINNING_VALIDATE.VIEW used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      
1781516    score data=EMWS8.BINNING_VALIDATE out=_pvalid
1781517    ;
MPRINT(EM_DIAGRAM):   score data=EMWS8.BINNING_VALIDATE out=_pvalid ;
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: The data set WORK._PVALID has 1018 observations and 73 variables.
1781518    run;
MPRINT(EM_DIAGRAM):   run;

1781519    quit;
MPRINT(EM_DIAGRAM):   quit;

NOTE: There were 2374 observations read from the data set EMWS8.PART_TRAIN.
NOTE: View WORK.EM_RULE3.VIEW used (Total process time):
      real time           0.34 seconds
      cpu time            0.35 seconds
      
NOTE: There were 2374 observations read from the data set EMWS8.BINNING_TRAIN.
NOTE: There were 2374 observations read from the data set WORK.EM_RULE3.
NOTE: The data set WORK._NAMEDAT has 2 observations and 5 variables.
NOTE: PROCEDURE ARBOR used (Total process time):
      real time           0.36 seconds
      cpu time            0.35 seconds
      

1781520    data WORK.OUTIMPORT_TREE_0NF5BC8;
MPRINT(EM_DIAGRAM):    data WORK.OUTIMPORT_TREE_0NF5BC8;
1781521    set WORK.OUTIMPORT_TREE_0NF5BC8;
MPRINT(EM_DIAGRAM):   set WORK.OUTIMPORT_TREE_0NF5BC8;
1781522    label NAME = "%sysfunc(sasmsg(sashelp.dmine, meta_name_vlabel, noquote))" LABEL =
1781522  ! "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, noquote))" NRULES =
1781522  ! "%sysfunc(sasmsg(sashelp.dmine, rpt_nrules_vlabel, noquote))" IMPORTANCE =
1781523       "%sysfunc(sasmsg(sashelp.dmine, rpt_importance_vlabel, noquote))" NSURROGATES =
1781523  ! "%sysfunc(sasmsg(sashelp.dmine, rpt_nsurrogates_vlabel, noquote))"
1781524    VIMPORTANCE = "%sysfunc(sasmsg(sashelp.dmine, rpt_vimportance_vlabel, noquote))"
1781524  ! RATIO = "%sysfunc(sasmsg(sashelp.dmine, rpt_ratio_vlabel, noquote))"
1781525    ;
MPRINT(EM_DIAGRAM):   label NAME = "Variable Name" LABEL = "Label" NRULES = "Number of 
Splitting Rules" IMPORTANCE = "Importance" NSURROGATES = "Number of Surrogate Rules" 
VIMPORTANCE = "Validation Importance" RATIO = "Ratio of Validation to Training Importance" ;
1781526    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Variable NSURROGATES is uninitialized.
NOTE: There were 15 observations read from the data set WORK.OUTIMPORT_TREE_0NF5BC8.
NOTE: The data set WORK.OUTIMPORT_TREE_0NF5BC8 has 15 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1781527    filename x "C:\Users\LUKASF~1\AppData\Local\Temp\SAS Temporary
1781527  ! Files\_TD9752_WN7LF-LEAVE_\Prc2\DESCRIBE.SOURCE" encoding='utf-8' NOBOM;
MPRINT(EM_DIAGRAM):   filename x "C:\Users\LUKASF~1\AppData\Local\Temp\SAS Temporary 
Files\_TD9752_WN7LF-LEAVE_\Prc2\DESCRIBE.SOURCE" encoding='utf-8' NOBOM;
1781528    data temp;
MPRINT(EM_DIAGRAM):    data temp;
1781529    length varname $28;
MPRINT(EM_DIAGRAM):   length varname $28;
1781530    retain varname;
MPRINT(EM_DIAGRAM):   retain varname;
1781531    set WORK.OUTPATH_TREE_0NF5BC8;
MPRINT(EM_DIAGRAM):   set WORK.OUTPATH_TREE_0NF5BC8;
1781532    if ^missing(variable) then varname=variable;
MPRINT(EM_DIAGRAM):   if ^missing(variable) then varname=variable;
1781533    else if ^missing(var_name) then varname=var_name;
MPRINT(EM_DIAGRAM):   else if ^missing(var_name) then varname=var_name;
1781534    output;
MPRINT(EM_DIAGRAM):   output;
1781535    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 68 observations read from the data set WORK.OUTPATH_TREE_0NF5BC8.
NOTE: The data set WORK.TEMP has 68 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1781536    proc sort data=temp;
MPRINT(EM_DIAGRAM):   proc sort data=temp;
1781537    by node;
MPRINT(EM_DIAGRAM):   by node;
1781538    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 68 observations read from the data set WORK.TEMP.
NOTE: The data set WORK.TEMP has 68 observations and 8 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1781539    proc sort data=WORK.OUTNODES_TREE_0NF5BC8 out=outnodes;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.OUTNODES_TREE_0NF5BC8 out=outnodes;
1781540    by node;
MPRINT(EM_DIAGRAM):   by node;
1781541    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 17 observations read from the data set WORK.OUTNODES_TREE_0NF5BC8.
NOTE: The data set WORK.OUTNODES has 17 observations and 24 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1781542    data temp;
MPRINT(EM_DIAGRAM):   data temp;
1781543    merge temp(in=_a) outnodes(keep= node
1781544    NPRIORS
1781545    P_DepVar0
1781546    P_DepVar1
1781547    );
MPRINT(EM_DIAGRAM):   merge temp(in=_a) outnodes(keep= node NPRIORS P_DepVar0 P_DepVar1 );
1781548    by node;
MPRINT(EM_DIAGRAM):   by node;
1781549    if _a;
MPRINT(EM_DIAGRAM):   if _a;
1781550    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 68 observations read from the data set WORK.TEMP.
NOTE: There were 17 observations read from the data set WORK.OUTNODES.
NOTE: The data set WORK.TEMP has 68 observations and 11 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1781551    proc sort data=temp;
MPRINT(EM_DIAGRAM):   proc sort data=temp;
1781552    by node descending varname descending numeric_value;
MPRINT(EM_DIAGRAM):   by node descending varname descending numeric_value;
1781553    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 68 observations read from the data set WORK.TEMP.
NOTE: The data set WORK.TEMP has 68 observations and 11 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1781554    data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
1781555    file x;
MPRINT(EM_DIAGRAM):   file x;
1781556    set temp;
MPRINT(EM_DIAGRAM):   set temp;
1781557    by node descending varname;
MPRINT(EM_DIAGRAM):   by node descending varname;
1781558    retain origvar oldnode string;
MPRINT(EM_DIAGRAM):   retain origvar oldnode string;
1781559    length origvar $32 oldnode 8 string $200;
MPRINT(EM_DIAGRAM):   length origvar $32 oldnode 8 string $200;
1781560    if _n_ = 1 then do;
MPRINT(EM_DIAGRAM):   if _n_ = 1 then do;
1781561    origvar = varname;
MPRINT(EM_DIAGRAM):   origvar = varname;
1781562    oldnode = node;
MPRINT(EM_DIAGRAM):   oldnode = node;
1781563    end;
MPRINT(EM_DIAGRAM):   end;
1781564    if first.node then do;
MPRINT(EM_DIAGRAM):   if first.node then do;
1781565    put "&EM_CODEBAR";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
1781566    put " Node = " node;
MPRINT(EM_DIAGRAM):   put " Node = " node;
1781567    put "&EM_CODEBAR";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
1781568    end;
MPRINT(EM_DIAGRAM):   end;
1781569    if first.varname then do;
MPRINT(EM_DIAGRAM):   if first.varname then do;
1781570    if RELATION ^in ("=", "ISMISSING", "ISNOTMISSING") then do;
MPRINT(EM_DIAGRAM):   if RELATION ^in ("=", "ISMISSING", "ISNOTMISSING") then do;
1781571    if MISSING(CHARACTER_VALUE) then do;
MPRINT(EM_DIAGRAM):   if MISSING(CHARACTER_VALUE) then do;
1781572    if NUMERIC_VALUE ne . then do;
MPRINT(EM_DIAGRAM):   if NUMERIC_VALUE ne . then do;
1781573    if ^first.node then do;
MPRINT(EM_DIAGRAM):   if ^first.node then do;
1781574    string= "AND "|| strip(varname)||" "||strip(relation)||" "||strip(numeric_value);
MPRINT(EM_DIAGRAM):   string= "AND "|| strip(varname)||" "||strip(relation)||" 
"||strip(numeric_value);
1781575    end;
MPRINT(EM_DIAGRAM):   end;
1781576    else do;
MPRINT(EM_DIAGRAM):   else do;
1781577    string= "if "|| strip(varname)||" "||strip(relation)||" "||strip(numeric_value);
MPRINT(EM_DIAGRAM):   string= "if "|| strip(varname)||" "||strip(relation)||" 
"||strip(numeric_value);
1781578    end;
MPRINT(EM_DIAGRAM):   end;
1781579    end;
MPRINT(EM_DIAGRAM):   end;
1781580    end;
MPRINT(EM_DIAGRAM):   end;
1781581    else do;
MPRINT(EM_DIAGRAM):   else do;
1781582    if ^first.node then do;
MPRINT(EM_DIAGRAM):   if ^first.node then do;
1781583    string= "AND "|| strip(varname)||" "||strip(relation)||" "||strip(character_value);
MPRINT(EM_DIAGRAM):   string= "AND "|| strip(varname)||" "||strip(relation)||" 
"||strip(character_value);
1781584    end;
MPRINT(EM_DIAGRAM):   end;
1781585    else do;
MPRINT(EM_DIAGRAM):   else do;
1781586    string= "if "|| strip(varname)||" "||strip(relation)||" "||strip(character_value);
MPRINT(EM_DIAGRAM):   string= "if "|| strip(varname)||" "||strip(relation)||" 
"||strip(character_value);
1781587    end;
MPRINT(EM_DIAGRAM):   end;
1781588    end;
MPRINT(EM_DIAGRAM):   end;
1781589    end;
MPRINT(EM_DIAGRAM):   end;
1781590    else if RELATION in ("=") then do;
MPRINT(EM_DIAGRAM):   else if RELATION in ("=") then do;
1781591    if ^first.node then do;
MPRINT(EM_DIAGRAM):   if ^first.node then do;
1781592    string = "AND "||strip(varname) ||" IS ONE OF: "||character_value;
MPRINT(EM_DIAGRAM):   string = "AND "||strip(varname) ||" IS ONE OF: "||character_value;
1781593    end;
MPRINT(EM_DIAGRAM):   end;
1781594    else do;
MPRINT(EM_DIAGRAM):   else do;
1781595    string = "if "|| strip(varname) ||" IS ONE OF: "||character_value;
MPRINT(EM_DIAGRAM):   string = "if "|| strip(varname) ||" IS ONE OF: "||character_value;
1781596    end;
MPRINT(EM_DIAGRAM):   end;
1781597    end;
MPRINT(EM_DIAGRAM):   end;
1781598    else if RELATION in ("ISMISSING") then do;
MPRINT(EM_DIAGRAM):   else if RELATION in ("ISMISSING") then do;
1781599    if ^first.node then do;
MPRINT(EM_DIAGRAM):   if ^first.node then do;
1781600    string = " AND "|| strip(varname) || " equals Missing";
MPRINT(EM_DIAGRAM):   string = " AND "|| strip(varname) || " equals Missing";
1781601    end;
MPRINT(EM_DIAGRAM):   end;
1781602    else do;
MPRINT(EM_DIAGRAM):   else do;
1781603    string = "if "|| strip(varname) ||" equals Missing";
MPRINT(EM_DIAGRAM):   string = "if "|| strip(varname) ||" equals Missing";
1781604    end;
MPRINT(EM_DIAGRAM):   end;
1781605    end;
MPRINT(EM_DIAGRAM):   end;
1781606    else if RELATION in ("ISNOTMISSING") then do;
MPRINT(EM_DIAGRAM):   else if RELATION in ("ISNOTMISSING") then do;
1781607    if ^first.node then do;
MPRINT(EM_DIAGRAM):   if ^first.node then do;
1781608    string = " AND "|| strip(varname) || " equals All Values";
MPRINT(EM_DIAGRAM):   string = " AND "|| strip(varname) || " equals All Values";
1781609    end;
MPRINT(EM_DIAGRAM):   end;
1781610    else do;
MPRINT(EM_DIAGRAM):   else do;
1781611    string = "if "|| strip(varname) ||" equals All Values";
MPRINT(EM_DIAGRAM):   string = "if "|| strip(varname) ||" equals All Values";
1781612    end;
MPRINT(EM_DIAGRAM):   end;
1781613    end;
MPRINT(EM_DIAGRAM):   end;
1781614    if ^missing(varname) then origvar = varname;
MPRINT(EM_DIAGRAM):   if ^missing(varname) then origvar = varname;
1781615    oldnode=node;
MPRINT(EM_DIAGRAM):   oldnode=node;
1781616    end;
MPRINT(EM_DIAGRAM):   end;
1781617    else do;
MPRINT(EM_DIAGRAM):   else do;
1781618    if RELATION ^in ("=", "ISMISSING", "ISNOTMISSING") then do;
MPRINT(EM_DIAGRAM):   if RELATION ^in ("=", "ISMISSING", "ISNOTMISSING") then do;
1781619    if MISSING(CHARACTER_VALUE) then do;
MPRINT(EM_DIAGRAM):   if MISSING(CHARACTER_VALUE) then do;
1781620    if NUMERIC_VALUE ne . then do;
MPRINT(EM_DIAGRAM):   if NUMERIC_VALUE ne . then do;
1781621    if ^MISSING(string) then string= strip(string)||" AND "|| strip(varname)||"
1781621  ! "||strip(relation)||" "||strip(numeric_value);
MPRINT(EM_DIAGRAM):   if ^MISSING(string) then string= strip(string)||" AND "|| 
strip(varname)||" "||strip(relation)||" "||strip(numeric_value);
1781622    else string= " if "|| strip(varname)||" "||strip(relation)||"
1781622  ! "||strip(numeric_value);
MPRINT(EM_DIAGRAM):   else string= " if "|| strip(varname)||" "||strip(relation)||" 
"||strip(numeric_value);
1781623    end;
MPRINT(EM_DIAGRAM):   end;
1781624    end;
MPRINT(EM_DIAGRAM):   end;
1781625    else do;
MPRINT(EM_DIAGRAM):   else do;
1781626    if ^MISSING(string) then string= strip(string)||" AND "|| strip(varname)||"
1781626  ! "||strip(relation)||" "||strip(character_value);
MPRINT(EM_DIAGRAM):   if ^MISSING(string) then string= strip(string)||" AND "|| 
strip(varname)||" "||strip(relation)||" "||strip(character_value);
1781627    else string= " if "|| strip(varname)||" "||strip(relation)||"
1781627  ! "||strip(character_value);
MPRINT(EM_DIAGRAM):   else string= " if "|| strip(varname)||" "||strip(relation)||" 
"||strip(character_value);
1781628    end;
MPRINT(EM_DIAGRAM):   end;
1781629    end;
MPRINT(EM_DIAGRAM):   end;
1781630    else if RELATION in ("=") then do;
MPRINT(EM_DIAGRAM):   else if RELATION in ("=") then do;
1781631    string = strip(string)||", "||strip(character_value);
MPRINT(EM_DIAGRAM):   string = strip(string)||", "||strip(character_value);
1781632    end;
MPRINT(EM_DIAGRAM):   end;
1781633    else if RELATION in ("ISMISSING") then do;
MPRINT(EM_DIAGRAM):   else if RELATION in ("ISMISSING") then do;
1781634    end;
MPRINT(EM_DIAGRAM):   end;
1781635    if ^missing(varname) then origvar = varname;
MPRINT(EM_DIAGRAM):   if ^missing(varname) then origvar = varname;
1781636    oldnode=node;
MPRINT(EM_DIAGRAM):   oldnode=node;
1781637    end;
MPRINT(EM_DIAGRAM):   end;
1781638    if last.varname then do;
MPRINT(EM_DIAGRAM):   if last.varname then do;
1781639    if RELATION in ("ISMISSING") then do;
MPRINT(EM_DIAGRAM):   if RELATION in ("ISMISSING") then do;
1781640    if ^first.varname then do;
MPRINT(EM_DIAGRAM):   if ^first.varname then do;
1781641    string = strip(string) || " or MISSING";
MPRINT(EM_DIAGRAM):   string = strip(string) || " or MISSING";
1781642    end;
MPRINT(EM_DIAGRAM):   end;
1781643    end;
MPRINT(EM_DIAGRAM):   end;
1781644    put string;
MPRINT(EM_DIAGRAM):   put string;
1781645    if ^missing(varname) then origvar = varname;
MPRINT(EM_DIAGRAM):   if ^missing(varname) then origvar = varname;
1781646    oldnode=node;
MPRINT(EM_DIAGRAM):   oldnode=node;
1781647    end;
MPRINT(EM_DIAGRAM):   end;
1781648    if last.node then do;
MPRINT(EM_DIAGRAM):   if last.node then do;
1781649    put "then ";
MPRINT(EM_DIAGRAM):   put "then ";
1781650    put " Tree Node Identifier   = " node;
MPRINT(EM_DIAGRAM):   put " Tree Node Identifier   = " node;
1781651    put " Number of Observations = " NPRIORS;
MPRINT(EM_DIAGRAM):   put " Number of Observations = " NPRIORS;
1781652    put " Predicted: DepVar=0  = " P_DepVar0;
MPRINT(EM_DIAGRAM):   put " Predicted: DepVar=0  = " P_DepVar0;
1781653    put " Predicted: DepVar=1  = " P_DepVar1;
MPRINT(EM_DIAGRAM):   put " Predicted: DepVar=1  = " P_DepVar1;
1781654    put " ";
MPRINT(EM_DIAGRAM):   put " ";
1781655    if ^missing(varname) then origvar = varname;
MPRINT(EM_DIAGRAM):   if ^missing(varname) then origvar = varname;
1781656    oldnode=node;
MPRINT(EM_DIAGRAM):   oldnode=node;
1781657    end;
MPRINT(EM_DIAGRAM):   end;
1781658    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Numeric values have been converted to character values at the places given by: 
      (Line):(Column).
      1781574:67    1781577:66    1781621:108   1781622:72    
NOTE: The file X is:
      
      Filename=C:\Users\LUKASF~1\AppData\Local\Temp\SAS Temporary 
      Files\_TD9752_WN7LF-LEAVE_\Prc2\DESCRIBE.SOURCE,
      RECFM=V,LRECL=1536,File Size (bytes)=0,
      Last Modified=28. April 2016 09.51 Uhr,
      Create Time=28. April 2016 09.51 Uhr

NOTE: 111 records were written to the file X.
      The minimum record length was 1.
      The maximum record length was 62.
NOTE: There were 68 observations read from the data set WORK.TEMP.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1781659    filename x;
MPRINT(EM_DIAGRAM):    filename x;
NOTE: Fileref X has been deassigned.
1781660    data leafds;
MPRINT(EM_DIAGRAM):    data leafds;
1781661    set WORK.OUTNODES_TREE_0NF5BC8;
MPRINT(EM_DIAGRAM):   set WORK.OUTNODES_TREE_0NF5BC8;
1781662    if LEAF ne .;
MPRINT(EM_DIAGRAM):   if LEAF ne .;
1781663    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 17 observations read from the data set WORK.OUTNODES_TREE_0NF5BC8.
NOTE: The data set WORK.LEAFDS has 9 observations and 24 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1781664    proc sort data=leafds;
MPRINT(EM_DIAGRAM):   proc sort data=leafds;
1781665    by descending N;
MPRINT(EM_DIAGRAM):   by descending N;
1781666    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 9 observations read from the data set WORK.LEAFDS.
NOTE: The data set WORK.LEAFDS has 9 observations and 24 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

NOTE: Argument three to KSUBSTR exceeds the length of the input string, the function has 
      recalculated the length of the string.
RIP LEAF: N=1  varid=17  nodeid=13  val=0.95194986072423  count=1436 
RIP LEAF: N=2  varid=18  nodeid=13  val=0.04805013927576  count=1436 
RIP LEAF: N=1  varid=17  nodeid=11  val=0.82027649769585  count=217 
RIP LEAF: N=2  varid=18  nodeid=11  val=0.17972350230414  count=217 
RIP LEAF: N=1  varid=17  nodeid=17  val=0.7734375  count=128 
RIP LEAF: N=2  varid=18  nodeid=17  val=0.2265625  count=128 
RIP LEAF: N=1  varid=17  nodeid=4  val=0.38709677419354  count=124 
RIP LEAF: N=2  varid=18  nodeid=4  val=0.61290322580645  count=124 
RIP LEAF: N=1  varid=17  nodeid=16  val=0.4758064516129  count=124 
RIP LEAF: N=2  varid=18  nodeid=16  val=0.52419354838709  count=124 
RIP LEAF: N=1  varid=17  nodeid=14  val=0.67256637168141  count=113 
RIP LEAF: N=2  varid=18  nodeid=14  val=0.32743362831858  count=113 
RIP LEAF: N=1  varid=17  nodeid=25  val=0.93577981651376  count=109 
RIP LEAF: N=2  varid=18  nodeid=25  val=0.06422018348623  count=109 
RIP LEAF: N=1  varid=17  nodeid=12  val=0.65079365079365  count=63 
RIP LEAF: N=2  varid=18  nodeid=12  val=0.34920634920634  count=63 
RIP LEAF: N=1  varid=17  nodeid=24  val=0.75  count=60 
RIP LEAF: N=2  varid=18  nodeid=24  val=0.25  count=60 
1781667    * RIP1: Print leaf table;
MPRINT(EM_DIAGRAM):    * RIP1: Print leaf table;
1781668    ;
MPRINT(EM_DIAGRAM):   ;
1781669    data leafds;
MPRINT(EM_DIAGRAM):   data leafds;
1781670    set leafds;
MPRINT(EM_DIAGRAM):   set leafds;
1781671    format P_DEPVAR0 8.4;
MPRINT(EM_DIAGRAM):   format P_DEPVAR0 8.4;
1781672    format P_DEPVAR1 8.4;
MPRINT(EM_DIAGRAM):   format P_DEPVAR1 8.4;
1781673    ;
MPRINT(EM_DIAGRAM):   ;
1781674    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 9 observations read from the data set WORK.LEAFDS.
NOTE: The data set WORK.LEAFDS has 9 observations and 24 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1781675    title9 "%sysfunc(sasmsg(sashelp.dmine, rpt_leaftable_title, NOQUOTE, RIP1, 100))";
MPRINT(EM_DIAGRAM):   title9 "RIP1 Leaf Table: Threshold= 100";
1781676    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_text_title, NOQUOTE, %nrbquote(No leaf
1781676  ! was ripped from the model.)))";
MPRINT(EM_DIAGRAM):   title10 "No leaf was ripped from the model.";
1781677    proc print data = leafds NOOBS LABEL;
MPRINT(EM_DIAGRAM):   proc print data = leafds NOOBS LABEL;
1781678    var NODE N
1781679    P_DEPVAR0
1781680    P_DEPVAR1
1781681    ;
MPRINT(EM_DIAGRAM):   var NODE N P_DEPVAR0 P_DEPVAR1 ;
1781682    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 9 observations read from the data set WORK.LEAFDS.
NOTE: The PROCEDURE PRINT printed page 1759.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1781683    title9;
MPRINT(EM_DIAGRAM):   title9;
1781684    title10;
MPRINT(EM_DIAGRAM):   title10;
MPRINT(EM_DIAGRAM):   * Create training data set with binary target for modeling;
MPRINT(EM_DIAGRAM):   ;
1781685    * Create training data set with binary target for modeling;
1781686    ;
1781687    data _ptrain;
MPRINT(EM_DIAGRAM):   data _ptrain;
1781688    length _bin $12;
MPRINT(EM_DIAGRAM):   length _bin $12;
1781689    set _ptrain;
MPRINT(EM_DIAGRAM):   set _ptrain;
1781690    _tmp=putn(DepVar, 'best.');
MPRINT(EM_DIAGRAM):   _tmp=putn(DepVar, 'best.');
1781691    %DMNORMIP(_tmp);
MPRINT(DMNORMIP):   call dmnorm(_tmp,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
1781692    _tmpLevel = '0';
MPRINT(EM_DIAGRAM):   _tmpLevel = '0';
1781693    %DMNORMCP(_tmpLevel, _tmpLevel);
MPRINT(DMNORMCP):   _tmpLevel=dmnorm(_tmpLevel,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1781694    if _tmp eq _tmpLevel then _bin = '1';
MPRINT(EM_DIAGRAM):   if _tmp eq _tmpLevel then _bin = '1';
1781695    else _bin = '0';
MPRINT(EM_DIAGRAM):   else _bin = '0';
1781696    drop _tmp _tmpLevel
1781697    ;
MPRINT(EM_DIAGRAM):   drop _tmp _tmpLevel ;
1781698    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2374 observations read from the data set WORK._PTRAIN.
NOTE: The data set WORK._PTRAIN has 2374 observations and 74 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1781699    * Create validation data set with binary target for modeling;
MPRINT(EM_DIAGRAM):    * Create validation data set with binary target for modeling;
1781700    ;
MPRINT(EM_DIAGRAM):   ;
1781701    data _pvalid;
MPRINT(EM_DIAGRAM):   data _pvalid;
1781702    length _bin $12;
MPRINT(EM_DIAGRAM):   length _bin $12;
1781703    set _pvalid;
MPRINT(EM_DIAGRAM):   set _pvalid;
1781704    _tmp = putn(DepVar, 'best.');
MPRINT(EM_DIAGRAM):   _tmp = putn(DepVar, 'best.');
1781705    %DMNORMIP(_TMP);
MPRINT(DMNORMIP):   call dmnorm(_TMP,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
1781706    _tmpLevel = '0';
MPRINT(EM_DIAGRAM):   _tmpLevel = '0';
1781707    %DMNORMCP(_tmpLevel, _tmpLevel);
MPRINT(DMNORMCP):   _tmpLevel=dmnorm(_tmpLevel,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1781708    if _tmp eq _tmpLevel then _bin = '1';
MPRINT(EM_DIAGRAM):   if _tmp eq _tmpLevel then _bin = '1';
1781709    else _bin = '0';
MPRINT(EM_DIAGRAM):   else _bin = '0';
1781710    drop _tmp
1781711    ;
MPRINT(EM_DIAGRAM):   drop _tmp ;
1781712    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1018 observations read from the data set WORK._PVALID.
NOTE: The data set WORK._PVALID has 1018 observations and 75 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1781713    data _train;
MPRINT(EM_DIAGRAM):    data _train;
1781714    set _ptrain;
MPRINT(EM_DIAGRAM):   set _ptrain;
1781715    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2374 observations read from the data set WORK._PTRAIN.
NOTE: The data set WORK._TRAIN has 2374 observations and 74 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1781716    data _valid;
MPRINT(EM_DIAGRAM):   data _valid;
1781717    set _pvalid;
MPRINT(EM_DIAGRAM):   set _pvalid;
1781718    options validvarname=any;
MPRINT(EM_DIAGRAM):   options validvarname=any;

NOTE: There were 1018 observations read from the data set WORK._PVALID.
NOTE: The data set WORK._VALID has 1018 observations and 75 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1781719    proc contents data=work._train out=_tempAdvisor noprint;
MPRINT(EM_DIAGRAM):   proc contents data=work._train out=_tempAdvisor noprint;
1781720    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._TEMPADVISOR has 74 observations and 40 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1781721    options validvarname=V7;
MPRINT(EM_DIAGRAM):   options validvarname=V7;
1781722    %let _dsidTable = 0;
1781723    %let _engineTable =;
1781724    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
1781725    dsid = open('work._train');
MPRINT(EM_DIAGRAM):   dsid = open('work._train');
1781726    call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EM_DIAGRAM):   call symput('_dsidTable', strip(put(dsid, best.)));
1781727    if dsid then do;
MPRINT(EM_DIAGRAM):   if dsid then do;
1781728    call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EM_DIAGRAM):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
1781729    dsid = close(dsid);
MPRINT(EM_DIAGRAM):   dsid = close(dsid);
1781730    end;
MPRINT(EM_DIAGRAM):   end;
1781731    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1781732    options fmterr;
MPRINT(EM_DIAGRAM):    options fmterr;
1781733    data _metaTestView;
MPRINT(EM_DIAGRAM):   data _metaTestView;
1781734    set work._train;
MPRINT(EM_DIAGRAM):   set work._train;
1781735    if _N_=1 then do;
MPRINT(EM_DIAGRAM):   if _N_=1 then do;
1781736    output;
MPRINT(EM_DIAGRAM):   output;
1781737    stop;
MPRINT(EM_DIAGRAM):   stop;
1781738    end;
MPRINT(EM_DIAGRAM):   end;
1781739    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set WORK._TRAIN.
NOTE: The data set WORK._METATESTVIEW has 1 observations and 74 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1781740    proc contents data=work._train
1781741    out=WORK.M0XPB_UG noprint;
MPRINT(EM_DIAGRAM):    proc contents data=work._train out=WORK.M0XPB_UG noprint;
1781742    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK.M0XPB_UG has 74 observations and 40 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1781743    data WORK.M0XPB_UG;
MPRINT(EM_DIAGRAM):    data WORK.M0XPB_UG;
1781744    length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20 INDEX $ 1 INDEXTYPE $
1781744  !  9;
MPRINT(EM_DIAGRAM):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20 INDEX $ 1 
INDEXTYPE $ 9;
1781745    label NAME =;
MPRINT(EM_DIAGRAM):   label NAME =;
1781746    set WORK.M0XPB_UG(keep=name type length label format formatl formatd informat
1781746  ! informl informd idxusage rename=(type=itype));
MPRINT(EM_DIAGRAM):   set WORK.M0XPB_UG(keep=name type length label format formatl formatd 
informat informl informd idxusage rename=(type=itype));
1781747    if itype = 1 then type = 'N';
MPRINT(EM_DIAGRAM):   if itype = 1 then type = 'N';
1781748    else type = 'C';
MPRINT(EM_DIAGRAM):   else type = 'C';
1781749    if formatl > 0 then do;
MPRINT(EM_DIAGRAM):   if formatl > 0 then do;
1781750    if format ne ' ' then format = strip(format)!!strip(put(formatl,
1781750  ! best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EM_DIAGRAM):   if format ne ' ' then format = strip(format)!!strip(put(formatl, 
best12.))!!'.'!!strip(put(formatd, best12.));
1781751    else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EM_DIAGRAM):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, 
best12.));
1781752    end;
MPRINT(EM_DIAGRAM):   end;
1781753    else if format ne '' then format = strip(format)!!'.';
MPRINT(EM_DIAGRAM):   else if format ne '' then format = strip(format)!!'.';
1781754    if informl > 0 then do;
MPRINT(EM_DIAGRAM):   if informl > 0 then do;
1781755    if informat ne ' ' then informat = strip(informat)!!strip(put(informl,
1781755  ! best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EM_DIAGRAM):   if informat ne ' ' then informat = strip(informat)!!strip(put(informl, 
best12.))!!'.'!!strip(put(informd, best12.));
1781756    else informat = strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EM_DIAGRAM):   else informat = strip(put(informl, best12.))!!'.'!!strip(put(informd, 
best12.));
1781757    end;
MPRINT(EM_DIAGRAM):   end;
1781758    else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EM_DIAGRAM):   else if informat ne '' then informat = strip(informat)!!'.';
1781759    if idxusage = 'NONE' then index ="N";
MPRINT(EM_DIAGRAM):   if idxusage = 'NONE' then index ="N";
1781760    else index = "Y";
MPRINT(EM_DIAGRAM):   else index = "Y";
1781761    indextype = idxusage;
MPRINT(EM_DIAGRAM):   indextype = idxusage;
1781762    drop idxusage itype formatl formatd informl informd;
MPRINT(EM_DIAGRAM):   drop idxusage itype formatl formatd informl informd;
1781763    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 74 observations read from the data set WORK.M0XPB_UG.
NOTE: The data set WORK.M0XPB_UG has 74 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1781764    data WORK.M0XPB_UG;
MPRINT(EM_DIAGRAM):    data WORK.M0XPB_UG;
1781765    length UNAME $64;
MPRINT(EM_DIAGRAM):   length UNAME $64;
1781766    set WORK.M0XPB_UG;
MPRINT(EM_DIAGRAM):   set WORK.M0XPB_UG;
1781767    UNAME = upcase(NAME);
MPRINT(EM_DIAGRAM):   UNAME = upcase(NAME);
1781768    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 74 observations read from the data set WORK.M0XPB_UG.
NOTE: The data set WORK.M0XPB_UG has 74 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):    proc sort data=WORK.M0IFMPM6 NOTHREADS;
MPRINT(EM_DIAGRAM):   by UNAME;
MPRINT(EM_DIAGRAM):   run;
1781772    data WORK.M0IFMPM6;
MPRINT(EM_DIAGRAM):    data WORK.M0IFMPM6;
1781773    drop UNAME;
MPRINT(EM_DIAGRAM):   drop UNAME;
1781774    set WORK.M0IFMPM6;
MPRINT(EM_DIAGRAM):   set WORK.M0IFMPM6;
1781775    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 74 observations read from the data set WORK.M0IFMPM6.
NOTE: The data set WORK.M0IFMPM6 has 74 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):    data WORK.M38LE_ZE(keep=NAME ATTR);
MPRINT(EM_DIAGRAM):   length ATTR $ 20;
MPRINT(EM_DIAGRAM):   set WORK.M0IFMPM6;
MPRINT(EM_DIAGRAM):   if level ne "INTERVAL" then do;
MPRINT(EM_DIAGRAM):   if order = ' ' then do;
MPRINT(EM_DIAGRAM):   attr = 'ORDER';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EM_DIAGRAM):   attr = 'FORMATTYPE';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if role = ' ' then do;
MPRINT(EM_DIAGRAM):   attr = 'ROLE';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if level = ' ' then do;
MPRINT(EM_DIAGRAM):   attr = 'LEVEL';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if type = ' ' then do;
MPRINT(EM_DIAGRAM):   attr = 'TYPE';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if index = ' ' then do;
MPRINT(EM_DIAGRAM):   attr = 'INDEX';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if report = ' ' then do;
MPRINT(EM_DIAGRAM):   attr = 'REPORT';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort NOTHREADS;
MPRINT(EM_DIAGRAM):   by attr;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.M0IFMPM6;
MPRINT(EM_DIAGRAM):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 FORMATTYPE $ 
10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EM_DIAGRAM):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EM_DIAGRAM):   set WORK.M0IFMPM6;
MPRINT(EM_DIAGRAM):   if formattype = ' ' then do;
MPRINT(EM_DIAGRAM):   if format ne ' ' then do;
MPRINT(EM_DIAGRAM):   if type = 'N' then do;
MPRINT(EM_DIAGRAM):   pos = indexc(format,'.1234567890');
MPRINT(EM_DIAGRAM):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EM_DIAGRAM):   else tempfmt = ' ';
MPRINT(EM_DIAGRAM):   flen = length(tempfmt);
MPRINT(EM_DIAGRAM):   select;
MPRINT(EM_DIAGRAM):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" 
"MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" 
"QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" "YEAR" "YYMMDD" "YYMON" 
"YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" 
"EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) 
formattype = 'DATE';
MPRINT(EM_DIAGRAM):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = "DATETIME";
MPRINT(EM_DIAGRAM):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) formattype = 
"TIME";
MPRINT(EM_DIAGRAM):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" 
"NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EM_DIAGRAM):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" "SSN" 
"Z" "ZD")) formattype = "CODING";
MPRINT(EM_DIAGRAM):   otherwise do;
MPRINT(EM_DIAGRAM):   formattype = "USER";
MPRINT(EM_DIAGRAM):   if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EM_DIAGRAM):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EM_DIAGRAM):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EM_DIAGRAM):   else if flen >= 4 then do;
MPRINT(EM_DIAGRAM):   str = substr(tempfmt,1,4);
MPRINT(EM_DIAGRAM):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EM_DIAGRAM):   else if str = "S370" then formattype = "CODING";
MPRINT(EM_DIAGRAM):   else if str = "BEST" then formattype = "NUM";
MPRINT(EM_DIAGRAM):   drop str;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = 
"DATE";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   drop flen tempfmt pos;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   formatType = "CATEGORY";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if formatType = "NUM" then do;
MPRINT(EM_DIAGRAM):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EM_DIAGRAM):   else formatType = "QUANTITY";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if level = ' ' then do;
MPRINT(EM_DIAGRAM):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then level = 
"NOMINAL";
MPRINT(EM_DIAGRAM):   else level = "INTERVAL";
MPRINT(EM_DIAGRAM):   levelAssigned = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else level = upcase(level);
MPRINT(EM_DIAGRAM):   if role = ' ' then do;
MPRINT(EM_DIAGRAM):   length name_prefix $8 _uname $64;
MPRINT(EM_DIAGRAM):   drop name_prefix _uname _freqflag;
MPRINT(EM_DIAGRAM):   retain _freqflag;
MPRINT(EM_DIAGRAM):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EM_DIAGRAM):   _uname = upcase(NAME);
MPRINT(EM_DIAGRAM):   select(_uname);
MPRINT(EM_DIAGRAM):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EM_DIAGRAM):   when('EM_SEGMENT') do;
MPRINT(EM_DIAGRAM):   ROLE = 'SEGMENT';
MPRINT(EM_DIAGRAM):   LEVEL = 'NOMINAL';
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   when('_NODE_') do;
MPRINT(EM_DIAGRAM):   ROLE = 'SEGMENT';
MPRINT(EM_DIAGRAM):   LEVEL = 'NOMINAL';
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EM_DIAGRAM):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EM_DIAGRAM):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EM_DIAGRAM):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EM_DIAGRAM):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EM_DIAGRAM):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EM_DIAGRAM):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EM_DIAGRAM):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EM_DIAGRAM):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EM_DIAGRAM):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EM_DIAGRAM):   when('URI') ROLE = 'URL';
MPRINT(EM_DIAGRAM):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EM_DIAGRAM):   otherwise do;
MPRINT(EM_DIAGRAM):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EM_DIAGRAM):   ROLE = 'REJECTED';
MPRINT(EM_DIAGRAM):   LEVEL = 'NOMINAL';
MPRINT(EM_DIAGRAM):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EM_DIAGRAM):   ROLE = 'FREQ';
MPRINT(EM_DIAGRAM):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EM_DIAGRAM):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   name_prefix = scan(_uname, 1, '_');
MPRINT(EM_DIAGRAM):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EM_DIAGRAM):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EM_DIAGRAM):   ROLE = 'CLASSIFICATION';
MPRINT(EM_DIAGRAM):   LEVEL = 'NOMINAL';
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EM_DIAGRAM):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 'RAS', 
'RAT') then ROLE = 'RESIDUAL';
MPRINT(EM_DIAGRAM):   else if name_prefix ='D' then do;
MPRINT(EM_DIAGRAM):   ROLE = 'DECISION';
MPRINT(EM_DIAGRAM):   LEVEL = 'NOMINAL';
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if name_prefix ='B' then do;
MPRINT(EM_DIAGRAM):   ROLE = 'SEGMENT';
MPRINT(EM_DIAGRAM):   LEVEL = 'NOMINAL';
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 'ROI', 
'IC') then ROLE = 'ASSESS';
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   array _ROLE_ (19) $32 _TEMPORARY_ ('ASSESS','CLASSIFICATION','CENSOR', 
'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 
'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 
'TIMEID');
MPRINT(EM_DIAGRAM):   drop _found_ i;
MPRINT(EM_DIAGRAM):   _found_=0;
MPRINT(EM_DIAGRAM):   do i=1 to 19 until(_found_=1);
MPRINT(EM_DIAGRAM):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EM_DIAGRAM):   ROLE=_ROLE_{i};
MPRINT(EM_DIAGRAM):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EM_DIAGRAM):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EM_DIAGRAM):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EM_DIAGRAM):   _found_=1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if length(_uname)>2 then do;
MPRINT(EM_DIAGRAM):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EM_DIAGRAM):   ROLE = 'ID';
MPRINT(EM_DIAGRAM):   LEVEL = 'NOMINAL';
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EM_DIAGRAM):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if role = ' ' then do;
MPRINT(EM_DIAGRAM):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EM_DIAGRAM):   else role = 'INPUT';
MPRINT(EM_DIAGRAM):   roleAssigned = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else role = upcase(role);
MPRINT(EM_DIAGRAM):   if REPORT = '' then REPORT = 'N';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * DMDBClass Macro ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(HPDM_PERFORMANCE):  ;
PERFORMANCE  DETAILS
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):    proc dmdb data=work._train(obs=1000000) batch classOut=_DMDB19FGYB6 
maxLevel=22;
MPRINT(EM_DIAGRAM):   class
MPRINT(DMDBCLASS):   AcceptedCmp1 AcceptedCmp2 AcceptedCmp3 AcceptedCmp4 AcceptedCmp5 
AcceptedCmpTotal Age Complain Custid DepVar Dt_Customer Education Element1 Element2 Element3 
Element4 Frq F_DepVar Group GRP_AcceptedCmp5 GRP_Frq GRP_Income GRP_Mnt GRP_MntFishProducts 
GRP_MntGoldProds GRP_MntMeatProducts GRP_MntWines GRP_NumCatalogPurchases GRP_NumDistPurchases 
GRP_NumWebPurchases GRP_Recency GRP_RFMstat GRP_RMntFrq HigherEducation HigherEducationBinary 
Income I_DepVar Kidhome Marital_Status Mnt MntFishProducts MntFruits MntGoldProds 
MntMeatProducts MntSweetProducts MntWines MonthsAsCustomer NumCatalogPurchases 
NumDealsPurchases NumDistPurchases NumStorePurchases NumWebPurchases NumWebVisitsMonth 
P_DepVar0 P_DepVar1 Q_DepVar0 Q_DepVar1 Recency RFMstat RMntFrq R_DepVar0 R_DepVar1 Teenhome 
U_DepVar V_DepVar0 V_DepVar1 Year_Birth Z_CostContact Z_Revenue _bin _dataobs_ _LEAF_ _NODE_ 
_WARN_
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    proc freq data=_DMDB19FGYB6 noprint;
MPRINT(EM_DIAGRAM):   table name / out=_DMDBCOUNT19FGYB6(drop=percent rename=(count=NLEVEL));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _MISS19FGYB6(rename=(frequency=NMISS));
MPRINT(EM_DIAGRAM):   set _DMDB19FGYB6(where=(NRAW=. and CRAW=''));
MPRINT(EM_DIAGRAM):   keep name frequency;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_MISS19FGYB6;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_DMDBCOUNT19FGYB6;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _COUNTS19FGYB6;
MPRINT(EM_DIAGRAM):   merge _DMDBCOUNT19FGYB6 _MISS19FGYB6;
MPRINT(EM_DIAGRAM):   label NLEVEL= 'Number of Category';
MPRINT(EM_DIAGRAM):   by name;
MPRINT(EM_DIAGRAM):   if NMISS > 0 then do;
MPRINT(EM_DIAGRAM):   NLEVEL= NLEVEL-1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else NMISS = 0;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    proc sort data=_COUNTS19FGYB6 NOTHREADS;
MPRINT(EM_DIAGRAM):   by name;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.M0IFMPM6 NOTHREADS;
MPRINT(EM_DIAGRAM):   by name;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data WORK.M0IFMPM6;
MPRINT(EM_DIAGRAM):   length NLEVEL 8 nmiss 8;
MPRINT(EM_DIAGRAM):   update WORK.M0IFMPM6 _COUNTS19FGYB6;
MPRINT(EM_DIAGRAM):   by name;
MPRINT(EM_DIAGRAM):   if name='' then name='_';
MPRINT(EM_DIAGRAM):   if levelAssigned and ROLE ne 'FREQ' then do;
MPRINT(EM_DIAGRAM):   select(NLEVEL);
MPRINT(EM_DIAGRAM):   when(.) do;
MPRINT(EM_DIAGRAM):   if type eq 'C' then level = 'NOMINAL';
MPRINT(EM_DIAGRAM):   else level = 'INTERVAL';
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   when(0) level = 'UNARY';
MPRINT(EM_DIAGRAM):   when(1) level = 'UNARY';
MPRINT(EM_DIAGRAM):   when(2) level = 'BINARY';
MPRINT(EM_DIAGRAM):   otherwise do;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if roleAssigned then do;
MPRINT(EM_DIAGRAM):   if level = 'NOMINAL' and NLEVEL > 20 then do;
MPRINT(EM_DIAGRAM):   role = 'REJECTED';
MPRINT(EM_DIAGRAM):   comment = "Exceeds maximum number of levels cutoff";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if level = 'UNARY' and ROLE ne 'FREQ' then role='REJECTED';
MPRINT(EM_DIAGRAM):   drop NLEVEL nmiss;
MPRINT(EM_DIAGRAM):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= 
"Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= 
"Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower limit" UPPERLIMIT= 
"Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= 
"Label" LENGTH= "Length";
MPRINT(EM_DIAGRAM):   drop levelAssigned roleAssigned;
MPRINT(EM_DIAGRAM):   run;
1782068    data WORK.M145BPSG;
MPRINT(EM_DIAGRAM):    data WORK.M145BPSG;
1782069    set WORK.M145BPSG;
MPRINT(EM_DIAGRAM):   set WORK.M145BPSG;
1782070    if NAME='Element1' then delete;
MPRINT(EM_DIAGRAM):   if NAME='Element1' then delete;
1782071    if NAME='Element2' then delete;
MPRINT(EM_DIAGRAM):   if NAME='Element2' then delete;
1782072    if NAME='Element3' then delete;
MPRINT(EM_DIAGRAM):   if NAME='Element3' then delete;
1782073    if NAME='Element4' then delete;
MPRINT(EM_DIAGRAM):   if NAME='Element4' then delete;
1782074    if NAME='Group' then delete;
MPRINT(EM_DIAGRAM):   if NAME='Group' then delete;
1782075    if NAME='Z_CostContact' then delete;
MPRINT(EM_DIAGRAM):   if NAME='Z_CostContact' then delete;
1782076    if NAME='Z_Revenue' then delete;
MPRINT(EM_DIAGRAM):   if NAME='Z_Revenue' then delete;
1782077    if NAME='_WARN_' then delete;
MPRINT(EM_DIAGRAM):   if NAME='_WARN_' then delete;
1782078    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 17 observations read from the data set WORK.M145BPSG.
NOTE: The data set WORK.M145BPSG has 17 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1782079    data WORK.M06YHPE1;
MPRINT(EM_DIAGRAM):    data WORK.M06YHPE1;
1782080    set WORK.M06YHPE1;
MPRINT(EM_DIAGRAM):   set WORK.M06YHPE1;
1782081    if role='INPUT' and use='D' then use='Y';
MPRINT(EM_DIAGRAM):   if role='INPUT' and use='D' then use='Y';
1782082    if NAME='_bin' then do;
MPRINT(EM_DIAGRAM):   if NAME='_bin' then do;
1782083    ROLE='TARGET';
MPRINT(EM_DIAGRAM):   ROLE='TARGET';
1782084    LEVEL='BINARY';
MPRINT(EM_DIAGRAM):   LEVEL='BINARY';
1782085    USE='Y';
MPRINT(EM_DIAGRAM):   USE='Y';
1782086    end;
MPRINT(EM_DIAGRAM):   end;
1782087    if NAME='DepVar' then do;
MPRINT(EM_DIAGRAM):   if NAME='DepVar' then do;
1782088    ROLE='REJECTED';
MPRINT(EM_DIAGRAM):   ROLE='REJECTED';
1782089    end;
MPRINT(EM_DIAGRAM):   end;
1782090    if NAME='Element1' then delete;
MPRINT(EM_DIAGRAM):   if NAME='Element1' then delete;
1782091    if NAME='Element2' then delete;
MPRINT(EM_DIAGRAM):   if NAME='Element2' then delete;
1782092    if NAME='Element3' then delete;
MPRINT(EM_DIAGRAM):   if NAME='Element3' then delete;
1782093    if NAME='Element4' then delete;
MPRINT(EM_DIAGRAM):   if NAME='Element4' then delete;
1782094    if NAME='Group' then delete;
MPRINT(EM_DIAGRAM):   if NAME='Group' then delete;
1782095    if NAME='Z_CostContact' then delete;
MPRINT(EM_DIAGRAM):   if NAME='Z_CostContact' then delete;
1782096    if NAME='Z_Revenue' then delete;
MPRINT(EM_DIAGRAM):   if NAME='Z_Revenue' then delete;
1782097    if NAME='_WARN_' then delete;
MPRINT(EM_DIAGRAM):   if NAME='_WARN_' then delete;
1782098    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 18 observations read from the data set WORK.M06YHPE1.
NOTE: The data set WORK.M06YHPE1 has 18 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1782099    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
1782100    * Binary Model DepVar = 0;
MPRINT(EM_DIAGRAM):   * Binary Model DepVar = 0;
1782101    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1782102    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1782103    * REGRESSION MODEL DepVar binary BIN1;
MPRINT(EM_DIAGRAM):   * REGRESSION MODEL DepVar binary BIN1;
1782104    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1782105    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1782106    * Rule3: Create decision matrix;
MPRINT(EM_DIAGRAM):   * Rule3: Create decision matrix;
1782107    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1782108    data EM_DMREG / view=EM_DMREG;
MPRINT(EM_DIAGRAM):   data EM_DMREG / view=EM_DMREG;
1782109    set work._train(keep=
1782110    DepVar GRP_AcceptedCmp5 GRP_Frq GRP_Income GRP_Mnt GRP_MntFishProducts
1782111    GRP_MntGoldProds GRP_MntMeatProducts GRP_MntWines GRP_NumCatalogPurchases
1782112    GRP_NumDistPurchases GRP_NumWebPurchases GRP_RFMstat GRP_RMntFrq GRP_Recency
1782113    Year_Birth _bin);
MPRINT(EM_DIAGRAM):   set work._train(keep= DepVar GRP_AcceptedCmp5 GRP_Frq GRP_Income GRP_Mnt 
GRP_MntFishProducts GRP_MntGoldProds GRP_MntMeatProducts GRP_MntWines GRP_NumCatalogPurchases 
GRP_NumDistPurchases GRP_NumWebPurchases GRP_RFMstat GRP_RMntFrq GRP_Recency Year_Birth _bin);
1782114    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: DATA STEP view saved on file WORK.EM_DMREG.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * Rule3: DMDBClass Macro ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
1782115    *------------------------------------------------------------* ;
1782116    * Rule3: DMDBClass Macro ;
1782117    *------------------------------------------------------------* ;
1782118    %macro DMDBClass;
1782119        DepVar(ASC) GRP_AcceptedCmp5(ASC) GRP_Frq(ASC) GRP_Income(ASC) GRP_Mnt(ASC)
1782120       GRP_MntFishProducts(ASC) GRP_MntGoldProds(ASC) GRP_MntMeatProducts(ASC)
1782121       GRP_MntWines(ASC) GRP_NumCatalogPurchases(ASC) GRP_NumDistPurchases(ASC)
1782122       GRP_NumWebPurchases(ASC) GRP_RFMstat(ASC) GRP_RMntFrq(ASC) GRP_Recency(ASC)
1782123       _bin(DESC)
1782124    %mend DMDBClass;
1782125    *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
1782126    * Rule3: DMDBVar Macro ;
MPRINT(EM_DIAGRAM):   * Rule3: DMDBVar Macro ;
1782127    *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
1782128    %macro DMDBVar;
1782129        Year_Birth
1782130    %mend DMDBVar;
1782131    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1782132    * Rule3: Create DMDB;
MPRINT(EM_DIAGRAM):   * Rule3: Create DMDB;
1782133    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1782134    proc dmdb batch data=WORK.EM_DMREG
1782135    dmdbcat=WORK.Rule3_DMDB
1782136    maxlevel = 513
1782137    ;
MPRINT(EM_DIAGRAM):   proc dmdb batch data=WORK.EM_DMREG dmdbcat=WORK.Rule3_DMDB maxlevel = 
513 ;
MPRINT(EM_DIAGRAM):   class
1782138    class %DMDBClass;
MPRINT(DMDBCLASS):   DepVar(ASC) GRP_AcceptedCmp5(ASC) GRP_Frq(ASC) GRP_Income(ASC) 
GRP_Mnt(ASC) GRP_MntFishProducts(ASC) GRP_MntGoldProds(ASC) GRP_MntMeatProducts(ASC) 
GRP_MntWines(ASC) GRP_NumCatalogPurchases(ASC) GRP_NumDistPurchases(ASC) 
GRP_NumWebPurchases(ASC) GRP_RFMstat(ASC) GRP_RMntFrq(ASC) GRP_Recency(ASC) _bin(DESC)
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   var
1782139    var %DMDBVar;
MPRINT(DMDBVAR):   Year_Birth
MPRINT(EM_DIAGRAM):  ;
1782140    target
1782141    _bin
1782142    ;
MPRINT(EM_DIAGRAM):   target _bin ;
1782143    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Records processed = 2374   Memory used = 511K.
NOTE: View WORK.EM_DMREG.VIEW used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      
NOTE: There were 2374 observations read from the data set WORK._TRAIN.
NOTE: There were 2374 observations read from the data set WORK.EM_DMREG.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):   *--- end code ---*;
1782144    quit;
1782145    *--- end code ---*;

1782146    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
1782147    * Rule3: Run DMREG procedure;
MPRINT(EM_DIAGRAM):   * Rule3: Run DMREG procedure;
1782148    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1782149    proc dmreg data=EM_DMREG dmdbcat=WORK.Rule3_DMDB
1782150    validata = work._valid
1782151    outest = WORK.DMREG_26144_R_OUTEST
1782152    outterms = WORK.DMREG_26144_R_OUTTERMS
1782153    outmap= WORK.DMREG_26144_R_MAP namelen=200
1782154    ;
MPRINT(EM_DIAGRAM):   proc dmreg data=EM_DMREG dmdbcat=WORK.Rule3_DMDB validata = work._valid 
outest = WORK.DMREG_26144_R_OUTEST outterms = WORK.DMREG_26144_R_OUTTERMS outmap= 
WORK.DMREG_26144_R_MAP namelen=200 ;
1782155    class
1782156    _bin
1782157    GRP_AcceptedCmp5
1782158    GRP_Frq
1782159    GRP_Income
1782160    GRP_Mnt
1782161    GRP_MntFishProducts
1782162    GRP_MntGoldProds
1782163    GRP_MntMeatProducts
1782164    GRP_MntWines
1782165    GRP_NumCatalogPurchases
1782166    GRP_NumDistPurchases
1782167    GRP_NumWebPurchases
1782168    GRP_RFMstat
1782169    GRP_RMntFrq
1782170    GRP_Recency
1782171    ;
MPRINT(EM_DIAGRAM):   class _bin GRP_AcceptedCmp5 GRP_Frq GRP_Income GRP_Mnt 
GRP_MntFishProducts GRP_MntGoldProds GRP_MntMeatProducts GRP_MntWines GRP_NumCatalogPurchases 
GRP_NumDistPurchases GRP_NumWebPurchases GRP_RFMstat GRP_RMntFrq GRP_Recency ;
1782172    model _bin =
1782173    GRP_AcceptedCmp5
1782174    GRP_Frq
1782175    GRP_Income
1782176    GRP_Mnt
1782177    GRP_MntFishProducts
1782178    GRP_MntGoldProds
1782179    GRP_MntMeatProducts
1782180    GRP_MntWines
1782181    GRP_NumCatalogPurchases
1782182    GRP_NumDistPurchases
1782183    GRP_NumWebPurchases
1782184    GRP_RFMstat
1782185    GRP_RMntFrq
1782186    GRP_Recency
1782187    Year_Birth
1782188    /error=binomial link=LOGIT
1782189    coding=DEVIATION
1782190    nodesignprint
1782191    ;
MPRINT(EM_DIAGRAM):   model _bin = GRP_AcceptedCmp5 GRP_Frq GRP_Income GRP_Mnt 
GRP_MntFishProducts GRP_MntGoldProds GRP_MntMeatProducts GRP_MntWines GRP_NumCatalogPurchases 
GRP_NumDistPurchases GRP_NumWebPurchases GRP_RFMstat GRP_RMntFrq GRP_Recency Year_Birth 
/error=binomial link=LOGIT coding=DEVIATION nodesignprint ;
1782192    ;
MPRINT(EM_DIAGRAM):   ;
1782193    score data=_train
1782194    out=_ptrain(label="")
1782195    ;
MPRINT(EM_DIAGRAM):   score data=_train out=_ptrain(label="") ;
1782196    score data=_valid
1782197    out=_pvalid(label="")
1782198    ;
MPRINT(EM_DIAGRAM):   score data=_valid out=_pvalid(label="") ;
1782199    code file="C:\Users\LUKASF~1\AppData\Local\Temp\SAS Temporary
1782199  ! Files\_TD9752_WN7LF-LEAVE_\Prc2\BIN1.sas"
1782200    group=Rule3_1
1782201    ;
MPRINT(EM_DIAGRAM):   code file="C:\Users\LUKASF~1\AppData\Local\Temp\SAS Temporary 
Files\_TD9752_WN7LF-LEAVE_\Prc2\BIN1.sas" group=Rule3_1 ;
1782202    code file="C:\Users\LUKASF~1\AppData\Local\Temp\SAS Temporary
1782202  ! Files\_TD9752_WN7LF-LEAVE_\Prc2\BIN1_res.sas"
1782203    group=Rule3_1
1782204    residual
1782205    ;
MPRINT(EM_DIAGRAM):   code file="C:\Users\LUKASF~1\AppData\Local\Temp\SAS Temporary 
Files\_TD9752_WN7LF-LEAVE_\Prc2\BIN1_res.sas" group=Rule3_1 residual ;
1782206    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Variable _WARN_ already exists on file WORK._PTRAIN, using _WARN_2 instead.
NOTE: Variable _WARN_ already exists on file WORK._PVALID, using _WARN_2 instead.

NOTE: PROC DMREG is modeling the probability that _bin='1'.
NOTE: Convergence criterion (GCONV=1E-6) satisfied.
NOTE: At least one element of the gradient is greater than 1e-3.
NOTE: External file C:\Users\LUKASF~1\AppData\Local\Temp\SAS Temporary 
      Files\_TD9752_WN7LF-LEAVE_\Prc2\BIN1.sas opened.
NOTE: External file C:\Users\LUKASF~1\AppData\Local\Temp\SAS Temporary 
      Files\_TD9752_WN7LF-LEAVE_\Prc2\BIN1_res.sas opened.
NOTE: View WORK.EM_DMREG.VIEW used (Total process time):
      real time           0.21 seconds
      cpu time            0.21 seconds
      
NOTE: There were 2374 observations read from the data set WORK._TRAIN.
NOTE: There were 2374 observations read from the data set WORK.EM_DMREG.
NOTE: There were 1018 observations read from the data set WORK._VALID.
NOTE: There were 2374 observations read from the data set WORK._TRAIN.
NOTE: There were 1018 observations read from the data set WORK._VALID.
NOTE: The data set WORK.DMREG_26144_R_OUTEST has 3 observations and 75 variables.
NOTE: The data set WORK.DMREG_26144_R_OUTTERMS has 41 observations and 6 variables.
NOTE: The data set WORK.DMREG_26144_R_MAP has 2 observations and 42 variables.
NOTE: The data set WORK._PTRAIN has 2374 observations and 83 variables.
NOTE: The data set WORK._PVALID has 1018 observations and 84 variables.
NOTE: The PROCEDURE DMREG printed pages 1760-1761.
NOTE: PROCEDURE DMREG used (Total process time):
      real time           0.23 seconds
      cpu time            0.23 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1782207    quit;

1782208    proc datasets lib=WORK nolist;
MPRINT(EM_DIAGRAM):    proc datasets lib=WORK nolist;
1782209    delete Rule3_DMDB;
MPRINT(EM_DIAGRAM):   delete Rule3_DMDB;
1782210    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file WORK.RULE3_DMDB (memtype=DATA) was not found, but appears on a DELETE statement.
1782211    quit;
MPRINT(EM_DIAGRAM):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

1782212    proc datasets lib=WORK nolist;
MPRINT(EM_DIAGRAM):    proc datasets lib=WORK nolist;
1782213    delete Rule3_DMDB / memtype=catalog;
MPRINT(EM_DIAGRAM):   delete Rule3_DMDB / memtype=catalog;
1782214    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Deleting WORK.RULE3_DMDB (memtype=CATALOG).
1782215    quit;
MPRINT(EM_DIAGRAM):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

1782216    * BINARY: Training Classification;
MPRINT(EM_DIAGRAM):    * BINARY: Training Classification;
1782217    ;
MPRINT(EM_DIAGRAM):   ;
1782218    proc freq data = _ptrain noprint;
MPRINT(EM_DIAGRAM):   proc freq data = _ptrain noprint;
1782219    tables F__bin * I__bin / out = _count;
MPRINT(EM_DIAGRAM):   tables F__bin * I__bin / out = _count;
1782220    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2374 observations read from the data set WORK._PTRAIN.
NOTE: The data set WORK._COUNT has 4 observations and 4 variables.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1782221    data _count;
MPRINT(EM_DIAGRAM):   data _count;
1782222    set _count;
MPRINT(EM_DIAGRAM):   set _count;
1782223    label count = "%sysfunc(sasmsg(sashelp.dmine, rpt_traincount_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label count = "Train Count";
1782224    label percent = "%sysfunc(sasmsg(sashelp.dmine, rpt_trainpercent_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label percent = "Train Percent";
1782225    label F__bin = "%sysfunc(sasmsg(sashelp.dmine, rpt_from_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label F__bin = "From";
1782226    label I__bin = "%sysfunc(sasmsg(sashelp.dmine, rpt_into_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label I__bin = "Into";
1782227    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._COUNT.
NOTE: The data set WORK._COUNT has 4 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   * BINARY: Validation Classification;
MPRINT(EM_DIAGRAM):   ;
1782228    * BINARY: Validation Classification;
1782229    ;
1782230    proc freq data = _pvalid noprint;
MPRINT(EM_DIAGRAM):   proc freq data = _pvalid noprint;
1782231    tables f__bin * i__bin / out=_vcount;
MPRINT(EM_DIAGRAM):   tables f__bin * i__bin / out=_vcount;
1782232    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1018 observations read from the data set WORK._PVALID.
NOTE: The data set WORK._VCOUNT has 4 observations and 4 variables.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1782233    data _vcount;
MPRINT(EM_DIAGRAM):   data _vcount;
1782234    set _vcount;
MPRINT(EM_DIAGRAM):   set _vcount;
1782235    length key $64;
MPRINT(EM_DIAGRAM):   length key $64;
1782236    label count = "%sysfunc(sasmsg(sashelp.dmine, rpt_validcount_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label count = "Valid Count";
1782237    label percent = "%sysfunc(sasmsg(sashelp.dmine, rpt_validpercent_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label percent = "Valid Percent";
1782238    label f__bin = "%sysfunc(sasmsg(sashelp.dmine, rpt_from_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label f__bin = "From";
1782239    label i__bin = "%sysfunc(sasmsg(sashelp.dmine, rpt_into_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label i__bin = "Into";
1782240    rename count = vcount;
MPRINT(EM_DIAGRAM):   rename count = vcount;
1782241    rename percent= vpercent;
MPRINT(EM_DIAGRAM):   rename percent= vpercent;
1782242    key = ktrim(kleft(f__bin) !! '_' !! ktrim(kleft(i__bin)));
MPRINT(EM_DIAGRAM):   key = ktrim(kleft(f__bin) !! '_' !! ktrim(kleft(i__bin)));
1782243    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._VCOUNT.
NOTE: The data set WORK._VCOUNT has 4 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   *;
1782244    *;
1782245    data _count;
MPRINT(EM_DIAGRAM):   data _count;
1782246    set _count;
MPRINT(EM_DIAGRAM):   set _count;
1782247    length key $64;
MPRINT(EM_DIAGRAM):   length key $64;
1782248    key = ktrim(kleft(f__bin) !! '_' !! ktrim(kleft(i__bin)));
MPRINT(EM_DIAGRAM):   key = ktrim(kleft(f__bin) !! '_' !! ktrim(kleft(i__bin)));
1782249    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._COUNT.
NOTE: The data set WORK._COUNT has 4 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   * Merge Train and Valid classification;
MPRINT(EM_DIAGRAM):   ;
1782250    * Merge Train and Valid classification;
1782251    ;
1782252    proc sort data=_count;
MPRINT(EM_DIAGRAM):   proc sort data=_count;
1782253    by key;
MPRINT(EM_DIAGRAM):   by key;
1782254    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._COUNT.
NOTE: The data set WORK._COUNT has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1782255    proc sort data=_vcount;
MPRINT(EM_DIAGRAM):   proc sort data=_vcount;
1782256    by key;
MPRINT(EM_DIAGRAM):   by key;
1782257    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._VCOUNT.
NOTE: The data set WORK._VCOUNT has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   *;
1782258    *;
1782259    data _count;
MPRINT(EM_DIAGRAM):   data _count;
1782260    merge _count _vcount;
MPRINT(EM_DIAGRAM):   merge _count _vcount;
1782261    by key;
MPRINT(EM_DIAGRAM):   by key;
1782262    drop key;
MPRINT(EM_DIAGRAM):   drop key;
1782263    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._COUNT.
NOTE: There were 4 observations read from the data set WORK._VCOUNT.
NOTE: The data set WORK._COUNT has 4 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   *BINARY: Print Classification;
MPRINT(EM_DIAGRAM):   ;
1782264    *BINARY: Print Classification;
1782265    ;
1782266    title9 "%sysfunc(sasmsg(sashelp.dmine, rpt_binmodel_title, NOQUOTE, DepVar,
1782266  ! %nrbquote(0)))";
MPRINT(EM_DIAGRAM):   title9 "Binary Model DepVar = 0";
1782267    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_classification_title, NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Classification Table";
1782268    proc print data = _count noobs label;
MPRINT(EM_DIAGRAM):   proc print data = _count noobs label;
1782269    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._COUNT.
NOTE: The PROCEDURE PRINT printed page 1762.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1782270    title9;
MPRINT(EM_DIAGRAM):   title9;
1782271    title10;
MPRINT(EM_DIAGRAM):   title10;
1782272    * Extract misfit training values;
MPRINT(EM_DIAGRAM):    * Extract misfit training values;
1782273    ;
MPRINT(EM_DIAGRAM):   ;
1782274    data _ptrain;
MPRINT(EM_DIAGRAM):   data _ptrain;
1782275    set _ptrain;
MPRINT(EM_DIAGRAM):   set _ptrain;
1782276    if not ( I__bin eq '1' and F__bin eq '1') then output;
MPRINT(EM_DIAGRAM):   if not ( I__bin eq '1' and F__bin eq '1') then output;
1782277    keep
1782278    GRP_AcceptedCmp5
1782279    GRP_Frq
1782280    GRP_Income
1782281    GRP_Mnt
1782282    GRP_MntFishProducts
1782283    GRP_MntGoldProds
1782284    GRP_MntMeatProducts
1782285    GRP_MntWines
1782286    GRP_NumCatalogPurchases
1782287    GRP_NumDistPurchases
1782288    GRP_NumWebPurchases
1782289    GRP_RFMstat
1782290    GRP_RMntFrq
1782291    GRP_Recency
1782292    Year_Birth
1782293    DepVar;
MPRINT(EM_DIAGRAM):   keep GRP_AcceptedCmp5 GRP_Frq GRP_Income GRP_Mnt GRP_MntFishProducts 
GRP_MntGoldProds GRP_MntMeatProducts GRP_MntWines GRP_NumCatalogPurchases GRP_NumDistPurchases 
GRP_NumWebPurchases GRP_RFMstat GRP_RMntFrq GRP_Recency Year_Birth DepVar;
1782294    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2374 observations read from the data set WORK._PTRAIN.
NOTE: The data set WORK._PTRAIN has 430 observations and 16 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   * Extract misfit validation values;
MPRINT(EM_DIAGRAM):   ;
1782295    * Extract misfit validation values;
1782296    ;
1782297    data _pvalid;
MPRINT(EM_DIAGRAM):   data _pvalid;
1782298    set _pvalid;
MPRINT(EM_DIAGRAM):   set _pvalid;
1782299    if not (I__bin eq '1' and F__bin eq '1') then output;
MPRINT(EM_DIAGRAM):   if not (I__bin eq '1' and F__bin eq '1') then output;
1782300    keep
1782301    GRP_AcceptedCmp5
1782302    GRP_Frq
1782303    GRP_Income
1782304    GRP_Mnt
1782305    GRP_MntFishProducts
1782306    GRP_MntGoldProds
1782307    GRP_MntMeatProducts
1782308    GRP_MntWines
1782309    GRP_NumCatalogPurchases
1782310    GRP_NumDistPurchases
1782311    GRP_NumWebPurchases
1782312    GRP_RFMstat
1782313    GRP_RMntFrq
1782314    GRP_Recency
1782315    Year_Birth
1782316    DepVar;
MPRINT(EM_DIAGRAM):   keep GRP_AcceptedCmp5 GRP_Frq GRP_Income GRP_Mnt GRP_MntFishProducts 
GRP_MntGoldProds GRP_MntMeatProducts GRP_MntWines GRP_NumCatalogPurchases GRP_NumDistPurchases 
GRP_NumWebPurchases GRP_RFMstat GRP_RMntFrq GRP_Recency Year_Birth DepVar;
1782317    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1018 observations read from the data set WORK._PVALID.
NOTE: The data set WORK._PVALID has 184 observations and 16 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1782318    * Create training data set with binary target for modeling;
MPRINT(EM_DIAGRAM):    * Create training data set with binary target for modeling;
1782319    ;
MPRINT(EM_DIAGRAM):   ;
1782320    data _ptrain;
MPRINT(EM_DIAGRAM):   data _ptrain;
1782321    length _bin $12;
MPRINT(EM_DIAGRAM):   length _bin $12;
1782322    set _ptrain;
MPRINT(EM_DIAGRAM):   set _ptrain;
1782323    _tmp=putn(DepVar, 'best.');
MPRINT(EM_DIAGRAM):   _tmp=putn(DepVar, 'best.');
1782324    %DMNORMIP(_tmp);
MPRINT(DMNORMIP):   call dmnorm(_tmp,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
1782325    _tmpLevel = '1';
MPRINT(EM_DIAGRAM):   _tmpLevel = '1';
1782326    %DMNORMCP(_tmpLevel, _tmpLevel);
MPRINT(DMNORMCP):   _tmpLevel=dmnorm(_tmpLevel,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1782327    if _tmp eq _tmpLevel then _bin = '1';
MPRINT(EM_DIAGRAM):   if _tmp eq _tmpLevel then _bin = '1';
1782328    else _bin = '0';
MPRINT(EM_DIAGRAM):   else _bin = '0';
1782329    drop _tmp _tmpLevel
1782330    ;
MPRINT(EM_DIAGRAM):   drop _tmp _tmpLevel ;
1782331    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 430 observations read from the data set WORK._PTRAIN.
NOTE: The data set WORK._PTRAIN has 430 observations and 17 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1782332    * Create validation data set with binary target for modeling;
MPRINT(EM_DIAGRAM):    * Create validation data set with binary target for modeling;
1782333    ;
MPRINT(EM_DIAGRAM):   ;
1782334    data _pvalid;
MPRINT(EM_DIAGRAM):   data _pvalid;
1782335    length _bin $12;
MPRINT(EM_DIAGRAM):   length _bin $12;
1782336    set _pvalid;
MPRINT(EM_DIAGRAM):   set _pvalid;
1782337    _tmp = putn(DepVar, 'best.');
MPRINT(EM_DIAGRAM):   _tmp = putn(DepVar, 'best.');
1782338    %DMNORMIP(_TMP);
MPRINT(DMNORMIP):   call dmnorm(_TMP,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
1782339    _tmpLevel = '1';
MPRINT(EM_DIAGRAM):   _tmpLevel = '1';
1782340    %DMNORMCP(_tmpLevel, _tmpLevel);
MPRINT(DMNORMCP):   _tmpLevel=dmnorm(_tmpLevel,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1782341    if _tmp eq _tmpLevel then _bin = '1';
MPRINT(EM_DIAGRAM):   if _tmp eq _tmpLevel then _bin = '1';
1782342    else _bin = '0';
MPRINT(EM_DIAGRAM):   else _bin = '0';
1782343    drop _tmp
1782344    ;
MPRINT(EM_DIAGRAM):   drop _tmp ;
1782345    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 184 observations read from the data set WORK._PVALID.
NOTE: The data set WORK._PVALID has 184 observations and 18 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1782346    data _train;
MPRINT(EM_DIAGRAM):    data _train;
1782347    set _ptrain;
MPRINT(EM_DIAGRAM):   set _ptrain;
1782348    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 430 observations read from the data set WORK._PTRAIN.
NOTE: The data set WORK._TRAIN has 430 observations and 17 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1782349    data _valid;
MPRINT(EM_DIAGRAM):   data _valid;
1782350    set _pvalid;
MPRINT(EM_DIAGRAM):   set _pvalid;
1782351    options validvarname=any;
MPRINT(EM_DIAGRAM):   options validvarname=any;

NOTE: There were 184 observations read from the data set WORK._PVALID.
NOTE: The data set WORK._VALID has 184 observations and 18 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1782352    proc contents data=work._train out=_tempAdvisor noprint;
MPRINT(EM_DIAGRAM):   proc contents data=work._train out=_tempAdvisor noprint;
1782353    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._TEMPADVISOR has 17 observations and 40 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1782354    options validvarname=V7;
MPRINT(EM_DIAGRAM):   options validvarname=V7;
1782355    %let _dsidTable = 0;
1782356    %let _engineTable =;
1782357    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
1782358    dsid = open('work._train');
MPRINT(EM_DIAGRAM):   dsid = open('work._train');
1782359    call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EM_DIAGRAM):   call symput('_dsidTable', strip(put(dsid, best.)));
1782360    if dsid then do;
MPRINT(EM_DIAGRAM):   if dsid then do;
1782361    call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EM_DIAGRAM):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
1782362    dsid = close(dsid);
MPRINT(EM_DIAGRAM):   dsid = close(dsid);
1782363    end;
MPRINT(EM_DIAGRAM):   end;
1782364    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1782365    options fmterr;
MPRINT(EM_DIAGRAM):    options fmterr;
1782366    data _metaTestView;
MPRINT(EM_DIAGRAM):   data _metaTestView;
1782367    set work._train;
MPRINT(EM_DIAGRAM):   set work._train;
1782368    if _N_=1 then do;
MPRINT(EM_DIAGRAM):   if _N_=1 then do;
1782369    output;
MPRINT(EM_DIAGRAM):   output;
1782370    stop;
MPRINT(EM_DIAGRAM):   stop;
1782371    end;
MPRINT(EM_DIAGRAM):   end;
1782372    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set WORK._TRAIN.
NOTE: The data set WORK._METATESTVIEW has 1 observations and 17 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1782373    proc contents data=work._train
1782374    out=WORK.M3MI6P4K noprint;
MPRINT(EM_DIAGRAM):    proc contents data=work._train out=WORK.M3MI6P4K noprint;
1782375    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK.M3MI6P4K has 17 observations and 40 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1782376    data WORK.M3MI6P4K;
MPRINT(EM_DIAGRAM):    data WORK.M3MI6P4K;
1782377    length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20 INDEX $ 1 INDEXTYPE $
1782377  !  9;
MPRINT(EM_DIAGRAM):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20 INDEX $ 1 
INDEXTYPE $ 9;
1782378    label NAME =;
MPRINT(EM_DIAGRAM):   label NAME =;
1782379    set WORK.M3MI6P4K(keep=name type length label format formatl formatd informat
1782379  ! informl informd idxusage rename=(type=itype));
MPRINT(EM_DIAGRAM):   set WORK.M3MI6P4K(keep=name type length label format formatl formatd 
informat informl informd idxusage rename=(type=itype));
1782380    if itype = 1 then type = 'N';
MPRINT(EM_DIAGRAM):   if itype = 1 then type = 'N';
1782381    else type = 'C';
MPRINT(EM_DIAGRAM):   else type = 'C';
1782382    if formatl > 0 then do;
MPRINT(EM_DIAGRAM):   if formatl > 0 then do;
1782383    if format ne ' ' then format = strip(format)!!strip(put(formatl,
1782383  ! best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EM_DIAGRAM):   if format ne ' ' then format = strip(format)!!strip(put(formatl, 
best12.))!!'.'!!strip(put(formatd, best12.));
1782384    else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EM_DIAGRAM):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, 
best12.));
1782385    end;
MPRINT(EM_DIAGRAM):   end;
1782386    else if format ne '' then format = strip(format)!!'.';
MPRINT(EM_DIAGRAM):   else if format ne '' then format = strip(format)!!'.';
1782387    if informl > 0 then do;
MPRINT(EM_DIAGRAM):   if informl > 0 then do;
1782388    if informat ne ' ' then informat = strip(informat)!!strip(put(informl,
1782388  ! best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EM_DIAGRAM):   if informat ne ' ' then informat = strip(informat)!!strip(put(informl, 
best12.))!!'.'!!strip(put(informd, best12.));
1782389    else informat = strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EM_DIAGRAM):   else informat = strip(put(informl, best12.))!!'.'!!strip(put(informd, 
best12.));
1782390    end;
MPRINT(EM_DIAGRAM):   end;
1782391    else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EM_DIAGRAM):   else if informat ne '' then informat = strip(informat)!!'.';
1782392    if idxusage = 'NONE' then index ="N";
MPRINT(EM_DIAGRAM):   if idxusage = 'NONE' then index ="N";
1782393    else index = "Y";
MPRINT(EM_DIAGRAM):   else index = "Y";
1782394    indextype = idxusage;
MPRINT(EM_DIAGRAM):   indextype = idxusage;
1782395    drop idxusage itype formatl formatd informl informd;
MPRINT(EM_DIAGRAM):   drop idxusage itype formatl formatd informl informd;
1782396    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 17 observations read from the data set WORK.M3MI6P4K.
NOTE: The data set WORK.M3MI6P4K has 17 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1782397    data WORK.M3MI6P4K;
MPRINT(EM_DIAGRAM):    data WORK.M3MI6P4K;
1782398    length UNAME $64;
MPRINT(EM_DIAGRAM):   length UNAME $64;
1782399    set WORK.M3MI6P4K;
MPRINT(EM_DIAGRAM):   set WORK.M3MI6P4K;
1782400    UNAME = upcase(NAME);
MPRINT(EM_DIAGRAM):   UNAME = upcase(NAME);
1782401    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 17 observations read from the data set WORK.M3MI6P4K.
NOTE: The data set WORK.M3MI6P4K has 17 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):    proc sort data=WORK.M2Y8ZFGG NOTHREADS;
MPRINT(EM_DIAGRAM):   by UNAME;
MPRINT(EM_DIAGRAM):   run;
1782405    data WORK.M2Y8ZFGG;
MPRINT(EM_DIAGRAM):    data WORK.M2Y8ZFGG;
1782406    drop UNAME;
MPRINT(EM_DIAGRAM):   drop UNAME;
1782407    set WORK.M2Y8ZFGG;
MPRINT(EM_DIAGRAM):   set WORK.M2Y8ZFGG;
1782408    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 17 observations read from the data set WORK.M2Y8ZFGG.
NOTE: The data set WORK.M2Y8ZFGG has 17 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):    data WORK.M3LXBGO2(keep=NAME ATTR);
MPRINT(EM_DIAGRAM):   length ATTR $ 20;
MPRINT(EM_DIAGRAM):   set WORK.M2Y8ZFGG;
MPRINT(EM_DIAGRAM):   if level ne "INTERVAL" then do;
MPRINT(EM_DIAGRAM):   if order = ' ' then do;
MPRINT(EM_DIAGRAM):   attr = 'ORDER';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EM_DIAGRAM):   attr = 'FORMATTYPE';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if role = ' ' then do;
MPRINT(EM_DIAGRAM):   attr = 'ROLE';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if level = ' ' then do;
MPRINT(EM_DIAGRAM):   attr = 'LEVEL';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if type = ' ' then do;
MPRINT(EM_DIAGRAM):   attr = 'TYPE';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if index = ' ' then do;
MPRINT(EM_DIAGRAM):   attr = 'INDEX';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if report = ' ' then do;
MPRINT(EM_DIAGRAM):   attr = 'REPORT';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort NOTHREADS;
MPRINT(EM_DIAGRAM):   by attr;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.M2Y8ZFGG;
MPRINT(EM_DIAGRAM):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 FORMATTYPE $ 
10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EM_DIAGRAM):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EM_DIAGRAM):   set WORK.M2Y8ZFGG;
MPRINT(EM_DIAGRAM):   if formattype = ' ' then do;
MPRINT(EM_DIAGRAM):   if format ne ' ' then do;
MPRINT(EM_DIAGRAM):   if type = 'N' then do;
MPRINT(EM_DIAGRAM):   pos = indexc(format,'.1234567890');
MPRINT(EM_DIAGRAM):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EM_DIAGRAM):   else tempfmt = ' ';
MPRINT(EM_DIAGRAM):   flen = length(tempfmt);
MPRINT(EM_DIAGRAM):   select;
MPRINT(EM_DIAGRAM):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" 
"MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" 
"QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" "YEAR" "YYMMDD" "YYMON" 
"YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" 
"EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) 
formattype = 'DATE';
MPRINT(EM_DIAGRAM):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = "DATETIME";
MPRINT(EM_DIAGRAM):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) formattype = 
"TIME";
MPRINT(EM_DIAGRAM):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" 
"NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EM_DIAGRAM):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" "SSN" 
"Z" "ZD")) formattype = "CODING";
MPRINT(EM_DIAGRAM):   otherwise do;
MPRINT(EM_DIAGRAM):   formattype = "USER";
MPRINT(EM_DIAGRAM):   if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EM_DIAGRAM):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EM_DIAGRAM):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EM_DIAGRAM):   else if flen >= 4 then do;
MPRINT(EM_DIAGRAM):   str = substr(tempfmt,1,4);
MPRINT(EM_DIAGRAM):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EM_DIAGRAM):   else if str = "S370" then formattype = "CODING";
MPRINT(EM_DIAGRAM):   else if str = "BEST" then formattype = "NUM";
MPRINT(EM_DIAGRAM):   drop str;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = 
"DATE";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   drop flen tempfmt pos;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   formatType = "CATEGORY";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if formatType = "NUM" then do;
MPRINT(EM_DIAGRAM):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EM_DIAGRAM):   else formatType = "QUANTITY";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if level = ' ' then do;
MPRINT(EM_DIAGRAM):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then level = 
"NOMINAL";
MPRINT(EM_DIAGRAM):   else level = "INTERVAL";
MPRINT(EM_DIAGRAM):   levelAssigned = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else level = upcase(level);
MPRINT(EM_DIAGRAM):   if role = ' ' then do;
MPRINT(EM_DIAGRAM):   length name_prefix $8 _uname $64;
MPRINT(EM_DIAGRAM):   drop name_prefix _uname _freqflag;
MPRINT(EM_DIAGRAM):   retain _freqflag;
MPRINT(EM_DIAGRAM):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EM_DIAGRAM):   _uname = upcase(NAME);
MPRINT(EM_DIAGRAM):   select(_uname);
MPRINT(EM_DIAGRAM):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EM_DIAGRAM):   when('EM_SEGMENT') do;
MPRINT(EM_DIAGRAM):   ROLE = 'SEGMENT';
MPRINT(EM_DIAGRAM):   LEVEL = 'NOMINAL';
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   when('_NODE_') do;
MPRINT(EM_DIAGRAM):   ROLE = 'SEGMENT';
MPRINT(EM_DIAGRAM):   LEVEL = 'NOMINAL';
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EM_DIAGRAM):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EM_DIAGRAM):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EM_DIAGRAM):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EM_DIAGRAM):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EM_DIAGRAM):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EM_DIAGRAM):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EM_DIAGRAM):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EM_DIAGRAM):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EM_DIAGRAM):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EM_DIAGRAM):   when('URI') ROLE = 'URL';
MPRINT(EM_DIAGRAM):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EM_DIAGRAM):   otherwise do;
MPRINT(EM_DIAGRAM):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EM_DIAGRAM):   ROLE = 'REJECTED';
MPRINT(EM_DIAGRAM):   LEVEL = 'NOMINAL';
MPRINT(EM_DIAGRAM):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EM_DIAGRAM):   ROLE = 'FREQ';
MPRINT(EM_DIAGRAM):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EM_DIAGRAM):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   name_prefix = scan(_uname, 1, '_');
MPRINT(EM_DIAGRAM):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EM_DIAGRAM):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EM_DIAGRAM):   ROLE = 'CLASSIFICATION';
MPRINT(EM_DIAGRAM):   LEVEL = 'NOMINAL';
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EM_DIAGRAM):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 'RAS', 
'RAT') then ROLE = 'RESIDUAL';
MPRINT(EM_DIAGRAM):   else if name_prefix ='D' then do;
MPRINT(EM_DIAGRAM):   ROLE = 'DECISION';
MPRINT(EM_DIAGRAM):   LEVEL = 'NOMINAL';
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if name_prefix ='B' then do;
MPRINT(EM_DIAGRAM):   ROLE = 'SEGMENT';
MPRINT(EM_DIAGRAM):   LEVEL = 'NOMINAL';
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 'ROI', 
'IC') then ROLE = 'ASSESS';
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   array _ROLE_ (19) $32 _TEMPORARY_ ('ASSESS','CLASSIFICATION','CENSOR', 
'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 
'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 
'TIMEID');
MPRINT(EM_DIAGRAM):   drop _found_ i;
MPRINT(EM_DIAGRAM):   _found_=0;
MPRINT(EM_DIAGRAM):   do i=1 to 19 until(_found_=1);
MPRINT(EM_DIAGRAM):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EM_DIAGRAM):   ROLE=_ROLE_{i};
MPRINT(EM_DIAGRAM):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EM_DIAGRAM):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EM_DIAGRAM):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EM_DIAGRAM):   _found_=1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if length(_uname)>2 then do;
MPRINT(EM_DIAGRAM):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EM_DIAGRAM):   ROLE = 'ID';
MPRINT(EM_DIAGRAM):   LEVEL = 'NOMINAL';
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EM_DIAGRAM):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if role = ' ' then do;
MPRINT(EM_DIAGRAM):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EM_DIAGRAM):   else role = 'INPUT';
MPRINT(EM_DIAGRAM):   roleAssigned = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else role = upcase(role);
MPRINT(EM_DIAGRAM):   if REPORT = '' then REPORT = 'N';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * DMDBClass Macro ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(HPDM_PERFORMANCE):  ;
PERFORMANCE  DETAILS
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):    proc dmdb data=work._train(obs=1000000) batch classOut=_DMDB0Y1KKU1 
maxLevel=22;
MPRINT(EM_DIAGRAM):   class
MPRINT(DMDBCLASS):   DepVar GRP_AcceptedCmp5 GRP_Frq GRP_Income GRP_Mnt GRP_MntFishProducts 
GRP_MntGoldProds GRP_MntMeatProducts GRP_MntWines GRP_NumCatalogPurchases GRP_NumDistPurchases 
GRP_NumWebPurchases GRP_Recency GRP_RFMstat GRP_RMntFrq Year_Birth _bin
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    proc freq data=_DMDB0Y1KKU1 noprint;
MPRINT(EM_DIAGRAM):   table name / out=_DMDBCOUNT0Y1KKU1(drop=percent rename=(count=NLEVEL));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _MISS0Y1KKU1(rename=(frequency=NMISS));
MPRINT(EM_DIAGRAM):   set _DMDB0Y1KKU1(where=(NRAW=. and CRAW=''));
MPRINT(EM_DIAGRAM):   keep name frequency;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_MISS0Y1KKU1;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_DMDBCOUNT0Y1KKU1;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _COUNTS0Y1KKU1;
MPRINT(EM_DIAGRAM):   merge _DMDBCOUNT0Y1KKU1 _MISS0Y1KKU1;
MPRINT(EM_DIAGRAM):   label NLEVEL= 'Number of Category';
MPRINT(EM_DIAGRAM):   by name;
MPRINT(EM_DIAGRAM):   if NMISS > 0 then do;
MPRINT(EM_DIAGRAM):   NLEVEL= NLEVEL-1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else NMISS = 0;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    proc sort data=_COUNTS0Y1KKU1 NOTHREADS;
MPRINT(EM_DIAGRAM):   by name;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.M2Y8ZFGG NOTHREADS;
MPRINT(EM_DIAGRAM):   by name;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data WORK.M2Y8ZFGG;
MPRINT(EM_DIAGRAM):   length NLEVEL 8 nmiss 8;
MPRINT(EM_DIAGRAM):   update WORK.M2Y8ZFGG _COUNTS0Y1KKU1;
MPRINT(EM_DIAGRAM):   by name;
MPRINT(EM_DIAGRAM):   if name='' then name='_';
MPRINT(EM_DIAGRAM):   if levelAssigned and ROLE ne 'FREQ' then do;
MPRINT(EM_DIAGRAM):   select(NLEVEL);
MPRINT(EM_DIAGRAM):   when(.) do;
MPRINT(EM_DIAGRAM):   if type eq 'C' then level = 'NOMINAL';
MPRINT(EM_DIAGRAM):   else level = 'INTERVAL';
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   when(0) level = 'UNARY';
MPRINT(EM_DIAGRAM):   when(1) level = 'UNARY';
MPRINT(EM_DIAGRAM):   when(2) level = 'BINARY';
MPRINT(EM_DIAGRAM):   otherwise do;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if roleAssigned then do;
MPRINT(EM_DIAGRAM):   if level = 'NOMINAL' and NLEVEL > 20 then do;
MPRINT(EM_DIAGRAM):   role = 'REJECTED';
MPRINT(EM_DIAGRAM):   comment = "Exceeds maximum number of levels cutoff";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if level = 'UNARY' and ROLE ne 'FREQ' then role='REJECTED';
MPRINT(EM_DIAGRAM):   drop NLEVEL nmiss;
MPRINT(EM_DIAGRAM):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= 
"Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= 
"Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower limit" UPPERLIMIT= 
"Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= 
"Label" LENGTH= "Length";
MPRINT(EM_DIAGRAM):   drop levelAssigned roleAssigned;
MPRINT(EM_DIAGRAM):   run;
1782692    data WORK.M145BPSG;
MPRINT(EM_DIAGRAM):    data WORK.M145BPSG;
1782693    set WORK.M145BPSG;
MPRINT(EM_DIAGRAM):   set WORK.M145BPSG;
1782694    if NAME='Element1' then delete;
MPRINT(EM_DIAGRAM):   if NAME='Element1' then delete;
1782695    if NAME='Element2' then delete;
MPRINT(EM_DIAGRAM):   if NAME='Element2' then delete;
1782696    if NAME='Element3' then delete;
MPRINT(EM_DIAGRAM):   if NAME='Element3' then delete;
1782697    if NAME='Element4' then delete;
MPRINT(EM_DIAGRAM):   if NAME='Element4' then delete;
1782698    if NAME='Group' then delete;
MPRINT(EM_DIAGRAM):   if NAME='Group' then delete;
1782699    if NAME='Z_CostContact' then delete;
MPRINT(EM_DIAGRAM):   if NAME='Z_CostContact' then delete;
1782700    if NAME='Z_Revenue' then delete;
MPRINT(EM_DIAGRAM):   if NAME='Z_Revenue' then delete;
1782701    if NAME='_WARN_' then delete;
MPRINT(EM_DIAGRAM):   if NAME='_WARN_' then delete;
1782702    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 17 observations read from the data set WORK.M145BPSG.
NOTE: The data set WORK.M145BPSG has 17 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1782703    data WORK.M2FS9WFX;
MPRINT(EM_DIAGRAM):    data WORK.M2FS9WFX;
1782704    set WORK.M2FS9WFX;
MPRINT(EM_DIAGRAM):   set WORK.M2FS9WFX;
1782705    if role='INPUT' and use='D' then use='Y';
MPRINT(EM_DIAGRAM):   if role='INPUT' and use='D' then use='Y';
1782706    if NAME='_bin' then do;
MPRINT(EM_DIAGRAM):   if NAME='_bin' then do;
1782707    ROLE='TARGET';
MPRINT(EM_DIAGRAM):   ROLE='TARGET';
1782708    LEVEL='BINARY';
MPRINT(EM_DIAGRAM):   LEVEL='BINARY';
1782709    USE='Y';
MPRINT(EM_DIAGRAM):   USE='Y';
1782710    end;
MPRINT(EM_DIAGRAM):   end;
1782711    if NAME='DepVar' then do;
MPRINT(EM_DIAGRAM):   if NAME='DepVar' then do;
1782712    ROLE='REJECTED';
MPRINT(EM_DIAGRAM):   ROLE='REJECTED';
1782713    end;
MPRINT(EM_DIAGRAM):   end;
1782714    if NAME='Element1' then delete;
MPRINT(EM_DIAGRAM):   if NAME='Element1' then delete;
1782715    if NAME='Element2' then delete;
MPRINT(EM_DIAGRAM):   if NAME='Element2' then delete;
1782716    if NAME='Element3' then delete;
MPRINT(EM_DIAGRAM):   if NAME='Element3' then delete;
1782717    if NAME='Element4' then delete;
MPRINT(EM_DIAGRAM):   if NAME='Element4' then delete;
1782718    if NAME='Group' then delete;
MPRINT(EM_DIAGRAM):   if NAME='Group' then delete;
1782719    if NAME='Z_CostContact' then delete;
MPRINT(EM_DIAGRAM):   if NAME='Z_CostContact' then delete;
1782720    if NAME='Z_Revenue' then delete;
MPRINT(EM_DIAGRAM):   if NAME='Z_Revenue' then delete;
1782721    if NAME='_WARN_' then delete;
MPRINT(EM_DIAGRAM):   if NAME='_WARN_' then delete;
1782722    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 18 observations read from the data set WORK.M2FS9WFX.
NOTE: The data set WORK.M2FS9WFX has 18 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1782723    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
1782724    * Binary Model DepVar = 1;
MPRINT(EM_DIAGRAM):   * Binary Model DepVar = 1;
1782725    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1782726    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1782727    * REGRESSION MODEL DepVar binary BIN2;
MPRINT(EM_DIAGRAM):   * REGRESSION MODEL DepVar binary BIN2;
1782728    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1782729    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1782730    * Rule3: Create decision matrix;
MPRINT(EM_DIAGRAM):   * Rule3: Create decision matrix;
1782731    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1782732    data EM_DMREG / view=EM_DMREG;
MPRINT(EM_DIAGRAM):   data EM_DMREG / view=EM_DMREG;
1782733    set work._train(keep=
1782734    DepVar GRP_AcceptedCmp5 GRP_Frq GRP_Income GRP_Mnt GRP_MntFishProducts
1782735    GRP_MntGoldProds GRP_MntMeatProducts GRP_MntWines GRP_NumCatalogPurchases
1782736    GRP_NumDistPurchases GRP_NumWebPurchases GRP_RFMstat GRP_RMntFrq GRP_Recency
1782737    Year_Birth _bin);
MPRINT(EM_DIAGRAM):   set work._train(keep= DepVar GRP_AcceptedCmp5 GRP_Frq GRP_Income GRP_Mnt 
GRP_MntFishProducts GRP_MntGoldProds GRP_MntMeatProducts GRP_MntWines GRP_NumCatalogPurchases 
GRP_NumDistPurchases GRP_NumWebPurchases GRP_RFMstat GRP_RMntFrq GRP_Recency Year_Birth _bin);
1782738    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: DATA STEP view saved on file WORK.EM_DMREG.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * Rule3: DMDBClass Macro ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
1782739    *------------------------------------------------------------* ;
1782740    * Rule3: DMDBClass Macro ;
1782741    *------------------------------------------------------------* ;
1782742    %macro DMDBClass;
1782743        DepVar(ASC) GRP_AcceptedCmp5(ASC) GRP_Frq(ASC) GRP_Income(ASC) GRP_Mnt(ASC)
1782744       GRP_MntFishProducts(ASC) GRP_MntGoldProds(ASC) GRP_MntMeatProducts(ASC)
1782745       GRP_MntWines(ASC) GRP_NumCatalogPurchases(ASC) GRP_NumDistPurchases(ASC)
1782746       GRP_NumWebPurchases(ASC) GRP_RFMstat(ASC) GRP_RMntFrq(ASC) GRP_Recency(ASC)
1782747       _bin(DESC)
1782748    %mend DMDBClass;
1782749    *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
1782750    * Rule3: DMDBVar Macro ;
MPRINT(EM_DIAGRAM):   * Rule3: DMDBVar Macro ;
1782751    *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
1782752    %macro DMDBVar;
1782753        Year_Birth
1782754    %mend DMDBVar;
1782755    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1782756    * Rule3: Create DMDB;
MPRINT(EM_DIAGRAM):   * Rule3: Create DMDB;
1782757    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1782758    proc dmdb batch data=WORK.EM_DMREG
1782759    dmdbcat=WORK.Rule3_DMDB
1782760    maxlevel = 513
1782761    ;
MPRINT(EM_DIAGRAM):   proc dmdb batch data=WORK.EM_DMREG dmdbcat=WORK.Rule3_DMDB maxlevel = 
513 ;
MPRINT(EM_DIAGRAM):   class
1782762    class %DMDBClass;
MPRINT(DMDBCLASS):   DepVar(ASC) GRP_AcceptedCmp5(ASC) GRP_Frq(ASC) GRP_Income(ASC) 
GRP_Mnt(ASC) GRP_MntFishProducts(ASC) GRP_MntGoldProds(ASC) GRP_MntMeatProducts(ASC) 
GRP_MntWines(ASC) GRP_NumCatalogPurchases(ASC) GRP_NumDistPurchases(ASC) 
GRP_NumWebPurchases(ASC) GRP_RFMstat(ASC) GRP_RMntFrq(ASC) GRP_Recency(ASC) _bin(DESC)
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   var
1782763    var %DMDBVar;
MPRINT(DMDBVAR):   Year_Birth
MPRINT(EM_DIAGRAM):  ;
1782764    target
1782765    _bin
1782766    ;
MPRINT(EM_DIAGRAM):   target _bin ;
1782767    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Records processed = 430   Memory used = 511K.
NOTE: View WORK.EM_DMREG.VIEW used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      
NOTE: There were 430 observations read from the data set WORK._TRAIN.
NOTE: There were 430 observations read from the data set WORK.EM_DMREG.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):   *--- end code ---*;
1782768    quit;
1782769    *--- end code ---*;

1782770    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
1782771    * Rule3: Run DMREG procedure;
MPRINT(EM_DIAGRAM):   * Rule3: Run DMREG procedure;
1782772    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1782773    proc dmreg data=EM_DMREG dmdbcat=WORK.Rule3_DMDB
1782774    validata = work._valid
1782775    outest = WORK.DMREG_060F441_OUTEST
1782776    outterms = WORK.DMREG_060F441_OUTTERMS
1782777    outmap= WORK.DMREG_060F441_MAP namelen=200
1782778    ;
MPRINT(EM_DIAGRAM):   proc dmreg data=EM_DMREG dmdbcat=WORK.Rule3_DMDB validata = work._valid 
outest = WORK.DMREG_060F441_OUTEST outterms = WORK.DMREG_060F441_OUTTERMS outmap= 
WORK.DMREG_060F441_MAP namelen=200 ;
1782779    class
1782780    _bin
1782781    GRP_AcceptedCmp5
1782782    GRP_Frq
1782783    GRP_Income
1782784    GRP_Mnt
1782785    GRP_MntFishProducts
1782786    GRP_MntGoldProds
1782787    GRP_MntMeatProducts
1782788    GRP_MntWines
1782789    GRP_NumCatalogPurchases
1782790    GRP_NumDistPurchases
1782791    GRP_NumWebPurchases
1782792    GRP_RFMstat
1782793    GRP_RMntFrq
1782794    GRP_Recency
1782795    ;
MPRINT(EM_DIAGRAM):   class _bin GRP_AcceptedCmp5 GRP_Frq GRP_Income GRP_Mnt 
GRP_MntFishProducts GRP_MntGoldProds GRP_MntMeatProducts GRP_MntWines GRP_NumCatalogPurchases 
GRP_NumDistPurchases GRP_NumWebPurchases GRP_RFMstat GRP_RMntFrq GRP_Recency ;
1782796    model _bin =
1782797    GRP_AcceptedCmp5
1782798    GRP_Frq
1782799    GRP_Income
1782800    GRP_Mnt
1782801    GRP_MntFishProducts
1782802    GRP_MntGoldProds
1782803    GRP_MntMeatProducts
1782804    GRP_MntWines
1782805    GRP_NumCatalogPurchases
1782806    GRP_NumDistPurchases
1782807    GRP_NumWebPurchases
1782808    GRP_RFMstat
1782809    GRP_RMntFrq
1782810    GRP_Recency
1782811    Year_Birth
1782812    /error=binomial link=LOGIT
1782813    coding=DEVIATION
1782814    nodesignprint
1782815    ;
MPRINT(EM_DIAGRAM):   model _bin = GRP_AcceptedCmp5 GRP_Frq GRP_Income GRP_Mnt 
GRP_MntFishProducts GRP_MntGoldProds GRP_MntMeatProducts GRP_MntWines GRP_NumCatalogPurchases 
GRP_NumDistPurchases GRP_NumWebPurchases GRP_RFMstat GRP_RMntFrq GRP_Recency Year_Birth 
/error=binomial link=LOGIT coding=DEVIATION nodesignprint ;
1782816    ;
MPRINT(EM_DIAGRAM):   ;
1782817    score data=_train
1782818    out=_ptrain(label="")
1782819    ;
MPRINT(EM_DIAGRAM):   score data=_train out=_ptrain(label="") ;
1782820    score data=_valid
1782821    out=_pvalid(label="")
1782822    ;
MPRINT(EM_DIAGRAM):   score data=_valid out=_pvalid(label="") ;
1782823    code file="C:\Users\LUKASF~1\AppData\Local\Temp\SAS Temporary
1782823  ! Files\_TD9752_WN7LF-LEAVE_\Prc2\BIN2.sas"
1782824    group=Rule3_2
1782825    ;
MPRINT(EM_DIAGRAM):   code file="C:\Users\LUKASF~1\AppData\Local\Temp\SAS Temporary 
Files\_TD9752_WN7LF-LEAVE_\Prc2\BIN2.sas" group=Rule3_2 ;
1782826    code file="C:\Users\LUKASF~1\AppData\Local\Temp\SAS Temporary
1782826  ! Files\_TD9752_WN7LF-LEAVE_\Prc2\BIN2_res.sas"
1782827    group=Rule3_2
1782828    residual
1782829    ;
MPRINT(EM_DIAGRAM):   code file="C:\Users\LUKASF~1\AppData\Local\Temp\SAS Temporary 
Files\_TD9752_WN7LF-LEAVE_\Prc2\BIN2_res.sas" group=Rule3_2 residual ;
1782830    run;
MPRINT(EM_DIAGRAM):   run;


NOTE: PROC DMREG is modeling the probability that _bin='1'.
NOTE: Convergence criterion (GCONV=1E-6) satisfied.
NOTE: At least one element of the gradient is greater than 1e-3.
NOTE: External file C:\Users\LUKASF~1\AppData\Local\Temp\SAS Temporary 
      Files\_TD9752_WN7LF-LEAVE_\Prc2\BIN2.sas opened.
NOTE: External file C:\Users\LUKASF~1\AppData\Local\Temp\SAS Temporary 
      Files\_TD9752_WN7LF-LEAVE_\Prc2\BIN2_res.sas opened.
NOTE: View WORK.EM_DMREG.VIEW used (Total process time):
      real time           0.15 seconds
      cpu time            0.15 seconds
      
NOTE: There were 430 observations read from the data set WORK._TRAIN.
NOTE: There were 430 observations read from the data set WORK.EM_DMREG.
NOTE: There were 184 observations read from the data set WORK._VALID.
NOTE: There were 430 observations read from the data set WORK._TRAIN.
NOTE: There were 184 observations read from the data set WORK._VALID.
NOTE: The data set WORK.DMREG_060F441_OUTEST has 3 observations and 75 variables.
NOTE: The data set WORK.DMREG_060F441_OUTTERMS has 41 observations and 6 variables.
NOTE: The data set WORK.DMREG_060F441_MAP has 2 observations and 42 variables.
NOTE: The data set WORK._PTRAIN has 430 observations and 26 variables.
NOTE: The data set WORK._PVALID has 184 observations and 27 variables.
NOTE: The PROCEDURE DMREG printed pages 1763-1764.
NOTE: PROCEDURE DMREG used (Total process time):
      real time           0.17 seconds
      cpu time            0.15 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1782831    quit;

1782832    proc datasets lib=WORK nolist;
MPRINT(EM_DIAGRAM):    proc datasets lib=WORK nolist;
1782833    delete Rule3_DMDB;
MPRINT(EM_DIAGRAM):   delete Rule3_DMDB;
1782834    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file WORK.RULE3_DMDB (memtype=DATA) was not found, but appears on a DELETE statement.
1782835    quit;
MPRINT(EM_DIAGRAM):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
      

1782836    proc datasets lib=WORK nolist;
MPRINT(EM_DIAGRAM):    proc datasets lib=WORK nolist;
1782837    delete Rule3_DMDB / memtype=catalog;
MPRINT(EM_DIAGRAM):   delete Rule3_DMDB / memtype=catalog;
1782838    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Deleting WORK.RULE3_DMDB (memtype=CATALOG).
1782839    quit;
MPRINT(EM_DIAGRAM):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

1782840    * BINARY: Training Classification;
MPRINT(EM_DIAGRAM):    * BINARY: Training Classification;
1782841    ;
MPRINT(EM_DIAGRAM):   ;
1782842    proc freq data = _ptrain noprint;
MPRINT(EM_DIAGRAM):   proc freq data = _ptrain noprint;
1782843    tables F__bin * I__bin / out = _count;
MPRINT(EM_DIAGRAM):   tables F__bin * I__bin / out = _count;
1782844    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 430 observations read from the data set WORK._PTRAIN.
NOTE: The data set WORK._COUNT has 4 observations and 4 variables.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1782845    data _count;
MPRINT(EM_DIAGRAM):   data _count;
1782846    set _count;
MPRINT(EM_DIAGRAM):   set _count;
1782847    label count = "%sysfunc(sasmsg(sashelp.dmine, rpt_traincount_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label count = "Train Count";
1782848    label percent = "%sysfunc(sasmsg(sashelp.dmine, rpt_trainpercent_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label percent = "Train Percent";
1782849    label F__bin = "%sysfunc(sasmsg(sashelp.dmine, rpt_from_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label F__bin = "From";
1782850    label I__bin = "%sysfunc(sasmsg(sashelp.dmine, rpt_into_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label I__bin = "Into";
1782851    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._COUNT.
NOTE: The data set WORK._COUNT has 4 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   * BINARY: Validation Classification;
MPRINT(EM_DIAGRAM):   ;
1782852    * BINARY: Validation Classification;
1782853    ;
1782854    proc freq data = _pvalid noprint;
MPRINT(EM_DIAGRAM):   proc freq data = _pvalid noprint;
1782855    tables f__bin * i__bin / out=_vcount;
MPRINT(EM_DIAGRAM):   tables f__bin * i__bin / out=_vcount;
1782856    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 184 observations read from the data set WORK._PVALID.
NOTE: The data set WORK._VCOUNT has 4 observations and 4 variables.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1782857    data _vcount;
MPRINT(EM_DIAGRAM):   data _vcount;
1782858    set _vcount;
MPRINT(EM_DIAGRAM):   set _vcount;
1782859    length key $64;
MPRINT(EM_DIAGRAM):   length key $64;
1782860    label count = "%sysfunc(sasmsg(sashelp.dmine, rpt_validcount_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label count = "Valid Count";
1782861    label percent = "%sysfunc(sasmsg(sashelp.dmine, rpt_validpercent_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label percent = "Valid Percent";
1782862    label f__bin = "%sysfunc(sasmsg(sashelp.dmine, rpt_from_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label f__bin = "From";
1782863    label i__bin = "%sysfunc(sasmsg(sashelp.dmine, rpt_into_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label i__bin = "Into";
1782864    rename count = vcount;
MPRINT(EM_DIAGRAM):   rename count = vcount;
1782865    rename percent= vpercent;
MPRINT(EM_DIAGRAM):   rename percent= vpercent;
1782866    key = ktrim(kleft(f__bin) !! '_' !! ktrim(kleft(i__bin)));
MPRINT(EM_DIAGRAM):   key = ktrim(kleft(f__bin) !! '_' !! ktrim(kleft(i__bin)));
1782867    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._VCOUNT.
NOTE: The data set WORK._VCOUNT has 4 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   *;
1782868    *;
1782869    data _count;
MPRINT(EM_DIAGRAM):   data _count;
1782870    set _count;
MPRINT(EM_DIAGRAM):   set _count;
1782871    length key $64;
MPRINT(EM_DIAGRAM):   length key $64;
1782872    key = ktrim(kleft(f__bin) !! '_' !! ktrim(kleft(i__bin)));
MPRINT(EM_DIAGRAM):   key = ktrim(kleft(f__bin) !! '_' !! ktrim(kleft(i__bin)));
1782873    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._COUNT.
NOTE: The data set WORK._COUNT has 4 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   * Merge Train and Valid classification;
MPRINT(EM_DIAGRAM):   ;
1782874    * Merge Train and Valid classification;
1782875    ;
1782876    proc sort data=_count;
MPRINT(EM_DIAGRAM):   proc sort data=_count;
1782877    by key;
MPRINT(EM_DIAGRAM):   by key;
1782878    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._COUNT.
NOTE: The data set WORK._COUNT has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1782879    proc sort data=_vcount;
MPRINT(EM_DIAGRAM):   proc sort data=_vcount;
1782880    by key;
MPRINT(EM_DIAGRAM):   by key;
1782881    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._VCOUNT.
NOTE: The data set WORK._VCOUNT has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   *;
1782882    *;
1782883    data _count;
MPRINT(EM_DIAGRAM):   data _count;
1782884    merge _count _vcount;
MPRINT(EM_DIAGRAM):   merge _count _vcount;
1782885    by key;
MPRINT(EM_DIAGRAM):   by key;
1782886    drop key;
MPRINT(EM_DIAGRAM):   drop key;
1782887    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._COUNT.
NOTE: There were 4 observations read from the data set WORK._VCOUNT.
NOTE: The data set WORK._COUNT has 4 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   *BINARY: Print Classification;
MPRINT(EM_DIAGRAM):   ;
1782888    *BINARY: Print Classification;
1782889    ;
1782890    title9 "%sysfunc(sasmsg(sashelp.dmine, rpt_binmodel_title, NOQUOTE, DepVar,
1782890  ! %nrbquote(1)))";
MPRINT(EM_DIAGRAM):   title9 "Binary Model DepVar = 1";
1782891    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_classification_title, NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Classification Table";
1782892    proc print data = _count noobs label;
MPRINT(EM_DIAGRAM):   proc print data = _count noobs label;
1782893    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._COUNT.
NOTE: The PROCEDURE PRINT printed page 1765.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1782894    title9;
MPRINT(EM_DIAGRAM):   title9;
1782895    title10;
MPRINT(EM_DIAGRAM):   title10;
1782896    * Extract misfit training values;
MPRINT(EM_DIAGRAM):    * Extract misfit training values;
1782897    ;
MPRINT(EM_DIAGRAM):   ;
1782898    data _ptrain;
MPRINT(EM_DIAGRAM):   data _ptrain;
1782899    set _ptrain;
MPRINT(EM_DIAGRAM):   set _ptrain;
1782900    if not ( I__bin eq '1' and F__bin eq '1') then output;
MPRINT(EM_DIAGRAM):   if not ( I__bin eq '1' and F__bin eq '1') then output;
1782901    keep
1782902    GRP_AcceptedCmp5
1782903    GRP_Frq
1782904    GRP_Income
1782905    GRP_Mnt
1782906    GRP_MntFishProducts
1782907    GRP_MntGoldProds
1782908    GRP_MntMeatProducts
1782909    GRP_MntWines
1782910    GRP_NumCatalogPurchases
1782911    GRP_NumDistPurchases
1782912    GRP_NumWebPurchases
1782913    GRP_RFMstat
1782914    GRP_RMntFrq
1782915    GRP_Recency
1782916    Year_Birth
1782917    DepVar;
MPRINT(EM_DIAGRAM):   keep GRP_AcceptedCmp5 GRP_Frq GRP_Income GRP_Mnt GRP_MntFishProducts 
GRP_MntGoldProds GRP_MntMeatProducts GRP_MntWines GRP_NumCatalogPurchases GRP_NumDistPurchases 
GRP_NumWebPurchases GRP_RFMstat GRP_RMntFrq GRP_Recency Year_Birth DepVar;
1782918    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 430 observations read from the data set WORK._PTRAIN.
NOTE: The data set WORK._PTRAIN has 73 observations and 16 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   * Extract misfit validation values;
MPRINT(EM_DIAGRAM):   ;
1782919    * Extract misfit validation values;
1782920    ;
1782921    data _pvalid;
MPRINT(EM_DIAGRAM):   data _pvalid;
1782922    set _pvalid;
MPRINT(EM_DIAGRAM):   set _pvalid;
1782923    if not (I__bin eq '1' and F__bin eq '1') then output;
MPRINT(EM_DIAGRAM):   if not (I__bin eq '1' and F__bin eq '1') then output;
1782924    keep
1782925    GRP_AcceptedCmp5
1782926    GRP_Frq
1782927    GRP_Income
1782928    GRP_Mnt
1782929    GRP_MntFishProducts
1782930    GRP_MntGoldProds
1782931    GRP_MntMeatProducts
1782932    GRP_MntWines
1782933    GRP_NumCatalogPurchases
1782934    GRP_NumDistPurchases
1782935    GRP_NumWebPurchases
1782936    GRP_RFMstat
1782937    GRP_RMntFrq
1782938    GRP_Recency
1782939    Year_Birth
1782940    DepVar;
MPRINT(EM_DIAGRAM):   keep GRP_AcceptedCmp5 GRP_Frq GRP_Income GRP_Mnt GRP_MntFishProducts 
GRP_MntGoldProds GRP_MntMeatProducts GRP_MntWines GRP_NumCatalogPurchases GRP_NumDistPurchases 
GRP_NumWebPurchases GRP_RFMstat GRP_RMntFrq GRP_Recency Year_Birth DepVar;
1782941    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 184 observations read from the data set WORK._PVALID.
NOTE: The data set WORK._PVALID has 40 observations and 16 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1782942    data _train;
MPRINT(EM_DIAGRAM):    data _train;
1782943    set _ptrain;
MPRINT(EM_DIAGRAM):   set _ptrain;
1782944    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 73 observations read from the data set WORK._PTRAIN.
NOTE: The data set WORK._TRAIN has 73 observations and 16 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1782945    data _valid;
MPRINT(EM_DIAGRAM):   data _valid;
1782946    set _pvalid;
MPRINT(EM_DIAGRAM):   set _pvalid;
1782947    options validvarname=any;
MPRINT(EM_DIAGRAM):   options validvarname=any;

NOTE: There were 40 observations read from the data set WORK._PVALID.
NOTE: The data set WORK._VALID has 40 observations and 16 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1782948    proc contents data=work._train out=_tempAdvisor noprint;
MPRINT(EM_DIAGRAM):   proc contents data=work._train out=_tempAdvisor noprint;
1782949    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._TEMPADVISOR has 16 observations and 40 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1782950    options validvarname=V7;
MPRINT(EM_DIAGRAM):   options validvarname=V7;
1782951    %let _dsidTable = 0;
1782952    %let _engineTable =;
1782953    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
1782954    dsid = open('work._train');
MPRINT(EM_DIAGRAM):   dsid = open('work._train');
1782955    call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EM_DIAGRAM):   call symput('_dsidTable', strip(put(dsid, best.)));
1782956    if dsid then do;
MPRINT(EM_DIAGRAM):   if dsid then do;
1782957    call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EM_DIAGRAM):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
1782958    dsid = close(dsid);
MPRINT(EM_DIAGRAM):   dsid = close(dsid);
1782959    end;
MPRINT(EM_DIAGRAM):   end;
1782960    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1782961    options fmterr;
MPRINT(EM_DIAGRAM):    options fmterr;
1782962    data _metaTestView;
MPRINT(EM_DIAGRAM):   data _metaTestView;
1782963    set work._train;
MPRINT(EM_DIAGRAM):   set work._train;
1782964    if _N_=1 then do;
MPRINT(EM_DIAGRAM):   if _N_=1 then do;
1782965    output;
MPRINT(EM_DIAGRAM):   output;
1782966    stop;
MPRINT(EM_DIAGRAM):   stop;
1782967    end;
MPRINT(EM_DIAGRAM):   end;
1782968    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set WORK._TRAIN.
NOTE: The data set WORK._METATESTVIEW has 1 observations and 16 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1782969    proc contents data=work._train
1782970    out=WORK.M35DS7F9 noprint;
MPRINT(EM_DIAGRAM):    proc contents data=work._train out=WORK.M35DS7F9 noprint;
1782971    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK.M35DS7F9 has 16 observations and 40 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1782972    data WORK.M35DS7F9;
MPRINT(EM_DIAGRAM):    data WORK.M35DS7F9;
1782973    length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20 INDEX $ 1 INDEXTYPE $
1782973  !  9;
MPRINT(EM_DIAGRAM):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20 INDEX $ 1 
INDEXTYPE $ 9;
1782974    label NAME =;
MPRINT(EM_DIAGRAM):   label NAME =;
1782975    set WORK.M35DS7F9(keep=name type length label format formatl formatd informat
1782975  ! informl informd idxusage rename=(type=itype));
MPRINT(EM_DIAGRAM):   set WORK.M35DS7F9(keep=name type length label format formatl formatd 
informat informl informd idxusage rename=(type=itype));
1782976    if itype = 1 then type = 'N';
MPRINT(EM_DIAGRAM):   if itype = 1 then type = 'N';
1782977    else type = 'C';
MPRINT(EM_DIAGRAM):   else type = 'C';
1782978    if formatl > 0 then do;
MPRINT(EM_DIAGRAM):   if formatl > 0 then do;
1782979    if format ne ' ' then format = strip(format)!!strip(put(formatl,
1782979  ! best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EM_DIAGRAM):   if format ne ' ' then format = strip(format)!!strip(put(formatl, 
best12.))!!'.'!!strip(put(formatd, best12.));
1782980    else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EM_DIAGRAM):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, 
best12.));
1782981    end;
MPRINT(EM_DIAGRAM):   end;
1782982    else if format ne '' then format = strip(format)!!'.';
MPRINT(EM_DIAGRAM):   else if format ne '' then format = strip(format)!!'.';
1782983    if informl > 0 then do;
MPRINT(EM_DIAGRAM):   if informl > 0 then do;
1782984    if informat ne ' ' then informat = strip(informat)!!strip(put(informl,
1782984  ! best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EM_DIAGRAM):   if informat ne ' ' then informat = strip(informat)!!strip(put(informl, 
best12.))!!'.'!!strip(put(informd, best12.));
1782985    else informat = strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EM_DIAGRAM):   else informat = strip(put(informl, best12.))!!'.'!!strip(put(informd, 
best12.));
1782986    end;
MPRINT(EM_DIAGRAM):   end;
1782987    else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EM_DIAGRAM):   else if informat ne '' then informat = strip(informat)!!'.';
1782988    if idxusage = 'NONE' then index ="N";
MPRINT(EM_DIAGRAM):   if idxusage = 'NONE' then index ="N";
1782989    else index = "Y";
MPRINT(EM_DIAGRAM):   else index = "Y";
1782990    indextype = idxusage;
MPRINT(EM_DIAGRAM):   indextype = idxusage;
1782991    drop idxusage itype formatl formatd informl informd;
MPRINT(EM_DIAGRAM):   drop idxusage itype formatl formatd informl informd;
1782992    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 16 observations read from the data set WORK.M35DS7F9.
NOTE: The data set WORK.M35DS7F9 has 16 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1782993    data WORK.M35DS7F9;
MPRINT(EM_DIAGRAM):    data WORK.M35DS7F9;
1782994    length UNAME $64;
MPRINT(EM_DIAGRAM):   length UNAME $64;
1782995    set WORK.M35DS7F9;
MPRINT(EM_DIAGRAM):   set WORK.M35DS7F9;
1782996    UNAME = upcase(NAME);
MPRINT(EM_DIAGRAM):   UNAME = upcase(NAME);
1782997    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 16 observations read from the data set WORK.M35DS7F9.
NOTE: The data set WORK.M35DS7F9 has 16 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):    proc sort data=WORK.M12XO9UG NOTHREADS;
MPRINT(EM_DIAGRAM):   by UNAME;
MPRINT(EM_DIAGRAM):   run;
1783001    data WORK.M12XO9UG;
MPRINT(EM_DIAGRAM):    data WORK.M12XO9UG;
1783002    drop UNAME;
MPRINT(EM_DIAGRAM):   drop UNAME;
1783003    set WORK.M12XO9UG;
MPRINT(EM_DIAGRAM):   set WORK.M12XO9UG;
1783004    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 16 observations read from the data set WORK.M12XO9UG.
NOTE: The data set WORK.M12XO9UG has 16 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):    data WORK.M24EGE6A(keep=NAME ATTR);
MPRINT(EM_DIAGRAM):   length ATTR $ 20;
MPRINT(EM_DIAGRAM):   set WORK.M12XO9UG;
MPRINT(EM_DIAGRAM):   if level ne "INTERVAL" then do;
MPRINT(EM_DIAGRAM):   if order = ' ' then do;
MPRINT(EM_DIAGRAM):   attr = 'ORDER';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EM_DIAGRAM):   attr = 'FORMATTYPE';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if role = ' ' then do;
MPRINT(EM_DIAGRAM):   attr = 'ROLE';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if level = ' ' then do;
MPRINT(EM_DIAGRAM):   attr = 'LEVEL';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if type = ' ' then do;
MPRINT(EM_DIAGRAM):   attr = 'TYPE';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if index = ' ' then do;
MPRINT(EM_DIAGRAM):   attr = 'INDEX';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if report = ' ' then do;
MPRINT(EM_DIAGRAM):   attr = 'REPORT';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort NOTHREADS;
MPRINT(EM_DIAGRAM):   by attr;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.M12XO9UG;
MPRINT(EM_DIAGRAM):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 FORMATTYPE $ 
10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EM_DIAGRAM):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EM_DIAGRAM):   set WORK.M12XO9UG;
MPRINT(EM_DIAGRAM):   if formattype = ' ' then do;
MPRINT(EM_DIAGRAM):   if format ne ' ' then do;
MPRINT(EM_DIAGRAM):   if type = 'N' then do;
MPRINT(EM_DIAGRAM):   pos = indexc(format,'.1234567890');
MPRINT(EM_DIAGRAM):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EM_DIAGRAM):   else tempfmt = ' ';
MPRINT(EM_DIAGRAM):   flen = length(tempfmt);
MPRINT(EM_DIAGRAM):   select;
MPRINT(EM_DIAGRAM):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" 
"MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" 
"QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" "YEAR" "YYMMDD" "YYMON" 
"YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" 
"EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) 
formattype = 'DATE';
MPRINT(EM_DIAGRAM):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = "DATETIME";
MPRINT(EM_DIAGRAM):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) formattype = 
"TIME";
MPRINT(EM_DIAGRAM):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" 
"NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EM_DIAGRAM):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" "SSN" 
"Z" "ZD")) formattype = "CODING";
MPRINT(EM_DIAGRAM):   otherwise do;
MPRINT(EM_DIAGRAM):   formattype = "USER";
MPRINT(EM_DIAGRAM):   if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EM_DIAGRAM):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EM_DIAGRAM):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EM_DIAGRAM):   else if flen >= 4 then do;
MPRINT(EM_DIAGRAM):   str = substr(tempfmt,1,4);
MPRINT(EM_DIAGRAM):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EM_DIAGRAM):   else if str = "S370" then formattype = "CODING";
MPRINT(EM_DIAGRAM):   else if str = "BEST" then formattype = "NUM";
MPRINT(EM_DIAGRAM):   drop str;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = 
"DATE";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   drop flen tempfmt pos;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   formatType = "CATEGORY";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if formatType = "NUM" then do;
MPRINT(EM_DIAGRAM):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EM_DIAGRAM):   else formatType = "QUANTITY";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if level = ' ' then do;
MPRINT(EM_DIAGRAM):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then level = 
"NOMINAL";
MPRINT(EM_DIAGRAM):   else level = "INTERVAL";
MPRINT(EM_DIAGRAM):   levelAssigned = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else level = upcase(level);
MPRINT(EM_DIAGRAM):   if role = ' ' then do;
MPRINT(EM_DIAGRAM):   length name_prefix $8 _uname $64;
MPRINT(EM_DIAGRAM):   drop name_prefix _uname _freqflag;
MPRINT(EM_DIAGRAM):   retain _freqflag;
MPRINT(EM_DIAGRAM):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EM_DIAGRAM):   _uname = upcase(NAME);
MPRINT(EM_DIAGRAM):   select(_uname);
MPRINT(EM_DIAGRAM):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EM_DIAGRAM):   when('EM_SEGMENT') do;
MPRINT(EM_DIAGRAM):   ROLE = 'SEGMENT';
MPRINT(EM_DIAGRAM):   LEVEL = 'NOMINAL';
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   when('_NODE_') do;
MPRINT(EM_DIAGRAM):   ROLE = 'SEGMENT';
MPRINT(EM_DIAGRAM):   LEVEL = 'NOMINAL';
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EM_DIAGRAM):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EM_DIAGRAM):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EM_DIAGRAM):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EM_DIAGRAM):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EM_DIAGRAM):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EM_DIAGRAM):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EM_DIAGRAM):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EM_DIAGRAM):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EM_DIAGRAM):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EM_DIAGRAM):   when('URI') ROLE = 'URL';
MPRINT(EM_DIAGRAM):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EM_DIAGRAM):   otherwise do;
MPRINT(EM_DIAGRAM):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EM_DIAGRAM):   ROLE = 'REJECTED';
MPRINT(EM_DIAGRAM):   LEVEL = 'NOMINAL';
MPRINT(EM_DIAGRAM):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EM_DIAGRAM):   ROLE = 'FREQ';
MPRINT(EM_DIAGRAM):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EM_DIAGRAM):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   name_prefix = scan(_uname, 1, '_');
MPRINT(EM_DIAGRAM):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EM_DIAGRAM):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EM_DIAGRAM):   ROLE = 'CLASSIFICATION';
MPRINT(EM_DIAGRAM):   LEVEL = 'NOMINAL';
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EM_DIAGRAM):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 'RAS', 
'RAT') then ROLE = 'RESIDUAL';
MPRINT(EM_DIAGRAM):   else if name_prefix ='D' then do;
MPRINT(EM_DIAGRAM):   ROLE = 'DECISION';
MPRINT(EM_DIAGRAM):   LEVEL = 'NOMINAL';
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if name_prefix ='B' then do;
MPRINT(EM_DIAGRAM):   ROLE = 'SEGMENT';
MPRINT(EM_DIAGRAM):   LEVEL = 'NOMINAL';
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 'ROI', 
'IC') then ROLE = 'ASSESS';
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   array _ROLE_ (19) $32 _TEMPORARY_ ('ASSESS','CLASSIFICATION','CENSOR', 
'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 
'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 
'TIMEID');
MPRINT(EM_DIAGRAM):   drop _found_ i;
MPRINT(EM_DIAGRAM):   _found_=0;
MPRINT(EM_DIAGRAM):   do i=1 to 19 until(_found_=1);
MPRINT(EM_DIAGRAM):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EM_DIAGRAM):   ROLE=_ROLE_{i};
MPRINT(EM_DIAGRAM):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EM_DIAGRAM):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EM_DIAGRAM):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EM_DIAGRAM):   _found_=1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if length(_uname)>2 then do;
MPRINT(EM_DIAGRAM):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EM_DIAGRAM):   ROLE = 'ID';
MPRINT(EM_DIAGRAM):   LEVEL = 'NOMINAL';
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EM_DIAGRAM):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if role = ' ' then do;
MPRINT(EM_DIAGRAM):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EM_DIAGRAM):   else role = 'INPUT';
MPRINT(EM_DIAGRAM):   roleAssigned = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else role = upcase(role);
MPRINT(EM_DIAGRAM):   if REPORT = '' then REPORT = 'N';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * DMDBClass Macro ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(HPDM_PERFORMANCE):  ;
PERFORMANCE  DETAILS
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):    proc dmdb data=work._train(obs=1000000) batch classOut=_DMDB0X1QG8P 
maxLevel=22;
MPRINT(EM_DIAGRAM):   class
MPRINT(DMDBCLASS):   DepVar GRP_AcceptedCmp5 GRP_Frq GRP_Income GRP_Mnt GRP_MntFishProducts 
GRP_MntGoldProds GRP_MntMeatProducts GRP_MntWines GRP_NumCatalogPurchases GRP_NumDistPurchases 
GRP_NumWebPurchases GRP_Recency GRP_RFMstat GRP_RMntFrq Year_Birth
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    proc freq data=_DMDB0X1QG8P noprint;
MPRINT(EM_DIAGRAM):   table name / out=_DMDBCOUNT0X1QG8P(drop=percent rename=(count=NLEVEL));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _MISS0X1QG8P(rename=(frequency=NMISS));
MPRINT(EM_DIAGRAM):   set _DMDB0X1QG8P(where=(NRAW=. and CRAW=''));
MPRINT(EM_DIAGRAM):   keep name frequency;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_MISS0X1QG8P;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_DMDBCOUNT0X1QG8P;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _COUNTS0X1QG8P;
MPRINT(EM_DIAGRAM):   merge _DMDBCOUNT0X1QG8P _MISS0X1QG8P;
MPRINT(EM_DIAGRAM):   label NLEVEL= 'Number of Category';
MPRINT(EM_DIAGRAM):   by name;
MPRINT(EM_DIAGRAM):   if NMISS > 0 then do;
MPRINT(EM_DIAGRAM):   NLEVEL= NLEVEL-1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else NMISS = 0;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    proc sort data=_COUNTS0X1QG8P NOTHREADS;
MPRINT(EM_DIAGRAM):   by name;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.M12XO9UG NOTHREADS;
MPRINT(EM_DIAGRAM):   by name;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data WORK.M12XO9UG;
MPRINT(EM_DIAGRAM):   length NLEVEL 8 nmiss 8;
MPRINT(EM_DIAGRAM):   update WORK.M12XO9UG _COUNTS0X1QG8P;
MPRINT(EM_DIAGRAM):   by name;
MPRINT(EM_DIAGRAM):   if name='' then name='_';
MPRINT(EM_DIAGRAM):   if levelAssigned and ROLE ne 'FREQ' then do;
MPRINT(EM_DIAGRAM):   select(NLEVEL);
MPRINT(EM_DIAGRAM):   when(.) do;
MPRINT(EM_DIAGRAM):   if type eq 'C' then level = 'NOMINAL';
MPRINT(EM_DIAGRAM):   else level = 'INTERVAL';
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   when(0) level = 'UNARY';
MPRINT(EM_DIAGRAM):   when(1) level = 'UNARY';
MPRINT(EM_DIAGRAM):   when(2) level = 'BINARY';
MPRINT(EM_DIAGRAM):   otherwise do;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if roleAssigned then do;
MPRINT(EM_DIAGRAM):   if level = 'NOMINAL' and NLEVEL > 20 then do;
MPRINT(EM_DIAGRAM):   role = 'REJECTED';
MPRINT(EM_DIAGRAM):   comment = "Exceeds maximum number of levels cutoff";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if level = 'UNARY' and ROLE ne 'FREQ' then role='REJECTED';
MPRINT(EM_DIAGRAM):   drop NLEVEL nmiss;
MPRINT(EM_DIAGRAM):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= 
"Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= 
"Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower limit" UPPERLIMIT= 
"Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= 
"Label" LENGTH= "Length";
MPRINT(EM_DIAGRAM):   drop levelAssigned roleAssigned;
MPRINT(EM_DIAGRAM):   run;
1783288    title8 "%sysfunc(sasmsg(sashelp.dmine, rpt_clean_title, NOQUOTE))";
MPRINT(EM_DIAGRAM):    title8 "Cleanup Model";
1783289    data WORK.M145BPSG;
MPRINT(EM_DIAGRAM):   data WORK.M145BPSG;
1783290    set WORK.M145BPSG;
MPRINT(EM_DIAGRAM):   set WORK.M145BPSG;
1783291    if NAME='Element1' then delete;
MPRINT(EM_DIAGRAM):   if NAME='Element1' then delete;
1783292    if NAME='Element2' then delete;
MPRINT(EM_DIAGRAM):   if NAME='Element2' then delete;
1783293    if NAME='Element3' then delete;
MPRINT(EM_DIAGRAM):   if NAME='Element3' then delete;
1783294    if NAME='Element4' then delete;
MPRINT(EM_DIAGRAM):   if NAME='Element4' then delete;
1783295    if NAME='Group' then delete;
MPRINT(EM_DIAGRAM):   if NAME='Group' then delete;
1783296    if NAME='Z_CostContact' then delete;
MPRINT(EM_DIAGRAM):   if NAME='Z_CostContact' then delete;
1783297    if NAME='Z_Revenue' then delete;
MPRINT(EM_DIAGRAM):   if NAME='Z_Revenue' then delete;
1783298    if NAME='_WARN_' then delete;
MPRINT(EM_DIAGRAM):   if NAME='_WARN_' then delete;
1783299    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 17 observations read from the data set WORK.M145BPSG.
NOTE: The data set WORK.M145BPSG has 17 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1783300    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
1783301    * Cleanup Model;
MPRINT(EM_DIAGRAM):   * Cleanup Model;
1783302    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1783303    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1783304    * NEURAL MODEL DepVar BINARY CM;
MPRINT(EM_DIAGRAM):   * NEURAL MODEL DepVar BINARY CM;
1783305    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1783306    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1783307    * Rule3: Create decision matrix;
MPRINT(EM_DIAGRAM):   * Rule3: Create decision matrix;
1783308    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1783309    data EM_Rule3;
MPRINT(EM_DIAGRAM):   data EM_Rule3;
1783310    set work._train(keep=
1783311    DepVar GRP_AcceptedCmp5 GRP_Frq GRP_Income GRP_Mnt GRP_MntFishProducts
1783312    GRP_MntGoldProds GRP_MntMeatProducts GRP_MntWines GRP_NumCatalogPurchases
1783313    GRP_NumDistPurchases GRP_NumWebPurchases GRP_RFMstat GRP_RMntFrq GRP_Recency
1783314    Year_Birth );
MPRINT(EM_DIAGRAM):   set work._train(keep= DepVar GRP_AcceptedCmp5 GRP_Frq GRP_Income GRP_Mnt 
GRP_MntFishProducts GRP_MntGoldProds GRP_MntMeatProducts GRP_MntWines GRP_NumCatalogPurchases 
GRP_NumDistPurchases GRP_NumWebPurchases GRP_RFMstat GRP_RMntFrq GRP_Recency Year_Birth );
1783315    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 73 observations read from the data set WORK._TRAIN.
NOTE: The data set WORK.EM_RULE3 has 73 observations and 16 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * Rule3: DMDBClass Macro ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
1783316    *------------------------------------------------------------* ;
1783317    * Rule3: DMDBClass Macro ;
1783318    *------------------------------------------------------------* ;
1783319    %macro DMDBClass;
1783320        DepVar(DESC) GRP_AcceptedCmp5(ASC) GRP_Frq(ASC) GRP_Income(ASC) GRP_Mnt(ASC)
1783321       GRP_MntFishProducts(ASC) GRP_MntGoldProds(ASC) GRP_MntMeatProducts(ASC)
1783322       GRP_MntWines(ASC) GRP_NumCatalogPurchases(ASC) GRP_NumDistPurchases(ASC)
1783323       GRP_NumWebPurchases(ASC) GRP_RFMstat(ASC) GRP_RMntFrq(ASC) GRP_Recency(ASC)
1783324    %mend DMDBClass;
1783325    *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
1783326    * Rule3: DMDBVar Macro ;
MPRINT(EM_DIAGRAM):   * Rule3: DMDBVar Macro ;
1783327    *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
1783328    %macro DMDBVar;
1783329        Year_Birth
1783330    %mend DMDBVar;
1783331    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1783332    * Rule3: Create DMDB;
MPRINT(EM_DIAGRAM):   * Rule3: Create DMDB;
1783333    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1783334    proc dmdb batch data=WORK.EM_Rule3
1783335    dmdbcat=WORK.Rule3_DMDB
1783336    maxlevel = 513
1783337    ;
MPRINT(EM_DIAGRAM):   proc dmdb batch data=WORK.EM_Rule3 dmdbcat=WORK.Rule3_DMDB maxlevel = 
513 ;
MPRINT(EM_DIAGRAM):   class
1783338    class %DMDBClass;
MPRINT(DMDBCLASS):   DepVar(DESC) GRP_AcceptedCmp5(ASC) GRP_Frq(ASC) GRP_Income(ASC) 
GRP_Mnt(ASC) GRP_MntFishProducts(ASC) GRP_MntGoldProds(ASC) GRP_MntMeatProducts(ASC) 
GRP_MntWines(ASC) GRP_NumCatalogPurchases(ASC) GRP_NumDistPurchases(ASC) 
GRP_NumWebPurchases(ASC) GRP_RFMstat(ASC) GRP_RMntFrq(ASC) GRP_Recency(ASC)
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   var
1783339    var %DMDBVar;
MPRINT(DMDBVAR):   Year_Birth
MPRINT(EM_DIAGRAM):  ;
1783340    target
1783341    DepVar
1783342    ;
MPRINT(EM_DIAGRAM):   target DepVar ;
1783343    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Records processed = 73   Memory used = 511K.
NOTE: There were 73 observations read from the data set WORK.EM_RULE3.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):   *--- end code ---*;
1783344    quit;
1783345    *--- end code ---*;

1783346    *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------* ;
1783347    * Rule3: Interval Input Variables Macro ;
MPRINT(EM_DIAGRAM):   * Rule3: Interval Input Variables Macro ;
1783348    *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
1783349    %macro INTINPUTS;
1783350        Year_Birth
1783351    %mend INTINPUTS;
1783352    *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
1783353    * Rule3: Binary Inputs Macro ;
MPRINT(EM_DIAGRAM):   * Rule3: Binary Inputs Macro ;
1783354    *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
1783355    %macro BININPUTS;
1783356    
1783357    %mend BININPUTS;
1783358    *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
1783359    * Rule3: Nominal Inputs Macro ;
MPRINT(EM_DIAGRAM):   * Rule3: Nominal Inputs Macro ;
1783360    *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
1783361    %macro NOMINPUTS;
1783362        GRP_AcceptedCmp5 GRP_Frq GRP_Income GRP_Mnt GRP_MntFishProducts
1783363       GRP_MntGoldProds GRP_MntMeatProducts GRP_MntWines GRP_NumCatalogPurchases
1783364       GRP_NumDistPurchases GRP_NumWebPurchases GRP_RFMstat GRP_RMntFrq GRP_Recency
1783365    %mend NOMINPUTS;
1783366    *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
1783367    * Rule3: Ordinal Inputs Macro ;
MPRINT(EM_DIAGRAM):   * Rule3: Ordinal Inputs Macro ;
1783368    *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
1783369    %macro ORDINPUTS;
1783370    
1783371    %mend ORDINPUTS;
1783372    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1783373    * Neural Network Training;
MPRINT(EM_DIAGRAM):   * Neural Network Training;
1783374    ;
MPRINT(EM_DIAGRAM):   ;
1783375    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1783376    proc neural data=EM_Rule3 dmdbcat=WORK.Rule3_DMDB
1783377    validdata = work._valid
1783378    random=12345
1783379    ;
MPRINT(EM_DIAGRAM):   proc neural data=EM_Rule3 dmdbcat=WORK.Rule3_DMDB validdata = 
work._valid random=12345 ;
1783380    nloptions
1783381    noprint
1783382    ;
MPRINT(EM_DIAGRAM):   nloptions noprint ;
1783383    performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   performance alldetails noutilfile;
1783384    netopts
1783385    decay=0;
MPRINT(EM_DIAGRAM):   netopts decay=0;
MPRINT(EM_DIAGRAM):   input
1783386    input %INTINPUTS / level=interval id=intvl
MPRINT(INTINPUTS):   Year_Birth
1783387    ;
MPRINT(EM_DIAGRAM):   / level=interval id=intvl ;
MPRINT(EM_DIAGRAM):   input
1783388    input %NOMINPUTS / level=nominal id=nom
MPRINT(NOMINPUTS):   GRP_AcceptedCmp5 GRP_Frq GRP_Income GRP_Mnt GRP_MntFishProducts 
GRP_MntGoldProds GRP_MntMeatProducts GRP_MntWines GRP_NumCatalogPurchases GRP_NumDistPurchases 
GRP_NumWebPurchases GRP_RFMstat GRP_RMntFrq GRP_Recency
1783389    ;
MPRINT(EM_DIAGRAM):   / level=nominal id=nom ;
1783390    target DepVar / level=NOMINAL id=DepVar
1783391    bias
1783392    ;
MPRINT(EM_DIAGRAM):   target DepVar / level=NOMINAL id=DepVar bias ;
1783393    arch NRBFEQ
1783394    Hidden=3
1783395    ;
MPRINT(EM_DIAGRAM):   arch NRBFEQ Hidden=3 ;
1783396    Prelim 8 preiter=10
1783397    pretime=3600
1783398    Outest=WORK.PRELIMOUTEST_EMNEURAL_0UEKSU8
1783399    ;
MPRINT(EM_DIAGRAM):   Prelim 8 preiter=10 pretime=3600 
Outest=WORK.PRELIMOUTEST_EMNEURAL_0UEKSU8 ;
NOTE:  Synchronizing the objectives and the Solution.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 10 iterations or 2147483647 function calls.
NOTE: Convergence criterion (ABSGCONV=0.00001) satisfied.
NOTE: Convergence criterion (ABSGCONV=0.00001) satisfied.
NOTE: Convergence criterion (ABSCONV=0.0036250918) satisfied.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 10 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 10 iterations or 2147483647 function calls.
NOTE: Convergence criterion (ABSGCONV=0.00001) satisfied.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 10 iterations or 2147483647 function calls.
NOTE: The data set WORK.PRELIMOUTEST_EMNEURAL_0UEKSU8 has 17 observations and 136 variables.
1783400    save network=WORK.NETWORK.dm_neural;
MPRINT(EM_DIAGRAM):   save network=WORK.NETWORK.dm_neural;
NOTE: Entry WORK.NETWORK.DM_NEURAL has been opened.
NOTE: Entry WORK.NETWORK.DM_NEURAL has been closed.
1783401    train Maxiter=20
1783402    maxtime=14400
1783403    Outest=WORK.Rule3_outest estiter=1
1783404    Outfit=_rnfit
1783405    ;
MPRINT(EM_DIAGRAM):   train Maxiter=20 maxtime=14400 Outest=WORK.Rule3_outest estiter=1 
Outfit=_rnfit ;
NOTE: Convergence criterion (ABSCONV=0.0036250918) satisfied.
NOTE: The data set WORK.RULE3_OUTEST has 3 observations and 136 variables.
NOTE: The data set WORK._RNFIT has 4 observations and 36 variables.
1783406    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK.EM_RULE3 has 73 observations and 16 variables.
NOTE: The data set WORK._VALID has 40 observations and 16 variables.
NOTE: Closing the Neural Application.
NOTE: The PROCEDURE NEURAL printed page 1766.
NOTE: PROCEDURE NEURAL used (Total process time):
      real time           0.09 seconds
      cpu time            0.07 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1783407    quit;

1783408    proc sort data=_rnfit(where=(_iter_ ne . and _NAME_="OVERALL")) out=fit_Rule3;
MPRINT(EM_DIAGRAM):    proc sort data=_rnfit(where=(_iter_ ne . and _NAME_="OVERALL")) 
out=fit_Rule3;
1783409    by _VAVERR_;
MPRINT(EM_DIAGRAM):   by _VAVERR_;
1783410    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2 observations read from the data set WORK._RNFIT.
      WHERE (_iter_ not = .) and (_NAME_='OVERALL');
NOTE: The data set WORK.FIT_RULE3 has 2 observations and 36 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1783411    %GLOBAL ITER;
1783412    data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
1783413    set fit_Rule3(obs=1);
MPRINT(EM_DIAGRAM):   set fit_Rule3(obs=1);
1783414    call symput('ITER',put(_ITER_, 6.));
MPRINT(EM_DIAGRAM):   call symput('ITER',put(_ITER_, 6.));
1783415    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set WORK.FIT_RULE3.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1783416    data WORK.INITIAL_EMNEURAL_0UEKSU8;
MPRINT(EM_DIAGRAM):   data WORK.INITIAL_EMNEURAL_0UEKSU8;
1783417    set WORK.Rule3_outest(where=(_ITER_ eq &ITER and _OBJ_ ne .));
MPRINT(EM_DIAGRAM):   set WORK.Rule3_outest(where=(_ITER_ eq 0 and _OBJ_ ne .));
1783418    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2 observations read from the data set WORK.RULE3_OUTEST.
      WHERE (_ITER_=0) and (_OBJ_ not = .);
NOTE: The data set WORK.INITIAL_EMNEURAL_0UEKSU8 has 2 observations and 136 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1783419    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
1783420    * Neural Network Model Selection;
MPRINT(EM_DIAGRAM):   * Neural Network Model Selection;
1783421    ;
MPRINT(EM_DIAGRAM):   ;
1783422    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1783423    proc neural data=EM_Rule3 dmdbcat=WORK.Rule3_DMDB
1783424    validdata = work._valid
1783425    network = WORK.NETWORK.dm_neural
1783426    random=12345
1783427    ;
MPRINT(EM_DIAGRAM):   proc neural data=EM_Rule3 dmdbcat=WORK.Rule3_DMDB validdata = 
work._valid network = WORK.NETWORK.dm_neural random=12345 ;
NOTE: Entry WORK.NETWORK.DM_NEURAL has been opened.
NOTE: Entry WORK.NETWORK.DM_NEURAL has been closed.
1783428    nloptions noprint;
MPRINT(EM_DIAGRAM):   nloptions noprint;
1783429    performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   performance alldetails noutilfile;
1783430    initial inest=WORK.INITIAL_EMNEURAL_0UEKSU8;
MPRINT(EM_DIAGRAM):   initial inest=WORK.INITIAL_EMNEURAL_0UEKSU8;
NOTE: The data set WORK.INITIAL_EMNEURAL_0UEKSU8 has 2 observations and 136 variables.
1783431    train tech=NONE;
MPRINT(EM_DIAGRAM):   train tech=NONE;
NOTE: No optimization performed.
1783432    code file="C:\Users\LUKASF~1\AppData\Local\Temp\SAS Temporary
1783432  ! Files\_TD9752_WN7LF-LEAVE_\Prc2\CM.sas"
1783433    group=Rule3
1783434    ;
MPRINT(EM_DIAGRAM):   code file="C:\Users\LUKASF~1\AppData\Local\Temp\SAS Temporary 
Files\_TD9752_WN7LF-LEAVE_\Prc2\CM.sas" group=Rule3 ;
NOTE: External file C:\Users\LUKASF~1\AppData\Local\Temp\SAS Temporary 
      Files\_TD9752_WN7LF-LEAVE_\Prc2\CM.sas opened.
1783435    ;
MPRINT(EM_DIAGRAM):   ;
1783436    code file="C:\Users\LUKASF~1\AppData\Local\Temp\SAS Temporary
1783436  ! Files\_TD9752_WN7LF-LEAVE_\Prc2\CM_res.sas"
1783437    group=Rule3
1783438    residual
1783439    ;
MPRINT(EM_DIAGRAM):   code file="C:\Users\LUKASF~1\AppData\Local\Temp\SAS Temporary 
Files\_TD9752_WN7LF-LEAVE_\Prc2\CM_res.sas" group=Rule3 residual ;
NOTE: External file C:\Users\LUKASF~1\AppData\Local\Temp\SAS Temporary 
      Files\_TD9752_WN7LF-LEAVE_\Prc2\CM_res.sas opened.
1783440    ;
MPRINT(EM_DIAGRAM):   ;
1783441    score data=_train out=_ptrain
1783442    outkey=WORK.OUTKEY_EMNEURAL_0UEKSU8;
MPRINT(EM_DIAGRAM):   score data=_train out=_ptrain outkey=WORK.OUTKEY_EMNEURAL_0UEKSU8;
NOTE: The data set WORK.OUTKEY_EMNEURAL_0UEKSU8 has 14 observations and 8 variables.
NOTE: The data set WORK._TRAIN has 73 observations and 16 variables.
NOTE: The data set WORK._PTRAIN has 73 observations and 30 variables.
1783443    score data=_valid out=_pvalid
1783444    outkey=WORK.OUTKEY_EMNEURAL_0UEKSU8;
MPRINT(EM_DIAGRAM):   score data=_valid out=_pvalid outkey=WORK.OUTKEY_EMNEURAL_0UEKSU8;
NOTE: The data set WORK.OUTKEY_EMNEURAL_0UEKSU8 has 14 observations and 8 variables.
NOTE: The data set WORK._VALID has 40 observations and 16 variables.
NOTE: The data set WORK._PVALID has 40 observations and 30 variables.
1783445    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK.EM_RULE3 has 73 observations and 16 variables.
NOTE: The data set WORK._VALID has 40 observations and 16 variables.
NOTE: Closing the Neural Application.
NOTE: PROCEDURE NEURAL used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1783446    quit;
1783447    data _rnest;
MPRINT(EM_DIAGRAM):   data _rnest;
1783448    set WORK.Rule3_outest;
MPRINT(EM_DIAGRAM):   set WORK.Rule3_outest;
1783449    if _type_ ^in('HESSIAN' 'GRAD');
MPRINT(EM_DIAGRAM):   if _type_ ^in('HESSIAN' 'GRAD');
1783450    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set WORK.RULE3_OUTEST.
NOTE: The data set WORK._RNEST has 2 observations and 136 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1783451    proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
1783452    delete EM_Rule3;
MPRINT(EM_DIAGRAM):   delete EM_Rule3;
1783453    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Deleting WORK.EM_RULE3 (memtype=DATA).
1783454    quit;
MPRINT(EM_DIAGRAM):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

1783455    * CLEANUP: Training Classification;
MPRINT(EM_DIAGRAM):    * CLEANUP: Training Classification;
1783456    ;
MPRINT(EM_DIAGRAM):   ;
1783457    proc freq data= _ptrain noprint;
MPRINT(EM_DIAGRAM):   proc freq data= _ptrain noprint;
1783458    tables F_DepVar * I_DepVar / out = _count;
MPRINT(EM_DIAGRAM):   tables F_DepVar * I_DepVar / out = _count;
1783459    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 73 observations read from the data set WORK._PTRAIN.
NOTE: The data set WORK._COUNT has 2 observations and 4 variables.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1783460    data _count;
MPRINT(EM_DIAGRAM):   data _count;
1783461    set _count;
MPRINT(EM_DIAGRAM):   set _count;
1783462    label count = "%sysfunc(sasmsg(sashelp.dmine, rpt_traincount_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label count = "Train Count";
1783463    label percent = "%sysfunc(sasmsg(sashelp.dmine, rpt_trainpercent_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label percent = "Train Percent";
1783464    label F_DepVar = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label F_DepVar = "Target";
1783465    label I_DepVar = "%sysfunc(sasmsg(sashelp.dmine, rpt_predict_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label I_DepVar = "Predict";
1783466    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2 observations read from the data set WORK._COUNT.
NOTE: The data set WORK._COUNT has 2 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   * CLEANUP: Validation Classification;
MPRINT(EM_DIAGRAM):   ;
1783467    * CLEANUP: Validation Classification;
1783468    ;
1783469    proc freq data= _pvalid noprint;
MPRINT(EM_DIAGRAM):   proc freq data= _pvalid noprint;
1783470    tables F_DepVar * I_DepVar / out = _vcount;
MPRINT(EM_DIAGRAM):   tables F_DepVar * I_DepVar / out = _vcount;
1783471    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 40 observations read from the data set WORK._PVALID.
NOTE: The data set WORK._VCOUNT has 2 observations and 4 variables.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1783472    data _vcount;
MPRINT(EM_DIAGRAM):   data _vcount;
1783473    set _vcount;
MPRINT(EM_DIAGRAM):   set _vcount;
1783474    length key $64;
MPRINT(EM_DIAGRAM):   length key $64;
1783475    label count = "%sysfunc(sasmsg(sashelp.dmine, rpt_validcount_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label count = "Valid Count";
1783476    label percent = "%sysfunc(sasmsg(sashelp.dmine, rpt_validpercent_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label percent = "Valid Percent";
1783477    label F_DepVar = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label F_DepVar = "Target";
1783478    label I_DepVar = "%sysfunc(sasmsg(sashelp.dmine, rpt_predict_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label I_DepVar = "Predict";
1783479    rename count = vcount;
MPRINT(EM_DIAGRAM):   rename count = vcount;
1783480    rename percent= vpercent;
MPRINT(EM_DIAGRAM):   rename percent= vpercent;
1783481    key = ktrim(kleft(F_DepVar) !! '_' !! ktrim(kleft(I_DepVar)));
MPRINT(EM_DIAGRAM):   key = ktrim(kleft(F_DepVar) !! '_' !! ktrim(kleft(I_DepVar)));
1783482    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2 observations read from the data set WORK._VCOUNT.
NOTE: The data set WORK._VCOUNT has 2 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   *;
1783483    *;
1783484    data _count;
MPRINT(EM_DIAGRAM):   data _count;
1783485    set _count;
MPRINT(EM_DIAGRAM):   set _count;
1783486    length key $64;
MPRINT(EM_DIAGRAM):   length key $64;
1783487    key = ktrim(kleft(F_DepVar) !!'_' !!ktrim(kleft(I_DepVar)));
MPRINT(EM_DIAGRAM):   key = ktrim(kleft(F_DepVar) !!'_' !!ktrim(kleft(I_DepVar)));
1783488    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2 observations read from the data set WORK._COUNT.
NOTE: The data set WORK._COUNT has 2 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   * Merge Train and Valid classification;
MPRINT(EM_DIAGRAM):   ;
1783489    * Merge Train and Valid classification;
1783490    ;
1783491    proc sort data=_count;
MPRINT(EM_DIAGRAM):   proc sort data=_count;
1783492    by key;
MPRINT(EM_DIAGRAM):   by key;
1783493    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2 observations read from the data set WORK._COUNT.
NOTE: The data set WORK._COUNT has 2 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1783494    proc sort data=_vcount;
MPRINT(EM_DIAGRAM):   proc sort data=_vcount;
1783495    by key;
MPRINT(EM_DIAGRAM):   by key;
1783496    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2 observations read from the data set WORK._VCOUNT.
NOTE: The data set WORK._VCOUNT has 2 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   *;
1783497    *;
1783498    data _count;
MPRINT(EM_DIAGRAM):   data _count;
1783499    merge _count _vcount;
MPRINT(EM_DIAGRAM):   merge _count _vcount;
1783500    by key;
MPRINT(EM_DIAGRAM):   by key;
1783501    drop key;
MPRINT(EM_DIAGRAM):   drop key;
1783502    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2 observations read from the data set WORK._COUNT.
NOTE: There were 2 observations read from the data set WORK._VCOUNT.
NOTE: The data set WORK._COUNT has 3 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   * CLEANUP: Print Classification;
MPRINT(EM_DIAGRAM):   ;
1783503    * CLEANUP: Print Classification;
1783504    ;
1783505    title9 "%sysfunc(sasmsg(sashelp.dmine, rpt_cleanup_title, NOQUOTE, DepVar))";
MPRINT(EM_DIAGRAM):   title9 "TARGET=DepVar : Cleanup Model";
1783506    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_classification_title, NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Classification Table";
1783507    proc print data = _count noobs label;
MPRINT(EM_DIAGRAM):   proc print data = _count noobs label;
1783508    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set WORK._COUNT.
NOTE: The PROCEDURE PRINT printed page 1767.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1783509    title9;
MPRINT(EM_DIAGRAM):   title9;
1783510    title10;
MPRINT(EM_DIAGRAM):   title10;
1783511    title8;
MPRINT(EM_DIAGRAM):    title8;
1783512    proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):    proc datasets lib=work nolist;
1783513    delete _train;
MPRINT(EM_DIAGRAM):   delete _train;
1783514    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Deleting WORK._TRAIN (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

1783515    proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
1783516    delete _ptrain;
MPRINT(EM_DIAGRAM):   delete _ptrain;
1783517    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Deleting WORK._PTRAIN (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

1783518    proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
1783519    delete _valid;
MPRINT(EM_DIAGRAM):   delete _valid;
1783520    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Deleting WORK._VALID (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

1783521    proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
1783522    delete _pvalid;
MPRINT(EM_DIAGRAM):   delete _pvalid;
1783523    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Deleting WORK._PVALID (memtype=DATA).
1783524    %makeResidualVars(target=DepVar, decmeta=EMWS8.Rule3_DepVar_DM , fref=#LN16241);

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.10 seconds
      cpu time            0.07 seconds
      

MPRINT(MAKERESIDUALVARS):   data _null_;
MPRINT(MAKERESIDUALVARS):   set EMWS8.Rule3_DepVar_DM end=eof;
MPRINT(MAKERESIDUALVARS):   where _TYPE_ in('TARGET', 'FROM');
MPRINT(MAKERESIDUALVARS):   if _TYPE_='TARGET' then call symput('target_level', strip(LEVEL));
MPRINT(MAKERESIDUALVARS):   else call symput('from_var', strip(VARIABLE));
MPRINT(MAKERESIDUALVARS):   run;

NOTE: There were 2 observations read from the data set EMWS8.RULE3_DEPVAR_DM.
      WHERE _TYPE_ in ('FROM', 'TARGET');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(MAKERESIDUALVARS):   data _null_;
MPRINT(MAKERESIDUALVARS):   set EMWS8.Rule3_DepVar_DM;
MPRINT(MAKERESIDUALVARS):   where _TYPE_ ='PREDICTED';
MPRINT(MAKERESIDUALVARS):   call symput('pred_vars'!!strip(put(_N_,BEST.)), strip(Variable));
MPRINT(MAKERESIDUALVARS):   run;

NOTE: There were 2 observations read from the data set EMWS8.RULE3_DEPVAR_DM.
      WHERE _TYPE_='PREDICTED';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(MAKERESIDUALVARS):   data _null_;
MPRINT(MAKERESIDUALVARS):   set EMWS8.Rule3_DepVar_DM end=eof;
MPRINT(MAKERESIDUALVARS):   where _TYPE_ ='RESIDUAL';
MPRINT(MAKERESIDUALVARS):   call symput('res_vars'!!strip(put(_N_,BEST.)), strip(Variable));
MPRINT(MAKERESIDUALVARS):   call symput('res_labels'!!strip(put(_N_,BEST.)), 
strip(tranwrd(LABEL,"'","''")));
MPRINT(MAKERESIDUALVARS):   call symput('res_levels'!!strip(put(_N_,BEST.)), 
strip(tranwrd(LEVEL,"'","''")));
MPRINT(MAKERESIDUALVARS):   if eof then call symput('numLevels', strip(put(_N_,BEST.)));
MPRINT(MAKERESIDUALVARS):   run;

NOTE: There were 2 observations read from the data set EMWS8.RULE3_DEPVAR_DM.
      WHERE _TYPE_='RESIDUAL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(MAKERESIDUALVARS):   data _null_;
MPRINT(MAKERESIDUALVARS):   file #LN16241;
MPRINT(MAKERESIDUALVARS):   put 
"*------------------------------------------------------------*;";
MPRINT(MAKERESIDUALVARS):   put "*Computing Residual Vars: DepVar;";
MPRINT(MAKERESIDUALVARS):   put 
"*------------------------------------------------------------*;";
MPRINT(MAKERESIDUALVARS):   put "Label R_DepVar1='Residual: DepVar=1';";
MPRINT(MAKERESIDUALVARS):   put "Label R_DepVar0='Residual: DepVar=0';";
MPRINT(MAKERESIDUALVARS):   put "if ";
MPRINT(MAKERESIDUALVARS):   put " F_DepVar ne '1'";
MPRINT(MAKERESIDUALVARS):   put "and F_DepVar ne '0'";
MPRINT(MAKERESIDUALVARS):   put " then do;";
MPRINT(MAKERESIDUALVARS):   put "R_DepVar1=.;";
MPRINT(MAKERESIDUALVARS):   put "R_DepVar0=.;";
MPRINT(MAKERESIDUALVARS):   put "end;";
MPRINT(MAKERESIDUALVARS):   put "else do;";
MPRINT(MAKERESIDUALVARS):   put "R_DepVar1= - P_DepVar1;";
MPRINT(MAKERESIDUALVARS):   put "R_DepVar0= - P_DepVar0;";
MPRINT(MAKERESIDUALVARS):   put "select(F_DepVar);";
MPRINT(MAKERESIDUALVARS):   put "when('1')R_DepVar1= R_DepVar1+1;";
MPRINT(MAKERESIDUALVARS):   put "when('0')R_DepVar0= R_DepVar0+1;";
MPRINT(MAKERESIDUALVARS):   put 'otherwise;';
MPRINT(MAKERESIDUALVARS):   put 'end;';
MPRINT(MAKERESIDUALVARS):   put 'end;';
MPRINT(MAKERESIDUALVARS):   run;

NOTE: The file #LN16241 is:
      Filename=C:\\predictive-models-project\Workspaces\EMWS8\Rule3\RESIDUALCODE.sas,
      RECFM=V,LRECL=256,File Size (bytes)=0,
      Last Modified=28. April 2016 09.51 Uhr,
      Create Time=27. April 2016 22.29 Uhr

NOTE: 21 records were written to the file #LN16241.
      The minimum record length was 3.
      The maximum record length was 63.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):  ;

MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
