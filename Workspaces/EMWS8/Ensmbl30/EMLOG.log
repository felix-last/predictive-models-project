*------------------------------------------------------------*
User:                Lukas Fahr
Date:                19. April 2016
Time:                17.33 Uhr
Site:                70107571
Platform:            X64_7PRO
Maintenance Release: 9.03.01M2P081512
EM Version:          12.1
* 
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "19. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "17.33 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Training Log
Date:                19. April 2016
Time:                17.33 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O11MWZLL
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl30\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O11MWZLL new;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOG
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl30\EMLOG.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "19. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "17.33 Uhr" );
MPRINT(EM_DIAGRAM):   file _LOG;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                Lukas Fahr";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "Site:                70107571";
MPRINT(EM_DIAGRAM):   put "Platform:            X64_7PRO";
MPRINT(EM_DIAGRAM):   put "Maintenance Release: 9.03.01M2P081512";
MPRINT(EM_DIAGRAM):   put "EM Version:          12.1";
MPRINT(EM_DIAGRAM):   put "* ";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl30\EMTRAIN.log" encoding="UTF-8" NOBOM;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _LOG MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_LOGIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _LOGIN
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl30\EMSCORE.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl30\EMREPORT.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    filename _LOG;
MPRINT(EM_DIAGRAM):    filename _OUT
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl30\EMOUTPUT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "19. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "17.33 Uhr" );
MPRINT(EM_DIAGRAM):   file _OUT;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                Lukas Fahr";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl30\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _OUT MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_OUTIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl30\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl30\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    filename _OUT;
MPRINT(EM_DIAGRAM):    filename _emtool_
'C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl30\EMRUNSTATUS.xml' encoding="UTF-8"
NOBOM;
(FREQ=(WHERE='ROLE = "FREQ"' DEFAULT='Y' RULE=(RULE1=(DESCRIPTION='USEATMOST1FREQ'
VALUES=(VALUE1='Y' )[235217] MAX=1 EXCEEDMAXVALUE='' )[235221] )[235215]
VALIDCHOICES=(CHOICE1='Y' )[235219] )[235503] INPUTREJECT=(WHERE='ROLE in("INPUT",
"REJECTED")' DEFAULT='D' VALIDCHOICES=(CHOICE1='D' )[235225]
RULE=(RULE1=(DESCRIPTION='USEATLEAST1INPUTREJECT' WHERE='(ROLE = "INPUT" and USE in("Y" "D"))
or (ROLE = "REJECTED" and USE = "Y")' MIN=. )[235229] )[235227] )[235223] TARGET=(WHERE='ROLE
= "TARGET"' DEFAULT='Y' VALIDCHOICES=(CHOICE1='Y' CHOICE2='N' )[235233]
RULE=(RULE1=(DESCRIPTION='METADATA.USE1TARGET' VALUES=(VALUE1='Y' )[235239] MIN=1 MAX=1
EXCEEDMAXVALUE='N' )[235237] )[235235] )[235231] )[235213]
1727939    proc freq data=EMWS8.Ensmbl30_VariableSet noprint;
MPRINT(EM_DIAGRAM):    proc freq data=EMWS8.Ensmbl30_VariableSet noprint;
1727940    table ROLE*LEVEL/out=WORK.Ensmbl30META;
MPRINT(EM_DIAGRAM):   table ROLE*LEVEL/out=WORK.Ensmbl30META;
1727941    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set EMWS8.ENSMBL30_VARIABLESET.
NOTE: The data set WORK.ENSMBL30META has 5 observations and 4 variables.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1727942    proc print data=WORK.Ensmbl30META label noobs;
MPRINT(EM_DIAGRAM):   proc print data=WORK.Ensmbl30META label noobs;
1727943    var ROLE LEVEL COUNT;
MPRINT(EM_DIAGRAM):   var ROLE LEVEL COUNT;
1727944    label ROLE = "%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel, NOQUOTE))" LEVEL =
1727944  ! "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" COUNT =
1727944  ! "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label ROLE = "Role" LEVEL = "Measurement Level" COUNT = "Frequency
Count";
1727945    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
1727946    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_varSummary_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Variable Summary";
MPRINT(EM_DIAGRAM):   run;
1727947    run;
 
NOTE: There were 5 observations read from the data set WORK.ENSMBL30META.
NOTE: The PROCEDURE PRINT printed page 1121.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1727948    title10;
MPRINT(EM_DIAGRAM):   title10;
1727949    %let EMNORLEN = %DMNORLEN;
MPRINT(EM_DIAGRAM):
EMWS8.Neural3_TRAIN EMWS8.Neural3_TRAIN
EMWS8.Neural3_TRAIN EMWS8.Neural3_TRAIN EMWS8 Neural3_TRAIN
EMWS8.Neural3_TRAIN EMWS8.Neural3_TRAIN
EMWS8.Neural3_TRAIN EMWS8.Neural3_TRAIN EMWS8 Neural3_TRAIN
MPRINT(EM_DIAGRAM):    proc dmdb data=EMWS8.Neural3_TRAIN
classout=WORK._DMDBCLASSTARGET(keep=NAME NRAW CRAW LEVEL FREQUENCY NMISSPERCENT);
MPRINT(EM_DIAGRAM):   class DepVar(DESC) ;
MPRINT(EM_DIAGRAM):   run;
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _INIT >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL setMetaData >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL setMetaData >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _term >>
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set WORK._DMDBCLASSTARGET;
MPRINT(EM_DIAGRAM):   where ^(NRAW eq . and CRAW eq '') and NAME="DepVar";
MPRINT(EM_DIAGRAM):   if _N_=1 then call symput('_newevent', strip(LEVEL));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK._DMDBCLASSTARGET out=_TEMPCLASS(keep=LEVEL FREQUENCY
NMISSPERCENT rename=(LEVEL=DepVar));
MPRINT(EM_DIAGRAM):   by LEVEL;
MPRINT(EM_DIAGRAM):   where ^(NRAW eq . and CRAW eq '') and NAME="DepVar";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _TEMPCLASS;
MPRINT(EM_DIAGRAM):   set _TEMPCLASS;
MPRINT(EM_DIAGRAM):   NMISSPERCENT= NMISSPERCENT/100;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS8.Neural3_DepVar_DD out=_sortedDecdata;
MPRINT(EM_DIAGRAM):   by DepVar;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   merge _TEMPCLASS(in=_a) _sortedDecdata(in=_b);
MPRINT(EM_DIAGRAM):   by DepVar;
MPRINT(EM_DIAGRAM):   if (_a and ^_b) or (^_a and _b) then call symput('_emresetDec', '1');
MPRINT(EM_DIAGRAM):   run;
1727978    data WORK.Ensmbl30_EVENT(KEEP=VARIABLE LABEL LEVEL EVENT NUMLEVELS ORDER);
MPRINT(EM_DIAGRAM):    data WORK.Ensmbl30_EVENT(KEEP=VARIABLE LABEL LEVEL EVENT NUMLEVELS
ORDER);
1727979    length ORDER $20;
MPRINT(EM_DIAGRAM):   length ORDER $20;
1727980    label VARIABLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel,  NOQUOTE))"
1727980  ! EVENT = "%sysfunc(sasmsg(sashelp.dmine, assmt_event_vlabel, NOQUOTE))" NUMLEVELS =
1727980  ! "%sysfunc(sasmsg(sashelp.dmine, rpt_numcat_vlabel, NOQUOTE))" LEVEL =
1727981       "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" ORDER =
1727981  ! "%sysfunc(sasmsg(sashelp.dmine, meta_order_vlabel, NOQUOTE))" LABEL =
1727981  ! "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label VARIABLE = "Target" EVENT = "Event" NUMLEVELS = "Number of Levels"
LEVEL = "Measurement Level" ORDER = "Order" LABEL = "Label";
1727982    set EMWS8.NEURAL3_DEPVAR_DM( where=(_TYPE_="TARGET"));
MPRINT(EM_DIAGRAM):   set EMWS8.NEURAL3_DEPVAR_DM( where=(_TYPE_="TARGET"));
1727983    NumLevels=2;
MPRINT(EM_DIAGRAM):   NumLevels=2;
1727984    select(upcase(ORDER));
MPRINT(EM_DIAGRAM):   select(upcase(ORDER));
1727985    when('DESC') ORDER = 'Descending';
MPRINT(EM_DIAGRAM):   when('DESC') ORDER = 'Descending';
1727986    when('ASC') ORDER = 'Ascending';
MPRINT(EM_DIAGRAM):   when('ASC') ORDER = 'Ascending';
1727987    when('FMTDESC') ORDER = 'Formatted Descending';
MPRINT(EM_DIAGRAM):   when('FMTDESC') ORDER = 'Formatted Descending';
1727988    when('FMTASC') ORDER = 'Formatted Ascending';
MPRINT(EM_DIAGRAM):   when('FMTASC') ORDER = 'Formatted Ascending';
1727989    otherwise ORDER = 'Descending';
MPRINT(EM_DIAGRAM):   otherwise ORDER = 'Descending';
1727990    end;
MPRINT(EM_DIAGRAM):   end;
1727991    output;
MPRINT(EM_DIAGRAM):   output;
1727992    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.NEURAL3_DEPVAR_DM.
      WHERE _TYPE_='TARGET';
NOTE: The data set WORK.ENSMBL30_EVENT has 1 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1727993    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
1727994    proc print data=WORK.Ensmbl30_EVENT noobs label;
MPRINT(EM_DIAGRAM):   proc print data=WORK.Ensmbl30_EVENT noobs label;
1727995    var VARIABLE EVENT LEVEL NUMLEVELS ORDER LABEL;
MPRINT(EM_DIAGRAM):   var VARIABLE EVENT LEVEL NUMLEVELS ORDER LABEL;
1727996    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
1727997    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_modelEvent_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Model Events";
MPRINT(EM_DIAGRAM):   run;
1727998    run;
 
NOTE: There were 1 observations read from the data set WORK.ENSMBL30_EVENT.
NOTE: The PROCEDURE PRINT printed page 1122.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1727999    title10;
MPRINT(EM_DIAGRAM):   title10;
"No decisions defined for target "DepVar"."
1728000    proc print data = EMWS8.Neural3_DepVar_DM noobs label;
MPRINT(EM_DIAGRAM):    proc print data = EMWS8.Neural3_DepVar_DM noobs label;
1728001    var _type_ variable label;
MPRINT(EM_DIAGRAM):   var _type_ variable label;
1728002    where _type_ ^in('MATRIX', 'DECISION', 'TRAINPRIOR', 'DATAPRIOR', 'DECPRIOR');
MPRINT(EM_DIAGRAM):   where _type_ ^in('MATRIX', 'DECISION', 'TRAINPRIOR', 'DATAPRIOR',
'DECPRIOR');
1728003    label _TYPE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_type_vlabel,     NOQUOTE))"
1728003  ! VARIABLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel, NOQUOTE))" LABEL =
1728003  ! "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _TYPE_ = "Type" VARIABLE = "Variable" LABEL = "Label";
1728004    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
1728005    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_predDecVars_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Predicted and decision variables";
MPRINT(EM_DIAGRAM):   run;
1728006    run;
 
NOTE: There were 7 observations read from the data set EMWS8.NEURAL3_DEPVAR_DM.
      WHERE _type_ not in ('DATAPRIOR', 'DECISION', 'DECPRIOR', 'MATRIX', 'TRAINPRIOR');
NOTE: The PROCEDURE PRINT printed page 1123.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1728007    title10;
MPRINT(EM_DIAGRAM):   title10;
1728008    %let groupid =;
1728009    %let endGroupid =;
1728010    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
1728011    set EMWS8.Neural9_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural9_EMINFO;
1728012    where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO',
1728012  ! 'INDEXINFO');
MPRINT(EM_DIAGRAM):   where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO',
'TARGETINFO', 'INDEXINFO');
1728013    if key = 'ENDGROUP' then call symput('endGroupId', DATA);
MPRINT(EM_DIAGRAM):   if key = 'ENDGROUP' then call symput('endGroupId', DATA);
1728014    else call symput('groupId', DATA);
MPRINT(EM_DIAGRAM):   else call symput('groupId', DATA);
1728015    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.NEURAL9_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'ENDGROUP', 'GROUPINFO', 'INDEXINFO',
      'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1728016    %let groupid =;
1728017    %let endGroupid =;
1728018    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
1728019    set EMWS8.Neural3_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural3_EMINFO;
1728020    where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO',
1728020  ! 'INDEXINFO');
MPRINT(EM_DIAGRAM):   where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO',
'TARGETINFO', 'INDEXINFO');
1728021    if key = 'ENDGROUP' then call symput('endGroupId', DATA);
MPRINT(EM_DIAGRAM):   if key = 'ENDGROUP' then call symput('endGroupId', DATA);
1728022    else call symput('groupId', DATA);
MPRINT(EM_DIAGRAM):   else call symput('groupId', DATA);
1728023    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.NEURAL3_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'ENDGROUP', 'GROUPINFO', 'INDEXINFO',
      'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1728024    %let groupid =;
1728025    %let endGroupid =;
1728026    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
1728027    set EMWS8.Neural2_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural2_EMINFO;
1728028    where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO',
1728028  ! 'INDEXINFO');
MPRINT(EM_DIAGRAM):   where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO',
'TARGETINFO', 'INDEXINFO');
1728029    if key = 'ENDGROUP' then call symput('endGroupId', DATA);
MPRINT(EM_DIAGRAM):   if key = 'ENDGROUP' then call symput('endGroupId', DATA);
1728030    else call symput('groupId', DATA);
MPRINT(EM_DIAGRAM):   else call symput('groupId', DATA);
1728031    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.NEURAL2_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'ENDGROUP', 'GROUPINFO', 'INDEXINFO',
      'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1728032    data WORK.Ensmbl30;
MPRINT(EM_DIAGRAM):    data WORK.Ensmbl30;
1728033    length NodeId $32 Model $64;
MPRINT(EM_DIAGRAM):   length NodeId $32 Model $64;
1728034    label Nodeid = "%sysfunc(sasmsg(sashelp.dmine, rpt_nodeId_vlabel,  NOQUOTE))" Model
1728034  ! = "%sysfunc(sasmsg(sashelp.dmine, rpt_modeltype,      NOQUOTE))";
MPRINT(EM_DIAGRAM):   label Nodeid = "Node Id" Model = "rpt_modeltype";
1728035    nodeid="NEURAL9";
MPRINT(EM_DIAGRAM):   nodeid="NEURAL9";
1728036    model="Neural";
MPRINT(EM_DIAGRAM):   model="Neural";
1728037    output;
MPRINT(EM_DIAGRAM):   output;
1728038    nodeid="NEURAL3";
MPRINT(EM_DIAGRAM):   nodeid="NEURAL3";
1728039    model="Neural";
MPRINT(EM_DIAGRAM):   model="Neural";
1728040    output;
MPRINT(EM_DIAGRAM):   output;
1728041    nodeid="NEURAL2";
MPRINT(EM_DIAGRAM):   nodeid="NEURAL2";
1728042    model="Neural";
MPRINT(EM_DIAGRAM):   model="Neural";
1728043    output;
MPRINT(EM_DIAGRAM):   output;
1728044    ;
MPRINT(EM_DIAGRAM):   ;
1728045    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK.ENSMBL30 has 3 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1728046    title;
MPRINT(EM_DIAGRAM):   title;
1728047    proc print data=WORK.Ensmbl30 label noobs;
MPRINT(EM_DIAGRAM):   proc print data=WORK.Ensmbl30 label noobs;
1728048    title9 "%sysfunc(sasmsg(sashelp.dmine, rpt_combinemodels_title,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   title9 "Imported Models to be Combined";
1728049    title10 "Probability Function: Voting";
MPRINT(EM_DIAGRAM):   title10 "Probability Function: Voting";
MPRINT(EM_DIAGRAM):   run;
1728050    run;
 
NOTE: There were 3 observations read from the data set WORK.ENSMBL30.
NOTE: The PROCEDURE PRINT printed page 1124.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1728051    title9;
MPRINT(EM_DIAGRAM):   title9;
1728052    title10;
MPRINT(EM_DIAGRAM):   title10;
1728053    data WORK.M22N3FUC;
MPRINT(EM_DIAGRAM):    data WORK.M22N3FUC;
1728054    set WORK.M22N3FUC;
MPRINT(EM_DIAGRAM):   set WORK.M22N3FUC;
1728055    where NAME = "DepVar";
MPRINT(EM_DIAGRAM):   where NAME = "DepVar";
1728056    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK.M22N3FUC.
      WHERE NAME='DepVar';
NOTE: The data set WORK.M22N3FUC has 1 observations and 22 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1728057    *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------* ;
1728058    * EM: DMDBClass Macro ;
MPRINT(EM_DIAGRAM):   * EM: DMDBClass Macro ;
1728059    *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
1728060    %macro DMDBClass;
1728061        DepVar(DESC)
1728062    %mend DMDBClass;
1728063    *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
1728064    * EM: DMDBVar Macro ;
MPRINT(EM_DIAGRAM):   * EM: DMDBVar Macro ;
1728065    *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
1728066    %macro DMDBVar;
1728067
1728068    %mend DMDBVar;
1728069    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1728070    * EM: Create DMDB;
MPRINT(EM_DIAGRAM):   * EM: Create DMDB;
1728071    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1728072    proc dmdb batch data=EMWS8.Neural9_TRAIN
1728073    dmdbcat=WORK.EM_DMDB
1728074    maxlevel = 513
1728075    ;
MPRINT(EM_DIAGRAM):   proc dmdb batch data=EMWS8.Neural9_TRAIN dmdbcat=WORK.EM_DMDB maxlevel =
513 ;
MPRINT(EM_DIAGRAM):   class
1728076    class %DMDBClass;
MPRINT(DMDBCLASS):   DepVar(DESC)
MPRINT(EM_DIAGRAM):  ;
1728077    target
1728078    DepVar
1728079    ;
MPRINT(EM_DIAGRAM):   target DepVar ;
1728080    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Records processed = 2374   Memory used = 511K.
NOTE: There were 2374 observations read from the data set EMWS8.PART_TRAIN.
NOTE: View EMWS8.NEURAL9_TRAIN.VIEW used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
NOTE: There were 2374 observations read from the data set EMWS8.META_TRAIN.
NOTE: There were 2374 observations read from the data set EMWS8.NEURAL9_TRAIN.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):   *--- end code ---*;
1728081    quit;
1728082    *--- end code ---*;
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "19. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "17.33 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                19. April 2016
Time:                17.33 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O2KELU9G
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl30\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O2KELU9G new;
MPRINT(EM_DIAGRAM):   run;
1728184    filename emflow
1728184  ! "C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl30\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl30\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl30: Scoring NEURAL9_TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1728185    *------------------------------------------------------------*;
1728186    * Ensmbl30: Scoring NEURAL9_TRAIN data;
1728187    *------------------------------------------------------------*;
1728188    data EMWS8.Ensmbl30_TRAIN
1728189    / view=EMWS8.Ensmbl30_TRAIN
1728190    ;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl30_TRAIN / view=EMWS8.Ensmbl30_TRAIN ;
1728191    set EMWS8.Neural9_TRAIN
1728192    ;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural9_TRAIN ;
1728193    %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file
      C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl30\EMFLOWSCORE.sas.
1728194   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1728195   +* Ensmbl30: Combine model for DepVar;
MPRINT(EM_DIAGRAM):   * Ensmbl30: Combine model for DepVar;
1728196   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1728197   +* Ensmbl30: Scoring Code of model 1 of 3;
MPRINT(EM_DIAGRAM):   * Ensmbl30: Scoring Code of model 1 of 3;
1728198   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1728199   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1728200   +* TOOL: Extension Class;
MPRINT(EM_DIAGRAM):   * TOOL: Extension Class;
1728201   +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
1728202   +* NODE: FIMPORT;
MPRINT(EM_DIAGRAM):   * NODE: FIMPORT;
1728203   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1728204   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1728205   +* TOOL: Statistics Exploration;
MPRINT(EM_DIAGRAM):   * TOOL: Statistics Exploration;
1728206   +* TYPE: EXPLORE;
MPRINT(EM_DIAGRAM):   * TYPE: EXPLORE;
1728207   +* NODE: Stat;
MPRINT(EM_DIAGRAM):   * NODE: Stat;
1728208   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1728209   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1728210   +* TOOL: Filtering;
MPRINT(EM_DIAGRAM):   * TOOL: Filtering;
1728211   +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
1728212   +* NODE: Filter;
MPRINT(EM_DIAGRAM):   * NODE: Filter;
1728213   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1728214   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1728215   +* TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
MPRINT(EM_DIAGRAM):   * TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
1728216   +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
1728217   +* NODE: EMCODE4;
MPRINT(EM_DIAGRAM):   * NODE: EMCODE4;
1728218   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1728219   +
1728220   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1728221   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1728221  !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1728222   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1728223   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1728224   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1728225   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1728226   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
1728227   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1728228   +* TOOL: Transform;
MPRINT(EM_DIAGRAM):   * TOOL: Transform;
1728229   +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
1728230   +* NODE: Trans;
MPRINT(EM_DIAGRAM):   * NODE: Trans;
1728231   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1728232   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1728233   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1728234   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1728235   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1728236   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1728237   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
1728238   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1728239   +* TOOL: Partition Class;
MPRINT(EM_DIAGRAM):   * TOOL: Partition Class;
1728240   +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
1728241   +* NODE: Part;
MPRINT(EM_DIAGRAM):   * NODE: Part;
1728242   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1728243   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1728244   +* TOOL: Metadata Node;
MPRINT(EM_DIAGRAM):   * TOOL: Metadata Node;
1728245   +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
1728246   +* NODE: Meta;
MPRINT(EM_DIAGRAM):   * NODE: Meta;
1728247   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1728248   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1728249   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
1728250   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1728251   +* NODE: Neural9;
MPRINT(EM_DIAGRAM):   * NODE: Neural9;
1728252   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1728253   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1728254   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1728255   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1728256   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1728257   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1728258   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1728259   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1728260   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1728261   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1728262   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1728263   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1728264   +LENGTH _WARN_ $4
1728265   +      F_DepVar  $ 12
1728266   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1728267   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1728268   +
1728269   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1728270   +
1728271   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1728272   +
1728273   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1728274   +
1728275   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1728276   +
1728277   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1728278   +
1728279   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1728280   +
1728281   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1728282   +
1728283   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1728284   +
1728285   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1728286   +
1728287   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1728288   +
1728289   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1728290   +
1728291   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1728292   +
1728293   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1728294   +
1728295   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1728296   +
1728297   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1728298   +
1728299   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1728300   +
1728301   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1728302   +
1728303   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1728304   +
1728305   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1728306   +
1728307   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1728308   +
1728309   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1728310   +
1728311   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1728312   +
1728313   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1728314   +
1728315   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1728316   +
1728317   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1728318   +
1728319   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1728320   +
1728321   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1728322   +
1728323   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1728324   +
1728325   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1728326   +
1728327   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1728328   +
1728329   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1728330   +
1728331   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1728332   +
1728333   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1728334   +
1728335   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1728336   +
1728337   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1728338   +
1728339   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1728340   +
1728341   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1728342   +
1728343   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1728344   +
1728345   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1728346   +
1728347   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1728348   +
1728349   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1728350   +
1728351   +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
1728352   +
1728353   +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
1728354   +
1728355   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1728356   +
1728357   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1728358   +
1728359   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1728360   +
1728361   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1728362   +
1728363   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1728364   +
1728365   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1728366   +
1728367   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1728368   +
1728369   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1728370   +
1728371   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1728372   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1728373   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1728374   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1728375   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1728376   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1728377   +end;
MPRINT(EM_DIAGRAM):   end;
1728378   +else do;
MPRINT(EM_DIAGRAM):   else do;
1728379   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1728380   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1728381   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1728382   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1728383   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1728384   +   end;
MPRINT(EM_DIAGRAM):   end;
1728385   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1728386   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1728387   +   end;
MPRINT(EM_DIAGRAM):   end;
1728388   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1728389   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1728390   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1728391   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1728392   +   end;
MPRINT(EM_DIAGRAM):   end;
1728393   +end;
MPRINT(EM_DIAGRAM):   end;
1728394   +
1728395   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1728396   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1728397   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1728398   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1728399   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1728400   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1728401   +end;
MPRINT(EM_DIAGRAM):   end;
1728402   +else do;
MPRINT(EM_DIAGRAM):   else do;
1728403   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1728404   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1728405   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1728406   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1728407   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1728408   +   end;
MPRINT(EM_DIAGRAM):   end;
1728409   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1728410   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1728411   +   end;
MPRINT(EM_DIAGRAM):   end;
1728412   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1728413   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1728414   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1728415   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1728416   +   end;
MPRINT(EM_DIAGRAM):   end;
1728417   +end;
MPRINT(EM_DIAGRAM):   end;
1728418   +
1728419   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1728420   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1728421   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1728422   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1728423   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1728424   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1728425   +end;
MPRINT(EM_DIAGRAM):   end;
1728426   +else do;
MPRINT(EM_DIAGRAM):   else do;
1728427   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1728428   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1728429   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1728430   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1728431   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1728432   +   end;
MPRINT(EM_DIAGRAM):   end;
1728433   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1728434   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1728435   +   end;
MPRINT(EM_DIAGRAM):   end;
1728436   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1728437   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1728438   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1728439   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1728440   +   end;
MPRINT(EM_DIAGRAM):   end;
1728441   +end;
MPRINT(EM_DIAGRAM):   end;
1728442   +
1728443   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1728444   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1728445   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1728446   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1728447   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1728448   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1728449   +end;
MPRINT(EM_DIAGRAM):   end;
1728450   +else do;
MPRINT(EM_DIAGRAM):   else do;
1728451   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1728452   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1728453   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1728454   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1728455   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1728456   +   end;
MPRINT(EM_DIAGRAM):   end;
1728457   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1728458   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1728459   +   end;
MPRINT(EM_DIAGRAM):   end;
1728460   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1728461   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1728462   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1728463   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1728464   +   end;
MPRINT(EM_DIAGRAM):   end;
1728465   +end;
MPRINT(EM_DIAGRAM):   end;
1728466   +
1728467   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1728468   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1728469   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1728470   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1728471   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1728472   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1728473   +end;
MPRINT(EM_DIAGRAM):   end;
1728474   +else do;
MPRINT(EM_DIAGRAM):   else do;
1728475   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1728476   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1728477   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1728478   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1728479   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1728480   +   end;
MPRINT(EM_DIAGRAM):   end;
1728481   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1728482   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1728483   +   end;
MPRINT(EM_DIAGRAM):   end;
1728484   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1728485   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1728486   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1728487   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1728488   +   end;
MPRINT(EM_DIAGRAM):   end;
1728489   +end;
MPRINT(EM_DIAGRAM):   end;
1728490   +
1728491   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1728492   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1728493   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1728494   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1728495   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1728496   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1728497   +end;
MPRINT(EM_DIAGRAM):   end;
1728498   +else do;
MPRINT(EM_DIAGRAM):   else do;
1728499   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1728500   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1728501   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1728502   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1728503   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1728504   +   end;
MPRINT(EM_DIAGRAM):   end;
1728505   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1728506   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1728507   +   end;
MPRINT(EM_DIAGRAM):   end;
1728508   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1728509   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1728510   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1728511   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1728512   +   end;
MPRINT(EM_DIAGRAM):   end;
1728513   +end;
MPRINT(EM_DIAGRAM):   end;
1728514   +
1728515   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1728516   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1728517   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1728518   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1728519   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1728520   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1728521   +end;
MPRINT(EM_DIAGRAM):   end;
1728522   +else do;
MPRINT(EM_DIAGRAM):   else do;
1728523   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1728524   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1728525   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1728526   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1728527   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1728528   +   end;
MPRINT(EM_DIAGRAM):   end;
1728529   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1728530   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1728531   +   end;
MPRINT(EM_DIAGRAM):   end;
1728532   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1728533   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1728534   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1728535   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1728536   +   end;
MPRINT(EM_DIAGRAM):   end;
1728537   +end;
MPRINT(EM_DIAGRAM):   end;
1728538   +
1728539   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1728540   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
1728541   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1728542   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1728543   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1728544   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1728545   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1728546   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1728547   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1728548   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1728549   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1728550   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1728551   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1728552   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1728553   +end;
MPRINT(EM_DIAGRAM):   end;
1728554   +else do;
MPRINT(EM_DIAGRAM):   else do;
1728555   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1728556   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1728557   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1728558   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1728559   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1728560   +   end;
MPRINT(EM_DIAGRAM):   end;
1728561   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1728562   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1728563   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1728564   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1728565   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1728566   +   end;
MPRINT(EM_DIAGRAM):   end;
1728567   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1728568   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1728569   +   end;
MPRINT(EM_DIAGRAM):   end;
1728570   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1728571   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1728572   +   end;
MPRINT(EM_DIAGRAM):   end;
1728573   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1728574   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1728575   +   end;
MPRINT(EM_DIAGRAM):   end;
1728576   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1728577   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1728578   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1728579   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1728580   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1728581   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1728582   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1728583   +   end;
MPRINT(EM_DIAGRAM):   end;
1728584   +end;
MPRINT(EM_DIAGRAM):   end;
1728585   +
1728586   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1728587   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1728588   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
1728589   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1728590   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1728591   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1728592   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1728593   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1728594   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1728595   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1728596   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1728597   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1728598   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1728599   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1728600   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1728601   +end;
MPRINT(EM_DIAGRAM):   end;
1728602   +else do;
MPRINT(EM_DIAGRAM):   else do;
1728603   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1728604   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1728605   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1728606   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1728607   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1728608   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1728609   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1728610   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1728611   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1728612   +         end;
MPRINT(EM_DIAGRAM):   end;
1728613   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1728614   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1728615   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1728616   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1728617   +            end;
MPRINT(EM_DIAGRAM):   end;
1728618   +         end;
MPRINT(EM_DIAGRAM):   end;
1728619   +      end;
MPRINT(EM_DIAGRAM):   end;
1728620   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1728621   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1728622   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1728623   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1728624   +         end;
MPRINT(EM_DIAGRAM):   end;
1728625   +      end;
MPRINT(EM_DIAGRAM):   end;
1728626   +   end;
MPRINT(EM_DIAGRAM):   end;
1728627   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1728628   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1728629   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1728630   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1728631   +      end;
MPRINT(EM_DIAGRAM):   end;
1728632   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1728633   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1728634   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1728635   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1728636   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1728637   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1728638   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1728639   +         end;
MPRINT(EM_DIAGRAM):   end;
1728640   +      end;
MPRINT(EM_DIAGRAM):   end;
1728641   +   end;
MPRINT(EM_DIAGRAM):   end;
1728642   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1728643   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1728644   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1728645   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1728646   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1728647   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1728648   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1728649   +   end;
MPRINT(EM_DIAGRAM):   end;
1728650   +end;
MPRINT(EM_DIAGRAM):   end;
1728651   +
1728652   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1728653   +*** Checking missing input Interval
1728654   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1728655   +
1728656   +IF NMISS(
1728657   +   AcceptedCmpTotal ,
1728658   +   Age ,
1728659   +   Frq ,
1728660   +   Income ,
1728661   +   Kidhome ,
1728662   +   Mnt ,
1728663   +   MntFishProducts ,
1728664   +   MntFruits ,
1728665   +   MntGoldProds ,
1728666   +   MntMeatProducts ,
1728667   +   MntSweetProducts ,
1728668   +   MntWines ,
1728669   +   MonthsAsCustomer ,
1728670   +   NumCatalogPurchases ,
1728671   +   NumDealsPurchases ,
1728672   +   NumDistPurchases ,
1728673   +   NumStorePurchases ,
1728674   +   NumWebPurchases ,
1728675   +   NumWebVisitsMonth ,
1728676   +   RFMstat ,
1728677   +   RMntFrq ,
1728678   +   Recency ,
1728679   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
1728680   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1728681   +
1728682   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1728683   +END;
MPRINT(EM_DIAGRAM):   END;
1728684   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1728685   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1728686   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1728687   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1728688   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1728689   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1728690   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1728691   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1728692   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1728693   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1728694   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1728695   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1728696   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1728697   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1728698   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1728699   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1728700   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1728701   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1728702   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1728703   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1728704   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1728705   +   S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
1728706   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 *
MonthsAsCustomer ;
1728707   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1728708   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1728709   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1728710   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1728711   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1728712   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1728713   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1728714   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1728715   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1728716   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1728717   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1728718   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1728719   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1728720   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1728721   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1728722   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1728723   +END;
MPRINT(EM_DIAGRAM):   END;
1728724   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1728725   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1728726   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1728727   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1728728   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1728729   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1728730   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1728731   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1728732   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1728733   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1728734   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1728735   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1728736   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1728737   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1728738   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1728739   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1728740   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1728741   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1728742   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1728743   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1728744   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1728745   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1728746   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
1728747   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1728748   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1728749   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1728750   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1728751   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1728752   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1728753   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1728754   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1728755   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1728756   +   ELSE S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
1728757   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 *
MonthsAsCustomer ;
1728758   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1728759   +   ELSE S_NumCatalogPurchases
1728760   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1728761   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1728762   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1728763   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1728764   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1728765   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1728766   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1728767   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1728768   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1728769   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1728770   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1728771   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1728772   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1728773   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1728774   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1728775   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1728776   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1728777   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1728778   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1728779   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1728780   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1728781   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1728782   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1728783   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1728784   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1728785   +END;
MPRINT(EM_DIAGRAM):   END;
1728786   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1728787   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1728788   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1728789   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1728790   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1728791   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1728792   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1728793   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1728794   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1728795   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1728796   +   H11  =     0.13561897368917 * S_AcceptedCmpTotal  +    -0.32772545836794 *
1728797   +        S_Age  +    -0.38398034861903 * S_Frq  +    -0.26977539373888 *
1728798   +        S_Income  +    -0.14142658616971 * S_Kidhome
1728799   +          +      0.0989055198532 * S_Mnt  +    -0.02522005306968 *
1728800   +        S_MntFishProducts  +    -0.12344455762016 * S_MntFruits
1728801   +          +     0.06422500584481 * S_MntGoldProds  +     1.06758158504307 *
1728802   +        S_MntMeatProducts  +    -0.23902734890811 * S_MntSweetProducts
1728803   +          +    -0.30623759563522 * S_MntWines  +    -0.00016362973479 *
1728804   +        S_MonthsAsCustomer  +     0.55545319032721 * S_NumCatalogPurchases
1728805   +          +     0.96837841774168 * S_NumDealsPurchases
1728806   +          +      0.2846105381881 * S_NumDistPurchases
1728807   +          +    -0.69514041792943 * S_NumStorePurchases
1728808   +          +    -0.96425407351749 * S_NumWebPurchases
1728809   +          +     0.79545449599683 * S_NumWebVisitsMonth
1728810   +          +     0.49367889229155 * S_RFMstat  +     -0.0709743399293 *
1728811   +        S_RMntFrq  +    -0.86057075960565 * S_Recency
1728812   +          +     0.14939396415431 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.13561897368917 * S_AcceptedCmpTotal + -0.32772545836794 * S_Age
+ -0.38398034861903 * S_Frq + -0.26977539373888 * S_Income + -0.14142658616971 * S_Kidhome +
0.0989055198532 * S_Mnt + -0.02522005306968 * S_MntFishProducts + -0.12344455762016 *
S_MntFruits + 0.06422500584481 * S_MntGoldProds + 1.06758158504307 * S_MntMeatProducts +
-0.23902734890811 * S_MntSweetProducts + -0.30623759563522 * S_MntWines + -0.00016362973479 *
S_MonthsAsCustomer + 0.55545319032721 * S_NumCatalogPurchases + 0.96837841774168 *
S_NumDealsPurchases + 0.2846105381881 * S_NumDistPurchases + -0.69514041792943 *
S_NumStorePurchases + -0.96425407351749 * S_NumWebPurchases + 0.79545449599683 *
S_NumWebVisitsMonth + 0.49367889229155 * S_RFMstat + -0.0709743399293 * S_RMntFrq +
-0.86057075960565 * S_Recency + 0.14939396415431 * S_Teenhome ;
1728813   +   H12  =     0.62153817830372 * S_AcceptedCmpTotal  +     0.11000838320023 *
1728814   +        S_Age  +    -0.43905714814627 * S_Frq  +      0.4627921513743 *
1728815   +        S_Income  +    -0.55432195959203 * S_Kidhome
1728816   +          +    -0.20868947702573 * S_Mnt  +    -0.04791610917449 *
1728817   +        S_MntFishProducts  +    -0.18250759820717 * S_MntFruits
1728818   +          +    -0.04325930692478 * S_MntGoldProds  +     0.58323535101492 *
1728819   +        S_MntMeatProducts  +     0.04921270742083 * S_MntSweetProducts
1728820   +          +    -0.39974265327363 * S_MntWines  +    -0.05607601548004 *
1728821   +        S_MonthsAsCustomer  +      0.3012811961076 * S_NumCatalogPurchases
1728822   +          +      0.2190184330724 * S_NumDealsPurchases
1728823   +          +    -0.01682909442896 * S_NumDistPurchases
1728824   +          +    -0.70244951048552 * S_NumStorePurchases
1728825   +          +     -0.3057457659316 * S_NumWebPurchases
1728826   +          +     0.95928538762715 * S_NumWebVisitsMonth
1728827   +          +     0.05894343416718 * S_RFMstat  +    -0.10056410044429 *
1728828   +        S_RMntFrq  +     -0.8406665241206 * S_Recency
1728829   +          +    -0.35297412201687 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = 0.62153817830372 * S_AcceptedCmpTotal + 0.11000838320023 * S_Age +
-0.43905714814627 * S_Frq + 0.4627921513743 * S_Income + -0.55432195959203 * S_Kidhome +
-0.20868947702573 * S_Mnt + -0.04791610917449 * S_MntFishProducts + -0.18250759820717 *
S_MntFruits + -0.04325930692478 * S_MntGoldProds + 0.58323535101492 * S_MntMeatProducts +
0.04921270742083 * S_MntSweetProducts + -0.39974265327363 * S_MntWines + -0.05607601548004 *
S_MonthsAsCustomer + 0.3012811961076 * S_NumCatalogPurchases + 0.2190184330724 *
S_NumDealsPurchases + -0.01682909442896 * S_NumDistPurchases + -0.70244951048552 *
S_NumStorePurchases + -0.3057457659316 * S_NumWebPurchases + 0.95928538762715 *
S_NumWebVisitsMonth + 0.05894343416718 * S_RFMstat + -0.10056410044429 * S_RMntFrq +
-0.8406665241206 * S_Recency + -0.35297412201687 * S_Teenhome ;
1728830   +   H13  =     0.06733651290741 * S_AcceptedCmpTotal  +    -0.40242244330352 *
1728831   +        S_Age  +     0.00779419067769 * S_Frq  +    -0.39275723422465 *
1728832   +        S_Income  +    -0.06354861159882 * S_Kidhome
1728833   +          +     -0.0526962194301 * S_Mnt  +     0.22795791930382 *
1728834   +        S_MntFishProducts  +       0.155952558453 * S_MntFruits
1728835   +          +    -0.05338294725533 * S_MntGoldProds  +     0.27696958404211 *
1728836   +        S_MntMeatProducts  +     0.45382327602276 * S_MntSweetProducts
1728837   +          +     0.08944669240843 * S_MntWines  +     0.05073400334181 *
1728838   +        S_MonthsAsCustomer  +    -0.21502812614453 * S_NumCatalogPurchases
1728839   +          +    -0.21394230159696 * S_NumDealsPurchases
1728840   +          +    -0.23833771124663 * S_NumDistPurchases
1728841   +          +     0.45832031017813 * S_NumStorePurchases
1728842   +          +    -0.30226952040179 * S_NumWebPurchases
1728843   +          +    -0.29796387184481 * S_NumWebVisitsMonth
1728844   +          +    -0.47457772771567 * S_RFMstat  +     0.02623437469504 *
1728845   +        S_RMntFrq  +     0.87067423045258 * S_Recency
1728846   +          +    -0.04579179879137 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = 0.06733651290741 * S_AcceptedCmpTotal + -0.40242244330352 * S_Age
+ 0.00779419067769 * S_Frq + -0.39275723422465 * S_Income + -0.06354861159882 * S_Kidhome +
-0.0526962194301 * S_Mnt + 0.22795791930382 * S_MntFishProducts + 0.155952558453 * S_MntFruits
+ -0.05338294725533 * S_MntGoldProds + 0.27696958404211 * S_MntMeatProducts + 0.45382327602276
* S_MntSweetProducts + 0.08944669240843 * S_MntWines + 0.05073400334181 * S_MonthsAsCustomer +
-0.21502812614453 * S_NumCatalogPurchases + -0.21394230159696 * S_NumDealsPurchases +
-0.23833771124663 * S_NumDistPurchases + 0.45832031017813 * S_NumStorePurchases +
-0.30226952040179 * S_NumWebPurchases + -0.29796387184481 * S_NumWebVisitsMonth +
-0.47457772771567 * S_RFMstat + 0.02623437469504 * S_RMntFrq + 0.87067423045258 * S_Recency +
-0.04579179879137 * S_Teenhome ;
1728847   +   H14  =      0.0100821240579 * S_AcceptedCmpTotal  +     0.06650171037949 *
1728848   +        S_Age  +     0.07437437345976 * S_Frq  +    -0.60858783914323 *
1728849   +        S_Income  +    -0.04839586846715 * S_Kidhome
1728850   +          +      0.0498689835853 * S_Mnt  +    -0.19232042751963 *
1728851   +        S_MntFishProducts  +     -0.0934621532732 * S_MntFruits
1728852   +          +    -0.23123184317801 * S_MntGoldProds  +    -0.73001093719713 *
1728853   +        S_MntMeatProducts  +    -0.00941386350496 * S_MntSweetProducts
1728854   +          +     0.53093647457485 * S_MntWines  +     0.25999444904416 *
1728855   +        S_MonthsAsCustomer  +    -0.64356932247243 * S_NumCatalogPurchases
1728856   +          +    -0.43749647771198 * S_NumDealsPurchases
1728857   +          +     0.21263473847472 * S_NumDistPurchases
1728858   +          +     0.26102168039141 * S_NumStorePurchases
1728859   +          +     0.54921725943657 * S_NumWebPurchases
1728860   +          +    -0.75685843498122 * S_NumWebVisitsMonth
1728861   +          +     0.27936321897064 * S_RFMstat  +    -0.02993148267083 *
1728862   +        S_RMntFrq  +     0.80536256822347 * S_Recency
1728863   +          +     0.29599728227233 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = 0.0100821240579 * S_AcceptedCmpTotal + 0.06650171037949 * S_Age +
0.07437437345976 * S_Frq + -0.60858783914323 * S_Income + -0.04839586846715 * S_Kidhome +
0.0498689835853 * S_Mnt + -0.19232042751963 * S_MntFishProducts + -0.0934621532732 *
S_MntFruits + -0.23123184317801 * S_MntGoldProds + -0.73001093719713 * S_MntMeatProducts +
-0.00941386350496 * S_MntSweetProducts + 0.53093647457485 * S_MntWines + 0.25999444904416 *
S_MonthsAsCustomer + -0.64356932247243 * S_NumCatalogPurchases + -0.43749647771198 *
S_NumDealsPurchases + 0.21263473847472 * S_NumDistPurchases + 0.26102168039141 *
S_NumStorePurchases + 0.54921725943657 * S_NumWebPurchases + -0.75685843498122 *
S_NumWebVisitsMonth + 0.27936321897064 * S_RFMstat + -0.02993148267083 * S_RMntFrq +
0.80536256822347 * S_Recency + 0.29599728227233 * S_Teenhome ;
1728864   +   H15  =    -0.08671490381299 * S_AcceptedCmpTotal  +     0.06582961248691 *
1728865   +        S_Age  +    -0.31028674605164 * S_Frq  +    -0.75498700429145 *
1728866   +        S_Income  +     0.71499527198653 * S_Kidhome
1728867   +          +    -0.09511483339215 * S_Mnt  +     0.12995766208562 *
1728868   +        S_MntFishProducts  +     0.03365861966415 * S_MntFruits
1728869   +          +     0.10989750322838 * S_MntGoldProds  +     -0.5915075857888 *
1728870   +        S_MntMeatProducts  +     0.06560450377445 * S_MntSweetProducts
1728871   +          +     0.21362770075701 * S_MntWines  +    -0.09939364366816 *
1728872   +        S_MonthsAsCustomer  +    -0.61410179474601 * S_NumCatalogPurchases
1728873   +          +     0.09436067776126 * S_NumDealsPurchases
1728874   +          +    -0.02824201859641 * S_NumDistPurchases
1728875   +          +    -0.06770433780564 * S_NumStorePurchases
1728876   +          +    -0.07177620319715 * S_NumWebPurchases
1728877   +          +    -0.75589979685266 * S_NumWebVisitsMonth
1728878   +          +    -0.03604464190626 * S_RFMstat  +     0.17925089667944 *
1728879   +        S_RMntFrq  +     0.94408788011429 * S_Recency
1728880   +          +     0.41530214227619 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H15 = -0.08671490381299 * S_AcceptedCmpTotal + 0.06582961248691 * S_Age
+ -0.31028674605164 * S_Frq + -0.75498700429145 * S_Income + 0.71499527198653 * S_Kidhome +
-0.09511483339215 * S_Mnt + 0.12995766208562 * S_MntFishProducts + 0.03365861966415 *
S_MntFruits + 0.10989750322838 * S_MntGoldProds + -0.5915075857888 * S_MntMeatProducts +
0.06560450377445 * S_MntSweetProducts + 0.21362770075701 * S_MntWines + -0.09939364366816 *
S_MonthsAsCustomer + -0.61410179474601 * S_NumCatalogPurchases + 0.09436067776126 *
S_NumDealsPurchases + -0.02824201859641 * S_NumDistPurchases + -0.06770433780564 *
S_NumStorePurchases + -0.07177620319715 * S_NumWebPurchases + -0.75589979685266 *
S_NumWebVisitsMonth + -0.03604464190626 * S_RFMstat + 0.17925089667944 * S_RMntFrq +
0.94408788011429 * S_Recency + 0.41530214227619 * S_Teenhome ;
1728881   +   H16  =    -0.39917411634723 * S_AcceptedCmpTotal  +     0.03925725158826 *
1728882   +        S_Age  +    -0.41370994963942 * S_Frq  +    -0.42480967809347 *
1728883   +        S_Income  +    -0.63474522042341 * S_Kidhome
1728884   +          +    -0.26213982180471 * S_Mnt  +     0.18685818695791 *
1728885   +        S_MntFishProducts  +     0.04605858526078 * S_MntFruits
1728886   +          +    -0.16330204827669 * S_MntGoldProds  +    -0.29864450244187 *
1728887   +        S_MntMeatProducts  +     -0.1818801035467 * S_MntSweetProducts
1728888   +          +    -0.01848203970119 * S_MntWines  +    -0.38039400989409 *
1728889   +        S_MonthsAsCustomer  +     -0.7050267965821 * S_NumCatalogPurchases
1728890   +          +    -0.51154511343396 * S_NumDealsPurchases
1728891   +          +    -0.52422915823572 * S_NumDistPurchases
1728892   +          +     0.30305498422357 * S_NumStorePurchases
1728893   +          +     0.12197321559338 * S_NumWebPurchases
1728894   +          +    -0.10520335422769 * S_NumWebVisitsMonth
1728895   +          +    -0.08455403770298 * S_RFMstat  +     -0.0746666450533 *
1728896   +        S_RMntFrq  +    -0.01666787115039 * S_Recency
1728897   +          +     -0.0878584797536 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H16 = -0.39917411634723 * S_AcceptedCmpTotal + 0.03925725158826 * S_Age
+ -0.41370994963942 * S_Frq + -0.42480967809347 * S_Income + -0.63474522042341 * S_Kidhome +
-0.26213982180471 * S_Mnt + 0.18685818695791 * S_MntFishProducts + 0.04605858526078 *
S_MntFruits + -0.16330204827669 * S_MntGoldProds + -0.29864450244187 * S_MntMeatProducts +
-0.1818801035467 * S_MntSweetProducts + -0.01848203970119 * S_MntWines + -0.38039400989409 *
S_MonthsAsCustomer + -0.7050267965821 * S_NumCatalogPurchases + -0.51154511343396 *
S_NumDealsPurchases + -0.52422915823572 * S_NumDistPurchases + 0.30305498422357 *
S_NumStorePurchases + 0.12197321559338 * S_NumWebPurchases + -0.10520335422769 *
S_NumWebVisitsMonth + -0.08455403770298 * S_RFMstat + -0.0746666450533 * S_RMntFrq +
-0.01666787115039 * S_Recency + -0.0878584797536 * S_Teenhome ;
1728898   +   H11  = H11  +    -0.90961987146896 * AcceptedCmp10
1728899   +          +    -0.43883226747411 * AcceptedCmp20  +    -0.33111359726838 *
1728900   +        AcceptedCmp30  +    -0.56836514169806 * AcceptedCmp40
1728901   +          +    -0.35293284248651 * AcceptedCmp50  +    -0.21637194677498 *
1728902   +        Complain0  +     0.04763871212094 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.90961987146896 * AcceptedCmp10 + -0.43883226747411 *
AcceptedCmp20 + -0.33111359726838 * AcceptedCmp30 + -0.56836514169806 * AcceptedCmp40 +
-0.35293284248651 * AcceptedCmp50 + -0.21637194677498 * Complain0 + 0.04763871212094 *
HigherEducationBinary0 ;
1728903   +   H12  = H12  +     -0.1030990687939 * AcceptedCmp10
1728904   +          +     0.00122242086508 * AcceptedCmp20  +    -0.20164062706951 *
1728905   +        AcceptedCmp30  +    -0.18080173131042 * AcceptedCmp40
1728906   +          +    -0.29605640354834 * AcceptedCmp50  +     0.05316734050672 *
1728907   +        Complain0  +     0.03310322649598 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.1030990687939 * AcceptedCmp10 + 0.00122242086508 *
AcceptedCmp20 + -0.20164062706951 * AcceptedCmp30 + -0.18080173131042 * AcceptedCmp40 +
-0.29605640354834 * AcceptedCmp50 + 0.05316734050672 * Complain0 + 0.03310322649598 *
HigherEducationBinary0 ;
1728908   +   H13  = H13  +     0.19903845466874 * AcceptedCmp10
1728909   +          +     0.05770332479555 * AcceptedCmp20  +     0.18259425424285 *
1728910   +        AcceptedCmp30  +     -0.1972581314722 * AcceptedCmp40
1728911   +          +     0.07810166818705 * AcceptedCmp50  +      0.0588314244014 *
1728912   +        Complain0  +     0.52386444165611 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.19903845466874 * AcceptedCmp10 + 0.05770332479555 *
AcceptedCmp20 + 0.18259425424285 * AcceptedCmp30 + -0.1972581314722 * AcceptedCmp40 +
0.07810166818705 * AcceptedCmp50 + 0.0588314244014 * Complain0 + 0.52386444165611 *
HigherEducationBinary0 ;
1728913   +   H14  = H14  +    -0.25712989150916 * AcceptedCmp10
1728914   +          +     0.10002773433896 * AcceptedCmp20  +     0.22713279091354 *
1728915   +        AcceptedCmp30  +     -0.3908577443881 * AcceptedCmp40
1728916   +          +     0.26942267903717 * AcceptedCmp50  +    -0.06022694623669 *
1728917   +        Complain0  +     0.05521579061999 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.25712989150916 * AcceptedCmp10 + 0.10002773433896 *
AcceptedCmp20 + 0.22713279091354 * AcceptedCmp30 + -0.3908577443881 * AcceptedCmp40 +
0.26942267903717 * AcceptedCmp50 + -0.06022694623669 * Complain0 + 0.05521579061999 *
HigherEducationBinary0 ;
1728918   +   H15  = H15  +     0.38919159206493 * AcceptedCmp10
1728919   +          +     0.58837620734384 * AcceptedCmp20  +     0.43219005719576 *
1728920   +        AcceptedCmp30  +     0.44013713415724 * AcceptedCmp40
1728921   +          +     0.21616210575893 * AcceptedCmp50  +     0.22563135687374 *
1728922   +        Complain0  +    -0.26680262675523 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.38919159206493 * AcceptedCmp10 + 0.58837620734384 *
AcceptedCmp20 + 0.43219005719576 * AcceptedCmp30 + 0.44013713415724 * AcceptedCmp40 +
0.21616210575893 * AcceptedCmp50 + 0.22563135687374 * Complain0 + -0.26680262675523 *
HigherEducationBinary0 ;
1728923   +   H16  = H16  +     0.20851064493691 * AcceptedCmp10
1728924   +          +     0.04947084224566 * AcceptedCmp20  +     0.13383157945653 *
1728925   +        AcceptedCmp30  +    -0.04649385360034 * AcceptedCmp40
1728926   +          +     0.22456192437835 * AcceptedCmp50  +     0.09861465204268 *
1728927   +        Complain0  +     0.52759393238257 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.20851064493691 * AcceptedCmp10 + 0.04947084224566 *
AcceptedCmp20 + 0.13383157945653 * AcceptedCmp30 + -0.04649385360034 * AcceptedCmp40 +
0.22456192437835 * AcceptedCmp50 + 0.09861465204268 * Complain0 + 0.52759393238257 *
HigherEducationBinary0 ;
1728928   +   H11  = H11  +    -0.17149044990916 * Education2n_Cycle
1728929   +          +    -0.10901150601282 * EducationBasic  +     0.08956382506778 *
1728930   +        EducationGraduation  +    -0.02263887301789 * EducationMaster
1728931   +          +     0.10234616400375 * Marital_StatusDivorced
1728932   +          +     0.27961650739075 * Marital_StatusMarried
1728933   +          +    -0.40239488723767 * Marital_StatusSingle
1728934   +          +     0.08313574864343 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.17149044990916 * Education2n_Cycle + -0.10901150601282 *
EducationBasic + 0.08956382506778 * EducationGraduation + -0.02263887301789 * EducationMaster
+ 0.10234616400375 * Marital_StatusDivorced + 0.27961650739075 * Marital_StatusMarried +
-0.40239488723767 * Marital_StatusSingle + 0.08313574864343 * Marital_StatusTogether ;
1728935   +   H12  = H12  +     0.05425155386264 * Education2n_Cycle
1728936   +          +    -0.29410781678759 * EducationBasic  +     0.23986214400803 *
1728937   +        EducationGraduation  +    -0.14831422332134 * EducationMaster
1728938   +          +     0.46385792428023 * Marital_StatusDivorced
1728939   +          +    -0.62344590646391 * Marital_StatusMarried
1728940   +          +     0.61767209252062 * Marital_StatusSingle
1728941   +          +    -0.48335726597768 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.05425155386264 * Education2n_Cycle + -0.29410781678759 *
EducationBasic + 0.23986214400803 * EducationGraduation + -0.14831422332134 * EducationMaster
+ 0.46385792428023 * Marital_StatusDivorced + -0.62344590646391 * Marital_StatusMarried +
0.61767209252062 * Marital_StatusSingle + -0.48335726597768 * Marital_StatusTogether ;
1728942   +   H13  = H13  +     0.02436261022421 * Education2n_Cycle
1728943   +          +     0.25859718044561 * EducationBasic  +    -0.27291277319608 *
1728944   +        EducationGraduation  +    -0.08922741430112 * EducationMaster
1728945   +          +    -0.07839612590836 * Marital_StatusDivorced
1728946   +          +     0.35316864062221 * Marital_StatusMarried
1728947   +          +    -0.10730136429834 * Marital_StatusSingle
1728948   +          +     0.17593603209099 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.02436261022421 * Education2n_Cycle + 0.25859718044561 *
EducationBasic + -0.27291277319608 * EducationGraduation + -0.08922741430112 * EducationMaster
+ -0.07839612590836 * Marital_StatusDivorced + 0.35316864062221 * Marital_StatusMarried +
-0.10730136429834 * Marital_StatusSingle + 0.17593603209099 * Marital_StatusTogether ;
1728949   +   H14  = H14  +    -0.24964520343799 * Education2n_Cycle
1728950   +          +    -0.01893498177516 * EducationBasic  +     0.15063494078927 *
1728951   +        EducationGraduation  +     -0.0741586921665 * EducationMaster
1728952   +          +    -0.09942175269886 * Marital_StatusDivorced
1728953   +          +     0.24385460865335 * Marital_StatusMarried
1728954   +          +    -0.33658955096296 * Marital_StatusSingle
1728955   +          +     0.56050963700382 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.24964520343799 * Education2n_Cycle + -0.01893498177516 *
EducationBasic + 0.15063494078927 * EducationGraduation + -0.0741586921665 * EducationMaster +
-0.09942175269886 * Marital_StatusDivorced + 0.24385460865335 * Marital_StatusMarried +
-0.33658955096296 * Marital_StatusSingle + 0.56050963700382 * Marital_StatusTogether ;
1728956   +   H15  = H15  +     0.01382474147934 * Education2n_Cycle
1728957   +          +    -0.45490268571245 * EducationBasic  +     0.16592751946825 *
1728958   +        EducationGraduation  +     0.37352174719748 * EducationMaster
1728959   +          +    -0.08047852561096 * Marital_StatusDivorced
1728960   +          +     1.16485862694561 * Marital_StatusMarried
1728961   +          +    -0.94140251178566 * Marital_StatusSingle
1728962   +          +     0.70332254595446 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.01382474147934 * Education2n_Cycle + -0.45490268571245 *
EducationBasic + 0.16592751946825 * EducationGraduation + 0.37352174719748 * EducationMaster +
-0.08047852561096 * Marital_StatusDivorced + 1.16485862694561 * Marital_StatusMarried +
-0.94140251178566 * Marital_StatusSingle + 0.70332254595446 * Marital_StatusTogether ;
1728963   +   H16  = H16  +    -0.23552122269934 * Education2n_Cycle
1728964   +          +    -0.24160689278663 * EducationBasic  +    -0.15570122212206 *
1728965   +        EducationGraduation  +    -0.17067956037934 * EducationMaster
1728966   +          +    -0.16621963893391 * Marital_StatusDivorced
1728967   +          +    -0.44542186297324 * Marital_StatusMarried
1728968   +          +     0.42176133228308 * Marital_StatusSingle
1728969   +          +     -0.3191529098756 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H16 = H16 + -0.23552122269934 * Education2n_Cycle + -0.24160689278663 *
EducationBasic + -0.15570122212206 * EducationGraduation + -0.17067956037934 * EducationMaster
+ -0.16621963893391 * Marital_StatusDivorced + -0.44542186297324 * Marital_StatusMarried +
0.42176133228308 * Marital_StatusSingle + -0.3191529098756 * Marital_StatusTogether ;
1728970   +   H11  =    -0.08072695414295 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -0.08072695414295 + H11 ;
1728971   +   H12  =     0.35226882164117 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.35226882164117 + H12 ;
1728972   +   H13  =    -1.39195207519632 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -1.39195207519632 + H13 ;
1728973   +   H14  =     1.37641938752783 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 1.37641938752783 + H14 ;
1728974   +   H15  =     0.91842694601067 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = 0.91842694601067 + H15 ;
1728975   +   H16  =     -2.0930022603803 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = -2.0930022603803 + H16 ;
1728976   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1728977   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1728978   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1728979   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1728980   +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
1728981   +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
1728982   +END;
MPRINT(EM_DIAGRAM):   END;
1728983   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1728984   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1728985   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1728986   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1728987   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1728988   +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
1728989   +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
1728990   +END;
MPRINT(EM_DIAGRAM):   END;
1728991   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1728992   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1728993   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1728994   +
1728995   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1728996   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1728997   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1728998   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1728999   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1729000   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1729001   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1729002   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1729003   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1729004   +end;
MPRINT(EM_DIAGRAM):   end;
1729005   +else do;
MPRINT(EM_DIAGRAM):   else do;
1729006   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1729007   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1729008   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1729009   +   end;
MPRINT(EM_DIAGRAM):   end;
1729010   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1729011   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1729012   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1729013   +   end;
MPRINT(EM_DIAGRAM):   end;
1729014   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1729015   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1729016   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1729017   +   end;
MPRINT(EM_DIAGRAM):   end;
1729018   +end;
MPRINT(EM_DIAGRAM):   end;
1729019   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1729020   +   P_DepVar1  =     2.03370101048476 * H11  +     2.66531855617884 * H12
1729021   +          +    -1.85942573260565 * H13  +    -1.90574749832357 * H14
1729022   +          +    -3.11388767967909 * H15  +    -2.20829136620638 * H16 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 2.03370101048476 * H11 + 2.66531855617884 * H12 +
-1.85942573260565 * H13 + -1.90574749832357 * H14 + -3.11388767967909 * H15 +
-2.20829136620638 * H16 ;
1729023   +   P_DepVar1  =    -2.07329738382548 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.07329738382548 + P_DepVar1 ;
1729024   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1729025   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1729026   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1729027   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1729028   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1729029   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1729030   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1729031   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1729032   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1729033   +END;
MPRINT(EM_DIAGRAM):   END;
1729034   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1729035   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1729036   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1729037   +END;
MPRINT(EM_DIAGRAM):   END;
1729038   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1729039   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1729040   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1729041   +END;
MPRINT(EM_DIAGRAM):   END;
1729042   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1729043   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1729044   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1729045   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1729046   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1729047   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1729048   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1729049   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1729050   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1729051   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1729052   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1729053   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1729054   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1729055   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1729056   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1729057   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1729058   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1729059   +END;
MPRINT(EM_DIAGRAM):   END;
1729060   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1729061   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1729062   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1729063   +drop
1729064   +H11
1729065   +H12
1729066   +H13
1729067   +H14
1729068   +H15
1729069   +H16
1729070   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 ;
1729071   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1729072   +* Renaming variables for Neural9;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural9;
1729073   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1729074   +* Renaming Posterior variables for Neural9;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural9;
1729075   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1729076   +drop Neural9_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural9_P_DepVar1;
1729077   +Neural9_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural9_P_DepVar1 = P_DepVar1;
1729078   +drop Neural9_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural9_P_DepVar0;
1729079   +Neural9_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural9_P_DepVar0 = P_DepVar0;
1729080   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1729081   +* Renaming Into variables for Neural9;
MPRINT(EM_DIAGRAM):   * Renaming Into variables for Neural9;
1729082   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1729083   +length Neural9_I_DepVar $32;
MPRINT(EM_DIAGRAM):   length Neural9_I_DepVar $32;
1729084   +drop Neural9_I_DepVar;
MPRINT(EM_DIAGRAM):   drop Neural9_I_DepVar;
1729085   +Neural9_I_DepVar = I_DepVar;
MPRINT(EM_DIAGRAM):   Neural9_I_DepVar = I_DepVar;
1729086   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1729087   +* Renaming _WARN_ variable for Neural9;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural9;
1729088   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1729089   +length Neural9_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural9_WARN_ $4;
1729090   +drop Neural9_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural9_WARN_;
1729091   +Neural9_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural9_WARN_ = _WARN_;
1729092   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1729093   +* Ensmbl30: Scoring Code of model 2 of 3;
MPRINT(EM_DIAGRAM):   * Ensmbl30: Scoring Code of model 2 of 3;
1729094   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1729095   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1729096   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
1729097   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1729098   +* NODE: Neural3;
MPRINT(EM_DIAGRAM):   * NODE: Neural3;
1729099   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1729100   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1729101   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1729102   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1729103   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1729104   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1729105   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1729106   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1729107   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1729108   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1729109   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1729110   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1729111   +LENGTH _WARN_ $4
1729112   +      F_DepVar  $ 12
1729113   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1729114   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1729115   +
1729116   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1729117   +
1729118   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1729119   +
1729120   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1729121   +
1729122   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1729123   +
1729124   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1729125   +
1729126   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1729127   +
1729128   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1729129   +
1729130   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1729131   +
1729132   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1729133   +
1729134   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1729135   +
1729136   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1729137   +
1729138   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1729139   +
1729140   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1729141   +
1729142   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1729143   +
1729144   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1729145   +
1729146   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1729147   +
1729148   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1729149   +
1729150   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1729151   +
1729152   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1729153   +
1729154   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1729155   +
1729156   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1729157   +
1729158   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1729159   +
1729160   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1729161   +
1729162   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1729163   +
1729164   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1729165   +
1729166   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1729167   +
1729168   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1729169   +
1729170   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1729171   +
1729172   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1729173   +
1729174   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1729175   +
1729176   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1729177   +
1729178   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1729179   +
1729180   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1729181   +
1729182   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1729183   +
1729184   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1729185   +
1729186   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1729187   +
1729188   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1729189   +
1729190   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1729191   +
1729192   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1729193   +
1729194   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1729195   +
1729196   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1729197   +
1729198   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1729199   +
1729200   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1729201   +
1729202   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1729203   +
1729204   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1729205   +
1729206   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1729207   +
1729208   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1729209   +
1729210   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1729211   +
1729212   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1729213   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1729214   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1729215   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1729216   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1729217   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1729218   +end;
MPRINT(EM_DIAGRAM):   end;
1729219   +else do;
MPRINT(EM_DIAGRAM):   else do;
1729220   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1729221   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1729222   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1729223   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1729224   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1729225   +   end;
MPRINT(EM_DIAGRAM):   end;
1729226   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1729227   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1729228   +   end;
MPRINT(EM_DIAGRAM):   end;
1729229   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1729230   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1729231   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1729232   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1729233   +   end;
MPRINT(EM_DIAGRAM):   end;
1729234   +end;
MPRINT(EM_DIAGRAM):   end;
1729235   +
1729236   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1729237   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1729238   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1729239   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1729240   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1729241   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1729242   +end;
MPRINT(EM_DIAGRAM):   end;
1729243   +else do;
MPRINT(EM_DIAGRAM):   else do;
1729244   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1729245   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1729246   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1729247   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1729248   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1729249   +   end;
MPRINT(EM_DIAGRAM):   end;
1729250   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1729251   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1729252   +   end;
MPRINT(EM_DIAGRAM):   end;
1729253   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1729254   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1729255   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1729256   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1729257   +   end;
MPRINT(EM_DIAGRAM):   end;
1729258   +end;
MPRINT(EM_DIAGRAM):   end;
1729259   +
1729260   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1729261   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1729262   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1729263   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1729264   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1729265   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1729266   +end;
MPRINT(EM_DIAGRAM):   end;
1729267   +else do;
MPRINT(EM_DIAGRAM):   else do;
1729268   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1729269   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1729270   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1729271   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1729272   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1729273   +   end;
MPRINT(EM_DIAGRAM):   end;
1729274   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1729275   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1729276   +   end;
MPRINT(EM_DIAGRAM):   end;
1729277   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1729278   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1729279   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1729280   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1729281   +   end;
MPRINT(EM_DIAGRAM):   end;
1729282   +end;
MPRINT(EM_DIAGRAM):   end;
1729283   +
1729284   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1729285   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1729286   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1729287   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1729288   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1729289   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1729290   +end;
MPRINT(EM_DIAGRAM):   end;
1729291   +else do;
MPRINT(EM_DIAGRAM):   else do;
1729292   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1729293   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1729294   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1729295   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1729296   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1729297   +   end;
MPRINT(EM_DIAGRAM):   end;
1729298   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1729299   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1729300   +   end;
MPRINT(EM_DIAGRAM):   end;
1729301   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1729302   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1729303   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1729304   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1729305   +   end;
MPRINT(EM_DIAGRAM):   end;
1729306   +end;
MPRINT(EM_DIAGRAM):   end;
1729307   +
1729308   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1729309   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1729310   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1729311   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1729312   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1729313   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1729314   +end;
MPRINT(EM_DIAGRAM):   end;
1729315   +else do;
MPRINT(EM_DIAGRAM):   else do;
1729316   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1729317   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1729318   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1729319   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1729320   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1729321   +   end;
MPRINT(EM_DIAGRAM):   end;
1729322   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1729323   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1729324   +   end;
MPRINT(EM_DIAGRAM):   end;
1729325   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1729326   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1729327   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1729328   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1729329   +   end;
MPRINT(EM_DIAGRAM):   end;
1729330   +end;
MPRINT(EM_DIAGRAM):   end;
1729331   +
1729332   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1729333   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1729334   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1729335   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1729336   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1729337   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1729338   +end;
MPRINT(EM_DIAGRAM):   end;
1729339   +else do;
MPRINT(EM_DIAGRAM):   else do;
1729340   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1729341   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1729342   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1729343   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1729344   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1729345   +   end;
MPRINT(EM_DIAGRAM):   end;
1729346   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1729347   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1729348   +   end;
MPRINT(EM_DIAGRAM):   end;
1729349   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1729350   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1729351   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1729352   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1729353   +   end;
MPRINT(EM_DIAGRAM):   end;
1729354   +end;
MPRINT(EM_DIAGRAM):   end;
1729355   +
1729356   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1729357   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1729358   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1729359   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1729360   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1729361   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1729362   +end;
MPRINT(EM_DIAGRAM):   end;
1729363   +else do;
MPRINT(EM_DIAGRAM):   else do;
1729364   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1729365   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1729366   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1729367   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1729368   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1729369   +   end;
MPRINT(EM_DIAGRAM):   end;
1729370   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1729371   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1729372   +   end;
MPRINT(EM_DIAGRAM):   end;
1729373   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1729374   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1729375   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1729376   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1729377   +   end;
MPRINT(EM_DIAGRAM):   end;
1729378   +end;
MPRINT(EM_DIAGRAM):   end;
1729379   +
1729380   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1729381   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
1729382   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1729383   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1729384   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1729385   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1729386   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1729387   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1729388   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1729389   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1729390   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1729391   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1729392   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1729393   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1729394   +end;
MPRINT(EM_DIAGRAM):   end;
1729395   +else do;
MPRINT(EM_DIAGRAM):   else do;
1729396   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1729397   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1729398   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1729399   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1729400   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1729401   +   end;
MPRINT(EM_DIAGRAM):   end;
1729402   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1729403   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1729404   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1729405   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1729406   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1729407   +   end;
MPRINT(EM_DIAGRAM):   end;
1729408   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1729409   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1729410   +   end;
MPRINT(EM_DIAGRAM):   end;
1729411   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1729412   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1729413   +   end;
MPRINT(EM_DIAGRAM):   end;
1729414   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1729415   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1729416   +   end;
MPRINT(EM_DIAGRAM):   end;
1729417   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1729418   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1729419   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1729420   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1729421   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1729422   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1729423   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1729424   +   end;
MPRINT(EM_DIAGRAM):   end;
1729425   +end;
MPRINT(EM_DIAGRAM):   end;
1729426   +
1729427   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1729428   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1729429   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
1729430   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1729431   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1729432   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1729433   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1729434   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1729435   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1729436   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1729437   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1729438   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1729439   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1729440   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1729441   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1729442   +end;
MPRINT(EM_DIAGRAM):   end;
1729443   +else do;
MPRINT(EM_DIAGRAM):   else do;
1729444   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1729445   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1729446   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1729447   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1729448   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1729449   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1729450   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1729451   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1729452   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1729453   +         end;
MPRINT(EM_DIAGRAM):   end;
1729454   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1729455   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1729456   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1729457   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1729458   +            end;
MPRINT(EM_DIAGRAM):   end;
1729459   +         end;
MPRINT(EM_DIAGRAM):   end;
1729460   +      end;
MPRINT(EM_DIAGRAM):   end;
1729461   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1729462   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1729463   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1729464   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1729465   +         end;
MPRINT(EM_DIAGRAM):   end;
1729466   +      end;
MPRINT(EM_DIAGRAM):   end;
1729467   +   end;
MPRINT(EM_DIAGRAM):   end;
1729468   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1729469   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1729470   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1729471   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1729472   +      end;
MPRINT(EM_DIAGRAM):   end;
1729473   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1729474   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1729475   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1729476   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1729477   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1729478   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1729479   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1729480   +         end;
MPRINT(EM_DIAGRAM):   end;
1729481   +      end;
MPRINT(EM_DIAGRAM):   end;
1729482   +   end;
MPRINT(EM_DIAGRAM):   end;
1729483   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1729484   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1729485   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1729486   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1729487   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1729488   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1729489   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1729490   +   end;
MPRINT(EM_DIAGRAM):   end;
1729491   +end;
MPRINT(EM_DIAGRAM):   end;
1729492   +
1729493   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1729494   +*** Checking missing input Interval
1729495   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1729496   +
1729497   +IF NMISS(
1729498   +   AcceptedCmpTotal ,
1729499   +   Age ,
1729500   +   Frq ,
1729501   +   Income ,
1729502   +   Kidhome ,
1729503   +   Mnt ,
1729504   +   MntFishProducts ,
1729505   +   MntFruits ,
1729506   +   MntGoldProds ,
1729507   +   MntMeatProducts ,
1729508   +   MntSweetProducts ,
1729509   +   MntWines ,
1729510   +   MonthsAsCustomer ,
1729511   +   NumCatalogPurchases ,
1729512   +   NumDealsPurchases ,
1729513   +   NumDistPurchases ,
1729514   +   NumStorePurchases ,
1729515   +   NumWebPurchases ,
1729516   +   NumWebVisitsMonth ,
1729517   +   RFMstat ,
1729518   +   RMntFrq ,
1729519   +   Recency ,
1729520   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
1729521   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1729522   +
1729523   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1729524   +END;
MPRINT(EM_DIAGRAM):   END;
1729525   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1729526   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1729527   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1729528   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1729529   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1729530   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1729531   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1729532   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1729533   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1729534   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1729535   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1729536   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1729537   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1729538   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1729539   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1729540   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1729541   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1729542   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1729543   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1729544   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1729545   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1729546   +   S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
1729547   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 *
MonthsAsCustomer ;
1729548   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1729549   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1729550   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1729551   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1729552   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1729553   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1729554   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1729555   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1729556   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1729557   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1729558   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1729559   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1729560   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1729561   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1729562   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1729563   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1729564   +END;
MPRINT(EM_DIAGRAM):   END;
1729565   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1729566   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1729567   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1729568   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1729569   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1729570   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1729571   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1729572   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1729573   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1729574   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1729575   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1729576   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1729577   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1729578   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1729579   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1729580   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1729581   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1729582   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1729583   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1729584   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1729585   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1729586   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1729587   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
1729588   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1729589   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1729590   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1729591   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1729592   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1729593   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1729594   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1729595   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1729596   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1729597   +   ELSE S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
1729598   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 *
MonthsAsCustomer ;
1729599   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1729600   +   ELSE S_NumCatalogPurchases
1729601   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1729602   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1729603   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1729604   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1729605   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1729606   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1729607   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1729608   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1729609   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1729610   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1729611   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1729612   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1729613   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1729614   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1729615   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1729616   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1729617   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1729618   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1729619   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1729620   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1729621   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1729622   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1729623   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1729624   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1729625   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1729626   +END;
MPRINT(EM_DIAGRAM):   END;
1729627   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1729628   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1729629   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1729630   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1729631   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1729632   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1729633   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1729634   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1729635   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1729636   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1729637   +   H11  =     0.83781385787802 * S_AcceptedCmpTotal  +    -0.24139142678243 *
1729638   +        S_Age  +     0.06099821217041 * S_Frq  +     0.40208633787615 *
1729639   +        S_Income  +     0.51123266106809 * S_Kidhome
1729640   +          +    -0.16199331018171 * S_Mnt  +     0.01907816065296 *
1729641   +        S_MntFishProducts  +     -0.3821919957066 * S_MntFruits
1729642   +          +    -0.03370551533515 * S_MntGoldProds  +     1.07281355981991 *
1729643   +        S_MntMeatProducts  +    -0.13640457355292 * S_MntSweetProducts
1729644   +          +    -1.07230822345452 * S_MntWines  +      0.1487724512445 *
1729645   +        S_MonthsAsCustomer  +     1.00223132386414 * S_NumCatalogPurchases
1729646   +          +     1.34095732961105 * S_NumDealsPurchases
1729647   +          +     0.16605991333252 * S_NumDistPurchases
1729648   +          +    -0.61746267736536 * S_NumStorePurchases
1729649   +          +    -0.61812800689506 * S_NumWebPurchases
1729650   +          +     1.44649145055387 * S_NumWebVisitsMonth
1729651   +          +     0.71065354084884 * S_RFMstat  +     0.16160177747086 *
1729652   +        S_RMntFrq  +     -0.9427457293884 * S_Recency
1729653   +          +     0.02731657981524 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.83781385787802 * S_AcceptedCmpTotal + -0.24139142678243 * S_Age
+ 0.06099821217041 * S_Frq + 0.40208633787615 * S_Income + 0.51123266106809 * S_Kidhome +
-0.16199331018171 * S_Mnt + 0.01907816065296 * S_MntFishProducts + -0.3821919957066 *
S_MntFruits + -0.03370551533515 * S_MntGoldProds + 1.07281355981991 * S_MntMeatProducts +
-0.13640457355292 * S_MntSweetProducts + -1.07230822345452 * S_MntWines + 0.1487724512445 *
S_MonthsAsCustomer + 1.00223132386414 * S_NumCatalogPurchases + 1.34095732961105 *
S_NumDealsPurchases + 0.16605991333252 * S_NumDistPurchases + -0.61746267736536 *
S_NumStorePurchases + -0.61812800689506 * S_NumWebPurchases + 1.44649145055387 *
S_NumWebVisitsMonth + 0.71065354084884 * S_RFMstat + 0.16160177747086 * S_RMntFrq +
-0.9427457293884 * S_Recency + 0.02731657981524 * S_Teenhome ;
1729654   +   H12  =    -0.90907441149587 * S_AcceptedCmpTotal  +     -0.0457783940034 *
1729655   +        S_Age  +     0.27413524344715 * S_Frq  +    -0.43786159455637 *
1729656   +        S_Income  +     0.52295323651199 * S_Kidhome
1729657   +          +     0.16720640871174 * S_Mnt  +     0.90930001391122 *
1729658   +        S_MntFishProducts  +    -0.05099919369902 * S_MntFruits
1729659   +          +    -0.17081601037694 * S_MntGoldProds  +    -1.57312364500957 *
1729660   +        S_MntMeatProducts  +     -0.5081100411323 * S_MntSweetProducts
1729661   +          +     0.59764239237778 * S_MntWines  +     0.21825258246439 *
1729662   +        S_MonthsAsCustomer  +    -0.86944690807188 * S_NumCatalogPurchases
1729663   +          +    -0.72543332317832 * S_NumDealsPurchases
1729664   +          +    -0.05245472565117 * S_NumDistPurchases
1729665   +          +     1.00667431585298 * S_NumStorePurchases
1729666   +          +     1.02836701470962 * S_NumWebPurchases
1729667   +          +    -1.25666606219201 * S_NumWebVisitsMonth
1729668   +          +    -0.21335681545447 * S_RFMstat  +     0.10575177006447 *
1729669   +        S_RMntFrq  +     1.50910531484632 * S_Recency
1729670   +          +     0.35192762580497 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -0.90907441149587 * S_AcceptedCmpTotal + -0.0457783940034 * S_Age
+ 0.27413524344715 * S_Frq + -0.43786159455637 * S_Income + 0.52295323651199 * S_Kidhome +
0.16720640871174 * S_Mnt + 0.90930001391122 * S_MntFishProducts + -0.05099919369902 *
S_MntFruits + -0.17081601037694 * S_MntGoldProds + -1.57312364500957 * S_MntMeatProducts +
-0.5081100411323 * S_MntSweetProducts + 0.59764239237778 * S_MntWines + 0.21825258246439 *
S_MonthsAsCustomer + -0.86944690807188 * S_NumCatalogPurchases + -0.72543332317832 *
S_NumDealsPurchases + -0.05245472565117 * S_NumDistPurchases + 1.00667431585298 *
S_NumStorePurchases + 1.02836701470962 * S_NumWebPurchases + -1.25666606219201 *
S_NumWebVisitsMonth + -0.21335681545447 * S_RFMstat + 0.10575177006447 * S_RMntFrq +
1.50910531484632 * S_Recency + 0.35192762580497 * S_Teenhome ;
1729671   +   H13  =    -0.15164592837535 * S_AcceptedCmpTotal  +    -0.19703351726774 *
1729672   +        S_Age  +    -0.22367876273414 * S_Frq  +    -1.11408247891182 *
1729673   +        S_Income  +     0.58025720116696 * S_Kidhome
1729674   +          +     0.21614555339512 * S_Mnt  +    -0.15414755742285 *
1729675   +        S_MntFishProducts  +     0.16818356186813 * S_MntFruits
1729676   +          +     0.07314186249038 * S_MntGoldProds  +    -0.33939177015316 *
1729677   +        S_MntMeatProducts  +     0.29581112739013 * S_MntSweetProducts
1729678   +          +     0.30701920735867 * S_MntWines  +    -0.24397557348757 *
1729679   +        S_MonthsAsCustomer  +    -0.58962094283699 * S_NumCatalogPurchases
1729680   +          +     0.12670438262487 * S_NumDealsPurchases
1729681   +          +    -0.46113523834333 * S_NumDistPurchases
1729682   +          +     0.07074818720567 * S_NumStorePurchases
1729683   +          +    -0.05066645783537 * S_NumWebPurchases
1729684   +          +    -0.65729410185804 * S_NumWebVisitsMonth
1729685   +          +     0.08702511028701 * S_RFMstat  +    -0.39946503838688 *
1729686   +        S_RMntFrq  +      1.4337242246086 * S_Recency
1729687   +          +     0.88397808030072 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = -0.15164592837535 * S_AcceptedCmpTotal + -0.19703351726774 * S_Age
+ -0.22367876273414 * S_Frq + -1.11408247891182 * S_Income + 0.58025720116696 * S_Kidhome +
0.21614555339512 * S_Mnt + -0.15414755742285 * S_MntFishProducts + 0.16818356186813 *
S_MntFruits + 0.07314186249038 * S_MntGoldProds + -0.33939177015316 * S_MntMeatProducts +
0.29581112739013 * S_MntSweetProducts + 0.30701920735867 * S_MntWines + -0.24397557348757 *
S_MonthsAsCustomer + -0.58962094283699 * S_NumCatalogPurchases + 0.12670438262487 *
S_NumDealsPurchases + -0.46113523834333 * S_NumDistPurchases + 0.07074818720567 *
S_NumStorePurchases + -0.05066645783537 * S_NumWebPurchases + -0.65729410185804 *
S_NumWebVisitsMonth + 0.08702511028701 * S_RFMstat + -0.39946503838688 * S_RMntFrq +
1.4337242246086 * S_Recency + 0.88397808030072 * S_Teenhome ;
1729688   +   H11  = H11  +    -0.63147559208792 * AcceptedCmp10
1729689   +          +    -0.00204416332102 * AcceptedCmp20  +    -0.91272822301777 *
1729690   +        AcceptedCmp30  +    -0.24133711406692 * AcceptedCmp40
1729691   +          +    -0.11641744847547 * AcceptedCmp50  +     0.08815921371043 *
1729692   +        Complain0  +    -0.53095204316646 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.63147559208792 * AcceptedCmp10 + -0.00204416332102 *
AcceptedCmp20 + -0.91272822301777 * AcceptedCmp30 + -0.24133711406692 * AcceptedCmp40 +
-0.11641744847547 * AcceptedCmp50 + 0.08815921371043 * Complain0 + -0.53095204316646 *
HigherEducationBinary0 ;
1729693   +   H12  = H12  +     0.22426256838634 * AcceptedCmp10
1729694   +          +      0.0373678700446 * AcceptedCmp20  +    -0.34019580311077 *
1729695   +        AcceptedCmp30  +    -0.06657561018437 * AcceptedCmp40
1729696   +          +      1.1187666411593 * AcceptedCmp50  +     -0.0005124915346 *
1729697   +        Complain0  +    -0.07802187100635 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.22426256838634 * AcceptedCmp10 + 0.0373678700446 *
AcceptedCmp20 + -0.34019580311077 * AcceptedCmp30 + -0.06657561018437 * AcceptedCmp40 +
1.1187666411593 * AcceptedCmp50 + -0.0005124915346 * Complain0 + -0.07802187100635 *
HigherEducationBinary0 ;
1729698   +   H13  = H13  +     0.22922205033785 * AcceptedCmp10
1729699   +          +     0.61911667740136 * AcceptedCmp20  +      0.4334892671273 *
1729700   +        AcceptedCmp30  +     0.47499802255895 * AcceptedCmp40
1729701   +          +     0.09778924431294 * AcceptedCmp50  +     0.28935042910164 *
1729702   +        Complain0  +    -0.29804210825456 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.22922205033785 * AcceptedCmp10 + 0.61911667740136 *
AcceptedCmp20 + 0.4334892671273 * AcceptedCmp30 + 0.47499802255895 * AcceptedCmp40 +
0.09778924431294 * AcceptedCmp50 + 0.28935042910164 * Complain0 + -0.29804210825456 *
HigherEducationBinary0 ;
1729703   +   H11  = H11  +      0.0161257464845 * Education2n_Cycle
1729704   +          +     0.12153645157245 * EducationBasic  +     0.31018543557792 *
1729705   +        EducationGraduation  +    -0.04429611151736 * EducationMaster
1729706   +          +     0.12692950862511 * Marital_StatusDivorced
1729707   +          +     0.10026497666167 * Marital_StatusMarried
1729708   +          +    -0.19893864592813 * Marital_StatusSingle
1729709   +          +    -0.04062003397514 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.0161257464845 * Education2n_Cycle + 0.12153645157245 *
EducationBasic + 0.31018543557792 * EducationGraduation + -0.04429611151736 * EducationMaster
+ 0.12692950862511 * Marital_StatusDivorced + 0.10026497666167 * Marital_StatusMarried +
-0.19893864592813 * Marital_StatusSingle + -0.04062003397514 * Marital_StatusTogether ;
1729710   +   H12  = H12  +    -0.21839182894884 * Education2n_Cycle
1729711   +          +     0.31940013998474 * EducationBasic  +    -0.02690553782252 *
1729712   +        EducationGraduation  +     0.05580498138108 * EducationMaster
1729713   +          +    -0.16785192490199 * Marital_StatusDivorced
1729714   +          +     0.13153695130362 * Marital_StatusMarried
1729715   +          +    -0.50411544587104 * Marital_StatusSingle
1729716   +          +     0.13370566790692 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.21839182894884 * Education2n_Cycle + 0.31940013998474 *
EducationBasic + -0.02690553782252 * EducationGraduation + 0.05580498138108 * EducationMaster
+ -0.16785192490199 * Marital_StatusDivorced + 0.13153695130362 * Marital_StatusMarried +
-0.50411544587104 * Marital_StatusSingle + 0.13370566790692 * Marital_StatusTogether ;
1729717   +   H13  = H13  +     0.07130553159229 * Education2n_Cycle
1729718   +          +    -0.14879818143238 * EducationBasic  +     0.17822087456028 *
1729719   +        EducationGraduation  +     0.21882736952662 * EducationMaster
1729720   +          +    -0.62654958087044 * Marital_StatusDivorced
1729721   +          +     1.86250132393341 * Marital_StatusMarried
1729722   +          +    -1.37067556451928 * Marital_StatusSingle
1729723   +          +     1.14727921038174 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.07130553159229 * Education2n_Cycle + -0.14879818143238 *
EducationBasic + 0.17822087456028 * EducationGraduation + 0.21882736952662 * EducationMaster +
-0.62654958087044 * Marital_StatusDivorced + 1.86250132393341 * Marital_StatusMarried +
-1.37067556451928 * Marital_StatusSingle + 1.14727921038174 * Marital_StatusTogether ;
1729724   +   H11  =     -1.1990622461103 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -1.1990622461103 + H11 ;
1729725   +   H12  =       0.393123481714 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.393123481714 + H12 ;
1729726   +   H13  =     1.85498361608276 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = 1.85498361608276 + H13 ;
1729727   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1729728   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1729729   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1729730   +END;
MPRINT(EM_DIAGRAM):   END;
1729731   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1729732   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1729733   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1729734   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1729735   +END;
MPRINT(EM_DIAGRAM):   END;
1729736   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1729737   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1729738   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1729739   +
1729740   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1729741   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1729742   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1729743   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1729744   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1729745   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1729746   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1729747   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1729748   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1729749   +end;
MPRINT(EM_DIAGRAM):   end;
1729750   +else do;
MPRINT(EM_DIAGRAM):   else do;
1729751   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1729752   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1729753   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1729754   +   end;
MPRINT(EM_DIAGRAM):   end;
1729755   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1729756   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1729757   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1729758   +   end;
MPRINT(EM_DIAGRAM):   end;
1729759   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1729760   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1729761   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1729762   +   end;
MPRINT(EM_DIAGRAM):   end;
1729763   +end;
MPRINT(EM_DIAGRAM):   end;
1729764   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1729765   +   P_DepVar1  =     2.52409534738218 * H11  +    -2.96034283825043 * H12
1729766   +          +    -3.36424404783147 * H13 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 2.52409534738218 * H11 + -2.96034283825043 * H12 +
-3.36424404783147 * H13 ;
1729767   +   P_DepVar1  =    -0.20096847833731 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.20096847833731 + P_DepVar1 ;
1729768   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1729769   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1729770   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1729771   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1729772   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1729773   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1729774   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1729775   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1729776   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1729777   +END;
MPRINT(EM_DIAGRAM):   END;
1729778   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1729779   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1729780   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1729781   +END;
MPRINT(EM_DIAGRAM):   END;
1729782   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1729783   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1729784   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1729785   +END;
MPRINT(EM_DIAGRAM):   END;
1729786   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1729787   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1729788   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1729789   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1729790   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1729791   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1729792   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1729793   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1729794   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1729795   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1729796   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1729797   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1729798   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1729799   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1729800   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1729801   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1729802   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1729803   +END;
MPRINT(EM_DIAGRAM):   END;
1729804   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1729805   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1729806   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1729807   +drop
1729808   +H11
1729809   +H12
1729810   +H13
1729811   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 ;
1729812   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1729813   +* Renaming variables for Neural3;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural3;
1729814   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1729815   +* Renaming Posterior variables for Neural3;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural3;
1729816   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1729817   +drop Neural3_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural3_P_DepVar1;
1729818   +Neural3_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural3_P_DepVar1 = P_DepVar1;
1729819   +drop Neural3_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural3_P_DepVar0;
1729820   +Neural3_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural3_P_DepVar0 = P_DepVar0;
1729821   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1729822   +* Renaming Into variables for Neural3;
MPRINT(EM_DIAGRAM):   * Renaming Into variables for Neural3;
1729823   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1729824   +length Neural3_I_DepVar $32;
MPRINT(EM_DIAGRAM):   length Neural3_I_DepVar $32;
1729825   +drop Neural3_I_DepVar;
MPRINT(EM_DIAGRAM):   drop Neural3_I_DepVar;
1729826   +Neural3_I_DepVar = I_DepVar;
MPRINT(EM_DIAGRAM):   Neural3_I_DepVar = I_DepVar;
1729827   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1729828   +* Renaming _WARN_ variable for Neural3;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural3;
1729829   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1729830   +length Neural3_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural3_WARN_ $4;
1729831   +drop Neural3_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural3_WARN_;
1729832   +Neural3_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural3_WARN_ = _WARN_;
1729833   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1729834   +* Ensmbl30: Scoring Code of model 3 of 3;
MPRINT(EM_DIAGRAM):   * Ensmbl30: Scoring Code of model 3 of 3;
1729835   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1729836   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1729837   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
1729838   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1729839   +* NODE: Neural2;
MPRINT(EM_DIAGRAM):   * NODE: Neural2;
1729840   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1729841   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1729842   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1729843   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1729844   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1729845   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1729846   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1729847   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1729848   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1729849   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1729850   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1729851   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1729852   +LENGTH _WARN_ $4
1729853   +      F_DepVar  $ 12
1729854   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1729855   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1729856   +
1729857   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1729858   +
1729859   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1729860   +
1729861   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1729862   +
1729863   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1729864   +
1729865   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1729866   +
1729867   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1729868   +
1729869   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1729870   +
1729871   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1729872   +
1729873   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1729874   +
1729875   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1729876   +
1729877   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1729878   +
1729879   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1729880   +
1729881   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1729882   +
1729883   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1729884   +
1729885   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1729886   +
1729887   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1729888   +
1729889   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1729890   +
1729891   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1729892   +
1729893   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1729894   +
1729895   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1729896   +
1729897   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1729898   +
1729899   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1729900   +
1729901   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1729902   +
1729903   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1729904   +
1729905   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1729906   +
1729907   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1729908   +
1729909   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1729910   +
1729911   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1729912   +
1729913   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1729914   +
1729915   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1729916   +
1729917   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1729918   +
1729919   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1729920   +
1729921   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1729922   +
1729923   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1729924   +
1729925   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1729926   +
1729927   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1729928   +
1729929   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1729930   +
1729931   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1729932   +
1729933   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1729934   +
1729935   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1729936   +
1729937   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1729938   +
1729939   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1729940   +
1729941   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1729942   +
1729943   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1729944   +
1729945   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1729946   +
1729947   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1729948   +
1729949   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1729950   +
1729951   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1729952   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1729953   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1729954   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1729955   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1729956   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1729957   +end;
MPRINT(EM_DIAGRAM):   end;
1729958   +else do;
MPRINT(EM_DIAGRAM):   else do;
1729959   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1729960   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1729961   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1729962   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1729963   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1729964   +   end;
MPRINT(EM_DIAGRAM):   end;
1729965   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1729966   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1729967   +   end;
MPRINT(EM_DIAGRAM):   end;
1729968   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1729969   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1729970   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1729971   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1729972   +   end;
MPRINT(EM_DIAGRAM):   end;
1729973   +end;
MPRINT(EM_DIAGRAM):   end;
1729974   +
1729975   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1729976   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1729977   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1729978   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1729979   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1729980   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1729981   +end;
MPRINT(EM_DIAGRAM):   end;
1729982   +else do;
MPRINT(EM_DIAGRAM):   else do;
1729983   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1729984   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1729985   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1729986   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1729987   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1729988   +   end;
MPRINT(EM_DIAGRAM):   end;
1729989   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1729990   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1729991   +   end;
MPRINT(EM_DIAGRAM):   end;
1729992   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1729993   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1729994   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1729995   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1729996   +   end;
MPRINT(EM_DIAGRAM):   end;
1729997   +end;
MPRINT(EM_DIAGRAM):   end;
1729998   +
1729999   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1730000   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1730001   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1730002   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1730003   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1730004   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1730005   +end;
MPRINT(EM_DIAGRAM):   end;
1730006   +else do;
MPRINT(EM_DIAGRAM):   else do;
1730007   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1730008   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1730009   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1730010   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1730011   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1730012   +   end;
MPRINT(EM_DIAGRAM):   end;
1730013   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1730014   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1730015   +   end;
MPRINT(EM_DIAGRAM):   end;
1730016   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1730017   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1730018   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1730019   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1730020   +   end;
MPRINT(EM_DIAGRAM):   end;
1730021   +end;
MPRINT(EM_DIAGRAM):   end;
1730022   +
1730023   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1730024   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1730025   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1730026   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1730027   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1730028   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1730029   +end;
MPRINT(EM_DIAGRAM):   end;
1730030   +else do;
MPRINT(EM_DIAGRAM):   else do;
1730031   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1730032   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1730033   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1730034   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1730035   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1730036   +   end;
MPRINT(EM_DIAGRAM):   end;
1730037   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1730038   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1730039   +   end;
MPRINT(EM_DIAGRAM):   end;
1730040   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1730041   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1730042   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1730043   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1730044   +   end;
MPRINT(EM_DIAGRAM):   end;
1730045   +end;
MPRINT(EM_DIAGRAM):   end;
1730046   +
1730047   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1730048   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1730049   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1730050   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1730051   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1730052   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1730053   +end;
MPRINT(EM_DIAGRAM):   end;
1730054   +else do;
MPRINT(EM_DIAGRAM):   else do;
1730055   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1730056   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1730057   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1730058   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1730059   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1730060   +   end;
MPRINT(EM_DIAGRAM):   end;
1730061   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1730062   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1730063   +   end;
MPRINT(EM_DIAGRAM):   end;
1730064   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1730065   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1730066   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1730067   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1730068   +   end;
MPRINT(EM_DIAGRAM):   end;
1730069   +end;
MPRINT(EM_DIAGRAM):   end;
1730070   +
1730071   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1730072   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1730073   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1730074   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1730075   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1730076   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1730077   +end;
MPRINT(EM_DIAGRAM):   end;
1730078   +else do;
MPRINT(EM_DIAGRAM):   else do;
1730079   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1730080   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1730081   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1730082   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1730083   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1730084   +   end;
MPRINT(EM_DIAGRAM):   end;
1730085   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1730086   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1730087   +   end;
MPRINT(EM_DIAGRAM):   end;
1730088   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1730089   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1730090   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1730091   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1730092   +   end;
MPRINT(EM_DIAGRAM):   end;
1730093   +end;
MPRINT(EM_DIAGRAM):   end;
1730094   +
1730095   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1730096   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1730097   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1730098   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1730099   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1730100   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1730101   +end;
MPRINT(EM_DIAGRAM):   end;
1730102   +else do;
MPRINT(EM_DIAGRAM):   else do;
1730103   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1730104   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1730105   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1730106   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1730107   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1730108   +   end;
MPRINT(EM_DIAGRAM):   end;
1730109   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1730110   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1730111   +   end;
MPRINT(EM_DIAGRAM):   end;
1730112   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1730113   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1730114   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1730115   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1730116   +   end;
MPRINT(EM_DIAGRAM):   end;
1730117   +end;
MPRINT(EM_DIAGRAM):   end;
1730118   +
1730119   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1730120   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
1730121   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1730122   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1730123   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1730124   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1730125   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1730126   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1730127   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1730128   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1730129   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1730130   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1730131   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1730132   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1730133   +end;
MPRINT(EM_DIAGRAM):   end;
1730134   +else do;
MPRINT(EM_DIAGRAM):   else do;
1730135   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1730136   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1730137   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1730138   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1730139   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1730140   +   end;
MPRINT(EM_DIAGRAM):   end;
1730141   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1730142   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1730143   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1730144   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1730145   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1730146   +   end;
MPRINT(EM_DIAGRAM):   end;
1730147   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1730148   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1730149   +   end;
MPRINT(EM_DIAGRAM):   end;
1730150   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1730151   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1730152   +   end;
MPRINT(EM_DIAGRAM):   end;
1730153   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1730154   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1730155   +   end;
MPRINT(EM_DIAGRAM):   end;
1730156   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1730157   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1730158   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1730159   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1730160   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1730161   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1730162   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1730163   +   end;
MPRINT(EM_DIAGRAM):   end;
1730164   +end;
MPRINT(EM_DIAGRAM):   end;
1730165   +
1730166   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1730167   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1730168   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
1730169   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1730170   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1730171   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1730172   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1730173   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1730174   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1730175   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1730176   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1730177   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1730178   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1730179   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1730180   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1730181   +end;
MPRINT(EM_DIAGRAM):   end;
1730182   +else do;
MPRINT(EM_DIAGRAM):   else do;
1730183   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1730184   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1730185   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1730186   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1730187   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1730188   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1730189   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1730190   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1730191   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1730192   +         end;
MPRINT(EM_DIAGRAM):   end;
1730193   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1730194   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1730195   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1730196   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1730197   +            end;
MPRINT(EM_DIAGRAM):   end;
1730198   +         end;
MPRINT(EM_DIAGRAM):   end;
1730199   +      end;
MPRINT(EM_DIAGRAM):   end;
1730200   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1730201   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1730202   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1730203   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1730204   +         end;
MPRINT(EM_DIAGRAM):   end;
1730205   +      end;
MPRINT(EM_DIAGRAM):   end;
1730206   +   end;
MPRINT(EM_DIAGRAM):   end;
1730207   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1730208   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1730209   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1730210   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1730211   +      end;
MPRINT(EM_DIAGRAM):   end;
1730212   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1730213   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1730214   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1730215   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1730216   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1730217   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1730218   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1730219   +         end;
MPRINT(EM_DIAGRAM):   end;
1730220   +      end;
MPRINT(EM_DIAGRAM):   end;
1730221   +   end;
MPRINT(EM_DIAGRAM):   end;
1730222   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1730223   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1730224   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1730225   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1730226   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1730227   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1730228   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1730229   +   end;
MPRINT(EM_DIAGRAM):   end;
1730230   +end;
MPRINT(EM_DIAGRAM):   end;
1730231   +
1730232   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1730233   +*** Checking missing input Interval
1730234   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1730235   +
1730236   +IF NMISS(
1730237   +   AcceptedCmpTotal ,
1730238   +   Age ,
1730239   +   Frq ,
1730240   +   Income ,
1730241   +   Kidhome ,
1730242   +   Mnt ,
1730243   +   MntFishProducts ,
1730244   +   MntFruits ,
1730245   +   MntGoldProds ,
1730246   +   MntMeatProducts ,
1730247   +   MntSweetProducts ,
1730248   +   MntWines ,
1730249   +   MonthsAsCustomer ,
1730250   +   NumCatalogPurchases ,
1730251   +   NumDealsPurchases ,
1730252   +   NumDistPurchases ,
1730253   +   NumStorePurchases ,
1730254   +   NumWebPurchases ,
1730255   +   NumWebVisitsMonth ,
1730256   +   RFMstat ,
1730257   +   RMntFrq ,
1730258   +   Recency ,
1730259   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
1730260   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1730261   +
1730262   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1730263   +END;
MPRINT(EM_DIAGRAM):   END;
1730264   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1730265   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1730266   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1730267   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1730268   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1730269   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1730270   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1730271   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1730272   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1730273   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1730274   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1730275   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1730276   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1730277   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1730278   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1730279   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1730280   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1730281   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1730282   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1730283   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1730284   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1730285   +   S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
1730286   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 *
MonthsAsCustomer ;
1730287   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1730288   +        NumCatalogPurchases ;
The SAS System
 
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1730289   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1730290   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1730291   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1730292   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1730293   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1730294   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1730295   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1730296   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1730297   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1730298   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1730299   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1730300   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1730301   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1730302   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1730303   +END;
MPRINT(EM_DIAGRAM):   END;
1730304   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1730305   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1730306   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1730307   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1730308   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1730309   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1730310   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1730311   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1730312   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1730313   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1730314   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1730315   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1730316   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1730317   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1730318   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1730319   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1730320   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1730321   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1730322   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1730323   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1730324   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1730325   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1730326   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
1730327   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1730328   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1730329   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1730330   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1730331   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1730332   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1730333   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1730334   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1730335   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1730336   +   ELSE S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
1730337   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 *
MonthsAsCustomer ;
1730338   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1730339   +   ELSE S_NumCatalogPurchases
1730340   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1730341   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1730342   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1730343   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1730344   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1730345   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1730346   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1730347   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1730348   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1730349   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1730350   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1730351   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1730352   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1730353   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1730354   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1730355   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1730356   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1730357   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1730358   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1730359   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1730360   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1730361   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1730362   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1730363   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1730364   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1730365   +END;
MPRINT(EM_DIAGRAM):   END;
1730366   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1730367   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1730368   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1730369   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1730370   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1730371   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1730372   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1730373   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1730374   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1730375   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1730376   +   H11  =     0.29832012449804 * S_AcceptedCmpTotal  +     0.15692046705022 *
1730377   +        S_Age  +      0.2349092670043 * S_Frq  +     1.19016389982628 *
1730378   +        S_Income  +    -1.07615700855274 * S_Kidhome
1730379   +          +    -0.33525941199741 * S_Mnt  +    -0.11896237449995 *
1730380   +        S_MntFishProducts  +    -0.05881189485031 * S_MntFruits
1730381   +          +    -0.04848284440297 * S_MntGoldProds  +     0.36672196891436 *
1730382   +        S_MntMeatProducts  +    -0.21996224739852 * S_MntSweetProducts
1730383   +          +    -0.60947028245288 * S_MntWines  +    -0.00068050663419 *
1730384   +        S_MonthsAsCustomer  +     0.54450402479339 * S_NumCatalogPurchases
1730385   +          +      0.3429043319369 * S_NumDealsPurchases
1730386   +          +     0.71313309767469 * S_NumDistPurchases
1730387   +          +     0.06017757740083 * S_NumStorePurchases
1730388   +          +    -0.19817724925068 * S_NumWebPurchases
1730389   +          +     1.34164122205952 * S_NumWebVisitsMonth
1730390   +          +    -0.01000866410417 * S_RFMstat  +      1.1678492086198 *
1730391   +        S_RMntFrq  +     -1.5774263784376 * S_Recency
1730392   +          +    -0.86503713663798 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.29832012449804 * S_AcceptedCmpTotal + 0.15692046705022 * S_Age +
0.2349092670043 * S_Frq + 1.19016389982628 * S_Income + -1.07615700855274 * S_Kidhome +
-0.33525941199741 * S_Mnt + -0.11896237449995 * S_MntFishProducts + -0.05881189485031 *
S_MntFruits + -0.04848284440297 * S_MntGoldProds + 0.36672196891436 * S_MntMeatProducts +
-0.21996224739852 * S_MntSweetProducts + -0.60947028245288 * S_MntWines + -0.00068050663419 *
S_MonthsAsCustomer + 0.54450402479339 * S_NumCatalogPurchases + 0.3429043319369 *
S_NumDealsPurchases + 0.71313309767469 * S_NumDistPurchases + 0.06017757740083 *
S_NumStorePurchases + -0.19817724925068 * S_NumWebPurchases + 1.34164122205952 *
S_NumWebVisitsMonth + -0.01000866410417 * S_RFMstat + 1.1678492086198 * S_RMntFrq +
-1.5774263784376 * S_Recency + -0.86503713663798 * S_Teenhome ;
1730393   +   H12  =     0.31490280577029 * S_AcceptedCmpTotal  +    -0.09111153110919 *
1730394   +        S_Age  +    -0.16055597693761 * S_Frq  +     0.10319479451271 *
1730395   +        S_Income  +     -0.0027232441092 * S_Kidhome
1730396   +          +    -0.62384470029952 * S_Mnt  +    -0.04454372411008 *
1730397   +        S_MntFishProducts  +    -0.24996025343988 * S_MntFruits
1730398   +          +    -0.01365003759591 * S_MntGoldProds  +     0.62835016670964 *
1730399   +        S_MntMeatProducts  +     -0.1052005092038 * S_MntSweetProducts
1730400   +          +    -1.14216465806662 * S_MntWines  +    -0.05060158666038 *
1730401   +        S_MonthsAsCustomer  +     0.67098319001245 * S_NumCatalogPurchases
1730402   +          +      0.4576973746858 * S_NumDealsPurchases
1730403   +          +     0.15590877272659 * S_NumDistPurchases
1730404   +          +    -0.33414539713736 * S_NumStorePurchases
1730405   +          +    -0.39370244666257 * S_NumWebPurchases
1730406   +          +     0.52596714886704 * S_NumWebVisitsMonth
1730407   +          +     0.20790882491682 * S_RFMstat  +     0.70718304112796 *
1730408   +        S_RMntFrq  +    -0.55973256565759 * S_Recency
1730409   +          +    -0.02572672808252 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = 0.31490280577029 * S_AcceptedCmpTotal + -0.09111153110919 * S_Age
+ -0.16055597693761 * S_Frq + 0.10319479451271 * S_Income + -0.0027232441092 * S_Kidhome +
-0.62384470029952 * S_Mnt + -0.04454372411008 * S_MntFishProducts + -0.24996025343988 *
S_MntFruits + -0.01365003759591 * S_MntGoldProds + 0.62835016670964 * S_MntMeatProducts +
-0.1052005092038 * S_MntSweetProducts + -1.14216465806662 * S_MntWines + -0.05060158666038 *
S_MonthsAsCustomer + 0.67098319001245 * S_NumCatalogPurchases + 0.4576973746858 *
S_NumDealsPurchases + 0.15590877272659 * S_NumDistPurchases + -0.33414539713736 *
S_NumStorePurchases + -0.39370244666257 * S_NumWebPurchases + 0.52596714886704 *
S_NumWebVisitsMonth + 0.20790882491682 * S_RFMstat + 0.70718304112796 * S_RMntFrq +
-0.55973256565759 * S_Recency + -0.02572672808252 * S_Teenhome ;
1730410   +   H11  = H11  +    -0.25877430314813 * AcceptedCmp10
1730411   +          +     -0.6949843667221 * AcceptedCmp20  +    -0.57934320804112 *
1730412   +        AcceptedCmp30  +    -0.51703039002497 * AcceptedCmp40
1730413   +          +    -0.28854562528092 * AcceptedCmp50  +    -0.24441198875632 *
1730414   +        Complain0  +     0.22905299573529 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.25877430314813 * AcceptedCmp10 + -0.6949843667221 *
AcceptedCmp20 + -0.57934320804112 * AcceptedCmp30 + -0.51703039002497 * AcceptedCmp40 +
-0.28854562528092 * AcceptedCmp50 + -0.24441198875632 * Complain0 + 0.22905299573529 *
HigherEducationBinary0 ;
1730415   +   H12  = H12  +    -0.36418677755527 * AcceptedCmp10
1730416   +          +    -0.33815290545566 * AcceptedCmp20  +    -0.02820722241017 *
1730417   +        AcceptedCmp30  +      0.0020982855306 * AcceptedCmp40
1730418   +          +    -0.12224106432236 * AcceptedCmp50  +    -0.06102493109146 *
1730419   +        Complain0  +    -0.17583153481867 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.36418677755527 * AcceptedCmp10 + -0.33815290545566 *
AcceptedCmp20 + -0.02820722241017 * AcceptedCmp30 + 0.0020982855306 * AcceptedCmp40 +
-0.12224106432236 * AcceptedCmp50 + -0.06102493109146 * Complain0 + -0.17583153481867 *
HigherEducationBinary0 ;
1730420   +   H11  = H11  +     0.04231863714836 * Education2n_Cycle
1730421   +          +     0.10274571656153 * EducationBasic  +    -0.09649867506574 *
1730422   +        EducationGraduation  +      -0.333138438339 * EducationMaster
1730423   +          +      0.4663802937397 * Marital_StatusDivorced
1730424   +          +    -1.27401898796099 * Marital_StatusMarried
1730425   +          +      1.3125969368079 * Marital_StatusSingle
1730426   +          +     -0.9460069950427 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.04231863714836 * Education2n_Cycle + 0.10274571656153 *
EducationBasic + -0.09649867506574 * EducationGraduation + -0.333138438339 * EducationMaster +
0.4663802937397 * Marital_StatusDivorced + -1.27401898796099 * Marital_StatusMarried +
1.3125969368079 * Marital_StatusSingle + -0.9460069950427 * Marital_StatusTogether ;
1730427   +   H12  = H12  +     0.04207507898653 * Education2n_Cycle
1730428   +          +    -0.00061313728148 * EducationBasic  +     0.02179374448207 *
1730429   +        EducationGraduation  +     0.00771527138053 * EducationMaster
1730430   +          +     0.07419179522004 * Marital_StatusDivorced
1730431   +          +     0.00234615813337 * Marital_StatusMarried
1730432   +          +    -0.00725460458412 * Marital_StatusSingle
1730433   +          +    -0.02397482300018 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.04207507898653 * Education2n_Cycle + -0.00061313728148 *
EducationBasic + 0.02179374448207 * EducationGraduation + 0.00771527138053 * EducationMaster +
0.07419179522004 * Marital_StatusDivorced + 0.00234615813337 * Marital_StatusMarried +
-0.00725460458412 * Marital_StatusSingle + -0.02397482300018 * Marital_StatusTogether ;
1730434   +   H11  =    -2.08419455884264 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -2.08419455884264 + H11 ;
1730435   +   H12  =    -0.67124132448844 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -0.67124132448844 + H12 ;
1730436   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1730437   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1730438   +END;
MPRINT(EM_DIAGRAM):   END;
1730439   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1730440   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1730441   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1730442   +END;
MPRINT(EM_DIAGRAM):   END;
1730443   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1730444   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1730445   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1730446   +
1730447   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1730448   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1730449   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1730450   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1730451   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1730452   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1730453   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1730454   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1730455   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1730456   +end;
MPRINT(EM_DIAGRAM):   end;
1730457   +else do;
MPRINT(EM_DIAGRAM):   else do;
1730458   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1730459   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1730460   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1730461   +   end;
MPRINT(EM_DIAGRAM):   end;
1730462   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1730463   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1730464   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1730465   +   end;
MPRINT(EM_DIAGRAM):   end;
1730466   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1730467   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1730468   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1730469   +   end;
MPRINT(EM_DIAGRAM):   end;
1730470   +end;
MPRINT(EM_DIAGRAM):   end;
1730471   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1730472   +   P_DepVar1  =     5.63543253335428 * H11  +     6.13213445041394 * H12 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 5.63543253335428 * H11 + 6.13213445041394 * H12 ;
1730473   +   P_DepVar1  =     3.20970411510782 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 3.20970411510782 + P_DepVar1 ;
1730474   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1730475   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1730476   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1730477   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1730478   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1730479   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1730480   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1730481   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1730482   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1730483   +END;
MPRINT(EM_DIAGRAM):   END;
1730484   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1730485   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1730486   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1730487   +END;
MPRINT(EM_DIAGRAM):   END;
1730488   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1730489   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1730490   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1730491   +END;
MPRINT(EM_DIAGRAM):   END;
1730492   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1730493   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1730494   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1730495   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1730496   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1730497   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1730498   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1730499   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1730500   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1730501   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1730502   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1730503   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1730504   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1730505   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1730506   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1730507   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1730508   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1730509   +END;
MPRINT(EM_DIAGRAM):   END;
1730510   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1730511   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1730512   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1730513   +drop
1730514   +H11
1730515   +H12
1730516   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 ;
1730517   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1730518   +* Renaming variables for Neural2;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural2;
1730519   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1730520   +* Renaming Posterior variables for Neural2;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural2;
1730521   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1730522   +drop Neural2_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural2_P_DepVar1;
1730523   +Neural2_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural2_P_DepVar1 = P_DepVar1;
1730524   +drop Neural2_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural2_P_DepVar0;
1730525   +Neural2_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural2_P_DepVar0 = P_DepVar0;
1730526   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1730527   +* Renaming Into variables for Neural2;
MPRINT(EM_DIAGRAM):   * Renaming Into variables for Neural2;
1730528   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1730529   +length Neural2_I_DepVar $32;
MPRINT(EM_DIAGRAM):   length Neural2_I_DepVar $32;
1730530   +drop Neural2_I_DepVar;
MPRINT(EM_DIAGRAM):   drop Neural2_I_DepVar;
1730531   +Neural2_I_DepVar = I_DepVar;
MPRINT(EM_DIAGRAM):   Neural2_I_DepVar = I_DepVar;
1730532   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1730533   +* Renaming _WARN_ variable for Neural2;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural2;
1730534   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1730535   +length Neural2_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural2_WARN_ $4;
1730536   +drop Neural2_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural2_WARN_;
1730537   +Neural2_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural2_WARN_ = _WARN_;
1730538   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1730539   +* Ensmbl30: Voting to produce predicted target;
MPRINT(EM_DIAGRAM):   * Ensmbl30: Voting to produce predicted target;
1730540   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1730541   +array Ensmbl30_post{2} _temporary_;
MPRINT(EM_DIAGRAM):   array Ensmbl30_post{2} _temporary_;
1730542   +array Ensmbl30_count{2} _temporary_;
MPRINT(EM_DIAGRAM):   array Ensmbl30_count{2} _temporary_;
1730543   +array Ensmbl30_level{2} $32 _temporary_ (
1730544   +"1"
1730545   +"0"
1730546   +);
MPRINT(EM_DIAGRAM):   array Ensmbl30_level{2} $32 _temporary_ ( "1" "0" );
1730547   +do i=1 to 2;
MPRINT(EM_DIAGRAM):   do i=1 to 2;
1730548   +Ensmbl30_post{i} = 0;
MPRINT(EM_DIAGRAM):   Ensmbl30_post{i} = 0;
1730549   +Ensmbl30_count{i} = 0;
MPRINT(EM_DIAGRAM):   Ensmbl30_count{i} = 0;
1730550   +end;
MPRINT(EM_DIAGRAM):   end;
1730551   +if Neural9_I_DepVar = Ensmbl30_level{1} then do;
MPRINT(EM_DIAGRAM):   if Neural9_I_DepVar = Ensmbl30_level{1} then do;
1730552   +Ensmbl30_count{1} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl30_count{1} + 1;
1730553   +Ensmbl30_post{1}=Ensmbl30_post{1}+ Neural9_P_DepVar1;
MPRINT(EM_DIAGRAM):   Ensmbl30_post{1}=Ensmbl30_post{1}+ Neural9_P_DepVar1;
1730554   +end;
MPRINT(EM_DIAGRAM):   end;
1730555   +if Neural3_I_DepVar = Ensmbl30_level{1} then do;
MPRINT(EM_DIAGRAM):   if Neural3_I_DepVar = Ensmbl30_level{1} then do;
1730556   +Ensmbl30_count{1} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl30_count{1} + 1;
1730557   +Ensmbl30_post{1}=Ensmbl30_post{1}+ Neural3_P_DepVar1;
MPRINT(EM_DIAGRAM):   Ensmbl30_post{1}=Ensmbl30_post{1}+ Neural3_P_DepVar1;
1730558   +end;
MPRINT(EM_DIAGRAM):   end;
1730559   +if Neural2_I_DepVar = Ensmbl30_level{1} then do;
MPRINT(EM_DIAGRAM):   if Neural2_I_DepVar = Ensmbl30_level{1} then do;
1730560   +Ensmbl30_count{1} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl30_count{1} + 1;
1730561   +Ensmbl30_post{1}=Ensmbl30_post{1}+ Neural2_P_DepVar1;
MPRINT(EM_DIAGRAM):   Ensmbl30_post{1}=Ensmbl30_post{1}+ Neural2_P_DepVar1;
1730562   +end;
MPRINT(EM_DIAGRAM):   end;
1730563   +if Neural9_I_DepVar = Ensmbl30_level{2} then do;
MPRINT(EM_DIAGRAM):   if Neural9_I_DepVar = Ensmbl30_level{2} then do;
1730564   +Ensmbl30_count{2} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl30_count{2} + 1;
1730565   +Ensmbl30_post{2}=Ensmbl30_post{2}+ Neural9_P_DepVar0;
MPRINT(EM_DIAGRAM):   Ensmbl30_post{2}=Ensmbl30_post{2}+ Neural9_P_DepVar0;
1730566   +end;
MPRINT(EM_DIAGRAM):   end;
1730567   +if Neural3_I_DepVar = Ensmbl30_level{2} then do;
MPRINT(EM_DIAGRAM):   if Neural3_I_DepVar = Ensmbl30_level{2} then do;
1730568   +Ensmbl30_count{2} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl30_count{2} + 1;
1730569   +Ensmbl30_post{2}=Ensmbl30_post{2}+ Neural3_P_DepVar0;
MPRINT(EM_DIAGRAM):   Ensmbl30_post{2}=Ensmbl30_post{2}+ Neural3_P_DepVar0;
1730570   +end;
MPRINT(EM_DIAGRAM):   end;
1730571   +if Neural2_I_DepVar = Ensmbl30_level{2} then do;
MPRINT(EM_DIAGRAM):   if Neural2_I_DepVar = Ensmbl30_level{2} then do;
1730572   +Ensmbl30_count{2} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl30_count{2} + 1;
1730573   +Ensmbl30_post{2}=Ensmbl30_post{2}+ Neural2_P_DepVar0;
MPRINT(EM_DIAGRAM):   Ensmbl30_post{2}=Ensmbl30_post{2}+ Neural2_P_DepVar0;
1730574   +end;
MPRINT(EM_DIAGRAM):   end;
1730575   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1730576   +* Ensmbl30: Determine Into Variable;
MPRINT(EM_DIAGRAM):   * Ensmbl30: Determine Into Variable;
1730577   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1730578   +length I_DepVar $32;
MPRINT(EM_DIAGRAM):   length I_DepVar $32;
WARNING: Length of character variable I_DepVar has already been set.
         Use the LENGTH statement as the very first statement in the DATA STEP to declare the
         length of a character variable.
1730579   +drop i vote_count vote_post;
MPRINT(EM_DIAGRAM):   drop i vote_count vote_post;
1730580   +vote_count = max(
1730581   +Ensmbl30_count{1} ,
1730582   +Ensmbl30_count{2}
1730583   +);
MPRINT(EM_DIAGRAM):   vote_count = max( Ensmbl30_count{1} , Ensmbl30_count{2} );
1730584   +do i=1 to 2;
MPRINT(EM_DIAGRAM):   do i=1 to 2;
1730585   +if Ensmbl30_count{i}=vote_count and Ensmbl30_post{i}>vote_post then do;
MPRINT(EM_DIAGRAM):   if Ensmbl30_count{i}=vote_count and Ensmbl30_post{i}>vote_post then do;
1730586   +I_DepVar = Ensmbl30_level{i};
MPRINT(EM_DIAGRAM):   I_DepVar = Ensmbl30_level{i};
1730587   +vote_post = Ensmbl30_count{i};
MPRINT(EM_DIAGRAM):   vote_post = Ensmbl30_count{i};
1730588   +end;
MPRINT(EM_DIAGRAM):   end;
1730589   +end;
MPRINT(EM_DIAGRAM):   end;
1730590   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1730591   +* Ensmbl30: Compute posterior vars using models predicting the chosen level;
MPRINT(EM_DIAGRAM):   * Ensmbl30: Compute posterior vars using models predicting the chosen
level;
1730592   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1730593   +P_DepVar1 = 0;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0;
1730594   +P_DepVar0 = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1730595   +if I_DepVar = Neural9_I_DepVar then do;
MPRINT(EM_DIAGRAM):   if I_DepVar = Neural9_I_DepVar then do;
1730596   +P_DEPVAR1 = P_DEPVAR1 + Neural9_P_DepVar1;
MPRINT(EM_DIAGRAM):   P_DEPVAR1 = P_DEPVAR1 + Neural9_P_DepVar1;
1730597   +P_DEPVAR0 = P_DEPVAR0 + Neural9_P_DepVar0;
MPRINT(EM_DIAGRAM):   P_DEPVAR0 = P_DEPVAR0 + Neural9_P_DepVar0;
1730598   +end;
MPRINT(EM_DIAGRAM):   end;
1730599   +if I_DepVar = Neural3_I_DepVar then do;
MPRINT(EM_DIAGRAM):   if I_DepVar = Neural3_I_DepVar then do;
1730600   +P_DEPVAR1 = P_DEPVAR1 + Neural3_P_DepVar1;
MPRINT(EM_DIAGRAM):   P_DEPVAR1 = P_DEPVAR1 + Neural3_P_DepVar1;
1730601   +P_DEPVAR0 = P_DEPVAR0 + Neural3_P_DepVar0;
MPRINT(EM_DIAGRAM):   P_DEPVAR0 = P_DEPVAR0 + Neural3_P_DepVar0;
1730602   +end;
MPRINT(EM_DIAGRAM):   end;
1730603   +if I_DepVar = Neural2_I_DepVar then do;
MPRINT(EM_DIAGRAM):   if I_DepVar = Neural2_I_DepVar then do;
1730604   +P_DEPVAR1 = P_DEPVAR1 + Neural2_P_DepVar1;
MPRINT(EM_DIAGRAM):   P_DEPVAR1 = P_DEPVAR1 + Neural2_P_DepVar1;
1730605   +P_DEPVAR0 = P_DEPVAR0 + Neural2_P_DepVar0;
MPRINT(EM_DIAGRAM):   P_DEPVAR0 = P_DEPVAR0 + Neural2_P_DepVar0;
1730606   +end;
MPRINT(EM_DIAGRAM):   end;
1730607   +* Ensmbl30: Averaging posterior;
MPRINT(EM_DIAGRAM):   * Ensmbl30: Averaging posterior;
1730608   +P_DepVar1 = P_DepVar1/vote_count;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1/vote_count;
1730609   +P_DepVar0 = P_DepVar0/vote_count;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0/vote_count;
1730610   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1730611   +* Ensmbl30: Producing Unformatted variable;
MPRINT(EM_DIAGRAM):   * Ensmbl30: Producing Unformatted variable;
1730612   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1730613   +label U_DepVar = "Unnormalized Into: DepVar";
MPRINT(EM_DIAGRAM):   label U_DepVar = "Unnormalized Into: DepVar";
1730614   +if I_DepVar = '1' then U_DepVar = 1;
MPRINT(EM_DIAGRAM):   if I_DepVar = '1' then U_DepVar = 1;
1730615   +else
1730616   +if I_DepVar = '0' then U_DepVar = 0;
MPRINT(EM_DIAGRAM):   else if I_DepVar = '0' then U_DepVar = 0;
1730617   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1730618   +* Ensmbl30: Computing _WARN_ Variable;
MPRINT(EM_DIAGRAM):   * Ensmbl30: Computing _WARN_ Variable;
1730619   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1730620   +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
1730621   +label _WARN_ = 'Warnings';
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings';
1730622   +_WARN_ = '';
MPRINT(EM_DIAGRAM):   _WARN_ = '';
1730623   +if index(NEURAL9_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(NEURAL9_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_,
1, 1) ='M';
1730624   +if index(NEURAL9_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(NEURAL9_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_,
2, 1) ='U';
1730625   +if index(NEURAL9_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(NEURAL9_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_,
3, 1) ='P';
1730626   +if index(NEURAL9_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(NEURAL9_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_,
4, 1) ='C';
1730627   +if index(NEURAL3_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(NEURAL3_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_,
1, 1) ='M';
1730628   +if index(NEURAL3_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(NEURAL3_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_,
2, 1) ='U';
1730629   +if index(NEURAL3_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(NEURAL3_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_,
3, 1) ='P';
1730630   +if index(NEURAL3_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(NEURAL3_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_,
4, 1) ='C';
1730631   +if index(NEURAL2_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(NEURAL2_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_,
1, 1) ='M';
1730632   +if index(NEURAL2_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(NEURAL2_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_,
2, 1) ='U';
1730633   +if index(NEURAL2_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(NEURAL2_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_,
3, 1) ='P';
1730634   +if index(NEURAL2_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(NEURAL2_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_,
4, 1) ='C';
1730635   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1730636   +* Ensmbl30: Computing Residual Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl30: Computing Residual Vars;
1730637   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1730638   +if
1730639   +F_DepVar NE '1'
1730640   +AND F_DepVar NE '0'
1730641   +then do;
MPRINT(EM_DIAGRAM):   if F_DepVar NE '1' AND F_DepVar NE '0' then do;
1730642   +R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
1730643   +R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
1730644   +end;
MPRINT(EM_DIAGRAM):   end;
1730645   +else do;
MPRINT(EM_DIAGRAM):   else do;
1730646   +R_DepVar1 = -P_DepVar1;
MPRINT(EM_DIAGRAM):   R_DepVar1 = -P_DepVar1;
1730647   +R_DepVar0 = -P_DepVar0;
MPRINT(EM_DIAGRAM):   R_DepVar0 = -P_DepVar0;
1730648   +SELECT(F_DepVar);
MPRINT(EM_DIAGRAM):   SELECT(F_DepVar);
1730649   +WHEN('1') R_DepVar1 = R_DepVar1 +1;
MPRINT(EM_DIAGRAM):   WHEN('1') R_DepVar1 = R_DepVar1 +1;
1730650   +WHEN('0') R_DepVar0 = R_DepVar0 +1;
MPRINT(EM_DIAGRAM):   WHEN('0') R_DepVar0 = R_DepVar0 +1;
1730651   +OTHERWISE;
MPRINT(EM_DIAGRAM):   OTHERWISE;
1730652   +END;
MPRINT(EM_DIAGRAM):   END;
1730653   +END;
MPRINT(EM_DIAGRAM):   END;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1730654    run;
 
NOTE: DATA STEP view saved on file EMWS8.ENSMBL30_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.NEURAL9_TRAIN.VIEW used (Total process time):
      real time           0.13 seconds
      cpu time            0.14 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.13 seconds
      cpu time            0.14 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1730655    quit;
1730656    filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
1730657    filename emflow
1730657  ! "C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl30\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl30\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl30: Scoring NEURAL9_VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1730658    *------------------------------------------------------------*;
1730659    * Ensmbl30: Scoring NEURAL9_VALIDATE data;
1730660    *------------------------------------------------------------*;
1730661    data EMWS8.Ensmbl30_VALIDATE
1730662    / view=EMWS8.Ensmbl30_VALIDATE
1730663    ;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl30_VALIDATE / view=EMWS8.Ensmbl30_VALIDATE ;
1730664    set EMWS8.Neural9_VALIDATE
1730665    ;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural9_VALIDATE ;
1730666    %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file
      C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl30\EMFLOWSCORE.sas.
1730667   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1730668   +* Ensmbl30: Combine model for DepVar;
MPRINT(EM_DIAGRAM):   * Ensmbl30: Combine model for DepVar;
1730669   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1730670   +* Ensmbl30: Scoring Code of model 1 of 3;
MPRINT(EM_DIAGRAM):   * Ensmbl30: Scoring Code of model 1 of 3;
1730671   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1730672   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1730673   +* TOOL: Extension Class;
MPRINT(EM_DIAGRAM):   * TOOL: Extension Class;
1730674   +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
1730675   +* NODE: FIMPORT;
MPRINT(EM_DIAGRAM):   * NODE: FIMPORT;
1730676   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1730677   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1730678   +* TOOL: Statistics Exploration;
MPRINT(EM_DIAGRAM):   * TOOL: Statistics Exploration;
1730679   +* TYPE: EXPLORE;
MPRINT(EM_DIAGRAM):   * TYPE: EXPLORE;
1730680   +* NODE: Stat;
MPRINT(EM_DIAGRAM):   * NODE: Stat;
1730681   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1730682   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1730683   +* TOOL: Filtering;
MPRINT(EM_DIAGRAM):   * TOOL: Filtering;
1730684   +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
1730685   +* NODE: Filter;
MPRINT(EM_DIAGRAM):   * NODE: Filter;
1730686   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1730687   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1730688   +* TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
MPRINT(EM_DIAGRAM):   * TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
1730689   +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
1730690   +* NODE: EMCODE4;
MPRINT(EM_DIAGRAM):   * NODE: EMCODE4;
1730691   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1730692   +
1730693   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1730694   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1730694  !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1730695   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1730696   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1730697   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1730698   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1730699   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
1730700   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1730701   +* TOOL: Transform;
MPRINT(EM_DIAGRAM):   * TOOL: Transform;
1730702   +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
1730703   +* NODE: Trans;
MPRINT(EM_DIAGRAM):   * NODE: Trans;
1730704   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1730705   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1730706   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1730707   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1730708   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1730709   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1730710   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
1730711   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1730712   +* TOOL: Partition Class;
MPRINT(EM_DIAGRAM):   * TOOL: Partition Class;
1730713   +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
1730714   +* NODE: Part;
MPRINT(EM_DIAGRAM):   * NODE: Part;
1730715   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1730716   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1730717   +* TOOL: Metadata Node;
MPRINT(EM_DIAGRAM):   * TOOL: Metadata Node;
1730718   +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
1730719   +* NODE: Meta;
MPRINT(EM_DIAGRAM):   * NODE: Meta;
1730720   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1730721   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1730722   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
1730723   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1730724   +* NODE: Neural9;
MPRINT(EM_DIAGRAM):   * NODE: Neural9;
1730725   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1730726   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1730727   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1730728   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1730729   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1730730   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1730731   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1730732   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1730733   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1730734   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1730735   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1730736   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1730737   +LENGTH _WARN_ $4
1730738   +      F_DepVar  $ 12
1730739   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1730740   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1730741   +
1730742   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1730743   +
1730744   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1730745   +
1730746   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1730747   +
1730748   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1730749   +
1730750   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1730751   +
1730752   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1730753   +
1730754   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1730755   +
1730756   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1730757   +
1730758   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1730759   +
1730760   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1730761   +
1730762   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1730763   +
1730764   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1730765   +
1730766   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1730767   +
1730768   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1730769   +
1730770   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1730771   +
1730772   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1730773   +
1730774   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1730775   +
1730776   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1730777   +
1730778   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1730779   +
1730780   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1730781   +
1730782   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1730783   +
1730784   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1730785   +
1730786   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1730787   +
1730788   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1730789   +
1730790   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1730791   +
1730792   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1730793   +
1730794   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1730795   +
1730796   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1730797   +
1730798   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1730799   +
1730800   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1730801   +
1730802   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1730803   +
1730804   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1730805   +
1730806   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1730807   +
1730808   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1730809   +
1730810   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1730811   +
1730812   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1730813   +
1730814   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1730815   +
1730816   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1730817   +
1730818   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1730819   +
1730820   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1730821   +
1730822   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1730823   +
1730824   +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
1730825   +
1730826   +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
1730827   +
1730828   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1730829   +
1730830   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1730831   +
1730832   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1730833   +
1730834   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1730835   +
1730836   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1730837   +
1730838   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1730839   +
1730840   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1730841   +
1730842   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1730843   +
1730844   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1730845   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1730846   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1730847   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1730848   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1730849   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1730850   +end;
MPRINT(EM_DIAGRAM):   end;
1730851   +else do;
MPRINT(EM_DIAGRAM):   else do;
1730852   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1730853   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1730854   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1730855   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1730856   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1730857   +   end;
MPRINT(EM_DIAGRAM):   end;
1730858   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1730859   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1730860   +   end;
MPRINT(EM_DIAGRAM):   end;
1730861   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1730862   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1730863   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1730864   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1730865   +   end;
MPRINT(EM_DIAGRAM):   end;
1730866   +end;
MPRINT(EM_DIAGRAM):   end;
1730867   +
1730868   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1730869   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1730870   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1730871   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1730872   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1730873   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1730874   +end;
MPRINT(EM_DIAGRAM):   end;
1730875   +else do;
MPRINT(EM_DIAGRAM):   else do;
1730876   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1730877   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1730878   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1730879   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1730880   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1730881   +   end;
MPRINT(EM_DIAGRAM):   end;
1730882   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1730883   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1730884   +   end;
MPRINT(EM_DIAGRAM):   end;
1730885   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1730886   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1730887   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1730888   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1730889   +   end;
MPRINT(EM_DIAGRAM):   end;
1730890   +end;
MPRINT(EM_DIAGRAM):   end;
1730891   +
1730892   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1730893   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1730894   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1730895   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1730896   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1730897   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1730898   +end;
MPRINT(EM_DIAGRAM):   end;
1730899   +else do;
MPRINT(EM_DIAGRAM):   else do;
1730900   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1730901   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1730902   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1730903   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1730904   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1730905   +   end;
MPRINT(EM_DIAGRAM):   end;
1730906   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1730907   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1730908   +   end;
MPRINT(EM_DIAGRAM):   end;
1730909   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1730910   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1730911   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1730912   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1730913   +   end;
MPRINT(EM_DIAGRAM):   end;
1730914   +end;
MPRINT(EM_DIAGRAM):   end;
1730915   +
1730916   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1730917   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1730918   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1730919   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1730920   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1730921   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1730922   +end;
MPRINT(EM_DIAGRAM):   end;
1730923   +else do;
MPRINT(EM_DIAGRAM):   else do;
1730924   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1730925   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1730926   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1730927   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1730928   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1730929   +   end;
MPRINT(EM_DIAGRAM):   end;
1730930   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1730931   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1730932   +   end;
MPRINT(EM_DIAGRAM):   end;
1730933   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1730934   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1730935   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1730936   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1730937   +   end;
MPRINT(EM_DIAGRAM):   end;
1730938   +end;
MPRINT(EM_DIAGRAM):   end;
1730939   +
1730940   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1730941   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1730942   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1730943   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1730944   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1730945   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1730946   +end;
MPRINT(EM_DIAGRAM):   end;
1730947   +else do;
MPRINT(EM_DIAGRAM):   else do;
1730948   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1730949   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1730950   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1730951   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1730952   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1730953   +   end;
MPRINT(EM_DIAGRAM):   end;
1730954   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1730955   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1730956   +   end;
MPRINT(EM_DIAGRAM):   end;
1730957   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1730958   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1730959   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1730960   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1730961   +   end;
MPRINT(EM_DIAGRAM):   end;
1730962   +end;
MPRINT(EM_DIAGRAM):   end;
1730963   +
1730964   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1730965   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1730966   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1730967   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1730968   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1730969   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1730970   +end;
MPRINT(EM_DIAGRAM):   end;
1730971   +else do;
MPRINT(EM_DIAGRAM):   else do;
1730972   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1730973   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1730974   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1730975   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1730976   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1730977   +   end;
MPRINT(EM_DIAGRAM):   end;
1730978   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1730979   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1730980   +   end;
MPRINT(EM_DIAGRAM):   end;
1730981   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1730982   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1730983   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1730984   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1730985   +   end;
MPRINT(EM_DIAGRAM):   end;
1730986   +end;
MPRINT(EM_DIAGRAM):   end;
1730987   +
1730988   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1730989   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1730990   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1730991   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1730992   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1730993   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1730994   +end;
MPRINT(EM_DIAGRAM):   end;
1730995   +else do;
MPRINT(EM_DIAGRAM):   else do;
1730996   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1730997   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1730998   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1730999   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1731000   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1731001   +   end;
MPRINT(EM_DIAGRAM):   end;
1731002   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1731003   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1731004   +   end;
MPRINT(EM_DIAGRAM):   end;
1731005   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1731006   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1731007   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1731008   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1731009   +   end;
MPRINT(EM_DIAGRAM):   end;
1731010   +end;
MPRINT(EM_DIAGRAM):   end;
1731011   +
1731012   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1731013   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
1731014   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1731015   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1731016   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1731017   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1731018   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1731019   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1731020   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1731021   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1731022   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1731023   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1731024   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1731025   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1731026   +end;
MPRINT(EM_DIAGRAM):   end;
1731027   +else do;
MPRINT(EM_DIAGRAM):   else do;
1731028   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1731029   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1731030   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1731031   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1731032   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1731033   +   end;
MPRINT(EM_DIAGRAM):   end;
1731034   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1731035   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1731036   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1731037   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1731038   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1731039   +   end;
MPRINT(EM_DIAGRAM):   end;
1731040   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1731041   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1731042   +   end;
MPRINT(EM_DIAGRAM):   end;
1731043   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1731044   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1731045   +   end;
MPRINT(EM_DIAGRAM):   end;
1731046   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1731047   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1731048   +   end;
MPRINT(EM_DIAGRAM):   end;
1731049   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1731050   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1731051   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1731052   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1731053   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1731054   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1731055   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1731056   +   end;
MPRINT(EM_DIAGRAM):   end;
1731057   +end;
MPRINT(EM_DIAGRAM):   end;
1731058   +
1731059   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1731060   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1731061   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
1731062   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1731063   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1731064   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1731065   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1731066   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1731067   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1731068   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1731069   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1731070   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1731071   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1731072   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1731073   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1731074   +end;
MPRINT(EM_DIAGRAM):   end;
1731075   +else do;
MPRINT(EM_DIAGRAM):   else do;
1731076   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1731077   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1731078   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1731079   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1731080   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1731081   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1731082   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1731083   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1731084   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1731085   +         end;
MPRINT(EM_DIAGRAM):   end;
1731086   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1731087   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1731088   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1731089   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1731090   +            end;
MPRINT(EM_DIAGRAM):   end;
1731091   +         end;
MPRINT(EM_DIAGRAM):   end;
1731092   +      end;
MPRINT(EM_DIAGRAM):   end;
1731093   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1731094   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1731095   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1731096   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1731097   +         end;
MPRINT(EM_DIAGRAM):   end;
1731098   +      end;
MPRINT(EM_DIAGRAM):   end;
1731099   +   end;
MPRINT(EM_DIAGRAM):   end;
1731100   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1731101   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1731102   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1731103   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1731104   +      end;
MPRINT(EM_DIAGRAM):   end;
1731105   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1731106   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1731107   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1731108   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1731109   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1731110   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1731111   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1731112   +         end;
MPRINT(EM_DIAGRAM):   end;
1731113   +      end;
MPRINT(EM_DIAGRAM):   end;
1731114   +   end;
MPRINT(EM_DIAGRAM):   end;
1731115   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1731116   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1731117   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1731118   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1731119   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1731120   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1731121   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1731122   +   end;
MPRINT(EM_DIAGRAM):   end;
1731123   +end;
MPRINT(EM_DIAGRAM):   end;
1731124   +
1731125   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1731126   +*** Checking missing input Interval
1731127   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1731128   +
1731129   +IF NMISS(
1731130   +   AcceptedCmpTotal ,
1731131   +   Age ,
1731132   +   Frq ,
1731133   +   Income ,
1731134   +   Kidhome ,
1731135   +   Mnt ,
1731136   +   MntFishProducts ,
1731137   +   MntFruits ,
1731138   +   MntGoldProds ,
1731139   +   MntMeatProducts ,
1731140   +   MntSweetProducts ,
1731141   +   MntWines ,
1731142   +   MonthsAsCustomer ,
1731143   +   NumCatalogPurchases ,
1731144   +   NumDealsPurchases ,
1731145   +   NumDistPurchases ,
1731146   +   NumStorePurchases ,
1731147   +   NumWebPurchases ,
1731148   +   NumWebVisitsMonth ,
1731149   +   RFMstat ,
1731150   +   RMntFrq ,
1731151   +   Recency ,
1731152   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
1731153   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1731154   +
1731155   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1731156   +END;
MPRINT(EM_DIAGRAM):   END;
1731157   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1731158   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1731159   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1731160   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1731161   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1731162   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1731163   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1731164   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1731165   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1731166   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1731167   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1731168   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1731169   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1731170   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1731171   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1731172   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1731173   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1731174   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1731175   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1731176   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1731177   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1731178   +   S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
1731179   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 *
MonthsAsCustomer ;
1731180   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1731181   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1731182   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1731183   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1731184   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1731185   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1731186   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1731187   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1731188   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1731189   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1731190   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1731191   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1731192   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1731193   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1731194   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1731195   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1731196   +END;
MPRINT(EM_DIAGRAM):   END;
1731197   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1731198   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1731199   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1731200   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1731201   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1731202   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1731203   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1731204   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1731205   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1731206   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1731207   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1731208   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1731209   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1731210   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1731211   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1731212   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1731213   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1731214   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1731215   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1731216   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1731217   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1731218   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1731219   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
1731220   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1731221   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1731222   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1731223   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1731224   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1731225   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1731226   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1731227   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1731228   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1731229   +   ELSE S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
1731230   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 *
MonthsAsCustomer ;
1731231   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1731232   +   ELSE S_NumCatalogPurchases
1731233   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1731234   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1731235   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1731236   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1731237   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1731238   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1731239   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1731240   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1731241   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1731242   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1731243   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1731244   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1731245   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1731246   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1731247   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1731248   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1731249   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1731250   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1731251   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1731252   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1731253   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1731254   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1731255   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1731256   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1731257   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1731258   +END;
MPRINT(EM_DIAGRAM):   END;
1731259   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1731260   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1731261   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1731262   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1731263   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1731264   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1731265   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1731266   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1731267   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1731268   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1731269   +   H11  =     0.13561897368917 * S_AcceptedCmpTotal  +    -0.32772545836794 *
1731270   +        S_Age  +    -0.38398034861903 * S_Frq  +    -0.26977539373888 *
1731271   +        S_Income  +    -0.14142658616971 * S_Kidhome
1731272   +          +      0.0989055198532 * S_Mnt  +    -0.02522005306968 *
1731273   +        S_MntFishProducts  +    -0.12344455762016 * S_MntFruits
1731274   +          +     0.06422500584481 * S_MntGoldProds  +     1.06758158504307 *
1731275   +        S_MntMeatProducts  +    -0.23902734890811 * S_MntSweetProducts
1731276   +          +    -0.30623759563522 * S_MntWines  +    -0.00016362973479 *
1731277   +        S_MonthsAsCustomer  +     0.55545319032721 * S_NumCatalogPurchases
1731278   +          +     0.96837841774168 * S_NumDealsPurchases
1731279   +          +      0.2846105381881 * S_NumDistPurchases
1731280   +          +    -0.69514041792943 * S_NumStorePurchases
1731281   +          +    -0.96425407351749 * S_NumWebPurchases
1731282   +          +     0.79545449599683 * S_NumWebVisitsMonth
1731283   +          +     0.49367889229155 * S_RFMstat  +     -0.0709743399293 *
1731284   +        S_RMntFrq  +    -0.86057075960565 * S_Recency
1731285   +          +     0.14939396415431 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.13561897368917 * S_AcceptedCmpTotal + -0.32772545836794 * S_Age
+ -0.38398034861903 * S_Frq + -0.26977539373888 * S_Income + -0.14142658616971 * S_Kidhome +
0.0989055198532 * S_Mnt + -0.02522005306968 * S_MntFishProducts + -0.12344455762016 *
S_MntFruits + 0.06422500584481 * S_MntGoldProds + 1.06758158504307 * S_MntMeatProducts +
-0.23902734890811 * S_MntSweetProducts + -0.30623759563522 * S_MntWines + -0.00016362973479 *
S_MonthsAsCustomer + 0.55545319032721 * S_NumCatalogPurchases + 0.96837841774168 *
S_NumDealsPurchases + 0.2846105381881 * S_NumDistPurchases + -0.69514041792943 *
S_NumStorePurchases + -0.96425407351749 * S_NumWebPurchases + 0.79545449599683 *
S_NumWebVisitsMonth + 0.49367889229155 * S_RFMstat + -0.0709743399293 * S_RMntFrq +
-0.86057075960565 * S_Recency + 0.14939396415431 * S_Teenhome ;
1731286   +   H12  =     0.62153817830372 * S_AcceptedCmpTotal  +     0.11000838320023 *
1731287   +        S_Age  +    -0.43905714814627 * S_Frq  +      0.4627921513743 *
1731288   +        S_Income  +    -0.55432195959203 * S_Kidhome
1731289   +          +    -0.20868947702573 * S_Mnt  +    -0.04791610917449 *
1731290   +        S_MntFishProducts  +    -0.18250759820717 * S_MntFruits
1731291   +          +    -0.04325930692478 * S_MntGoldProds  +     0.58323535101492 *
1731292   +        S_MntMeatProducts  +     0.04921270742083 * S_MntSweetProducts
1731293   +          +    -0.39974265327363 * S_MntWines  +    -0.05607601548004 *
1731294   +        S_MonthsAsCustomer  +      0.3012811961076 * S_NumCatalogPurchases
1731295   +          +      0.2190184330724 * S_NumDealsPurchases
1731296   +          +    -0.01682909442896 * S_NumDistPurchases
1731297   +          +    -0.70244951048552 * S_NumStorePurchases
1731298   +          +     -0.3057457659316 * S_NumWebPurchases
1731299   +          +     0.95928538762715 * S_NumWebVisitsMonth
1731300   +          +     0.05894343416718 * S_RFMstat  +    -0.10056410044429 *
1731301   +        S_RMntFrq  +     -0.8406665241206 * S_Recency
1731302   +          +    -0.35297412201687 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = 0.62153817830372 * S_AcceptedCmpTotal + 0.11000838320023 * S_Age +
-0.43905714814627 * S_Frq + 0.4627921513743 * S_Income + -0.55432195959203 * S_Kidhome +
-0.20868947702573 * S_Mnt + -0.04791610917449 * S_MntFishProducts + -0.18250759820717 *
S_MntFruits + -0.04325930692478 * S_MntGoldProds + 0.58323535101492 * S_MntMeatProducts +
0.04921270742083 * S_MntSweetProducts + -0.39974265327363 * S_MntWines + -0.05607601548004 *
S_MonthsAsCustomer + 0.3012811961076 * S_NumCatalogPurchases + 0.2190184330724 *
S_NumDealsPurchases + -0.01682909442896 * S_NumDistPurchases + -0.70244951048552 *
S_NumStorePurchases + -0.3057457659316 * S_NumWebPurchases + 0.95928538762715 *
S_NumWebVisitsMonth + 0.05894343416718 * S_RFMstat + -0.10056410044429 * S_RMntFrq +
-0.8406665241206 * S_Recency + -0.35297412201687 * S_Teenhome ;
1731303   +   H13  =     0.06733651290741 * S_AcceptedCmpTotal  +    -0.40242244330352 *
1731304   +        S_Age  +     0.00779419067769 * S_Frq  +    -0.39275723422465 *
1731305   +        S_Income  +    -0.06354861159882 * S_Kidhome
1731306   +          +     -0.0526962194301 * S_Mnt  +     0.22795791930382 *
1731307   +        S_MntFishProducts  +       0.155952558453 * S_MntFruits
1731308   +          +    -0.05338294725533 * S_MntGoldProds  +     0.27696958404211 *
1731309   +        S_MntMeatProducts  +     0.45382327602276 * S_MntSweetProducts
1731310   +          +     0.08944669240843 * S_MntWines  +     0.05073400334181 *
1731311   +        S_MonthsAsCustomer  +    -0.21502812614453 * S_NumCatalogPurchases
1731312   +          +    -0.21394230159696 * S_NumDealsPurchases
1731313   +          +    -0.23833771124663 * S_NumDistPurchases
1731314   +          +     0.45832031017813 * S_NumStorePurchases
1731315   +          +    -0.30226952040179 * S_NumWebPurchases
1731316   +          +    -0.29796387184481 * S_NumWebVisitsMonth
1731317   +          +    -0.47457772771567 * S_RFMstat  +     0.02623437469504 *
1731318   +        S_RMntFrq  +     0.87067423045258 * S_Recency
1731319   +          +    -0.04579179879137 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = 0.06733651290741 * S_AcceptedCmpTotal + -0.40242244330352 * S_Age
+ 0.00779419067769 * S_Frq + -0.39275723422465 * S_Income + -0.06354861159882 * S_Kidhome +
-0.0526962194301 * S_Mnt + 0.22795791930382 * S_MntFishProducts + 0.155952558453 * S_MntFruits
+ -0.05338294725533 * S_MntGoldProds + 0.27696958404211 * S_MntMeatProducts + 0.45382327602276
* S_MntSweetProducts + 0.08944669240843 * S_MntWines + 0.05073400334181 * S_MonthsAsCustomer +
-0.21502812614453 * S_NumCatalogPurchases + -0.21394230159696 * S_NumDealsPurchases +
-0.23833771124663 * S_NumDistPurchases + 0.45832031017813 * S_NumStorePurchases +
-0.30226952040179 * S_NumWebPurchases + -0.29796387184481 * S_NumWebVisitsMonth +
-0.47457772771567 * S_RFMstat + 0.02623437469504 * S_RMntFrq + 0.87067423045258 * S_Recency +
-0.04579179879137 * S_Teenhome ;
1731320   +   H14  =      0.0100821240579 * S_AcceptedCmpTotal  +     0.06650171037949 *
1731321   +        S_Age  +     0.07437437345976 * S_Frq  +    -0.60858783914323 *
1731322   +        S_Income  +    -0.04839586846715 * S_Kidhome
1731323   +          +      0.0498689835853 * S_Mnt  +    -0.19232042751963 *
1731324   +        S_MntFishProducts  +     -0.0934621532732 * S_MntFruits
1731325   +          +    -0.23123184317801 * S_MntGoldProds  +    -0.73001093719713 *
1731326   +        S_MntMeatProducts  +    -0.00941386350496 * S_MntSweetProducts
1731327   +          +     0.53093647457485 * S_MntWines  +     0.25999444904416 *
1731328   +        S_MonthsAsCustomer  +    -0.64356932247243 * S_NumCatalogPurchases
1731329   +          +    -0.43749647771198 * S_NumDealsPurchases
1731330   +          +     0.21263473847472 * S_NumDistPurchases
1731331   +          +     0.26102168039141 * S_NumStorePurchases
1731332   +          +     0.54921725943657 * S_NumWebPurchases
1731333   +          +    -0.75685843498122 * S_NumWebVisitsMonth
1731334   +          +     0.27936321897064 * S_RFMstat  +    -0.02993148267083 *
1731335   +        S_RMntFrq  +     0.80536256822347 * S_Recency
1731336   +          +     0.29599728227233 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = 0.0100821240579 * S_AcceptedCmpTotal + 0.06650171037949 * S_Age +
0.07437437345976 * S_Frq + -0.60858783914323 * S_Income + -0.04839586846715 * S_Kidhome +
0.0498689835853 * S_Mnt + -0.19232042751963 * S_MntFishProducts + -0.0934621532732 *
S_MntFruits + -0.23123184317801 * S_MntGoldProds + -0.73001093719713 * S_MntMeatProducts +
-0.00941386350496 * S_MntSweetProducts + 0.53093647457485 * S_MntWines + 0.25999444904416 *
S_MonthsAsCustomer + -0.64356932247243 * S_NumCatalogPurchases + -0.43749647771198 *
S_NumDealsPurchases + 0.21263473847472 * S_NumDistPurchases + 0.26102168039141 *
S_NumStorePurchases + 0.54921725943657 * S_NumWebPurchases + -0.75685843498122 *
S_NumWebVisitsMonth + 0.27936321897064 * S_RFMstat + -0.02993148267083 * S_RMntFrq +
0.80536256822347 * S_Recency + 0.29599728227233 * S_Teenhome ;
1731337   +   H15  =    -0.08671490381299 * S_AcceptedCmpTotal  +     0.06582961248691 *
1731338   +        S_Age  +    -0.31028674605164 * S_Frq  +    -0.75498700429145 *
1731339   +        S_Income  +     0.71499527198653 * S_Kidhome
1731340   +          +    -0.09511483339215 * S_Mnt  +     0.12995766208562 *
1731341   +        S_MntFishProducts  +     0.03365861966415 * S_MntFruits
1731342   +          +     0.10989750322838 * S_MntGoldProds  +     -0.5915075857888 *
1731343   +        S_MntMeatProducts  +     0.06560450377445 * S_MntSweetProducts
1731344   +          +     0.21362770075701 * S_MntWines  +    -0.09939364366816 *
1731345   +        S_MonthsAsCustomer  +    -0.61410179474601 * S_NumCatalogPurchases
1731346   +          +     0.09436067776126 * S_NumDealsPurchases
1731347   +          +    -0.02824201859641 * S_NumDistPurchases
1731348   +          +    -0.06770433780564 * S_NumStorePurchases
1731349   +          +    -0.07177620319715 * S_NumWebPurchases
1731350   +          +    -0.75589979685266 * S_NumWebVisitsMonth
1731351   +          +    -0.03604464190626 * S_RFMstat  +     0.17925089667944 *
1731352   +        S_RMntFrq  +     0.94408788011429 * S_Recency
1731353   +          +     0.41530214227619 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H15 = -0.08671490381299 * S_AcceptedCmpTotal + 0.06582961248691 * S_Age
+ -0.31028674605164 * S_Frq + -0.75498700429145 * S_Income + 0.71499527198653 * S_Kidhome +
-0.09511483339215 * S_Mnt + 0.12995766208562 * S_MntFishProducts + 0.03365861966415 *
S_MntFruits + 0.10989750322838 * S_MntGoldProds + -0.5915075857888 * S_MntMeatProducts +
0.06560450377445 * S_MntSweetProducts + 0.21362770075701 * S_MntWines + -0.09939364366816 *
S_MonthsAsCustomer + -0.61410179474601 * S_NumCatalogPurchases + 0.09436067776126 *
S_NumDealsPurchases + -0.02824201859641 * S_NumDistPurchases + -0.06770433780564 *
S_NumStorePurchases + -0.07177620319715 * S_NumWebPurchases + -0.75589979685266 *
S_NumWebVisitsMonth + -0.03604464190626 * S_RFMstat + 0.17925089667944 * S_RMntFrq +
0.94408788011429 * S_Recency + 0.41530214227619 * S_Teenhome ;
1731354   +   H16  =    -0.39917411634723 * S_AcceptedCmpTotal  +     0.03925725158826 *
1731355   +        S_Age  +    -0.41370994963942 * S_Frq  +    -0.42480967809347 *
1731356   +        S_Income  +    -0.63474522042341 * S_Kidhome
1731357   +          +    -0.26213982180471 * S_Mnt  +     0.18685818695791 *
1731358   +        S_MntFishProducts  +     0.04605858526078 * S_MntFruits
1731359   +          +    -0.16330204827669 * S_MntGoldProds  +    -0.29864450244187 *
1731360   +        S_MntMeatProducts  +     -0.1818801035467 * S_MntSweetProducts
1731361   +          +    -0.01848203970119 * S_MntWines  +    -0.38039400989409 *
1731362   +        S_MonthsAsCustomer  +     -0.7050267965821 * S_NumCatalogPurchases
1731363   +          +    -0.51154511343396 * S_NumDealsPurchases
1731364   +          +    -0.52422915823572 * S_NumDistPurchases
1731365   +          +     0.30305498422357 * S_NumStorePurchases
1731366   +          +     0.12197321559338 * S_NumWebPurchases
1731367   +          +    -0.10520335422769 * S_NumWebVisitsMonth
1731368   +          +    -0.08455403770298 * S_RFMstat  +     -0.0746666450533 *
1731369   +        S_RMntFrq  +    -0.01666787115039 * S_Recency
1731370   +          +     -0.0878584797536 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H16 = -0.39917411634723 * S_AcceptedCmpTotal + 0.03925725158826 * S_Age
+ -0.41370994963942 * S_Frq + -0.42480967809347 * S_Income + -0.63474522042341 * S_Kidhome +
-0.26213982180471 * S_Mnt + 0.18685818695791 * S_MntFishProducts + 0.04605858526078 *
S_MntFruits + -0.16330204827669 * S_MntGoldProds + -0.29864450244187 * S_MntMeatProducts +
-0.1818801035467 * S_MntSweetProducts + -0.01848203970119 * S_MntWines + -0.38039400989409 *
S_MonthsAsCustomer + -0.7050267965821 * S_NumCatalogPurchases + -0.51154511343396 *
S_NumDealsPurchases + -0.52422915823572 * S_NumDistPurchases + 0.30305498422357 *
S_NumStorePurchases + 0.12197321559338 * S_NumWebPurchases + -0.10520335422769 *
S_NumWebVisitsMonth + -0.08455403770298 * S_RFMstat + -0.0746666450533 * S_RMntFrq +
-0.01666787115039 * S_Recency + -0.0878584797536 * S_Teenhome ;
1731371   +   H11  = H11  +    -0.90961987146896 * AcceptedCmp10
1731372   +          +    -0.43883226747411 * AcceptedCmp20  +    -0.33111359726838 *
1731373   +        AcceptedCmp30  +    -0.56836514169806 * AcceptedCmp40
1731374   +          +    -0.35293284248651 * AcceptedCmp50  +    -0.21637194677498 *
1731375   +        Complain0  +     0.04763871212094 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.90961987146896 * AcceptedCmp10 + -0.43883226747411 *
AcceptedCmp20 + -0.33111359726838 * AcceptedCmp30 + -0.56836514169806 * AcceptedCmp40 +
-0.35293284248651 * AcceptedCmp50 + -0.21637194677498 * Complain0 + 0.04763871212094 *
HigherEducationBinary0 ;
1731376   +   H12  = H12  +     -0.1030990687939 * AcceptedCmp10
1731377   +          +     0.00122242086508 * AcceptedCmp20  +    -0.20164062706951 *
1731378   +        AcceptedCmp30  +    -0.18080173131042 * AcceptedCmp40
1731379   +          +    -0.29605640354834 * AcceptedCmp50  +     0.05316734050672 *
1731380   +        Complain0  +     0.03310322649598 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.1030990687939 * AcceptedCmp10 + 0.00122242086508 *
AcceptedCmp20 + -0.20164062706951 * AcceptedCmp30 + -0.18080173131042 * AcceptedCmp40 +
-0.29605640354834 * AcceptedCmp50 + 0.05316734050672 * Complain0 + 0.03310322649598 *
HigherEducationBinary0 ;
1731381   +   H13  = H13  +     0.19903845466874 * AcceptedCmp10
1731382   +          +     0.05770332479555 * AcceptedCmp20  +     0.18259425424285 *
1731383   +        AcceptedCmp30  +     -0.1972581314722 * AcceptedCmp40
1731384   +          +     0.07810166818705 * AcceptedCmp50  +      0.0588314244014 *
1731385   +        Complain0  +     0.52386444165611 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.19903845466874 * AcceptedCmp10 + 0.05770332479555 *
AcceptedCmp20 + 0.18259425424285 * AcceptedCmp30 + -0.1972581314722 * AcceptedCmp40 +
0.07810166818705 * AcceptedCmp50 + 0.0588314244014 * Complain0 + 0.52386444165611 *
HigherEducationBinary0 ;
1731386   +   H14  = H14  +    -0.25712989150916 * AcceptedCmp10
1731387   +          +     0.10002773433896 * AcceptedCmp20  +     0.22713279091354 *
1731388   +        AcceptedCmp30  +     -0.3908577443881 * AcceptedCmp40
1731389   +          +     0.26942267903717 * AcceptedCmp50  +    -0.06022694623669 *
1731390   +        Complain0  +     0.05521579061999 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.25712989150916 * AcceptedCmp10 + 0.10002773433896 *
AcceptedCmp20 + 0.22713279091354 * AcceptedCmp30 + -0.3908577443881 * AcceptedCmp40 +
0.26942267903717 * AcceptedCmp50 + -0.06022694623669 * Complain0 + 0.05521579061999 *
HigherEducationBinary0 ;
1731391   +   H15  = H15  +     0.38919159206493 * AcceptedCmp10
1731392   +          +     0.58837620734384 * AcceptedCmp20  +     0.43219005719576 *
1731393   +        AcceptedCmp30  +     0.44013713415724 * AcceptedCmp40
1731394   +          +     0.21616210575893 * AcceptedCmp50  +     0.22563135687374 *
1731395   +        Complain0  +    -0.26680262675523 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.38919159206493 * AcceptedCmp10 + 0.58837620734384 *
AcceptedCmp20 + 0.43219005719576 * AcceptedCmp30 + 0.44013713415724 * AcceptedCmp40 +
0.21616210575893 * AcceptedCmp50 + 0.22563135687374 * Complain0 + -0.26680262675523 *
HigherEducationBinary0 ;
1731396   +   H16  = H16  +     0.20851064493691 * AcceptedCmp10
1731397   +          +     0.04947084224566 * AcceptedCmp20  +     0.13383157945653 *
1731398   +        AcceptedCmp30  +    -0.04649385360034 * AcceptedCmp40
1731399   +          +     0.22456192437835 * AcceptedCmp50  +     0.09861465204268 *
1731400   +        Complain0  +     0.52759393238257 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.20851064493691 * AcceptedCmp10 + 0.04947084224566 *
AcceptedCmp20 + 0.13383157945653 * AcceptedCmp30 + -0.04649385360034 * AcceptedCmp40 +
0.22456192437835 * AcceptedCmp50 + 0.09861465204268 * Complain0 + 0.52759393238257 *
HigherEducationBinary0 ;
1731401   +   H11  = H11  +    -0.17149044990916 * Education2n_Cycle
1731402   +          +    -0.10901150601282 * EducationBasic  +     0.08956382506778 *
1731403   +        EducationGraduation  +    -0.02263887301789 * EducationMaster
1731404   +          +     0.10234616400375 * Marital_StatusDivorced
1731405   +          +     0.27961650739075 * Marital_StatusMarried
1731406   +          +    -0.40239488723767 * Marital_StatusSingle
1731407   +          +     0.08313574864343 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.17149044990916 * Education2n_Cycle + -0.10901150601282 *
EducationBasic + 0.08956382506778 * EducationGraduation + -0.02263887301789 * EducationMaster
+ 0.10234616400375 * Marital_StatusDivorced + 0.27961650739075 * Marital_StatusMarried +
-0.40239488723767 * Marital_StatusSingle + 0.08313574864343 * Marital_StatusTogether ;
1731408   +   H12  = H12  +     0.05425155386264 * Education2n_Cycle
1731409   +          +    -0.29410781678759 * EducationBasic  +     0.23986214400803 *
1731410   +        EducationGraduation  +    -0.14831422332134 * EducationMaster
1731411   +          +     0.46385792428023 * Marital_StatusDivorced
1731412   +          +    -0.62344590646391 * Marital_StatusMarried
1731413   +          +     0.61767209252062 * Marital_StatusSingle
1731414   +          +    -0.48335726597768 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.05425155386264 * Education2n_Cycle + -0.29410781678759 *
EducationBasic + 0.23986214400803 * EducationGraduation + -0.14831422332134 * EducationMaster
+ 0.46385792428023 * Marital_StatusDivorced + -0.62344590646391 * Marital_StatusMarried +
0.61767209252062 * Marital_StatusSingle + -0.48335726597768 * Marital_StatusTogether ;
1731415   +   H13  = H13  +     0.02436261022421 * Education2n_Cycle
1731416   +          +     0.25859718044561 * EducationBasic  +    -0.27291277319608 *
1731417   +        EducationGraduation  +    -0.08922741430112 * EducationMaster
1731418   +          +    -0.07839612590836 * Marital_StatusDivorced
1731419   +          +     0.35316864062221 * Marital_StatusMarried
1731420   +          +    -0.10730136429834 * Marital_StatusSingle
1731421   +          +     0.17593603209099 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.02436261022421 * Education2n_Cycle + 0.25859718044561 *
EducationBasic + -0.27291277319608 * EducationGraduation + -0.08922741430112 * EducationMaster
+ -0.07839612590836 * Marital_StatusDivorced + 0.35316864062221 * Marital_StatusMarried +
-0.10730136429834 * Marital_StatusSingle + 0.17593603209099 * Marital_StatusTogether ;
1731422   +   H14  = H14  +    -0.24964520343799 * Education2n_Cycle
1731423   +          +    -0.01893498177516 * EducationBasic  +     0.15063494078927 *
1731424   +        EducationGraduation  +     -0.0741586921665 * EducationMaster
1731425   +          +    -0.09942175269886 * Marital_StatusDivorced
1731426   +          +     0.24385460865335 * Marital_StatusMarried
1731427   +          +    -0.33658955096296 * Marital_StatusSingle
1731428   +          +     0.56050963700382 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.24964520343799 * Education2n_Cycle + -0.01893498177516 *
EducationBasic + 0.15063494078927 * EducationGraduation + -0.0741586921665 * EducationMaster +
-0.09942175269886 * Marital_StatusDivorced + 0.24385460865335 * Marital_StatusMarried +
-0.33658955096296 * Marital_StatusSingle + 0.56050963700382 * Marital_StatusTogether ;
1731429   +   H15  = H15  +     0.01382474147934 * Education2n_Cycle
1731430   +          +    -0.45490268571245 * EducationBasic  +     0.16592751946825 *
1731431   +        EducationGraduation  +     0.37352174719748 * EducationMaster
1731432   +          +    -0.08047852561096 * Marital_StatusDivorced
1731433   +          +     1.16485862694561 * Marital_StatusMarried
1731434   +          +    -0.94140251178566 * Marital_StatusSingle
1731435   +          +     0.70332254595446 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.01382474147934 * Education2n_Cycle + -0.45490268571245 *
EducationBasic + 0.16592751946825 * EducationGraduation + 0.37352174719748 * EducationMaster +
-0.08047852561096 * Marital_StatusDivorced + 1.16485862694561 * Marital_StatusMarried +
-0.94140251178566 * Marital_StatusSingle + 0.70332254595446 * Marital_StatusTogether ;
1731436   +   H16  = H16  +    -0.23552122269934 * Education2n_Cycle
1731437   +          +    -0.24160689278663 * EducationBasic  +    -0.15570122212206 *
1731438   +        EducationGraduation  +    -0.17067956037934 * EducationMaster
1731439   +          +    -0.16621963893391 * Marital_StatusDivorced
1731440   +          +    -0.44542186297324 * Marital_StatusMarried
1731441   +          +     0.42176133228308 * Marital_StatusSingle
1731442   +          +     -0.3191529098756 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H16 = H16 + -0.23552122269934 * Education2n_Cycle + -0.24160689278663 *
EducationBasic + -0.15570122212206 * EducationGraduation + -0.17067956037934 * EducationMaster
+ -0.16621963893391 * Marital_StatusDivorced + -0.44542186297324 * Marital_StatusMarried +
0.42176133228308 * Marital_StatusSingle + -0.3191529098756 * Marital_StatusTogether ;
1731443   +   H11  =    -0.08072695414295 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -0.08072695414295 + H11 ;
1731444   +   H12  =     0.35226882164117 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.35226882164117 + H12 ;
1731445   +   H13  =    -1.39195207519632 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -1.39195207519632 + H13 ;
1731446   +   H14  =     1.37641938752783 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 1.37641938752783 + H14 ;
1731447   +   H15  =     0.91842694601067 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = 0.91842694601067 + H15 ;
1731448   +   H16  =     -2.0930022603803 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = -2.0930022603803 + H16 ;
1731449   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1731450   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1731451   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1731452   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1731453   +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
1731454   +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
1731455   +END;
MPRINT(EM_DIAGRAM):   END;
1731456   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1731457   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1731458   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1731459   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1731460   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1731461   +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
1731462   +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
1731463   +END;
MPRINT(EM_DIAGRAM):   END;
1731464   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1731465   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1731466   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1731467   +
1731468   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1731469   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1731470   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1731471   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1731472   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1731473   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1731474   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1731475   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1731476   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1731477   +end;
MPRINT(EM_DIAGRAM):   end;
1731478   +else do;
MPRINT(EM_DIAGRAM):   else do;
1731479   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1731480   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1731481   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1731482   +   end;
MPRINT(EM_DIAGRAM):   end;
1731483   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1731484   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1731485   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1731486   +   end;
MPRINT(EM_DIAGRAM):   end;
1731487   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1731488   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1731489   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1731490   +   end;
MPRINT(EM_DIAGRAM):   end;
1731491   +end;
MPRINT(EM_DIAGRAM):   end;
1731492   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1731493   +   P_DepVar1  =     2.03370101048476 * H11  +     2.66531855617884 * H12
1731494   +          +    -1.85942573260565 * H13  +    -1.90574749832357 * H14
1731495   +          +    -3.11388767967909 * H15  +    -2.20829136620638 * H16 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 2.03370101048476 * H11 + 2.66531855617884 * H12 +
-1.85942573260565 * H13 + -1.90574749832357 * H14 + -3.11388767967909 * H15 +
-2.20829136620638 * H16 ;
1731496   +   P_DepVar1  =    -2.07329738382548 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.07329738382548 + P_DepVar1 ;
1731497   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1731498   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1731499   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1731500   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1731501   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1731502   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1731503   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1731504   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1731505   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1731506   +END;
MPRINT(EM_DIAGRAM):   END;
1731507   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1731508   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1731509   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1731510   +END;
MPRINT(EM_DIAGRAM):   END;
1731511   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1731512   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1731513   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1731514   +END;
MPRINT(EM_DIAGRAM):   END;
1731515   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1731516   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1731517   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1731518   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1731519   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1731520   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1731521   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1731522   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1731523   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1731524   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1731525   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1731526   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1731527   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1731528   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1731529   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1731530   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1731531   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1731532   +END;
MPRINT(EM_DIAGRAM):   END;
1731533   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1731534   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1731535   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1731536   +drop
1731537   +H11
1731538   +H12
1731539   +H13
1731540   +H14
1731541   +H15
1731542   +H16
1731543   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 ;
1731544   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1731545   +* Renaming variables for Neural9;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural9;
1731546   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1731547   +* Renaming Posterior variables for Neural9;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural9;
1731548   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1731549   +drop Neural9_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural9_P_DepVar1;
1731550   +Neural9_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural9_P_DepVar1 = P_DepVar1;
1731551   +drop Neural9_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural9_P_DepVar0;
1731552   +Neural9_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural9_P_DepVar0 = P_DepVar0;
1731553   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1731554   +* Renaming Into variables for Neural9;
MPRINT(EM_DIAGRAM):   * Renaming Into variables for Neural9;
1731555   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1731556   +length Neural9_I_DepVar $32;
MPRINT(EM_DIAGRAM):   length Neural9_I_DepVar $32;
1731557   +drop Neural9_I_DepVar;
MPRINT(EM_DIAGRAM):   drop Neural9_I_DepVar;
1731558   +Neural9_I_DepVar = I_DepVar;
MPRINT(EM_DIAGRAM):   Neural9_I_DepVar = I_DepVar;
1731559   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1731560   +* Renaming _WARN_ variable for Neural9;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural9;
1731561   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1731562   +length Neural9_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural9_WARN_ $4;
1731563   +drop Neural9_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural9_WARN_;
1731564   +Neural9_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural9_WARN_ = _WARN_;
1731565   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1731566   +* Ensmbl30: Scoring Code of model 2 of 3;
MPRINT(EM_DIAGRAM):   * Ensmbl30: Scoring Code of model 2 of 3;
1731567   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1731568   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1731569   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
1731570   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1731571   +* NODE: Neural3;
MPRINT(EM_DIAGRAM):   * NODE: Neural3;
1731572   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1731573   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1731574   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1731575   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1731576   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1731577   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1731578   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1731579   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1731580   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1731581   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1731582   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1731583   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1731584   +LENGTH _WARN_ $4
1731585   +      F_DepVar  $ 12
1731586   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1731587   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1731588   +
1731589   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1731590   +
1731591   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1731592   +
1731593   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1731594   +
1731595   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1731596   +
1731597   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1731598   +
1731599   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1731600   +
1731601   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1731602   +
1731603   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1731604   +
1731605   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1731606   +
1731607   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1731608   +
1731609   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1731610   +
1731611   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1731612   +
1731613   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1731614   +
1731615   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1731616   +
1731617   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1731618   +
1731619   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1731620   +
1731621   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1731622   +
1731623   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1731624   +
1731625   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1731626   +
1731627   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1731628   +
1731629   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1731630   +
1731631   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1731632   +
1731633   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1731634   +
1731635   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1731636   +
1731637   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1731638   +
1731639   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1731640   +
1731641   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1731642   +
1731643   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1731644   +
1731645   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1731646   +
1731647   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1731648   +
1731649   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1731650   +
1731651   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1731652   +
1731653   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1731654   +
1731655   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1731656   +
1731657   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1731658   +
1731659   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1731660   +
1731661   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1731662   +
1731663   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1731664   +
1731665   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1731666   +
1731667   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1731668   +
1731669   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1731670   +
1731671   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1731672   +
1731673   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1731674   +
1731675   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1731676   +
1731677   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1731678   +
1731679   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1731680   +
1731681   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1731682   +
1731683   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1731684   +
1731685   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1731686   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1731687   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1731688   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1731689   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1731690   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1731691   +end;
MPRINT(EM_DIAGRAM):   end;
1731692   +else do;
MPRINT(EM_DIAGRAM):   else do;
1731693   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1731694   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1731695   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1731696   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1731697   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1731698   +   end;
MPRINT(EM_DIAGRAM):   end;
1731699   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1731700   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1731701   +   end;
MPRINT(EM_DIAGRAM):   end;
1731702   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1731703   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1731704   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1731705   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1731706   +   end;
MPRINT(EM_DIAGRAM):   end;
1731707   +end;
MPRINT(EM_DIAGRAM):   end;
1731708   +
1731709   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1731710   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1731711   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1731712   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1731713   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1731714   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1731715   +end;
MPRINT(EM_DIAGRAM):   end;
1731716   +else do;
MPRINT(EM_DIAGRAM):   else do;
1731717   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1731718   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1731719   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1731720   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1731721   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1731722   +   end;
MPRINT(EM_DIAGRAM):   end;
1731723   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1731724   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1731725   +   end;
MPRINT(EM_DIAGRAM):   end;
1731726   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1731727   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1731728   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1731729   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1731730   +   end;
MPRINT(EM_DIAGRAM):   end;
1731731   +end;
MPRINT(EM_DIAGRAM):   end;
1731732   +
1731733   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1731734   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1731735   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1731736   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1731737   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1731738   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1731739   +end;
MPRINT(EM_DIAGRAM):   end;
1731740   +else do;
MPRINT(EM_DIAGRAM):   else do;
1731741   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1731742   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1731743   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1731744   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1731745   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1731746   +   end;
MPRINT(EM_DIAGRAM):   end;
1731747   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1731748   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1731749   +   end;
MPRINT(EM_DIAGRAM):   end;
1731750   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1731751   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1731752   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1731753   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1731754   +   end;
MPRINT(EM_DIAGRAM):   end;
1731755   +end;
MPRINT(EM_DIAGRAM):   end;
1731756   +
1731757   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1731758   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1731759   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1731760   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1731761   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1731762   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1731763   +end;
MPRINT(EM_DIAGRAM):   end;
1731764   +else do;
MPRINT(EM_DIAGRAM):   else do;
1731765   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1731766   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1731767   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1731768   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1731769   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1731770   +   end;
MPRINT(EM_DIAGRAM):   end;
1731771   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1731772   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1731773   +   end;
MPRINT(EM_DIAGRAM):   end;
1731774   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1731775   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1731776   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1731777   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1731778   +   end;
MPRINT(EM_DIAGRAM):   end;
1731779   +end;
MPRINT(EM_DIAGRAM):   end;
1731780   +
1731781   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1731782   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1731783   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1731784   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1731785   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1731786   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1731787   +end;
MPRINT(EM_DIAGRAM):   end;
1731788   +else do;
MPRINT(EM_DIAGRAM):   else do;
1731789   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1731790   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1731791   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1731792   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1731793   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1731794   +   end;
MPRINT(EM_DIAGRAM):   end;
1731795   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1731796   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1731797   +   end;
MPRINT(EM_DIAGRAM):   end;
1731798   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1731799   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1731800   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1731801   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1731802   +   end;
MPRINT(EM_DIAGRAM):   end;
1731803   +end;
MPRINT(EM_DIAGRAM):   end;
1731804   +
1731805   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1731806   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1731807   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1731808   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1731809   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1731810   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1731811   +end;
MPRINT(EM_DIAGRAM):   end;
1731812   +else do;
MPRINT(EM_DIAGRAM):   else do;
1731813   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1731814   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1731815   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1731816   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1731817   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1731818   +   end;
MPRINT(EM_DIAGRAM):   end;
1731819   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1731820   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1731821   +   end;
MPRINT(EM_DIAGRAM):   end;
1731822   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1731823   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1731824   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1731825   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1731826   +   end;
MPRINT(EM_DIAGRAM):   end;
1731827   +end;
MPRINT(EM_DIAGRAM):   end;
1731828   +
1731829   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1731830   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1731831   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1731832   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1731833   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1731834   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1731835   +end;
MPRINT(EM_DIAGRAM):   end;
1731836   +else do;
MPRINT(EM_DIAGRAM):   else do;
1731837   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1731838   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1731839   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1731840   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1731841   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1731842   +   end;
MPRINT(EM_DIAGRAM):   end;
1731843   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1731844   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1731845   +   end;
MPRINT(EM_DIAGRAM):   end;
1731846   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1731847   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1731848   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1731849   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1731850   +   end;
MPRINT(EM_DIAGRAM):   end;
1731851   +end;
MPRINT(EM_DIAGRAM):   end;
1731852   +
1731853   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1731854   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
1731855   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1731856   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1731857   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1731858   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1731859   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1731860   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1731861   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1731862   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1731863   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1731864   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1731865   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1731866   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1731867   +end;
MPRINT(EM_DIAGRAM):   end;
1731868   +else do;
MPRINT(EM_DIAGRAM):   else do;
1731869   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1731870   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1731871   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1731872   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1731873   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1731874   +   end;
MPRINT(EM_DIAGRAM):   end;
1731875   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1731876   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1731877   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1731878   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1731879   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1731880   +   end;
MPRINT(EM_DIAGRAM):   end;
1731881   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1731882   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1731883   +   end;
MPRINT(EM_DIAGRAM):   end;
1731884   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1731885   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1731886   +   end;
MPRINT(EM_DIAGRAM):   end;
1731887   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1731888   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1731889   +   end;
MPRINT(EM_DIAGRAM):   end;
1731890   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1731891   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1731892   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1731893   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1731894   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1731895   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1731896   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1731897   +   end;
MPRINT(EM_DIAGRAM):   end;
1731898   +end;
MPRINT(EM_DIAGRAM):   end;
1731899   +
1731900   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1731901   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1731902   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
1731903   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1731904   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1731905   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1731906   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1731907   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1731908   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1731909   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1731910   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1731911   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1731912   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1731913   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1731914   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1731915   +end;
MPRINT(EM_DIAGRAM):   end;
1731916   +else do;
MPRINT(EM_DIAGRAM):   else do;
1731917   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1731918   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1731919   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1731920   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1731921   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1731922   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1731923   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1731924   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1731925   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1731926   +         end;
MPRINT(EM_DIAGRAM):   end;
1731927   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1731928   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1731929   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1731930   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1731931   +            end;
MPRINT(EM_DIAGRAM):   end;
1731932   +         end;
MPRINT(EM_DIAGRAM):   end;
1731933   +      end;
MPRINT(EM_DIAGRAM):   end;
1731934   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1731935   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1731936   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1731937   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1731938   +         end;
MPRINT(EM_DIAGRAM):   end;
1731939   +      end;
MPRINT(EM_DIAGRAM):   end;
1731940   +   end;
MPRINT(EM_DIAGRAM):   end;
1731941   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1731942   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1731943   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1731944   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1731945   +      end;
MPRINT(EM_DIAGRAM):   end;
1731946   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1731947   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1731948   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1731949   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1731950   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1731951   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1731952   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1731953   +         end;
MPRINT(EM_DIAGRAM):   end;
1731954   +      end;
MPRINT(EM_DIAGRAM):   end;
1731955   +   end;
MPRINT(EM_DIAGRAM):   end;
1731956   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1731957   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1731958   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1731959   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1731960   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1731961   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1731962   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1731963   +   end;
MPRINT(EM_DIAGRAM):   end;
1731964   +end;
MPRINT(EM_DIAGRAM):   end;
1731965   +
1731966   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1731967   +*** Checking missing input Interval
1731968   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1731969   +
1731970   +IF NMISS(
1731971   +   AcceptedCmpTotal ,
1731972   +   Age ,
1731973   +   Frq ,
1731974   +   Income ,
1731975   +   Kidhome ,
1731976   +   Mnt ,
1731977   +   MntFishProducts ,
1731978   +   MntFruits ,
1731979   +   MntGoldProds ,
1731980   +   MntMeatProducts ,
1731981   +   MntSweetProducts ,
1731982   +   MntWines ,
1731983   +   MonthsAsCustomer ,
1731984   +   NumCatalogPurchases ,
1731985   +   NumDealsPurchases ,
1731986   +   NumDistPurchases ,
1731987   +   NumStorePurchases ,
1731988   +   NumWebPurchases ,
1731989   +   NumWebVisitsMonth ,
1731990   +   RFMstat ,
1731991   +   RMntFrq ,
1731992   +   Recency ,
1731993   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
1731994   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1731995   +
1731996   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1731997   +END;
MPRINT(EM_DIAGRAM):   END;
1731998   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1731999   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1732000   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1732001   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1732002   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1732003   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1732004   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1732005   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1732006   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1732007   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1732008   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1732009   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1732010   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1732011   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1732012   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1732013   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1732014   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1732015   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1732016   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1732017   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1732018   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1732019   +   S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
1732020   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 *
MonthsAsCustomer ;
1732021   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1732022   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1732023   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1732024   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1732025   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1732026   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1732027   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1732028   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1732029   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1732030   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1732031   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1732032   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1732033   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1732034   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1732035   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1732036   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1732037   +END;
MPRINT(EM_DIAGRAM):   END;
1732038   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1732039   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1732040   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1732041   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1732042   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1732043   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1732044   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1732045   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1732046   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1732047   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1732048   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1732049   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1732050   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1732051   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1732052   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1732053   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1732054   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1732055   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1732056   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1732057   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1732058   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1732059   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1732060   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
1732061   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1732062   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1732063   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1732064   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1732065   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1732066   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1732067   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1732068   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1732069   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1732070   +   ELSE S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
1732071   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 *
MonthsAsCustomer ;
1732072   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1732073   +   ELSE S_NumCatalogPurchases
1732074   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1732075   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1732076   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1732077   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1732078   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1732079   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1732080   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1732081   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1732082   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1732083   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1732084   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1732085   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1732086   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1732087   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1732088   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1732089   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1732090   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1732091   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1732092   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1732093   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1732094   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1732095   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1732096   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1732097   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1732098   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1732099   +END;
MPRINT(EM_DIAGRAM):   END;
1732100   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1732101   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1732102   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1732103   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1732104   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1732105   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1732106   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1732107   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1732108   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1732109   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1732110   +   H11  =     0.83781385787802 * S_AcceptedCmpTotal  +    -0.24139142678243 *
1732111   +        S_Age  +     0.06099821217041 * S_Frq  +     0.40208633787615 *
1732112   +        S_Income  +     0.51123266106809 * S_Kidhome
1732113   +          +    -0.16199331018171 * S_Mnt  +     0.01907816065296 *
1732114   +        S_MntFishProducts  +     -0.3821919957066 * S_MntFruits
1732115   +          +    -0.03370551533515 * S_MntGoldProds  +     1.07281355981991 *
1732116   +        S_MntMeatProducts  +    -0.13640457355292 * S_MntSweetProducts
1732117   +          +    -1.07230822345452 * S_MntWines  +      0.1487724512445 *
1732118   +        S_MonthsAsCustomer  +     1.00223132386414 * S_NumCatalogPurchases
1732119   +          +     1.34095732961105 * S_NumDealsPurchases
1732120   +          +     0.16605991333252 * S_NumDistPurchases
1732121   +          +    -0.61746267736536 * S_NumStorePurchases
1732122   +          +    -0.61812800689506 * S_NumWebPurchases
1732123   +          +     1.44649145055387 * S_NumWebVisitsMonth
1732124   +          +     0.71065354084884 * S_RFMstat  +     0.16160177747086 *
1732125   +        S_RMntFrq  +     -0.9427457293884 * S_Recency
1732126   +          +     0.02731657981524 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.83781385787802 * S_AcceptedCmpTotal + -0.24139142678243 * S_Age
+ 0.06099821217041 * S_Frq + 0.40208633787615 * S_Income + 0.51123266106809 * S_Kidhome +
-0.16199331018171 * S_Mnt + 0.01907816065296 * S_MntFishProducts + -0.3821919957066 *
S_MntFruits + -0.03370551533515 * S_MntGoldProds + 1.07281355981991 * S_MntMeatProducts +
-0.13640457355292 * S_MntSweetProducts + -1.07230822345452 * S_MntWines + 0.1487724512445 *
S_MonthsAsCustomer + 1.00223132386414 * S_NumCatalogPurchases + 1.34095732961105 *
S_NumDealsPurchases + 0.16605991333252 * S_NumDistPurchases + -0.61746267736536 *
S_NumStorePurchases + -0.61812800689506 * S_NumWebPurchases + 1.44649145055387 *
S_NumWebVisitsMonth + 0.71065354084884 * S_RFMstat + 0.16160177747086 * S_RMntFrq +
-0.9427457293884 * S_Recency + 0.02731657981524 * S_Teenhome ;
1732127   +   H12  =    -0.90907441149587 * S_AcceptedCmpTotal  +     -0.0457783940034 *
1732128   +        S_Age  +     0.27413524344715 * S_Frq  +    -0.43786159455637 *
1732129   +        S_Income  +     0.52295323651199 * S_Kidhome
1732130   +          +     0.16720640871174 * S_Mnt  +     0.90930001391122 *
1732131   +        S_MntFishProducts  +    -0.05099919369902 * S_MntFruits
1732132   +          +    -0.17081601037694 * S_MntGoldProds  +    -1.57312364500957 *
1732133   +        S_MntMeatProducts  +     -0.5081100411323 * S_MntSweetProducts
1732134   +          +     0.59764239237778 * S_MntWines  +     0.21825258246439 *
1732135   +        S_MonthsAsCustomer  +    -0.86944690807188 * S_NumCatalogPurchases
1732136   +          +    -0.72543332317832 * S_NumDealsPurchases
1732137   +          +    -0.05245472565117 * S_NumDistPurchases
1732138   +          +     1.00667431585298 * S_NumStorePurchases
1732139   +          +     1.02836701470962 * S_NumWebPurchases
1732140   +          +    -1.25666606219201 * S_NumWebVisitsMonth
1732141   +          +    -0.21335681545447 * S_RFMstat  +     0.10575177006447 *
1732142   +        S_RMntFrq  +     1.50910531484632 * S_Recency
1732143   +          +     0.35192762580497 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -0.90907441149587 * S_AcceptedCmpTotal + -0.0457783940034 * S_Age
+ 0.27413524344715 * S_Frq + -0.43786159455637 * S_Income + 0.52295323651199 * S_Kidhome +
0.16720640871174 * S_Mnt + 0.90930001391122 * S_MntFishProducts + -0.05099919369902 *
S_MntFruits + -0.17081601037694 * S_MntGoldProds + -1.57312364500957 * S_MntMeatProducts +
-0.5081100411323 * S_MntSweetProducts + 0.59764239237778 * S_MntWines + 0.21825258246439 *
S_MonthsAsCustomer + -0.86944690807188 * S_NumCatalogPurchases + -0.72543332317832 *
S_NumDealsPurchases + -0.05245472565117 * S_NumDistPurchases + 1.00667431585298 *
S_NumStorePurchases + 1.02836701470962 * S_NumWebPurchases + -1.25666606219201 *
S_NumWebVisitsMonth + -0.21335681545447 * S_RFMstat + 0.10575177006447 * S_RMntFrq +
1.50910531484632 * S_Recency + 0.35192762580497 * S_Teenhome ;
1732144   +   H13  =    -0.15164592837535 * S_AcceptedCmpTotal  +    -0.19703351726774 *
1732145   +        S_Age  +    -0.22367876273414 * S_Frq  +    -1.11408247891182 *
1732146   +        S_Income  +     0.58025720116696 * S_Kidhome
1732147   +          +     0.21614555339512 * S_Mnt  +    -0.15414755742285 *
1732148   +        S_MntFishProducts  +     0.16818356186813 * S_MntFruits
1732149   +          +     0.07314186249038 * S_MntGoldProds  +    -0.33939177015316 *
1732150   +        S_MntMeatProducts  +     0.29581112739013 * S_MntSweetProducts
1732151   +          +     0.30701920735867 * S_MntWines  +    -0.24397557348757 *
1732152   +        S_MonthsAsCustomer  +    -0.58962094283699 * S_NumCatalogPurchases
1732153   +          +     0.12670438262487 * S_NumDealsPurchases
1732154   +          +    -0.46113523834333 * S_NumDistPurchases
1732155   +          +     0.07074818720567 * S_NumStorePurchases
1732156   +          +    -0.05066645783537 * S_NumWebPurchases
1732157   +          +    -0.65729410185804 * S_NumWebVisitsMonth
1732158   +          +     0.08702511028701 * S_RFMstat  +    -0.39946503838688 *
1732159   +        S_RMntFrq  +      1.4337242246086 * S_Recency
1732160   +          +     0.88397808030072 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = -0.15164592837535 * S_AcceptedCmpTotal + -0.19703351726774 * S_Age
+ -0.22367876273414 * S_Frq + -1.11408247891182 * S_Income + 0.58025720116696 * S_Kidhome +
0.21614555339512 * S_Mnt + -0.15414755742285 * S_MntFishProducts + 0.16818356186813 *
S_MntFruits + 0.07314186249038 * S_MntGoldProds + -0.33939177015316 * S_MntMeatProducts +
0.29581112739013 * S_MntSweetProducts + 0.30701920735867 * S_MntWines + -0.24397557348757 *
S_MonthsAsCustomer + -0.58962094283699 * S_NumCatalogPurchases + 0.12670438262487 *
S_NumDealsPurchases + -0.46113523834333 * S_NumDistPurchases + 0.07074818720567 *
S_NumStorePurchases + -0.05066645783537 * S_NumWebPurchases + -0.65729410185804 *
S_NumWebVisitsMonth + 0.08702511028701 * S_RFMstat + -0.39946503838688 * S_RMntFrq +
1.4337242246086 * S_Recency + 0.88397808030072 * S_Teenhome ;
1732161   +   H11  = H11  +    -0.63147559208792 * AcceptedCmp10
1732162   +          +    -0.00204416332102 * AcceptedCmp20  +    -0.91272822301777 *
1732163   +        AcceptedCmp30  +    -0.24133711406692 * AcceptedCmp40
1732164   +          +    -0.11641744847547 * AcceptedCmp50  +     0.08815921371043 *
1732165   +        Complain0  +    -0.53095204316646 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.63147559208792 * AcceptedCmp10 + -0.00204416332102 *
AcceptedCmp20 + -0.91272822301777 * AcceptedCmp30 + -0.24133711406692 * AcceptedCmp40 +
-0.11641744847547 * AcceptedCmp50 + 0.08815921371043 * Complain0 + -0.53095204316646 *
HigherEducationBinary0 ;
1732166   +   H12  = H12  +     0.22426256838634 * AcceptedCmp10
1732167   +          +      0.0373678700446 * AcceptedCmp20  +    -0.34019580311077 *
1732168   +        AcceptedCmp30  +    -0.06657561018437 * AcceptedCmp40
1732169   +          +      1.1187666411593 * AcceptedCmp50  +     -0.0005124915346 *
1732170   +        Complain0  +    -0.07802187100635 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.22426256838634 * AcceptedCmp10 + 0.0373678700446 *
AcceptedCmp20 + -0.34019580311077 * AcceptedCmp30 + -0.06657561018437 * AcceptedCmp40 +
1.1187666411593 * AcceptedCmp50 + -0.0005124915346 * Complain0 + -0.07802187100635 *
HigherEducationBinary0 ;
1732171   +   H13  = H13  +     0.22922205033785 * AcceptedCmp10
1732172   +          +     0.61911667740136 * AcceptedCmp20  +      0.4334892671273 *
1732173   +        AcceptedCmp30  +     0.47499802255895 * AcceptedCmp40
1732174   +          +     0.09778924431294 * AcceptedCmp50  +     0.28935042910164 *
1732175   +        Complain0  +    -0.29804210825456 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.22922205033785 * AcceptedCmp10 + 0.61911667740136 *
AcceptedCmp20 + 0.4334892671273 * AcceptedCmp30 + 0.47499802255895 * AcceptedCmp40 +
0.09778924431294 * AcceptedCmp50 + 0.28935042910164 * Complain0 + -0.29804210825456 *
HigherEducationBinary0 ;
1732176   +   H11  = H11  +      0.0161257464845 * Education2n_Cycle
1732177   +          +     0.12153645157245 * EducationBasic  +     0.31018543557792 *
1732178   +        EducationGraduation  +    -0.04429611151736 * EducationMaster
1732179   +          +     0.12692950862511 * Marital_StatusDivorced
1732180   +          +     0.10026497666167 * Marital_StatusMarried
1732181   +          +    -0.19893864592813 * Marital_StatusSingle
1732182   +          +    -0.04062003397514 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.0161257464845 * Education2n_Cycle + 0.12153645157245 *
EducationBasic + 0.31018543557792 * EducationGraduation + -0.04429611151736 * EducationMaster
+ 0.12692950862511 * Marital_StatusDivorced + 0.10026497666167 * Marital_StatusMarried +
-0.19893864592813 * Marital_StatusSingle + -0.04062003397514 * Marital_StatusTogether ;
1732183   +   H12  = H12  +    -0.21839182894884 * Education2n_Cycle
1732184   +          +     0.31940013998474 * EducationBasic  +    -0.02690553782252 *
1732185   +        EducationGraduation  +     0.05580498138108 * EducationMaster
1732186   +          +    -0.16785192490199 * Marital_StatusDivorced
1732187   +          +     0.13153695130362 * Marital_StatusMarried
1732188   +          +    -0.50411544587104 * Marital_StatusSingle
1732189   +          +     0.13370566790692 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.21839182894884 * Education2n_Cycle + 0.31940013998474 *
EducationBasic + -0.02690553782252 * EducationGraduation + 0.05580498138108 * EducationMaster
+ -0.16785192490199 * Marital_StatusDivorced + 0.13153695130362 * Marital_StatusMarried +
-0.50411544587104 * Marital_StatusSingle + 0.13370566790692 * Marital_StatusTogether ;
1732190   +   H13  = H13  +     0.07130553159229 * Education2n_Cycle
1732191   +          +    -0.14879818143238 * EducationBasic  +     0.17822087456028 *
1732192   +        EducationGraduation  +     0.21882736952662 * EducationMaster
1732193   +          +    -0.62654958087044 * Marital_StatusDivorced
1732194   +          +     1.86250132393341 * Marital_StatusMarried
1732195   +          +    -1.37067556451928 * Marital_StatusSingle
1732196   +          +     1.14727921038174 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.07130553159229 * Education2n_Cycle + -0.14879818143238 *
EducationBasic + 0.17822087456028 * EducationGraduation + 0.21882736952662 * EducationMaster +
-0.62654958087044 * Marital_StatusDivorced + 1.86250132393341 * Marital_StatusMarried +
-1.37067556451928 * Marital_StatusSingle + 1.14727921038174 * Marital_StatusTogether ;
1732197   +   H11  =     -1.1990622461103 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -1.1990622461103 + H11 ;
1732198   +   H12  =       0.393123481714 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.393123481714 + H12 ;
1732199   +   H13  =     1.85498361608276 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = 1.85498361608276 + H13 ;
1732200   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1732201   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1732202   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1732203   +END;
MPRINT(EM_DIAGRAM):   END;
1732204   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1732205   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1732206   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1732207   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1732208   +END;
MPRINT(EM_DIAGRAM):   END;
1732209   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1732210   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1732211   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1732212   +
1732213   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1732214   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1732215   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1732216   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1732217   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1732218   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1732219   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1732220   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1732221   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1732222   +end;
MPRINT(EM_DIAGRAM):   end;
1732223   +else do;
MPRINT(EM_DIAGRAM):   else do;
1732224   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1732225   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1732226   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1732227   +   end;
MPRINT(EM_DIAGRAM):   end;
1732228   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1732229   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1732230   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1732231   +   end;
MPRINT(EM_DIAGRAM):   end;
1732232   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1732233   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1732234   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1732235   +   end;
MPRINT(EM_DIAGRAM):   end;
1732236   +end;
MPRINT(EM_DIAGRAM):   end;
1732237   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1732238   +   P_DepVar1  =     2.52409534738218 * H11  +    -2.96034283825043 * H12
1732239   +          +    -3.36424404783147 * H13 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 2.52409534738218 * H11 + -2.96034283825043 * H12 +
-3.36424404783147 * H13 ;
1732240   +   P_DepVar1  =    -0.20096847833731 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.20096847833731 + P_DepVar1 ;
1732241   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1732242   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1732243   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1732244   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1732245   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1732246   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1732247   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1732248   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1732249   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1732250   +END;
MPRINT(EM_DIAGRAM):   END;
1732251   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1732252   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1732253   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1732254   +END;
MPRINT(EM_DIAGRAM):   END;
1732255   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1732256   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1732257   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1732258   +END;
MPRINT(EM_DIAGRAM):   END;
1732259   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1732260   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1732261   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1732262   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1732263   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1732264   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1732265   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1732266   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1732267   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1732268   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1732269   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1732270   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1732271   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1732272   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1732273   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1732274   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1732275   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1732276   +END;
MPRINT(EM_DIAGRAM):   END;
1732277   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1732278   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1732279   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1732280   +drop
1732281   +H11
1732282   +H12
1732283   +H13
1732284   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 ;
1732285   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1732286   +* Renaming variables for Neural3;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural3;
1732287   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1732288   +* Renaming Posterior variables for Neural3;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural3;
1732289   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1732290   +drop Neural3_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural3_P_DepVar1;
1732291   +Neural3_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural3_P_DepVar1 = P_DepVar1;
1732292   +drop Neural3_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural3_P_DepVar0;
1732293   +Neural3_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural3_P_DepVar0 = P_DepVar0;
1732294   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1732295   +* Renaming Into variables for Neural3;
MPRINT(EM_DIAGRAM):   * Renaming Into variables for Neural3;
1732296   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1732297   +length Neural3_I_DepVar $32;
MPRINT(EM_DIAGRAM):   length Neural3_I_DepVar $32;
1732298   +drop Neural3_I_DepVar;
MPRINT(EM_DIAGRAM):   drop Neural3_I_DepVar;
1732299   +Neural3_I_DepVar = I_DepVar;
MPRINT(EM_DIAGRAM):   Neural3_I_DepVar = I_DepVar;
1732300   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1732301   +* Renaming _WARN_ variable for Neural3;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural3;
1732302   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1732303   +length Neural3_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural3_WARN_ $4;
1732304   +drop Neural3_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural3_WARN_;
1732305   +Neural3_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural3_WARN_ = _WARN_;
1732306   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1732307   +* Ensmbl30: Scoring Code of model 3 of 3;
MPRINT(EM_DIAGRAM):   * Ensmbl30: Scoring Code of model 3 of 3;
1732308   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1732309   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1732310   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
1732311   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1732312   +* NODE: Neural2;
MPRINT(EM_DIAGRAM):   * NODE: Neural2;
1732313   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1732314   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1732315   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1732316   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1732317   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1732318   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1732319   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1732320   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1732321   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1732322   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1732323   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1732324   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1732325   +LENGTH _WARN_ $4
1732326   +      F_DepVar  $ 12
1732327   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1732328   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1732329   +
1732330   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1732331   +
1732332   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1732333   +
1732334   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1732335   +
1732336   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1732337   +
1732338   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1732339   +
1732340   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1732341   +
1732342   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1732343   +
1732344   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1732345   +
1732346   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1732347   +
1732348   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1732349   +
1732350   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1732351   +
1732352   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1732353   +
1732354   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1732355   +
1732356   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1732357   +
1732358   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1732359   +
1732360   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1732361   +
1732362   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1732363   +
1732364   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1732365   +
1732366   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1732367   +
1732368   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1732369   +
1732370   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1732371   +
1732372   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1732373   +
1732374   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1732375   +
1732376   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1732377   +
1732378   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1732379   +
1732380   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1732381   +
1732382   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1732383   +
1732384   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1732385   +
1732386   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1732387   +
1732388   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1732389   +
1732390   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1732391   +
1732392   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1732393   +
1732394   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1732395   +
1732396   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1732397   +
1732398   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1732399   +
1732400   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1732401   +
1732402   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1732403   +
1732404   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1732405   +
1732406   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1732407   +
1732408   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1732409   +
1732410   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1732411   +
1732412   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1732413   +
1732414   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1732415   +
1732416   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1732417   +
1732418   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1732419   +
1732420   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1732421   +
1732422   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1732423   +
1732424   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1732425   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1732426   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1732427   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1732428   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1732429   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1732430   +end;
MPRINT(EM_DIAGRAM):   end;
1732431   +else do;
MPRINT(EM_DIAGRAM):   else do;
1732432   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1732433   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1732434   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1732435   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1732436   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1732437   +   end;
MPRINT(EM_DIAGRAM):   end;
1732438   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1732439   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1732440   +   end;
MPRINT(EM_DIAGRAM):   end;
1732441   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1732442   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1732443   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1732444   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1732445   +   end;
MPRINT(EM_DIAGRAM):   end;
1732446   +end;
MPRINT(EM_DIAGRAM):   end;
1732447   +
1732448   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1732449   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1732450   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1732451   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1732452   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1732453   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1732454   +end;
MPRINT(EM_DIAGRAM):   end;
1732455   +else do;
MPRINT(EM_DIAGRAM):   else do;
1732456   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1732457   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1732458   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1732459   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1732460   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1732461   +   end;
MPRINT(EM_DIAGRAM):   end;
1732462   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1732463   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1732464   +   end;
MPRINT(EM_DIAGRAM):   end;
1732465   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1732466   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1732467   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1732468   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1732469   +   end;
MPRINT(EM_DIAGRAM):   end;
1732470   +end;
MPRINT(EM_DIAGRAM):   end;
1732471   +
1732472   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1732473   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1732474   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1732475   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1732476   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1732477   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1732478   +end;
MPRINT(EM_DIAGRAM):   end;
1732479   +else do;
MPRINT(EM_DIAGRAM):   else do;
1732480   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1732481   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1732482   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1732483   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1732484   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1732485   +   end;
MPRINT(EM_DIAGRAM):   end;
1732486   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1732487   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1732488   +   end;
MPRINT(EM_DIAGRAM):   end;
1732489   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1732490   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1732491   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1732492   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1732493   +   end;
MPRINT(EM_DIAGRAM):   end;
1732494   +end;
MPRINT(EM_DIAGRAM):   end;
1732495   +
1732496   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1732497   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1732498   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1732499   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1732500   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1732501   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1732502   +end;
MPRINT(EM_DIAGRAM):   end;
1732503   +else do;
MPRINT(EM_DIAGRAM):   else do;
1732504   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1732505   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1732506   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1732507   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1732508   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1732509   +   end;
MPRINT(EM_DIAGRAM):   end;
1732510   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1732511   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1732512   +   end;
MPRINT(EM_DIAGRAM):   end;
1732513   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1732514   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1732515   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1732516   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1732517   +   end;
MPRINT(EM_DIAGRAM):   end;
1732518   +end;
MPRINT(EM_DIAGRAM):   end;
1732519   +
1732520   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1732521   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1732522   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1732523   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1732524   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1732525   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1732526   +end;
MPRINT(EM_DIAGRAM):   end;
1732527   +else do;
MPRINT(EM_DIAGRAM):   else do;
1732528   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1732529   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1732530   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1732531   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1732532   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1732533   +   end;
MPRINT(EM_DIAGRAM):   end;
1732534   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1732535   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1732536   +   end;
MPRINT(EM_DIAGRAM):   end;
1732537   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1732538   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1732539   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1732540   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1732541   +   end;
MPRINT(EM_DIAGRAM):   end;
1732542   +end;
MPRINT(EM_DIAGRAM):   end;
1732543   +
1732544   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1732545   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1732546   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1732547   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1732548   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1732549   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1732550   +end;
MPRINT(EM_DIAGRAM):   end;
1732551   +else do;
MPRINT(EM_DIAGRAM):   else do;
1732552   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1732553   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1732554   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1732555   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1732556   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1732557   +   end;
MPRINT(EM_DIAGRAM):   end;
1732558   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1732559   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1732560   +   end;
MPRINT(EM_DIAGRAM):   end;
1732561   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1732562   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1732563   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1732564   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1732565   +   end;
MPRINT(EM_DIAGRAM):   end;
1732566   +end;
MPRINT(EM_DIAGRAM):   end;
1732567   +
1732568   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1732569   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1732570   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1732571   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1732572   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1732573   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1732574   +end;
MPRINT(EM_DIAGRAM):   end;
1732575   +else do;
MPRINT(EM_DIAGRAM):   else do;
1732576   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1732577   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1732578   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1732579   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1732580   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1732581   +   end;
MPRINT(EM_DIAGRAM):   end;
1732582   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1732583   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1732584   +   end;
MPRINT(EM_DIAGRAM):   end;
1732585   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1732586   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1732587   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1732588   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1732589   +   end;
MPRINT(EM_DIAGRAM):   end;
1732590   +end;
MPRINT(EM_DIAGRAM):   end;
1732591   +
1732592   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1732593   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
1732594   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1732595   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1732596   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1732597   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1732598   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1732599   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1732600   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1732601   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1732602   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1732603   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1732604   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1732605   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1732606   +end;
MPRINT(EM_DIAGRAM):   end;
1732607   +else do;
MPRINT(EM_DIAGRAM):   else do;
1732608   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1732609   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1732610   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1732611   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1732612   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1732613   +   end;
MPRINT(EM_DIAGRAM):   end;
1732614   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1732615   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1732616   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1732617   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1732618   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1732619   +   end;
MPRINT(EM_DIAGRAM):   end;
1732620   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1732621   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1732622   +   end;
MPRINT(EM_DIAGRAM):   end;
1732623   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1732624   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1732625   +   end;
MPRINT(EM_DIAGRAM):   end;
1732626   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1732627   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1732628   +   end;
MPRINT(EM_DIAGRAM):   end;
1732629   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1732630   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1732631   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1732632   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1732633   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1732634   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1732635   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1732636   +   end;
MPRINT(EM_DIAGRAM):   end;
1732637   +end;
MPRINT(EM_DIAGRAM):   end;
1732638   +
1732639   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1732640   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1732641   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
1732642   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1732643   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1732644   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1732645   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1732646   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1732647   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1732648   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1732649   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1732650   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1732651   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1732652   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1732653   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1732654   +end;
MPRINT(EM_DIAGRAM):   end;
1732655   +else do;
MPRINT(EM_DIAGRAM):   else do;
1732656   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1732657   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1732658   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1732659   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1732660   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1732661   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1732662   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1732663   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1732664   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1732665   +         end;
MPRINT(EM_DIAGRAM):   end;
1732666   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1732667   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1732668   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1732669   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1732670   +            end;
MPRINT(EM_DIAGRAM):   end;
1732671   +         end;
MPRINT(EM_DIAGRAM):   end;
1732672   +      end;
MPRINT(EM_DIAGRAM):   end;
1732673   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1732674   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1732675   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1732676   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1732677   +         end;
MPRINT(EM_DIAGRAM):   end;
1732678   +      end;
MPRINT(EM_DIAGRAM):   end;
1732679   +   end;
MPRINT(EM_DIAGRAM):   end;
1732680   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1732681   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1732682   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1732683   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1732684   +      end;
MPRINT(EM_DIAGRAM):   end;
1732685   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1732686   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1732687   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1732688   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1732689   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1732690   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1732691   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1732692   +         end;
MPRINT(EM_DIAGRAM):   end;
1732693   +      end;
MPRINT(EM_DIAGRAM):   end;
1732694   +   end;
MPRINT(EM_DIAGRAM):   end;
1732695   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1732696   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1732697   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1732698   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1732699   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1732700   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1732701   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1732702   +   end;
MPRINT(EM_DIAGRAM):   end;
1732703   +end;
MPRINT(EM_DIAGRAM):   end;
1732704   +
1732705   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1732706   +*** Checking missing input Interval
1732707   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1732708   +
1732709   +IF NMISS(
1732710   +   AcceptedCmpTotal ,
1732711   +   Age ,
1732712   +   Frq ,
1732713   +   Income ,
1732714   +   Kidhome ,
1732715   +   Mnt ,
1732716   +   MntFishProducts ,
1732717   +   MntFruits ,
1732718   +   MntGoldProds ,
1732719   +   MntMeatProducts ,
1732720   +   MntSweetProducts ,
1732721   +   MntWines ,
1732722   +   MonthsAsCustomer ,
1732723   +   NumCatalogPurchases ,
1732724   +   NumDealsPurchases ,
1732725   +   NumDistPurchases ,
1732726   +   NumStorePurchases ,
1732727   +   NumWebPurchases ,
1732728   +   NumWebVisitsMonth ,
1732729   +   RFMstat ,
1732730   +   RMntFrq ,
1732731   +   Recency ,
1732732   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
1732733   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1732734   +
1732735   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1732736   +END;
MPRINT(EM_DIAGRAM):   END;
1732737   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1732738   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1732739   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1732740   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1732741   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1732742   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1732743   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1732744   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1732745   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1732746   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1732747   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1732748   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1732749   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1732750   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1732751   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1732752   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1732753   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1732754   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1732755   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1732756   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1732757   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1732758   +   S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
1732759   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 *
MonthsAsCustomer ;
1732760   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1732761   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1732762   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1732763   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1732764   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1732765   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1732766   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1732767   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1732768   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1732769   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1732770   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1732771   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1732772   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1732773   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1732774   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1732775   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1732776   +END;
MPRINT(EM_DIAGRAM):   END;
1732777   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1732778   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1732779   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1732780   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1732781   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1732782   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1732783   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1732784   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1732785   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1732786   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1732787   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1732788   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1732789   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1732790   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1732791   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1732792   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1732793   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1732794   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1732795   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1732796   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1732797   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1732798   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1732799   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
1732800   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1732801   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1732802   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1732803   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1732804   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1732805   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1732806   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1732807   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1732808   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1732809   +   ELSE S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
1732810   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 *
MonthsAsCustomer ;
1732811   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1732812   +   ELSE S_NumCatalogPurchases
1732813   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1732814   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1732815   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1732816   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1732817   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1732818   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1732819   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1732820   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1732821   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1732822   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1732823   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1732824   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1732825   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1732826   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1732827   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1732828   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1732829   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1732830   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1732831   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1732832   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1732833   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1732834   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1732835   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1732836   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1732837   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1732838   +END;
MPRINT(EM_DIAGRAM):   END;
1732839   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1732840   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1732841   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1732842   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1732843   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1732844   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1732845   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1732846   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1732847   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1732848   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1732849   +   H11  =     0.29832012449804 * S_AcceptedCmpTotal  +     0.15692046705022 *
1732850   +        S_Age  +      0.2349092670043 * S_Frq  +     1.19016389982628 *
1732851   +        S_Income  +    -1.07615700855274 * S_Kidhome
1732852   +          +    -0.33525941199741 * S_Mnt  +    -0.11896237449995 *
1732853   +        S_MntFishProducts  +    -0.05881189485031 * S_MntFruits
1732854   +          +    -0.04848284440297 * S_MntGoldProds  +     0.36672196891436 *
1732855   +        S_MntMeatProducts  +    -0.21996224739852 * S_MntSweetProducts
1732856   +          +    -0.60947028245288 * S_MntWines  +    -0.00068050663419 *
1732857   +        S_MonthsAsCustomer  +     0.54450402479339 * S_NumCatalogPurchases
1732858   +          +      0.3429043319369 * S_NumDealsPurchases
1732859   +          +     0.71313309767469 * S_NumDistPurchases
1732860   +          +     0.06017757740083 * S_NumStorePurchases
1732861   +          +    -0.19817724925068 * S_NumWebPurchases
1732862   +          +     1.34164122205952 * S_NumWebVisitsMonth
1732863   +          +    -0.01000866410417 * S_RFMstat  +      1.1678492086198 *
1732864   +        S_RMntFrq  +     -1.5774263784376 * S_Recency
1732865   +          +    -0.86503713663798 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.29832012449804 * S_AcceptedCmpTotal + 0.15692046705022 * S_Age +
0.2349092670043 * S_Frq + 1.19016389982628 * S_Income + -1.07615700855274 * S_Kidhome +
-0.33525941199741 * S_Mnt + -0.11896237449995 * S_MntFishProducts + -0.05881189485031 *
S_MntFruits + -0.04848284440297 * S_MntGoldProds + 0.36672196891436 * S_MntMeatProducts +
-0.21996224739852 * S_MntSweetProducts + -0.60947028245288 * S_MntWines + -0.00068050663419 *
S_MonthsAsCustomer + 0.54450402479339 * S_NumCatalogPurchases + 0.3429043319369 *
S_NumDealsPurchases + 0.71313309767469 * S_NumDistPurchases + 0.06017757740083 *
S_NumStorePurchases + -0.19817724925068 * S_NumWebPurchases + 1.34164122205952 *
S_NumWebVisitsMonth + -0.01000866410417 * S_RFMstat + 1.1678492086198 * S_RMntFrq +
-1.5774263784376 * S_Recency + -0.86503713663798 * S_Teenhome ;
1732866   +   H12  =     0.31490280577029 * S_AcceptedCmpTotal  +    -0.09111153110919 *
1732867   +        S_Age  +    -0.16055597693761 * S_Frq  +     0.10319479451271 *
1732868   +        S_Income  +     -0.0027232441092 * S_Kidhome
1732869   +          +    -0.62384470029952 * S_Mnt  +    -0.04454372411008 *
1732870   +        S_MntFishProducts  +    -0.24996025343988 * S_MntFruits
1732871   +          +    -0.01365003759591 * S_MntGoldProds  +     0.62835016670964 *
1732872   +        S_MntMeatProducts  +     -0.1052005092038 * S_MntSweetProducts
1732873   +          +    -1.14216465806662 * S_MntWines  +    -0.05060158666038 *
1732874   +        S_MonthsAsCustomer  +     0.67098319001245 * S_NumCatalogPurchases
1732875   +          +      0.4576973746858 * S_NumDealsPurchases
1732876   +          +     0.15590877272659 * S_NumDistPurchases
1732877   +          +    -0.33414539713736 * S_NumStorePurchases
1732878   +          +    -0.39370244666257 * S_NumWebPurchases
1732879   +          +     0.52596714886704 * S_NumWebVisitsMonth
1732880   +          +     0.20790882491682 * S_RFMstat  +     0.70718304112796 *
1732881   +        S_RMntFrq  +    -0.55973256565759 * S_Recency
1732882   +          +    -0.02572672808252 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = 0.31490280577029 * S_AcceptedCmpTotal + -0.09111153110919 * S_Age
+ -0.16055597693761 * S_Frq + 0.10319479451271 * S_Income + -0.0027232441092 * S_Kidhome +
-0.62384470029952 * S_Mnt + -0.04454372411008 * S_MntFishProducts + -0.24996025343988 *
S_MntFruits + -0.01365003759591 * S_MntGoldProds + 0.62835016670964 * S_MntMeatProducts +
-0.1052005092038 * S_MntSweetProducts + -1.14216465806662 * S_MntWines + -0.05060158666038 *
S_MonthsAsCustomer + 0.67098319001245 * S_NumCatalogPurchases + 0.4576973746858 *
S_NumDealsPurchases + 0.15590877272659 * S_NumDistPurchases + -0.33414539713736 *
S_NumStorePurchases + -0.39370244666257 * S_NumWebPurchases + 0.52596714886704 *
S_NumWebVisitsMonth + 0.20790882491682 * S_RFMstat + 0.70718304112796 * S_RMntFrq +
-0.55973256565759 * S_Recency + -0.02572672808252 * S_Teenhome ;
1732883   +   H11  = H11  +    -0.25877430314813 * AcceptedCmp10
1732884   +          +     -0.6949843667221 * AcceptedCmp20  +    -0.57934320804112 *
1732885   +        AcceptedCmp30  +    -0.51703039002497 * AcceptedCmp40
1732886   +          +    -0.28854562528092 * AcceptedCmp50  +    -0.24441198875632 *
1732887   +        Complain0  +     0.22905299573529 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.25877430314813 * AcceptedCmp10 + -0.6949843667221 *
AcceptedCmp20 + -0.57934320804112 * AcceptedCmp30 + -0.51703039002497 * AcceptedCmp40 +
-0.28854562528092 * AcceptedCmp50 + -0.24441198875632 * Complain0 + 0.22905299573529 *
HigherEducationBinary0 ;
1732888   +   H12  = H12  +    -0.36418677755527 * AcceptedCmp10
1732889   +          +    -0.33815290545566 * AcceptedCmp20  +    -0.02820722241017 *
1732890   +        AcceptedCmp30  +      0.0020982855306 * AcceptedCmp40
1732891   +          +    -0.12224106432236 * AcceptedCmp50  +    -0.06102493109146 *
1732892   +        Complain0  +    -0.17583153481867 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.36418677755527 * AcceptedCmp10 + -0.33815290545566 *
AcceptedCmp20 + -0.02820722241017 * AcceptedCmp30 + 0.0020982855306 * AcceptedCmp40 +
-0.12224106432236 * AcceptedCmp50 + -0.06102493109146 * Complain0 + -0.17583153481867 *
HigherEducationBinary0 ;
1732893   +   H11  = H11  +     0.04231863714836 * Education2n_Cycle
1732894   +          +     0.10274571656153 * EducationBasic  +    -0.09649867506574 *
1732895   +        EducationGraduation  +      -0.333138438339 * EducationMaster
1732896   +          +      0.4663802937397 * Marital_StatusDivorced
1732897   +          +    -1.27401898796099 * Marital_StatusMarried
1732898   +          +      1.3125969368079 * Marital_StatusSingle
1732899   +          +     -0.9460069950427 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.04231863714836 * Education2n_Cycle + 0.10274571656153 *
EducationBasic + -0.09649867506574 * EducationGraduation + -0.333138438339 * EducationMaster +
0.4663802937397 * Marital_StatusDivorced + -1.27401898796099 * Marital_StatusMarried +
1.3125969368079 * Marital_StatusSingle + -0.9460069950427 * Marital_StatusTogether ;
1732900   +   H12  = H12  +     0.04207507898653 * Education2n_Cycle
1732901   +          +    -0.00061313728148 * EducationBasic  +     0.02179374448207 *
1732902   +        EducationGraduation  +     0.00771527138053 * EducationMaster
1732903   +          +     0.07419179522004 * Marital_StatusDivorced
1732904   +          +     0.00234615813337 * Marital_StatusMarried
1732905   +          +    -0.00725460458412 * Marital_StatusSingle
1732906   +          +    -0.02397482300018 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.04207507898653 * Education2n_Cycle + -0.00061313728148 *
EducationBasic + 0.02179374448207 * EducationGraduation + 0.00771527138053 * EducationMaster +
0.07419179522004 * Marital_StatusDivorced + 0.00234615813337 * Marital_StatusMarried +
-0.00725460458412 * Marital_StatusSingle + -0.02397482300018 * Marital_StatusTogether ;
1732907   +   H11  =    -2.08419455884264 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -2.08419455884264 + H11 ;
1732908   +   H12  =    -0.67124132448844 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -0.67124132448844 + H12 ;
1732909   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1732910   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1732911   +END;
MPRINT(EM_DIAGRAM):   END;
1732912   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1732913   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1732914   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1732915   +END;
MPRINT(EM_DIAGRAM):   END;
1732916   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1732917   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1732918   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1732919   +
1732920   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1732921   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1732922   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1732923   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1732924   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1732925   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1732926   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1732927   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1732928   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1732929   +end;
MPRINT(EM_DIAGRAM):   end;
1732930   +else do;
MPRINT(EM_DIAGRAM):   else do;
1732931   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1732932   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1732933   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1732934   +   end;
MPRINT(EM_DIAGRAM):   end;
1732935   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1732936   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1732937   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1732938   +   end;
MPRINT(EM_DIAGRAM):   end;
1732939   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1732940   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1732941   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1732942   +   end;
MPRINT(EM_DIAGRAM):   end;
1732943   +end;
MPRINT(EM_DIAGRAM):   end;
1732944   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1732945   +   P_DepVar1  =     5.63543253335428 * H11  +     6.13213445041394 * H12 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 5.63543253335428 * H11 + 6.13213445041394 * H12 ;
1732946   +   P_DepVar1  =     3.20970411510782 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 3.20970411510782 + P_DepVar1 ;
1732947   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1732948   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1732949   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1732950   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1732951   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1732952   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1732953   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1732954   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1732955   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1732956   +END;
MPRINT(EM_DIAGRAM):   END;
1732957   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1732958   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1732959   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1732960   +END;
MPRINT(EM_DIAGRAM):   END;
1732961   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1732962   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1732963   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1732964   +END;
MPRINT(EM_DIAGRAM):   END;
1732965   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1732966   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1732967   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1732968   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1732969   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1732970   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1732971   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1732972   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1732973   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1732974   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1732975   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1732976   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1732977   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1732978   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1732979   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1732980   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1732981   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1732982   +END;
MPRINT(EM_DIAGRAM):   END;
1732983   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1732984   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1732985   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1732986   +drop
1732987   +H11
1732988   +H12
1732989   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 ;
1732990   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1732991   +* Renaming variables for Neural2;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural2;
1732992   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1732993   +* Renaming Posterior variables for Neural2;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural2;
1732994   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1732995   +drop Neural2_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural2_P_DepVar1;
1732996   +Neural2_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural2_P_DepVar1 = P_DepVar1;
1732997   +drop Neural2_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural2_P_DepVar0;
1732998   +Neural2_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural2_P_DepVar0 = P_DepVar0;
1732999   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1733000   +* Renaming Into variables for Neural2;
MPRINT(EM_DIAGRAM):   * Renaming Into variables for Neural2;
1733001   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1733002   +length Neural2_I_DepVar $32;
MPRINT(EM_DIAGRAM):   length Neural2_I_DepVar $32;
1733003   +drop Neural2_I_DepVar;
MPRINT(EM_DIAGRAM):   drop Neural2_I_DepVar;
1733004   +Neural2_I_DepVar = I_DepVar;
MPRINT(EM_DIAGRAM):   Neural2_I_DepVar = I_DepVar;
1733005   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1733006   +* Renaming _WARN_ variable for Neural2;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural2;
1733007   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1733008   +length Neural2_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural2_WARN_ $4;
1733009   +drop Neural2_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural2_WARN_;
1733010   +Neural2_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural2_WARN_ = _WARN_;
1733011   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1733012   +* Ensmbl30: Voting to produce predicted target;
MPRINT(EM_DIAGRAM):   * Ensmbl30: Voting to produce predicted target;
1733013   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1733014   +array Ensmbl30_post{2} _temporary_;
MPRINT(EM_DIAGRAM):   array Ensmbl30_post{2} _temporary_;
1733015   +array Ensmbl30_count{2} _temporary_;
MPRINT(EM_DIAGRAM):   array Ensmbl30_count{2} _temporary_;
1733016   +array Ensmbl30_level{2} $32 _temporary_ (
1733017   +"1"
1733018   +"0"
1733019   +);
MPRINT(EM_DIAGRAM):   array Ensmbl30_level{2} $32 _temporary_ ( "1" "0" );
1733020   +do i=1 to 2;
MPRINT(EM_DIAGRAM):   do i=1 to 2;
1733021   +Ensmbl30_post{i} = 0;
MPRINT(EM_DIAGRAM):   Ensmbl30_post{i} = 0;
1733022   +Ensmbl30_count{i} = 0;
MPRINT(EM_DIAGRAM):   Ensmbl30_count{i} = 0;
1733023   +end;
MPRINT(EM_DIAGRAM):   end;
1733024   +if Neural9_I_DepVar = Ensmbl30_level{1} then do;
MPRINT(EM_DIAGRAM):   if Neural9_I_DepVar = Ensmbl30_level{1} then do;
1733025   +Ensmbl30_count{1} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl30_count{1} + 1;
1733026   +Ensmbl30_post{1}=Ensmbl30_post{1}+ Neural9_P_DepVar1;
MPRINT(EM_DIAGRAM):   Ensmbl30_post{1}=Ensmbl30_post{1}+ Neural9_P_DepVar1;
1733027   +end;
MPRINT(EM_DIAGRAM):   end;
1733028   +if Neural3_I_DepVar = Ensmbl30_level{1} then do;
MPRINT(EM_DIAGRAM):   if Neural3_I_DepVar = Ensmbl30_level{1} then do;
1733029   +Ensmbl30_count{1} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl30_count{1} + 1;
1733030   +Ensmbl30_post{1}=Ensmbl30_post{1}+ Neural3_P_DepVar1;
MPRINT(EM_DIAGRAM):   Ensmbl30_post{1}=Ensmbl30_post{1}+ Neural3_P_DepVar1;
1733031   +end;
MPRINT(EM_DIAGRAM):   end;
1733032   +if Neural2_I_DepVar = Ensmbl30_level{1} then do;
MPRINT(EM_DIAGRAM):   if Neural2_I_DepVar = Ensmbl30_level{1} then do;
1733033   +Ensmbl30_count{1} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl30_count{1} + 1;
1733034   +Ensmbl30_post{1}=Ensmbl30_post{1}+ Neural2_P_DepVar1;
MPRINT(EM_DIAGRAM):   Ensmbl30_post{1}=Ensmbl30_post{1}+ Neural2_P_DepVar1;
1733035   +end;
MPRINT(EM_DIAGRAM):   end;
1733036   +if Neural9_I_DepVar = Ensmbl30_level{2} then do;
MPRINT(EM_DIAGRAM):   if Neural9_I_DepVar = Ensmbl30_level{2} then do;
1733037   +Ensmbl30_count{2} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl30_count{2} + 1;
1733038   +Ensmbl30_post{2}=Ensmbl30_post{2}+ Neural9_P_DepVar0;
MPRINT(EM_DIAGRAM):   Ensmbl30_post{2}=Ensmbl30_post{2}+ Neural9_P_DepVar0;
1733039   +end;
MPRINT(EM_DIAGRAM):   end;
1733040   +if Neural3_I_DepVar = Ensmbl30_level{2} then do;
MPRINT(EM_DIAGRAM):   if Neural3_I_DepVar = Ensmbl30_level{2} then do;
1733041   +Ensmbl30_count{2} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl30_count{2} + 1;
1733042   +Ensmbl30_post{2}=Ensmbl30_post{2}+ Neural3_P_DepVar0;
MPRINT(EM_DIAGRAM):   Ensmbl30_post{2}=Ensmbl30_post{2}+ Neural3_P_DepVar0;
1733043   +end;
MPRINT(EM_DIAGRAM):   end;
1733044   +if Neural2_I_DepVar = Ensmbl30_level{2} then do;
MPRINT(EM_DIAGRAM):   if Neural2_I_DepVar = Ensmbl30_level{2} then do;
1733045   +Ensmbl30_count{2} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl30_count{2} + 1;
1733046   +Ensmbl30_post{2}=Ensmbl30_post{2}+ Neural2_P_DepVar0;
MPRINT(EM_DIAGRAM):   Ensmbl30_post{2}=Ensmbl30_post{2}+ Neural2_P_DepVar0;
1733047   +end;
MPRINT(EM_DIAGRAM):   end;
1733048   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1733049   +* Ensmbl30: Determine Into Variable;
MPRINT(EM_DIAGRAM):   * Ensmbl30: Determine Into Variable;
1733050   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1733051   +length I_DepVar $32;
MPRINT(EM_DIAGRAM):   length I_DepVar $32;
WARNING: Length of character variable I_DepVar has already been set.
         Use the LENGTH statement as the very first statement in the DATA STEP to declare the
         length of a character variable.
1733052   +drop i vote_count vote_post;
MPRINT(EM_DIAGRAM):   drop i vote_count vote_post;
1733053   +vote_count = max(
1733054   +Ensmbl30_count{1} ,
1733055   +Ensmbl30_count{2}
1733056   +);
MPRINT(EM_DIAGRAM):   vote_count = max( Ensmbl30_count{1} , Ensmbl30_count{2} );
1733057   +do i=1 to 2;
MPRINT(EM_DIAGRAM):   do i=1 to 2;
1733058   +if Ensmbl30_count{i}=vote_count and Ensmbl30_post{i}>vote_post then do;
MPRINT(EM_DIAGRAM):   if Ensmbl30_count{i}=vote_count and Ensmbl30_post{i}>vote_post then do;
1733059   +I_DepVar = Ensmbl30_level{i};
MPRINT(EM_DIAGRAM):   I_DepVar = Ensmbl30_level{i};
1733060   +vote_post = Ensmbl30_count{i};
MPRINT(EM_DIAGRAM):   vote_post = Ensmbl30_count{i};
1733061   +end;
MPRINT(EM_DIAGRAM):   end;
1733062   +end;
MPRINT(EM_DIAGRAM):   end;
1733063   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1733064   +* Ensmbl30: Compute posterior vars using models predicting the chosen level;
MPRINT(EM_DIAGRAM):   * Ensmbl30: Compute posterior vars using models predicting the chosen
level;
1733065   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1733066   +P_DepVar1 = 0;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0;
1733067   +P_DepVar0 = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1733068   +if I_DepVar = Neural9_I_DepVar then do;
MPRINT(EM_DIAGRAM):   if I_DepVar = Neural9_I_DepVar then do;
1733069   +P_DEPVAR1 = P_DEPVAR1 + Neural9_P_DepVar1;
MPRINT(EM_DIAGRAM):   P_DEPVAR1 = P_DEPVAR1 + Neural9_P_DepVar1;
1733070   +P_DEPVAR0 = P_DEPVAR0 + Neural9_P_DepVar0;
MPRINT(EM_DIAGRAM):   P_DEPVAR0 = P_DEPVAR0 + Neural9_P_DepVar0;
1733071   +end;
MPRINT(EM_DIAGRAM):   end;
1733072   +if I_DepVar = Neural3_I_DepVar then do;
MPRINT(EM_DIAGRAM):   if I_DepVar = Neural3_I_DepVar then do;
1733073   +P_DEPVAR1 = P_DEPVAR1 + Neural3_P_DepVar1;
MPRINT(EM_DIAGRAM):   P_DEPVAR1 = P_DEPVAR1 + Neural3_P_DepVar1;
1733074   +P_DEPVAR0 = P_DEPVAR0 + Neural3_P_DepVar0;
MPRINT(EM_DIAGRAM):   P_DEPVAR0 = P_DEPVAR0 + Neural3_P_DepVar0;
1733075   +end;
MPRINT(EM_DIAGRAM):   end;
1733076   +if I_DepVar = Neural2_I_DepVar then do;
MPRINT(EM_DIAGRAM):   if I_DepVar = Neural2_I_DepVar then do;
1733077   +P_DEPVAR1 = P_DEPVAR1 + Neural2_P_DepVar1;
MPRINT(EM_DIAGRAM):   P_DEPVAR1 = P_DEPVAR1 + Neural2_P_DepVar1;
1733078   +P_DEPVAR0 = P_DEPVAR0 + Neural2_P_DepVar0;
MPRINT(EM_DIAGRAM):   P_DEPVAR0 = P_DEPVAR0 + Neural2_P_DepVar0;
1733079   +end;
MPRINT(EM_DIAGRAM):   end;
1733080   +* Ensmbl30: Averaging posterior;
MPRINT(EM_DIAGRAM):   * Ensmbl30: Averaging posterior;
1733081   +P_DepVar1 = P_DepVar1/vote_count;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1/vote_count;
1733082   +P_DepVar0 = P_DepVar0/vote_count;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0/vote_count;
1733083   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1733084   +* Ensmbl30: Producing Unformatted variable;
MPRINT(EM_DIAGRAM):   * Ensmbl30: Producing Unformatted variable;
1733085   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1733086   +label U_DepVar = "Unnormalized Into: DepVar";
MPRINT(EM_DIAGRAM):   label U_DepVar = "Unnormalized Into: DepVar";
1733087   +if I_DepVar = '1' then U_DepVar = 1;
MPRINT(EM_DIAGRAM):   if I_DepVar = '1' then U_DepVar = 1;
1733088   +else
1733089   +if I_DepVar = '0' then U_DepVar = 0;
MPRINT(EM_DIAGRAM):   else if I_DepVar = '0' then U_DepVar = 0;
1733090   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1733091   +* Ensmbl30: Computing _WARN_ Variable;
MPRINT(EM_DIAGRAM):   * Ensmbl30: Computing _WARN_ Variable;
1733092   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1733093   +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
1733094   +label _WARN_ = 'Warnings';
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings';
1733095   +_WARN_ = '';
MPRINT(EM_DIAGRAM):   _WARN_ = '';
1733096   +if index(NEURAL9_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(NEURAL9_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_,
1, 1) ='M';
1733097   +if index(NEURAL9_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(NEURAL9_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_,
2, 1) ='U';
1733098   +if index(NEURAL9_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(NEURAL9_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_,
3, 1) ='P';
1733099   +if index(NEURAL9_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(NEURAL9_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_,
4, 1) ='C';
1733100   +if index(NEURAL3_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(NEURAL3_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_,
1, 1) ='M';
1733101   +if index(NEURAL3_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(NEURAL3_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_,
2, 1) ='U';
1733102   +if index(NEURAL3_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(NEURAL3_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_,
3, 1) ='P';
1733103   +if index(NEURAL3_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(NEURAL3_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_,
4, 1) ='C';
1733104   +if index(NEURAL2_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(NEURAL2_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_,
1, 1) ='M';
1733105   +if index(NEURAL2_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(NEURAL2_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_,
2, 1) ='U';
1733106   +if index(NEURAL2_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(NEURAL2_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_,
3, 1) ='P';
1733107   +if index(NEURAL2_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(NEURAL2_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_,
4, 1) ='C';
1733108   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1733109   +* Ensmbl30: Computing Residual Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl30: Computing Residual Vars;
1733110   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1733111   +if
1733112   +F_DepVar NE '1'
1733113   +AND F_DepVar NE '0'
1733114   +then do;
MPRINT(EM_DIAGRAM):   if F_DepVar NE '1' AND F_DepVar NE '0' then do;
1733115   +R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
1733116   +R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
1733117   +end;
MPRINT(EM_DIAGRAM):   end;
1733118   +else do;
MPRINT(EM_DIAGRAM):   else do;
1733119   +R_DepVar1 = -P_DepVar1;
MPRINT(EM_DIAGRAM):   R_DepVar1 = -P_DepVar1;
1733120   +R_DepVar0 = -P_DepVar0;
MPRINT(EM_DIAGRAM):   R_DepVar0 = -P_DepVar0;
1733121   +SELECT(F_DepVar);
MPRINT(EM_DIAGRAM):   SELECT(F_DepVar);
1733122   +WHEN('1') R_DepVar1 = R_DepVar1 +1;
MPRINT(EM_DIAGRAM):   WHEN('1') R_DepVar1 = R_DepVar1 +1;
1733123   +WHEN('0') R_DepVar0 = R_DepVar0 +1;
MPRINT(EM_DIAGRAM):   WHEN('0') R_DepVar0 = R_DepVar0 +1;
1733124   +OTHERWISE;
MPRINT(EM_DIAGRAM):   OTHERWISE;
1733125   +END;
MPRINT(EM_DIAGRAM):   END;
1733126   +END;
MPRINT(EM_DIAGRAM):   END;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1733127    run;
 
NOTE: DATA STEP view saved on file EMWS8.ENSMBL30_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.NEURAL9_VALIDATE.VIEW used (Total process time):
      real time           0.12 seconds
      cpu time            0.12 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.14 seconds
      cpu time            0.14 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1733128    quit;
1733129    filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
MPRINT(EM_DIAGRAM):
MPRINT(CALFITSTATSNOMINAL):   data _tmpTrainFitTable(keep=_TARGET_ _ASE_ _DIV_ _MAX_ _NOBS_
_RASE_ _SSE_ _DISF_ _MISC_ _WRONG_ rename=(_TARGET_=TARGET));
MPRINT(CALFITSTATSNOMINAL):   set EMWS8.Ensmbl30_TRAIN end=eof;
MPRINT(CALFITSTATSNOMINAL):   length _TARGET_ $32;
MPRINT(CALFITSTATSNOMINAL):   length _ASE_ _DIV_ _MAX_ _NOBS_ _RASE_ _SSE_ _DISF_ _MISC_
_WRONG_ 8;
MPRINT(CALFITSTATSNOMINAL):   label _TARGET_ = "Train: Target Variable" _NOBS_= "Train: Sum of
Frequencies" _SSE_= "Train: Sum of Squared Errors" _MAX_= "Train: Maximum Absolute Error"
_DIV_ = "Train: Divisor for ASE" _WRONG_= "Train: Number of Wrong Classifications" _DISF_=
"Train: Frequency of Classified Cases" _MISC_= "Train: Misclassification Rate" _ASE_ = "Train:
Average Squared Error" _RASE_ = "Train: Root Average Squared Error";
MPRINT(CALFITSTATSNOMINAL):   retain _TARGET_ _WRONG_ _DIV_ _MAX_ _SSE_ _DISF_ _MISC_ _ASE_
_RASE_ ;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar1 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar1)*(R_DepVar1);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar1));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar0 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar0)*(R_DepVar0);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar0));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if F_DepVar ne "" then do;
MPRINT(CALFITSTATSNOMINAL):   _DISF_+ 1;
MPRINT(CALFITSTATSNOMINAL):   _WRONG_+(F_DepVar ne I_DepVar);
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if eof then do;
MPRINT(CALFITSTATSNOMINAL):   _TARGET_ = "DepVar";
MPRINT(CALFITSTATSNOMINAL):   _MAX = 0;
MPRINT(CALFITSTATSNOMINAL):   if _DISF_ ne 0 then do;
MPRINT(CALFITSTATSNOMINAL):   _MISC_=_WRONG_/_DISF_;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   _NOBS_ = _DIV_/2;
MPRINT(CALFITSTATSNOMINAL):   _ASE_=_SSE_/_DIV_;
MPRINT(CALFITSTATSNOMINAL):   _RASE_=sqrt(_ASE_);
MPRINT(CALFITSTATSNOMINAL):   output;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl30_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set _tmpTrainFitTable;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):
MPRINT(CALFITSTATSNOMINAL):   data _tmpValidFitTable(keep=_TARGET_ _ASE_ _DIV_ _MAX_ _NOBS_
_RASE_ _SSE_ _DISF_ _MISC_ _WRONG_ rename=(_TARGET_=TARGET));
MPRINT(CALFITSTATSNOMINAL):   set EMWS8.Ensmbl30_VALIDATE end=eof;
MPRINT(CALFITSTATSNOMINAL):   length _TARGET_ $32;
MPRINT(CALFITSTATSNOMINAL):   length _ASE_ _DIV_ _MAX_ _NOBS_ _RASE_ _SSE_ _DISF_ _MISC_
_WRONG_ 8;
MPRINT(CALFITSTATSNOMINAL):   label _TARGET_ = "Valid: Target Variable" _NOBS_= "Valid: Sum of
Frequencies" _SSE_= "Valid: Sum of Squared Errors" _MAX_= "Valid: Maximum Absolute Error"
_DIV_ = "Valid: Divisor for ASE" _WRONG_= "Valid: Number of Wrong Classifications" _DISF_=
"Valid: Frequency of Classified Cases" _MISC_= "Valid: Misclassification Rate" _ASE_ = "Valid:
Average Squared Error" _RASE_ = "Valid: Root Average Squared Error";
MPRINT(CALFITSTATSNOMINAL):   retain _TARGET_ _WRONG_ _DIV_ _MAX_ _SSE_ _DISF_ _MISC_ _ASE_
_RASE_ ;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar1 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar1)*(R_DepVar1);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar1));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar0 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar0)*(R_DepVar0);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar0));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if F_DepVar ne "" then do;
MPRINT(CALFITSTATSNOMINAL):   _DISF_+ 1;
MPRINT(CALFITSTATSNOMINAL):   _WRONG_+(F_DepVar ne I_DepVar);
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if eof then do;
MPRINT(CALFITSTATSNOMINAL):   _TARGET_ = "DepVar";
MPRINT(CALFITSTATSNOMINAL):   _MAX = 0;
MPRINT(CALFITSTATSNOMINAL):   if _DISF_ ne 0 then do;
MPRINT(CALFITSTATSNOMINAL):   _MISC_=_WRONG_/_DISF_;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   _NOBS_ = _DIV_/2;
MPRINT(CALFITSTATSNOMINAL):   _ASE_=_SSE_/_DIV_;
MPRINT(CALFITSTATSNOMINAL):   _RASE_=sqrt(_ASE_);
MPRINT(CALFITSTATSNOMINAL):   output;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data _tmpdata_(DROP= TARGET);
MPRINT(EM_DIAGRAM):   set _tmpValidFitTable;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _tmpdata_;
MPRINT(EM_DIAGRAM):   set _tmpdata_;
MPRINT(EM_DIAGRAM):   rename _ASE_=_VASE_;
MPRINT(EM_DIAGRAM):   rename _DIV_=_VDIV_;
MPRINT(EM_DIAGRAM):   rename _MAX_=_VMAX_;
MPRINT(EM_DIAGRAM):   rename _NOBS_=_VNOBS_;
MPRINT(EM_DIAGRAM):   rename _RASE_=_VRASE_;
MPRINT(EM_DIAGRAM):   rename _SSE_=_VSSE_;
MPRINT(EM_DIAGRAM):   rename _DISF_=_VDISF_;
MPRINT(EM_DIAGRAM):   rename _MISC_=_VMISC_;
MPRINT(EM_DIAGRAM):   rename _WRONG_=_VWRONG_;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl30_EMOUTFIT;
MPRINT(EM_DIAGRAM):   merge EMWS8.Ensmbl30_EMOUTFIT _tmpdata_;
MPRINT(EM_DIAGRAM):   run;
1733189    filename _pref
1733189  ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural9\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Neural9\EMPUBLISHSCORE.sas";
1733190    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1733191    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Neural9\EMPUBLISHSCORE.sas.
1733192   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1733193   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1733194   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1733195   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1733196   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1733197   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1733198   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1733199   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1733200   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1733201   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1733202   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1733203   +LENGTH _WARN_ $4
1733204   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
1733205   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1733206   +
1733207   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1733208   +
1733209   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1733210   +
1733211   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1733212   +
1733213   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1733214   +
1733215   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1733216   +
1733217   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1733218   +
1733219   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1733220   +
1733221   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1733222   +
1733223   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1733224   +
1733225   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1733226   +
1733227   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1733228   +
1733229   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1733230   +
1733231   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1733232   +
1733233   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1733234   +
1733235   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1733236   +
1733237   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1733238   +
1733239   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1733240   +
1733241   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1733242   +
1733243   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1733244   +
1733245   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1733246   +
1733247   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1733248   +
1733249   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1733250   +
1733251   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1733252   +
1733253   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1733254   +
1733255   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1733256   +
1733257   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1733258   +
1733259   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1733260   +
1733261   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1733262   +
1733263   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1733264   +
1733265   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1733266   +
1733267   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1733268   +
1733269   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1733270   +
1733271   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1733272   +
1733273   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1733274   +
1733275   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1733276   +
1733277   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1733278   +
1733279   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1733280   +
1733281   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1733282   +
1733283   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1733284   +
1733285   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1733286   +
1733287   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1733288   +
1733289   +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
1733290   +
1733291   +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
1733292   +
1733293   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1733294   +
1733295   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1733296   +
1733297   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1733298   +
1733299   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1733300   +
1733301   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1733302   +
1733303   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1733304   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1733305   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1733306   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1733307   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1733308   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1733309   +end;
MPRINT(EM_DIAGRAM):   end;
1733310   +else do;
MPRINT(EM_DIAGRAM):   else do;
1733311   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1733312   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1733313   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1733314   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1733315   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1733316   +   end;
MPRINT(EM_DIAGRAM):   end;
1733317   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1733318   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1733319   +   end;
MPRINT(EM_DIAGRAM):   end;
1733320   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1733321   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1733322   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1733323   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1733324   +   end;
MPRINT(EM_DIAGRAM):   end;
1733325   +end;
MPRINT(EM_DIAGRAM):   end;
1733326   +
1733327   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1733328   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1733329   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1733330   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1733331   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1733332   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1733333   +end;
MPRINT(EM_DIAGRAM):   end;
1733334   +else do;
MPRINT(EM_DIAGRAM):   else do;
1733335   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1733336   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1733337   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1733338   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1733339   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1733340   +   end;
MPRINT(EM_DIAGRAM):   end;
1733341   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1733342   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1733343   +   end;
MPRINT(EM_DIAGRAM):   end;
1733344   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1733345   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1733346   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1733347   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1733348   +   end;
MPRINT(EM_DIAGRAM):   end;
1733349   +end;
MPRINT(EM_DIAGRAM):   end;
1733350   +
1733351   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1733352   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1733353   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1733354   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1733355   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1733356   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1733357   +end;
MPRINT(EM_DIAGRAM):   end;
1733358   +else do;
MPRINT(EM_DIAGRAM):   else do;
1733359   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1733360   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1733361   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1733362   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1733363   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1733364   +   end;
MPRINT(EM_DIAGRAM):   end;
1733365   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1733366   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1733367   +   end;
MPRINT(EM_DIAGRAM):   end;
1733368   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1733369   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1733370   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1733371   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1733372   +   end;
MPRINT(EM_DIAGRAM):   end;
1733373   +end;
MPRINT(EM_DIAGRAM):   end;
1733374   +
1733375   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1733376   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1733377   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1733378   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1733379   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1733380   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1733381   +end;
MPRINT(EM_DIAGRAM):   end;
1733382   +else do;
MPRINT(EM_DIAGRAM):   else do;
1733383   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1733384   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1733385   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1733386   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1733387   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1733388   +   end;
MPRINT(EM_DIAGRAM):   end;
1733389   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1733390   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1733391   +   end;
MPRINT(EM_DIAGRAM):   end;
1733392   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1733393   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1733394   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1733395   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1733396   +   end;
MPRINT(EM_DIAGRAM):   end;
1733397   +end;
MPRINT(EM_DIAGRAM):   end;
1733398   +
1733399   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1733400   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1733401   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1733402   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1733403   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1733404   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1733405   +end;
MPRINT(EM_DIAGRAM):   end;
1733406   +else do;
MPRINT(EM_DIAGRAM):   else do;
1733407   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1733408   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1733409   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1733410   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1733411   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1733412   +   end;
MPRINT(EM_DIAGRAM):   end;
1733413   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1733414   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1733415   +   end;
MPRINT(EM_DIAGRAM):   end;
1733416   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1733417   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1733418   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1733419   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1733420   +   end;
MPRINT(EM_DIAGRAM):   end;
1733421   +end;
MPRINT(EM_DIAGRAM):   end;
1733422   +
1733423   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1733424   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1733425   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1733426   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1733427   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1733428   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1733429   +end;
MPRINT(EM_DIAGRAM):   end;
1733430   +else do;
MPRINT(EM_DIAGRAM):   else do;
1733431   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1733432   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1733433   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1733434   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1733435   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1733436   +   end;
MPRINT(EM_DIAGRAM):   end;
1733437   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1733438   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1733439   +   end;
MPRINT(EM_DIAGRAM):   end;
1733440   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1733441   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1733442   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1733443   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1733444   +   end;
MPRINT(EM_DIAGRAM):   end;
1733445   +end;
MPRINT(EM_DIAGRAM):   end;
1733446   +
1733447   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1733448   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1733449   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1733450   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1733451   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1733452   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1733453   +end;
MPRINT(EM_DIAGRAM):   end;
1733454   +else do;
MPRINT(EM_DIAGRAM):   else do;
1733455   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1733456   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1733457   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1733458   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1733459   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1733460   +   end;
MPRINT(EM_DIAGRAM):   end;
1733461   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1733462   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1733463   +   end;
MPRINT(EM_DIAGRAM):   end;
1733464   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1733465   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1733466   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1733467   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1733468   +   end;
MPRINT(EM_DIAGRAM):   end;
1733469   +end;
MPRINT(EM_DIAGRAM):   end;
1733470   +
1733471   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1733472   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
1733473   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1733474   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1733475   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1733476   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1733477   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1733478   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1733479   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1733480   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1733481   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1733482   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1733483   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1733484   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1733485   +end;
MPRINT(EM_DIAGRAM):   end;
1733486   +else do;
MPRINT(EM_DIAGRAM):   else do;
1733487   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1733488   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1733489   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1733490   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1733491   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1733492   +   end;
MPRINT(EM_DIAGRAM):   end;
1733493   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1733494   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1733495   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1733496   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1733497   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1733498   +   end;
MPRINT(EM_DIAGRAM):   end;
1733499   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1733500   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1733501   +   end;
MPRINT(EM_DIAGRAM):   end;
1733502   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1733503   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1733504   +   end;
MPRINT(EM_DIAGRAM):   end;
1733505   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1733506   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1733507   +   end;
MPRINT(EM_DIAGRAM):   end;
1733508   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1733509   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1733510   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1733511   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1733512   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1733513   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1733514   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1733515   +   end;
MPRINT(EM_DIAGRAM):   end;
1733516   +end;
MPRINT(EM_DIAGRAM):   end;
1733517   +
1733518   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1733519   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1733520   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
1733521   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1733522   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1733523   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1733524   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1733525   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1733526   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1733527   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1733528   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1733529   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1733530   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1733531   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1733532   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1733533   +end;
MPRINT(EM_DIAGRAM):   end;
1733534   +else do;
MPRINT(EM_DIAGRAM):   else do;
1733535   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1733536   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1733537   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1733538   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1733539   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1733540   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1733541   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1733542   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1733543   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1733544   +         end;
MPRINT(EM_DIAGRAM):   end;
1733545   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1733546   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1733547   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1733548   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1733549   +            end;
MPRINT(EM_DIAGRAM):   end;
1733550   +         end;
MPRINT(EM_DIAGRAM):   end;
1733551   +      end;
MPRINT(EM_DIAGRAM):   end;
1733552   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1733553   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1733554   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1733555   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1733556   +         end;
MPRINT(EM_DIAGRAM):   end;
1733557   +      end;
MPRINT(EM_DIAGRAM):   end;
1733558   +   end;
MPRINT(EM_DIAGRAM):   end;
1733559   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1733560   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1733561   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1733562   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1733563   +      end;
MPRINT(EM_DIAGRAM):   end;
1733564   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1733565   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1733566   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1733567   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1733568   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1733569   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1733570   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1733571   +         end;
MPRINT(EM_DIAGRAM):   end;
1733572   +      end;
MPRINT(EM_DIAGRAM):   end;
1733573   +   end;
MPRINT(EM_DIAGRAM):   end;
1733574   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1733575   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1733576   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1733577   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1733578   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1733579   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1733580   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1733581   +   end;
MPRINT(EM_DIAGRAM):   end;
1733582   +end;
MPRINT(EM_DIAGRAM):   end;
1733583   +
1733584   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1733585   +*** Checking missing input Interval
1733586   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1733587   +
1733588   +IF NMISS(
1733589   +   AcceptedCmpTotal ,
1733590   +   Age ,
1733591   +   Frq ,
1733592   +   Income ,
1733593   +   Kidhome ,
1733594   +   Mnt ,
1733595   +   MntFishProducts ,
1733596   +   MntFruits ,
1733597   +   MntGoldProds ,
1733598   +   MntMeatProducts ,
1733599   +   MntSweetProducts ,
1733600   +   MntWines ,
1733601   +   MonthsAsCustomer ,
1733602   +   NumCatalogPurchases ,
1733603   +   NumDealsPurchases ,
1733604   +   NumDistPurchases ,
1733605   +   NumStorePurchases ,
1733606   +   NumWebPurchases ,
1733607   +   NumWebVisitsMonth ,
1733608   +   RFMstat ,
1733609   +   RMntFrq ,
1733610   +   Recency ,
1733611   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
1733612   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1733613   +
1733614   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1733615   +END;
MPRINT(EM_DIAGRAM):   END;
1733616   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1733617   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1733618   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1733619   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1733620   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1733621   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1733622   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1733623   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1733624   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1733625   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1733626   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1733627   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1733628   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1733629   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1733630   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1733631   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1733632   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1733633   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1733634   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1733635   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1733636   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1733637   +   S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
1733638   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 *
MonthsAsCustomer ;
1733639   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1733640   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1733641   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1733642   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1733643   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1733644   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1733645   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1733646   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1733647   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1733648   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1733649   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1733650   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1733651   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1733652   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1733653   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1733654   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1733655   +END;
MPRINT(EM_DIAGRAM):   END;
1733656   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1733657   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1733658   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1733659   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1733660   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1733661   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1733662   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1733663   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1733664   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1733665   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1733666   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1733667   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1733668   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1733669   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1733670   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1733671   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1733672   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1733673   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1733674   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1733675   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1733676   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1733677   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1733678   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
1733679   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1733680   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1733681   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1733682   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1733683   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1733684   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1733685   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1733686   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1733687   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1733688   +   ELSE S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
1733689   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 *
MonthsAsCustomer ;
1733690   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1733691   +   ELSE S_NumCatalogPurchases
1733692   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1733693   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1733694   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1733695   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1733696   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1733697   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1733698   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1733699   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1733700   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1733701   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1733702   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1733703   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1733704   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1733705   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1733706   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1733707   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1733708   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1733709   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1733710   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1733711   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1733712   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1733713   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1733714   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1733715   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1733716   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1733717   +END;
MPRINT(EM_DIAGRAM):   END;
1733718   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1733719   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1733720   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1733721   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1733722   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1733723   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1733724   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1733725   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1733726   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1733727   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1733728   +   H11  =     0.13561897368917 * S_AcceptedCmpTotal  +    -0.32772545836794 *
1733729   +        S_Age  +    -0.38398034861903 * S_Frq  +    -0.26977539373888 *
1733730   +        S_Income  +    -0.14142658616971 * S_Kidhome
1733731   +          +      0.0989055198532 * S_Mnt  +    -0.02522005306968 *
1733732   +        S_MntFishProducts  +    -0.12344455762016 * S_MntFruits
1733733   +          +     0.06422500584481 * S_MntGoldProds  +     1.06758158504307 *
1733734   +        S_MntMeatProducts  +    -0.23902734890811 * S_MntSweetProducts
1733735   +          +    -0.30623759563522 * S_MntWines  +    -0.00016362973479 *
1733736   +        S_MonthsAsCustomer  +     0.55545319032721 * S_NumCatalogPurchases
1733737   +          +     0.96837841774168 * S_NumDealsPurchases
1733738   +          +      0.2846105381881 * S_NumDistPurchases
1733739   +          +    -0.69514041792943 * S_NumStorePurchases
1733740   +          +    -0.96425407351749 * S_NumWebPurchases
1733741   +          +     0.79545449599683 * S_NumWebVisitsMonth
1733742   +          +     0.49367889229155 * S_RFMstat  +     -0.0709743399293 *
1733743   +        S_RMntFrq  +    -0.86057075960565 * S_Recency
1733744   +          +     0.14939396415431 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.13561897368917 * S_AcceptedCmpTotal + -0.32772545836794 * S_Age
+ -0.38398034861903 * S_Frq + -0.26977539373888 * S_Income + -0.14142658616971 * S_Kidhome +
0.0989055198532 * S_Mnt + -0.02522005306968 * S_MntFishProducts + -0.12344455762016 *
S_MntFruits + 0.06422500584481 * S_MntGoldProds + 1.06758158504307 * S_MntMeatProducts +
-0.23902734890811 * S_MntSweetProducts + -0.30623759563522 * S_MntWines + -0.00016362973479 *
S_MonthsAsCustomer + 0.55545319032721 * S_NumCatalogPurchases + 0.96837841774168 *
S_NumDealsPurchases + 0.2846105381881 * S_NumDistPurchases + -0.69514041792943 *
S_NumStorePurchases + -0.96425407351749 * S_NumWebPurchases + 0.79545449599683 *
S_NumWebVisitsMonth + 0.49367889229155 * S_RFMstat + -0.0709743399293 * S_RMntFrq +
-0.86057075960565 * S_Recency + 0.14939396415431 * S_Teenhome ;
1733745   +   H12  =     0.62153817830372 * S_AcceptedCmpTotal  +     0.11000838320023 *
1733746   +        S_Age  +    -0.43905714814627 * S_Frq  +      0.4627921513743 *
1733747   +        S_Income  +    -0.55432195959203 * S_Kidhome
1733748   +          +    -0.20868947702573 * S_Mnt  +    -0.04791610917449 *
1733749   +        S_MntFishProducts  +    -0.18250759820717 * S_MntFruits
1733750   +          +    -0.04325930692478 * S_MntGoldProds  +     0.58323535101492 *
1733751   +        S_MntMeatProducts  +     0.04921270742083 * S_MntSweetProducts
1733752   +          +    -0.39974265327363 * S_MntWines  +    -0.05607601548004 *
1733753   +        S_MonthsAsCustomer  +      0.3012811961076 * S_NumCatalogPurchases
1733754   +          +      0.2190184330724 * S_NumDealsPurchases
1733755   +          +    -0.01682909442896 * S_NumDistPurchases
1733756   +          +    -0.70244951048552 * S_NumStorePurchases
1733757   +          +     -0.3057457659316 * S_NumWebPurchases
1733758   +          +     0.95928538762715 * S_NumWebVisitsMonth
1733759   +          +     0.05894343416718 * S_RFMstat  +    -0.10056410044429 *
1733760   +        S_RMntFrq  +     -0.8406665241206 * S_Recency
1733761   +          +    -0.35297412201687 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = 0.62153817830372 * S_AcceptedCmpTotal + 0.11000838320023 * S_Age +
-0.43905714814627 * S_Frq + 0.4627921513743 * S_Income + -0.55432195959203 * S_Kidhome +
-0.20868947702573 * S_Mnt + -0.04791610917449 * S_MntFishProducts + -0.18250759820717 *
S_MntFruits + -0.04325930692478 * S_MntGoldProds + 0.58323535101492 * S_MntMeatProducts +
0.04921270742083 * S_MntSweetProducts + -0.39974265327363 * S_MntWines + -0.05607601548004 *
S_MonthsAsCustomer + 0.3012811961076 * S_NumCatalogPurchases + 0.2190184330724 *
S_NumDealsPurchases + -0.01682909442896 * S_NumDistPurchases + -0.70244951048552 *
S_NumStorePurchases + -0.3057457659316 * S_NumWebPurchases + 0.95928538762715 *
S_NumWebVisitsMonth + 0.05894343416718 * S_RFMstat + -0.10056410044429 * S_RMntFrq +
-0.8406665241206 * S_Recency + -0.35297412201687 * S_Teenhome ;
1733762   +   H13  =     0.06733651290741 * S_AcceptedCmpTotal  +    -0.40242244330352 *
1733763   +        S_Age  +     0.00779419067769 * S_Frq  +    -0.39275723422465 *
1733764   +        S_Income  +    -0.06354861159882 * S_Kidhome
1733765   +          +     -0.0526962194301 * S_Mnt  +     0.22795791930382 *
1733766   +        S_MntFishProducts  +       0.155952558453 * S_MntFruits
1733767   +          +    -0.05338294725533 * S_MntGoldProds  +     0.27696958404211 *
1733768   +        S_MntMeatProducts  +     0.45382327602276 * S_MntSweetProducts
1733769   +          +     0.08944669240843 * S_MntWines  +     0.05073400334181 *
1733770   +        S_MonthsAsCustomer  +    -0.21502812614453 * S_NumCatalogPurchases
1733771   +          +    -0.21394230159696 * S_NumDealsPurchases
1733772   +          +    -0.23833771124663 * S_NumDistPurchases
1733773   +          +     0.45832031017813 * S_NumStorePurchases
1733774   +          +    -0.30226952040179 * S_NumWebPurchases
1733775   +          +    -0.29796387184481 * S_NumWebVisitsMonth
1733776   +          +    -0.47457772771567 * S_RFMstat  +     0.02623437469504 *
1733777   +        S_RMntFrq  +     0.87067423045258 * S_Recency
1733778   +          +    -0.04579179879137 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = 0.06733651290741 * S_AcceptedCmpTotal + -0.40242244330352 * S_Age
+ 0.00779419067769 * S_Frq + -0.39275723422465 * S_Income + -0.06354861159882 * S_Kidhome +
-0.0526962194301 * S_Mnt + 0.22795791930382 * S_MntFishProducts + 0.155952558453 * S_MntFruits
+ -0.05338294725533 * S_MntGoldProds + 0.27696958404211 * S_MntMeatProducts + 0.45382327602276
* S_MntSweetProducts + 0.08944669240843 * S_MntWines + 0.05073400334181 * S_MonthsAsCustomer +
-0.21502812614453 * S_NumCatalogPurchases + -0.21394230159696 * S_NumDealsPurchases +
-0.23833771124663 * S_NumDistPurchases + 0.45832031017813 * S_NumStorePurchases +
-0.30226952040179 * S_NumWebPurchases + -0.29796387184481 * S_NumWebVisitsMonth +
-0.47457772771567 * S_RFMstat + 0.02623437469504 * S_RMntFrq + 0.87067423045258 * S_Recency +
-0.04579179879137 * S_Teenhome ;
1733779   +   H14  =      0.0100821240579 * S_AcceptedCmpTotal  +     0.06650171037949 *
1733780   +        S_Age  +     0.07437437345976 * S_Frq  +    -0.60858783914323 *
1733781   +        S_Income  +    -0.04839586846715 * S_Kidhome
1733782   +          +      0.0498689835853 * S_Mnt  +    -0.19232042751963 *
1733783   +        S_MntFishProducts  +     -0.0934621532732 * S_MntFruits
1733784   +          +    -0.23123184317801 * S_MntGoldProds  +    -0.73001093719713 *
1733785   +        S_MntMeatProducts  +    -0.00941386350496 * S_MntSweetProducts
1733786   +          +     0.53093647457485 * S_MntWines  +     0.25999444904416 *
1733787   +        S_MonthsAsCustomer  +    -0.64356932247243 * S_NumCatalogPurchases
1733788   +          +    -0.43749647771198 * S_NumDealsPurchases
1733789   +          +     0.21263473847472 * S_NumDistPurchases
1733790   +          +     0.26102168039141 * S_NumStorePurchases
1733791   +          +     0.54921725943657 * S_NumWebPurchases
1733792   +          +    -0.75685843498122 * S_NumWebVisitsMonth
1733793   +          +     0.27936321897064 * S_RFMstat  +    -0.02993148267083 *
1733794   +        S_RMntFrq  +     0.80536256822347 * S_Recency
1733795   +          +     0.29599728227233 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = 0.0100821240579 * S_AcceptedCmpTotal + 0.06650171037949 * S_Age +
0.07437437345976 * S_Frq + -0.60858783914323 * S_Income + -0.04839586846715 * S_Kidhome +
0.0498689835853 * S_Mnt + -0.19232042751963 * S_MntFishProducts + -0.0934621532732 *
S_MntFruits + -0.23123184317801 * S_MntGoldProds + -0.73001093719713 * S_MntMeatProducts +
-0.00941386350496 * S_MntSweetProducts + 0.53093647457485 * S_MntWines + 0.25999444904416 *
S_MonthsAsCustomer + -0.64356932247243 * S_NumCatalogPurchases + -0.43749647771198 *
S_NumDealsPurchases + 0.21263473847472 * S_NumDistPurchases + 0.26102168039141 *
S_NumStorePurchases + 0.54921725943657 * S_NumWebPurchases + -0.75685843498122 *
S_NumWebVisitsMonth + 0.27936321897064 * S_RFMstat + -0.02993148267083 * S_RMntFrq +
0.80536256822347 * S_Recency + 0.29599728227233 * S_Teenhome ;
1733796   +   H15  =    -0.08671490381299 * S_AcceptedCmpTotal  +     0.06582961248691 *
1733797   +        S_Age  +    -0.31028674605164 * S_Frq  +    -0.75498700429145 *
1733798   +        S_Income  +     0.71499527198653 * S_Kidhome
1733799   +          +    -0.09511483339215 * S_Mnt  +     0.12995766208562 *
1733800   +        S_MntFishProducts  +     0.03365861966415 * S_MntFruits
1733801   +          +     0.10989750322838 * S_MntGoldProds  +     -0.5915075857888 *
1733802   +        S_MntMeatProducts  +     0.06560450377445 * S_MntSweetProducts
1733803   +          +     0.21362770075701 * S_MntWines  +    -0.09939364366816 *
1733804   +        S_MonthsAsCustomer  +    -0.61410179474601 * S_NumCatalogPurchases
1733805   +          +     0.09436067776126 * S_NumDealsPurchases
1733806   +          +    -0.02824201859641 * S_NumDistPurchases
1733807   +          +    -0.06770433780564 * S_NumStorePurchases
1733808   +          +    -0.07177620319715 * S_NumWebPurchases
1733809   +          +    -0.75589979685266 * S_NumWebVisitsMonth
1733810   +          +    -0.03604464190626 * S_RFMstat  +     0.17925089667944 *
1733811   +        S_RMntFrq  +     0.94408788011429 * S_Recency
1733812   +          +     0.41530214227619 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H15 = -0.08671490381299 * S_AcceptedCmpTotal + 0.06582961248691 * S_Age
+ -0.31028674605164 * S_Frq + -0.75498700429145 * S_Income + 0.71499527198653 * S_Kidhome +
-0.09511483339215 * S_Mnt + 0.12995766208562 * S_MntFishProducts + 0.03365861966415 *
S_MntFruits + 0.10989750322838 * S_MntGoldProds + -0.5915075857888 * S_MntMeatProducts +
0.06560450377445 * S_MntSweetProducts + 0.21362770075701 * S_MntWines + -0.09939364366816 *
S_MonthsAsCustomer + -0.61410179474601 * S_NumCatalogPurchases + 0.09436067776126 *
S_NumDealsPurchases + -0.02824201859641 * S_NumDistPurchases + -0.06770433780564 *
S_NumStorePurchases + -0.07177620319715 * S_NumWebPurchases + -0.75589979685266 *
S_NumWebVisitsMonth + -0.03604464190626 * S_RFMstat + 0.17925089667944 * S_RMntFrq +
0.94408788011429 * S_Recency + 0.41530214227619 * S_Teenhome ;
1733813   +   H16  =    -0.39917411634723 * S_AcceptedCmpTotal  +     0.03925725158826 *
1733814   +        S_Age  +    -0.41370994963942 * S_Frq  +    -0.42480967809347 *
1733815   +        S_Income  +    -0.63474522042341 * S_Kidhome
1733816   +          +    -0.26213982180471 * S_Mnt  +     0.18685818695791 *
1733817   +        S_MntFishProducts  +     0.04605858526078 * S_MntFruits
1733818   +          +    -0.16330204827669 * S_MntGoldProds  +    -0.29864450244187 *
1733819   +        S_MntMeatProducts  +     -0.1818801035467 * S_MntSweetProducts
1733820   +          +    -0.01848203970119 * S_MntWines  +    -0.38039400989409 *
1733821   +        S_MonthsAsCustomer  +     -0.7050267965821 * S_NumCatalogPurchases
1733822   +          +    -0.51154511343396 * S_NumDealsPurchases
1733823   +          +    -0.52422915823572 * S_NumDistPurchases
1733824   +          +     0.30305498422357 * S_NumStorePurchases
1733825   +          +     0.12197321559338 * S_NumWebPurchases
1733826   +          +    -0.10520335422769 * S_NumWebVisitsMonth
1733827   +          +    -0.08455403770298 * S_RFMstat  +     -0.0746666450533 *
1733828   +        S_RMntFrq  +    -0.01666787115039 * S_Recency
1733829   +          +     -0.0878584797536 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H16 = -0.39917411634723 * S_AcceptedCmpTotal + 0.03925725158826 * S_Age
+ -0.41370994963942 * S_Frq + -0.42480967809347 * S_Income + -0.63474522042341 * S_Kidhome +
-0.26213982180471 * S_Mnt + 0.18685818695791 * S_MntFishProducts + 0.04605858526078 *
S_MntFruits + -0.16330204827669 * S_MntGoldProds + -0.29864450244187 * S_MntMeatProducts +
-0.1818801035467 * S_MntSweetProducts + -0.01848203970119 * S_MntWines + -0.38039400989409 *
S_MonthsAsCustomer + -0.7050267965821 * S_NumCatalogPurchases + -0.51154511343396 *
S_NumDealsPurchases + -0.52422915823572 * S_NumDistPurchases + 0.30305498422357 *
S_NumStorePurchases + 0.12197321559338 * S_NumWebPurchases + -0.10520335422769 *
S_NumWebVisitsMonth + -0.08455403770298 * S_RFMstat + -0.0746666450533 * S_RMntFrq +
-0.01666787115039 * S_Recency + -0.0878584797536 * S_Teenhome ;
1733830   +   H11  = H11  +    -0.90961987146896 * AcceptedCmp10
1733831   +          +    -0.43883226747411 * AcceptedCmp20  +    -0.33111359726838 *
1733832   +        AcceptedCmp30  +    -0.56836514169806 * AcceptedCmp40
1733833   +          +    -0.35293284248651 * AcceptedCmp50  +    -0.21637194677498 *
1733834   +        Complain0  +     0.04763871212094 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.90961987146896 * AcceptedCmp10 + -0.43883226747411 *
AcceptedCmp20 + -0.33111359726838 * AcceptedCmp30 + -0.56836514169806 * AcceptedCmp40 +
-0.35293284248651 * AcceptedCmp50 + -0.21637194677498 * Complain0 + 0.04763871212094 *
HigherEducationBinary0 ;
1733835   +   H12  = H12  +     -0.1030990687939 * AcceptedCmp10
1733836   +          +     0.00122242086508 * AcceptedCmp20  +    -0.20164062706951 *
1733837   +        AcceptedCmp30  +    -0.18080173131042 * AcceptedCmp40
1733838   +          +    -0.29605640354834 * AcceptedCmp50  +     0.05316734050672 *
1733839   +        Complain0  +     0.03310322649598 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.1030990687939 * AcceptedCmp10 + 0.00122242086508 *
AcceptedCmp20 + -0.20164062706951 * AcceptedCmp30 + -0.18080173131042 * AcceptedCmp40 +
-0.29605640354834 * AcceptedCmp50 + 0.05316734050672 * Complain0 + 0.03310322649598 *
HigherEducationBinary0 ;
1733840   +   H13  = H13  +     0.19903845466874 * AcceptedCmp10
1733841   +          +     0.05770332479555 * AcceptedCmp20  +     0.18259425424285 *
1733842   +        AcceptedCmp30  +     -0.1972581314722 * AcceptedCmp40
1733843   +          +     0.07810166818705 * AcceptedCmp50  +      0.0588314244014 *
1733844   +        Complain0  +     0.52386444165611 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.19903845466874 * AcceptedCmp10 + 0.05770332479555 *
AcceptedCmp20 + 0.18259425424285 * AcceptedCmp30 + -0.1972581314722 * AcceptedCmp40 +
0.07810166818705 * AcceptedCmp50 + 0.0588314244014 * Complain0 + 0.52386444165611 *
HigherEducationBinary0 ;
1733845   +   H14  = H14  +    -0.25712989150916 * AcceptedCmp10
1733846   +          +     0.10002773433896 * AcceptedCmp20  +     0.22713279091354 *
1733847   +        AcceptedCmp30  +     -0.3908577443881 * AcceptedCmp40
1733848   +          +     0.26942267903717 * AcceptedCmp50  +    -0.06022694623669 *
1733849   +        Complain0  +     0.05521579061999 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.25712989150916 * AcceptedCmp10 + 0.10002773433896 *
AcceptedCmp20 + 0.22713279091354 * AcceptedCmp30 + -0.3908577443881 * AcceptedCmp40 +
0.26942267903717 * AcceptedCmp50 + -0.06022694623669 * Complain0 + 0.05521579061999 *
HigherEducationBinary0 ;
1733850   +   H15  = H15  +     0.38919159206493 * AcceptedCmp10
1733851   +          +     0.58837620734384 * AcceptedCmp20  +     0.43219005719576 *
1733852   +        AcceptedCmp30  +     0.44013713415724 * AcceptedCmp40
1733853   +          +     0.21616210575893 * AcceptedCmp50  +     0.22563135687374 *
1733854   +        Complain0  +    -0.26680262675523 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.38919159206493 * AcceptedCmp10 + 0.58837620734384 *
AcceptedCmp20 + 0.43219005719576 * AcceptedCmp30 + 0.44013713415724 * AcceptedCmp40 +
0.21616210575893 * AcceptedCmp50 + 0.22563135687374 * Complain0 + -0.26680262675523 *
HigherEducationBinary0 ;
1733855   +   H16  = H16  +     0.20851064493691 * AcceptedCmp10
1733856   +          +     0.04947084224566 * AcceptedCmp20  +     0.13383157945653 *
1733857   +        AcceptedCmp30  +    -0.04649385360034 * AcceptedCmp40
1733858   +          +     0.22456192437835 * AcceptedCmp50  +     0.09861465204268 *
1733859   +        Complain0  +     0.52759393238257 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.20851064493691 * AcceptedCmp10 + 0.04947084224566 *
AcceptedCmp20 + 0.13383157945653 * AcceptedCmp30 + -0.04649385360034 * AcceptedCmp40 +
0.22456192437835 * AcceptedCmp50 + 0.09861465204268 * Complain0 + 0.52759393238257 *
HigherEducationBinary0 ;
1733860   +   H11  = H11  +    -0.17149044990916 * Education2n_Cycle
1733861   +          +    -0.10901150601282 * EducationBasic  +     0.08956382506778 *
1733862   +        EducationGraduation  +    -0.02263887301789 * EducationMaster
1733863   +          +     0.10234616400375 * Marital_StatusDivorced
1733864   +          +     0.27961650739075 * Marital_StatusMarried
1733865   +          +    -0.40239488723767 * Marital_StatusSingle
1733866   +          +     0.08313574864343 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.17149044990916 * Education2n_Cycle + -0.10901150601282 *
EducationBasic + 0.08956382506778 * EducationGraduation + -0.02263887301789 * EducationMaster
+ 0.10234616400375 * Marital_StatusDivorced + 0.27961650739075 * Marital_StatusMarried +
-0.40239488723767 * Marital_StatusSingle + 0.08313574864343 * Marital_StatusTogether ;
1733867   +   H12  = H12  +     0.05425155386264 * Education2n_Cycle
1733868   +          +    -0.29410781678759 * EducationBasic  +     0.23986214400803 *
1733869   +        EducationGraduation  +    -0.14831422332134 * EducationMaster
1733870   +          +     0.46385792428023 * Marital_StatusDivorced
1733871   +          +    -0.62344590646391 * Marital_StatusMarried
1733872   +          +     0.61767209252062 * Marital_StatusSingle
1733873   +          +    -0.48335726597768 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.05425155386264 * Education2n_Cycle + -0.29410781678759 *
EducationBasic + 0.23986214400803 * EducationGraduation + -0.14831422332134 * EducationMaster
+ 0.46385792428023 * Marital_StatusDivorced + -0.62344590646391 * Marital_StatusMarried +
0.61767209252062 * Marital_StatusSingle + -0.48335726597768 * Marital_StatusTogether ;
1733874   +   H13  = H13  +     0.02436261022421 * Education2n_Cycle
1733875   +          +     0.25859718044561 * EducationBasic  +    -0.27291277319608 *
1733876   +        EducationGraduation  +    -0.08922741430112 * EducationMaster
1733877   +          +    -0.07839612590836 * Marital_StatusDivorced
1733878   +          +     0.35316864062221 * Marital_StatusMarried
1733879   +          +    -0.10730136429834 * Marital_StatusSingle
1733880   +          +     0.17593603209099 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.02436261022421 * Education2n_Cycle + 0.25859718044561 *
EducationBasic + -0.27291277319608 * EducationGraduation + -0.08922741430112 * EducationMaster
+ -0.07839612590836 * Marital_StatusDivorced + 0.35316864062221 * Marital_StatusMarried +
-0.10730136429834 * Marital_StatusSingle + 0.17593603209099 * Marital_StatusTogether ;
1733881   +   H14  = H14  +    -0.24964520343799 * Education2n_Cycle
1733882   +          +    -0.01893498177516 * EducationBasic  +     0.15063494078927 *
1733883   +        EducationGraduation  +     -0.0741586921665 * EducationMaster
1733884   +          +    -0.09942175269886 * Marital_StatusDivorced
1733885   +          +     0.24385460865335 * Marital_StatusMarried
1733886   +          +    -0.33658955096296 * Marital_StatusSingle
1733887   +          +     0.56050963700382 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.24964520343799 * Education2n_Cycle + -0.01893498177516 *
EducationBasic + 0.15063494078927 * EducationGraduation + -0.0741586921665 * EducationMaster +
-0.09942175269886 * Marital_StatusDivorced + 0.24385460865335 * Marital_StatusMarried +
-0.33658955096296 * Marital_StatusSingle + 0.56050963700382 * Marital_StatusTogether ;
1733888   +   H15  = H15  +     0.01382474147934 * Education2n_Cycle
1733889   +          +    -0.45490268571245 * EducationBasic  +     0.16592751946825 *
1733890   +        EducationGraduation  +     0.37352174719748 * EducationMaster
1733891   +          +    -0.08047852561096 * Marital_StatusDivorced
1733892   +          +     1.16485862694561 * Marital_StatusMarried
1733893   +          +    -0.94140251178566 * Marital_StatusSingle
1733894   +          +     0.70332254595446 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.01382474147934 * Education2n_Cycle + -0.45490268571245 *
EducationBasic + 0.16592751946825 * EducationGraduation + 0.37352174719748 * EducationMaster +
-0.08047852561096 * Marital_StatusDivorced + 1.16485862694561 * Marital_StatusMarried +
-0.94140251178566 * Marital_StatusSingle + 0.70332254595446 * Marital_StatusTogether ;
1733895   +   H16  = H16  +    -0.23552122269934 * Education2n_Cycle
1733896   +          +    -0.24160689278663 * EducationBasic  +    -0.15570122212206 *
1733897   +        EducationGraduation  +    -0.17067956037934 * EducationMaster
1733898   +          +    -0.16621963893391 * Marital_StatusDivorced
1733899   +          +    -0.44542186297324 * Marital_StatusMarried
1733900   +          +     0.42176133228308 * Marital_StatusSingle
1733901   +          +     -0.3191529098756 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H16 = H16 + -0.23552122269934 * Education2n_Cycle + -0.24160689278663 *
EducationBasic + -0.15570122212206 * EducationGraduation + -0.17067956037934 * EducationMaster
+ -0.16621963893391 * Marital_StatusDivorced + -0.44542186297324 * Marital_StatusMarried +
0.42176133228308 * Marital_StatusSingle + -0.3191529098756 * Marital_StatusTogether ;
1733902   +   H11  =    -0.08072695414295 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -0.08072695414295 + H11 ;
1733903   +   H12  =     0.35226882164117 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.35226882164117 + H12 ;
1733904   +   H13  =    -1.39195207519632 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -1.39195207519632 + H13 ;
1733905   +   H14  =     1.37641938752783 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 1.37641938752783 + H14 ;
1733906   +   H15  =     0.91842694601067 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = 0.91842694601067 + H15 ;
1733907   +   H16  =     -2.0930022603803 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = -2.0930022603803 + H16 ;
1733908   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1733909   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1733910   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1733911   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1733912   +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
1733913   +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
1733914   +END;
MPRINT(EM_DIAGRAM):   END;
1733915   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1733916   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1733917   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1733918   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1733919   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1733920   +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
1733921   +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
1733922   +END;
MPRINT(EM_DIAGRAM):   END;
1733923   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1733924   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1733925   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1733926   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1733927   +   P_DepVar1  =     2.03370101048476 * H11  +     2.66531855617884 * H12
1733928   +          +    -1.85942573260565 * H13  +    -1.90574749832357 * H14
1733929   +          +    -3.11388767967909 * H15  +    -2.20829136620638 * H16 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 2.03370101048476 * H11 + 2.66531855617884 * H12 +
-1.85942573260565 * H13 + -1.90574749832357 * H14 + -3.11388767967909 * H15 +
-2.20829136620638 * H16 ;
1733930   +   P_DepVar1  =    -2.07329738382548 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.07329738382548 + P_DepVar1 ;
1733931   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1733932   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1733933   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1733934   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1733935   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1733936   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1733937   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1733938   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1733939   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1733940   +END;
MPRINT(EM_DIAGRAM):   END;
1733941   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1733942   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1733943   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1733944   +END;
MPRINT(EM_DIAGRAM):   END;
1733945   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1733946   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1733947   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1733948   +END;
MPRINT(EM_DIAGRAM):   END;
1733949   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1733950   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1733951   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1733952   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1733953   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1733954   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1733955   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1733956   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1733957   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1733958   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1733959   +END;
MPRINT(EM_DIAGRAM):   END;
1733960   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1733961   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1733962   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1733963   +drop
1733964   +H11
1733965   +H12
1733966   +H13
1733967   +H14
1733968   +H15
1733969   +H16
1733970   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 ;
1733971   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1733972    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1733973    quit;
1733974    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1733975    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1733976    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1733977    retain ID 2 Node "Neural9";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Neural9";
1733978    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1733979    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2876 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2876 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1733980    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1733981    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1733982    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2876 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2876 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1733983    proc sort data=EMWS8.Neural9_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Neural9_variableset out=_temp2(keep=NAME CREATOR);
1733984    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1733985    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set EMWS8.NEURAL9_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1733986    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1733987    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1733988    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1733989    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1733990    proc contents data=EMWS8.Neural9_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Neural9_train out=_meta(keep=NAME) noprint;
1733991    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
1733992    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1733993    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1733994    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1733995    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1733996    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1733997    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1733998    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 53 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1733999    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1734000    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1734000  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 1591 rows and 5 columns.
 
1734001    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1734002    proc append base=EMWS8.Ensmbl30_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl30_FCMP data=_tempx;
1734003    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL30_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 1591 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL30_FCMP has 1591 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
1734004    filename _pref
1734004  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
1734005    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1734006    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
1734007   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1734008   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1734009   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1734010   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1734011   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1734012   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1734013    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1734014    quit;
1734015    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1734016    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1734017    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1734018    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
1734019    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1734020    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1734021    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1734022    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1734023    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1734024    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
1734025    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1734026    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1734027    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1734028    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1734029    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1734030    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1734031    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
1734032    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1734033    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1734034    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1734035    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1734036    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1734037    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1734038    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1734039    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1734040    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1734041    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1734041  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.
 
1734042    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1734043    proc append base=EMWS8.Ensmbl30_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl30_FCMP data=_tempx;
1734044    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL30_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL30_FCMP has 1595 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
1734045    filename _pref
1734045  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
1734046    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1734047    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
1734048   +
1734049   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1734050   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1734050  !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1734051   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1734052   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1734053   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1734054   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1734055   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1734056    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1734057    quit;
1734058    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1734059    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1734060    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1734061    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
1734062    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1734063    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1734064    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1734065    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1734066    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1734067    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
1734068    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1734069    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1734070    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1734071    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1734072    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1734073    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
1734074    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
1734075    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1734076    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1734077    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1734078    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1734079    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1734080    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1734081    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1734082    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
1734083    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1734084    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1734084  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.
 
1734085    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1734086    proc append base=EMWS8.Ensmbl30_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl30_FCMP data=_tempx;
1734087    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL30_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL30_FCMP has 1634 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1734088    filename _pref
1734088  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
1734089    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1734090    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
1734091   +
1734092   +
1734093   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
1734094   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
1734095   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
1734096   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
1734097   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
1734098   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1734099   +
1734100   +
1734101   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
1734102   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
1734103   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
1734104   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
1734105   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
1734106   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1734107   +
1734108   +
1734109   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
1734110   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
1734111   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
1734112   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
1734113   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
1734114   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1734115   +
1734116   +
1734117   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
1734118   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
1734119   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
1734120   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
1734121   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
1734122   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1734123   +
1734124   +
1734125   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
1734126   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
1734127   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
1734128   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
1734129   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
1734130   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1734131   +
1734132   +
1734133   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
1734134   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
1734135   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
1734136   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
1734137   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
1734138   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1734139   +
1734140   +
1734141   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
1734142   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
1734143   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
1734144   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
1734145   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
1734146   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1734147   +
1734148   +
1734149   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
1734150   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
1734151   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
1734152   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
1734153   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
1734154   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1734155   +if
1734156   +_FILTERNORM1 not in ( '.')
1734157   + and
1734158   +_FILTERNORM2 not in ( '.')
1734159   + and
1734160   +_FILTERNORM3 not in ( '.')
1734161   + and
1734162   +_FILTERNORM4 not in ( '.')
1734163   + and
1734164   +_FILTERNORM5 not in ( '.')
1734165   + and
1734166   +_FILTERNORM6 not in ( '.')
1734167   + and
1734168   +_FILTERNORM7 not in ( ' ')
1734169   + and
1734170   +_FILTERNORM8 not in ( ' ')
1734171   +and
1734172   +( Dt_Customer ne .)
1734173   +and ( Income ne . and (Income<=107000))
1734174   +and ( Kidhome ne .)
1734175   +and ( MntFishProducts ne .)
1734176   +and ( MntFruits ne .)
1734177   +and ( MntGoldProds ne .)
1734178   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
1734179   +and ( MntSweetProducts ne .)
1734180   +and ( MntWines ne .)
1734181   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
1734182   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
1734183   +and ( NumStorePurchases ne .)
1734184   +and ( NumWebPurchases ne .)
1734185   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
1734186   +and ( Recency ne .)
1734187   +and ( Teenhome ne .)
1734188   +and ( Year_Birth ne .)
1734189   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and (
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and (
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and (
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and (
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne
.) and ( Year_Birth ne .) then do;
1734190   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
1734191   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
1734192   +end;
MPRINT(EM_DIAGRAM):   end;
1734193   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
1734194   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1734195    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1734196    quit;
1734197    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1734198    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1734199    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1734200    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
1734201    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1734202    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1734203    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1734204    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1734205    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1734206    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
1734207    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1734208    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1734209    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1734210    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1734211    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1734212    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
1734213    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
1734214    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1734215    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1734216    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1734217    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1734218    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1734219    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1734220    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1734221    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1734222    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1734223    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1734223  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.
 
1734224    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1734225    proc append base=EMWS8.Ensmbl30_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl30_FCMP data=_tempx;
1734226    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL30_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL30_FCMP has 1700 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1734227    %macro varDept(fcmpdata=,id=);
1734228    %global nobs&id scoreFlag&id;
1734229    %let scoreFlag&id = 0;
1734230    %if &id=1 or ^&fcmpStart %then %do;
1734231    proc sort data=&fcmpdata out=_temp&id nodupkey;
1734232    by NAME;
1734233    where id=&id and LHS in( %let j=1;
1734234    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
1734235    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
1734236    "&var" %let j = %eval(&j+1);
1734237    %end;
1734238    );
1734239    run;
1734240    %let dsid = %sysfunc(open(_temp&id));
1734241    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1734242    %let dsid = %sysfunc(close(&dsid));
1734243    %if &&nobs&id %then %do;
1734244    %let scoreFlag&id = 1;
1734245    %let fcmpStart = 1;
1734246    %end;
1734247    %else %let fcmpStart = 0;
1734248    %end;
1734249    %else %do;
1734250    proc sort data=&fcmpdata out=_tempid;
1734251    where id=&id;
1734252    by LHS;
1734253    run;
1734254    %let dsid = %sysfunc(open(_tempid));
1734255    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1734256    %let dsid = %sysfunc(close(&dsid));
1734257    %if ^&&nobs&id %then %do;
1734258    proc datasets lib=work nolist;
1734259    delete _tempid;
1734260    run;
1734261    quit;
1734262    %end;
1734263    %else %do;
1734264    data _tempAll;
1734265    set %let j=%eval(&id-1);
1734266    %do x=1 %to &j;
1734267    %if &&nobs&x %then %do;
1734268    _temp&x %end;
1734269    %end;
1734270    ;
1734271    run;
1734272    proc sql;
1734273    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
1734273  ! work._tempid p2 where p.name=p2.lhs;
1734274    quit;
1734275    data _temp&id;
1734276    set _temp&id;
1734277    where LHS ne '' and NAME ne '' and Node ne '';
1734278    run;
1734279    proc datasets lib=work nolist;
1734280    delete _tempAll;
1734281    run;
1734282    %let dsid = %sysfunc(open(_temp&id));
1734283    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1734284    %let dsid = %sysfunc(close(&dsid));
1734285    %if ^&&nobs&id %then %do;
1734286    proc datasets lib=work nolist;
1734287    delete _temp&id;
1734288    run;
1734289    quit;
1734290    %end;
1734291    %else %do;
1734292    %let scoreFlag&id = 1;
1734293    data _temp&id;
1734294    set _temp&id;
1734295    where LHS ne NAME and node ne '';
1734296    run;
1734297    %let dsid = %sysfunc(open(_temp&id));
1734298    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1734299    %let dsid = %sysfunc(close(&dsid));
1734300    %if ^&&nobs&id %then %do;
1734301    proc datasets lib=work nolist;
1734302    delete _temp&id;
1734303    run;
1734304    quit;
1734305    %end;
1734306    %else %do;
1734307    proc sort data=_temp&id nodupkey;
1734308    by LHS NAME;
1734309    run;
1734310    %end;
1734311    %end;
1734312    %end;
1734313    %end;
1734314    %mend varDept;
1734315    %macro optCode(outdata=fcmpdata);
1734316    %global fcmpStart;
1734317    %let fcmpStart = 0;
1734318    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
1734319    %let NumNodes=9;
1734320    %do k=1 %to &NumNodes;
1734321    %vardept(fcmpdata=&outdata, id=&k);
1734322    %end;
1734323    %mend optCode;
1734324    %optcode(outData=EMWS8.Ensmbl30_FCMP);
MPRINT(EM_DIAGRAM):
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl30_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL30_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl30_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: There were 134 observations read from the data set EMWS8.ENSMBL30_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 100 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 34 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl30_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL30_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl30_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL30_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl30_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set EMWS8.ENSMBL30_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 34 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 4 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl30_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set EMWS8.ENSMBL30_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 38 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 39 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl30_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 66 observations read from the data set EMWS8.ENSMBL30_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 77 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl30_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL30_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl30_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL30_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;
 
1734325    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
1734326    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1734327    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
1734328    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1734329    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
1734330    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1734331    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
1734332    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1734333    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1734334    create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
1734334  ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 4 rows and 3 columns.
 
1734335    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1734336    data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
1734337    set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
1734338    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 4 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 4 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1734339    filename _pref
1734339  ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural3\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Neural3\EMPUBLISHSCORE.sas";
1734340    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1734341    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Neural3\EMPUBLISHSCORE.sas.
1734342   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1734343   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1734344   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1734345   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1734346   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1734347   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1734348   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1734349   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1734350   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1734351   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1734352   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1734353   +LENGTH _WARN_ $4
1734354   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
1734355   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1734356   +
1734357   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1734358   +
1734359   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1734360   +
1734361   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1734362   +
1734363   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1734364   +
1734365   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1734366   +
1734367   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1734368   +
1734369   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1734370   +
1734371   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1734372   +
1734373   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1734374   +
1734375   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1734376   +
1734377   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1734378   +
1734379   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1734380   +
1734381   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1734382   +
1734383   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1734384   +
1734385   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1734386   +
1734387   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1734388   +
1734389   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1734390   +
1734391   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1734392   +
1734393   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1734394   +
1734395   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1734396   +
1734397   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1734398   +
1734399   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1734400   +
1734401   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1734402   +
1734403   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1734404   +
1734405   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1734406   +
1734407   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1734408   +
1734409   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1734410   +
1734411   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1734412   +
1734413   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1734414   +
1734415   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1734416   +
1734417   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1734418   +
1734419   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1734420   +
1734421   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1734422   +
1734423   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1734424   +
1734425   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1734426   +
1734427   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1734428   +
1734429   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1734430   +
1734431   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1734432   +
1734433   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1734434   +
1734435   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1734436   +
1734437   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1734438   +
1734439   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1734440   +
1734441   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1734442   +
1734443   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1734444   +
1734445   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1734446   +
1734447   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1734448   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1734449   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1734450   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1734451   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1734452   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1734453   +end;
MPRINT(EM_DIAGRAM):   end;
1734454   +else do;
MPRINT(EM_DIAGRAM):   else do;
1734455   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1734456   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1734457   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1734458   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1734459   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1734460   +   end;
MPRINT(EM_DIAGRAM):   end;
1734461   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1734462   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1734463   +   end;
MPRINT(EM_DIAGRAM):   end;
1734464   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1734465   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1734466   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1734467   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1734468   +   end;
MPRINT(EM_DIAGRAM):   end;
1734469   +end;
MPRINT(EM_DIAGRAM):   end;
1734470   +
1734471   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1734472   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1734473   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1734474   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1734475   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1734476   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1734477   +end;
MPRINT(EM_DIAGRAM):   end;
1734478   +else do;
MPRINT(EM_DIAGRAM):   else do;
1734479   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1734480   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1734481   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1734482   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1734483   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1734484   +   end;
MPRINT(EM_DIAGRAM):   end;
1734485   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1734486   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1734487   +   end;
MPRINT(EM_DIAGRAM):   end;
1734488   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1734489   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1734490   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1734491   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1734492   +   end;
MPRINT(EM_DIAGRAM):   end;
1734493   +end;
MPRINT(EM_DIAGRAM):   end;
1734494   +
1734495   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1734496   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1734497   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1734498   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1734499   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1734500   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1734501   +end;
MPRINT(EM_DIAGRAM):   end;
1734502   +else do;
MPRINT(EM_DIAGRAM):   else do;
1734503   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1734504   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1734505   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1734506   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1734507   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1734508   +   end;
MPRINT(EM_DIAGRAM):   end;
1734509   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1734510   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1734511   +   end;
MPRINT(EM_DIAGRAM):   end;
1734512   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1734513   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1734514   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1734515   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1734516   +   end;
MPRINT(EM_DIAGRAM):   end;
1734517   +end;
MPRINT(EM_DIAGRAM):   end;
1734518   +
1734519   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1734520   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1734521   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1734522   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1734523   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1734524   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1734525   +end;
MPRINT(EM_DIAGRAM):   end;
1734526   +else do;
MPRINT(EM_DIAGRAM):   else do;
1734527   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1734528   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1734529   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1734530   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1734531   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1734532   +   end;
MPRINT(EM_DIAGRAM):   end;
1734533   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1734534   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1734535   +   end;
MPRINT(EM_DIAGRAM):   end;
1734536   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1734537   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1734538   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1734539   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1734540   +   end;
MPRINT(EM_DIAGRAM):   end;
1734541   +end;
MPRINT(EM_DIAGRAM):   end;
1734542   +
1734543   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1734544   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1734545   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1734546   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1734547   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1734548   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1734549   +end;
MPRINT(EM_DIAGRAM):   end;
1734550   +else do;
MPRINT(EM_DIAGRAM):   else do;
1734551   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1734552   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1734553   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1734554   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1734555   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1734556   +   end;
MPRINT(EM_DIAGRAM):   end;
1734557   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1734558   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1734559   +   end;
MPRINT(EM_DIAGRAM):   end;
1734560   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1734561   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1734562   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1734563   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1734564   +   end;
MPRINT(EM_DIAGRAM):   end;
1734565   +end;
MPRINT(EM_DIAGRAM):   end;
1734566   +
1734567   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1734568   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1734569   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1734570   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1734571   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1734572   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1734573   +end;
MPRINT(EM_DIAGRAM):   end;
1734574   +else do;
MPRINT(EM_DIAGRAM):   else do;
1734575   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1734576   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1734577   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1734578   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1734579   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1734580   +   end;
MPRINT(EM_DIAGRAM):   end;
1734581   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1734582   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1734583   +   end;
MPRINT(EM_DIAGRAM):   end;
1734584   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1734585   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1734586   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1734587   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1734588   +   end;
MPRINT(EM_DIAGRAM):   end;
1734589   +end;
MPRINT(EM_DIAGRAM):   end;
1734590   +
1734591   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1734592   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1734593   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1734594   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1734595   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1734596   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1734597   +end;
MPRINT(EM_DIAGRAM):   end;
1734598   +else do;
MPRINT(EM_DIAGRAM):   else do;
1734599   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1734600   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1734601   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1734602   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1734603   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1734604   +   end;
MPRINT(EM_DIAGRAM):   end;
1734605   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1734606   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1734607   +   end;
MPRINT(EM_DIAGRAM):   end;
1734608   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1734609   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1734610   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1734611   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1734612   +   end;
MPRINT(EM_DIAGRAM):   end;
1734613   +end;
MPRINT(EM_DIAGRAM):   end;
1734614   +
1734615   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1734616   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
1734617   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1734618   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1734619   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1734620   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1734621   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1734622   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1734623   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1734624   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1734625   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1734626   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1734627   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1734628   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1734629   +end;
MPRINT(EM_DIAGRAM):   end;
1734630   +else do;
MPRINT(EM_DIAGRAM):   else do;
1734631   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1734632   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1734633   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1734634   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1734635   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1734636   +   end;
MPRINT(EM_DIAGRAM):   end;
1734637   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1734638   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1734639   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1734640   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1734641   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1734642   +   end;
MPRINT(EM_DIAGRAM):   end;
1734643   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1734644   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1734645   +   end;
MPRINT(EM_DIAGRAM):   end;
1734646   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1734647   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1734648   +   end;
MPRINT(EM_DIAGRAM):   end;
1734649   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1734650   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1734651   +   end;
MPRINT(EM_DIAGRAM):   end;
1734652   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1734653   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1734654   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1734655   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1734656   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1734657   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1734658   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1734659   +   end;
MPRINT(EM_DIAGRAM):   end;
1734660   +end;
MPRINT(EM_DIAGRAM):   end;
1734661   +
1734662   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1734663   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1734664   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
1734665   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1734666   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1734667   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1734668   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1734669   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1734670   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1734671   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1734672   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1734673   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1734674   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1734675   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1734676   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1734677   +end;
MPRINT(EM_DIAGRAM):   end;
1734678   +else do;
MPRINT(EM_DIAGRAM):   else do;
1734679   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1734680   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1734681   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1734682   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1734683   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1734684   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1734685   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1734686   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1734687   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1734688   +         end;
MPRINT(EM_DIAGRAM):   end;
1734689   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1734690   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1734691   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1734692   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1734693   +            end;
MPRINT(EM_DIAGRAM):   end;
1734694   +         end;
MPRINT(EM_DIAGRAM):   end;
1734695   +      end;
MPRINT(EM_DIAGRAM):   end;
1734696   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1734697   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1734698   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1734699   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1734700   +         end;
MPRINT(EM_DIAGRAM):   end;
1734701   +      end;
MPRINT(EM_DIAGRAM):   end;
1734702   +   end;
MPRINT(EM_DIAGRAM):   end;
1734703   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1734704   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1734705   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1734706   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1734707   +      end;
MPRINT(EM_DIAGRAM):   end;
1734708   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1734709   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1734710   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1734711   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1734712   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1734713   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1734714   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1734715   +         end;
MPRINT(EM_DIAGRAM):   end;
1734716   +      end;
MPRINT(EM_DIAGRAM):   end;
1734717   +   end;
MPRINT(EM_DIAGRAM):   end;
1734718   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1734719   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1734720   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1734721   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1734722   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1734723   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1734724   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1734725   +   end;
MPRINT(EM_DIAGRAM):   end;
1734726   +end;
MPRINT(EM_DIAGRAM):   end;
1734727   +
1734728   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1734729   +*** Checking missing input Interval
1734730   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1734731   +
1734732   +IF NMISS(
1734733   +   AcceptedCmpTotal ,
1734734   +   Age ,
1734735   +   Frq ,
1734736   +   Income ,
1734737   +   Kidhome ,
1734738   +   Mnt ,
1734739   +   MntFishProducts ,
1734740   +   MntFruits ,
1734741   +   MntGoldProds ,
1734742   +   MntMeatProducts ,
1734743   +   MntSweetProducts ,
1734744   +   MntWines ,
1734745   +   MonthsAsCustomer ,
1734746   +   NumCatalogPurchases ,
1734747   +   NumDealsPurchases ,
1734748   +   NumDistPurchases ,
1734749   +   NumStorePurchases ,
1734750   +   NumWebPurchases ,
1734751   +   NumWebVisitsMonth ,
1734752   +   RFMstat ,
1734753   +   RMntFrq ,
1734754   +   Recency ,
1734755   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
1734756   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1734757   +
1734758   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1734759   +END;
MPRINT(EM_DIAGRAM):   END;
1734760   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1734761   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1734762   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1734763   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1734764   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1734765   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1734766   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1734767   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1734768   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1734769   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1734770   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1734771   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1734772   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1734773   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1734774   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1734775   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1734776   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1734777   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1734778   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1734779   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1734780   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1734781   +   S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
1734782   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 *
MonthsAsCustomer ;
1734783   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1734784   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1734785   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1734786   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1734787   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1734788   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1734789   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1734790   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1734791   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1734792   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1734793   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1734794   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1734795   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1734796   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1734797   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1734798   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1734799   +END;
MPRINT(EM_DIAGRAM):   END;
1734800   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1734801   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1734802   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1734803   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1734804   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1734805   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1734806   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1734807   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1734808   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1734809   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1734810   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1734811   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1734812   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1734813   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1734814   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1734815   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1734816   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1734817   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1734818   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1734819   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1734820   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1734821   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1734822   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
1734823   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1734824   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1734825   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1734826   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1734827   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1734828   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1734829   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1734830   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1734831   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1734832   +   ELSE S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
1734833   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 *
MonthsAsCustomer ;
1734834   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1734835   +   ELSE S_NumCatalogPurchases
1734836   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1734837   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1734838   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1734839   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1734840   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1734841   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1734842   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1734843   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1734844   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1734845   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1734846   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1734847   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1734848   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1734849   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1734850   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1734851   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1734852   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1734853   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1734854   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1734855   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1734856   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1734857   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1734858   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1734859   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1734860   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1734861   +END;
MPRINT(EM_DIAGRAM):   END;
1734862   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1734863   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1734864   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1734865   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1734866   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1734867   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1734868   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1734869   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1734870   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1734871   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1734872   +   H11  =     0.83781385787802 * S_AcceptedCmpTotal  +    -0.24139142678243 *
1734873   +        S_Age  +     0.06099821217041 * S_Frq  +     0.40208633787615 *
1734874   +        S_Income  +     0.51123266106809 * S_Kidhome
1734875   +          +    -0.16199331018171 * S_Mnt  +     0.01907816065296 *
1734876   +        S_MntFishProducts  +     -0.3821919957066 * S_MntFruits
1734877   +          +    -0.03370551533515 * S_MntGoldProds  +     1.07281355981991 *
1734878   +        S_MntMeatProducts  +    -0.13640457355292 * S_MntSweetProducts
1734879   +          +    -1.07230822345452 * S_MntWines  +      0.1487724512445 *
1734880   +        S_MonthsAsCustomer  +     1.00223132386414 * S_NumCatalogPurchases
1734881   +          +     1.34095732961105 * S_NumDealsPurchases
1734882   +          +     0.16605991333252 * S_NumDistPurchases
1734883   +          +    -0.61746267736536 * S_NumStorePurchases
1734884   +          +    -0.61812800689506 * S_NumWebPurchases
1734885   +          +     1.44649145055387 * S_NumWebVisitsMonth
1734886   +          +     0.71065354084884 * S_RFMstat  +     0.16160177747086 *
1734887   +        S_RMntFrq  +     -0.9427457293884 * S_Recency
1734888   +          +     0.02731657981524 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.83781385787802 * S_AcceptedCmpTotal + -0.24139142678243 * S_Age
+ 0.06099821217041 * S_Frq + 0.40208633787615 * S_Income + 0.51123266106809 * S_Kidhome +
-0.16199331018171 * S_Mnt + 0.01907816065296 * S_MntFishProducts + -0.3821919957066 *
S_MntFruits + -0.03370551533515 * S_MntGoldProds + 1.07281355981991 * S_MntMeatProducts +
-0.13640457355292 * S_MntSweetProducts + -1.07230822345452 * S_MntWines + 0.1487724512445 *
S_MonthsAsCustomer + 1.00223132386414 * S_NumCatalogPurchases + 1.34095732961105 *
S_NumDealsPurchases + 0.16605991333252 * S_NumDistPurchases + -0.61746267736536 *
S_NumStorePurchases + -0.61812800689506 * S_NumWebPurchases + 1.44649145055387 *
S_NumWebVisitsMonth + 0.71065354084884 * S_RFMstat + 0.16160177747086 * S_RMntFrq +
-0.9427457293884 * S_Recency + 0.02731657981524 * S_Teenhome ;
1734889   +   H12  =    -0.90907441149587 * S_AcceptedCmpTotal  +     -0.0457783940034 *
1734890   +        S_Age  +     0.27413524344715 * S_Frq  +    -0.43786159455637 *
1734891   +        S_Income  +     0.52295323651199 * S_Kidhome
1734892   +          +     0.16720640871174 * S_Mnt  +     0.90930001391122 *
1734893   +        S_MntFishProducts  +    -0.05099919369902 * S_MntFruits
1734894   +          +    -0.17081601037694 * S_MntGoldProds  +    -1.57312364500957 *
1734895   +        S_MntMeatProducts  +     -0.5081100411323 * S_MntSweetProducts
1734896   +          +     0.59764239237778 * S_MntWines  +     0.21825258246439 *
1734897   +        S_MonthsAsCustomer  +    -0.86944690807188 * S_NumCatalogPurchases
1734898   +          +    -0.72543332317832 * S_NumDealsPurchases
1734899   +          +    -0.05245472565117 * S_NumDistPurchases
1734900   +          +     1.00667431585298 * S_NumStorePurchases
1734901   +          +     1.02836701470962 * S_NumWebPurchases
1734902   +          +    -1.25666606219201 * S_NumWebVisitsMonth
1734903   +          +    -0.21335681545447 * S_RFMstat  +     0.10575177006447 *
1734904   +        S_RMntFrq  +     1.50910531484632 * S_Recency
1734905   +          +     0.35192762580497 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -0.90907441149587 * S_AcceptedCmpTotal + -0.0457783940034 * S_Age
+ 0.27413524344715 * S_Frq + -0.43786159455637 * S_Income + 0.52295323651199 * S_Kidhome +
0.16720640871174 * S_Mnt + 0.90930001391122 * S_MntFishProducts + -0.05099919369902 *
S_MntFruits + -0.17081601037694 * S_MntGoldProds + -1.57312364500957 * S_MntMeatProducts +
-0.5081100411323 * S_MntSweetProducts + 0.59764239237778 * S_MntWines + 0.21825258246439 *
S_MonthsAsCustomer + -0.86944690807188 * S_NumCatalogPurchases + -0.72543332317832 *
S_NumDealsPurchases + -0.05245472565117 * S_NumDistPurchases + 1.00667431585298 *
S_NumStorePurchases + 1.02836701470962 * S_NumWebPurchases + -1.25666606219201 *
S_NumWebVisitsMonth + -0.21335681545447 * S_RFMstat + 0.10575177006447 * S_RMntFrq +
1.50910531484632 * S_Recency + 0.35192762580497 * S_Teenhome ;
1734906   +   H13  =    -0.15164592837535 * S_AcceptedCmpTotal  +    -0.19703351726774 *
1734907   +        S_Age  +    -0.22367876273414 * S_Frq  +    -1.11408247891182 *
1734908   +        S_Income  +     0.58025720116696 * S_Kidhome
1734909   +          +     0.21614555339512 * S_Mnt  +    -0.15414755742285 *
1734910   +        S_MntFishProducts  +     0.16818356186813 * S_MntFruits
1734911   +          +     0.07314186249038 * S_MntGoldProds  +    -0.33939177015316 *
1734912   +        S_MntMeatProducts  +     0.29581112739013 * S_MntSweetProducts
1734913   +          +     0.30701920735867 * S_MntWines  +    -0.24397557348757 *
1734914   +        S_MonthsAsCustomer  +    -0.58962094283699 * S_NumCatalogPurchases
1734915   +          +     0.12670438262487 * S_NumDealsPurchases
1734916   +          +    -0.46113523834333 * S_NumDistPurchases
1734917   +          +     0.07074818720567 * S_NumStorePurchases
1734918   +          +    -0.05066645783537 * S_NumWebPurchases
1734919   +          +    -0.65729410185804 * S_NumWebVisitsMonth
1734920   +          +     0.08702511028701 * S_RFMstat  +    -0.39946503838688 *
1734921   +        S_RMntFrq  +      1.4337242246086 * S_Recency
1734922   +          +     0.88397808030072 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = -0.15164592837535 * S_AcceptedCmpTotal + -0.19703351726774 * S_Age
+ -0.22367876273414 * S_Frq + -1.11408247891182 * S_Income + 0.58025720116696 * S_Kidhome +
0.21614555339512 * S_Mnt + -0.15414755742285 * S_MntFishProducts + 0.16818356186813 *
S_MntFruits + 0.07314186249038 * S_MntGoldProds + -0.33939177015316 * S_MntMeatProducts +
0.29581112739013 * S_MntSweetProducts + 0.30701920735867 * S_MntWines + -0.24397557348757 *
S_MonthsAsCustomer + -0.58962094283699 * S_NumCatalogPurchases + 0.12670438262487 *
S_NumDealsPurchases + -0.46113523834333 * S_NumDistPurchases + 0.07074818720567 *
S_NumStorePurchases + -0.05066645783537 * S_NumWebPurchases + -0.65729410185804 *
S_NumWebVisitsMonth + 0.08702511028701 * S_RFMstat + -0.39946503838688 * S_RMntFrq +
1.4337242246086 * S_Recency + 0.88397808030072 * S_Teenhome ;
1734923   +   H11  = H11  +    -0.63147559208792 * AcceptedCmp10
1734924   +          +    -0.00204416332102 * AcceptedCmp20  +    -0.91272822301777 *
1734925   +        AcceptedCmp30  +    -0.24133711406692 * AcceptedCmp40
1734926   +          +    -0.11641744847547 * AcceptedCmp50  +     0.08815921371043 *
1734927   +        Complain0  +    -0.53095204316646 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.63147559208792 * AcceptedCmp10 + -0.00204416332102 *
AcceptedCmp20 + -0.91272822301777 * AcceptedCmp30 + -0.24133711406692 * AcceptedCmp40 +
-0.11641744847547 * AcceptedCmp50 + 0.08815921371043 * Complain0 + -0.53095204316646 *
HigherEducationBinary0 ;
1734928   +   H12  = H12  +     0.22426256838634 * AcceptedCmp10
1734929   +          +      0.0373678700446 * AcceptedCmp20  +    -0.34019580311077 *
1734930   +        AcceptedCmp30  +    -0.06657561018437 * AcceptedCmp40
1734931   +          +      1.1187666411593 * AcceptedCmp50  +     -0.0005124915346 *
1734932   +        Complain0  +    -0.07802187100635 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.22426256838634 * AcceptedCmp10 + 0.0373678700446 *
AcceptedCmp20 + -0.34019580311077 * AcceptedCmp30 + -0.06657561018437 * AcceptedCmp40 +
1.1187666411593 * AcceptedCmp50 + -0.0005124915346 * Complain0 + -0.07802187100635 *
HigherEducationBinary0 ;
1734933   +   H13  = H13  +     0.22922205033785 * AcceptedCmp10
1734934   +          +     0.61911667740136 * AcceptedCmp20  +      0.4334892671273 *
1734935   +        AcceptedCmp30  +     0.47499802255895 * AcceptedCmp40
1734936   +          +     0.09778924431294 * AcceptedCmp50  +     0.28935042910164 *
1734937   +        Complain0  +    -0.29804210825456 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.22922205033785 * AcceptedCmp10 + 0.61911667740136 *
AcceptedCmp20 + 0.4334892671273 * AcceptedCmp30 + 0.47499802255895 * AcceptedCmp40 +
0.09778924431294 * AcceptedCmp50 + 0.28935042910164 * Complain0 + -0.29804210825456 *
HigherEducationBinary0 ;
1734938   +   H11  = H11  +      0.0161257464845 * Education2n_Cycle
1734939   +          +     0.12153645157245 * EducationBasic  +     0.31018543557792 *
1734940   +        EducationGraduation  +    -0.04429611151736 * EducationMaster
1734941   +          +     0.12692950862511 * Marital_StatusDivorced
1734942   +          +     0.10026497666167 * Marital_StatusMarried
1734943   +          +    -0.19893864592813 * Marital_StatusSingle
1734944   +          +    -0.04062003397514 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.0161257464845 * Education2n_Cycle + 0.12153645157245 *
EducationBasic + 0.31018543557792 * EducationGraduation + -0.04429611151736 * EducationMaster
+ 0.12692950862511 * Marital_StatusDivorced + 0.10026497666167 * Marital_StatusMarried +
-0.19893864592813 * Marital_StatusSingle + -0.04062003397514 * Marital_StatusTogether ;
1734945   +   H12  = H12  +    -0.21839182894884 * Education2n_Cycle
1734946   +          +     0.31940013998474 * EducationBasic  +    -0.02690553782252 *
1734947   +        EducationGraduation  +     0.05580498138108 * EducationMaster
1734948   +          +    -0.16785192490199 * Marital_StatusDivorced
1734949   +          +     0.13153695130362 * Marital_StatusMarried
1734950   +          +    -0.50411544587104 * Marital_StatusSingle
1734951   +          +     0.13370566790692 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.21839182894884 * Education2n_Cycle + 0.31940013998474 *
EducationBasic + -0.02690553782252 * EducationGraduation + 0.05580498138108 * EducationMaster
+ -0.16785192490199 * Marital_StatusDivorced + 0.13153695130362 * Marital_StatusMarried +
-0.50411544587104 * Marital_StatusSingle + 0.13370566790692 * Marital_StatusTogether ;
1734952   +   H13  = H13  +     0.07130553159229 * Education2n_Cycle
1734953   +          +    -0.14879818143238 * EducationBasic  +     0.17822087456028 *
1734954   +        EducationGraduation  +     0.21882736952662 * EducationMaster
1734955   +          +    -0.62654958087044 * Marital_StatusDivorced
1734956   +          +     1.86250132393341 * Marital_StatusMarried
1734957   +          +    -1.37067556451928 * Marital_StatusSingle
1734958   +          +     1.14727921038174 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.07130553159229 * Education2n_Cycle + -0.14879818143238 *
EducationBasic + 0.17822087456028 * EducationGraduation + 0.21882736952662 * EducationMaster +
-0.62654958087044 * Marital_StatusDivorced + 1.86250132393341 * Marital_StatusMarried +
-1.37067556451928 * Marital_StatusSingle + 1.14727921038174 * Marital_StatusTogether ;
1734959   +   H11  =     -1.1990622461103 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -1.1990622461103 + H11 ;
1734960   +   H12  =       0.393123481714 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.393123481714 + H12 ;
1734961   +   H13  =     1.85498361608276 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = 1.85498361608276 + H13 ;
1734962   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1734963   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1734964   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1734965   +END;
MPRINT(EM_DIAGRAM):   END;
1734966   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1734967   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1734968   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1734969   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1734970   +END;
MPRINT(EM_DIAGRAM):   END;
1734971   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1734972   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1734973   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1734974   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1734975   +   P_DepVar1  =     2.52409534738218 * H11  +    -2.96034283825043 * H12
1734976   +          +    -3.36424404783147 * H13 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 2.52409534738218 * H11 + -2.96034283825043 * H12 +
-3.36424404783147 * H13 ;
1734977   +   P_DepVar1  =    -0.20096847833731 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.20096847833731 + P_DepVar1 ;
1734978   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1734979   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1734980   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1734981   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1734982   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1734983   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1734984   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1734985   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1734986   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1734987   +END;
MPRINT(EM_DIAGRAM):   END;
1734988   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1734989   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1734990   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1734991   +END;
MPRINT(EM_DIAGRAM):   END;
1734992   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1734993   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1734994   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1734995   +END;
MPRINT(EM_DIAGRAM):   END;
1734996   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1734997   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1734998   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1734999   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1735000   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1735001   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1735002   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1735003   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1735004   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1735005   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1735006   +END;
MPRINT(EM_DIAGRAM):   END;
1735007   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1735008   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1735009   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1735010   +drop
1735011   +H11
1735012   +H12
1735013   +H13
1735014   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 ;
1735015   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1735016    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1735017    quit;
1735018    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1735019    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1735020    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1735021    retain ID 2 Node "Neural3";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Neural3";
1735022    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1735023    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2354 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2354 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
1735024    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1735025    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1735026    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2354 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2354 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1735027    proc sort data=EMWS8.Neural3_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Neural3_variableset out=_temp2(keep=NAME CREATOR);
1735028    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1735029    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set EMWS8.NEURAL3_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1735030    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1735031    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1735032    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1735033    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1735034    proc contents data=EMWS8.Neural3_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Neural3_train out=_meta(keep=NAME) noprint;
1735035    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1735036    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1735037    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1735038    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1735039    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1735040    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1735041    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1735042    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 53 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1735043    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1735044    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1735044  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 1399 rows and 5 columns.
 
1735045    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1735046    proc append base=EMWS8.Ensmbl30_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl30_FCMP data=_tempx;
1735047    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL30_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 1399 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL30_FCMP has 1399 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1735048    filename _pref
1735048  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
1735049    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1735050    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
1735051   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1735052   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1735053   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1735054   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1735055   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1735056   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1735057    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1735058    quit;
1735059    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1735060    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1735061    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1735062    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
1735063    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1735064    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1735065    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1735066    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1735067    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1735068    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
1735069    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1735070    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
1735071    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1735072    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1735073    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1735074    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1735075    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
1735076    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1735077    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1735078    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1735079    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1735080    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1735081    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1735082    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1735083    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1735084    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1735085    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1735085  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.
 
1735086    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1735087    proc append base=EMWS8.Ensmbl30_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl30_FCMP data=_tempx;
1735088    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL30_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL30_FCMP has 1403 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1735089    filename _pref
1735089  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
1735090    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1735091    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
1735092   +
1735093   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1735094   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1735094  !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1735095   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1735096   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1735097   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1735098   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1735099   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1735100    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1735101    quit;
1735102    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1735103    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1735104    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1735105    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
1735106    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1735107    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1735108    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1735109    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1735110    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
The SAS System
 
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1735111    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
1735112    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1735113    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1735114    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1735115    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1735116    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1735117    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1735118    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
1735119    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1735120    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1735121    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1735122    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1735123    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1735124    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1735125    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1735126    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1735127    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1735128    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1735128  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.
 
1735129    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1735130    proc append base=EMWS8.Ensmbl30_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl30_FCMP data=_tempx;
1735131    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL30_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL30_FCMP has 1442 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1735132    filename _pref
1735132  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
1735133    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1735134    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
1735135   +
1735136   +
1735137   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
1735138   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
1735139   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
1735140   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
1735141   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
1735142   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1735143   +
1735144   +
1735145   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
1735146   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
1735147   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
1735148   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
1735149   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
1735150   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1735151   +
1735152   +
1735153   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
1735154   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
1735155   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
1735156   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
1735157   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
1735158   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1735159   +
1735160   +
1735161   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
1735162   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
1735163   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
1735164   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
1735165   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
1735166   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1735167   +
1735168   +
1735169   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
1735170   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
1735171   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
1735172   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
1735173   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
1735174   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1735175   +
1735176   +
1735177   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
1735178   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
1735179   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
1735180   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
1735181   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
1735182   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1735183   +
1735184   +
1735185   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
1735186   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
1735187   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
1735188   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
1735189   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
1735190   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1735191   +
1735192   +
1735193   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
1735194   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
1735195   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
1735196   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
1735197   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
1735198   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1735199   +if
1735200   +_FILTERNORM1 not in ( '.')
1735201   + and
1735202   +_FILTERNORM2 not in ( '.')
1735203   + and
1735204   +_FILTERNORM3 not in ( '.')
1735205   + and
1735206   +_FILTERNORM4 not in ( '.')
1735207   + and
1735208   +_FILTERNORM5 not in ( '.')
1735209   + and
1735210   +_FILTERNORM6 not in ( '.')
1735211   + and
1735212   +_FILTERNORM7 not in ( ' ')
1735213   + and
1735214   +_FILTERNORM8 not in ( ' ')
1735215   +and
1735216   +( Dt_Customer ne .)
1735217   +and ( Income ne . and (Income<=107000))
1735218   +and ( Kidhome ne .)
1735219   +and ( MntFishProducts ne .)
1735220   +and ( MntFruits ne .)
1735221   +and ( MntGoldProds ne .)
1735222   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
1735223   +and ( MntSweetProducts ne .)
1735224   +and ( MntWines ne .)
1735225   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
1735226   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
1735227   +and ( NumStorePurchases ne .)
1735228   +and ( NumWebPurchases ne .)
1735229   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
1735230   +and ( Recency ne .)
1735231   +and ( Teenhome ne .)
1735232   +and ( Year_Birth ne .)
1735233   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and (
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and (
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and (
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and (
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne
.) and ( Year_Birth ne .) then do;
1735234   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
1735235   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
1735236   +end;
MPRINT(EM_DIAGRAM):   end;
1735237   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
1735238   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1735239    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1735240    quit;
1735241    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1735242    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1735243    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1735244    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
1735245    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1735246    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1735247    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1735248    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1735249    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1735250    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
1735251    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1735252    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1735253    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1735254    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1735255    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1735256    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1735257    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
1735258    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1735259    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1735260    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1735261    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1735262    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1735263    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1735264    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1735265    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1735266    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1735267    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1735267  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.
 
1735268    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1735269    proc append base=EMWS8.Ensmbl30_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl30_FCMP data=_tempx;
1735270    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL30_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL30_FCMP has 1508 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1735271    %macro varDept(fcmpdata=,id=);
1735272    %global nobs&id scoreFlag&id;
1735273    %let scoreFlag&id = 0;
1735274    %if &id=1 or ^&fcmpStart %then %do;
1735275    proc sort data=&fcmpdata out=_temp&id nodupkey;
1735276    by NAME;
1735277    where id=&id and LHS in( %let j=1;
1735278    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
1735279    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
1735280    "&var" %let j = %eval(&j+1);
1735281    %end;
1735282    );
1735283    run;
1735284    %let dsid = %sysfunc(open(_temp&id));
1735285    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1735286    %let dsid = %sysfunc(close(&dsid));
1735287    %if &&nobs&id %then %do;
1735288    %let scoreFlag&id = 1;
1735289    %let fcmpStart = 1;
1735290    %end;
1735291    %else %let fcmpStart = 0;
1735292    %end;
1735293    %else %do;
1735294    proc sort data=&fcmpdata out=_tempid;
1735295    where id=&id;
1735296    by LHS;
1735297    run;
1735298    %let dsid = %sysfunc(open(_tempid));
1735299    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1735300    %let dsid = %sysfunc(close(&dsid));
1735301    %if ^&&nobs&id %then %do;
1735302    proc datasets lib=work nolist;
1735303    delete _tempid;
1735304    run;
1735305    quit;
1735306    %end;
1735307    %else %do;
1735308    data _tempAll;
1735309    set %let j=%eval(&id-1);
1735310    %do x=1 %to &j;
1735311    %if &&nobs&x %then %do;
1735312    _temp&x %end;
1735313    %end;
1735314    ;
1735315    run;
1735316    proc sql;
1735317    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
1735317  ! work._tempid p2 where p.name=p2.lhs;
1735318    quit;
1735319    data _temp&id;
1735320    set _temp&id;
1735321    where LHS ne '' and NAME ne '' and Node ne '';
1735322    run;
1735323    proc datasets lib=work nolist;
1735324    delete _tempAll;
1735325    run;
1735326    %let dsid = %sysfunc(open(_temp&id));
1735327    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1735328    %let dsid = %sysfunc(close(&dsid));
1735329    %if ^&&nobs&id %then %do;
1735330    proc datasets lib=work nolist;
1735331    delete _temp&id;
1735332    run;
1735333    quit;
1735334    %end;
1735335    %else %do;
1735336    %let scoreFlag&id = 1;
1735337    data _temp&id;
1735338    set _temp&id;
1735339    where LHS ne NAME and node ne '';
1735340    run;
1735341    %let dsid = %sysfunc(open(_temp&id));
1735342    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1735343    %let dsid = %sysfunc(close(&dsid));
1735344    %if ^&&nobs&id %then %do;
1735345    proc datasets lib=work nolist;
1735346    delete _temp&id;
1735347    run;
1735348    quit;
1735349    %end;
1735350    %else %do;
1735351    proc sort data=_temp&id nodupkey;
1735352    by LHS NAME;
1735353    run;
1735354    %end;
1735355    %end;
1735356    %end;
1735357    %end;
1735358    %mend varDept;
1735359    %macro optCode(outdata=fcmpdata);
1735360    %global fcmpStart;
1735361    %let fcmpStart = 0;
1735362    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
1735363    %let NumNodes=9;
1735364    %do k=1 %to &NumNodes;
1735365    %vardept(fcmpdata=&outdata, id=&k);
1735366    %end;
1735367    %mend optCode;
1735368    %optcode(outData=EMWS8.Ensmbl30_FCMP);
MPRINT(EM_DIAGRAM):
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl30_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL30_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl30_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: There were 134 observations read from the data set EMWS8.ENSMBL30_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 100 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 34 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl30_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL30_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl30_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL30_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl30_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set EMWS8.ENSMBL30_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 34 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 4 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl30_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set EMWS8.ENSMBL30_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 38 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 39 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl30_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 66 observations read from the data set EMWS8.ENSMBL30_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 77 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl30_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL30_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl30_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL30_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;
 
1735369    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
1735370    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1735371    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
1735372    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1735373    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
1735374    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1735375    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
1735376    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1735377    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1735378    create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
1735378  ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 4 rows and 3 columns.
 
1735379    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1735380    data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
1735381    set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
1735382    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 4 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 4 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1735383    filename _pref
1735383  ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural2\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Neural2\EMPUBLISHSCORE.sas";
1735384    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1735385    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Neural2\EMPUBLISHSCORE.sas.
1735386   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1735387   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1735388   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1735389   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1735390   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1735391   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1735392   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1735393   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1735394   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1735395   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1735396   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1735397   +LENGTH _WARN_ $4
1735398   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
1735399   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1735400   +
1735401   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1735402   +
1735403   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1735404   +
1735405   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1735406   +
1735407   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1735408   +
1735409   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1735410   +
1735411   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1735412   +
1735413   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1735414   +
1735415   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1735416   +
1735417   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1735418   +
1735419   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1735420   +
1735421   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1735422   +
1735423   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1735424   +
1735425   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1735426   +
1735427   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1735428   +
1735429   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1735430   +
1735431   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1735432   +
1735433   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1735434   +
1735435   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1735436   +
1735437   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1735438   +
1735439   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1735440   +
1735441   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1735442   +
1735443   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1735444   +
1735445   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1735446   +
1735447   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1735448   +
1735449   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1735450   +
1735451   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1735452   +
1735453   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1735454   +
1735455   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1735456   +
1735457   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1735458   +
1735459   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1735460   +
1735461   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1735462   +
1735463   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1735464   +
1735465   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1735466   +
1735467   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1735468   +
1735469   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1735470   +
1735471   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1735472   +
1735473   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1735474   +
1735475   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1735476   +
1735477   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1735478   +
1735479   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1735480   +
1735481   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1735482   +
1735483   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1735484   +
1735485   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1735486   +
1735487   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1735488   +
1735489   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1735490   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1735491   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1735492   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1735493   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1735494   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1735495   +end;
MPRINT(EM_DIAGRAM):   end;
1735496   +else do;
MPRINT(EM_DIAGRAM):   else do;
1735497   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1735498   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1735499   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1735500   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1735501   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1735502   +   end;
MPRINT(EM_DIAGRAM):   end;
1735503   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1735504   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1735505   +   end;
MPRINT(EM_DIAGRAM):   end;
1735506   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1735507   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1735508   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1735509   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1735510   +   end;
MPRINT(EM_DIAGRAM):   end;
1735511   +end;
MPRINT(EM_DIAGRAM):   end;
1735512   +
1735513   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1735514   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1735515   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1735516   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1735517   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1735518   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1735519   +end;
MPRINT(EM_DIAGRAM):   end;
1735520   +else do;
MPRINT(EM_DIAGRAM):   else do;
1735521   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1735522   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1735523   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1735524   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1735525   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1735526   +   end;
MPRINT(EM_DIAGRAM):   end;
1735527   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1735528   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1735529   +   end;
MPRINT(EM_DIAGRAM):   end;
1735530   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1735531   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1735532   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1735533   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1735534   +   end;
MPRINT(EM_DIAGRAM):   end;
1735535   +end;
MPRINT(EM_DIAGRAM):   end;
1735536   +
1735537   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1735538   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1735539   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1735540   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1735541   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1735542   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1735543   +end;
MPRINT(EM_DIAGRAM):   end;
1735544   +else do;
MPRINT(EM_DIAGRAM):   else do;
1735545   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1735546   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1735547   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1735548   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1735549   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1735550   +   end;
MPRINT(EM_DIAGRAM):   end;
1735551   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1735552   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1735553   +   end;
MPRINT(EM_DIAGRAM):   end;
1735554   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1735555   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1735556   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1735557   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1735558   +   end;
MPRINT(EM_DIAGRAM):   end;
1735559   +end;
MPRINT(EM_DIAGRAM):   end;
1735560   +
1735561   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1735562   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1735563   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1735564   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1735565   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1735566   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1735567   +end;
MPRINT(EM_DIAGRAM):   end;
1735568   +else do;
MPRINT(EM_DIAGRAM):   else do;
1735569   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1735570   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1735571   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1735572   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1735573   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1735574   +   end;
MPRINT(EM_DIAGRAM):   end;
1735575   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1735576   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1735577   +   end;
MPRINT(EM_DIAGRAM):   end;
1735578   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1735579   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1735580   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1735581   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1735582   +   end;
MPRINT(EM_DIAGRAM):   end;
1735583   +end;
MPRINT(EM_DIAGRAM):   end;
1735584   +
1735585   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1735586   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1735587   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1735588   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1735589   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1735590   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1735591   +end;
MPRINT(EM_DIAGRAM):   end;
1735592   +else do;
MPRINT(EM_DIAGRAM):   else do;
1735593   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1735594   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1735595   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1735596   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1735597   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1735598   +   end;
MPRINT(EM_DIAGRAM):   end;
1735599   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1735600   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1735601   +   end;
MPRINT(EM_DIAGRAM):   end;
1735602   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1735603   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1735604   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1735605   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1735606   +   end;
MPRINT(EM_DIAGRAM):   end;
1735607   +end;
MPRINT(EM_DIAGRAM):   end;
1735608   +
1735609   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1735610   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1735611   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1735612   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1735613   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1735614   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1735615   +end;
MPRINT(EM_DIAGRAM):   end;
1735616   +else do;
MPRINT(EM_DIAGRAM):   else do;
1735617   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1735618   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1735619   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1735620   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1735621   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1735622   +   end;
MPRINT(EM_DIAGRAM):   end;
1735623   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1735624   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1735625   +   end;
MPRINT(EM_DIAGRAM):   end;
1735626   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1735627   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1735628   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1735629   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1735630   +   end;
MPRINT(EM_DIAGRAM):   end;
1735631   +end;
MPRINT(EM_DIAGRAM):   end;
1735632   +
1735633   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1735634   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1735635   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1735636   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1735637   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1735638   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1735639   +end;
MPRINT(EM_DIAGRAM):   end;
1735640   +else do;
MPRINT(EM_DIAGRAM):   else do;
1735641   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1735642   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1735643   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1735644   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1735645   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1735646   +   end;
MPRINT(EM_DIAGRAM):   end;
1735647   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1735648   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1735649   +   end;
MPRINT(EM_DIAGRAM):   end;
1735650   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1735651   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1735652   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1735653   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1735654   +   end;
MPRINT(EM_DIAGRAM):   end;
1735655   +end;
MPRINT(EM_DIAGRAM):   end;
1735656   +
1735657   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1735658   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
1735659   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1735660   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1735661   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1735662   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1735663   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1735664   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1735665   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1735666   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1735667   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1735668   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1735669   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1735670   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1735671   +end;
MPRINT(EM_DIAGRAM):   end;
1735672   +else do;
MPRINT(EM_DIAGRAM):   else do;
1735673   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1735674   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1735675   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1735676   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1735677   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1735678   +   end;
MPRINT(EM_DIAGRAM):   end;
1735679   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1735680   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1735681   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1735682   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1735683   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1735684   +   end;
MPRINT(EM_DIAGRAM):   end;
1735685   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1735686   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1735687   +   end;
MPRINT(EM_DIAGRAM):   end;
1735688   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1735689   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1735690   +   end;
MPRINT(EM_DIAGRAM):   end;
1735691   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1735692   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1735693   +   end;
MPRINT(EM_DIAGRAM):   end;
1735694   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1735695   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1735696   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1735697   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1735698   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1735699   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1735700   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1735701   +   end;
MPRINT(EM_DIAGRAM):   end;
1735702   +end;
MPRINT(EM_DIAGRAM):   end;
1735703   +
1735704   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1735705   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1735706   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
1735707   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1735708   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1735709   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1735710   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1735711   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1735712   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1735713   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1735714   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1735715   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1735716   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1735717   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1735718   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1735719   +end;
MPRINT(EM_DIAGRAM):   end;
1735720   +else do;
MPRINT(EM_DIAGRAM):   else do;
1735721   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1735722   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1735723   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1735724   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1735725   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1735726   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1735727   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1735728   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1735729   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1735730   +         end;
MPRINT(EM_DIAGRAM):   end;
1735731   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1735732   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1735733   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1735734   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1735735   +            end;
MPRINT(EM_DIAGRAM):   end;
1735736   +         end;
MPRINT(EM_DIAGRAM):   end;
1735737   +      end;
MPRINT(EM_DIAGRAM):   end;
1735738   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1735739   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1735740   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1735741   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1735742   +         end;
MPRINT(EM_DIAGRAM):   end;
1735743   +      end;
MPRINT(EM_DIAGRAM):   end;
1735744   +   end;
MPRINT(EM_DIAGRAM):   end;
1735745   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1735746   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1735747   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1735748   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1735749   +      end;
MPRINT(EM_DIAGRAM):   end;
1735750   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1735751   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1735752   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1735753   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1735754   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1735755   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1735756   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1735757   +         end;
MPRINT(EM_DIAGRAM):   end;
1735758   +      end;
MPRINT(EM_DIAGRAM):   end;
1735759   +   end;
MPRINT(EM_DIAGRAM):   end;
1735760   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1735761   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1735762   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1735763   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1735764   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1735765   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1735766   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1735767   +   end;
MPRINT(EM_DIAGRAM):   end;
1735768   +end;
MPRINT(EM_DIAGRAM):   end;
1735769   +
1735770   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1735771   +*** Checking missing input Interval
1735772   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1735773   +
1735774   +IF NMISS(
1735775   +   AcceptedCmpTotal ,
1735776   +   Age ,
1735777   +   Frq ,
1735778   +   Income ,
1735779   +   Kidhome ,
1735780   +   Mnt ,
1735781   +   MntFishProducts ,
1735782   +   MntFruits ,
1735783   +   MntGoldProds ,
1735784   +   MntMeatProducts ,
1735785   +   MntSweetProducts ,
1735786   +   MntWines ,
1735787   +   MonthsAsCustomer ,
1735788   +   NumCatalogPurchases ,
1735789   +   NumDealsPurchases ,
1735790   +   NumDistPurchases ,
1735791   +   NumStorePurchases ,
1735792   +   NumWebPurchases ,
1735793   +   NumWebVisitsMonth ,
1735794   +   RFMstat ,
1735795   +   RMntFrq ,
1735796   +   Recency ,
1735797   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
1735798   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1735799   +
1735800   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1735801   +END;
MPRINT(EM_DIAGRAM):   END;
1735802   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1735803   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1735804   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1735805   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1735806   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1735807   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1735808   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1735809   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1735810   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1735811   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1735812   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1735813   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1735814   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1735815   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1735816   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1735817   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1735818   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1735819   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1735820   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1735821   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1735822   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1735823   +   S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
1735824   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 *
MonthsAsCustomer ;
1735825   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1735826   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1735827   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1735828   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1735829   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1735830   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1735831   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1735832   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1735833   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1735834   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1735835   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1735836   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1735837   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1735838   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1735839   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1735840   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1735841   +END;
MPRINT(EM_DIAGRAM):   END;
1735842   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1735843   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1735844   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1735845   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1735846   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1735847   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1735848   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1735849   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1735850   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1735851   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1735852   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1735853   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1735854   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1735855   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1735856   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1735857   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1735858   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1735859   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1735860   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1735861   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1735862   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1735863   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1735864   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
1735865   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1735866   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1735867   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1735868   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1735869   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1735870   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1735871   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1735872   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1735873   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1735874   +   ELSE S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
1735875   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 *
MonthsAsCustomer ;
1735876   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1735877   +   ELSE S_NumCatalogPurchases
1735878   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1735879   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1735880   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1735881   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1735882   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1735883   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1735884   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1735885   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1735886   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1735887   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1735888   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1735889   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1735890   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1735891   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1735892   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1735893   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1735894   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1735895   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1735896   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1735897   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1735898   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1735899   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1735900   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1735901   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1735902   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1735903   +END;
MPRINT(EM_DIAGRAM):   END;
1735904   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1735905   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1735906   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1735907   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1735908   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1735909   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1735910   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1735911   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1735912   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1735913   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1735914   +   H11  =     0.29832012449804 * S_AcceptedCmpTotal  +     0.15692046705022 *
1735915   +        S_Age  +      0.2349092670043 * S_Frq  +     1.19016389982628 *
1735916   +        S_Income  +    -1.07615700855274 * S_Kidhome
1735917   +          +    -0.33525941199741 * S_Mnt  +    -0.11896237449995 *
1735918   +        S_MntFishProducts  +    -0.05881189485031 * S_MntFruits
1735919   +          +    -0.04848284440297 * S_MntGoldProds  +     0.36672196891436 *
1735920   +        S_MntMeatProducts  +    -0.21996224739852 * S_MntSweetProducts
1735921   +          +    -0.60947028245288 * S_MntWines  +    -0.00068050663419 *
1735922   +        S_MonthsAsCustomer  +     0.54450402479339 * S_NumCatalogPurchases
1735923   +          +      0.3429043319369 * S_NumDealsPurchases
1735924   +          +     0.71313309767469 * S_NumDistPurchases
1735925   +          +     0.06017757740083 * S_NumStorePurchases
1735926   +          +    -0.19817724925068 * S_NumWebPurchases
1735927   +          +     1.34164122205952 * S_NumWebVisitsMonth
1735928   +          +    -0.01000866410417 * S_RFMstat  +      1.1678492086198 *
1735929   +        S_RMntFrq  +     -1.5774263784376 * S_Recency
1735930   +          +    -0.86503713663798 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.29832012449804 * S_AcceptedCmpTotal + 0.15692046705022 * S_Age +
0.2349092670043 * S_Frq + 1.19016389982628 * S_Income + -1.07615700855274 * S_Kidhome +
-0.33525941199741 * S_Mnt + -0.11896237449995 * S_MntFishProducts + -0.05881189485031 *
S_MntFruits + -0.04848284440297 * S_MntGoldProds + 0.36672196891436 * S_MntMeatProducts +
-0.21996224739852 * S_MntSweetProducts + -0.60947028245288 * S_MntWines + -0.00068050663419 *
S_MonthsAsCustomer + 0.54450402479339 * S_NumCatalogPurchases + 0.3429043319369 *
S_NumDealsPurchases + 0.71313309767469 * S_NumDistPurchases + 0.06017757740083 *
S_NumStorePurchases + -0.19817724925068 * S_NumWebPurchases + 1.34164122205952 *
S_NumWebVisitsMonth + -0.01000866410417 * S_RFMstat + 1.1678492086198 * S_RMntFrq +
-1.5774263784376 * S_Recency + -0.86503713663798 * S_Teenhome ;
1735931   +   H12  =     0.31490280577029 * S_AcceptedCmpTotal  +    -0.09111153110919 *
1735932   +        S_Age  +    -0.16055597693761 * S_Frq  +     0.10319479451271 *
1735933   +        S_Income  +     -0.0027232441092 * S_Kidhome
1735934   +          +    -0.62384470029952 * S_Mnt  +    -0.04454372411008 *
1735935   +        S_MntFishProducts  +    -0.24996025343988 * S_MntFruits
1735936   +          +    -0.01365003759591 * S_MntGoldProds  +     0.62835016670964 *
1735937   +        S_MntMeatProducts  +     -0.1052005092038 * S_MntSweetProducts
1735938   +          +    -1.14216465806662 * S_MntWines  +    -0.05060158666038 *
1735939   +        S_MonthsAsCustomer  +     0.67098319001245 * S_NumCatalogPurchases
1735940   +          +      0.4576973746858 * S_NumDealsPurchases
1735941   +          +     0.15590877272659 * S_NumDistPurchases
1735942   +          +    -0.33414539713736 * S_NumStorePurchases
1735943   +          +    -0.39370244666257 * S_NumWebPurchases
1735944   +          +     0.52596714886704 * S_NumWebVisitsMonth
1735945   +          +     0.20790882491682 * S_RFMstat  +     0.70718304112796 *
1735946   +        S_RMntFrq  +    -0.55973256565759 * S_Recency
1735947   +          +    -0.02572672808252 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = 0.31490280577029 * S_AcceptedCmpTotal + -0.09111153110919 * S_Age
+ -0.16055597693761 * S_Frq + 0.10319479451271 * S_Income + -0.0027232441092 * S_Kidhome +
-0.62384470029952 * S_Mnt + -0.04454372411008 * S_MntFishProducts + -0.24996025343988 *
S_MntFruits + -0.01365003759591 * S_MntGoldProds + 0.62835016670964 * S_MntMeatProducts +
-0.1052005092038 * S_MntSweetProducts + -1.14216465806662 * S_MntWines + -0.05060158666038 *
S_MonthsAsCustomer + 0.67098319001245 * S_NumCatalogPurchases + 0.4576973746858 *
S_NumDealsPurchases + 0.15590877272659 * S_NumDistPurchases + -0.33414539713736 *
S_NumStorePurchases + -0.39370244666257 * S_NumWebPurchases + 0.52596714886704 *
S_NumWebVisitsMonth + 0.20790882491682 * S_RFMstat + 0.70718304112796 * S_RMntFrq +
-0.55973256565759 * S_Recency + -0.02572672808252 * S_Teenhome ;
1735948   +   H11  = H11  +    -0.25877430314813 * AcceptedCmp10
1735949   +          +     -0.6949843667221 * AcceptedCmp20  +    -0.57934320804112 *
1735950   +        AcceptedCmp30  +    -0.51703039002497 * AcceptedCmp40
1735951   +          +    -0.28854562528092 * AcceptedCmp50  +    -0.24441198875632 *
1735952   +        Complain0  +     0.22905299573529 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.25877430314813 * AcceptedCmp10 + -0.6949843667221 *
AcceptedCmp20 + -0.57934320804112 * AcceptedCmp30 + -0.51703039002497 * AcceptedCmp40 +
-0.28854562528092 * AcceptedCmp50 + -0.24441198875632 * Complain0 + 0.22905299573529 *
HigherEducationBinary0 ;
1735953   +   H12  = H12  +    -0.36418677755527 * AcceptedCmp10
1735954   +          +    -0.33815290545566 * AcceptedCmp20  +    -0.02820722241017 *
1735955   +        AcceptedCmp30  +      0.0020982855306 * AcceptedCmp40
1735956   +          +    -0.12224106432236 * AcceptedCmp50  +    -0.06102493109146 *
1735957   +        Complain0  +    -0.17583153481867 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.36418677755527 * AcceptedCmp10 + -0.33815290545566 *
AcceptedCmp20 + -0.02820722241017 * AcceptedCmp30 + 0.0020982855306 * AcceptedCmp40 +
-0.12224106432236 * AcceptedCmp50 + -0.06102493109146 * Complain0 + -0.17583153481867 *
HigherEducationBinary0 ;
1735958   +   H11  = H11  +     0.04231863714836 * Education2n_Cycle
1735959   +          +     0.10274571656153 * EducationBasic  +    -0.09649867506574 *
1735960   +        EducationGraduation  +      -0.333138438339 * EducationMaster
1735961   +          +      0.4663802937397 * Marital_StatusDivorced
1735962   +          +    -1.27401898796099 * Marital_StatusMarried
1735963   +          +      1.3125969368079 * Marital_StatusSingle
1735964   +          +     -0.9460069950427 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.04231863714836 * Education2n_Cycle + 0.10274571656153 *
EducationBasic + -0.09649867506574 * EducationGraduation + -0.333138438339 * EducationMaster +
0.4663802937397 * Marital_StatusDivorced + -1.27401898796099 * Marital_StatusMarried +
1.3125969368079 * Marital_StatusSingle + -0.9460069950427 * Marital_StatusTogether ;
1735965   +   H12  = H12  +     0.04207507898653 * Education2n_Cycle
1735966   +          +    -0.00061313728148 * EducationBasic  +     0.02179374448207 *
1735967   +        EducationGraduation  +     0.00771527138053 * EducationMaster
1735968   +          +     0.07419179522004 * Marital_StatusDivorced
1735969   +          +     0.00234615813337 * Marital_StatusMarried
1735970   +          +    -0.00725460458412 * Marital_StatusSingle
1735971   +          +    -0.02397482300018 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.04207507898653 * Education2n_Cycle + -0.00061313728148 *
EducationBasic + 0.02179374448207 * EducationGraduation + 0.00771527138053 * EducationMaster +
0.07419179522004 * Marital_StatusDivorced + 0.00234615813337 * Marital_StatusMarried +
-0.00725460458412 * Marital_StatusSingle + -0.02397482300018 * Marital_StatusTogether ;
1735972   +   H11  =    -2.08419455884264 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -2.08419455884264 + H11 ;
1735973   +   H12  =    -0.67124132448844 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -0.67124132448844 + H12 ;
1735974   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1735975   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1735976   +END;
MPRINT(EM_DIAGRAM):   END;
1735977   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1735978   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1735979   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1735980   +END;
MPRINT(EM_DIAGRAM):   END;
1735981   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1735982   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1735983   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1735984   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1735985   +   P_DepVar1  =     5.63543253335428 * H11  +     6.13213445041394 * H12 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 5.63543253335428 * H11 + 6.13213445041394 * H12 ;
1735986   +   P_DepVar1  =     3.20970411510782 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 3.20970411510782 + P_DepVar1 ;
1735987   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1735988   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1735989   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1735990   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1735991   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1735992   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1735993   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1735994   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1735995   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1735996   +END;
MPRINT(EM_DIAGRAM):   END;
1735997   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1735998   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1735999   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1736000   +END;
MPRINT(EM_DIAGRAM):   END;
1736001   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1736002   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1736003   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1736004   +END;
MPRINT(EM_DIAGRAM):   END;
1736005   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1736006   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1736007   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1736008   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1736009   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1736010   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1736011   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1736012   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1736013   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1736014   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1736015   +END;
MPRINT(EM_DIAGRAM):   END;
1736016   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1736017   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1736018   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1736019   +drop
1736020   +H11
1736021   +H12
1736022   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 ;
1736023   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1736024    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1736025    quit;
1736026    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1736027    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1736028    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1736029    retain ID 2 Node "Neural2";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Neural2";
1736030    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1736031    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2180 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2180 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1736032    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1736033    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1736034    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2180 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2180 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1736035    proc sort data=EMWS8.Neural2_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Neural2_variableset out=_temp2(keep=NAME CREATOR);
1736036    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1736037    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set EMWS8.NEURAL2_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1736038    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1736039    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1736040    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1736041    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1736042    proc contents data=EMWS8.Neural2_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Neural2_train out=_meta(keep=NAME) noprint;
1736043    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1736044    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1736045    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1736046    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1736047    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1736048    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1736049    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1736050    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 53 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1736051    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1736052    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1736052  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 1335 rows and 5 columns.
 
1736053    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1736054    proc append base=EMWS8.Ensmbl30_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl30_FCMP data=_tempx;
1736055    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL30_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 1335 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL30_FCMP has 1335 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1736056    filename _pref
1736056  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
1736057    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1736058    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
1736059   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1736060   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1736061   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1736062   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1736063   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1736064   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1736065    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1736066    quit;
1736067    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1736068    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1736069    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1736070    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
1736071    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1736072    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1736073    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1736074    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1736075    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1736076    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
1736077    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1736078    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1736079    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1736080    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1736081    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1736082    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1736083    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
1736084    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1736085    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1736086    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1736087    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1736088    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1736089    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1736090    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1736091    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1736092    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1736093    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1736093  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.
 
1736094    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1736095    proc append base=EMWS8.Ensmbl30_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl30_FCMP data=_tempx;
1736096    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL30_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL30_FCMP has 1339 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1736097    filename _pref
1736097  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
1736098    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1736099    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
1736100   +
1736101   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1736102   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1736102  !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1736103   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1736104   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1736105   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1736106   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1736107   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1736108    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1736109    quit;
1736110    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1736111    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1736112    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1736113    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
1736114    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1736115    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1736116    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1736117    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1736118    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1736119    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
1736120    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1736121    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1736122    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1736123    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1736124    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1736125    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1736126    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
1736127    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1736128    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1736129    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1736130    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1736131    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1736132    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1736133    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1736134    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1736135    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1736136    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1736136  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.
 
1736137    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1736138    proc append base=EMWS8.Ensmbl30_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl30_FCMP data=_tempx;
1736139    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL30_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL30_FCMP has 1378 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1736140    filename _pref
1736140  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
1736141    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1736142    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
1736143   +
1736144   +
1736145   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
1736146   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
1736147   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
1736148   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
1736149   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
1736150   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1736151   +
1736152   +
1736153   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
1736154   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
1736155   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
1736156   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
1736157   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
1736158   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1736159   +
1736160   +
1736161   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
1736162   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
1736163   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
1736164   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
1736165   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
1736166   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1736167   +
1736168   +
1736169   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
1736170   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
1736171   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
1736172   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
1736173   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
1736174   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1736175   +
1736176   +
1736177   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
1736178   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
1736179   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
1736180   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
1736181   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
1736182   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1736183   +
1736184   +
1736185   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
1736186   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
1736187   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
1736188   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
1736189   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
1736190   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1736191   +
1736192   +
1736193   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
1736194   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
1736195   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
1736196   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
1736197   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
1736198   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1736199   +
1736200   +
1736201   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
1736202   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
1736203   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
1736204   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
1736205   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
1736206   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1736207   +if
1736208   +_FILTERNORM1 not in ( '.')
1736209   + and
1736210   +_FILTERNORM2 not in ( '.')
1736211   + and
1736212   +_FILTERNORM3 not in ( '.')
1736213   + and
1736214   +_FILTERNORM4 not in ( '.')
1736215   + and
1736216   +_FILTERNORM5 not in ( '.')
1736217   + and
1736218   +_FILTERNORM6 not in ( '.')
1736219   + and
1736220   +_FILTERNORM7 not in ( ' ')
1736221   + and
1736222   +_FILTERNORM8 not in ( ' ')
1736223   +and
1736224   +( Dt_Customer ne .)
1736225   +and ( Income ne . and (Income<=107000))
1736226   +and ( Kidhome ne .)
1736227   +and ( MntFishProducts ne .)
1736228   +and ( MntFruits ne .)
1736229   +and ( MntGoldProds ne .)
1736230   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
1736231   +and ( MntSweetProducts ne .)
1736232   +and ( MntWines ne .)
1736233   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
1736234   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
1736235   +and ( NumStorePurchases ne .)
1736236   +and ( NumWebPurchases ne .)
1736237   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
1736238   +and ( Recency ne .)
1736239   +and ( Teenhome ne .)
1736240   +and ( Year_Birth ne .)
1736241   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and (
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and (
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and (
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and (
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne
.) and ( Year_Birth ne .) then do;
1736242   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
1736243   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
1736244   +end;
MPRINT(EM_DIAGRAM):   end;
1736245   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
1736246   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1736247    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1736248    quit;
1736249    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1736250    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1736251    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1736252    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
1736253    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1736254    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1736255    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1736256    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1736257    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1736258    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
1736259    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1736260    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1736261    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1736262    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1736263    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1736264    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1736265    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
1736266    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1736267    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1736268    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1736269    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1736270    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1736271    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1736272    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1736273    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1736274    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1736275    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1736275  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.
 
1736276    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1736277    proc append base=EMWS8.Ensmbl30_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl30_FCMP data=_tempx;
1736278    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL30_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL30_FCMP has 1444 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1736279    %macro varDept(fcmpdata=,id=);
1736280    %global nobs&id scoreFlag&id;
1736281    %let scoreFlag&id = 0;
1736282    %if &id=1 or ^&fcmpStart %then %do;
1736283    proc sort data=&fcmpdata out=_temp&id nodupkey;
1736284    by NAME;
1736285    where id=&id and LHS in( %let j=1;
1736286    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
1736287    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
1736288    "&var" %let j = %eval(&j+1);
1736289    %end;
1736290    );
1736291    run;
1736292    %let dsid = %sysfunc(open(_temp&id));
1736293    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1736294    %let dsid = %sysfunc(close(&dsid));
1736295    %if &&nobs&id %then %do;
1736296    %let scoreFlag&id = 1;
1736297    %let fcmpStart = 1;
1736298    %end;
1736299    %else %let fcmpStart = 0;
1736300    %end;
1736301    %else %do;
1736302    proc sort data=&fcmpdata out=_tempid;
1736303    where id=&id;
1736304    by LHS;
1736305    run;
1736306    %let dsid = %sysfunc(open(_tempid));
1736307    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1736308    %let dsid = %sysfunc(close(&dsid));
1736309    %if ^&&nobs&id %then %do;
1736310    proc datasets lib=work nolist;
1736311    delete _tempid;
1736312    run;
1736313    quit;
1736314    %end;
1736315    %else %do;
1736316    data _tempAll;
1736317    set %let j=%eval(&id-1);
1736318    %do x=1 %to &j;
1736319    %if &&nobs&x %then %do;
1736320    _temp&x %end;
1736321    %end;
1736322    ;
1736323    run;
1736324    proc sql;
1736325    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
1736325  ! work._tempid p2 where p.name=p2.lhs;
1736326    quit;
1736327    data _temp&id;
1736328    set _temp&id;
1736329    where LHS ne '' and NAME ne '' and Node ne '';
1736330    run;
1736331    proc datasets lib=work nolist;
1736332    delete _tempAll;
1736333    run;
1736334    %let dsid = %sysfunc(open(_temp&id));
1736335    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1736336    %let dsid = %sysfunc(close(&dsid));
1736337    %if ^&&nobs&id %then %do;
1736338    proc datasets lib=work nolist;
1736339    delete _temp&id;
1736340    run;
1736341    quit;
1736342    %end;
1736343    %else %do;
1736344    %let scoreFlag&id = 1;
1736345    data _temp&id;
1736346    set _temp&id;
1736347    where LHS ne NAME and node ne '';
1736348    run;
1736349    %let dsid = %sysfunc(open(_temp&id));
1736350    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1736351    %let dsid = %sysfunc(close(&dsid));
1736352    %if ^&&nobs&id %then %do;
1736353    proc datasets lib=work nolist;
1736354    delete _temp&id;
1736355    run;
1736356    quit;
1736357    %end;
1736358    %else %do;
1736359    proc sort data=_temp&id nodupkey;
1736360    by LHS NAME;
1736361    run;
1736362    %end;
1736363    %end;
1736364    %end;
1736365    %end;
1736366    %mend varDept;
1736367    %macro optCode(outdata=fcmpdata);
1736368    %global fcmpStart;
1736369    %let fcmpStart = 0;
1736370    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
1736371    %let NumNodes=9;
1736372    %do k=1 %to &NumNodes;
1736373    %vardept(fcmpdata=&outdata, id=&k);
1736374    %end;
1736375    %mend optCode;
1736376    %optcode(outData=EMWS8.Ensmbl30_FCMP);
MPRINT(EM_DIAGRAM):
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl30_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL30_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl30_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: There were 134 observations read from the data set EMWS8.ENSMBL30_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 100 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 34 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl30_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL30_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl30_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL30_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl30_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set EMWS8.ENSMBL30_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 34 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 4 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl30_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set EMWS8.ENSMBL30_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 38 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 39 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl30_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 66 observations read from the data set EMWS8.ENSMBL30_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 77 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl30_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL30_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl30_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL30_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;
 
1736377    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
1736378    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1736379    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
1736380    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1736381    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
1736382    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1736383    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
1736384    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1736385    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1736386    create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
1736386  ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 4 rows and 3 columns.
 
1736387    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1736388    data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
1736389    set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
1736390    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 4 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 4 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1736391    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
1736392    * Ensmbl30: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * Ensmbl30: Computing metadata for TRAIN data;
1736393    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
 
NOTE: View EMWS8.ENSMBL30_TRAIN.VIEW used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
 
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl30\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS8.Ensmbl30_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS8.Ensmbl30_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS8.Ensmbl30_TRAIN out=WORK.M19D9I8V noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M19D9I8V;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20
INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M19D9I8V(keep=name type length label format formatl
formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then format = strip(format)!!strip(put(formatl,
best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd,
best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then informat =
strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl,
best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M19D9I8V;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M19D9I8V;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M3MJ5270 NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3MJ5270;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M3MJ5270;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M32QGZ_9(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M3MJ5270;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3MJ5270;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32
FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M3MJ5270;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN"
"MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO"
"QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" "YEAR" "YYMMDD" "YYMON"
"YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD"
"EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" ))
formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype =
"DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" ))
formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT"
"NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB"
"SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType =
"DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then
level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA',
'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W',
'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_
('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL',
'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT',
'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3MJ5270;
MPRINT(EMADVISECOLUMNS):   set WORK.M3MJ5270;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL=
"Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY=
"Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower limit" UPPERLIMIT=
"Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL=
"Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Neural9_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Neural9_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl30_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT
LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "Ensmbl30";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("P_DEPVAR1") creator = "Ensmbl30";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR1") creator = "Ensmbl30";
MPRINT(EM_DIAGRAM):   when("P_DEPVAR0") creator = "Ensmbl30";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR0") creator = "Ensmbl30";
MPRINT(EM_DIAGRAM):   when("F_DEPVAR") creator = "Ensmbl30";
MPRINT(EM_DIAGRAM):   when("I_DEPVAR") creator = "Ensmbl30";
MPRINT(EM_DIAGRAM):   when("U_DEPVAR") creator = "Ensmbl30";
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "Ensmbl30";
MPRINT(EM_DIAGRAM):   when("DEPVAR") model = "Ensmbl30";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl30: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   if NAME in( "I_DepVar" "F_DepVar" "U_DepVar" "_WARN_" "P_DepVar1"
"P_DepVar0" "R_DepVar1" "R_DepVar0" ) then CREATOR="Ensmbl30";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
1736713    data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
1736714    set EMWS8.Ensmbl30_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl30_EMINFO;
1736715    where DATA='Ensmbl30' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='Ensmbl30' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE',
'MODEL');
1736716    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL30_EMINFO.
      WHERE (DATA='Ensmbl30') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1736717    data EMWS8.Ensmbl30_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS8.Ensmbl30_EMINFO;
1736718    length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
1736719    input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
1736720    cards;
MPRINT(EM_DIAGRAM):   cards;
 
NOTE: The data set EMWS8.ENSMBL30_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   run;
1736724    run;
1736725    data EMWS8.Ensmbl30_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl30_EMINFO;
1736726    set EMWS8.Ensmbl30_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl30_EMINFO WORK.MODELTEMP_INFO;
1736727    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set EMWS8.ENSMBL30_EMINFO.
NOTE: There were 0 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS8.ENSMBL30_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1736728    proc sort data = EMWS8.Ensmbl30_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.Ensmbl30_EMINFO NOTHREADS;
1736729    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
1736730    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set EMWS8.ENSMBL30_EMINFO.
NOTE: The data set EMWS8.ENSMBL30_EMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1736731    proc sort data = EMWS8.Neural9_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.Neural9_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
1736732    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
1736733    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set EMWS8.NEURAL9_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1736734    proc sort data = EMWS8.Ensmbl30_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS8.Ensmbl30_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
1736735    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
1736736    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 3 observations read from the data set EMWS8.ENSMBL30_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1736737    data EMWS8.Ensmbl30_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl30_EMINFO;
1736738    merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
1736739    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
1736740    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 3 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS8.ENSMBL30_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1736741    proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
1736742    delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
1736743    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
1736744    quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
NOTE: View EMWS8.ENSMBL30_TRAIN.VIEW used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
NOTE: View EMWS8.ENSMBL30_VALIDATE.VIEW used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "19. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "17.33 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Report Log
Date:                19. April 2016
Time:                17.33 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O1HN746M
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl30\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O1HN746M new;
MPRINT(EM_DIAGRAM):   run;
1736768    data EMWS8.Ensmbl30_EMOUTFIT;
MPRINT(EM_DIAGRAM):    data EMWS8.Ensmbl30_EMOUTFIT;
1736769    set EMWS8.Ensmbl30_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl30_EMOUTFIT;
1736770    length TargetLabel $200;
MPRINT(EM_DIAGRAM):   length TargetLabel $200;
1736771    label targetLabel = "%sysfunc(sasmsg(sashelp.dmine, meta_targetlabel_vlabel,
1736771  ! NOQUOTE))";
MPRINT(EM_DIAGRAM):   label targetLabel = "Target Label";
1736772    if upcase(TARGET) eq "DEPVAR" then TargetLabel = 'DepVar';
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TargetLabel = 'DepVar';
1736773    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.ENSMBL30_EMOUTFIT.
NOTE: The data set EMWS8.ENSMBL30_EMOUTFIT has 1 observations and 20 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1736774    proc sort data=EMWS8.Ensmbl30_EMREPORTFIT nothreads;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS8.Ensmbl30_EMREPORTFIT nothreads;
1736775    by TARGET;
MPRINT(EM_DIAGRAM):   by TARGET;
1736776    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 9 observations read from the data set EMWS8.ENSMBL30_EMREPORTFIT.
NOTE: The data set EMWS8.ENSMBL30_EMREPORTFIT has 9 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1736777    %let _EMwarndup = 0;
1736778    %let _EMtargetdup =;
1736779    %let _EMASEtargetdup =;
1736780    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
1736781    set EMWS8.Ensmbl30_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl30_EMOUTFIT;
1736782    if .<_ASE_<0.000001 then do;
MPRINT(EM_DIAGRAM):   if .<_ASE_<0.000001 then do;
1736783    call symput('_EMwarndup', '1');
MPRINT(EM_DIAGRAM):   call symput('_EMwarndup', '1');
1736784    call symput('_EMtargetdup', target);
MPRINT(EM_DIAGRAM):   call symput('_EMtargetdup', target);
1736785    call symput('_EMASEtargetdup', put(_ASE_, best.));
MPRINT(EM_DIAGRAM):   call symput('_EMASEtargetdup', put(_ASE_, best.));
1736786    end;
MPRINT(EM_DIAGRAM):   end;
1736787    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.ENSMBL30_EMOUTFIT.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1736788    proc sort data=EMWS8.Neural3_CMeta_TRAIN out=WORK.SUBSETINMETA;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS8.Neural3_CMeta_TRAIN out=WORK.SUBSETINMETA;
1736789    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1736790    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set EMWS8.NEURAL3_CMETA_TRAIN.
NOTE: The data set WORK.SUBSETINMETA has 44 observations and 21 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1736791    proc sort data=EMWS8.Ensmbl30_VariableSet out=WORK.SUBSETVARSET(keep=NAME REPORT);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Ensmbl30_VariableSet
out=WORK.SUBSETVARSET(keep=NAME REPORT);
1736792    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1736793    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set EMWS8.ENSMBL30_VARIABLESET.
NOTE: The data set WORK.SUBSETVARSET has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1736794    data WORK.ASSESS_META;
MPRINT(EM_DIAGRAM):   data WORK.ASSESS_META;
1736795    merge WORK.SUBSETINMETA WORK.SUBSETVARSET;
MPRINT(EM_DIAGRAM):   merge WORK.SUBSETINMETA WORK.SUBSETVARSET;
1736796    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1736797    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set WORK.SUBSETINMETA.
NOTE: There were 34 observations read from the data set WORK.SUBSETVARSET.
NOTE: The data set WORK.ASSESS_META has 44 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1736798    data EM_temp_assessMeta;
MPRINT(EM_DIAGRAM):    data EM_temp_assessMeta;
1736799    set EMWS8.Ensmbl30_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl30_CMeta_TRAIN;
1736800    where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION', 'ASSESS', 'COST')
1736800  ! ;
MPRINT(EM_DIAGRAM):   where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION',
'ASSESS', 'COST');
1736801    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set EMWS8.ENSMBL30_CMETA_TRAIN.
      WHERE role in ('ASSESS', 'CLASSIFICATION', 'COST', 'DECISION', 'PREDICT', 'RESIDUAL');
NOTE: The data set WORK.EM_TEMP_ASSESSMETA has 8 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1736802    data EM_temp_assessdata;
MPRINT(EM_DIAGRAM):    data EM_temp_assessdata;
1736803    set EMWS8.Ensmbl30_TRAIN(keep=
1736804    F_DepVar
1736805    I_DepVar
1736806    P_DepVar0
1736807    P_DepVar1
1736808    R_DepVar0
1736809    R_DepVar1
1736810    U_DepVar
1736811    _WARN_
1736812    DepVar
1736813    );
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl30_TRAIN(keep= F_DepVar I_DepVar P_DepVar0 P_DepVar1
R_DepVar0 R_DepVar1 U_DepVar _WARN_ DepVar );
1736814    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2374 observations read from the data set EMWS8.PART_TRAIN.
NOTE: There were 2374 observations read from the data set EMWS8.META_TRAIN.
NOTE: View EMWS8.ENSMBL30_TRAIN.VIEW used (Total process time):
      real time           0.10 seconds
      cpu time            0.12 seconds
 
NOTE: There were 2374 observations read from the data set EMWS8.NEURAL9_TRAIN.
NOTE: There were 2374 observations read from the data set EMWS8.ENSMBL30_TRAIN.
NOTE: The data set WORK.EM_TEMP_ASSESSDATA has 2374 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.10 seconds
      cpu time            0.12 seconds
 
 
MPRINT(EM_DIAGRAM):    proc freq data=EM_temp_assessdata noprint;
MPRINT(EM_DIAGRAM):   table I_DepVar*F_DepVar / out = WORK.Ensmbl30_0F3JLGO nocol norow outpct;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.Ensmbl30_0F3JLGO;
MPRINT(EM_DIAGRAM):   length _TYPE_ $10 DATAROLE TARGET $32 TARGETLABEL $200 FROM INTO $32
CORRECTTEXT $40 ;
MPRINT(EM_DIAGRAM):   label _TYPE_ = "Outcome Type";
MPRINT(EM_DIAGRAM):   label DATAROLE = "Data Role";
MPRINT(EM_DIAGRAM):   label TARGET = "Target Variable";
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   label FROM = "Target";
MPRINT(EM_DIAGRAM):   label INTO = "Outcome";
MPRINT(EM_DIAGRAM):   label PCT_ROW = "Target Percentage";
MPRINT(EM_DIAGRAM):   label PCT_COL = "Outcome Percentage";
MPRINT(EM_DIAGRAM):   label COUNT = "Frequency Count";
MPRINT(EM_DIAGRAM):   label PERCENT = "Total Percentage";
MPRINT(EM_DIAGRAM):   label CORRECTTEXT = "Correct Text";
MPRINT(EM_DIAGRAM):   label CORRECT = "Correct";
MPRINT(EM_DIAGRAM):   set WORK.Ensmbl30_0F3JLGO(rename=(F_DepVar=FROM I_DepVar=INTO));
MPRINT(EM_DIAGRAM):   retain _TYPE_ 'PREDICTION' DATAROLE "TRAIN" TARGET "DepVar";
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TARGETLABEL = 'DepVar';
MPRINT(EM_DIAGRAM):   if FROM eq INTO then do;
MPRINT(EM_DIAGRAM):   CORRECT = 0;
MPRINT(EM_DIAGRAM):   CORRECTTEXT="Correct";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   CORRECT = 1;
MPRINT(EM_DIAGRAM):   CORRECTTEXT="Incorrect";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS8.Ensmbl30_EMCLASSIFICATION;
MPRINT(EM_DIAGRAM):   set WORK.Ensmbl30_0F3JLGO;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   set WORK.Ensmbl30_0F3JLGO;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.MISCREPORT(drop=INTO FROM _TYPE_);
MPRINT(EM_DIAGRAM):   set WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   length MISC $12;
MPRINT(EM_DIAGRAM):   if FROM='1' and INTO='1' then MISC='TRUEEVENT';
MPRINT(EM_DIAGRAM):   else if FROM='1' and INTO ne '1' then MISC='FALSENEVENT';
MPRINT(EM_DIAGRAM):   else if FROM ne '1' and INTO='1' then MISC='FALSEEVENT';
MPRINT(EM_DIAGRAM):   else if FROM ne'1' and INTO ne '1' then MISC='TRUENEVENT';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.MISCREPORT nothreads;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc summary data=WORK.MISCREPORT NWAY;
MPRINT(EM_DIAGRAM):   output out=WORK.MISCCOUNT(drop=_FREQ_ _TYPE_) SUM=COUNT;
MPRINT(EM_DIAGRAM):   CLASS MISC;
MPRINT(EM_DIAGRAM):   VAR COUNT;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc transpose data=WORK.MISCCOUNT out=WORK.MISCREPORT(drop=_NAME_
_LABEL_);
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   ID MISC;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS8.Ensmbl30_EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   length TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TARGETLABEL = 'DepVar';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data ASSESS_REPORTMETA;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl30_VariableSet;
MPRINT(EM_DIAGRAM):   where REPORT='Y';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename temp catalog 'sashelp.emassmt.em_assess.source';
MPRINT(EM_DIAGRAM):   filename temp;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural3_DepVar_DM;
MPRINT(EM_DIAGRAM):   where _TYPE_="TARGET";
MPRINT(EM_DIAGRAM):   call symput('ASSMT_EVENT', strip(event));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):
MPRINT(EM_ASSESS):   data _ea_tmpdata;
MPRINT(EM_ASSESS):   set EM_temp_assessdata;
MPRINT(EM_ASSESS):   _tmpfreqvar_=1;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_CHECKEMSETINIT):   DATA _NULL_;
MPRINT(EM_CHECKEMSETINIT):   EM_SETINIT = 'N';
MPRINT(EM_CHECKEMSETINIT):   IF SYSPROD('PRODNUM50') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM448') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM102') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM103') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   CALL SYMPUT('EM_SETINIT', EM_SETINIT);
MPRINT(EM_CHECKEMSETINIT):   RUN;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Reading in reporting data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET ASSESS_REPORTMETA END = EOF;
MPRINT(EM_ASSESS):   IF TYPE = "C" OR UPCASE (LEVEL) IN ("NOMINAL", "BINARY" , "ORDINAL") THEN
DO;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) NE UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   NUMCTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTC" || LEFT (PUT (NUMCTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "C");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF UPCASE(NAME) NE UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   NUMNTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTN" || LEFT (PUT (NUMNTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMNTOREPORT", NUMNTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMCTOREPORT", NUMCTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMTOREPORT", SUM (NUMNTOREPORT, NUMCTOREPORT));
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   PROC DMDB DATA = _ea_tmpdata VAROUT = VAROUT DMDBCAT = _D CLASSOUT =
_ASSMT_CLASSOUT;
MPRINT(EM_ASSESS):   CLASS F_DepVar ;
 
MPRINT(EM_ASSESS):   VAR P_DepVar1 _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_;
MPRINT(EM_ASSESS):   RUN ;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   PROC SORT DATA = _ASSMT_CLASSOUT;
MPRINT(EM_ASSESS):   BY NAME;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _auxeventname (keep = __event__) ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ...FLAG0_1 = ..... TARGET IS 0, 1 & EVENT = 1;
 
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   length __event__ $ 32;
MPRINT(EM_ASSESS):   RETAIN FLAG0_1 1 NUM1 . NUM0 . __event__ "_missing_" ;
 
MPRINT(EM_ASSESS):   SET _ASSMT_CLASSOUT END = EOF;
MPRINT(EM_ASSESS):   BY NAME;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ....... LEVEL = BINARY OR NOMINAL OR ORDINAL;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   IF UPCASE(NAME) = UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   CUMFREQ + FREQUENCY;
MPRINT(EM_ASSESS):   IF LEVEL NE "." THEN DO;
MPRINT(EM_ASSESS):   N1 + 1;
MPRINT(EM_ASSESS):   IF (NRAW NE 0 AND NRAW NE 1) OR TYPE NE "N" OR "" > " " THEN FLAG0_1 = 0;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ......................... IF EVENT NE BLANK;
MPRINT(EM_ASSESS):   * ....................LEVEL IS CHAR VAR ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   IF UPCASE("1") = UPCASE(LEVEL) THEN DO;
MPRINT(EM_ASSESS):   NUM1 = FREQUENCY;
MPRINT(EM_ASSESS):   IF TYPE = "C" THEN do;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("EVENTVALUERAW", CRAW );
MPRINT(EM_ASSESS):   __event__ = craw;
MPRINT(EM_ASSESS):   end;
MPRINT(EM_ASSESS):   ELSE do;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("EVENTVALUERAW", NRAW );
MPRINT(EM_ASSESS):   __event__ = nraw;
MPRINT(EM_ASSESS):   end;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF LAST.NAME THEN DO;
 
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * .............. IN NOMINAL CASE, NEED TO GROUP ALL '0' ;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   NUM0 = SUM (CUMFREQ, - NUM1);
MPRINT(EM_ASSESS):   IF NUM0 < 0 THEN NUM0 = 0;
MPRINT(EM_ASSESS):   IF NUM1 = . THEN NUM1 = 0;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUM0", NUM0 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUM1", NUM1);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PNUM1", NUM1 / CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PNUM0", (CUMFREQ - NUM1) / CUMFREQ);
MPRINT(EM_ASSESS):   IF TYPE = "C" THEN DO;
MPRINT(EM_ASSESS):   FLAG0_1 = 0;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "C" );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF "" = " " THEN DO;
MPRINT(EM_ASSESS):   IF "1" NE "1" THEN FLAG0_1 = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "N" );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ................... IF TYPE = N;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("FLAG0_1", FLAG0_1 );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..................IF LAST.NAME ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ...............IF LEVEL NE '.' ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * .............. IF NAME = TARGET;
MPRINT(EM_ASSESS):   ELSE IF "" > " " AND UPCASE(NAME) = UPCASE("") THEN DO;
MPRINT(EM_ASSESS):   NUMDECISIONS + 1;
MPRINT(EM_ASSESS):   LEVEL = TRANSLATE (LEVEL, "_", "'", "_", '"');
MPRINT(EM_ASSESS):   CALL SYMPUTX ("D_LABEL" || LEFT (PUT (NUMDECISIONS, 3.)), LEVEL );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..................... ELSE IF UPCASE;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   output _auxeventname;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMOBS", CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMDECISIONS", NUMDECISIONS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET VAROUT END = EOF;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) = UPCASE ("P_DepVar1") THEN DO;
MPRINT(EM_ASSESS):   IF N = 0 THEN DO;
MPRINT(EM_ASSESS):   PUT //// "          Warning: All posterior probabilities are missing
values ";
MPRINT(EM_ASSESS):   PUT ///;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("ALLMISS", 1);
MPRINT(EM_ASSESS):   STOP;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("ALLMISS", 0);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB", MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB", MAX);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("DIFF", MAX - MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NMISSPROB", NMISS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF UPCASE (NAME) = UPCASE ("_tmpfreqvar_") THEN DO;
MPRINT(EM_ASSESS):   AUXMIN = MIN - INT (MIN);
MPRINT(EM_ASSESS):   AUXMAX = MAX - INT (MAX);
MPRINT(EM_ASSESS):   IF AUXMIN > 0 OR AUXMAX > 0 THEN CALL SYMPUTX ("USEWEIGHT", "Y");
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("USEWEIGHT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _ANY0;
MPRINT(EM_ASSESS):   SET _ea_tmpdata (KEEP = F_DepVar P_DepVar1 _tmpfreqvar_ );
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................... No Formats;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF LEFT ( F_DepVar ) = "1" THEN NTARGET = 1;
MPRINT(EM_ASSESS):   ELSE NTARGET = 0;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .............. Before proc summary of binary case;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC SUMMARY DATA = _ANY0 (KEEP = P_DepVar1 NTARGET _tmpfreqvar_ WHERE =
(NTARGET > . )) NWAY MISSING;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   CLASS P_DepVar1 ;
MPRINT(EM_ASSESS):   VAR NTARGET ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   OUTPUT OUT = ANYSUM (DROP = _TYPE_) MEAN = _MEANTARGET _MEANFREQVAR ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... Main Data Set Processing, Binary case;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK (KEEP = BASECAPC BASECAP __EVENT__ BASEEVENTS
BASEGAIN BASELIFT BASERESP BASERESPC BESTCAP BESTCAPC BESTGAIN BESTLIFT BESTLIFTC
BESTNUMEVENTS BESTRESP BESTRESPC BIN CBASELIFT C_LIFT C_P_CAPT_RESP C_P_RESP GAIN LIFT MAXPROB
MINPROB MNPROB NUMNONRESP NUMOBS NUMRESP PERCENTILE P_CAPT_RESP P_RESP ) WORK._TEMPSCOREDIST
(KEEP = BIN LOWERPROB UPPERPROB EVENTVALUE SCR_NUMEVENTS MODELSCORE SCR_NUMNONEVENTS RANGE
NUMOBSINGROUP PERCOBSINGROUP C_PERCOBSINGROUP SCR_P_EVENTS SCR_CP_EVENTS SCR_P_NONEVENTS
SCR_CP_NONEVENTS SCR_MNPROB SCR_MINPROB SCR_MAXPROB ) ;
 
MPRINT(EM_ASSESS):   SET ANYSUM END = EOF;
 
MPRINT(EM_ASSESS):   IF _N_ = 1 THEN SET _AUXEVENTNAME;
 
MPRINT(EM_ASSESS):   RETAIN MINPROB1 - MINPROB20 1 MAXPROB1 - MAXPROB20 0 MNPROB1 - MNPROB20 0
NUMOBS1 - NUMOBS20 0 NUMRESP1 - NUMRESP20 0 TRUEPOS1 - TRUEPOS100 0 TRUENEG1 - TRUENEG100 0
FALSEPOS1 - FALSEPOS100 0 FALSENEG1 - FALSENEG100 0 EVENTS1 - EVENTS100 NONEVENTS1 -
NONEVENTS100 0 FIRSTIN1 - FIRSTIN100 . LASTIN1 - LASTIN100 . RESPRATE 0.151221567 _NEVENTS 359
_NNONEVENTS 2015 TARGET "NTARGET" ;
MPRINT(EM_ASSESS):   ARRAY MINPROBS (20) MINPROB1 - MINPROB20;
MPRINT(EM_ASSESS):   ARRAY MAXPROBS (20) MAXPROB1 - MAXPROB20;
MPRINT(EM_ASSESS):   ARRAY MNPROBS (20) MNPROB1 - MNPROB20;
MPRINT(EM_ASSESS):   ARRAY NUMOBSS (20) NUMOBS1 - NUMOBS20;
MPRINT(EM_ASSESS):   ARRAY NUMRESPS (20) NUMRESP1 - NUMRESP20;
MPRINT(EM_ASSESS):   ARRAY TRUEPOSX (100) TRUEPOS1 - TRUEPOS100;
MPRINT(EM_ASSESS):   ARRAY FALSEPOSX (100) FALSEPOS1 - FALSEPOS100;
MPRINT(EM_ASSESS):   ARRAY FALSENEGX (100) FALSENEG1 - FALSENEG100;
MPRINT(EM_ASSESS):   ARRAY TRUENEGX (100) TRUENEG1 - TRUENEG100;
MPRINT(EM_ASSESS):   ARRAY _EVENTS (100) EVENTS1 - EVENTS100;
MPRINT(EM_ASSESS):   ARRAY NONEVENTS (100) NONEVENTS1 - NONEVENTS100;
MPRINT(EM_ASSESS):   ARRAY FIRSTIN (100) FIRSTIN1 - FIRSTIN100;
MPRINT(EM_ASSESS):   ARRAY LASTIN (100) LASTIN1 - LASTIN100;
MPRINT(EM_ASSESS):   RETAIN SCR_MNPROB1 - SCR_MNPROB100 0 SCR_MINPROB1 - SCR_MINPROB100 1
SCR_MAXPROB1 - SCR_MAXPROB100 0;
MPRINT(EM_ASSESS):   ARRAY SCR_MNPROBS (100) SCR_MNPROB1 - SCR_MNPROB100;
MPRINT(EM_ASSESS):   ARRAY SCR_MINPROBS (100) SCR_MINPROB1 - SCR_MINPROB100;
MPRINT(EM_ASSESS):   ARRAY SCR_MAXPROBS (100) SCR_MAXPROB1 - SCR_MAXPROB100;
MPRINT(EM_ASSESS):   DROP SCR_MINPROB1 - SCR_MINPROB100 SCR_MAXPROB1 - SCR_MAXPROB100
SCR_MNPROB1 - SCR_MNPROB100 ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...... Area For 8 Financials ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF _MEANTARGET = . THEN _MEANTARGET = RESPRATE;
MPRINT(EM_ASSESS):   DROP N1 _K SUMWEIGHTS ;
MPRINT(EM_ASSESS):   SUMWEIGHTS = 1;
 
MPRINT(EM_ASSESS):   DO _K = 1 TO CEIL (_FREQ_);
MPRINT(EM_ASSESS):   IF _K = CEIL (_FREQ_) THEN DO;
MPRINT(EM_ASSESS):   IF _FREQ_ < CEIL (_FREQ_) THEN _WEIGHT = _FREQ_ - FLOOR (_FREQ_);
MPRINT(EM_ASSESS):   ELSE _WEIGHT = 1;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE _WEIGHT = 1;
MPRINT(EM_ASSESS):   N1 + _WEIGHT;
MPRINT(EM_ASSESS):   NTARGET = _MEANTARGET ;
MPRINT(EM_ASSESS):   DECILE = MIN (20, CEIL (N1 * 20 / 2374));
MPRINT(EM_ASSESS):   MINPROBS ( DECILE) = MIN (MINPROBS ( DECILE), P_DepVar1 );
MPRINT(EM_ASSESS):   MAXPROBS ( DECILE) = MAX (MAXPROBS ( DECILE), P_DepVar1 );
MPRINT(EM_ASSESS):   MNPROBS ( DECILE) = SUM (MNPROBS ( DECILE), P_DepVar1 * _WEIGHT);
MPRINT(EM_ASSESS):   NUMOBSS ( DECILE) = NUMOBSS ( DECILE) + _WEIGHT;
MPRINT(EM_ASSESS):   NUMRESPS ( DECILE) = NUMRESPS ( DECILE) + _MEANTARGET * _WEIGHT;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ outside of do loop, Area for final ROC;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   RANKDELTA = (ROUND ( _FREQ_ ) + 1) / 2;
MPRINT(EM_ASSESS):   RANK = UNTIEDRANK + RANKDELTA;
MPRINT(EM_ASSESS):   DROP RANK ;
MPRINT(EM_ASSESS):   SUMRANK1 + RANK * ROUND (_MEANTARGET * _FREQ_, .0000001);
MPRINT(EM_ASSESS):   UNTIEDRANK + ROUND (_FREQ_, .00000001);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Area For ROC Curve;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DO _K = 1 TO 100;
MPRINT(EM_ASSESS):   IF P_DepVar1 * 100 >= _K THEN DO;
MPRINT(EM_ASSESS):   TRUEPOSX ( _K ) + _FREQ_ * _MEANTARGET ;
MPRINT(EM_ASSESS):   FALSEPOSX ( _K ) + _FREQ_ * (1 - _MEANTARGET) ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   TRUENEGX ( _K ) + _FREQ_ * ( 1 - _MEANTARGET) ;
MPRINT(EM_ASSESS):   FALSENEGX ( _K ) + _FREQ_ * _MEANTARGET ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   SLOT = MIN (MAX (CEIL (P_DepVar1 * 100), 1), 100) ;
MPRINT(EM_ASSESS):   DROP SLOT;
MPRINT(EM_ASSESS):   FIRSTIN ( SLOT ) = MIN ( FIRSTIN ( SLOT ), P_DepVar1);
MPRINT(EM_ASSESS):   LASTIN ( SLOT ) = MAX ( LASTIN ( SLOT ), P_DepVar1);
MPRINT(EM_ASSESS):   _EVENTS ( SLOT) = _EVENTS ( SLOT) + _FREQ_ * _MEANTARGET;
MPRINT(EM_ASSESS):   NONEVENTS ( SLOT) = NONEVENTS ( SLOT) + _FREQ_ * (1 - _MEANTARGET);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ START OF OUTDIST IN BINARY CASE MAIN DATA STEP ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   SCR_MNPROBS ( SLOT ) = SUM (SCR_MNPROBS (SLOT), P_DepVar1 * _FREQ_ );
MPRINT(EM_ASSESS):   SCR_MINPROBS ( SLOT ) = MIN (SCR_MINPROBS (SLOT), P_DepVar1 );
MPRINT(EM_ASSESS):   SCR_MAXPROBS ( SLOT ) = MAX (SCR_MAXPROBS (SLOT), P_DepVar1 );
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ End of Outdist in Binary case main DATA STEP ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   PUT //;
MPRINT(EM_ASSESS):   DO K = 1 TO 20;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LENGTH EVENTVALUE $ 32;
MPRINT(EM_ASSESS):   RETAIN EVENTVALUE "1" ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ......... Start of EOF area of BINARY processing of main data set ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SUMRANK1", SUMRANK1);
MPRINT(EM_ASSESS):   LENGTH DATAROLE $ 10;
MPRINT(EM_ASSESS):   RETAIN DATAROLE "TRAIN" ;
MPRINT(EM_ASSESS):   RETAIN OVLMIN 0.0001036892 OVLMAX 0.9999378032 ;
MPRINT(EM_ASSESS):   DROP OVLMIN OVLMAX ;
MPRINT(EM_ASSESS):   C_NUMOBS = 0;
MPRINT(EM_ASSESS):   C_NUM_RESP = 0;
MPRINT(EM_ASSESS):   C_NUM_NONRESP = 0;
MPRINT(EM_ASSESS):   C_P_RESP = 0;
MPRINT(EM_ASSESS):   P_CAPT_RESP = 0;
MPRINT(EM_ASSESS):   C_P_CAPT_RESP = 0;
MPRINT(EM_ASSESS):   PREVIOUSPROFIT = 0;
MPRINT(EM_ASSESS):   MAXPROFIT = 0;
MPRINT(EM_ASSESS):   _KS_BIN_ = 0;
MPRINT(EM_ASSESS):   DROP _KS_BIN_;
MPRINT(EM_ASSESS):   AVGNUMRESP = _NEVENTS / 20;
MPRINT(EM_ASSESS):   BASERESP = 100 * RESPRATE;
MPRINT(EM_ASSESS):   BASERESPC = BASERESP;
MPRINT(EM_ASSESS):   BASECAP = 100 / 20;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................Start OF Gainschart = Outranks Area;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   _KS_BIN_PROB = 0;
MPRINT(EM_ASSESS):   DO GROUP = 20 TO 1 BY -1;
 
MPRINT(EM_ASSESS):   BASECAPC + BASECAP;
MPRINT(EM_ASSESS):   PERCENTILE = GROUP * (100 / 20);
MPRINT(EM_ASSESS):   MINPROB = MINPROBS ( GROUP);
MPRINT(EM_ASSESS):   MAXPROB = MAXPROBS ( GROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB" || LEFT ( PUT (GROUP, 3.)), MINPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB" || LEFT ( PUT (GROUP, 3.)), MAXPROB);
MPRINT(EM_ASSESS):   NUMOBS = NUMOBSS ( GROUP);
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN MNPROB = MNPROBS ( GROUP) / NUMOBS;
MPRINT(EM_ASSESS):   ELSE MNPROB = .;
MPRINT(EM_ASSESS):   C_NUMOBS = SUM (NUMOBS, C_NUMOBS);
MPRINT(EM_ASSESS):   NUMRESP = NUMRESPS ( GROUP);
MPRINT(EM_ASSESS):   NUMNONRESP = NUMOBS - NUMRESP;
MPRINT(EM_ASSESS):   C_AVGNUM_RESP + AVGNUMRESP;
MPRINT(EM_ASSESS):   IF C_NUMOBS <= _NEVENTS THEN DO;
MPRINT(EM_ASSESS):   BESTNUMEVENTS = NUMOBS;
MPRINT(EM_ASSESS):   BESTCAPC = C_NUMOBS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   BASEEVENTS = _NEVENTS / 20;
MPRINT(EM_ASSESS):   BASENONEVENTS = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   FLAG + 1;
MPRINT(EM_ASSESS):   DROP FLAG;
MPRINT(EM_ASSESS):   BESTNUMEVENTS = _NEVENTS - C_NUMOBS + NUMOBS;
MPRINT(EM_ASSESS):   IF FLAG > 1 THEN BESTNUMEVENTS = 0;
MPRINT(EM_ASSESS):   BESTCAPC = 100;
MPRINT(EM_ASSESS):   IF C_NUMOBS - _NEVENTS <= NUMOBS THEN DO;
MPRINT(EM_ASSESS):   BASEEVENTS = C_NUMOBS - _NEVENTS;
MPRINT(EM_ASSESS):   BASENONEVENTS = NUMOBS - C_NUMOBS + _NEVENTS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BASEEVENTS = 0;
MPRINT(EM_ASSESS):   BASENONEVENTS = NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   BESTCAP = BESTNUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   BESTLIFT = BESTNUMEVENTS / AVGNUMRESP;
MPRINT(EM_ASSESS):   C_BESTNUMEVENTS + BESTNUMEVENTS;
MPRINT(EM_ASSESS):   DROP C_BESTNUMEVENTS;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN BESTLIFTC = C_BESTNUMEVENTS / (_NEVENTS / 2374 *
C_NUMOBS);
MPRINT(EM_ASSESS):   ELSE BESTLIFTC = .;
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BESTRESP = BESTNUMEVENTS * 100 / NUMOBS;
MPRINT(EM_ASSESS):   P_RESP = NUMRESP * 100 / NUMOBS;
MPRINT(EM_ASSESS):   P_NONRESP = NUMNONRESP * 100 / NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTRESP = .;
MPRINT(EM_ASSESS):   P_RESP = .;
MPRINT(EM_ASSESS):   P_NONRESP = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BESTRESPC = C_BESTNUMEVENTS * 100 / C_NUMOBS;
MPRINT(EM_ASSESS):   BESTGAIN = MAX (0, ((C_BESTNUMEVENTS / C_NUMOBS ) / ( AVGNUMRESP /
NUMOBS) - 1) * 100);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTRESPC = .;
MPRINT(EM_ASSESS):   BESTGAIN = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF NUMNONRESP > 0 THEN ODDS = NUMRESP / NUMNONRESP;
MPRINT(EM_ASSESS):   ELSE ODDS = .;
MPRINT(EM_ASSESS):   C_NUM_RESP = SUM (C_NUM_RESP , NUMRESP );
MPRINT(EM_ASSESS):   C_NUM_NONRESP = SUM (C_NUM_NONRESP, NUMNONRESP );
MPRINT(EM_ASSESS):   IF C_NUM_NONRESP > 0 THEN C_ODDS = C_NUM_RESP / C_NUM_NONRESP;
MPRINT(EM_ASSESS):   ELSE C_ODDS = .;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   C_P_RESP = C_NUM_RESP * 100 / C_NUMOBS;
MPRINT(EM_ASSESS):   GAIN = ABS(100 * (((C_NUM_RESP / C_NUMOBS ) / (_NEVENTS / 2374)) - 1));
MPRINT(EM_ASSESS):   BASEGAIN = 100 * (( (C_AVGNUM_RESP / C_NUMOBS) / ( AVGNUMRESP / NUMOBS))
- 1);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   GAIN = .;
MPRINT(EM_ASSESS):   BASEGAIN = .;
MPRINT(EM_ASSESS):   C_P_RESP = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF BASEGAIN <= 0 THEN BASEGAIN = 0;
MPRINT(EM_ASSESS):   P_CAPT_RESP = NUMRESP * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   P_CAPT_NONRESP = NUMNONRESP * 100 / ( 2374 - _NEVENTS);
MPRINT(EM_ASSESS):   C_P_CAPT_RESP = C_NUM_RESP * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   C_P_CAPT_NONRESP = C_NUM_NONRESP * 100 / ( 2374 - _NEVENTS);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Area For Binned KS in Outranks area;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   _DIFFERENCE = C_P_CAPT_RESP - C_P_CAPT_NONRESP ;
MPRINT(EM_ASSESS):   IF _KS_BIN_ < _DIFFERENCE THEN DO;
MPRINT(EM_ASSESS):   _KS_BIN_ = _DIFFERENCE;
MPRINT(EM_ASSESS):   _KS_BIN_PROB = MINPROB + (MAXPROB - MINPROB) / 2 ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LIFT = P_RESP * .01 / RESPRATE ;
MPRINT(EM_ASSESS):   C_LIFT = C_P_RESP * .01 / RESPRATE;
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BASELIFT = AVGNUMRESP / ( RESPRATE * NUMOBS );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE BASELIFT = .;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN CBASELIFT = C_AVGNUM_RESP / (RESPRATE * C_NUMOBS);
MPRINT(EM_ASSESS):   ELSE CBASELIFT = .;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ WITHIN DO LOOP FOR OUTRANKS;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   BIN = 20 + 1 - GROUP;
MPRINT(EM_ASSESS):   PERCENTILE = BIN * (100 / 20);
MPRINT(EM_ASSESS):   B_C_P_RESP = PERCENTILE;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPRANK ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................ END OF GAINSCHART = OUTRANKS AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROFITGROUP" , MAXPROFITGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROFIT" , MAXPROFIT );
MPRINT(EM_ASSESS):   KS_ABSDIFF = 0 ;
MPRINT(EM_ASSESS):   MINPRECTPR = 9999;
MPRINT(EM_ASSESS):   Y0 = 1 - RESPRATE;
MPRINT(EM_ASSESS):   Y1 = RESPRATE;
MPRINT(EM_ASSESS):   MAXMUTUAL = 0;
MPRINT(EM_ASSESS):   DROP MAXMUTUAL KSPROB Y0 Y1 KS_ABSDIFF MINPRECTPR;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .....................About to start Processing Outroc ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................... Finished Processing Outroc ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .............. Outdist ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   BIN = 20 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS96 - EVENTS100 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS96 - NONEVENTS100);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB96 -
SCR_MNPROB100) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB96 - SCR_MINPROB100) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB96 - SCR_MAXPROB100) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 20;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 19 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS91 - EVENTS95 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS91 - NONEVENTS95);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB91 -
SCR_MNPROB95) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB91 - SCR_MINPROB95) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB91 - SCR_MAXPROB95) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 19;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 18 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS86 - EVENTS90 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS86 - NONEVENTS90);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB86 -
SCR_MNPROB90) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB86 - SCR_MINPROB90) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB86 - SCR_MAXPROB90) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 18;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 17 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS81 - EVENTS85 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS81 - NONEVENTS85);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB81 -
SCR_MNPROB85) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB81 - SCR_MINPROB85) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB81 - SCR_MAXPROB85) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 17;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 16 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS76 - EVENTS80 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS76 - NONEVENTS80);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB76 -
SCR_MNPROB80) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB76 - SCR_MINPROB80) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB76 - SCR_MAXPROB80) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 16;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 15 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS71 - EVENTS75 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS71 - NONEVENTS75);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB71 -
SCR_MNPROB75) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB71 - SCR_MINPROB75) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB71 - SCR_MAXPROB75) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 15;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 14 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS66 - EVENTS70 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS66 - NONEVENTS70);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB66 -
SCR_MNPROB70) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB66 - SCR_MINPROB70) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB66 - SCR_MAXPROB70) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 14;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 13 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS61 - EVENTS65 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS61 - NONEVENTS65);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB61 -
SCR_MNPROB65) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB61 - SCR_MINPROB65) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB61 - SCR_MAXPROB65) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 13;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 12 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS56 - EVENTS60 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS56 - NONEVENTS60);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB56 -
SCR_MNPROB60) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB56 - SCR_MINPROB60) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB56 - SCR_MAXPROB60) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 12;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 11 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS51 - EVENTS55 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS51 - NONEVENTS55);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB51 -
SCR_MNPROB55) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB51 - SCR_MINPROB55) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB51 - SCR_MAXPROB55) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 11;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 10 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS46 - EVENTS50 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS46 - NONEVENTS50);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB46 -
SCR_MNPROB50) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB46 - SCR_MINPROB50) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB46 - SCR_MAXPROB50) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 10;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 9 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS41 - EVENTS45 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS41 - NONEVENTS45);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB41 -
SCR_MNPROB45) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB41 - SCR_MINPROB45) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB41 - SCR_MAXPROB45) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 9;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 8 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS36 - EVENTS40 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS36 - NONEVENTS40);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB36 -
SCR_MNPROB40) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB36 - SCR_MINPROB40) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB36 - SCR_MAXPROB40) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 8;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 7 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS31 - EVENTS35 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS31 - NONEVENTS35);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB31 -
SCR_MNPROB35) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB31 - SCR_MINPROB35) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB31 - SCR_MAXPROB35) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 7;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 6 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS26 - EVENTS30 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS26 - NONEVENTS30);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB26 -
SCR_MNPROB30) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB26 - SCR_MINPROB30) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB26 - SCR_MAXPROB30) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 6;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 5 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS21 - EVENTS25 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS21 - NONEVENTS25);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB21 -
SCR_MNPROB25) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB21 - SCR_MINPROB25) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB21 - SCR_MAXPROB25) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 5;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 4 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS16 - EVENTS20 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS16 - NONEVENTS20);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB16 -
SCR_MNPROB20) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB16 - SCR_MINPROB20) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB16 - SCR_MAXPROB20) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 4;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 3 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS11 - EVENTS15 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS11 - NONEVENTS15);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB11 -
SCR_MNPROB15) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB11 - SCR_MINPROB15) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB11 - SCR_MAXPROB15) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 3;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 2 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS6 - EVENTS10 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS6 - NONEVENTS10);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB6 -
SCR_MNPROB10) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB6 - SCR_MINPROB10) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB6 - SCR_MAXPROB10) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 2;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 1 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS1 - EVENTS5 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS1 - NONEVENTS5);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB1 - SCR_MNPROB5)
/ NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB1 - SCR_MINPROB5) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB1 - SCR_MAXPROB5) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 1;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("KSPROB" , PUT (KSPROB, 5.3 ) );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("_KS_BIN_PROB" , _KS_BIN_PROB );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("_KS_BIN_" , _KS_BIN_ / 100 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("KSDIFF" , KS_ABSDIFF );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PRECTPR" , PRECTPR );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXMUTUALPROB" , MAXMUTUALPROB);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LABEL __EVENT__ = "Event" DECILE = "Depth" BIN = "Bin" NUMOBS = "Number
of Observations" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * RUN for large data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST;
MPRINT(EM_ASSESS):   DELETE _AUXEVENTNAME;
MPRINT(EM_ASSESS):   QUIT;
 
MPRINT(EM_ASSESS):   OPTION NOCENTER LS = 95;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Report Vars Area.;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start OF Outdist Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPSCOREDIST;
MPRINT(EM_ASSESS):   RENAME MODELSCORE = SCORE UPPERPROB = UPPOSTERIOR SCR_CP_EVENTS =
CUMULATIVEPERCENTAGEOFEVENTS SCR_CP_NONEVENTS = CUMULATIVEPERCENTAGEOFNONEVENTS EVENTVALUE =
EVENT LOWERPROB = LOWPOSTERIOR NUMOBSINGROUP = N PERCOBSINGROUP = PERCENTAGE SCR_MINPROB =
_MINP_ SCR_MAXPROB = _MAXP_ SCR_MNPROB = _MEANP_ RANGE = P_LABEL C_PERCOBSINGROUP =
CUMULATIVEPERCENTAGE SCR_NUMEVENTS = NUMBEROFEVENTS SCR_NUMNONEVENTS = NUMBEROFNONEVENTS
SCR_P_EVENTS = PERCENTAGEOFEVENTS SCR_P_NONEVENTS = PERCENTAGEOFNONEVENTS ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... OUTDIST MODIFICATION LABEL AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL BIN = "Bin" N = "Number of Observations" P_LABEL = "Posterior
Probability Range" EVENT = "Event" LOWPOSTERIOR = "Lower Bound Posterior Probability"
PERCENTAGEOFEVENTS = "Percentage of Events" CUMULATIVEPERCENTAGEOFNONEVENTS = "Cumulative
Percentage of Nonevents" CUMULATIVEPERCENTAGE = "Cumulative Percentage" PERCENTAGEOFEVENTS =
"Percentage of Events" PERCENTAGEOFNONEVENTS = "Percentage of Nonevents"
CUMULATIVEPERCENTAGEOFEVENTS = "Cumulative Percentage of Events" UPPOSTERIOR = "Upper Bound
Posterior Probability" NUMBEROFEVENTS = "Number of Events" PERCENTAGE = "Percentage"
NUMBEROFNONEVENTS = "Number of Nonevents" _MEANP_ = "Mean Posterior Probability" _MINP_ = "Min
Posterior Probability" _MAXP_ = "Max Posterior Probability" SCORE = "Model Score" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   SET WORK._TEMPSCOREDIST (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........... END OF OUTDIST MODIFICATION;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start of OUTRANKS Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPRANK;
MPRINT(EM_ASSESS):   RENAME __EVENT__ = EVENT P_RESP = RESP C_P_CAPT_RESP = CAPC P_CAPT_RESP =
CAP NUMNONRESP = NUMNEVENT NUMRESP = NUMEVENT BASEEVENTS = BASENUMBEROFEVENTS BESTNUMEVENTS =
BESTNUMBEROFEVENTS MAXPROB = _MAXP_ MINPROB = _MINP_ CBASELIFT = BASELIFTC C_LIFT = LIFTC
MNPROB = _MEANP_ PERCENTILE = DECILE NUMOBS = N NUMEVENT = NUMBEROFEVENTS C_P_RESP = RESPC ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................. OUTRANKS;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL _MAXP_ = "Max Posterior Probability" _MINP_ = "Min Posterior
Probability" _MEANP_ = "Mean Posterior Probability" BASECAP = "Baseline % Captured Response"
BASECAPC = "Baseline Cumulative % Captured Response" BASENUMBEROFEVENTS = "Baseline Number of
Events" BASEGAIN = "Baseline Gain" BASELIFT = "Baseline Lift" BASELIFTC = "Baseline Cumulative
Lift" BASERESP = "Baseline % Response" BASERESPC = "Baseline Cumulative % Response" BASELIFTC
= "Baseline Cumulative Lift" BESTCAP = "Best % Captured Response" BESTCAPC = "Best Cumulative
% Captured Response" BESTGAIN = "Best Gain" BESTRESP = "Best % Response" BESTRESPC = "Best
Cumulative % Response" BESTLIFT = "Best Lift" BESTLIFTC = "Best Cumulative Lift"
BESTNUMBEROFEVENTS = "Best Number of Events" CAP = "% Captured Response" CAPC = "Cumulative %
Captured Response" DECILE = "Depth" GAIN = "Gain" LIFT = "Lift" LIFTC = "Cumulative Lift"
NUMNEVENT = "Number of Nonevents" N = "Number of Observations" EVENT = "Event" RESPC =
"Cumulative % Response" NUMBEROFEVENTS = "Number of Events" RESP = "% Response" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK;
MPRINT(EM_ASSESS):   SET WORK._TEMPRANK (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   proc datasets lib=work nolist;
MPRINT(EM_ASSESS):   delete _ea_tmpdata;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_ASSESS):   quit;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   OPTION ERRORS = 20;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):    data WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   retain target "DepVar";
MPRINT(EM_DIAGRAM):   retain TARGETLABEL 'DepVar';
MPRINT(EM_DIAGRAM):   retain dataRole "TRAIN";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl30_EMRANK;
MPRINT(EM_DIAGRAM):   set WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   retain target "DepVar";
MPRINT(EM_DIAGRAM):   retain TARGETLABEL 'DepVar';
MPRINT(EM_DIAGRAM):   retain dataRole "TRAIN";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl30_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   set WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   run;
1741080    data EM_temp_assessMeta;
MPRINT(EM_DIAGRAM):    data EM_temp_assessMeta;
1741081    set EMWS8.Ensmbl30_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl30_CMeta_TRAIN;
1741082    where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION', 'ASSESS', 'COST')
1741082  ! ;
MPRINT(EM_DIAGRAM):   where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION',
'ASSESS', 'COST');
1741083    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set EMWS8.ENSMBL30_CMETA_TRAIN.
      WHERE role in ('ASSESS', 'CLASSIFICATION', 'COST', 'DECISION', 'PREDICT', 'RESIDUAL');
NOTE: The data set WORK.EM_TEMP_ASSESSMETA has 8 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1741084    data EM_temp_assessdata;
MPRINT(EM_DIAGRAM):    data EM_temp_assessdata;
1741085    set EMWS8.Ensmbl30_VALIDATE(keep=
1741086    F_DepVar
1741087    I_DepVar
1741088    P_DepVar0
1741089    P_DepVar1
1741090    R_DepVar0
1741091    R_DepVar1
1741092    U_DepVar
1741093    _WARN_
1741094    DepVar
1741095    );
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl30_VALIDATE(keep= F_DepVar I_DepVar P_DepVar0 P_DepVar1
R_DepVar0 R_DepVar1 U_DepVar _WARN_ DepVar );
1741096    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: There were 1018 observations read from the data set EMWS8.META_VALIDATE.
NOTE: View EMWS8.ENSMBL30_VALIDATE.VIEW used (Total process time):
      real time           0.07 seconds
      cpu time            0.07 seconds
 
NOTE: There were 1018 observations read from the data set EMWS8.NEURAL9_VALIDATE.
NOTE: There were 1018 observations read from the data set EMWS8.ENSMBL30_VALIDATE.
NOTE: The data set WORK.EM_TEMP_ASSESSDATA has 1018 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.09 seconds
      cpu time            0.09 seconds
 
 
MPRINT(EM_DIAGRAM):    proc freq data=EM_temp_assessdata noprint;
MPRINT(EM_DIAGRAM):   table I_DepVar*F_DepVar / out = WORK.Ensmbl30_1G_V015 nocol norow outpct;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.Ensmbl30_1G_V015;
MPRINT(EM_DIAGRAM):   length _TYPE_ $10 DATAROLE TARGET $32 TARGETLABEL $200 FROM INTO $32
CORRECTTEXT $40 ;
MPRINT(EM_DIAGRAM):   label _TYPE_ = "Outcome Type";
MPRINT(EM_DIAGRAM):   label DATAROLE = "Data Role";
MPRINT(EM_DIAGRAM):   label TARGET = "Target Variable";
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   label FROM = "Target";
MPRINT(EM_DIAGRAM):   label INTO = "Outcome";
MPRINT(EM_DIAGRAM):   label PCT_ROW = "Target Percentage";
MPRINT(EM_DIAGRAM):   label PCT_COL = "Outcome Percentage";
MPRINT(EM_DIAGRAM):   label COUNT = "Frequency Count";
MPRINT(EM_DIAGRAM):   label PERCENT = "Total Percentage";
MPRINT(EM_DIAGRAM):   label CORRECTTEXT = "Correct Text";
MPRINT(EM_DIAGRAM):   label CORRECT = "Correct";
MPRINT(EM_DIAGRAM):   set WORK.Ensmbl30_1G_V015(rename=(F_DepVar=FROM I_DepVar=INTO));
MPRINT(EM_DIAGRAM):   retain _TYPE_ 'PREDICTION' DATAROLE "VALIDATE" TARGET "DepVar";
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TARGETLABEL = 'DepVar';
MPRINT(EM_DIAGRAM):   if FROM eq INTO then do;
MPRINT(EM_DIAGRAM):   CORRECT = 0;
MPRINT(EM_DIAGRAM):   CORRECTTEXT="Correct";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   CORRECT = 1;
MPRINT(EM_DIAGRAM):   CORRECTTEXT="Incorrect";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS8.Ensmbl30_EMCLASSIFICATION;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl30_EMCLASSIFICATION WORK.Ensmbl30_1G_V015;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   set WORK.Ensmbl30_1G_V015;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.MISCREPORT(drop=INTO FROM _TYPE_);
MPRINT(EM_DIAGRAM):   set WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   length MISC $12;
MPRINT(EM_DIAGRAM):   if FROM='1' and INTO='1' then MISC='TRUEEVENT';
MPRINT(EM_DIAGRAM):   else if FROM='1' and INTO ne '1' then MISC='FALSENEVENT';
MPRINT(EM_DIAGRAM):   else if FROM ne '1' and INTO='1' then MISC='FALSEEVENT';
MPRINT(EM_DIAGRAM):   else if FROM ne'1' and INTO ne '1' then MISC='TRUENEVENT';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.MISCREPORT nothreads;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc summary data=WORK.MISCREPORT NWAY;
MPRINT(EM_DIAGRAM):   output out=WORK.MISCCOUNT(drop=_FREQ_ _TYPE_) SUM=COUNT;
MPRINT(EM_DIAGRAM):   CLASS MISC;
MPRINT(EM_DIAGRAM):   VAR COUNT;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc transpose data=WORK.MISCCOUNT out=WORK.MISCREPORT(drop=_NAME_
_LABEL_);
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   ID MISC;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS8.Ensmbl30_EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   length TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl30_EMEVENTREPORT WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TARGETLABEL = 'DepVar';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data ASSESS_REPORTMETA;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl30_VariableSet;
MPRINT(EM_DIAGRAM):   where REPORT='Y';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename temp catalog 'sashelp.emassmt.em_assess.source';
MPRINT(EM_DIAGRAM):   filename temp;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural3_DepVar_DM;
MPRINT(EM_DIAGRAM):   where _TYPE_="TARGET";
MPRINT(EM_DIAGRAM):   call symput('ASSMT_EVENT', strip(event));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):
MPRINT(EM_ASSESS):   data _ea_tmpdata;
MPRINT(EM_ASSESS):   set EM_temp_assessdata;
MPRINT(EM_ASSESS):   _tmpfreqvar_=1;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_CHECKEMSETINIT):   DATA _NULL_;
MPRINT(EM_CHECKEMSETINIT):   EM_SETINIT = 'N';
MPRINT(EM_CHECKEMSETINIT):   IF SYSPROD('PRODNUM50') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM448') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM102') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM103') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   CALL SYMPUT('EM_SETINIT', EM_SETINIT);
MPRINT(EM_CHECKEMSETINIT):   RUN;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Reading in reporting data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET ASSESS_REPORTMETA END = EOF;
MPRINT(EM_ASSESS):   IF TYPE = "C" OR UPCASE (LEVEL) IN ("NOMINAL", "BINARY" , "ORDINAL") THEN
DO;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) NE UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   NUMCTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTC" || LEFT (PUT (NUMCTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "C");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF UPCASE(NAME) NE UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   NUMNTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTN" || LEFT (PUT (NUMNTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMNTOREPORT", NUMNTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMCTOREPORT", NUMCTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMTOREPORT", SUM (NUMNTOREPORT, NUMCTOREPORT));
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   PROC DMDB DATA = _ea_tmpdata VAROUT = VAROUT DMDBCAT = _D CLASSOUT =
_ASSMT_CLASSOUT;
MPRINT(EM_ASSESS):   CLASS F_DepVar ;
 
MPRINT(EM_ASSESS):   VAR P_DepVar1 _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_;
MPRINT(EM_ASSESS):   RUN ;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   PROC SORT DATA = _ASSMT_CLASSOUT;
MPRINT(EM_ASSESS):   BY NAME;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _auxeventname (keep = __event__) ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ...FLAG0_1 = ..... TARGET IS 0, 1 & EVENT = 1;
 
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   length __event__ $ 32;
MPRINT(EM_ASSESS):   RETAIN FLAG0_1 1 NUM1 . NUM0 . __event__ "_missing_" ;
 
MPRINT(EM_ASSESS):   SET _ASSMT_CLASSOUT END = EOF;
MPRINT(EM_ASSESS):   BY NAME;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ....... LEVEL = BINARY OR NOMINAL OR ORDINAL;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   IF UPCASE(NAME) = UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   CUMFREQ + FREQUENCY;
MPRINT(EM_ASSESS):   IF LEVEL NE "." THEN DO;
MPRINT(EM_ASSESS):   N1 + 1;
MPRINT(EM_ASSESS):   IF (NRAW NE 0 AND NRAW NE 1) OR TYPE NE "N" OR "" > " " THEN FLAG0_1 = 0;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ......................... IF EVENT NE BLANK;
MPRINT(EM_ASSESS):   * ....................LEVEL IS CHAR VAR ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   IF UPCASE("1") = UPCASE(LEVEL) THEN DO;
MPRINT(EM_ASSESS):   NUM1 = FREQUENCY;
MPRINT(EM_ASSESS):   IF TYPE = "C" THEN do;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("EVENTVALUERAW", CRAW );
MPRINT(EM_ASSESS):   __event__ = craw;
MPRINT(EM_ASSESS):   end;
MPRINT(EM_ASSESS):   ELSE do;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("EVENTVALUERAW", NRAW );
MPRINT(EM_ASSESS):   __event__ = nraw;
MPRINT(EM_ASSESS):   end;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF LAST.NAME THEN DO;
 
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * .............. IN NOMINAL CASE, NEED TO GROUP ALL '0' ;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   NUM0 = SUM (CUMFREQ, - NUM1);
MPRINT(EM_ASSESS):   IF NUM0 < 0 THEN NUM0 = 0;
MPRINT(EM_ASSESS):   IF NUM1 = . THEN NUM1 = 0;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUM0", NUM0 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUM1", NUM1);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PNUM1", NUM1 / CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PNUM0", (CUMFREQ - NUM1) / CUMFREQ);
MPRINT(EM_ASSESS):   IF TYPE = "C" THEN DO;
MPRINT(EM_ASSESS):   FLAG0_1 = 0;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "C" );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF "" = " " THEN DO;
MPRINT(EM_ASSESS):   IF "1" NE "1" THEN FLAG0_1 = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "N" );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ................... IF TYPE = N;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("FLAG0_1", FLAG0_1 );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..................IF LAST.NAME ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ...............IF LEVEL NE '.' ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * .............. IF NAME = TARGET;
MPRINT(EM_ASSESS):   ELSE IF "" > " " AND UPCASE(NAME) = UPCASE("") THEN DO;
MPRINT(EM_ASSESS):   NUMDECISIONS + 1;
MPRINT(EM_ASSESS):   LEVEL = TRANSLATE (LEVEL, "_", "'", "_", '"');
MPRINT(EM_ASSESS):   CALL SYMPUTX ("D_LABEL" || LEFT (PUT (NUMDECISIONS, 3.)), LEVEL );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..................... ELSE IF UPCASE;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   output _auxeventname;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMOBS", CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMDECISIONS", NUMDECISIONS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET VAROUT END = EOF;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) = UPCASE ("P_DepVar1") THEN DO;
MPRINT(EM_ASSESS):   IF N = 0 THEN DO;
MPRINT(EM_ASSESS):   PUT //// "          Warning: All posterior probabilities are missing
values ";
MPRINT(EM_ASSESS):   PUT ///;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("ALLMISS", 1);
MPRINT(EM_ASSESS):   STOP;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("ALLMISS", 0);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB", MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB", MAX);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("DIFF", MAX - MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NMISSPROB", NMISS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF UPCASE (NAME) = UPCASE ("_tmpfreqvar_") THEN DO;
MPRINT(EM_ASSESS):   AUXMIN = MIN - INT (MIN);
MPRINT(EM_ASSESS):   AUXMAX = MAX - INT (MAX);
MPRINT(EM_ASSESS):   IF AUXMIN > 0 OR AUXMAX > 0 THEN CALL SYMPUTX ("USEWEIGHT", "Y");
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("USEWEIGHT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _ANY0;
MPRINT(EM_ASSESS):   SET _ea_tmpdata (KEEP = F_DepVar P_DepVar1 _tmpfreqvar_ );
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................... No Formats;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF LEFT ( F_DepVar ) = "1" THEN NTARGET = 1;
MPRINT(EM_ASSESS):   ELSE NTARGET = 0;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .............. Before proc summary of binary case;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC SUMMARY DATA = _ANY0 (KEEP = P_DepVar1 NTARGET _tmpfreqvar_ WHERE =
(NTARGET > . )) NWAY MISSING;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   CLASS P_DepVar1 ;
MPRINT(EM_ASSESS):   VAR NTARGET ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   OUTPUT OUT = ANYSUM (DROP = _TYPE_) MEAN = _MEANTARGET _MEANFREQVAR ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... Main Data Set Processing, Binary case;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK (KEEP = BASECAPC BASECAP __EVENT__ BASEEVENTS
BASEGAIN BASELIFT BASERESP BASERESPC BESTCAP BESTCAPC BESTGAIN BESTLIFT BESTLIFTC
BESTNUMEVENTS BESTRESP BESTRESPC BIN CBASELIFT C_LIFT C_P_CAPT_RESP C_P_RESP GAIN LIFT MAXPROB
MINPROB MNPROB NUMNONRESP NUMOBS NUMRESP PERCENTILE P_CAPT_RESP P_RESP ) WORK._TEMPSCOREDIST
(KEEP = BIN LOWERPROB UPPERPROB EVENTVALUE SCR_NUMEVENTS MODELSCORE SCR_NUMNONEVENTS RANGE
NUMOBSINGROUP PERCOBSINGROUP C_PERCOBSINGROUP SCR_P_EVENTS SCR_CP_EVENTS SCR_P_NONEVENTS
SCR_CP_NONEVENTS SCR_MNPROB SCR_MINPROB SCR_MAXPROB ) ;
 
MPRINT(EM_ASSESS):   SET ANYSUM END = EOF;
 
MPRINT(EM_ASSESS):   IF _N_ = 1 THEN SET _AUXEVENTNAME;
 
MPRINT(EM_ASSESS):   RETAIN MINPROB1 - MINPROB20 1 MAXPROB1 - MAXPROB20 0 MNPROB1 - MNPROB20 0
NUMOBS1 - NUMOBS20 0 NUMRESP1 - NUMRESP20 0 TRUEPOS1 - TRUEPOS100 0 TRUENEG1 - TRUENEG100 0
FALSEPOS1 - FALSEPOS100 0 FALSENEG1 - FALSENEG100 0 EVENTS1 - EVENTS100 NONEVENTS1 -
NONEVENTS100 0 FIRSTIN1 - FIRSTIN100 . LASTIN1 - LASTIN100 . RESPRATE 0.152259332 _NEVENTS 155
_NNONEVENTS 863 TARGET "NTARGET" ;
MPRINT(EM_ASSESS):   ARRAY MINPROBS (20) MINPROB1 - MINPROB20;
MPRINT(EM_ASSESS):   ARRAY MAXPROBS (20) MAXPROB1 - MAXPROB20;
MPRINT(EM_ASSESS):   ARRAY MNPROBS (20) MNPROB1 - MNPROB20;
MPRINT(EM_ASSESS):   ARRAY NUMOBSS (20) NUMOBS1 - NUMOBS20;
MPRINT(EM_ASSESS):   ARRAY NUMRESPS (20) NUMRESP1 - NUMRESP20;
MPRINT(EM_ASSESS):   ARRAY TRUEPOSX (100) TRUEPOS1 - TRUEPOS100;
MPRINT(EM_ASSESS):   ARRAY FALSEPOSX (100) FALSEPOS1 - FALSEPOS100;
MPRINT(EM_ASSESS):   ARRAY FALSENEGX (100) FALSENEG1 - FALSENEG100;
MPRINT(EM_ASSESS):   ARRAY TRUENEGX (100) TRUENEG1 - TRUENEG100;
MPRINT(EM_ASSESS):   ARRAY _EVENTS (100) EVENTS1 - EVENTS100;
MPRINT(EM_ASSESS):   ARRAY NONEVENTS (100) NONEVENTS1 - NONEVENTS100;
MPRINT(EM_ASSESS):   ARRAY FIRSTIN (100) FIRSTIN1 - FIRSTIN100;
MPRINT(EM_ASSESS):   ARRAY LASTIN (100) LASTIN1 - LASTIN100;
MPRINT(EM_ASSESS):   RETAIN SCR_MNPROB1 - SCR_MNPROB100 0 SCR_MINPROB1 - SCR_MINPROB100 1
SCR_MAXPROB1 - SCR_MAXPROB100 0;
MPRINT(EM_ASSESS):   ARRAY SCR_MNPROBS (100) SCR_MNPROB1 - SCR_MNPROB100;
MPRINT(EM_ASSESS):   ARRAY SCR_MINPROBS (100) SCR_MINPROB1 - SCR_MINPROB100;
MPRINT(EM_ASSESS):   ARRAY SCR_MAXPROBS (100) SCR_MAXPROB1 - SCR_MAXPROB100;
MPRINT(EM_ASSESS):   DROP SCR_MINPROB1 - SCR_MINPROB100 SCR_MAXPROB1 - SCR_MAXPROB100
SCR_MNPROB1 - SCR_MNPROB100 ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...... Area For 8 Financials ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF _MEANTARGET = . THEN _MEANTARGET = RESPRATE;
MPRINT(EM_ASSESS):   DROP N1 _K SUMWEIGHTS ;
MPRINT(EM_ASSESS):   SUMWEIGHTS = 1;
 
MPRINT(EM_ASSESS):   DO _K = 1 TO CEIL (_FREQ_);
MPRINT(EM_ASSESS):   IF _K = CEIL (_FREQ_) THEN DO;
MPRINT(EM_ASSESS):   IF _FREQ_ < CEIL (_FREQ_) THEN _WEIGHT = _FREQ_ - FLOOR (_FREQ_);
MPRINT(EM_ASSESS):   ELSE _WEIGHT = 1;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE _WEIGHT = 1;
MPRINT(EM_ASSESS):   N1 + _WEIGHT;
MPRINT(EM_ASSESS):   NTARGET = _MEANTARGET ;
MPRINT(EM_ASSESS):   DECILE = MIN (20, CEIL (N1 * 20 / 1018));
MPRINT(EM_ASSESS):   MINPROBS ( DECILE) = MIN (MINPROBS ( DECILE), P_DepVar1 );
MPRINT(EM_ASSESS):   MAXPROBS ( DECILE) = MAX (MAXPROBS ( DECILE), P_DepVar1 );
MPRINT(EM_ASSESS):   MNPROBS ( DECILE) = SUM (MNPROBS ( DECILE), P_DepVar1 * _WEIGHT);
MPRINT(EM_ASSESS):   NUMOBSS ( DECILE) = NUMOBSS ( DECILE) + _WEIGHT;
MPRINT(EM_ASSESS):   NUMRESPS ( DECILE) = NUMRESPS ( DECILE) + _MEANTARGET * _WEIGHT;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ outside of do loop, Area for final ROC;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   RANKDELTA = (ROUND ( _FREQ_ ) + 1) / 2;
MPRINT(EM_ASSESS):   RANK = UNTIEDRANK + RANKDELTA;
MPRINT(EM_ASSESS):   DROP RANK ;
MPRINT(EM_ASSESS):   SUMRANK1 + RANK * ROUND (_MEANTARGET * _FREQ_, .0000001);
MPRINT(EM_ASSESS):   UNTIEDRANK + ROUND (_FREQ_, .00000001);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Area For ROC Curve;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DO _K = 1 TO 100;
MPRINT(EM_ASSESS):   IF P_DepVar1 * 100 >= _K THEN DO;
MPRINT(EM_ASSESS):   TRUEPOSX ( _K ) + _FREQ_ * _MEANTARGET ;
MPRINT(EM_ASSESS):   FALSEPOSX ( _K ) + _FREQ_ * (1 - _MEANTARGET) ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   TRUENEGX ( _K ) + _FREQ_ * ( 1 - _MEANTARGET) ;
MPRINT(EM_ASSESS):   FALSENEGX ( _K ) + _FREQ_ * _MEANTARGET ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   SLOT = MIN (MAX (CEIL (P_DepVar1 * 100), 1), 100) ;
MPRINT(EM_ASSESS):   DROP SLOT;
MPRINT(EM_ASSESS):   FIRSTIN ( SLOT ) = MIN ( FIRSTIN ( SLOT ), P_DepVar1);
MPRINT(EM_ASSESS):   LASTIN ( SLOT ) = MAX ( LASTIN ( SLOT ), P_DepVar1);
MPRINT(EM_ASSESS):   _EVENTS ( SLOT) = _EVENTS ( SLOT) + _FREQ_ * _MEANTARGET;
MPRINT(EM_ASSESS):   NONEVENTS ( SLOT) = NONEVENTS ( SLOT) + _FREQ_ * (1 - _MEANTARGET);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ START OF OUTDIST IN BINARY CASE MAIN DATA STEP ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   SCR_MNPROBS ( SLOT ) = SUM (SCR_MNPROBS (SLOT), P_DepVar1 * _FREQ_ );
MPRINT(EM_ASSESS):   SCR_MINPROBS ( SLOT ) = MIN (SCR_MINPROBS (SLOT), P_DepVar1 );
MPRINT(EM_ASSESS):   SCR_MAXPROBS ( SLOT ) = MAX (SCR_MAXPROBS (SLOT), P_DepVar1 );
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ End of Outdist in Binary case main DATA STEP ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   PUT //;
MPRINT(EM_ASSESS):   DO K = 1 TO 20;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LENGTH EVENTVALUE $ 32;
MPRINT(EM_ASSESS):   RETAIN EVENTVALUE "1" ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ......... Start of EOF area of BINARY processing of main data set ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SUMRANK1", SUMRANK1);
MPRINT(EM_ASSESS):   LENGTH DATAROLE $ 10;
MPRINT(EM_ASSESS):   RETAIN DATAROLE "VALIDATE" ;
MPRINT(EM_ASSESS):   RETAIN OVLMIN 0.0001033099 OVLMAX 0.9999320536 ;
MPRINT(EM_ASSESS):   DROP OVLMIN OVLMAX ;
MPRINT(EM_ASSESS):   C_NUMOBS = 0;
MPRINT(EM_ASSESS):   C_NUM_RESP = 0;
MPRINT(EM_ASSESS):   C_NUM_NONRESP = 0;
MPRINT(EM_ASSESS):   C_P_RESP = 0;
MPRINT(EM_ASSESS):   P_CAPT_RESP = 0;
MPRINT(EM_ASSESS):   C_P_CAPT_RESP = 0;
MPRINT(EM_ASSESS):   PREVIOUSPROFIT = 0;
MPRINT(EM_ASSESS):   MAXPROFIT = 0;
MPRINT(EM_ASSESS):   _KS_BIN_ = 0;
MPRINT(EM_ASSESS):   DROP _KS_BIN_;
MPRINT(EM_ASSESS):   AVGNUMRESP = _NEVENTS / 20;
MPRINT(EM_ASSESS):   BASERESP = 100 * RESPRATE;
MPRINT(EM_ASSESS):   BASERESPC = BASERESP;
MPRINT(EM_ASSESS):   BASECAP = 100 / 20;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................Start OF Gainschart = Outranks Area;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   _KS_BIN_PROB = 0;
MPRINT(EM_ASSESS):   DO GROUP = 20 TO 1 BY -1;
 
MPRINT(EM_ASSESS):   BASECAPC + BASECAP;
MPRINT(EM_ASSESS):   PERCENTILE = GROUP * (100 / 20);
MPRINT(EM_ASSESS):   MINPROB = MINPROBS ( GROUP);
MPRINT(EM_ASSESS):   MAXPROB = MAXPROBS ( GROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB" || LEFT ( PUT (GROUP, 3.)), MINPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB" || LEFT ( PUT (GROUP, 3.)), MAXPROB);
MPRINT(EM_ASSESS):   NUMOBS = NUMOBSS ( GROUP);
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN MNPROB = MNPROBS ( GROUP) / NUMOBS;
MPRINT(EM_ASSESS):   ELSE MNPROB = .;
MPRINT(EM_ASSESS):   C_NUMOBS = SUM (NUMOBS, C_NUMOBS);
MPRINT(EM_ASSESS):   NUMRESP = NUMRESPS ( GROUP);
MPRINT(EM_ASSESS):   NUMNONRESP = NUMOBS - NUMRESP;
MPRINT(EM_ASSESS):   C_AVGNUM_RESP + AVGNUMRESP;
MPRINT(EM_ASSESS):   IF C_NUMOBS <= _NEVENTS THEN DO;
MPRINT(EM_ASSESS):   BESTNUMEVENTS = NUMOBS;
MPRINT(EM_ASSESS):   BESTCAPC = C_NUMOBS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   BASEEVENTS = _NEVENTS / 20;
MPRINT(EM_ASSESS):   BASENONEVENTS = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   FLAG + 1;
MPRINT(EM_ASSESS):   DROP FLAG;
MPRINT(EM_ASSESS):   BESTNUMEVENTS = _NEVENTS - C_NUMOBS + NUMOBS;
MPRINT(EM_ASSESS):   IF FLAG > 1 THEN BESTNUMEVENTS = 0;
MPRINT(EM_ASSESS):   BESTCAPC = 100;
MPRINT(EM_ASSESS):   IF C_NUMOBS - _NEVENTS <= NUMOBS THEN DO;
MPRINT(EM_ASSESS):   BASEEVENTS = C_NUMOBS - _NEVENTS;
MPRINT(EM_ASSESS):   BASENONEVENTS = NUMOBS - C_NUMOBS + _NEVENTS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BASEEVENTS = 0;
MPRINT(EM_ASSESS):   BASENONEVENTS = NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   BESTCAP = BESTNUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   BESTLIFT = BESTNUMEVENTS / AVGNUMRESP;
MPRINT(EM_ASSESS):   C_BESTNUMEVENTS + BESTNUMEVENTS;
MPRINT(EM_ASSESS):   DROP C_BESTNUMEVENTS;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN BESTLIFTC = C_BESTNUMEVENTS / (_NEVENTS / 1018 *
C_NUMOBS);
MPRINT(EM_ASSESS):   ELSE BESTLIFTC = .;
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BESTRESP = BESTNUMEVENTS * 100 / NUMOBS;
MPRINT(EM_ASSESS):   P_RESP = NUMRESP * 100 / NUMOBS;
MPRINT(EM_ASSESS):   P_NONRESP = NUMNONRESP * 100 / NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTRESP = .;
MPRINT(EM_ASSESS):   P_RESP = .;
MPRINT(EM_ASSESS):   P_NONRESP = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BESTRESPC = C_BESTNUMEVENTS * 100 / C_NUMOBS;
MPRINT(EM_ASSESS):   BESTGAIN = MAX (0, ((C_BESTNUMEVENTS / C_NUMOBS ) / ( AVGNUMRESP /
NUMOBS) - 1) * 100);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTRESPC = .;
MPRINT(EM_ASSESS):   BESTGAIN = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF NUMNONRESP > 0 THEN ODDS = NUMRESP / NUMNONRESP;
MPRINT(EM_ASSESS):   ELSE ODDS = .;
MPRINT(EM_ASSESS):   C_NUM_RESP = SUM (C_NUM_RESP , NUMRESP );
MPRINT(EM_ASSESS):   C_NUM_NONRESP = SUM (C_NUM_NONRESP, NUMNONRESP );
MPRINT(EM_ASSESS):   IF C_NUM_NONRESP > 0 THEN C_ODDS = C_NUM_RESP / C_NUM_NONRESP;
MPRINT(EM_ASSESS):   ELSE C_ODDS = .;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   C_P_RESP = C_NUM_RESP * 100 / C_NUMOBS;
MPRINT(EM_ASSESS):   GAIN = ABS(100 * (((C_NUM_RESP / C_NUMOBS ) / (_NEVENTS / 1018)) - 1));
MPRINT(EM_ASSESS):   BASEGAIN = 100 * (( (C_AVGNUM_RESP / C_NUMOBS) / ( AVGNUMRESP / NUMOBS))
- 1);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   GAIN = .;
MPRINT(EM_ASSESS):   BASEGAIN = .;
MPRINT(EM_ASSESS):   C_P_RESP = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF BASEGAIN <= 0 THEN BASEGAIN = 0;
MPRINT(EM_ASSESS):   P_CAPT_RESP = NUMRESP * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   P_CAPT_NONRESP = NUMNONRESP * 100 / ( 1018 - _NEVENTS);
MPRINT(EM_ASSESS):   C_P_CAPT_RESP = C_NUM_RESP * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   C_P_CAPT_NONRESP = C_NUM_NONRESP * 100 / ( 1018 - _NEVENTS);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Area For Binned KS in Outranks area;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   _DIFFERENCE = C_P_CAPT_RESP - C_P_CAPT_NONRESP ;
MPRINT(EM_ASSESS):   IF _KS_BIN_ < _DIFFERENCE THEN DO;
MPRINT(EM_ASSESS):   _KS_BIN_ = _DIFFERENCE;
MPRINT(EM_ASSESS):   _KS_BIN_PROB = MINPROB + (MAXPROB - MINPROB) / 2 ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LIFT = P_RESP * .01 / RESPRATE ;
MPRINT(EM_ASSESS):   C_LIFT = C_P_RESP * .01 / RESPRATE;
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BASELIFT = AVGNUMRESP / ( RESPRATE * NUMOBS );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE BASELIFT = .;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN CBASELIFT = C_AVGNUM_RESP / (RESPRATE * C_NUMOBS);
MPRINT(EM_ASSESS):   ELSE CBASELIFT = .;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ WITHIN DO LOOP FOR OUTRANKS;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   BIN = 20 + 1 - GROUP;
MPRINT(EM_ASSESS):   PERCENTILE = BIN * (100 / 20);
MPRINT(EM_ASSESS):   B_C_P_RESP = PERCENTILE;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPRANK ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................ END OF GAINSCHART = OUTRANKS AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROFITGROUP" , MAXPROFITGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROFIT" , MAXPROFIT );
MPRINT(EM_ASSESS):   KS_ABSDIFF = 0 ;
MPRINT(EM_ASSESS):   MINPRECTPR = 9999;
MPRINT(EM_ASSESS):   Y0 = 1 - RESPRATE;
MPRINT(EM_ASSESS):   Y1 = RESPRATE;
MPRINT(EM_ASSESS):   MAXMUTUAL = 0;
MPRINT(EM_ASSESS):   DROP MAXMUTUAL KSPROB Y0 Y1 KS_ABSDIFF MINPRECTPR;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .....................About to start Processing Outroc ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................... Finished Processing Outroc ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .............. Outdist ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   BIN = 20 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS96 - EVENTS100 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS96 - NONEVENTS100);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB96 -
SCR_MNPROB100) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB96 - SCR_MINPROB100) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB96 - SCR_MAXPROB100) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 20;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 19 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS91 - EVENTS95 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS91 - NONEVENTS95);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB91 -
SCR_MNPROB95) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB91 - SCR_MINPROB95) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB91 - SCR_MAXPROB95) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 19;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 18 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS86 - EVENTS90 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS86 - NONEVENTS90);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB86 -
SCR_MNPROB90) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB86 - SCR_MINPROB90) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB86 - SCR_MAXPROB90) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 18;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 17 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS81 - EVENTS85 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS81 - NONEVENTS85);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB81 -
SCR_MNPROB85) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB81 - SCR_MINPROB85) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB81 - SCR_MAXPROB85) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 17;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 16 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS76 - EVENTS80 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS76 - NONEVENTS80);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB76 -
SCR_MNPROB80) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB76 - SCR_MINPROB80) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB76 - SCR_MAXPROB80) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 16;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 15 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS71 - EVENTS75 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS71 - NONEVENTS75);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB71 -
SCR_MNPROB75) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB71 - SCR_MINPROB75) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB71 - SCR_MAXPROB75) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 15;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 14 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS66 - EVENTS70 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS66 - NONEVENTS70);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB66 -
SCR_MNPROB70) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB66 - SCR_MINPROB70) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB66 - SCR_MAXPROB70) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 14;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 13 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS61 - EVENTS65 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS61 - NONEVENTS65);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB61 -
SCR_MNPROB65) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB61 - SCR_MINPROB65) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB61 - SCR_MAXPROB65) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 13;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 12 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS56 - EVENTS60 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS56 - NONEVENTS60);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB56 -
SCR_MNPROB60) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB56 - SCR_MINPROB60) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB56 - SCR_MAXPROB60) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 12;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 11 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS51 - EVENTS55 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS51 - NONEVENTS55);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB51 -
SCR_MNPROB55) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB51 - SCR_MINPROB55) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB51 - SCR_MAXPROB55) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 11;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 10 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS46 - EVENTS50 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS46 - NONEVENTS50);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB46 -
SCR_MNPROB50) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB46 - SCR_MINPROB50) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB46 - SCR_MAXPROB50) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 10;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 9 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS41 - EVENTS45 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS41 - NONEVENTS45);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB41 -
SCR_MNPROB45) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB41 - SCR_MINPROB45) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB41 - SCR_MAXPROB45) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 9;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 8 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS36 - EVENTS40 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS36 - NONEVENTS40);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB36 -
SCR_MNPROB40) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB36 - SCR_MINPROB40) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB36 - SCR_MAXPROB40) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 8;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 7 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS31 - EVENTS35 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS31 - NONEVENTS35);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB31 -
SCR_MNPROB35) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB31 - SCR_MINPROB35) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB31 - SCR_MAXPROB35) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 7;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 6 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS26 - EVENTS30 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS26 - NONEVENTS30);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB26 -
SCR_MNPROB30) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB26 - SCR_MINPROB30) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB26 - SCR_MAXPROB30) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 6;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 5 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS21 - EVENTS25 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS21 - NONEVENTS25);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB21 -
SCR_MNPROB25) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB21 - SCR_MINPROB25) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB21 - SCR_MAXPROB25) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 5;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 4 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS16 - EVENTS20 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS16 - NONEVENTS20);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB16 -
SCR_MNPROB20) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB16 - SCR_MINPROB20) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB16 - SCR_MAXPROB20) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 4;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 3 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS11 - EVENTS15 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS11 - NONEVENTS15);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB11 -
SCR_MNPROB15) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB11 - SCR_MINPROB15) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB11 - SCR_MAXPROB15) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 3;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 2 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS6 - EVENTS10 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS6 - NONEVENTS10);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB6 -
SCR_MNPROB10) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB6 - SCR_MINPROB10) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB6 - SCR_MAXPROB10) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 2;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 1 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS1 - EVENTS5 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS1 - NONEVENTS5);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB1 - SCR_MNPROB5)
/ NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB1 - SCR_MINPROB5) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB1 - SCR_MAXPROB5) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 1;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("KSPROB" , PUT (KSPROB, 5.3 ) );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("_KS_BIN_PROB" , _KS_BIN_PROB );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("_KS_BIN_" , _KS_BIN_ / 100 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("KSDIFF" , KS_ABSDIFF );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PRECTPR" , PRECTPR );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXMUTUALPROB" , MAXMUTUALPROB);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LABEL __EVENT__ = "Event" DECILE = "Depth" BIN = "Bin" NUMOBS = "Number
of Observations" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * RUN for large data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST;
MPRINT(EM_ASSESS):   DELETE _AUXEVENTNAME;
MPRINT(EM_ASSESS):   QUIT;
 
MPRINT(EM_ASSESS):   OPTION NOCENTER LS = 95;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Report Vars Area.;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start OF Outdist Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPSCOREDIST;
MPRINT(EM_ASSESS):   RENAME MODELSCORE = SCORE UPPERPROB = UPPOSTERIOR SCR_CP_EVENTS =
CUMULATIVEPERCENTAGEOFEVENTS SCR_CP_NONEVENTS = CUMULATIVEPERCENTAGEOFNONEVENTS EVENTVALUE =
EVENT LOWERPROB = LOWPOSTERIOR NUMOBSINGROUP = N PERCOBSINGROUP = PERCENTAGE SCR_MINPROB =
_MINP_ SCR_MAXPROB = _MAXP_ SCR_MNPROB = _MEANP_ RANGE = P_LABEL C_PERCOBSINGROUP =
CUMULATIVEPERCENTAGE SCR_NUMEVENTS = NUMBEROFEVENTS SCR_NUMNONEVENTS = NUMBEROFNONEVENTS
SCR_P_EVENTS = PERCENTAGEOFEVENTS SCR_P_NONEVENTS = PERCENTAGEOFNONEVENTS ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... OUTDIST MODIFICATION LABEL AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL BIN = "Bin" N = "Number of Observations" P_LABEL = "Posterior
Probability Range" EVENT = "Event" LOWPOSTERIOR = "Lower Bound Posterior Probability"
PERCENTAGEOFEVENTS = "Percentage of Events" CUMULATIVEPERCENTAGEOFNONEVENTS = "Cumulative
Percentage of Nonevents" CUMULATIVEPERCENTAGE = "Cumulative Percentage" PERCENTAGEOFEVENTS =
"Percentage of Events" PERCENTAGEOFNONEVENTS = "Percentage of Nonevents"
CUMULATIVEPERCENTAGEOFEVENTS = "Cumulative Percentage of Events" UPPOSTERIOR = "Upper Bound
Posterior Probability" NUMBEROFEVENTS = "Number of Events" PERCENTAGE = "Percentage"
NUMBEROFNONEVENTS = "Number of Nonevents" _MEANP_ = "Mean Posterior Probability" _MINP_ = "Min
Posterior Probability" _MAXP_ = "Max Posterior Probability" SCORE = "Model Score" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   SET WORK._TEMPSCOREDIST (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........... END OF OUTDIST MODIFICATION;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start of OUTRANKS Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPRANK;
MPRINT(EM_ASSESS):   RENAME __EVENT__ = EVENT P_RESP = RESP C_P_CAPT_RESP = CAPC P_CAPT_RESP =
CAP NUMNONRESP = NUMNEVENT NUMRESP = NUMEVENT BASEEVENTS = BASENUMBEROFEVENTS BESTNUMEVENTS =
BESTNUMBEROFEVENTS MAXPROB = _MAXP_ MINPROB = _MINP_ CBASELIFT = BASELIFTC C_LIFT = LIFTC
MNPROB = _MEANP_ PERCENTILE = DECILE NUMOBS = N NUMEVENT = NUMBEROFEVENTS C_P_RESP = RESPC ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................. OUTRANKS;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL _MAXP_ = "Max Posterior Probability" _MINP_ = "Min Posterior
Probability" _MEANP_ = "Mean Posterior Probability" BASECAP = "Baseline % Captured Response"
BASECAPC = "Baseline Cumulative % Captured Response" BASENUMBEROFEVENTS = "Baseline Number of
Events" BASEGAIN = "Baseline Gain" BASELIFT = "Baseline Lift" BASELIFTC = "Baseline Cumulative
Lift" BASERESP = "Baseline % Response" BASERESPC = "Baseline Cumulative % Response" BASELIFTC
= "Baseline Cumulative Lift" BESTCAP = "Best % Captured Response" BESTCAPC = "Best Cumulative
% Captured Response" BESTGAIN = "Best Gain" BESTRESP = "Best % Response" BESTRESPC = "Best
Cumulative % Response" BESTLIFT = "Best Lift" BESTLIFTC = "Best Cumulative Lift"
BESTNUMBEROFEVENTS = "Best Number of Events" CAP = "% Captured Response" CAPC = "Cumulative %
Captured Response" DECILE = "Depth" GAIN = "Gain" LIFT = "Lift" LIFTC = "Cumulative Lift"
NUMNEVENT = "Number of Nonevents" N = "Number of Observations" EVENT = "Event" RESPC =
"Cumulative % Response" NUMBEROFEVENTS = "Number of Events" RESP = "% Response" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK;
MPRINT(EM_ASSESS):   SET WORK._TEMPRANK (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   proc datasets lib=work nolist;
MPRINT(EM_ASSESS):   delete _ea_tmpdata;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_ASSESS):   quit;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   OPTION ERRORS = 20;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):    data WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   retain target "DepVar";
MPRINT(EM_DIAGRAM):   retain TARGETLABEL 'DepVar';
MPRINT(EM_DIAGRAM):   retain dataRole "VALIDATE";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl30_EMRANK;
MPRINT(EM_DIAGRAM):   length target $32;
MPRINT(EM_DIAGRAM):   length TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   length dataRole $20;
MPRINT(EM_DIAGRAM):   length EVENT $32;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl30_EMRANK WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   retain target "DepVar";
MPRINT(EM_DIAGRAM):   retain TARGETLABEL 'DepVar';
MPRINT(EM_DIAGRAM):   retain dataRole "VALIDATE";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl30_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   length target $32;
MPRINT(EM_DIAGRAM):   length TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   length dataRole $20;
MPRINT(EM_DIAGRAM):   length EVENT $32;
MPRINT(EM_DIAGRAM):   length P_LABEL $9;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl30_EMSCOREDIST WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   run;
1745371    %let _cn = %sysfunc(getoption(CENTER));
1745372    options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
1745373    proc print data=EMWS8.Ensmbl30_EMREPORTFIT noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.Ensmbl30_EMREPORTFIT noobs label;
1745374    var STAT LABEL TRAIN
1745375    VALIDATE
1745376    ;
MPRINT(EM_DIAGRAM):   var STAT LABEL TRAIN VALIDATE ;
1745377    by TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by TARGET TARGETLABEL;
1745378    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
1745379    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_fitstat_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Fit Statistics";
MPRINT(EM_DIAGRAM):   run;
1745380    run;
 
NOTE: There were 9 observations read from the data set EMWS8.ENSMBL30_EMREPORTFIT.
NOTE: The PROCEDURE PRINT printed page 1125.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1745381    title10;
MPRINT(EM_DIAGRAM):   title10;
1745382    options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
1745383    proc sort data=EMWS8.Ensmbl30_EMCLASSIFICATION nothreads;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS8.Ensmbl30_EMCLASSIFICATION nothreads;
1745384    by DATAROLE TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET TARGETLABEL;
1745385    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set EMWS8.ENSMBL30_EMCLASSIFICATION.
NOTE: The data set EMWS8.ENSMBL30_EMCLASSIFICATION has 8 observations and 12 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1745386    %let _cn = %sysfunc(getoption(CENTER));
1745387    options nocenter;
MPRINT(EM_DIAGRAM):   options nocenter;
1745388    proc print data=EMWS8.Ensmbl30_EMCLASSIFICATION noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.Ensmbl30_EMCLASSIFICATION noobs label;
1745389    var from into pct_row pct_col count percent
1745390    ;
MPRINT(EM_DIAGRAM):   var from into pct_row pct_col count percent ;
1745391    by DATAROLE TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET TARGETLABEL;
1745392    label FROM = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel ,     NOQUOTE))";
MPRINT(EM_DIAGRAM):   label FROM = "Target";
1745393    label INTO = "%sysfunc(sasmsg(sashelp.dmine, rpt_outcome_vlabel ,    NOQUOTE))";
MPRINT(EM_DIAGRAM):   label INTO = "Outcome";
1745394    label PCT_ROW = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetpct_vlabel ,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PCT_ROW = "Target Percentage";
1745395    label PCT_COL = "%sysfunc(sasmsg(sashelp.dmine, rpt_outcomepct_vlabel , NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PCT_COL = "Outcome Percentage";
1745396    label COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel ,      NOQUOTE))";
MPRINT(EM_DIAGRAM):   label COUNT = "Frequency Count";
1745397    label PERCENT = "%sysfunc(sasmsg(sashelp.dmine, rpt_totalpct_vlabel ,   NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PERCENT = "Total Percentage";
1745398    where _TYPE_='PREDICTION';
MPRINT(EM_DIAGRAM):   where _TYPE_='PREDICTION';
1745399    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
1745400    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_classification_title    , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Classification Table";
MPRINT(EM_DIAGRAM):   run;
1745401    run;
 
NOTE: There were 8 observations read from the data set EMWS8.ENSMBL30_EMCLASSIFICATION.
      WHERE _TYPE_='PREDICTION';
NOTE: The PROCEDURE PRINT printed page 1126.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1745402    title9;
MPRINT(EM_DIAGRAM):   title9;
1745403    title10;
MPRINT(EM_DIAGRAM):   title10;
1745404    options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
1745405    %let _cn = %sysfunc(getoption(CENTER));
1745406    options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
1745407    data EMWS8.Ensmbl30_EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl30_EMEVENTREPORT;
1745408    length DATAROLE TARGET $32 TARGETLABEL $200 FALSENEVENT TRUENEVENT FALSEEVENT
1745408  ! TRUEEVENT 8;
MPRINT(EM_DIAGRAM):   length DATAROLE TARGET $32 TARGETLABEL $200 FALSENEVENT TRUENEVENT
FALSEEVENT TRUEEVENT 8;
1745409    label DATAROLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))"
1745409  !  TARGET = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel ,      NOQUOTE))"
1745409  ! TARGETLABEL = "%sysfunc(sasmsg(sashelp.dmine, meta_targetlabel_vlabel, NOQUOTE))"
1745409  ! FALSEEVENT
1745410    = "%sysfunc(sasmsg(sashelp.dmine, rpt_falseevent_vlabel ,  NOQUOTE))" FALSENEVENT =
1745410  ! "%sysfunc(sasmsg(sashelp.dmine, rpt_falsenevent_vlabel , NOQUOTE))" TRUEEVENT =
1745410  ! "%sysfunc(sasmsg(sashelp.dmine, rpt_trueevent_vlabel ,   NOQUOTE))" TRUENEVENT =
1745411       "%sysfunc(sasmsg(sashelp.dmine, rpt_truenevent_vlabel ,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label DATAROLE = "Data Role" TARGET = "Target" TARGETLABEL = "Target
Label" FALSEEVENT = "False Positive" FALSENEVENT = "False Negative" TRUEEVENT = "True
Positive" TRUENEVENT = "True Negative";
1745412    FALSEEVENT=0;
MPRINT(EM_DIAGRAM):   FALSEEVENT=0;
1745413    FALSENEVENT=0;
MPRINT(EM_DIAGRAM):   FALSENEVENT=0;
1745414    TRUEEVENT=0;
MPRINT(EM_DIAGRAM):   TRUEEVENT=0;
1745415    TRUENEVENT=0;
MPRINT(EM_DIAGRAM):   TRUENEVENT=0;
1745416    set EMWS8.Ensmbl30_EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl30_EMEVENTREPORT;
1745417    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set EMWS8.ENSMBL30_EMEVENTREPORT.
NOTE: The data set EMWS8.ENSMBL30_EMEVENTREPORT has 2 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1745418    proc print data=EMWS8.Ensmbl30_EMEVENTREPORT noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.Ensmbl30_EMEVENTREPORT noobs label;
1745419    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
1745420    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_eventtable_title    , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Event Classification Table";
MPRINT(EM_DIAGRAM):   by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL;
MPRINT(EM_DIAGRAM):   run;
1745421    by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL;
1745422    run;
 
NOTE: There were 2 observations read from the data set EMWS8.ENSMBL30_EMEVENTREPORT.
NOTE: The PROCEDURE PRINT printed page 1127.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1745423    title10;
MPRINT(EM_DIAGRAM):   title10;
1745424    options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
1745425    proc datasets library=EMWS8 nolist;
MPRINT(EM_DIAGRAM):    proc datasets library=EMWS8 nolist;
1745426    modify Ensmbl30_EMRANK;
MPRINT(EM_DIAGRAM):   modify Ensmbl30_EMRANK;
MPRINT(EM_DIAGRAM):   label target = "Target Variable";
1745427    label target = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetvar_vlabel ,   NOQUOTE))";
MPRINT(EM_DIAGRAM):   label datarole = "Data Role";
1745428    label datarole = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))"
1745428  ! ;
MPRINT(EM_DIAGRAM):   run;
1745429    run;
 
NOTE: MODIFY was successful for EMWS8.ENSMBL30_EMRANK.DATA.
1745430    quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.09 seconds
      cpu time            0.09 seconds
 
 
1745431    %let _cn = %sysfunc(getoption(CENTER));
1745432    options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
1745433    proc print data=EMWS8.Ensmbl30_EMRANK label noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.Ensmbl30_EMRANK label noobs;
1745434    var
1745435    decile gain lift liftc resp respc N _meanP_;
MPRINT(EM_DIAGRAM):   var decile gain lift liftc resp respc N _meanP_;
1745436    by
1745437    notsorted DATAROLE
1745438    notsorted TARGET
1745439    notsorted TARGETLABEL
1745440    ;
MPRINT(EM_DIAGRAM):   by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL ;
1745441    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
1745442    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_scoreranking_title , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Assessment Score Rankings";
MPRINT(EM_DIAGRAM):   run;
1745443    run;
 
NOTE: There were 40 observations read from the data set EMWS8.ENSMBL30_EMRANK.
NOTE: The PROCEDURE PRINT printed page 1128.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1745444    title10;
MPRINT(EM_DIAGRAM):   title10;
1745445    options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
1745446    proc datasets library=EMWS8 nolist;
MPRINT(EM_DIAGRAM):    proc datasets library=EMWS8 nolist;
1745447    modify Ensmbl30_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   modify Ensmbl30_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   label target = "Target Variable";
1745448    label target = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetvar_vlabel ,
1745448  ! NOQUOTE))";
MPRINT(EM_DIAGRAM):   label datarole = "Data Role";
1745449    label datarole = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))"
1745449  ! ;
MPRINT(EM_DIAGRAM):   run;
1745450    run;
 
NOTE: MODIFY was successful for EMWS8.ENSMBL30_EMSCOREDIST.DATA.
1745451    quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.09 seconds
      cpu time            0.09 seconds
 
 
MPRINT(EM_DIAGRAM):    options nocenter;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.Ensmbl30_EMSCOREDIST label noobs;
MPRINT(EM_DIAGRAM):   var p_label numberOfEvents numberOfNonEvents _meanp_ percentage;
MPRINT(EM_DIAGRAM):   by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL ;
MPRINT(EM_DIAGRAM):   where TARGET in( "DepVar" );
MPRINT(EM_DIAGRAM):   title9 ' ';
MPRINT(EM_DIAGRAM):   title10 "Assessment Score Distribution";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   title10;
MPRINT(EM_DIAGRAM):   options NOCENTER;
MPRINT(EM_DIAGRAM):   proc printto;
MPRINT(EM_DIAGRAM):   run;
