MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "28. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "20.09 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                28. April 2016
Time:                20.09 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O2SAVOYT 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural38\EMSCORE.out" encoding="UTF-8" 
NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O2SAVOYT new;
MPRINT(EM_DIAGRAM):   run;
926510     filename emflow
926510   ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural38\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural38\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * AutoNeural38: Scoring DATA data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
926511     *------------------------------------------------------------*;
926512     * AutoNeural38: Scoring DATA data;
926513     *------------------------------------------------------------*;
926514     data EMWS8.AutoNeural38_TRAIN
926515     / view=EMWS8.AutoNeural38_TRAIN
926516     ;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural38_TRAIN / view=EMWS8.AutoNeural38_TRAIN ;
926517     set EMWS8.Meta3_TRAIN
926518     ;
MPRINT(EM_DIAGRAM):   set EMWS8.Meta3_TRAIN ;
926519     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural38\EMFLOWSCORE.sas.
926520    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
926521    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
926522    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
926523    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
926524    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
926525    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
926526    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
926527    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
926528    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
926529    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
926530    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
926531    +LENGTH _WARN_ $4
926532    +      F_DepVar  $ 12
926533    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
926534    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
926535    +
926536    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
926537    +
926538    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
926539    +
926540    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
926541    +
926542    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
926543    +
926544    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
926545    +
926546    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
926547    +
926548    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
926549    +
926550    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
926551    +
926552    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
926553    +
926554    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
926555    +
926556    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
926557    +
926558    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
926559    +
926560    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
926561    +
926562    +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
926563    +
926564    +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
926565    +
926566    +      label H1x3_1 = 'Hidden: H1x3_=1' ;
MPRINT(EM_DIAGRAM):   label H1x3_1 = 'Hidden: H1x3_=1' ;
926567    +
926568    +      label H1x3_2 = 'Hidden: H1x3_=2' ;
MPRINT(EM_DIAGRAM):   label H1x3_2 = 'Hidden: H1x3_=2' ;
926569    +
926570    +      label H1x4_1 = 'Hidden: H1x4_=1' ;
MPRINT(EM_DIAGRAM):   label H1x4_1 = 'Hidden: H1x4_=1' ;
926571    +
926572    +      label H1x4_2 = 'Hidden: H1x4_=2' ;
MPRINT(EM_DIAGRAM):   label H1x4_2 = 'Hidden: H1x4_=2' ;
926573    +
926574    +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
926575    +
926576    +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
926577    +
926578    +      label H2x2_1 = 'Hidden: H2x2_=1' ;
MPRINT(EM_DIAGRAM):   label H2x2_1 = 'Hidden: H2x2_=1' ;
926579    +
926580    +      label H2x2_2 = 'Hidden: H2x2_=2' ;
MPRINT(EM_DIAGRAM):   label H2x2_2 = 'Hidden: H2x2_=2' ;
926581    +
926582    +      label H2x3_1 = 'Hidden: H2x3_=1' ;
MPRINT(EM_DIAGRAM):   label H2x3_1 = 'Hidden: H2x3_=1' ;
926583    +
926584    +      label H2x3_2 = 'Hidden: H2x3_=2' ;
MPRINT(EM_DIAGRAM):   label H2x3_2 = 'Hidden: H2x3_=2' ;
926585    +
926586    +      label H3x1_1 = 'Hidden: H3x1_=1' ;
MPRINT(EM_DIAGRAM):   label H3x1_1 = 'Hidden: H3x1_=1' ;
926587    +
926588    +      label H3x1_2 = 'Hidden: H3x1_=2' ;
MPRINT(EM_DIAGRAM):   label H3x1_2 = 'Hidden: H3x1_=2' ;
926589    +
926590    +      label H3x2_1 = 'Hidden: H3x2_=1' ;
MPRINT(EM_DIAGRAM):   label H3x2_1 = 'Hidden: H3x2_=1' ;
926591    +
926592    +      label H3x2_2 = 'Hidden: H3x2_=2' ;
MPRINT(EM_DIAGRAM):   label H3x2_2 = 'Hidden: H3x2_=2' ;
926593    +
926594    +      label H4x1_1 = 'Hidden: H4x1_=1' ;
MPRINT(EM_DIAGRAM):   label H4x1_1 = 'Hidden: H4x1_=1' ;
926595    +
926596    +      label H4x1_2 = 'Hidden: H4x1_=2' ;
MPRINT(EM_DIAGRAM):   label H4x1_2 = 'Hidden: H4x1_=2' ;
926597    +
926598    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
926599    +
926600    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
926601    +
926602    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
926603    +
926604    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
926605    +
926606    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
926607    +
926608    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
926609    +
926610    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
926611    +
926612    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
926613    +
926614    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
926615    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
926616    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
926617    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
926618    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
926619    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
926620    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
926621    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
926622    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
926623    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
926624    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
926625    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
926626    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
926627    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
926628    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
926629    +end;
MPRINT(EM_DIAGRAM):   end;
926630    +else do;
MPRINT(EM_DIAGRAM):   else do;
926631    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
926632    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
926633    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
926634    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
926635    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
926636    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
926637    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
926638    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
926639    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
926640    +         end;
MPRINT(EM_DIAGRAM):   end;
926641    +         else do;
MPRINT(EM_DIAGRAM):   else do;
926642    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
926643    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
926644    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
926645    +            end;
MPRINT(EM_DIAGRAM):   end;
926646    +         end;
MPRINT(EM_DIAGRAM):   end;
926647    +      end;
MPRINT(EM_DIAGRAM):   end;
926648    +      else do;
MPRINT(EM_DIAGRAM):   else do;
926649    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
926650    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
926651    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
926652    +         end;
MPRINT(EM_DIAGRAM):   end;
926653    +      end;
MPRINT(EM_DIAGRAM):   end;
926654    +   end;
MPRINT(EM_DIAGRAM):   end;
926655    +   else do;
MPRINT(EM_DIAGRAM):   else do;
926656    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
926657    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
926658    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
926659    +      end;
MPRINT(EM_DIAGRAM):   end;
926660    +      else do;
MPRINT(EM_DIAGRAM):   else do;
926661    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
926662    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
926663    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
926664    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
926665    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
926666    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
926667    +         end;
MPRINT(EM_DIAGRAM):   end;
926668    +      end;
MPRINT(EM_DIAGRAM):   end;
926669    +   end;
MPRINT(EM_DIAGRAM):   end;
926670    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
926671    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
926672    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
926673    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
926674    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
926675    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
926676    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
926677    +   end;
MPRINT(EM_DIAGRAM):   end;
926678    +end;
MPRINT(EM_DIAGRAM):   end;
926679    +
926680    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
926681    +*** Checking missing input Interval
926682    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
926683    +
926684    +IF NMISS(
926685    +   AcceptedCmpTotal ,
926686    +   Frq ,
926687    +   Mnt ,
926688    +   MntMeatProducts ,
926689    +   NumCatalogPurchases ,
926690    +   NumDealsPurchases ,
926691    +   NumWebVisitsMonth ,
926692    +   Recency   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Mnt , MntMeatProducts , 
NumCatalogPurchases , NumDealsPurchases , NumWebVisitsMonth , Recency ) THEN DO;
926693    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
926694    +
926695    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
926696    +END;
MPRINT(EM_DIAGRAM):   END;
926697    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
926698    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
926699    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
926700    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
926701    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
926702    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
926703    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
926704    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
926705    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
926706    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
926707    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
926708    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
926709    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
926710    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
926711    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
926712    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
926713    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
926714    +END;
MPRINT(EM_DIAGRAM):   END;
926715    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
926716    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
926717    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
926718    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
926719    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
926720    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
926721    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
926722    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
926723    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
926724    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
926725    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
926726    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
926727    +   ELSE S_NumCatalogPurchases
926728    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
926729    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
926730    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
926731    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
926732    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
926733    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
926734    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
926735    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
926736    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
926737    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
926738    +END;
MPRINT(EM_DIAGRAM):   END;
926739    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
926740    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
926741    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
926742    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
926743    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
926744    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
926745    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
926746    +   H1x1_1  =     0.03317833435323 * S_AcceptedCmpTotal
926747    +          +    -0.66859164215955 * S_Frq  +     1.04503858219375 * S_Mnt
926748    +          +     3.02405267314398 * S_MntMeatProducts
926749    +          +     0.25422172488707 * S_NumCatalogPurchases
926750    +          +     0.25977266371328 * S_NumDealsPurchases
926751    +          +    -0.26865365728773 * S_NumWebVisitsMonth
926752    +          +     0.09531087154516 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.03317833435323 * S_AcceptedCmpTotal + -0.66859164215955 * 
S_Frq + 1.04503858219375 * S_Mnt + 3.02405267314398 * S_MntMeatProducts + 0.25422172488707 * 
S_NumCatalogPurchases + 0.25977266371328 * S_NumDealsPurchases + -0.26865365728773 * 
S_NumWebVisitsMonth + 0.09531087154516 * S_Recency ;
926753    +   H1x1_2  =    -0.69087988352897 * S_AcceptedCmpTotal
926754    +          +    -0.11955753576733 * S_Frq  +     0.84152651412075 * S_Mnt
926755    +          +    -0.64419071408502 * S_MntMeatProducts
926756    +          +    -0.49060224303044 * S_NumCatalogPurchases
926757    +          +    -0.04840762943457 * S_NumDealsPurchases
926758    +          +     -0.7656247386051 * S_NumWebVisitsMonth
926759    +          +     1.13086655489449 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.69087988352897 * S_AcceptedCmpTotal + -0.11955753576733 * 
S_Frq + 0.84152651412075 * S_Mnt + -0.64419071408502 * S_MntMeatProducts + -0.49060224303044 * 
S_NumCatalogPurchases + -0.04840762943457 * S_NumDealsPurchases + -0.7656247386051 * 
S_NumWebVisitsMonth + 1.13086655489449 * S_Recency ;
926760    +   H1x1_1  = H1x1_1  +    -0.53136707555877 * Marital_StatusDivorced
926761    +          +    -0.05888536499281 * Marital_StatusMarried
926762    +          +    -0.22627441829205 * Marital_StatusSingle
926763    +          +     0.52348719245564 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.53136707555877 * Marital_StatusDivorced + 
-0.05888536499281 * Marital_StatusMarried + -0.22627441829205 * Marital_StatusSingle + 
0.52348719245564 * Marital_StatusTogether ;
926764    +   H1x1_2  = H1x1_2  +    -0.85322837962298 * Marital_StatusDivorced
926765    +          +     0.82536605771339 * Marital_StatusMarried
926766    +          +    -0.97196770004098 * Marital_StatusSingle
926767    +          +      1.2063947269032 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.85322837962298 * Marital_StatusDivorced + 
0.82536605771339 * Marital_StatusMarried + -0.97196770004098 * Marital_StatusSingle + 
1.2063947269032 * Marital_StatusTogether ;
926768    +   H1x1_1  =     3.30547913450619 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 3.30547913450619 + H1x1_1 ;
926769    +   H1x1_2  =     1.08446512287712 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.08446512287712 + H1x1_2 ;
926770    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
926771    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
926772    +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
926773    +   H1x1_2  = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
926774    +END;
MPRINT(EM_DIAGRAM):   END;
926775    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
926776    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
926777    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
926778    +END;
MPRINT(EM_DIAGRAM):   END;
926779    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
926780    +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
926781    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
926782    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
926783    +   H1x2_1  =     0.52271766494525 * S_AcceptedCmpTotal
926784    +          +     0.57611155332907 * S_Frq  +     2.82792468297238 * S_Mnt
926785    +          +    -1.52187144029368 * S_MntMeatProducts
926786    +          +    -0.17233011764417 * S_NumCatalogPurchases
926787    +          +     0.08681674245114 * S_NumDealsPurchases
926788    +          +     0.13308256651831 * S_NumWebVisitsMonth
926789    +          +    -0.88526514420045 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.52271766494525 * S_AcceptedCmpTotal + 0.57611155332907 * 
S_Frq + 2.82792468297238 * S_Mnt + -1.52187144029368 * S_MntMeatProducts + -0.17233011764417 * 
S_NumCatalogPurchases + 0.08681674245114 * S_NumDealsPurchases + 0.13308256651831 * 
S_NumWebVisitsMonth + -0.88526514420045 * S_Recency ;
926790    +   H1x2_2  =      0.4222520789746 * S_AcceptedCmpTotal
926791    +          +    -3.13381438735416 * S_Frq  +    -0.34909843441486 * S_Mnt
926792    +          +     0.66187267823731 * S_MntMeatProducts
926793    +          +     1.52530454111654 * S_NumCatalogPurchases
926794    +          +     0.73982889008686 * S_NumDealsPurchases
926795    +          +     1.03760708665776 * S_NumWebVisitsMonth
926796    +          +    -1.31685207844927 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 0.4222520789746 * S_AcceptedCmpTotal + -3.13381438735416 * 
S_Frq + -0.34909843441486 * S_Mnt + 0.66187267823731 * S_MntMeatProducts + 1.52530454111654 * 
S_NumCatalogPurchases + 0.73982889008686 * S_NumDealsPurchases + 1.03760708665776 * 
S_NumWebVisitsMonth + -1.31685207844927 * S_Recency ;
926797    +   H1x2_1  = H1x2_1  +    -0.40921432838161 * Marital_StatusDivorced
926798    +          +    -0.57121500191985 * Marital_StatusMarried
926799    +          +     0.00575301863466 * Marital_StatusSingle
926800    +          +     0.58606212168272 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.40921432838161 * Marital_StatusDivorced + 
-0.57121500191985 * Marital_StatusMarried + 0.00575301863466 * Marital_StatusSingle + 
0.58606212168272 * Marital_StatusTogether ;
926801    +   H1x2_2  = H1x2_2  +     0.05193612372383 * Marital_StatusDivorced
926802    +          +     0.68382990555761 * Marital_StatusMarried
926803    +          +    -0.40241665873988 * Marital_StatusSingle
926804    +          +     0.66274709598028 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 0.05193612372383 * Marital_StatusDivorced + 
0.68382990555761 * Marital_StatusMarried + -0.40241665873988 * Marital_StatusSingle + 
0.66274709598028 * Marital_StatusTogether ;
926805    +   H1x2_1  =     1.66256790999222 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.66256790999222 + H1x2_1 ;
926806    +   H1x2_2  =    -2.71135276190381 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -2.71135276190381 + H1x2_2 ;
926807    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
926808    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
926809    +   H1x2_1  = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
926810    +   H1x2_2  = 1.0 / (1.0 + EXP(MIN( - H1x2_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_2 = 1.0 / (1.0 + EXP(MIN( - H1x2_2 , _EXP_BAR)));
926811    +END;
MPRINT(EM_DIAGRAM):   END;
926812    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
926813    +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
926814    +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
926815    +END;
MPRINT(EM_DIAGRAM):   END;
926816    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
926817    +*** Writing the Node H1x3_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x3_ ;
926818    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
926819    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
926820    +   H1x3_1  =    -1.36813165661884 * S_AcceptedCmpTotal
926821    +          +    -0.29960918468261 * S_Frq  +    -0.65204315831074 * S_Mnt
926822    +          +    -2.40830591527574 * S_MntMeatProducts
926823    +          +    -0.89296864866675 * S_NumCatalogPurchases
926824    +          +     1.79889409325514 * S_NumDealsPurchases
926825    +          +    -0.33765715793031 * S_NumWebVisitsMonth
926826    +          +    -0.63474704455434 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x3_1 = -1.36813165661884 * S_AcceptedCmpTotal + -0.29960918468261 * 
S_Frq + -0.65204315831074 * S_Mnt + -2.40830591527574 * S_MntMeatProducts + -0.89296864866675 
* S_NumCatalogPurchases + 1.79889409325514 * S_NumDealsPurchases + -0.33765715793031 * 
S_NumWebVisitsMonth + -0.63474704455434 * S_Recency ;
926827    +   H1x3_2  =    -0.20409738779324 * S_AcceptedCmpTotal
926828    +          +     1.49919916163823 * S_Frq  +     -0.9415605932144 * S_Mnt
926829    +          +     0.04224245417831 * S_MntMeatProducts
926830    +          +     0.25836861794607 * S_NumCatalogPurchases
926831    +          +     2.47909264202917 * S_NumDealsPurchases
926832    +          +     0.14790226792406 * S_NumWebVisitsMonth
926833    +          +     0.40870786833591 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x3_2 = -0.20409738779324 * S_AcceptedCmpTotal + 1.49919916163823 * 
S_Frq + -0.9415605932144 * S_Mnt + 0.04224245417831 * S_MntMeatProducts + 0.25836861794607 * 
S_NumCatalogPurchases + 2.47909264202917 * S_NumDealsPurchases + 0.14790226792406 * 
S_NumWebVisitsMonth + 0.40870786833591 * S_Recency ;
926834    +   H1x3_1  = H1x3_1  +     0.20928850420446 * Marital_StatusDivorced
926835    +          +     0.39103795234666 * Marital_StatusMarried
926836    +          +    -0.52822284221545 * Marital_StatusSingle
926837    +          +    -1.86494928221959 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + 0.20928850420446 * Marital_StatusDivorced + 
0.39103795234666 * Marital_StatusMarried + -0.52822284221545 * Marital_StatusSingle + 
-1.86494928221959 * Marital_StatusTogether ;
926838    +   H1x3_2  = H1x3_2  +     1.62005786474378 * Marital_StatusDivorced
926839    +          +       1.975579060233 * Marital_StatusMarried
926840    +          +     0.15028521746762 * Marital_StatusSingle
926841    +          +     0.92005975380984 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 + 1.62005786474378 * Marital_StatusDivorced + 
1.975579060233 * Marital_StatusMarried + 0.15028521746762 * Marital_StatusSingle + 
0.92005975380984 * Marital_StatusTogether ;
926842    +   H1x3_1  =     0.89242262747745 + H1x3_1 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 0.89242262747745 + H1x3_1 ;
926843    +   H1x3_2  =     0.65972128608947 + H1x3_2 ;
MPRINT(EM_DIAGRAM):   H1x3_2 = 0.65972128608947 + H1x3_2 ;
926844    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
926845    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
926846    +   H1x3_1  = 1.0 / (1.0 + EXP(MIN( - H1x3_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x3_1 = 1.0 / (1.0 + EXP(MIN( - H1x3_1 , _EXP_BAR)));
926847    +   H1x3_2  = 1.0 / (1.0 + EXP(MIN( - H1x3_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x3_2 = 1.0 / (1.0 + EXP(MIN( - H1x3_2 , _EXP_BAR)));
926848    +END;
MPRINT(EM_DIAGRAM):   END;
926849    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
926850    +   H1x3_1  = .;
MPRINT(EM_DIAGRAM):   H1x3_1 = .;
926851    +   H1x3_2  = .;
MPRINT(EM_DIAGRAM):   H1x3_2 = .;
926852    +END;
MPRINT(EM_DIAGRAM):   END;
926853    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
926854    +*** Writing the Node H1x4_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x4_ ;
926855    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
926856    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
926857    +   H1x4_1  =    -1.56857036994838 * S_AcceptedCmpTotal
926858    +          +    -0.01709393019065 * S_Frq  +    -0.41130381419631 * S_Mnt
926859    +          +     0.16060225059391 * S_MntMeatProducts
926860    +          +     1.53093292630033 * S_NumCatalogPurchases
926861    +          +     0.39573641806699 * S_NumDealsPurchases
926862    +          +    -0.95387142126649 * S_NumWebVisitsMonth
926863    +          +     0.58661969978382 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x4_1 = -1.56857036994838 * S_AcceptedCmpTotal + -0.01709393019065 * 
S_Frq + -0.41130381419631 * S_Mnt + 0.16060225059391 * S_MntMeatProducts + 1.53093292630033 * 
S_NumCatalogPurchases + 0.39573641806699 * S_NumDealsPurchases + -0.95387142126649 * 
S_NumWebVisitsMonth + 0.58661969978382 * S_Recency ;
926864    +   H1x4_2  =     0.40365014181339 * S_AcceptedCmpTotal
926865    +          +     0.25758137147094 * S_Frq  +     1.96878849657351 * S_Mnt
926866    +          +     0.71628478327205 * S_MntMeatProducts
926867    +          +     0.15890352363556 * S_NumCatalogPurchases
926868    +          +    -1.12928875468011 * S_NumDealsPurchases
926869    +          +    -0.30108145274307 * S_NumWebVisitsMonth
926870    +          +     0.28810419317266 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x4_2 = 0.40365014181339 * S_AcceptedCmpTotal + 0.25758137147094 * 
S_Frq + 1.96878849657351 * S_Mnt + 0.71628478327205 * S_MntMeatProducts + 0.15890352363556 * 
S_NumCatalogPurchases + -1.12928875468011 * S_NumDealsPurchases + -0.30108145274307 * 
S_NumWebVisitsMonth + 0.28810419317266 * S_Recency ;
926871    +   H1x4_1  = H1x4_1  +     0.71809860803817 * Marital_StatusDivorced
926872    +          +     0.91966160839643 * Marital_StatusMarried
926873    +          +    -0.63411090570397 * Marital_StatusSingle
926874    +          +    -0.54635673224032 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x4_1 = H1x4_1 + 0.71809860803817 * Marital_StatusDivorced + 
0.91966160839643 * Marital_StatusMarried + -0.63411090570397 * Marital_StatusSingle + 
-0.54635673224032 * Marital_StatusTogether ;
926875    +   H1x4_2  = H1x4_2  +    -0.82559954633474 * Marital_StatusDivorced
926876    +          +     0.77230489026504 * Marital_StatusMarried
926877    +          +     0.20456495503812 * Marital_StatusSingle
926878    +          +    -0.94791841887496 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x4_2 = H1x4_2 + -0.82559954633474 * Marital_StatusDivorced + 
0.77230489026504 * Marital_StatusMarried + 0.20456495503812 * Marital_StatusSingle + 
-0.94791841887496 * Marital_StatusTogether ;
926879    +   H1x4_1  =    -0.74278734869781 + H1x4_1 ;
MPRINT(EM_DIAGRAM):   H1x4_1 = -0.74278734869781 + H1x4_1 ;
926880    +   H1x4_2  =     1.36386007305279 + H1x4_2 ;
MPRINT(EM_DIAGRAM):   H1x4_2 = 1.36386007305279 + H1x4_2 ;
926881    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
926882    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
926883    +   H1x4_1  = 1.0 / (1.0 + EXP(MIN( - H1x4_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x4_1 = 1.0 / (1.0 + EXP(MIN( - H1x4_1 , _EXP_BAR)));
926884    +   H1x4_2  = 1.0 / (1.0 + EXP(MIN( - H1x4_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x4_2 = 1.0 / (1.0 + EXP(MIN( - H1x4_2 , _EXP_BAR)));
926885    +END;
MPRINT(EM_DIAGRAM):   END;
926886    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
926887    +   H1x4_1  = .;
MPRINT(EM_DIAGRAM):   H1x4_1 = .;
926888    +   H1x4_2  = .;
MPRINT(EM_DIAGRAM):   H1x4_2 = .;
926889    +END;
MPRINT(EM_DIAGRAM):   END;
926890    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
926891    +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
926892    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
926893    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
926894    +   H2x1_1  =     6.70671434954254 * H1x1_1  +    -3.26026761915622 * H1x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 6.70671434954254 * H1x1_1 + -3.26026761915622 * H1x1_2 ;
926895    +   H2x1_2  =     9.50930943961048 * H1x1_1  +     -38.665886357082 * H1x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = 9.50930943961048 * H1x1_1 + -38.665886357082 * H1x1_2 ;
926896    +   H2x1_1  = H2x1_1  +    -2.93089545861469 * H1x2_1
926897    +          +     1.56101538169797 * H1x2_2 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -2.93089545861469 * H1x2_1 + 1.56101538169797 * H1x2_2 
;
926898    +   H2x1_2  = H2x1_2  +    -0.71350117244702 * H1x2_1
926899    +          +    -3.81025846953023 * H1x2_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + -0.71350117244702 * H1x2_1 + -3.81025846953023 * 
H1x2_2 ;
926900    +   H2x1_1  = H2x1_1  +    -0.33624313911685 * H1x3_1
926901    +          +     -0.2506302302983 * H1x3_2 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -0.33624313911685 * H1x3_1 + -0.2506302302983 * H1x3_2 
;
926902    +   H2x1_2  = H2x1_2  +    -0.95434767487254 * H1x3_1
926903    +          +    -0.10638654133666 * H1x3_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + -0.95434767487254 * H1x3_1 + -0.10638654133666 * 
H1x3_2 ;
926904    +   H2x1_1  = H2x1_1  +    -0.27261326347944 * H1x4_1
926905    +          +     0.15687682287669 * H1x4_2 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -0.27261326347944 * H1x4_1 + 0.15687682287669 * H1x4_2 
;
926906    +   H2x1_2  = H2x1_2  +     0.43717724195408 * H1x4_1
926907    +          +     0.97600288948907 * H1x4_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + 0.43717724195408 * H1x4_1 + 0.97600288948907 * H1x4_2 ;
926908    +   H2x1_1  =    -1.76465776305701 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -1.76465776305701 + H2x1_1 ;
926909    +   H2x1_2  =     2.45505067378694 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = 2.45505067378694 + H2x1_2 ;
926910    +   H2x1_1  = SIN(H2x1_1 );
MPRINT(EM_DIAGRAM):   H2x1_1 = SIN(H2x1_1 );
926911    +   H2x1_2  = SIN(H2x1_2 );
MPRINT(EM_DIAGRAM):   H2x1_2 = SIN(H2x1_2 );
926912    +END;
MPRINT(EM_DIAGRAM):   END;
926913    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
926914    +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
926915    +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
926916    +END;
MPRINT(EM_DIAGRAM):   END;
926917    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
926918    +*** Writing the Node H2x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x2_ ;
926919    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
926920    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
926921    +   H2x2_1  =     0.44221000188212 * H1x1_1  +    -0.09410411660626 * H1x1_2 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = 0.44221000188212 * H1x1_1 + -0.09410411660626 * H1x1_2 ;
926922    +   H2x2_2  =    -0.62041237832472 * H1x1_1  +    -1.70568019769479 * H1x1_2 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = -0.62041237832472 * H1x1_1 + -1.70568019769479 * H1x1_2 ;
926923    +   H2x2_1  = H2x2_1  +     0.86476170574504 * H1x2_1
926924    +          +    -2.36042697137738 * H1x2_2 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + 0.86476170574504 * H1x2_1 + -2.36042697137738 * H1x2_2 
;
926925    +   H2x2_2  = H2x2_2  +     0.44483356408795 * H1x2_1
926926    +          +    -1.66254033339836 * H1x2_2 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 + 0.44483356408795 * H1x2_1 + -1.66254033339836 * H1x2_2 
;
926927    +   H2x2_1  = H2x2_1  +     2.16429199725142 * H1x3_1
926928    +          +     1.43296701176218 * H1x3_2 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + 2.16429199725142 * H1x3_1 + 1.43296701176218 * H1x3_2 ;
926929    +   H2x2_2  = H2x2_2  +     -2.3086904824016 * H1x3_1
926930    +          +    -2.17810690370253 * H1x3_2 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 + -2.3086904824016 * H1x3_1 + -2.17810690370253 * H1x3_2 
;
926931    +   H2x2_1  = H2x2_1  +     0.00588994713052 * H1x4_1
926932    +          +     0.12676819806376 * H1x4_2 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + 0.00588994713052 * H1x4_1 + 0.12676819806376 * H1x4_2 ;
926933    +   H2x2_2  = H2x2_2  +     0.82027256992322 * H1x4_1
926934    +          +    -0.52732352975227 * H1x4_2 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 + 0.82027256992322 * H1x4_1 + -0.52732352975227 * H1x4_2 
;
926935    +   H2x2_1  =     0.47389009262422 + H2x2_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = 0.47389009262422 + H2x2_1 ;
926936    +   H2x2_2  =     -0.8122008316452 + H2x2_2 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = -0.8122008316452 + H2x2_2 ;
926937    +   H2x2_1  = SIN(H2x2_1 );
MPRINT(EM_DIAGRAM):   H2x2_1 = SIN(H2x2_1 );
926938    +   H2x2_2  = SIN(H2x2_2 );
MPRINT(EM_DIAGRAM):   H2x2_2 = SIN(H2x2_2 );
926939    +END;
MPRINT(EM_DIAGRAM):   END;
926940    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
926941    +   H2x2_1  = .;
MPRINT(EM_DIAGRAM):   H2x2_1 = .;
926942    +   H2x2_2  = .;
MPRINT(EM_DIAGRAM):   H2x2_2 = .;
926943    +END;
MPRINT(EM_DIAGRAM):   END;
926944    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
926945    +*** Writing the Node H2x3_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x3_ ;
926946    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
926947    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
926948    +   H2x3_1  =    -0.28493649489231 * H1x1_1  +     0.46324227997344 * H1x1_2 ;
MPRINT(EM_DIAGRAM):   H2x3_1 = -0.28493649489231 * H1x1_1 + 0.46324227997344 * H1x1_2 ;
926949    +   H2x3_2  =     0.41015874548881 * H1x1_1  +    -0.05146341955765 * H1x1_2 ;
MPRINT(EM_DIAGRAM):   H2x3_2 = 0.41015874548881 * H1x1_1 + -0.05146341955765 * H1x1_2 ;
926950    +   H2x3_1  = H2x3_1  +    -1.00349052905386 * H1x2_1
926951    +          +     0.64290952668224 * H1x2_2 ;
MPRINT(EM_DIAGRAM):   H2x3_1 = H2x3_1 + -1.00349052905386 * H1x2_1 + 0.64290952668224 * H1x2_2 
;
926952    +   H2x3_2  = H2x3_2  +     0.48935572509195 * H1x2_1
926953    +          +     0.64476371718125 * H1x2_2 ;
MPRINT(EM_DIAGRAM):   H2x3_2 = H2x3_2 + 0.48935572509195 * H1x2_1 + 0.64476371718125 * H1x2_2 ;
926954    +   H2x3_1  = H2x3_1  +    -1.11988665905516 * H1x3_1
926955    +          +    -0.34805105626026 * H1x3_2 ;
MPRINT(EM_DIAGRAM):   H2x3_1 = H2x3_1 + -1.11988665905516 * H1x3_1 + -0.34805105626026 * 
H1x3_2 ;
926956    +   H2x3_2  = H2x3_2  +     0.32493988416634 * H1x3_1
926957    +          +     0.32809540262065 * H1x3_2 ;
MPRINT(EM_DIAGRAM):   H2x3_2 = H2x3_2 + 0.32493988416634 * H1x3_1 + 0.32809540262065 * H1x3_2 ;
926958    +   H2x3_1  = H2x3_1  +     0.47764131040964 * H1x4_1
926959    +          +    -1.36976442655344 * H1x4_2 ;
MPRINT(EM_DIAGRAM):   H2x3_1 = H2x3_1 + 0.47764131040964 * H1x4_1 + -1.36976442655344 * H1x4_2 
;
926960    +   H2x3_2  = H2x3_2  +     -0.3421580983005 * H1x4_1
926961    +          +     0.47926475944446 * H1x4_2 ;
MPRINT(EM_DIAGRAM):   H2x3_2 = H2x3_2 + -0.3421580983005 * H1x4_1 + 0.47926475944446 * H1x4_2 ;
926962    +   H2x3_1  =     0.90815431460142 + H2x3_1 ;
MPRINT(EM_DIAGRAM):   H2x3_1 = 0.90815431460142 + H2x3_1 ;
926963    +   H2x3_2  =    -1.77185533764538 + H2x3_2 ;
MPRINT(EM_DIAGRAM):   H2x3_2 = -1.77185533764538 + H2x3_2 ;
926964    +   H2x3_1  = SIN(H2x3_1 );
MPRINT(EM_DIAGRAM):   H2x3_1 = SIN(H2x3_1 );
926965    +   H2x3_2  = SIN(H2x3_2 );
MPRINT(EM_DIAGRAM):   H2x3_2 = SIN(H2x3_2 );
926966    +END;
MPRINT(EM_DIAGRAM):   END;
926967    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
926968    +   H2x3_1  = .;
MPRINT(EM_DIAGRAM):   H2x3_1 = .;
926969    +   H2x3_2  = .;
MPRINT(EM_DIAGRAM):   H2x3_2 = .;
926970    +END;
MPRINT(EM_DIAGRAM):   END;
926971    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
926972    +*** Writing the Node H3x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H3x1_ ;
926973    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
926974    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
926975    +   H3x1_1  =     4.31939811374229 * H2x1_1  +      -0.700351897347 * H2x1_2 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = 4.31939811374229 * H2x1_1 + -0.700351897347 * H2x1_2 ;
926976    +   H3x1_1  = H3x1_1  +     2.40750918668175 * H2x2_1
926977    +          +    -1.54042325930374 * H2x2_2 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = H3x1_1 + 2.40750918668175 * H2x2_1 + -1.54042325930374 * H2x2_2 
;
926978    +   H3x1_1  = H3x1_1  +     1.46738265989804 * H2x3_1
926979    +          +     0.20077963052939 * H2x3_2 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = H3x1_1 + 1.46738265989804 * H2x3_1 + 0.20077963052939 * H2x3_2 ;
926980    +   H3x1_1  =    -0.09840116412671 + H3x1_1 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = -0.09840116412671 + H3x1_1 ;
926981    +   H3x1_2  = 0;
MPRINT(EM_DIAGRAM):   H3x1_2 = 0;
926982    +   _MAX_ = MAX (H3x1_1 , H3x1_2 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H3x1_1 , H3x1_2 );
926983    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
926984    +   H3x1_1  = EXP(H3x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_1 = EXP(H3x1_1 - _MAX_);
926985    +   _SUM_ = _SUM_ + H3x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_1 ;
926986    +   H3x1_2  = EXP(H3x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_2 = EXP(H3x1_2 - _MAX_);
926987    +   _SUM_ = _SUM_ + H3x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_2 ;
926988    +   H3x1_1  = H3x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_1 = H3x1_1 / _SUM_;
926989    +   H3x1_2  = H3x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_2 = H3x1_2 / _SUM_;
926990    +END;
MPRINT(EM_DIAGRAM):   END;
926991    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
926992    +   H3x1_1  = .;
MPRINT(EM_DIAGRAM):   H3x1_1 = .;
926993    +   H3x1_2  = .;
MPRINT(EM_DIAGRAM):   H3x1_2 = .;
926994    +END;
MPRINT(EM_DIAGRAM):   END;
926995    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
926996    +*** Writing the Node H3x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H3x2_ ;
926997    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
926998    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
926999    +   H3x2_1  =    -1.46965147800397 * H2x1_1  +    -0.15489723855448 * H2x1_2 ;
MPRINT(EM_DIAGRAM):   H3x2_1 = -1.46965147800397 * H2x1_1 + -0.15489723855448 * H2x1_2 ;
927000    +   H3x2_1  = H3x2_1  +     0.91269334410481 * H2x2_1
927001    +          +     -0.0392976578726 * H2x2_2 ;
MPRINT(EM_DIAGRAM):   H3x2_1 = H3x2_1 + 0.91269334410481 * H2x2_1 + -0.0392976578726 * H2x2_2 ;
927002    +   H3x2_1  = H3x2_1  +    -1.07273740820729 * H2x3_1
927003    +          +    -1.32572907075931 * H2x3_2 ;
MPRINT(EM_DIAGRAM):   H3x2_1 = H3x2_1 + -1.07273740820729 * H2x3_1 + -1.32572907075931 * 
H2x3_2 ;
927004    +   H3x2_1  =     0.58690615295837 + H3x2_1 ;
MPRINT(EM_DIAGRAM):   H3x2_1 = 0.58690615295837 + H3x2_1 ;
927005    +   H3x2_2  = 0;
MPRINT(EM_DIAGRAM):   H3x2_2 = 0;
927006    +   _MAX_ = MAX (H3x2_1 , H3x2_2 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H3x2_1 , H3x2_2 );
927007    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
927008    +   H3x2_1  = EXP(H3x2_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x2_1 = EXP(H3x2_1 - _MAX_);
927009    +   _SUM_ = _SUM_ + H3x2_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x2_1 ;
927010    +   H3x2_2  = EXP(H3x2_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x2_2 = EXP(H3x2_2 - _MAX_);
927011    +   _SUM_ = _SUM_ + H3x2_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x2_2 ;
927012    +   H3x2_1  = H3x2_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x2_1 = H3x2_1 / _SUM_;
927013    +   H3x2_2  = H3x2_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x2_2 = H3x2_2 / _SUM_;
927014    +END;
MPRINT(EM_DIAGRAM):   END;
927015    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
927016    +   H3x2_1  = .;
MPRINT(EM_DIAGRAM):   H3x2_1 = .;
927017    +   H3x2_2  = .;
MPRINT(EM_DIAGRAM):   H3x2_2 = .;
927018    +END;
MPRINT(EM_DIAGRAM):   END;
927019    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
927020    +*** Writing the Node H4x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H4x1_ ;
927021    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
927022    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
927023    +   H4x1_1  =     2.98683826857579 * H3x1_1  +     -3.7943130439002 * H3x1_2 ;
MPRINT(EM_DIAGRAM):   H4x1_1 = 2.98683826857579 * H3x1_1 + -3.7943130439002 * H3x1_2 ;
927024    +   H4x1_1  = H4x1_1  +     -0.1130856885584 * H3x2_1
927025    +          +     0.90223250703174 * H3x2_2 ;
MPRINT(EM_DIAGRAM):   H4x1_1 = H4x1_1 + -0.1130856885584 * H3x2_1 + 0.90223250703174 * H3x2_2 ;
927026    +   H4x1_1  =     0.34321706022332 + H4x1_1 ;
MPRINT(EM_DIAGRAM):   H4x1_1 = 0.34321706022332 + H4x1_1 ;
927027    +   H4x1_2  = 0;
MPRINT(EM_DIAGRAM):   H4x1_2 = 0;
927028    +   _MAX_ = MAX (H4x1_1 , H4x1_2 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H4x1_1 , H4x1_2 );
927029    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
927030    +   H4x1_1  = EXP(H4x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H4x1_1 = EXP(H4x1_1 - _MAX_);
927031    +   _SUM_ = _SUM_ + H4x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H4x1_1 ;
927032    +   H4x1_2  = EXP(H4x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H4x1_2 = EXP(H4x1_2 - _MAX_);
927033    +   _SUM_ = _SUM_ + H4x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H4x1_2 ;
927034    +   H4x1_1  = H4x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H4x1_1 = H4x1_1 / _SUM_;
927035    +   H4x1_2  = H4x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H4x1_2 = H4x1_2 / _SUM_;
927036    +END;
MPRINT(EM_DIAGRAM):   END;
927037    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
927038    +   H4x1_1  = .;
MPRINT(EM_DIAGRAM):   H4x1_1 = .;
927039    +   H4x1_2  = .;
MPRINT(EM_DIAGRAM):   H4x1_2 = .;
927040    +END;
MPRINT(EM_DIAGRAM):   END;
927041    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
927042    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
927043    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
927044    +
927045    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
927046    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
927047    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
927048    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
927049    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
927050    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
927051    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
927052    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
927053    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
927054    +end;
MPRINT(EM_DIAGRAM):   end;
927055    +else do;
MPRINT(EM_DIAGRAM):   else do;
927056    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
927057    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
927058    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
927059    +   end;
MPRINT(EM_DIAGRAM):   end;
927060    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
927061    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
927062    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
927063    +   end;
MPRINT(EM_DIAGRAM):   end;
927064    +   else do;
MPRINT(EM_DIAGRAM):   else do;
927065    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
927066    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
927067    +   end;
MPRINT(EM_DIAGRAM):   end;
927068    +end;
MPRINT(EM_DIAGRAM):   end;
927069    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
927070    +   P_DepVar1  =     4.36647161522328 * H4x1_1  +    -5.83126986959915 * H4x1_2
927071    +         ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 4.36647161522328 * H4x1_1 + -5.83126986959915 * H4x1_2 ;
927072    +   P_DepVar1  =    -4.21364937441824 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -4.21364937441824 + P_DepVar1 ;
927073    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
927074    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
927075    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
927076    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
927077    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
927078    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
927079    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
927080    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
927081    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
927082    +END;
MPRINT(EM_DIAGRAM):   END;
927083    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
927084    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
927085    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
927086    +END;
MPRINT(EM_DIAGRAM):   END;
927087    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
927088    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
927089    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
927090    +END;
MPRINT(EM_DIAGRAM):   END;
927091    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
927092    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
927093    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
927094    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
927095    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
927096    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
927097    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
927098    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
927099    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
927100    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
927101    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
927102    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
927103    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
927104    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
927105    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
927106    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
927107    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
927108    +END;
MPRINT(EM_DIAGRAM):   END;
927109    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
927110    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
927111    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
927112    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
927113     run;

NOTE: DATA STEP view saved on file EMWS8.AUTONEURAL38_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.META3_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(EM_DIAGRAM):   quit;
927114     quit;
927115     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
927116     filename emflow
927116   ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural38\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural38\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * AutoNeural38: Scoring VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
927117     *------------------------------------------------------------*;
927118     * AutoNeural38: Scoring VALIDATE data;
927119     *------------------------------------------------------------*;
927120     data EMWS8.AutoNeural38_VALIDATE
927121     / view=EMWS8.AutoNeural38_VALIDATE
927122     ;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural38_VALIDATE / view=EMWS8.AutoNeural38_VALIDATE ;
927123     set EMWS8.Meta3_VALIDATE
927124     ;
MPRINT(EM_DIAGRAM):   set EMWS8.Meta3_VALIDATE ;
927125     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural38\EMFLOWSCORE.sas.
927126    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
927127    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
927128    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
927129    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
927130    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
927131    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
927132    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
927133    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
927134    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
927135    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
927136    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
927137    +LENGTH _WARN_ $4
927138    +      F_DepVar  $ 12
927139    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
927140    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
927141    +
927142    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
927143    +
927144    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
927145    +
927146    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
927147    +
927148    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
927149    +
927150    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
927151    +
927152    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
927153    +
927154    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
927155    +
927156    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
927157    +
927158    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
927159    +
927160    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
927161    +
927162    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
927163    +
927164    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
927165    +
927166    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
927167    +
927168    +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
927169    +
927170    +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
927171    +
927172    +      label H1x3_1 = 'Hidden: H1x3_=1' ;
MPRINT(EM_DIAGRAM):   label H1x3_1 = 'Hidden: H1x3_=1' ;
927173    +
927174    +      label H1x3_2 = 'Hidden: H1x3_=2' ;
MPRINT(EM_DIAGRAM):   label H1x3_2 = 'Hidden: H1x3_=2' ;
927175    +
927176    +      label H1x4_1 = 'Hidden: H1x4_=1' ;
MPRINT(EM_DIAGRAM):   label H1x4_1 = 'Hidden: H1x4_=1' ;
927177    +
927178    +      label H1x4_2 = 'Hidden: H1x4_=2' ;
MPRINT(EM_DIAGRAM):   label H1x4_2 = 'Hidden: H1x4_=2' ;
927179    +
927180    +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
927181    +
927182    +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
927183    +
927184    +      label H2x2_1 = 'Hidden: H2x2_=1' ;
MPRINT(EM_DIAGRAM):   label H2x2_1 = 'Hidden: H2x2_=1' ;
927185    +
927186    +      label H2x2_2 = 'Hidden: H2x2_=2' ;
MPRINT(EM_DIAGRAM):   label H2x2_2 = 'Hidden: H2x2_=2' ;
927187    +
927188    +      label H2x3_1 = 'Hidden: H2x3_=1' ;
MPRINT(EM_DIAGRAM):   label H2x3_1 = 'Hidden: H2x3_=1' ;
927189    +
927190    +      label H2x3_2 = 'Hidden: H2x3_=2' ;
MPRINT(EM_DIAGRAM):   label H2x3_2 = 'Hidden: H2x3_=2' ;
927191    +
927192    +      label H3x1_1 = 'Hidden: H3x1_=1' ;
MPRINT(EM_DIAGRAM):   label H3x1_1 = 'Hidden: H3x1_=1' ;
927193    +
927194    +      label H3x1_2 = 'Hidden: H3x1_=2' ;
MPRINT(EM_DIAGRAM):   label H3x1_2 = 'Hidden: H3x1_=2' ;
927195    +
927196    +      label H3x2_1 = 'Hidden: H3x2_=1' ;
MPRINT(EM_DIAGRAM):   label H3x2_1 = 'Hidden: H3x2_=1' ;
927197    +
927198    +      label H3x2_2 = 'Hidden: H3x2_=2' ;
MPRINT(EM_DIAGRAM):   label H3x2_2 = 'Hidden: H3x2_=2' ;
927199    +
927200    +      label H4x1_1 = 'Hidden: H4x1_=1' ;
MPRINT(EM_DIAGRAM):   label H4x1_1 = 'Hidden: H4x1_=1' ;
927201    +
927202    +      label H4x1_2 = 'Hidden: H4x1_=2' ;
MPRINT(EM_DIAGRAM):   label H4x1_2 = 'Hidden: H4x1_=2' ;
927203    +
927204    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
927205    +
927206    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
927207    +
927208    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
927209    +
927210    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
927211    +
927212    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
927213    +
927214    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
927215    +
927216    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
927217    +
927218    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
927219    +
927220    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
927221    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
927222    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
927223    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
927224    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
927225    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
927226    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
927227    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
927228    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
927229    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
927230    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
927231    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
927232    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
927233    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
927234    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
927235    +end;
MPRINT(EM_DIAGRAM):   end;
927236    +else do;
MPRINT(EM_DIAGRAM):   else do;
927237    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
927238    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
927239    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
927240    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
927241    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
927242    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
927243    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
927244    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
927245    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
927246    +         end;
MPRINT(EM_DIAGRAM):   end;
927247    +         else do;
MPRINT(EM_DIAGRAM):   else do;
927248    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
927249    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
927250    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
927251    +            end;
MPRINT(EM_DIAGRAM):   end;
927252    +         end;
MPRINT(EM_DIAGRAM):   end;
927253    +      end;
MPRINT(EM_DIAGRAM):   end;
927254    +      else do;
MPRINT(EM_DIAGRAM):   else do;
927255    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
927256    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
927257    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
927258    +         end;
MPRINT(EM_DIAGRAM):   end;
927259    +      end;
MPRINT(EM_DIAGRAM):   end;
927260    +   end;
MPRINT(EM_DIAGRAM):   end;
927261    +   else do;
MPRINT(EM_DIAGRAM):   else do;
927262    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
927263    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
927264    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
927265    +      end;
MPRINT(EM_DIAGRAM):   end;
927266    +      else do;
MPRINT(EM_DIAGRAM):   else do;
927267    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
927268    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
927269    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
927270    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
927271    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
927272    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
927273    +         end;
MPRINT(EM_DIAGRAM):   end;
927274    +      end;
MPRINT(EM_DIAGRAM):   end;
927275    +   end;
MPRINT(EM_DIAGRAM):   end;
927276    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
927277    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
927278    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
927279    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
927280    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
927281    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
927282    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
927283    +   end;
MPRINT(EM_DIAGRAM):   end;
927284    +end;
MPRINT(EM_DIAGRAM):   end;
927285    +
927286    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
927287    +*** Checking missing input Interval
927288    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
927289    +
927290    +IF NMISS(
927291    +   AcceptedCmpTotal ,
927292    +   Frq ,
927293    +   Mnt ,
927294    +   MntMeatProducts ,
927295    +   NumCatalogPurchases ,
927296    +   NumDealsPurchases ,
927297    +   NumWebVisitsMonth ,
927298    +   Recency   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Mnt , MntMeatProducts , 
NumCatalogPurchases , NumDealsPurchases , NumWebVisitsMonth , Recency ) THEN DO;
927299    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
927300    +
927301    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
927302    +END;
MPRINT(EM_DIAGRAM):   END;
927303    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
927304    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
927305    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
927306    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
927307    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
927308    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
927309    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
927310    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
927311    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
927312    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
927313    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
927314    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
927315    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
927316    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
927317    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
927318    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
927319    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
927320    +END;
MPRINT(EM_DIAGRAM):   END;
927321    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
927322    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
927323    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
927324    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
927325    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
927326    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
927327    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
927328    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
927329    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
927330    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
927331    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
927332    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
927333    +   ELSE S_NumCatalogPurchases
927334    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
927335    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
927336    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
927337    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
927338    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
927339    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
927340    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
927341    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
927342    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
927343    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
927344    +END;
MPRINT(EM_DIAGRAM):   END;
927345    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
927346    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
927347    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
927348    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
927349    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
927350    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
927351    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
927352    +   H1x1_1  =     0.03317833435323 * S_AcceptedCmpTotal
927353    +          +    -0.66859164215955 * S_Frq  +     1.04503858219375 * S_Mnt
927354    +          +     3.02405267314398 * S_MntMeatProducts
927355    +          +     0.25422172488707 * S_NumCatalogPurchases
927356    +          +     0.25977266371328 * S_NumDealsPurchases
927357    +          +    -0.26865365728773 * S_NumWebVisitsMonth
927358    +          +     0.09531087154516 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.03317833435323 * S_AcceptedCmpTotal + -0.66859164215955 * 
S_Frq + 1.04503858219375 * S_Mnt + 3.02405267314398 * S_MntMeatProducts + 0.25422172488707 * 
S_NumCatalogPurchases + 0.25977266371328 * S_NumDealsPurchases + -0.26865365728773 * 
S_NumWebVisitsMonth + 0.09531087154516 * S_Recency ;
927359    +   H1x1_2  =    -0.69087988352897 * S_AcceptedCmpTotal
927360    +          +    -0.11955753576733 * S_Frq  +     0.84152651412075 * S_Mnt
927361    +          +    -0.64419071408502 * S_MntMeatProducts
927362    +          +    -0.49060224303044 * S_NumCatalogPurchases
927363    +          +    -0.04840762943457 * S_NumDealsPurchases
927364    +          +     -0.7656247386051 * S_NumWebVisitsMonth
927365    +          +     1.13086655489449 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.69087988352897 * S_AcceptedCmpTotal + -0.11955753576733 * 
S_Frq + 0.84152651412075 * S_Mnt + -0.64419071408502 * S_MntMeatProducts + -0.49060224303044 * 
S_NumCatalogPurchases + -0.04840762943457 * S_NumDealsPurchases + -0.7656247386051 * 
S_NumWebVisitsMonth + 1.13086655489449 * S_Recency ;
927366    +   H1x1_1  = H1x1_1  +    -0.53136707555877 * Marital_StatusDivorced
927367    +          +    -0.05888536499281 * Marital_StatusMarried
927368    +          +    -0.22627441829205 * Marital_StatusSingle
927369    +          +     0.52348719245564 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.53136707555877 * Marital_StatusDivorced + 
-0.05888536499281 * Marital_StatusMarried + -0.22627441829205 * Marital_StatusSingle + 
0.52348719245564 * Marital_StatusTogether ;
927370    +   H1x1_2  = H1x1_2  +    -0.85322837962298 * Marital_StatusDivorced
927371    +          +     0.82536605771339 * Marital_StatusMarried
927372    +          +    -0.97196770004098 * Marital_StatusSingle
927373    +          +      1.2063947269032 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.85322837962298 * Marital_StatusDivorced + 
0.82536605771339 * Marital_StatusMarried + -0.97196770004098 * Marital_StatusSingle + 
1.2063947269032 * Marital_StatusTogether ;
927374    +   H1x1_1  =     3.30547913450619 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 3.30547913450619 + H1x1_1 ;
927375    +   H1x1_2  =     1.08446512287712 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.08446512287712 + H1x1_2 ;
927376    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
927377    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
927378    +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
927379    +   H1x1_2  = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
927380    +END;
MPRINT(EM_DIAGRAM):   END;
927381    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
927382    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
927383    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
927384    +END;
MPRINT(EM_DIAGRAM):   END;
927385    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
927386    +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
927387    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
927388    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
927389    +   H1x2_1  =     0.52271766494525 * S_AcceptedCmpTotal
927390    +          +     0.57611155332907 * S_Frq  +     2.82792468297238 * S_Mnt
927391    +          +    -1.52187144029368 * S_MntMeatProducts
927392    +          +    -0.17233011764417 * S_NumCatalogPurchases
927393    +          +     0.08681674245114 * S_NumDealsPurchases
927394    +          +     0.13308256651831 * S_NumWebVisitsMonth
927395    +          +    -0.88526514420045 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.52271766494525 * S_AcceptedCmpTotal + 0.57611155332907 * 
S_Frq + 2.82792468297238 * S_Mnt + -1.52187144029368 * S_MntMeatProducts + -0.17233011764417 * 
S_NumCatalogPurchases + 0.08681674245114 * S_NumDealsPurchases + 0.13308256651831 * 
S_NumWebVisitsMonth + -0.88526514420045 * S_Recency ;
927396    +   H1x2_2  =      0.4222520789746 * S_AcceptedCmpTotal
927397    +          +    -3.13381438735416 * S_Frq  +    -0.34909843441486 * S_Mnt
927398    +          +     0.66187267823731 * S_MntMeatProducts
927399    +          +     1.52530454111654 * S_NumCatalogPurchases
927400    +          +     0.73982889008686 * S_NumDealsPurchases
927401    +          +     1.03760708665776 * S_NumWebVisitsMonth
927402    +          +    -1.31685207844927 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 0.4222520789746 * S_AcceptedCmpTotal + -3.13381438735416 * 
S_Frq + -0.34909843441486 * S_Mnt + 0.66187267823731 * S_MntMeatProducts + 1.52530454111654 * 
S_NumCatalogPurchases + 0.73982889008686 * S_NumDealsPurchases + 1.03760708665776 * 
S_NumWebVisitsMonth + -1.31685207844927 * S_Recency ;
927403    +   H1x2_1  = H1x2_1  +    -0.40921432838161 * Marital_StatusDivorced
927404    +          +    -0.57121500191985 * Marital_StatusMarried
927405    +          +     0.00575301863466 * Marital_StatusSingle
927406    +          +     0.58606212168272 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.40921432838161 * Marital_StatusDivorced + 
-0.57121500191985 * Marital_StatusMarried + 0.00575301863466 * Marital_StatusSingle + 
0.58606212168272 * Marital_StatusTogether ;
927407    +   H1x2_2  = H1x2_2  +     0.05193612372383 * Marital_StatusDivorced
927408    +          +     0.68382990555761 * Marital_StatusMarried
927409    +          +    -0.40241665873988 * Marital_StatusSingle
927410    +          +     0.66274709598028 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 0.05193612372383 * Marital_StatusDivorced + 
0.68382990555761 * Marital_StatusMarried + -0.40241665873988 * Marital_StatusSingle + 
0.66274709598028 * Marital_StatusTogether ;
927411    +   H1x2_1  =     1.66256790999222 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.66256790999222 + H1x2_1 ;
927412    +   H1x2_2  =    -2.71135276190381 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -2.71135276190381 + H1x2_2 ;
927413    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
927414    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
927415    +   H1x2_1  = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
927416    +   H1x2_2  = 1.0 / (1.0 + EXP(MIN( - H1x2_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_2 = 1.0 / (1.0 + EXP(MIN( - H1x2_2 , _EXP_BAR)));
927417    +END;
MPRINT(EM_DIAGRAM):   END;
927418    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
927419    +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
927420    +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
927421    +END;
MPRINT(EM_DIAGRAM):   END;
927422    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
927423    +*** Writing the Node H1x3_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x3_ ;
927424    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
927425    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
927426    +   H1x3_1  =    -1.36813165661884 * S_AcceptedCmpTotal
927427    +          +    -0.29960918468261 * S_Frq  +    -0.65204315831074 * S_Mnt
927428    +          +    -2.40830591527574 * S_MntMeatProducts
927429    +          +    -0.89296864866675 * S_NumCatalogPurchases
927430    +          +     1.79889409325514 * S_NumDealsPurchases
927431    +          +    -0.33765715793031 * S_NumWebVisitsMonth
927432    +          +    -0.63474704455434 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x3_1 = -1.36813165661884 * S_AcceptedCmpTotal + -0.29960918468261 * 
S_Frq + -0.65204315831074 * S_Mnt + -2.40830591527574 * S_MntMeatProducts + -0.89296864866675 
* S_NumCatalogPurchases + 1.79889409325514 * S_NumDealsPurchases + -0.33765715793031 * 
S_NumWebVisitsMonth + -0.63474704455434 * S_Recency ;
927433    +   H1x3_2  =    -0.20409738779324 * S_AcceptedCmpTotal
927434    +          +     1.49919916163823 * S_Frq  +     -0.9415605932144 * S_Mnt
927435    +          +     0.04224245417831 * S_MntMeatProducts
927436    +          +     0.25836861794607 * S_NumCatalogPurchases
927437    +          +     2.47909264202917 * S_NumDealsPurchases
927438    +          +     0.14790226792406 * S_NumWebVisitsMonth
927439    +          +     0.40870786833591 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x3_2 = -0.20409738779324 * S_AcceptedCmpTotal + 1.49919916163823 * 
S_Frq + -0.9415605932144 * S_Mnt + 0.04224245417831 * S_MntMeatProducts + 0.25836861794607 * 
S_NumCatalogPurchases + 2.47909264202917 * S_NumDealsPurchases + 0.14790226792406 * 
S_NumWebVisitsMonth + 0.40870786833591 * S_Recency ;
927440    +   H1x3_1  = H1x3_1  +     0.20928850420446 * Marital_StatusDivorced
927441    +          +     0.39103795234666 * Marital_StatusMarried
927442    +          +    -0.52822284221545 * Marital_StatusSingle
927443    +          +    -1.86494928221959 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + 0.20928850420446 * Marital_StatusDivorced + 
0.39103795234666 * Marital_StatusMarried + -0.52822284221545 * Marital_StatusSingle + 
-1.86494928221959 * Marital_StatusTogether ;
927444    +   H1x3_2  = H1x3_2  +     1.62005786474378 * Marital_StatusDivorced
927445    +          +       1.975579060233 * Marital_StatusMarried
927446    +          +     0.15028521746762 * Marital_StatusSingle
927447    +          +     0.92005975380984 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 + 1.62005786474378 * Marital_StatusDivorced + 
1.975579060233 * Marital_StatusMarried + 0.15028521746762 * Marital_StatusSingle + 
0.92005975380984 * Marital_StatusTogether ;
927448    +   H1x3_1  =     0.89242262747745 + H1x3_1 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 0.89242262747745 + H1x3_1 ;
927449    +   H1x3_2  =     0.65972128608947 + H1x3_2 ;
MPRINT(EM_DIAGRAM):   H1x3_2 = 0.65972128608947 + H1x3_2 ;
927450    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
927451    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
927452    +   H1x3_1  = 1.0 / (1.0 + EXP(MIN( - H1x3_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x3_1 = 1.0 / (1.0 + EXP(MIN( - H1x3_1 , _EXP_BAR)));
927453    +   H1x3_2  = 1.0 / (1.0 + EXP(MIN( - H1x3_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x3_2 = 1.0 / (1.0 + EXP(MIN( - H1x3_2 , _EXP_BAR)));
927454    +END;
MPRINT(EM_DIAGRAM):   END;
927455    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
927456    +   H1x3_1  = .;
MPRINT(EM_DIAGRAM):   H1x3_1 = .;
927457    +   H1x3_2  = .;
MPRINT(EM_DIAGRAM):   H1x3_2 = .;
927458    +END;
MPRINT(EM_DIAGRAM):   END;
927459    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
927460    +*** Writing the Node H1x4_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x4_ ;
927461    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
927462    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
927463    +   H1x4_1  =    -1.56857036994838 * S_AcceptedCmpTotal
927464    +          +    -0.01709393019065 * S_Frq  +    -0.41130381419631 * S_Mnt
927465    +          +     0.16060225059391 * S_MntMeatProducts
927466    +          +     1.53093292630033 * S_NumCatalogPurchases
927467    +          +     0.39573641806699 * S_NumDealsPurchases
927468    +          +    -0.95387142126649 * S_NumWebVisitsMonth
927469    +          +     0.58661969978382 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x4_1 = -1.56857036994838 * S_AcceptedCmpTotal + -0.01709393019065 * 
S_Frq + -0.41130381419631 * S_Mnt + 0.16060225059391 * S_MntMeatProducts + 1.53093292630033 * 
S_NumCatalogPurchases + 0.39573641806699 * S_NumDealsPurchases + -0.95387142126649 * 
S_NumWebVisitsMonth + 0.58661969978382 * S_Recency ;
927470    +   H1x4_2  =     0.40365014181339 * S_AcceptedCmpTotal
927471    +          +     0.25758137147094 * S_Frq  +     1.96878849657351 * S_Mnt
927472    +          +     0.71628478327205 * S_MntMeatProducts
927473    +          +     0.15890352363556 * S_NumCatalogPurchases
927474    +          +    -1.12928875468011 * S_NumDealsPurchases
927475    +          +    -0.30108145274307 * S_NumWebVisitsMonth
927476    +          +     0.28810419317266 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x4_2 = 0.40365014181339 * S_AcceptedCmpTotal + 0.25758137147094 * 
S_Frq + 1.96878849657351 * S_Mnt + 0.71628478327205 * S_MntMeatProducts + 0.15890352363556 * 
S_NumCatalogPurchases + -1.12928875468011 * S_NumDealsPurchases + -0.30108145274307 * 
S_NumWebVisitsMonth + 0.28810419317266 * S_Recency ;
927477    +   H1x4_1  = H1x4_1  +     0.71809860803817 * Marital_StatusDivorced
927478    +          +     0.91966160839643 * Marital_StatusMarried
927479    +          +    -0.63411090570397 * Marital_StatusSingle
927480    +          +    -0.54635673224032 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x4_1 = H1x4_1 + 0.71809860803817 * Marital_StatusDivorced + 
0.91966160839643 * Marital_StatusMarried + -0.63411090570397 * Marital_StatusSingle + 
-0.54635673224032 * Marital_StatusTogether ;
927481    +   H1x4_2  = H1x4_2  +    -0.82559954633474 * Marital_StatusDivorced
927482    +          +     0.77230489026504 * Marital_StatusMarried
927483    +          +     0.20456495503812 * Marital_StatusSingle
927484    +          +    -0.94791841887496 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x4_2 = H1x4_2 + -0.82559954633474 * Marital_StatusDivorced + 
0.77230489026504 * Marital_StatusMarried + 0.20456495503812 * Marital_StatusSingle + 
-0.94791841887496 * Marital_StatusTogether ;
927485    +   H1x4_1  =    -0.74278734869781 + H1x4_1 ;
MPRINT(EM_DIAGRAM):   H1x4_1 = -0.74278734869781 + H1x4_1 ;
927486    +   H1x4_2  =     1.36386007305279 + H1x4_2 ;
MPRINT(EM_DIAGRAM):   H1x4_2 = 1.36386007305279 + H1x4_2 ;
927487    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
927488    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
927489    +   H1x4_1  = 1.0 / (1.0 + EXP(MIN( - H1x4_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x4_1 = 1.0 / (1.0 + EXP(MIN( - H1x4_1 , _EXP_BAR)));
927490    +   H1x4_2  = 1.0 / (1.0 + EXP(MIN( - H1x4_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x4_2 = 1.0 / (1.0 + EXP(MIN( - H1x4_2 , _EXP_BAR)));
927491    +END;
MPRINT(EM_DIAGRAM):   END;
927492    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
927493    +   H1x4_1  = .;
MPRINT(EM_DIAGRAM):   H1x4_1 = .;
927494    +   H1x4_2  = .;
MPRINT(EM_DIAGRAM):   H1x4_2 = .;
927495    +END;
MPRINT(EM_DIAGRAM):   END;
927496    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
927497    +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
927498    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
927499    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
927500    +   H2x1_1  =     6.70671434954254 * H1x1_1  +    -3.26026761915622 * H1x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 6.70671434954254 * H1x1_1 + -3.26026761915622 * H1x1_2 ;
927501    +   H2x1_2  =     9.50930943961048 * H1x1_1  +     -38.665886357082 * H1x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = 9.50930943961048 * H1x1_1 + -38.665886357082 * H1x1_2 ;
927502    +   H2x1_1  = H2x1_1  +    -2.93089545861469 * H1x2_1
927503    +          +     1.56101538169797 * H1x2_2 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -2.93089545861469 * H1x2_1 + 1.56101538169797 * H1x2_2 
;
927504    +   H2x1_2  = H2x1_2  +    -0.71350117244702 * H1x2_1
927505    +          +    -3.81025846953023 * H1x2_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + -0.71350117244702 * H1x2_1 + -3.81025846953023 * 
H1x2_2 ;
927506    +   H2x1_1  = H2x1_1  +    -0.33624313911685 * H1x3_1
927507    +          +     -0.2506302302983 * H1x3_2 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -0.33624313911685 * H1x3_1 + -0.2506302302983 * H1x3_2 
;
927508    +   H2x1_2  = H2x1_2  +    -0.95434767487254 * H1x3_1
927509    +          +    -0.10638654133666 * H1x3_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + -0.95434767487254 * H1x3_1 + -0.10638654133666 * 
H1x3_2 ;
927510    +   H2x1_1  = H2x1_1  +    -0.27261326347944 * H1x4_1
927511    +          +     0.15687682287669 * H1x4_2 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -0.27261326347944 * H1x4_1 + 0.15687682287669 * H1x4_2 
;
927512    +   H2x1_2  = H2x1_2  +     0.43717724195408 * H1x4_1
927513    +          +     0.97600288948907 * H1x4_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + 0.43717724195408 * H1x4_1 + 0.97600288948907 * H1x4_2 ;
927514    +   H2x1_1  =    -1.76465776305701 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -1.76465776305701 + H2x1_1 ;
927515    +   H2x1_2  =     2.45505067378694 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = 2.45505067378694 + H2x1_2 ;
927516    +   H2x1_1  = SIN(H2x1_1 );
MPRINT(EM_DIAGRAM):   H2x1_1 = SIN(H2x1_1 );
927517    +   H2x1_2  = SIN(H2x1_2 );
MPRINT(EM_DIAGRAM):   H2x1_2 = SIN(H2x1_2 );
927518    +END;
MPRINT(EM_DIAGRAM):   END;
927519    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
927520    +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
927521    +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
927522    +END;
MPRINT(EM_DIAGRAM):   END;
927523    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
927524    +*** Writing the Node H2x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x2_ ;
927525    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
927526    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
927527    +   H2x2_1  =     0.44221000188212 * H1x1_1  +    -0.09410411660626 * H1x1_2 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = 0.44221000188212 * H1x1_1 + -0.09410411660626 * H1x1_2 ;
927528    +   H2x2_2  =    -0.62041237832472 * H1x1_1  +    -1.70568019769479 * H1x1_2 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = -0.62041237832472 * H1x1_1 + -1.70568019769479 * H1x1_2 ;
927529    +   H2x2_1  = H2x2_1  +     0.86476170574504 * H1x2_1
927530    +          +    -2.36042697137738 * H1x2_2 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + 0.86476170574504 * H1x2_1 + -2.36042697137738 * H1x2_2 
;
927531    +   H2x2_2  = H2x2_2  +     0.44483356408795 * H1x2_1
927532    +          +    -1.66254033339836 * H1x2_2 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 + 0.44483356408795 * H1x2_1 + -1.66254033339836 * H1x2_2 
;
927533    +   H2x2_1  = H2x2_1  +     2.16429199725142 * H1x3_1
927534    +          +     1.43296701176218 * H1x3_2 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + 2.16429199725142 * H1x3_1 + 1.43296701176218 * H1x3_2 ;
927535    +   H2x2_2  = H2x2_2  +     -2.3086904824016 * H1x3_1
927536    +          +    -2.17810690370253 * H1x3_2 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 + -2.3086904824016 * H1x3_1 + -2.17810690370253 * H1x3_2 
;
927537    +   H2x2_1  = H2x2_1  +     0.00588994713052 * H1x4_1
927538    +          +     0.12676819806376 * H1x4_2 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + 0.00588994713052 * H1x4_1 + 0.12676819806376 * H1x4_2 ;
927539    +   H2x2_2  = H2x2_2  +     0.82027256992322 * H1x4_1
927540    +          +    -0.52732352975227 * H1x4_2 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 + 0.82027256992322 * H1x4_1 + -0.52732352975227 * H1x4_2 
;
927541    +   H2x2_1  =     0.47389009262422 + H2x2_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = 0.47389009262422 + H2x2_1 ;
927542    +   H2x2_2  =     -0.8122008316452 + H2x2_2 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = -0.8122008316452 + H2x2_2 ;
927543    +   H2x2_1  = SIN(H2x2_1 );
MPRINT(EM_DIAGRAM):   H2x2_1 = SIN(H2x2_1 );
927544    +   H2x2_2  = SIN(H2x2_2 );
MPRINT(EM_DIAGRAM):   H2x2_2 = SIN(H2x2_2 );
927545    +END;
MPRINT(EM_DIAGRAM):   END;
927546    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
927547    +   H2x2_1  = .;
MPRINT(EM_DIAGRAM):   H2x2_1 = .;
927548    +   H2x2_2  = .;
MPRINT(EM_DIAGRAM):   H2x2_2 = .;
927549    +END;
MPRINT(EM_DIAGRAM):   END;
927550    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
927551    +*** Writing the Node H2x3_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x3_ ;
927552    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
927553    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
927554    +   H2x3_1  =    -0.28493649489231 * H1x1_1  +     0.46324227997344 * H1x1_2 ;
MPRINT(EM_DIAGRAM):   H2x3_1 = -0.28493649489231 * H1x1_1 + 0.46324227997344 * H1x1_2 ;
927555    +   H2x3_2  =     0.41015874548881 * H1x1_1  +    -0.05146341955765 * H1x1_2 ;
MPRINT(EM_DIAGRAM):   H2x3_2 = 0.41015874548881 * H1x1_1 + -0.05146341955765 * H1x1_2 ;
927556    +   H2x3_1  = H2x3_1  +    -1.00349052905386 * H1x2_1
927557    +          +     0.64290952668224 * H1x2_2 ;
MPRINT(EM_DIAGRAM):   H2x3_1 = H2x3_1 + -1.00349052905386 * H1x2_1 + 0.64290952668224 * H1x2_2 
;
927558    +   H2x3_2  = H2x3_2  +     0.48935572509195 * H1x2_1
927559    +          +     0.64476371718125 * H1x2_2 ;
MPRINT(EM_DIAGRAM):   H2x3_2 = H2x3_2 + 0.48935572509195 * H1x2_1 + 0.64476371718125 * H1x2_2 ;
927560    +   H2x3_1  = H2x3_1  +    -1.11988665905516 * H1x3_1
927561    +          +    -0.34805105626026 * H1x3_2 ;
MPRINT(EM_DIAGRAM):   H2x3_1 = H2x3_1 + -1.11988665905516 * H1x3_1 + -0.34805105626026 * 
H1x3_2 ;
927562    +   H2x3_2  = H2x3_2  +     0.32493988416634 * H1x3_1
927563    +          +     0.32809540262065 * H1x3_2 ;
MPRINT(EM_DIAGRAM):   H2x3_2 = H2x3_2 + 0.32493988416634 * H1x3_1 + 0.32809540262065 * H1x3_2 ;
927564    +   H2x3_1  = H2x3_1  +     0.47764131040964 * H1x4_1
927565    +          +    -1.36976442655344 * H1x4_2 ;
MPRINT(EM_DIAGRAM):   H2x3_1 = H2x3_1 + 0.47764131040964 * H1x4_1 + -1.36976442655344 * H1x4_2 
;
927566    +   H2x3_2  = H2x3_2  +     -0.3421580983005 * H1x4_1
927567    +          +     0.47926475944446 * H1x4_2 ;
MPRINT(EM_DIAGRAM):   H2x3_2 = H2x3_2 + -0.3421580983005 * H1x4_1 + 0.47926475944446 * H1x4_2 ;
927568    +   H2x3_1  =     0.90815431460142 + H2x3_1 ;
MPRINT(EM_DIAGRAM):   H2x3_1 = 0.90815431460142 + H2x3_1 ;
927569    +   H2x3_2  =    -1.77185533764538 + H2x3_2 ;
MPRINT(EM_DIAGRAM):   H2x3_2 = -1.77185533764538 + H2x3_2 ;
927570    +   H2x3_1  = SIN(H2x3_1 );
MPRINT(EM_DIAGRAM):   H2x3_1 = SIN(H2x3_1 );
927571    +   H2x3_2  = SIN(H2x3_2 );
MPRINT(EM_DIAGRAM):   H2x3_2 = SIN(H2x3_2 );
927572    +END;
MPRINT(EM_DIAGRAM):   END;
927573    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
927574    +   H2x3_1  = .;
MPRINT(EM_DIAGRAM):   H2x3_1 = .;
927575    +   H2x3_2  = .;
MPRINT(EM_DIAGRAM):   H2x3_2 = .;
927576    +END;
MPRINT(EM_DIAGRAM):   END;
927577    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
927578    +*** Writing the Node H3x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H3x1_ ;
927579    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
927580    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
927581    +   H3x1_1  =     4.31939811374229 * H2x1_1  +      -0.700351897347 * H2x1_2 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = 4.31939811374229 * H2x1_1 + -0.700351897347 * H2x1_2 ;
927582    +   H3x1_1  = H3x1_1  +     2.40750918668175 * H2x2_1
927583    +          +    -1.54042325930374 * H2x2_2 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = H3x1_1 + 2.40750918668175 * H2x2_1 + -1.54042325930374 * H2x2_2 
;
927584    +   H3x1_1  = H3x1_1  +     1.46738265989804 * H2x3_1
927585    +          +     0.20077963052939 * H2x3_2 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = H3x1_1 + 1.46738265989804 * H2x3_1 + 0.20077963052939 * H2x3_2 ;
927586    +   H3x1_1  =    -0.09840116412671 + H3x1_1 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = -0.09840116412671 + H3x1_1 ;
927587    +   H3x1_2  = 0;
MPRINT(EM_DIAGRAM):   H3x1_2 = 0;
927588    +   _MAX_ = MAX (H3x1_1 , H3x1_2 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H3x1_1 , H3x1_2 );
927589    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
927590    +   H3x1_1  = EXP(H3x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_1 = EXP(H3x1_1 - _MAX_);
927591    +   _SUM_ = _SUM_ + H3x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_1 ;
927592    +   H3x1_2  = EXP(H3x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_2 = EXP(H3x1_2 - _MAX_);
927593    +   _SUM_ = _SUM_ + H3x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_2 ;
927594    +   H3x1_1  = H3x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_1 = H3x1_1 / _SUM_;
927595    +   H3x1_2  = H3x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_2 = H3x1_2 / _SUM_;
927596    +END;
MPRINT(EM_DIAGRAM):   END;
927597    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
927598    +   H3x1_1  = .;
MPRINT(EM_DIAGRAM):   H3x1_1 = .;
927599    +   H3x1_2  = .;
MPRINT(EM_DIAGRAM):   H3x1_2 = .;
927600    +END;
MPRINT(EM_DIAGRAM):   END;
927601    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
927602    +*** Writing the Node H3x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H3x2_ ;
927603    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
927604    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
927605    +   H3x2_1  =    -1.46965147800397 * H2x1_1  +    -0.15489723855448 * H2x1_2 ;
MPRINT(EM_DIAGRAM):   H3x2_1 = -1.46965147800397 * H2x1_1 + -0.15489723855448 * H2x1_2 ;
927606    +   H3x2_1  = H3x2_1  +     0.91269334410481 * H2x2_1
927607    +          +     -0.0392976578726 * H2x2_2 ;
MPRINT(EM_DIAGRAM):   H3x2_1 = H3x2_1 + 0.91269334410481 * H2x2_1 + -0.0392976578726 * H2x2_2 ;
927608    +   H3x2_1  = H3x2_1  +    -1.07273740820729 * H2x3_1
927609    +          +    -1.32572907075931 * H2x3_2 ;
MPRINT(EM_DIAGRAM):   H3x2_1 = H3x2_1 + -1.07273740820729 * H2x3_1 + -1.32572907075931 * 
H2x3_2 ;
927610    +   H3x2_1  =     0.58690615295837 + H3x2_1 ;
MPRINT(EM_DIAGRAM):   H3x2_1 = 0.58690615295837 + H3x2_1 ;
927611    +   H3x2_2  = 0;
MPRINT(EM_DIAGRAM):   H3x2_2 = 0;
927612    +   _MAX_ = MAX (H3x2_1 , H3x2_2 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H3x2_1 , H3x2_2 );
927613    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
927614    +   H3x2_1  = EXP(H3x2_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x2_1 = EXP(H3x2_1 - _MAX_);
927615    +   _SUM_ = _SUM_ + H3x2_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x2_1 ;
927616    +   H3x2_2  = EXP(H3x2_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x2_2 = EXP(H3x2_2 - _MAX_);
927617    +   _SUM_ = _SUM_ + H3x2_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x2_2 ;
927618    +   H3x2_1  = H3x2_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x2_1 = H3x2_1 / _SUM_;
927619    +   H3x2_2  = H3x2_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x2_2 = H3x2_2 / _SUM_;
927620    +END;
MPRINT(EM_DIAGRAM):   END;
927621    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
927622    +   H3x2_1  = .;
MPRINT(EM_DIAGRAM):   H3x2_1 = .;
927623    +   H3x2_2  = .;
MPRINT(EM_DIAGRAM):   H3x2_2 = .;
927624    +END;
MPRINT(EM_DIAGRAM):   END;
927625    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
927626    +*** Writing the Node H4x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H4x1_ ;
927627    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
927628    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
927629    +   H4x1_1  =     2.98683826857579 * H3x1_1  +     -3.7943130439002 * H3x1_2 ;
MPRINT(EM_DIAGRAM):   H4x1_1 = 2.98683826857579 * H3x1_1 + -3.7943130439002 * H3x1_2 ;
927630    +   H4x1_1  = H4x1_1  +     -0.1130856885584 * H3x2_1
927631    +          +     0.90223250703174 * H3x2_2 ;
MPRINT(EM_DIAGRAM):   H4x1_1 = H4x1_1 + -0.1130856885584 * H3x2_1 + 0.90223250703174 * H3x2_2 ;
927632    +   H4x1_1  =     0.34321706022332 + H4x1_1 ;
MPRINT(EM_DIAGRAM):   H4x1_1 = 0.34321706022332 + H4x1_1 ;
927633    +   H4x1_2  = 0;
MPRINT(EM_DIAGRAM):   H4x1_2 = 0;
927634    +   _MAX_ = MAX (H4x1_1 , H4x1_2 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H4x1_1 , H4x1_2 );
927635    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
927636    +   H4x1_1  = EXP(H4x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H4x1_1 = EXP(H4x1_1 - _MAX_);
927637    +   _SUM_ = _SUM_ + H4x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H4x1_1 ;
927638    +   H4x1_2  = EXP(H4x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H4x1_2 = EXP(H4x1_2 - _MAX_);
927639    +   _SUM_ = _SUM_ + H4x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H4x1_2 ;
927640    +   H4x1_1  = H4x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H4x1_1 = H4x1_1 / _SUM_;
927641    +   H4x1_2  = H4x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H4x1_2 = H4x1_2 / _SUM_;
927642    +END;
MPRINT(EM_DIAGRAM):   END;
927643    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
927644    +   H4x1_1  = .;
MPRINT(EM_DIAGRAM):   H4x1_1 = .;
927645    +   H4x1_2  = .;
MPRINT(EM_DIAGRAM):   H4x1_2 = .;
927646    +END;
MPRINT(EM_DIAGRAM):   END;
927647    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
927648    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
927649    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
927650    +
927651    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
927652    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
927653    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
927654    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
927655    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
927656    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
927657    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
927658    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
927659    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
927660    +end;
MPRINT(EM_DIAGRAM):   end;
927661    +else do;
MPRINT(EM_DIAGRAM):   else do;
927662    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
927663    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
927664    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
927665    +   end;
MPRINT(EM_DIAGRAM):   end;
927666    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
927667    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
927668    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
927669    +   end;
MPRINT(EM_DIAGRAM):   end;
927670    +   else do;
MPRINT(EM_DIAGRAM):   else do;
927671    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
927672    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
927673    +   end;
MPRINT(EM_DIAGRAM):   end;
927674    +end;
MPRINT(EM_DIAGRAM):   end;
927675    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
927676    +   P_DepVar1  =     4.36647161522328 * H4x1_1  +    -5.83126986959915 * H4x1_2
927677    +         ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 4.36647161522328 * H4x1_1 + -5.83126986959915 * H4x1_2 ;
927678    +   P_DepVar1  =    -4.21364937441824 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -4.21364937441824 + P_DepVar1 ;
927679    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
927680    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
927681    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
927682    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
927683    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
927684    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
927685    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
927686    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
927687    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
927688    +END;
MPRINT(EM_DIAGRAM):   END;
927689    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
927690    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
927691    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
927692    +END;
MPRINT(EM_DIAGRAM):   END;
927693    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
927694    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
927695    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
927696    +END;
MPRINT(EM_DIAGRAM):   END;
927697    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
927698    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
927699    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
927700    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
927701    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
927702    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
927703    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
927704    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
927705    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
927706    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
927707    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
927708    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
927709    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
927710    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
927711    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
927712    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
927713    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
927714    +END;
MPRINT(EM_DIAGRAM):   END;
927715    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
927716    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
927717    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
927718    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
927719     run;

NOTE: DATA STEP view saved on file EMWS8.AUTONEURAL38_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.META3_VALIDATE.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(EM_DIAGRAM):   quit;
927720     quit;
927721     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
927722     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
927723     * AutoNeural38: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * AutoNeural38: Computing metadata for TRAIN data;
927724     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;

NOTE: View EMWS8.AUTONEURAL38_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural38\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS8.AutoNeural38_TRAIN out=_tempAdvisor 
noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS8.AutoNeural38_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS8.AutoNeural38_TRAIN out=WORK.M2KTPRC8 
noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2KTPRC8;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20 
INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M2KTPRC8(keep=name type length label format formatl 
formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then format = strip(format)!!strip(put(formatl, 
best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, 
best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then informat = 
strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, 
best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2KTPRC8;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M2KTPRC8;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M0U8E4XL NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0U8E4XL;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M0U8E4XL;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3KC60AK(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M0U8E4XL;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0U8E4XL;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 
FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M0U8E4XL;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" 
"MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" 
"QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" "YEAR" "YYMMDD" "YYMON" 
"YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" 
"EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) 
formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = 
"DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) 
formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" 
"NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" 
"SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = 
"DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then 
level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 
'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 
'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ 
('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 
'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 
'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0U8E4XL;
MPRINT(EMADVISECOLUMNS):   set WORK.M0U8E4XL;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= 
"Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= 
"Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower limit" UPPERLIMIT= 
"Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= 
"Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Meta3_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Meta3_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural38_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT 
LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "AutoNeural38";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("P_DEPVAR1") creator = "AutoNeural38";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR1") creator = "AutoNeural38";
MPRINT(EM_DIAGRAM):   when("P_DEPVAR0") creator = "AutoNeural38";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR0") creator = "AutoNeural38";
MPRINT(EM_DIAGRAM):   when("F_DEPVAR") creator = "AutoNeural38";
MPRINT(EM_DIAGRAM):   when("I_DEPVAR") creator = "AutoNeural38";
MPRINT(EM_DIAGRAM):   when("U_DEPVAR") creator = "AutoNeural38";
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "AutoNeural38";
MPRINT(EM_DIAGRAM):   when("DEPVAR") model = "AutoNeural38";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * AutoNeural38: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
928036     data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
928037     set EMWS8.AutoNeural38_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural38_EMINFO;
928038     where DATA='AutoNeural38' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='AutoNeural38' and KEY ^in('DECDATA', 'DECMETA', 
'IMPORTANCE', 'MODEL');
928039     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.AUTONEURAL38_EMINFO.
      WHERE (DATA='AutoNeural38') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

928040     data EMWS8.AutoNeural38_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural38_EMINFO;
928041     length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
928042     input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
928043     cards;
MPRINT(EM_DIAGRAM):   cards;

NOTE: The data set EMWS8.AUTONEURAL38_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   run;
928047     run;
928048     data EMWS8.AutoNeural38_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural38_EMINFO;
928049     set EMWS8.AutoNeural38_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural38_EMINFO WORK.MODELTEMP_INFO;
928050     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.AUTONEURAL38_EMINFO.
NOTE: There were 0 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS8.AUTONEURAL38_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

928051     proc sort data = EMWS8.AutoNeural38_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.AutoNeural38_EMINFO NOTHREADS;
928052     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
928053     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.AUTONEURAL38_EMINFO.
NOTE: The data set EMWS8.AUTONEURAL38_EMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

928054     proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
928055     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
928056     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set EMWS8.FIMPORT_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 1 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

928057     proc sort data = EMWS8.AutoNeural38_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS8.AutoNeural38_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
928058     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
928059     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 3 observations read from the data set EMWS8.AUTONEURAL38_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

928060     data EMWS8.AutoNeural38_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural38_EMINFO;
928061     merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
928062     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
928063     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 3 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS8.AUTONEURAL38_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

928064     proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
928065     delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
928066     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
928067     quit;
MPRINT(EM_DIAGRAM):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      

NOTE: View EMWS8.AUTONEURAL38_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
NOTE: View EMWS8.AUTONEURAL38_VALIDATE.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
