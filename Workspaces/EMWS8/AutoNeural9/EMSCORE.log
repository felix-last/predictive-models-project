MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "20. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "16.53 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                20. April 2016
Time:                16.53 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O39C34Y3 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural9\EMSCORE.out" encoding="UTF-8" 
NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O39C34Y3 new;
MPRINT(EM_DIAGRAM):   run;
404055     data work.outkey;
MPRINT(EM_DIAGRAM):    data work.outkey;
404056     set EMWS8.AutoNeural9_OUTKEY;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural9_OUTKEY;
404057     if upcase(ROLE) = 'HIDDEN';
MPRINT(EM_DIAGRAM):   if upcase(ROLE) = 'HIDDEN';
404058     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 54 observations read from the data set EMWS8.AUTONEURAL9_OUTKEY.
NOTE: The data set WORK.OUTKEY has 4 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

404059     filename emflow
404059   ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural9\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural9\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * AutoNeural9: Scoring DATA data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
404060     *------------------------------------------------------------*;
404061     * AutoNeural9: Scoring DATA data;
404062     *------------------------------------------------------------*;
404063     data EMWS8.AutoNeural9_TRAIN
404064     / view=EMWS8.AutoNeural9_TRAIN
404065     ;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural9_TRAIN / view=EMWS8.AutoNeural9_TRAIN ;
404066     set EMWS8.Meta_TRAIN
404067     ;
MPRINT(EM_DIAGRAM):   set EMWS8.Meta_TRAIN ;
404068     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural9\EMFLOWSCORE.sas.
404069    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
404070    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
404071    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
404072    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
404073    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
404074    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
404075    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
404076    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
404077    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
404078    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
404079    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
404080    +LENGTH _WARN_ $4
404081    +      F_DepVar  $ 12
404082    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
404083    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
404084    +
404085    +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
404086    +
404087    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
404088    +
404089    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
404090    +
404091    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
404092    +
404093    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
404094    +
404095    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
404096    +
404097    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
404098    +
404099    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
404100    +
404101    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
404102    +
404103    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
404104    +
404105    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
404106    +
404107    +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
404108    +
404109    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
404110    +
404111    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
404112    +
404113    +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
404114    +
404115    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
404116    +
404117    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
404118    +
404119    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
404120    +
404121    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
404122    +
404123    +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
404124    +
404125    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
404126    +
404127    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
404128    +
404129    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
404130    +
404131    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
404132    +
404133    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
404134    +
404135    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
404136    +
404137    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
404138    +
404139    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
404140    +
404141    +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
404142    +
404143    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
404144    +
404145    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
404146    +
404147    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
404148    +
404149    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
404150    +
404151    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
404152    +
404153    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
404154    +
404155    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
404156    +
404157    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
404158    +
404159    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
404160    +
404161    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
404162    +
404163    +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
404164    +
404165    +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
404166    +
404167    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
404168    +
404169    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
404170    +
404171    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
404172    +
404173    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
404174    +
404175    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
404176    +
404177    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
404178    +
404179    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
404180    +
404181    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
404182    +
404183    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
404184    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
404185    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
404186    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
404187    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
404188    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
404189    +end;
MPRINT(EM_DIAGRAM):   end;
404190    +else do;
MPRINT(EM_DIAGRAM):   else do;
404191    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
404192    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
404193    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
404194    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
404195    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
404196    +   end;
MPRINT(EM_DIAGRAM):   end;
404197    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
404198    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
404199    +   end;
MPRINT(EM_DIAGRAM):   end;
404200    +   else do;
MPRINT(EM_DIAGRAM):   else do;
404201    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
404202    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
404203    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
404204    +   end;
MPRINT(EM_DIAGRAM):   end;
404205    +end;
MPRINT(EM_DIAGRAM):   end;
404206    +
404207    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
404208    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
404209    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
404210    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
404211    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
404212    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
404213    +end;
MPRINT(EM_DIAGRAM):   end;
404214    +else do;
MPRINT(EM_DIAGRAM):   else do;
404215    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
404216    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
404217    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
404218    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
404219    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
404220    +   end;
MPRINT(EM_DIAGRAM):   end;
404221    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
404222    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
404223    +   end;
MPRINT(EM_DIAGRAM):   end;
404224    +   else do;
MPRINT(EM_DIAGRAM):   else do;
404225    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
404226    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
404227    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
404228    +   end;
MPRINT(EM_DIAGRAM):   end;
404229    +end;
MPRINT(EM_DIAGRAM):   end;
404230    +
404231    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
404232    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
404233    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
404234    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
404235    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
404236    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
404237    +end;
MPRINT(EM_DIAGRAM):   end;
404238    +else do;
MPRINT(EM_DIAGRAM):   else do;
404239    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
404240    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
404241    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
404242    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
404243    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
404244    +   end;
MPRINT(EM_DIAGRAM):   end;
404245    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
404246    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
404247    +   end;
MPRINT(EM_DIAGRAM):   end;
404248    +   else do;
MPRINT(EM_DIAGRAM):   else do;
404249    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
404250    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
404251    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
404252    +   end;
MPRINT(EM_DIAGRAM):   end;
404253    +end;
MPRINT(EM_DIAGRAM):   end;
404254    +
404255    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
404256    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
404257    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
404258    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
404259    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
404260    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
404261    +end;
MPRINT(EM_DIAGRAM):   end;
404262    +else do;
MPRINT(EM_DIAGRAM):   else do;
404263    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
404264    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
404265    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
404266    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
404267    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
404268    +   end;
MPRINT(EM_DIAGRAM):   end;
404269    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
404270    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
404271    +   end;
MPRINT(EM_DIAGRAM):   end;
404272    +   else do;
MPRINT(EM_DIAGRAM):   else do;
404273    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
404274    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
404275    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
404276    +   end;
MPRINT(EM_DIAGRAM):   end;
404277    +end;
MPRINT(EM_DIAGRAM):   end;
404278    +
404279    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
404280    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
404281    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
404282    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
404283    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
404284    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
404285    +end;
MPRINT(EM_DIAGRAM):   end;
404286    +else do;
MPRINT(EM_DIAGRAM):   else do;
404287    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
404288    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
404289    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
404290    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
404291    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
404292    +   end;
MPRINT(EM_DIAGRAM):   end;
404293    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
404294    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
404295    +   end;
MPRINT(EM_DIAGRAM):   end;
404296    +   else do;
MPRINT(EM_DIAGRAM):   else do;
404297    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
404298    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
404299    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
404300    +   end;
MPRINT(EM_DIAGRAM):   end;
404301    +end;
MPRINT(EM_DIAGRAM):   end;
404302    +
404303    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
404304    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
404305    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
404306    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
404307    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
404308    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
404309    +end;
MPRINT(EM_DIAGRAM):   end;
404310    +else do;
MPRINT(EM_DIAGRAM):   else do;
404311    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
404312    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
404313    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
404314    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
404315    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
404316    +   end;
MPRINT(EM_DIAGRAM):   end;
404317    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
404318    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
404319    +   end;
MPRINT(EM_DIAGRAM):   end;
404320    +   else do;
MPRINT(EM_DIAGRAM):   else do;
404321    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
404322    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
404323    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
404324    +   end;
MPRINT(EM_DIAGRAM):   end;
404325    +end;
MPRINT(EM_DIAGRAM):   end;
404326    +
404327    +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
404328    +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
404329    +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
404330    +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
404331    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
404332    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
404333    +end;
MPRINT(EM_DIAGRAM):   end;
404334    +else do;
MPRINT(EM_DIAGRAM):   else do;
404335    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
404336    +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
404337    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
404338    +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
404339    +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
404340    +   end;
MPRINT(EM_DIAGRAM):   end;
404341    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
404342    +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
404343    +   end;
MPRINT(EM_DIAGRAM):   end;
404344    +   else do;
MPRINT(EM_DIAGRAM):   else do;
404345    +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
404346    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
404347    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
404348    +   end;
MPRINT(EM_DIAGRAM):   end;
404349    +end;
MPRINT(EM_DIAGRAM):   end;
404350    +
404351    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
404352    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
404353    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
404354    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
404355    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
404356    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
404357    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
404358    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
404359    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
404360    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
404361    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
404362    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
404363    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
404364    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
404365    +end;
MPRINT(EM_DIAGRAM):   end;
404366    +else do;
MPRINT(EM_DIAGRAM):   else do;
404367    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
404368    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
404369    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
404370    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
404371    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
404372    +   end;
MPRINT(EM_DIAGRAM):   end;
404373    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
404374    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
404375    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
404376    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
404377    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
404378    +   end;
MPRINT(EM_DIAGRAM):   end;
404379    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
404380    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
404381    +   end;
MPRINT(EM_DIAGRAM):   end;
404382    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
404383    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
404384    +   end;
MPRINT(EM_DIAGRAM):   end;
404385    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
404386    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
404387    +   end;
MPRINT(EM_DIAGRAM):   end;
404388    +   else do;
MPRINT(EM_DIAGRAM):   else do;
404389    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
404390    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
404391    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
404392    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
404393    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
404394    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
404395    +   end;
MPRINT(EM_DIAGRAM):   end;
404396    +end;
MPRINT(EM_DIAGRAM):   end;
404397    +
404398    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
404399    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
404400    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
404401    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
404402    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
404403    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
404404    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
404405    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
404406    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
404407    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
404408    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
404409    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
404410    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
404411    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
404412    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
404413    +end;
MPRINT(EM_DIAGRAM):   end;
404414    +else do;
MPRINT(EM_DIAGRAM):   else do;
404415    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
404416    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
404417    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
404418    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
404419    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
404420    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
404421    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
404422    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
404423    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
404424    +         end;
MPRINT(EM_DIAGRAM):   end;
404425    +         else do;
MPRINT(EM_DIAGRAM):   else do;
404426    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
404427    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
404428    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
404429    +            end;
MPRINT(EM_DIAGRAM):   end;
404430    +         end;
MPRINT(EM_DIAGRAM):   end;
404431    +      end;
MPRINT(EM_DIAGRAM):   end;
404432    +      else do;
MPRINT(EM_DIAGRAM):   else do;
404433    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
404434    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
404435    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
404436    +         end;
MPRINT(EM_DIAGRAM):   end;
404437    +      end;
MPRINT(EM_DIAGRAM):   end;
404438    +   end;
MPRINT(EM_DIAGRAM):   end;
404439    +   else do;
MPRINT(EM_DIAGRAM):   else do;
404440    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
404441    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
404442    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
404443    +      end;
MPRINT(EM_DIAGRAM):   end;
404444    +      else do;
MPRINT(EM_DIAGRAM):   else do;
404445    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
404446    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
404447    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
404448    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
404449    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
404450    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
404451    +         end;
MPRINT(EM_DIAGRAM):   end;
404452    +      end;
MPRINT(EM_DIAGRAM):   end;
404453    +   end;
MPRINT(EM_DIAGRAM):   end;
404454    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
404455    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
404456    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
404457    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
404458    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
404459    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
404460    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
404461    +   end;
MPRINT(EM_DIAGRAM):   end;
404462    +end;
MPRINT(EM_DIAGRAM):   end;
404463    +
404464    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
404465    +*** Checking missing input Interval
404466    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
404467    +
404468    +IF NMISS(
404469    +   AcceptedCmpTotal ,
404470    +   Age ,
404471    +   Frq ,
404472    +   Income ,
404473    +   Kidhome ,
404474    +   Mnt ,
404475    +   MntFishProducts ,
404476    +   MntFruits ,
404477    +   MntGoldProds ,
404478    +   MntMeatProducts ,
404479    +   MntSweetProducts ,
404480    +   MntWines ,
404481    +   MonthsAsCustomer ,
404482    +   NumCatalogPurchases ,
404483    +   NumDealsPurchases ,
404484    +   NumDistPurchases ,
404485    +   NumStorePurchases ,
404486    +   NumWebPurchases ,
404487    +   NumWebVisitsMonth ,
404488    +   RFMstat ,
404489    +   RMntFrq ,
404490    +   Recency ,
404491    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
404492    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
404493    +
404494    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
404495    +END;
MPRINT(EM_DIAGRAM):   END;
404496    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
404497    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
404498    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
404499    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
404500    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
404501    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
404502    +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
404503    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
404504    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
404505    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
404506    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
404507    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
404508    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
404509    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
404510    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
404511    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
404512    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
404513    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
404514    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
404515    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
404516    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
404517    +   S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
404518    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 * 
MonthsAsCustomer ;
404519    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
404520    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
404521    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
404522    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
404523    +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
404524    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
404525    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
404526    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
404527    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
404528    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
404529    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
404530    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
404531    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
404532    +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
404533    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
404534    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
404535    +END;
MPRINT(EM_DIAGRAM):   END;
404536    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
404537    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
404538    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
404539    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
404540    +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
404541    +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
404542    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
404543    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
404544    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
404545    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
404546    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
404547    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
404548    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
404549    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
404550    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
404551    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
404552    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
404553    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
404554    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
404555    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
404556    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
404557    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
404558    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
404559    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
404560    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
404561    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
404562    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
404563    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
404564    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
404565    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
404566    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
404567    +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
404568    +   ELSE S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
404569    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 * 
MonthsAsCustomer ;
404570    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
404571    +   ELSE S_NumCatalogPurchases
404572    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
404573    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
404574    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
404575    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
404576    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
404577    +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
404578    +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
404579    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
404580    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
404581    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
404582    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
404583    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
404584    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
404585    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
404586    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
404587    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
404588    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
404589    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
404590    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
404591    +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
404592    +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
404593    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
404594    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
404595    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
404596    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
404597    +END;
MPRINT(EM_DIAGRAM):   END;
404598    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
404599    +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
404600    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
404601    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
404602    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
404603    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
404604    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
404605    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
404606    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
404607    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
404608    +   H1x1_1  =     -0.7790327388408 * S_AcceptedCmpTotal
404609    +          +     0.32193739579856 * S_Age  +    -0.43875684835169 * S_Frq
404610    +          +     0.13013240455049 * S_Income  +    -0.74127716462976 *
404611    +        S_Kidhome  +    -0.86416600561474 * S_Mnt  +     0.94819226754442 *
404612    +        S_MntFishProducts  +     0.15895119408799 * S_MntFruits
404613    +          +     0.03658391935071 * S_MntGoldProds  +    -3.75052142292398 *
404614    +        S_MntMeatProducts  +    -0.22192220883538 * S_MntSweetProducts
404615    +          +     0.80534656860633 * S_MntWines  +     0.16144794241259 *
404616    +        S_MonthsAsCustomer  +    -1.53040364803625 * S_NumCatalogPurchases
404617    +          +    -1.09856598010056 * S_NumDealsPurchases
404618    +          +    -0.10571850472514 * S_NumDistPurchases
404619    +          +     0.11898210654227 * S_NumStorePurchases
404620    +          +      0.5984912060231 * S_NumWebPurchases
404621    +          +     0.78592531126942 * S_NumWebVisitsMonth
404622    +          +    -0.50004686386273 * S_RFMstat  +     0.40804018151571 *
404623    +        S_RMntFrq  +    -0.94753260620308 * S_Recency
404624    +          +    -0.49604118088328 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.7790327388408 * S_AcceptedCmpTotal + 0.32193739579856 * 
S_Age + -0.43875684835169 * S_Frq + 0.13013240455049 * S_Income + -0.74127716462976 * 
S_Kidhome + -0.86416600561474 * S_Mnt + 0.94819226754442 * S_MntFishProducts + 
0.15895119408799 * S_MntFruits + 0.03658391935071 * S_MntGoldProds + -3.75052142292398 * 
S_MntMeatProducts + -0.22192220883538 * S_MntSweetProducts + 0.80534656860633 * S_MntWines + 
0.16144794241259 * S_MonthsAsCustomer + -1.53040364803625 * S_NumCatalogPurchases + 
-1.09856598010056 * S_NumDealsPurchases + -0.10571850472514 * S_NumDistPurchases + 
0.11898210654227 * S_NumStorePurchases + 0.5984912060231 * S_NumWebPurchases + 
0.78592531126942 * S_NumWebVisitsMonth + -0.50004686386273 * S_RFMstat + 0.40804018151571 * 
S_RMntFrq + -0.94753260620308 * S_Recency + -0.49604118088328 * S_Teenhome ;
404625    +   H1x1_2  =    -0.22226926295489 * S_AcceptedCmpTotal
404626    +          +     0.08523894206962 * S_Age  +    -0.13010378102207 * S_Frq
404627    +          +    -0.61810906923536 * S_Income  +     0.26583917928045 *
404628    +        S_Kidhome  +     0.57213479787981 * S_Mnt  +    -0.58077613046442 *
404629    +        S_MntFishProducts  +      0.1530301493776 * S_MntFruits
404630    +          +      0.4586167382631 * S_MntGoldProds  +     1.40179051129147 *
404631    +        S_MntMeatProducts  +      0.0231413770297 * S_MntSweetProducts
404632    +          +    -0.08483682112771 * S_MntWines  +     0.22891006905064 *
404633    +        S_MonthsAsCustomer  +    -1.21866617917435 * S_NumCatalogPurchases
404634    +          +    -0.84042044250624 * S_NumDealsPurchases
404635    +          +    -0.10246261015488 * S_NumDistPurchases
404636    +          +     0.06886149708824 * S_NumStorePurchases
404637    +          +     0.63156910388199 * S_NumWebPurchases
404638    +          +    -1.33032061845311 * S_NumWebVisitsMonth
404639    +          +     0.51240040684649 * S_RFMstat  +     0.77604047421115 *
404640    +        S_RMntFrq  +     1.27964260226958 * S_Recency
404641    +          +     0.12022076571016 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.22226926295489 * S_AcceptedCmpTotal + 0.08523894206962 * 
S_Age + -0.13010378102207 * S_Frq + -0.61810906923536 * S_Income + 0.26583917928045 * 
S_Kidhome + 0.57213479787981 * S_Mnt + -0.58077613046442 * S_MntFishProducts + 0.1530301493776 
* S_MntFruits + 0.4586167382631 * S_MntGoldProds + 1.40179051129147 * S_MntMeatProducts + 
0.0231413770297 * S_MntSweetProducts + -0.08483682112771 * S_MntWines + 0.22891006905064 * 
S_MonthsAsCustomer + -1.21866617917435 * S_NumCatalogPurchases + -0.84042044250624 * 
S_NumDealsPurchases + -0.10246261015488 * S_NumDistPurchases + 0.06886149708824 * 
S_NumStorePurchases + 0.63156910388199 * S_NumWebPurchases + -1.33032061845311 * 
S_NumWebVisitsMonth + 0.51240040684649 * S_RFMstat + 0.77604047421115 * S_RMntFrq + 
1.27964260226958 * S_Recency + 0.12022076571016 * S_Teenhome ;
404642    +   H1x1_3  =     1.19879097976404 * S_AcceptedCmpTotal
404643    +          +     0.14973951999399 * S_Age  +    -0.90630756390399 * S_Frq
404644    +          +     0.64934241358682 * S_Income  +    -0.66249532206724 *
404645    +        S_Kidhome  +     0.54195490560813 * S_Mnt  +    -0.58497380565417 *
404646    +        S_MntFishProducts  +     0.12409202833851 * S_MntFruits
404647    +          +     0.44480061346561 * S_MntGoldProds  +     3.27513201048136 *
404648    +        S_MntMeatProducts  +     -0.1256493054184 * S_MntSweetProducts
404649    +          +    -0.56080685022301 * S_MntWines  +     0.08633469383177 *
404650    +        S_MonthsAsCustomer  +     0.45482673505107 * S_NumCatalogPurchases
404651    +          +     0.45393712455366 * S_NumDealsPurchases
404652    +          +    -0.25292198053552 * S_NumDistPurchases
404653    +          +    -1.35582215064749 * S_NumStorePurchases
404654    +          +    -0.83132202302639 * S_NumWebPurchases
404655    +          +     1.87116225272678 * S_NumWebVisitsMonth
404656    +          +     0.39564162951481 * S_RFMstat  +    -1.08810221295144 *
404657    +        S_RMntFrq  +    -2.07407859514648 * S_Recency
404658    +          +     -0.6849099475723 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.19879097976404 * S_AcceptedCmpTotal + 0.14973951999399 * 
S_Age + -0.90630756390399 * S_Frq + 0.64934241358682 * S_Income + -0.66249532206724 * 
S_Kidhome + 0.54195490560813 * S_Mnt + -0.58497380565417 * S_MntFishProducts + 
0.12409202833851 * S_MntFruits + 0.44480061346561 * S_MntGoldProds + 3.27513201048136 * 
S_MntMeatProducts + -0.1256493054184 * S_MntSweetProducts + -0.56080685022301 * S_MntWines + 
0.08633469383177 * S_MonthsAsCustomer + 0.45482673505107 * S_NumCatalogPurchases + 
0.45393712455366 * S_NumDealsPurchases + -0.25292198053552 * S_NumDistPurchases + 
-1.35582215064749 * S_NumStorePurchases + -0.83132202302639 * S_NumWebPurchases + 
1.87116225272678 * S_NumWebVisitsMonth + 0.39564162951481 * S_RFMstat + -1.08810221295144 * 
S_RMntFrq + -2.07407859514648 * S_Recency + -0.6849099475723 * S_Teenhome ;
404659    +   H1x1_1  = H1x1_1  +     0.81075414854045 * AcceptedCmp10
404660    +          +    -0.33403710427327 * AcceptedCmp20  +    -0.62242387435975 *
404661    +        AcceptedCmp30  +    -0.89439410552439 * AcceptedCmp40
404662    +          +     0.77335976756467 * AcceptedCmp50  +    -0.08825784612626 *
404663    +        Complain0  +      0.3404395194267 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.81075414854045 * AcceptedCmp10 + -0.33403710427327 * 
AcceptedCmp20 + -0.62242387435975 * AcceptedCmp30 + -0.89439410552439 * AcceptedCmp40 + 
0.77335976756467 * AcceptedCmp50 + -0.08825784612626 * Complain0 + 0.3404395194267 * 
HigherEducationBinary0 ;
404664    +   H1x1_2  = H1x1_2  +    -0.16741179709566 * AcceptedCmp10
404665    +          +    -0.53751033948061 * AcceptedCmp20  +     0.80285496945068 *
404666    +        AcceptedCmp30  +     0.39379279966091 * AcceptedCmp40
404667    +          +    -1.40366799083237 * AcceptedCmp50  +     -0.4265482924132 *
404668    +        Complain0  +     0.37272103593422 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.16741179709566 * AcceptedCmp10 + -0.53751033948061 
* AcceptedCmp20 + 0.80285496945068 * AcceptedCmp30 + 0.39379279966091 * AcceptedCmp40 + 
-1.40366799083237 * AcceptedCmp50 + -0.4265482924132 * Complain0 + 0.37272103593422 * 
HigherEducationBinary0 ;
404669    +   H1x1_3  = H1x1_3  +    -0.19417657656326 * AcceptedCmp10
404670    +          +    -0.06547746897317 * AcceptedCmp20  +     0.21980739904513 *
404671    +        AcceptedCmp30  +    -0.19452210052301 * AcceptedCmp40
404672    +          +    -2.02403282278574 * AcceptedCmp50  +    -0.18250261144524 *
404673    +        Complain0  +     0.34168103813312 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.19417657656326 * AcceptedCmp10 + -0.06547746897317 
* AcceptedCmp20 + 0.21980739904513 * AcceptedCmp30 + -0.19452210052301 * AcceptedCmp40 + 
-2.02403282278574 * AcceptedCmp50 + -0.18250261144524 * Complain0 + 0.34168103813312 * 
HigherEducationBinary0 ;
404674    +   H1x1_1  = H1x1_1  +    -0.03956789621002 * Education2n_Cycle
404675    +          +    -0.38372374638888 * EducationBasic  +     -0.4178927802606 *
404676    +        EducationGraduation  +    -0.61278625923288 * EducationMaster
404677    +          +      0.4695898100094 * Marital_StatusDivorced
404678    +          +    -0.52137742289262 * Marital_StatusMarried
404679    +          +    -0.32382086914936 * Marital_StatusSingle
404680    +          +    -0.66163012672344 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.03956789621002 * Education2n_Cycle + 
-0.38372374638888 * EducationBasic + -0.4178927802606 * EducationGraduation + 
-0.61278625923288 * EducationMaster + 0.4695898100094 * Marital_StatusDivorced + 
-0.52137742289262 * Marital_StatusMarried + -0.32382086914936 * Marital_StatusSingle + 
-0.66163012672344 * Marital_StatusTogether ;
404681    +   H1x1_2  = H1x1_2  +    -0.25832319223886 * Education2n_Cycle
404682    +          +     0.05602860720141 * EducationBasic  +    -0.86282852488383 *
404683    +        EducationGraduation  +     0.18916317018059 * EducationMaster
404684    +          +    -1.04858218653238 * Marital_StatusDivorced
404685    +          +     2.41098335093061 * Marital_StatusMarried
404686    +          +    -1.94696044861334 * Marital_StatusSingle
404687    +          +     2.16021514856437 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.25832319223886 * Education2n_Cycle + 
0.05602860720141 * EducationBasic + -0.86282852488383 * EducationGraduation + 0.18916317018059 
* EducationMaster + -1.04858218653238 * Marital_StatusDivorced + 2.41098335093061 * 
Marital_StatusMarried + -1.94696044861334 * Marital_StatusSingle + 2.16021514856437 * 
Marital_StatusTogether ;
404688    +   H1x1_3  = H1x1_3  +    -0.05351872242069 * Education2n_Cycle
404689    +          +    -0.56850783552841 * EducationBasic  +    -0.14880907057098 *
404690    +        EducationGraduation  +    -0.32850851013319 * EducationMaster
404691    +          +     0.42964114177062 * Marital_StatusDivorced
404692    +          +    -0.38607635605816 * Marital_StatusMarried
404693    +          +    -0.02157405407852 * Marital_StatusSingle
404694    +          +    -0.59995619744527 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.05351872242069 * Education2n_Cycle + 
-0.56850783552841 * EducationBasic + -0.14880907057098 * EducationGraduation + 
-0.32850851013319 * EducationMaster + 0.42964114177062 * Marital_StatusDivorced + 
-0.38607635605816 * Marital_StatusMarried + -0.02157405407852 * Marital_StatusSingle + 
-0.59995619744527 * Marital_StatusTogether ;
404695    +   H1x1_1  =    -0.53239337390307 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.53239337390307 + H1x1_1 ;
404696    +   H1x1_2  =     0.99428677123948 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.99428677123948 + H1x1_2 ;
404697    +   H1x1_3  =       1.835877082844 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.835877082844 + H1x1_3 ;
404698    +   H1x1_4  = 0;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0;
404699    +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 );
404700    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
404701    +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
404702    +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
404703    +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
404704    +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
404705    +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
404706    +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
404707    +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
404708    +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
404709    +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
404710    +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
404711    +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
404712    +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
404713    +END;
MPRINT(EM_DIAGRAM):   END;
404714    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
404715    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
404716    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
404717    +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
404718    +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
404719    +END;
MPRINT(EM_DIAGRAM):   END;
404720    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
404721    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
404722    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
404723    +
404724    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
404725    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
404726    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
404727    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
404728    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
404729    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
404730    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
404731    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
404732    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
404733    +end;
MPRINT(EM_DIAGRAM):   end;
404734    +else do;
MPRINT(EM_DIAGRAM):   else do;
404735    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
404736    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
404737    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
404738    +   end;
MPRINT(EM_DIAGRAM):   end;
404739    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
404740    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
404741    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
404742    +   end;
MPRINT(EM_DIAGRAM):   end;
404743    +   else do;
MPRINT(EM_DIAGRAM):   else do;
404744    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
404745    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
404746    +   end;
MPRINT(EM_DIAGRAM):   end;
404747    +end;
MPRINT(EM_DIAGRAM):   end;
404748    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
404749    +   P_DepVar1  =    -3.41904253756965 * H1x1_1  +    -7.11204151517034 * H1x1_2
404750    +          +     10.7909509395818 * H1x1_3  +    -2.20432578352426 * H1x1_4 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.41904253756965 * H1x1_1 + -7.11204151517034 * H1x1_2 + 
10.7909509395818 * H1x1_3 + -2.20432578352426 * H1x1_4 ;
404751    +   P_DepVar1  =    -3.66951098257489 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.66951098257489 + P_DepVar1 ;
404752    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
404753    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
404754    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
404755    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
404756    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
404757    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
404758    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
404759    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
404760    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
404761    +END;
MPRINT(EM_DIAGRAM):   END;
404762    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
404763    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
404764    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
404765    +END;
MPRINT(EM_DIAGRAM):   END;
404766    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
404767    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
404768    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
404769    +END;
MPRINT(EM_DIAGRAM):   END;
404770    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
404771    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
404772    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
404773    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
404774    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
404775    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
404776    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
404777    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
404778    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
404779    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
404780    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
404781    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
404782    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
404783    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
404784    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
404785    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
404786    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
404787    +END;
MPRINT(EM_DIAGRAM):   END;
404788    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
404789    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
404790    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
404791    +drop
404792    +H1x1_1
404793    +H1x1_2
404794    +H1x1_3
404795    +H1x1_4
404796    +;
MPRINT(EM_DIAGRAM):   drop H1x1_1 H1x1_2 H1x1_3 H1x1_4 ;
404797    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
404798     run;

NOTE: DATA STEP view saved on file EMWS8.AUTONEURAL9_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.META_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(EM_DIAGRAM):   quit;
404799     quit;
404800     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
404801     filename emflow
404801   ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural9\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural9\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * AutoNeural9: Scoring VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
404802     *------------------------------------------------------------*;
404803     * AutoNeural9: Scoring VALIDATE data;
404804     *------------------------------------------------------------*;
404805     data EMWS8.AutoNeural9_VALIDATE
404806     / view=EMWS8.AutoNeural9_VALIDATE
404807     ;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural9_VALIDATE / view=EMWS8.AutoNeural9_VALIDATE ;
404808     set EMWS8.Meta_VALIDATE
404809     ;
MPRINT(EM_DIAGRAM):   set EMWS8.Meta_VALIDATE ;
404810     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural9\EMFLOWSCORE.sas.
404811    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
404812    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
404813    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
404814    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
404815    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
404816    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
404817    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
404818    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
404819    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
404820    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
404821    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
404822    +LENGTH _WARN_ $4
404823    +      F_DepVar  $ 12
404824    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
404825    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
404826    +
404827    +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
404828    +
404829    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
404830    +
404831    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
404832    +
404833    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
404834    +
404835    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
404836    +
404837    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
404838    +
404839    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
404840    +
404841    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
404842    +
404843    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
404844    +
404845    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
404846    +
404847    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
404848    +
404849    +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
404850    +
404851    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
404852    +
404853    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
404854    +
404855    +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
404856    +
404857    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
404858    +
404859    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
404860    +
404861    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
404862    +
404863    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
404864    +
404865    +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
404866    +
404867    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
404868    +
404869    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
404870    +
404871    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
404872    +
404873    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
404874    +
404875    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
404876    +
404877    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
404878    +
404879    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
404880    +
404881    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
404882    +
404883    +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
404884    +
404885    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
404886    +
404887    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
404888    +
404889    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
404890    +
404891    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
404892    +
404893    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
404894    +
404895    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
404896    +
404897    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
404898    +
404899    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
404900    +
404901    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
404902    +
404903    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
404904    +
404905    +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
404906    +
404907    +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
404908    +
404909    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
404910    +
404911    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
404912    +
404913    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
404914    +
404915    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
404916    +
404917    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
404918    +
404919    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
404920    +
404921    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
404922    +
404923    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
404924    +
404925    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
404926    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
404927    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
404928    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
404929    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
404930    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
404931    +end;
MPRINT(EM_DIAGRAM):   end;
404932    +else do;
MPRINT(EM_DIAGRAM):   else do;
404933    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
404934    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
404935    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
404936    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
404937    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
404938    +   end;
MPRINT(EM_DIAGRAM):   end;
404939    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
404940    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
404941    +   end;
MPRINT(EM_DIAGRAM):   end;
404942    +   else do;
MPRINT(EM_DIAGRAM):   else do;
404943    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
404944    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
404945    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
404946    +   end;
MPRINT(EM_DIAGRAM):   end;
404947    +end;
MPRINT(EM_DIAGRAM):   end;
404948    +
404949    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
404950    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
404951    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
404952    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
404953    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
404954    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
404955    +end;
MPRINT(EM_DIAGRAM):   end;
404956    +else do;
MPRINT(EM_DIAGRAM):   else do;
404957    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
404958    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
404959    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
404960    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
404961    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
404962    +   end;
MPRINT(EM_DIAGRAM):   end;
404963    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
404964    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
404965    +   end;
MPRINT(EM_DIAGRAM):   end;
404966    +   else do;
MPRINT(EM_DIAGRAM):   else do;
404967    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
404968    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
404969    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
404970    +   end;
MPRINT(EM_DIAGRAM):   end;
404971    +end;
MPRINT(EM_DIAGRAM):   end;
404972    +
404973    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
404974    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
404975    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
404976    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
404977    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
404978    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
404979    +end;
MPRINT(EM_DIAGRAM):   end;
404980    +else do;
MPRINT(EM_DIAGRAM):   else do;
404981    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
404982    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
404983    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
404984    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
404985    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
404986    +   end;
MPRINT(EM_DIAGRAM):   end;
404987    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
404988    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
404989    +   end;
MPRINT(EM_DIAGRAM):   end;
404990    +   else do;
MPRINT(EM_DIAGRAM):   else do;
404991    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
404992    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
404993    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
404994    +   end;
MPRINT(EM_DIAGRAM):   end;
404995    +end;
MPRINT(EM_DIAGRAM):   end;
404996    +
404997    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
404998    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
404999    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
405000    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
405001    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
405002    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
405003    +end;
MPRINT(EM_DIAGRAM):   end;
405004    +else do;
MPRINT(EM_DIAGRAM):   else do;
405005    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
405006    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
405007    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
405008    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
405009    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
405010    +   end;
MPRINT(EM_DIAGRAM):   end;
405011    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
405012    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
405013    +   end;
MPRINT(EM_DIAGRAM):   end;
405014    +   else do;
MPRINT(EM_DIAGRAM):   else do;
405015    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
405016    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
405017    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
405018    +   end;
MPRINT(EM_DIAGRAM):   end;
405019    +end;
MPRINT(EM_DIAGRAM):   end;
405020    +
405021    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
405022    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
405023    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
405024    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
405025    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
405026    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
405027    +end;
MPRINT(EM_DIAGRAM):   end;
405028    +else do;
MPRINT(EM_DIAGRAM):   else do;
405029    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
405030    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
405031    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
405032    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
405033    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
405034    +   end;
MPRINT(EM_DIAGRAM):   end;
405035    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
405036    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
405037    +   end;
MPRINT(EM_DIAGRAM):   end;
405038    +   else do;
MPRINT(EM_DIAGRAM):   else do;
405039    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
405040    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
405041    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
405042    +   end;
MPRINT(EM_DIAGRAM):   end;
405043    +end;
MPRINT(EM_DIAGRAM):   end;
405044    +
405045    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
405046    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
405047    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
405048    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
405049    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
405050    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
405051    +end;
MPRINT(EM_DIAGRAM):   end;
405052    +else do;
MPRINT(EM_DIAGRAM):   else do;
405053    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
405054    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
405055    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
405056    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
405057    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
405058    +   end;
MPRINT(EM_DIAGRAM):   end;
405059    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
405060    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
405061    +   end;
MPRINT(EM_DIAGRAM):   end;
405062    +   else do;
MPRINT(EM_DIAGRAM):   else do;
405063    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
405064    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
405065    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
405066    +   end;
MPRINT(EM_DIAGRAM):   end;
405067    +end;
MPRINT(EM_DIAGRAM):   end;
405068    +
405069    +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
405070    +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
405071    +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
405072    +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
405073    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
405074    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
405075    +end;
MPRINT(EM_DIAGRAM):   end;
405076    +else do;
MPRINT(EM_DIAGRAM):   else do;
405077    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
405078    +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
405079    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
405080    +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
405081    +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
405082    +   end;
MPRINT(EM_DIAGRAM):   end;
405083    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
405084    +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
405085    +   end;
MPRINT(EM_DIAGRAM):   end;
405086    +   else do;
MPRINT(EM_DIAGRAM):   else do;
405087    +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
405088    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
405089    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
405090    +   end;
MPRINT(EM_DIAGRAM):   end;
405091    +end;
MPRINT(EM_DIAGRAM):   end;
405092    +
405093    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
405094    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
405095    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
405096    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
405097    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
405098    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
405099    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
405100    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
405101    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
405102    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
405103    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
405104    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
405105    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
405106    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
405107    +end;
MPRINT(EM_DIAGRAM):   end;
405108    +else do;
MPRINT(EM_DIAGRAM):   else do;
405109    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
405110    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
405111    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
405112    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
405113    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
405114    +   end;
MPRINT(EM_DIAGRAM):   end;
405115    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
405116    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
405117    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
405118    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
405119    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
405120    +   end;
MPRINT(EM_DIAGRAM):   end;
405121    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
405122    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
405123    +   end;
MPRINT(EM_DIAGRAM):   end;
405124    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
405125    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
405126    +   end;
MPRINT(EM_DIAGRAM):   end;
405127    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
405128    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
405129    +   end;
MPRINT(EM_DIAGRAM):   end;
405130    +   else do;
MPRINT(EM_DIAGRAM):   else do;
405131    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
405132    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
405133    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
405134    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
405135    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
405136    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
405137    +   end;
MPRINT(EM_DIAGRAM):   end;
405138    +end;
MPRINT(EM_DIAGRAM):   end;
405139    +
405140    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
405141    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
405142    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
405143    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
405144    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
405145    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
405146    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
405147    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
405148    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
405149    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
405150    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
405151    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
405152    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
405153    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
405154    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
405155    +end;
MPRINT(EM_DIAGRAM):   end;
405156    +else do;
MPRINT(EM_DIAGRAM):   else do;
405157    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
405158    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
405159    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
405160    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
405161    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
405162    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
405163    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
405164    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
405165    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
405166    +         end;
MPRINT(EM_DIAGRAM):   end;
405167    +         else do;
MPRINT(EM_DIAGRAM):   else do;
405168    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
405169    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
405170    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
405171    +            end;
MPRINT(EM_DIAGRAM):   end;
405172    +         end;
MPRINT(EM_DIAGRAM):   end;
405173    +      end;
MPRINT(EM_DIAGRAM):   end;
405174    +      else do;
MPRINT(EM_DIAGRAM):   else do;
405175    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
405176    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
405177    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
405178    +         end;
MPRINT(EM_DIAGRAM):   end;
405179    +      end;
MPRINT(EM_DIAGRAM):   end;
405180    +   end;
MPRINT(EM_DIAGRAM):   end;
405181    +   else do;
MPRINT(EM_DIAGRAM):   else do;
405182    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
405183    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
405184    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
405185    +      end;
MPRINT(EM_DIAGRAM):   end;
405186    +      else do;
MPRINT(EM_DIAGRAM):   else do;
405187    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
405188    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
405189    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
405190    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
405191    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
405192    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
405193    +         end;
MPRINT(EM_DIAGRAM):   end;
405194    +      end;
MPRINT(EM_DIAGRAM):   end;
405195    +   end;
MPRINT(EM_DIAGRAM):   end;
405196    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
405197    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
405198    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
405199    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
405200    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
405201    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
405202    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
405203    +   end;
MPRINT(EM_DIAGRAM):   end;
405204    +end;
MPRINT(EM_DIAGRAM):   end;
405205    +
405206    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
405207    +*** Checking missing input Interval
405208    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
405209    +
405210    +IF NMISS(
405211    +   AcceptedCmpTotal ,
405212    +   Age ,
405213    +   Frq ,
405214    +   Income ,
405215    +   Kidhome ,
405216    +   Mnt ,
405217    +   MntFishProducts ,
405218    +   MntFruits ,
405219    +   MntGoldProds ,
405220    +   MntMeatProducts ,
405221    +   MntSweetProducts ,
405222    +   MntWines ,
405223    +   MonthsAsCustomer ,
405224    +   NumCatalogPurchases ,
405225    +   NumDealsPurchases ,
405226    +   NumDistPurchases ,
405227    +   NumStorePurchases ,
405228    +   NumWebPurchases ,
405229    +   NumWebVisitsMonth ,
405230    +   RFMstat ,
405231    +   RMntFrq ,
405232    +   Recency ,
405233    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
405234    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
405235    +
405236    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
405237    +END;
MPRINT(EM_DIAGRAM):   END;
405238    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
405239    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
405240    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
405241    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
405242    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
405243    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
405244    +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
405245    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
405246    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
405247    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
405248    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
405249    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
405250    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
405251    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
405252    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
405253    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
405254    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
405255    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
405256    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
405257    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
405258    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
405259    +   S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
405260    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 * 
MonthsAsCustomer ;
405261    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
405262    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
405263    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
405264    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
405265    +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
405266    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
405267    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
405268    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
405269    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
405270    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
405271    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
405272    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
405273    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
405274    +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
405275    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
405276    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
405277    +END;
MPRINT(EM_DIAGRAM):   END;
405278    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
405279    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
405280    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
405281    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
405282    +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
405283    +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
405284    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
405285    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
405286    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
405287    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
405288    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
405289    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
405290    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
405291    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
405292    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
405293    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
405294    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
405295    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
405296    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
405297    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
405298    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
405299    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
405300    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
405301    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
405302    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
405303    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
405304    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
405305    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
405306    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
405307    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
405308    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
405309    +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
405310    +   ELSE S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
405311    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 * 
MonthsAsCustomer ;
405312    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
405313    +   ELSE S_NumCatalogPurchases
405314    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
405315    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
405316    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
405317    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
405318    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
405319    +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
405320    +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
405321    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
405322    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
405323    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
405324    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
405325    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
405326    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
405327    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
405328    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
405329    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
405330    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
405331    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
405332    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
405333    +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
405334    +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
405335    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
405336    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
405337    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
405338    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
405339    +END;
MPRINT(EM_DIAGRAM):   END;
405340    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
405341    +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
405342    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
405343    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
405344    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
405345    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
405346    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
405347    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
405348    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
405349    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
405350    +   H1x1_1  =     -0.7790327388408 * S_AcceptedCmpTotal
405351    +          +     0.32193739579856 * S_Age  +    -0.43875684835169 * S_Frq
405352    +          +     0.13013240455049 * S_Income  +    -0.74127716462976 *
405353    +        S_Kidhome  +    -0.86416600561474 * S_Mnt  +     0.94819226754442 *
405354    +        S_MntFishProducts  +     0.15895119408799 * S_MntFruits
405355    +          +     0.03658391935071 * S_MntGoldProds  +    -3.75052142292398 *
405356    +        S_MntMeatProducts  +    -0.22192220883538 * S_MntSweetProducts
405357    +          +     0.80534656860633 * S_MntWines  +     0.16144794241259 *
405358    +        S_MonthsAsCustomer  +    -1.53040364803625 * S_NumCatalogPurchases
405359    +          +    -1.09856598010056 * S_NumDealsPurchases
405360    +          +    -0.10571850472514 * S_NumDistPurchases
405361    +          +     0.11898210654227 * S_NumStorePurchases
405362    +          +      0.5984912060231 * S_NumWebPurchases
405363    +          +     0.78592531126942 * S_NumWebVisitsMonth
405364    +          +    -0.50004686386273 * S_RFMstat  +     0.40804018151571 *
405365    +        S_RMntFrq  +    -0.94753260620308 * S_Recency
405366    +          +    -0.49604118088328 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.7790327388408 * S_AcceptedCmpTotal + 0.32193739579856 * 
S_Age + -0.43875684835169 * S_Frq + 0.13013240455049 * S_Income + -0.74127716462976 * 
S_Kidhome + -0.86416600561474 * S_Mnt + 0.94819226754442 * S_MntFishProducts + 
0.15895119408799 * S_MntFruits + 0.03658391935071 * S_MntGoldProds + -3.75052142292398 * 
S_MntMeatProducts + -0.22192220883538 * S_MntSweetProducts + 0.80534656860633 * S_MntWines + 
0.16144794241259 * S_MonthsAsCustomer + -1.53040364803625 * S_NumCatalogPurchases + 
-1.09856598010056 * S_NumDealsPurchases + -0.10571850472514 * S_NumDistPurchases + 
0.11898210654227 * S_NumStorePurchases + 0.5984912060231 * S_NumWebPurchases + 
0.78592531126942 * S_NumWebVisitsMonth + -0.50004686386273 * S_RFMstat + 0.40804018151571 * 
S_RMntFrq + -0.94753260620308 * S_Recency + -0.49604118088328 * S_Teenhome ;
405367    +   H1x1_2  =    -0.22226926295489 * S_AcceptedCmpTotal
405368    +          +     0.08523894206962 * S_Age  +    -0.13010378102207 * S_Frq
405369    +          +    -0.61810906923536 * S_Income  +     0.26583917928045 *
405370    +        S_Kidhome  +     0.57213479787981 * S_Mnt  +    -0.58077613046442 *
405371    +        S_MntFishProducts  +      0.1530301493776 * S_MntFruits
405372    +          +      0.4586167382631 * S_MntGoldProds  +     1.40179051129147 *
405373    +        S_MntMeatProducts  +      0.0231413770297 * S_MntSweetProducts
405374    +          +    -0.08483682112771 * S_MntWines  +     0.22891006905064 *
405375    +        S_MonthsAsCustomer  +    -1.21866617917435 * S_NumCatalogPurchases
405376    +          +    -0.84042044250624 * S_NumDealsPurchases
405377    +          +    -0.10246261015488 * S_NumDistPurchases
405378    +          +     0.06886149708824 * S_NumStorePurchases
405379    +          +     0.63156910388199 * S_NumWebPurchases
405380    +          +    -1.33032061845311 * S_NumWebVisitsMonth
405381    +          +     0.51240040684649 * S_RFMstat  +     0.77604047421115 *
405382    +        S_RMntFrq  +     1.27964260226958 * S_Recency
405383    +          +     0.12022076571016 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.22226926295489 * S_AcceptedCmpTotal + 0.08523894206962 * 
S_Age + -0.13010378102207 * S_Frq + -0.61810906923536 * S_Income + 0.26583917928045 * 
S_Kidhome + 0.57213479787981 * S_Mnt + -0.58077613046442 * S_MntFishProducts + 0.1530301493776 
* S_MntFruits + 0.4586167382631 * S_MntGoldProds + 1.40179051129147 * S_MntMeatProducts + 
0.0231413770297 * S_MntSweetProducts + -0.08483682112771 * S_MntWines + 0.22891006905064 * 
S_MonthsAsCustomer + -1.21866617917435 * S_NumCatalogPurchases + -0.84042044250624 * 
S_NumDealsPurchases + -0.10246261015488 * S_NumDistPurchases + 0.06886149708824 * 
S_NumStorePurchases + 0.63156910388199 * S_NumWebPurchases + -1.33032061845311 * 
S_NumWebVisitsMonth + 0.51240040684649 * S_RFMstat + 0.77604047421115 * S_RMntFrq + 
1.27964260226958 * S_Recency + 0.12022076571016 * S_Teenhome ;
405384    +   H1x1_3  =     1.19879097976404 * S_AcceptedCmpTotal
405385    +          +     0.14973951999399 * S_Age  +    -0.90630756390399 * S_Frq
405386    +          +     0.64934241358682 * S_Income  +    -0.66249532206724 *
405387    +        S_Kidhome  +     0.54195490560813 * S_Mnt  +    -0.58497380565417 *
405388    +        S_MntFishProducts  +     0.12409202833851 * S_MntFruits
405389    +          +     0.44480061346561 * S_MntGoldProds  +     3.27513201048136 *
405390    +        S_MntMeatProducts  +     -0.1256493054184 * S_MntSweetProducts
405391    +          +    -0.56080685022301 * S_MntWines  +     0.08633469383177 *
405392    +        S_MonthsAsCustomer  +     0.45482673505107 * S_NumCatalogPurchases
405393    +          +     0.45393712455366 * S_NumDealsPurchases
405394    +          +    -0.25292198053552 * S_NumDistPurchases
405395    +          +    -1.35582215064749 * S_NumStorePurchases
405396    +          +    -0.83132202302639 * S_NumWebPurchases
405397    +          +     1.87116225272678 * S_NumWebVisitsMonth
405398    +          +     0.39564162951481 * S_RFMstat  +    -1.08810221295144 *
405399    +        S_RMntFrq  +    -2.07407859514648 * S_Recency
405400    +          +     -0.6849099475723 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.19879097976404 * S_AcceptedCmpTotal + 0.14973951999399 * 
S_Age + -0.90630756390399 * S_Frq + 0.64934241358682 * S_Income + -0.66249532206724 * 
S_Kidhome + 0.54195490560813 * S_Mnt + -0.58497380565417 * S_MntFishProducts + 
0.12409202833851 * S_MntFruits + 0.44480061346561 * S_MntGoldProds + 3.27513201048136 * 
S_MntMeatProducts + -0.1256493054184 * S_MntSweetProducts + -0.56080685022301 * S_MntWines + 
0.08633469383177 * S_MonthsAsCustomer + 0.45482673505107 * S_NumCatalogPurchases + 
0.45393712455366 * S_NumDealsPurchases + -0.25292198053552 * S_NumDistPurchases + 
-1.35582215064749 * S_NumStorePurchases + -0.83132202302639 * S_NumWebPurchases + 
1.87116225272678 * S_NumWebVisitsMonth + 0.39564162951481 * S_RFMstat + -1.08810221295144 * 
S_RMntFrq + -2.07407859514648 * S_Recency + -0.6849099475723 * S_Teenhome ;
405401    +   H1x1_1  = H1x1_1  +     0.81075414854045 * AcceptedCmp10
405402    +          +    -0.33403710427327 * AcceptedCmp20  +    -0.62242387435975 *
405403    +        AcceptedCmp30  +    -0.89439410552439 * AcceptedCmp40
405404    +          +     0.77335976756467 * AcceptedCmp50  +    -0.08825784612626 *
405405    +        Complain0  +      0.3404395194267 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.81075414854045 * AcceptedCmp10 + -0.33403710427327 * 
AcceptedCmp20 + -0.62242387435975 * AcceptedCmp30 + -0.89439410552439 * AcceptedCmp40 + 
0.77335976756467 * AcceptedCmp50 + -0.08825784612626 * Complain0 + 0.3404395194267 * 
HigherEducationBinary0 ;
405406    +   H1x1_2  = H1x1_2  +    -0.16741179709566 * AcceptedCmp10
405407    +          +    -0.53751033948061 * AcceptedCmp20  +     0.80285496945068 *
405408    +        AcceptedCmp30  +     0.39379279966091 * AcceptedCmp40
405409    +          +    -1.40366799083237 * AcceptedCmp50  +     -0.4265482924132 *
405410    +        Complain0  +     0.37272103593422 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.16741179709566 * AcceptedCmp10 + -0.53751033948061 
* AcceptedCmp20 + 0.80285496945068 * AcceptedCmp30 + 0.39379279966091 * AcceptedCmp40 + 
-1.40366799083237 * AcceptedCmp50 + -0.4265482924132 * Complain0 + 0.37272103593422 * 
HigherEducationBinary0 ;
405411    +   H1x1_3  = H1x1_3  +    -0.19417657656326 * AcceptedCmp10
405412    +          +    -0.06547746897317 * AcceptedCmp20  +     0.21980739904513 *
405413    +        AcceptedCmp30  +    -0.19452210052301 * AcceptedCmp40
405414    +          +    -2.02403282278574 * AcceptedCmp50  +    -0.18250261144524 *
405415    +        Complain0  +     0.34168103813312 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.19417657656326 * AcceptedCmp10 + -0.06547746897317 
* AcceptedCmp20 + 0.21980739904513 * AcceptedCmp30 + -0.19452210052301 * AcceptedCmp40 + 
-2.02403282278574 * AcceptedCmp50 + -0.18250261144524 * Complain0 + 0.34168103813312 * 
HigherEducationBinary0 ;
405416    +   H1x1_1  = H1x1_1  +    -0.03956789621002 * Education2n_Cycle
405417    +          +    -0.38372374638888 * EducationBasic  +     -0.4178927802606 *
405418    +        EducationGraduation  +    -0.61278625923288 * EducationMaster
405419    +          +      0.4695898100094 * Marital_StatusDivorced
405420    +          +    -0.52137742289262 * Marital_StatusMarried
405421    +          +    -0.32382086914936 * Marital_StatusSingle
405422    +          +    -0.66163012672344 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.03956789621002 * Education2n_Cycle + 
-0.38372374638888 * EducationBasic + -0.4178927802606 * EducationGraduation + 
-0.61278625923288 * EducationMaster + 0.4695898100094 * Marital_StatusDivorced + 
-0.52137742289262 * Marital_StatusMarried + -0.32382086914936 * Marital_StatusSingle + 
-0.66163012672344 * Marital_StatusTogether ;
405423    +   H1x1_2  = H1x1_2  +    -0.25832319223886 * Education2n_Cycle
405424    +          +     0.05602860720141 * EducationBasic  +    -0.86282852488383 *
405425    +        EducationGraduation  +     0.18916317018059 * EducationMaster
405426    +          +    -1.04858218653238 * Marital_StatusDivorced
405427    +          +     2.41098335093061 * Marital_StatusMarried
405428    +          +    -1.94696044861334 * Marital_StatusSingle
405429    +          +     2.16021514856437 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.25832319223886 * Education2n_Cycle + 
0.05602860720141 * EducationBasic + -0.86282852488383 * EducationGraduation + 0.18916317018059 
* EducationMaster + -1.04858218653238 * Marital_StatusDivorced + 2.41098335093061 * 
Marital_StatusMarried + -1.94696044861334 * Marital_StatusSingle + 2.16021514856437 * 
Marital_StatusTogether ;
405430    +   H1x1_3  = H1x1_3  +    -0.05351872242069 * Education2n_Cycle
405431    +          +    -0.56850783552841 * EducationBasic  +    -0.14880907057098 *
405432    +        EducationGraduation  +    -0.32850851013319 * EducationMaster
405433    +          +     0.42964114177062 * Marital_StatusDivorced
405434    +          +    -0.38607635605816 * Marital_StatusMarried
405435    +          +    -0.02157405407852 * Marital_StatusSingle
405436    +          +    -0.59995619744527 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.05351872242069 * Education2n_Cycle + 
-0.56850783552841 * EducationBasic + -0.14880907057098 * EducationGraduation + 
-0.32850851013319 * EducationMaster + 0.42964114177062 * Marital_StatusDivorced + 
-0.38607635605816 * Marital_StatusMarried + -0.02157405407852 * Marital_StatusSingle + 
-0.59995619744527 * Marital_StatusTogether ;
405437    +   H1x1_1  =    -0.53239337390307 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.53239337390307 + H1x1_1 ;
405438    +   H1x1_2  =     0.99428677123948 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.99428677123948 + H1x1_2 ;
405439    +   H1x1_3  =       1.835877082844 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.835877082844 + H1x1_3 ;
405440    +   H1x1_4  = 0;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0;
405441    +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 );
405442    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
405443    +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
405444    +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
405445    +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
405446    +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
405447    +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
405448    +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
405449    +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
405450    +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
405451    +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
405452    +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
405453    +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
405454    +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
405455    +END;
MPRINT(EM_DIAGRAM):   END;
405456    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
405457    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
405458    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
405459    +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
405460    +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
405461    +END;
MPRINT(EM_DIAGRAM):   END;
405462    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
405463    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
405464    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
405465    +
405466    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
405467    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
405468    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
405469    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
405470    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
405471    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
405472    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
405473    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
405474    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
405475    +end;
MPRINT(EM_DIAGRAM):   end;
405476    +else do;
MPRINT(EM_DIAGRAM):   else do;
405477    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
405478    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
405479    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
405480    +   end;
MPRINT(EM_DIAGRAM):   end;
405481    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
405482    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
405483    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
405484    +   end;
MPRINT(EM_DIAGRAM):   end;
405485    +   else do;
MPRINT(EM_DIAGRAM):   else do;
405486    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
405487    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
405488    +   end;
MPRINT(EM_DIAGRAM):   end;
405489    +end;
MPRINT(EM_DIAGRAM):   end;
405490    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
405491    +   P_DepVar1  =    -3.41904253756965 * H1x1_1  +    -7.11204151517034 * H1x1_2
405492    +          +     10.7909509395818 * H1x1_3  +    -2.20432578352426 * H1x1_4 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.41904253756965 * H1x1_1 + -7.11204151517034 * H1x1_2 + 
10.7909509395818 * H1x1_3 + -2.20432578352426 * H1x1_4 ;
405493    +   P_DepVar1  =    -3.66951098257489 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.66951098257489 + P_DepVar1 ;
405494    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
405495    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
405496    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
405497    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
405498    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
405499    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
405500    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
405501    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
405502    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
405503    +END;
MPRINT(EM_DIAGRAM):   END;
405504    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
405505    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
405506    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
405507    +END;
MPRINT(EM_DIAGRAM):   END;
405508    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
405509    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
405510    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
405511    +END;
MPRINT(EM_DIAGRAM):   END;
405512    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
405513    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
405514    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
405515    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
405516    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
405517    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
405518    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
405519    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
405520    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
405521    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
405522    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
405523    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
405524    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
405525    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
405526    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
405527    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
405528    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
405529    +END;
MPRINT(EM_DIAGRAM):   END;
405530    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
405531    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
405532    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
405533    +drop
405534    +H1x1_1
405535    +H1x1_2
405536    +H1x1_3
405537    +H1x1_4
405538    +;
MPRINT(EM_DIAGRAM):   drop H1x1_1 H1x1_2 H1x1_3 H1x1_4 ;
405539    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
405540     run;

NOTE: DATA STEP view saved on file EMWS8.AUTONEURAL9_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.META_VALIDATE.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(EM_DIAGRAM):   quit;
405541     quit;
405542     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
405543     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
405544     * AutoNeural9: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * AutoNeural9: Computing metadata for TRAIN data;
405545     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;

NOTE: View EMWS8.AUTONEURAL9_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural9\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS8.AutoNeural9_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS8.AutoNeural9_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS8.AutoNeural9_TRAIN out=WORK.M0HHKB6N 
noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0HHKB6N;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20 
INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M0HHKB6N(keep=name type length label format formatl 
formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then format = strip(format)!!strip(put(formatl, 
best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, 
best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then informat = 
strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, 
best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0HHKB6N;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M0HHKB6N;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M1437B1G NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1437B1G;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M1437B1G;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2TOJCLM(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M1437B1G;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1437B1G;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 
FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M1437B1G;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" 
"MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" 
"QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" "YEAR" "YYMMDD" "YYMON" 
"YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" 
"EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) 
formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = 
"DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) 
formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" 
"NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" 
"SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = 
"DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then 
level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 
'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 
'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ 
('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 
'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 
'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1437B1G;
MPRINT(EMADVISECOLUMNS):   set WORK.M1437B1G;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= 
"Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= 
"Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower limit" UPPERLIMIT= 
"Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= 
"Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Meta_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Meta_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural9_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT 
LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "AutoNeural9";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("P_DEPVAR1") creator = "AutoNeural9";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR1") creator = "AutoNeural9";
MPRINT(EM_DIAGRAM):   when("P_DEPVAR0") creator = "AutoNeural9";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR0") creator = "AutoNeural9";
MPRINT(EM_DIAGRAM):   when("F_DEPVAR") creator = "AutoNeural9";
MPRINT(EM_DIAGRAM):   when("I_DEPVAR") creator = "AutoNeural9";
MPRINT(EM_DIAGRAM):   when("U_DEPVAR") creator = "AutoNeural9";
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "AutoNeural9";
MPRINT(EM_DIAGRAM):   when("DEPVAR") model = "AutoNeural9";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * AutoNeural9: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
405857     data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
405858     set EMWS8.AutoNeural9_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural9_EMINFO;
405859     where DATA='AutoNeural9' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='AutoNeural9' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 
'MODEL');
405860     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.AUTONEURAL9_EMINFO.
      WHERE (DATA='AutoNeural9') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

405861     data EMWS8.AutoNeural9_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural9_EMINFO;
405862     length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
405863     input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
405864     cards;
MPRINT(EM_DIAGRAM):   cards;

NOTE: The data set EMWS8.AUTONEURAL9_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   run;
405868     run;
405869     data EMWS8.AutoNeural9_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural9_EMINFO;
405870     set EMWS8.AutoNeural9_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural9_EMINFO WORK.MODELTEMP_INFO;
405871     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.AUTONEURAL9_EMINFO.
NOTE: There were 0 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS8.AUTONEURAL9_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

405872     proc sort data = EMWS8.AutoNeural9_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.AutoNeural9_EMINFO NOTHREADS;
405873     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
405874     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.AUTONEURAL9_EMINFO.
NOTE: The data set EMWS8.AUTONEURAL9_EMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

405875     proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
405876     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
405877     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set EMWS8.FIMPORT_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 1 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

405878     proc sort data = EMWS8.AutoNeural9_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS8.AutoNeural9_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
405879     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
405880     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 3 observations read from the data set EMWS8.AUTONEURAL9_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

405881     data EMWS8.AutoNeural9_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural9_EMINFO;
405882     merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
405883     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
405884     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 3 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS8.AUTONEURAL9_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

405885     proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
405886     delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
405887     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
405888     quit;
MPRINT(EM_DIAGRAM):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

NOTE: View EMWS8.AUTONEURAL9_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
NOTE: View EMWS8.AUTONEURAL9_VALIDATE.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
