MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "21. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "18.38 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                21. April 2016
Time:                18.38 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O39SQYY8 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural9\EMSCORE.out" encoding="UTF-8" 
NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O39SQYY8 new;
MPRINT(EM_DIAGRAM):   run;
389049     filename emflow
389049   ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural9\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural9\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * AutoNeural9: Scoring DATA data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
389050     *------------------------------------------------------------*;
389051     * AutoNeural9: Scoring DATA data;
389052     *------------------------------------------------------------*;
389053     data EMWS8.AutoNeural9_TRAIN
389054     / view=EMWS8.AutoNeural9_TRAIN
389055     ;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural9_TRAIN / view=EMWS8.AutoNeural9_TRAIN ;
389056     set EMWS8.Meta_TRAIN
389057     ;
MPRINT(EM_DIAGRAM):   set EMWS8.Meta_TRAIN ;
389058     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural9\EMFLOWSCORE.sas.
389059    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
389060    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
389061    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
389062    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
389063    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
389064    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
389065    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
389066    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
389067    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
389068    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
389069    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
389070    +LENGTH _WARN_ $4
389071    +      F_DepVar  $ 12
389072    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
389073    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
389074    +
389075    +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
389076    +
389077    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
389078    +
389079    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
389080    +
389081    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
389082    +
389083    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
389084    +
389085    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
389086    +
389087    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
389088    +
389089    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
389090    +
389091    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
389092    +
389093    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
389094    +
389095    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
389096    +
389097    +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
389098    +
389099    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
389100    +
389101    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
389102    +
389103    +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
389104    +
389105    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
389106    +
389107    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
389108    +
389109    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
389110    +
389111    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
389112    +
389113    +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
389114    +
389115    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
389116    +
389117    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
389118    +
389119    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
389120    +
389121    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
389122    +
389123    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
389124    +
389125    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
389126    +
389127    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
389128    +
389129    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
389130    +
389131    +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
389132    +
389133    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
389134    +
389135    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
389136    +
389137    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
389138    +
389139    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
389140    +
389141    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
389142    +
389143    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
389144    +
389145    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
389146    +
389147    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
389148    +
389149    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
389150    +
389151    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
389152    +
389153    +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
389154    +
389155    +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
389156    +
389157    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
389158    +
389159    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
389160    +
389161    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
389162    +
389163    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
389164    +
389165    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
389166    +
389167    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
389168    +
389169    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
389170    +
389171    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
389172    +
389173    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
389174    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
389175    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
389176    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
389177    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
389178    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
389179    +end;
MPRINT(EM_DIAGRAM):   end;
389180    +else do;
MPRINT(EM_DIAGRAM):   else do;
389181    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
389182    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
389183    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
389184    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
389185    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
389186    +   end;
MPRINT(EM_DIAGRAM):   end;
389187    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
389188    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
389189    +   end;
MPRINT(EM_DIAGRAM):   end;
389190    +   else do;
MPRINT(EM_DIAGRAM):   else do;
389191    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
389192    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
389193    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
389194    +   end;
MPRINT(EM_DIAGRAM):   end;
389195    +end;
MPRINT(EM_DIAGRAM):   end;
389196    +
389197    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
389198    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
389199    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
389200    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
389201    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
389202    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
389203    +end;
MPRINT(EM_DIAGRAM):   end;
389204    +else do;
MPRINT(EM_DIAGRAM):   else do;
389205    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
389206    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
389207    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
389208    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
389209    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
389210    +   end;
MPRINT(EM_DIAGRAM):   end;
389211    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
389212    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
389213    +   end;
MPRINT(EM_DIAGRAM):   end;
389214    +   else do;
MPRINT(EM_DIAGRAM):   else do;
389215    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
389216    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
389217    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
389218    +   end;
MPRINT(EM_DIAGRAM):   end;
389219    +end;
MPRINT(EM_DIAGRAM):   end;
389220    +
389221    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
389222    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
389223    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
389224    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
389225    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
389226    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
389227    +end;
MPRINT(EM_DIAGRAM):   end;
389228    +else do;
MPRINT(EM_DIAGRAM):   else do;
389229    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
389230    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
389231    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
389232    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
389233    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
389234    +   end;
MPRINT(EM_DIAGRAM):   end;
389235    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
389236    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
389237    +   end;
MPRINT(EM_DIAGRAM):   end;
389238    +   else do;
MPRINT(EM_DIAGRAM):   else do;
389239    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
389240    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
389241    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
389242    +   end;
MPRINT(EM_DIAGRAM):   end;
389243    +end;
MPRINT(EM_DIAGRAM):   end;
389244    +
389245    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
389246    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
389247    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
389248    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
389249    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
389250    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
389251    +end;
MPRINT(EM_DIAGRAM):   end;
389252    +else do;
MPRINT(EM_DIAGRAM):   else do;
389253    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
389254    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
389255    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
389256    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
389257    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
389258    +   end;
MPRINT(EM_DIAGRAM):   end;
389259    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
389260    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
389261    +   end;
MPRINT(EM_DIAGRAM):   end;
389262    +   else do;
MPRINT(EM_DIAGRAM):   else do;
389263    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
389264    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
389265    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
389266    +   end;
MPRINT(EM_DIAGRAM):   end;
389267    +end;
MPRINT(EM_DIAGRAM):   end;
389268    +
389269    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
389270    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
389271    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
389272    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
389273    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
389274    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
389275    +end;
MPRINT(EM_DIAGRAM):   end;
389276    +else do;
MPRINT(EM_DIAGRAM):   else do;
389277    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
389278    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
389279    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
389280    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
389281    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
389282    +   end;
MPRINT(EM_DIAGRAM):   end;
389283    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
389284    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
389285    +   end;
MPRINT(EM_DIAGRAM):   end;
389286    +   else do;
MPRINT(EM_DIAGRAM):   else do;
389287    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
389288    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
389289    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
389290    +   end;
MPRINT(EM_DIAGRAM):   end;
389291    +end;
MPRINT(EM_DIAGRAM):   end;
389292    +
389293    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
389294    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
389295    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
389296    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
389297    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
389298    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
389299    +end;
MPRINT(EM_DIAGRAM):   end;
389300    +else do;
MPRINT(EM_DIAGRAM):   else do;
389301    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
389302    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
389303    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
389304    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
389305    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
389306    +   end;
MPRINT(EM_DIAGRAM):   end;
389307    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
389308    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
389309    +   end;
MPRINT(EM_DIAGRAM):   end;
389310    +   else do;
MPRINT(EM_DIAGRAM):   else do;
389311    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
389312    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
389313    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
389314    +   end;
MPRINT(EM_DIAGRAM):   end;
389315    +end;
MPRINT(EM_DIAGRAM):   end;
389316    +
389317    +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
389318    +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
389319    +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
389320    +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
389321    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
389322    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
389323    +end;
MPRINT(EM_DIAGRAM):   end;
389324    +else do;
MPRINT(EM_DIAGRAM):   else do;
389325    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
389326    +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
389327    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
389328    +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
389329    +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
389330    +   end;
MPRINT(EM_DIAGRAM):   end;
389331    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
389332    +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
389333    +   end;
MPRINT(EM_DIAGRAM):   end;
389334    +   else do;
MPRINT(EM_DIAGRAM):   else do;
389335    +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
389336    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
389337    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
389338    +   end;
MPRINT(EM_DIAGRAM):   end;
389339    +end;
MPRINT(EM_DIAGRAM):   end;
389340    +
389341    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
389342    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
389343    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
389344    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
389345    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
389346    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
389347    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
389348    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
389349    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
389350    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
389351    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
389352    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
389353    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
389354    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
389355    +end;
MPRINT(EM_DIAGRAM):   end;
389356    +else do;
MPRINT(EM_DIAGRAM):   else do;
389357    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
389358    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
389359    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
389360    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
389361    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
389362    +   end;
MPRINT(EM_DIAGRAM):   end;
389363    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
389364    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
389365    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
389366    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
389367    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
389368    +   end;
MPRINT(EM_DIAGRAM):   end;
389369    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
389370    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
389371    +   end;
MPRINT(EM_DIAGRAM):   end;
389372    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
389373    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
389374    +   end;
MPRINT(EM_DIAGRAM):   end;
389375    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
389376    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
389377    +   end;
MPRINT(EM_DIAGRAM):   end;
389378    +   else do;
MPRINT(EM_DIAGRAM):   else do;
389379    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
389380    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
389381    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
389382    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
389383    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
389384    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
389385    +   end;
MPRINT(EM_DIAGRAM):   end;
389386    +end;
MPRINT(EM_DIAGRAM):   end;
389387    +
389388    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
389389    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
389390    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
389391    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
389392    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
389393    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
389394    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
389395    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
389396    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
389397    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
389398    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
389399    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
389400    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
389401    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
389402    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
389403    +end;
MPRINT(EM_DIAGRAM):   end;
389404    +else do;
MPRINT(EM_DIAGRAM):   else do;
389405    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
389406    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
389407    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
389408    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
389409    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
389410    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
389411    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
389412    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
389413    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
389414    +         end;
MPRINT(EM_DIAGRAM):   end;
389415    +         else do;
MPRINT(EM_DIAGRAM):   else do;
389416    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
389417    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
389418    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
389419    +            end;
MPRINT(EM_DIAGRAM):   end;
389420    +         end;
MPRINT(EM_DIAGRAM):   end;
389421    +      end;
MPRINT(EM_DIAGRAM):   end;
389422    +      else do;
MPRINT(EM_DIAGRAM):   else do;
389423    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
389424    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
389425    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
389426    +         end;
MPRINT(EM_DIAGRAM):   end;
389427    +      end;
MPRINT(EM_DIAGRAM):   end;
389428    +   end;
MPRINT(EM_DIAGRAM):   end;
389429    +   else do;
MPRINT(EM_DIAGRAM):   else do;
389430    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
389431    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
389432    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
389433    +      end;
MPRINT(EM_DIAGRAM):   end;
389434    +      else do;
MPRINT(EM_DIAGRAM):   else do;
389435    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
389436    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
389437    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
389438    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
389439    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
389440    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
389441    +         end;
MPRINT(EM_DIAGRAM):   end;
389442    +      end;
MPRINT(EM_DIAGRAM):   end;
389443    +   end;
MPRINT(EM_DIAGRAM):   end;
389444    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
389445    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
389446    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
389447    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
389448    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
389449    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
389450    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
389451    +   end;
MPRINT(EM_DIAGRAM):   end;
389452    +end;
MPRINT(EM_DIAGRAM):   end;
389453    +
389454    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
389455    +*** Checking missing input Interval
389456    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
389457    +
389458    +IF NMISS(
389459    +   AcceptedCmpTotal ,
389460    +   Age ,
389461    +   Frq ,
389462    +   Income ,
389463    +   Kidhome ,
389464    +   Mnt ,
389465    +   MntFishProducts ,
389466    +   MntFruits ,
389467    +   MntGoldProds ,
389468    +   MntMeatProducts ,
389469    +   MntSweetProducts ,
389470    +   MntWines ,
389471    +   MonthsAsCustomer ,
389472    +   NumCatalogPurchases ,
389473    +   NumDealsPurchases ,
389474    +   NumDistPurchases ,
389475    +   NumStorePurchases ,
389476    +   NumWebPurchases ,
389477    +   NumWebVisitsMonth ,
389478    +   RFMstat ,
389479    +   RMntFrq ,
389480    +   Recency ,
389481    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
389482    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
389483    +
389484    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
389485    +END;
MPRINT(EM_DIAGRAM):   END;
389486    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
389487    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
389488    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
389489    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
389490    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
389491    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
389492    +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
389493    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
389494    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
389495    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
389496    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
389497    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
389498    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
389499    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
389500    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
389501    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
389502    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
389503    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
389504    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
389505    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
389506    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
389507    +   S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
389508    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 * 
MonthsAsCustomer ;
389509    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
389510    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
389511    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
389512    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
389513    +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
389514    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
389515    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
389516    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
389517    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
389518    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
389519    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
389520    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
389521    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
389522    +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
389523    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
389524    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
389525    +END;
MPRINT(EM_DIAGRAM):   END;
389526    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
389527    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
389528    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
389529    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
389530    +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
389531    +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
389532    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
389533    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
389534    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
389535    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
389536    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
389537    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
389538    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
389539    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
389540    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
389541    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
389542    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
389543    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
389544    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
389545    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
389546    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
389547    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
389548    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
389549    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
389550    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
389551    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
389552    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
389553    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
389554    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
389555    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
389556    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
389557    +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
389558    +   ELSE S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
389559    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 * 
MonthsAsCustomer ;
389560    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
389561    +   ELSE S_NumCatalogPurchases
389562    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
389563    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
389564    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
389565    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
389566    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
389567    +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
389568    +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
389569    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
389570    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
389571    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
389572    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
389573    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
389574    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
389575    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
389576    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
389577    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
389578    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
389579    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
389580    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
389581    +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
389582    +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
389583    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
389584    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
389585    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
389586    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
389587    +END;
MPRINT(EM_DIAGRAM):   END;
389588    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
389589    +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
389590    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
389591    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
389592    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
389593    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
389594    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
389595    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
389596    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
389597    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
389598    +   H1x1_1  =    -0.78941671657664 * S_AcceptedCmpTotal
389599    +          +     0.31767378900448 * S_Age  +      -0.450304150539 * S_Frq
389600    +          +     0.13641886985589 * S_Income  +    -0.76390352240561 *
389601    +        S_Kidhome  +    -0.84654868800943 * S_Mnt  +     0.96945558052651 *
389602    +        S_MntFishProducts  +     0.16268958674432 * S_MntFruits
389603    +          +     0.02144447788014 * S_MntGoldProds  +    -3.75090210449464 *
389604    +        S_MntMeatProducts  +    -0.22086629229442 * S_MntSweetProducts
389605    +          +      0.8352178457402 * S_MntWines  +     0.16493907873466 *
389606    +        S_MonthsAsCustomer  +    -1.54607390993048 * S_NumCatalogPurchases
389607    +          +    -1.12130210731541 * S_NumDealsPurchases
389608    +          +    -0.12343505299726 * S_NumDistPurchases
389609    +          +     0.11863092868196 * S_NumStorePurchases
389610    +          +       0.583917993314 * S_NumWebPurchases
389611    +          +     0.75529732848146 * S_NumWebVisitsMonth
389612    +          +    -0.49784215446785 * S_RFMstat  +     0.40580477815146 *
389613    +        S_RMntFrq  +    -0.95519170979342 * S_Recency
389614    +          +    -0.44895196625502 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.78941671657664 * S_AcceptedCmpTotal + 0.31767378900448 * 
S_Age + -0.450304150539 * S_Frq + 0.13641886985589 * S_Income + -0.76390352240561 * S_Kidhome 
+ -0.84654868800943 * S_Mnt + 0.96945558052651 * S_MntFishProducts + 0.16268958674432 * 
S_MntFruits + 0.02144447788014 * S_MntGoldProds + -3.75090210449464 * S_MntMeatProducts + 
-0.22086629229442 * S_MntSweetProducts + 0.8352178457402 * S_MntWines + 0.16493907873466 * 
S_MonthsAsCustomer + -1.54607390993048 * S_NumCatalogPurchases + -1.12130210731541 * 
S_NumDealsPurchases + -0.12343505299726 * S_NumDistPurchases + 0.11863092868196 * 
S_NumStorePurchases + 0.583917993314 * S_NumWebPurchases + 0.75529732848146 * 
S_NumWebVisitsMonth + -0.49784215446785 * S_RFMstat + 0.40580477815146 * S_RMntFrq + 
-0.95519170979342 * S_Recency + -0.44895196625502 * S_Teenhome ;
389615    +   H1x1_2  =    -0.22984864633102 * S_AcceptedCmpTotal
389616    +          +     0.08901810463204 * S_Age  +    -0.13007664741542 * S_Frq
389617    +          +    -0.64174617524704 * S_Income  +     0.26599968715733 *
389618    +        S_Kidhome  +     0.57486260655125 * S_Mnt  +    -0.56033337110694 *
389619    +        S_MntFishProducts  +     0.16060716517673 * S_MntFruits
389620    +          +      0.4349197289782 * S_MntGoldProds  +     1.41079767517969 *
389621    +        S_MntMeatProducts  +      0.0615730534741 * S_MntSweetProducts
389622    +          +    -0.09057901886639 * S_MntWines  +     0.20260454891291 *
389623    +        S_MonthsAsCustomer  +    -1.17048742280721 * S_NumCatalogPurchases
389624    +          +    -0.84113790640734 * S_NumDealsPurchases
389625    +          +    -0.10512672747147 * S_NumDistPurchases
389626    +          +     0.07268711782494 * S_NumStorePurchases
389627    +          +     0.57578331257439 * S_NumWebPurchases
389628    +          +    -1.34334433506558 * S_NumWebVisitsMonth
389629    +          +     0.50079465494904 * S_RFMstat  +     0.77329849238514 *
389630    +        S_RMntFrq  +      1.2759588366983 * S_Recency
389631    +          +     0.17722493443222 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.22984864633102 * S_AcceptedCmpTotal + 0.08901810463204 * 
S_Age + -0.13007664741542 * S_Frq + -0.64174617524704 * S_Income + 0.26599968715733 * 
S_Kidhome + 0.57486260655125 * S_Mnt + -0.56033337110694 * S_MntFishProducts + 
0.16060716517673 * S_MntFruits + 0.4349197289782 * S_MntGoldProds + 1.41079767517969 * 
S_MntMeatProducts + 0.0615730534741 * S_MntSweetProducts + -0.09057901886639 * S_MntWines + 
0.20260454891291 * S_MonthsAsCustomer + -1.17048742280721 * S_NumCatalogPurchases + 
-0.84113790640734 * S_NumDealsPurchases + -0.10512672747147 * S_NumDistPurchases + 
0.07268711782494 * S_NumStorePurchases + 0.57578331257439 * S_NumWebPurchases + 
-1.34334433506558 * S_NumWebVisitsMonth + 0.50079465494904 * S_RFMstat + 0.77329849238514 * 
S_RMntFrq + 1.2759588366983 * S_Recency + 0.17722493443222 * S_Teenhome ;
389632    +   H1x1_3  =      1.1751297152411 * S_AcceptedCmpTotal
389633    +          +     0.14380060376858 * S_Age  +    -0.90459868540245 * S_Frq
389634    +          +     0.65570498233801 * S_Income  +    -0.66078213466597 *
389635    +        S_Kidhome  +      0.5364727654141 * S_Mnt  +    -0.56452823521458 *
389636    +        S_MntFishProducts  +     0.11401811215013 * S_MntFruits
389637    +          +     0.42809239636494 * S_MntGoldProds  +     3.28485519579047 *
389638    +        S_MntMeatProducts  +    -0.10959477301368 * S_MntSweetProducts
389639    +          +     -0.5779524716069 * S_MntWines  +     0.08256957915579 *
389640    +        S_MonthsAsCustomer  +     0.48195221766948 * S_NumCatalogPurchases
389641    +          +     0.45924983504762 * S_NumDealsPurchases
389642    +          +    -0.25508041581692 * S_NumDistPurchases
389643    +          +    -1.34901283858526 * S_NumStorePurchases
389644    +          +    -0.86388975031663 * S_NumWebPurchases
389645    +          +     1.86136110391797 * S_NumWebVisitsMonth
389646    +          +     0.39724376701426 * S_RFMstat  +    -1.08648755949459 *
389647    +        S_RMntFrq  +    -2.06955456943047 * S_Recency
389648    +          +     -0.6524420065858 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.1751297152411 * S_AcceptedCmpTotal + 0.14380060376858 * S_Age 
+ -0.90459868540245 * S_Frq + 0.65570498233801 * S_Income + -0.66078213466597 * S_Kidhome + 
0.5364727654141 * S_Mnt + -0.56452823521458 * S_MntFishProducts + 0.11401811215013 * 
S_MntFruits + 0.42809239636494 * S_MntGoldProds + 3.28485519579047 * S_MntMeatProducts + 
-0.10959477301368 * S_MntSweetProducts + -0.5779524716069 * S_MntWines + 0.08256957915579 * 
S_MonthsAsCustomer + 0.48195221766948 * S_NumCatalogPurchases + 0.45924983504762 * 
S_NumDealsPurchases + -0.25508041581692 * S_NumDistPurchases + -1.34901283858526 * 
S_NumStorePurchases + -0.86388975031663 * S_NumWebPurchases + 1.86136110391797 * 
S_NumWebVisitsMonth + 0.39724376701426 * S_RFMstat + -1.08648755949459 * S_RMntFrq + 
-2.06955456943047 * S_Recency + -0.6524420065858 * S_Teenhome ;
389649    +   H1x1_1  = H1x1_1  +     0.80545309346785 * AcceptedCmp10
389650    +          +    -0.33518398776018 * AcceptedCmp20  +    -0.58961939502901 *
389651    +        AcceptedCmp30  +    -0.89675052404295 * AcceptedCmp40
389652    +          +     0.75506592249683 * AcceptedCmp50  +    -0.07335613460961 *
389653    +        Complain0  +     0.34255762261501 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.80545309346785 * AcceptedCmp10 + -0.33518398776018 * 
AcceptedCmp20 + -0.58961939502901 * AcceptedCmp30 + -0.89675052404295 * AcceptedCmp40 + 
0.75506592249683 * AcceptedCmp50 + -0.07335613460961 * Complain0 + 0.34255762261501 * 
HigherEducationBinary0 ;
389654    +   H1x1_2  = H1x1_2  +    -0.17834267108797 * AcceptedCmp10
389655    +          +    -0.54414628806984 * AcceptedCmp20  +      0.8037591997808 *
389656    +        AcceptedCmp30  +     0.37789561997689 * AcceptedCmp40
389657    +          +    -1.39910847665731 * AcceptedCmp50  +    -0.44783176263268 *
389658    +        Complain0  +     0.36763760090773 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.17834267108797 * AcceptedCmp10 + -0.54414628806984 
* AcceptedCmp20 + 0.8037591997808 * AcceptedCmp30 + 0.37789561997689 * AcceptedCmp40 + 
-1.39910847665731 * AcceptedCmp50 + -0.44783176263268 * Complain0 + 0.36763760090773 * 
HigherEducationBinary0 ;
389659    +   H1x1_3  = H1x1_3  +    -0.20323890063703 * AcceptedCmp10
389660    +          +    -0.08537895761507 * AcceptedCmp20  +     0.22533818089504 *
389661    +        AcceptedCmp30  +    -0.22195995100127 * AcceptedCmp40
389662    +          +    -2.01371926977123 * AcceptedCmp50  +    -0.17097719978842 *
389663    +        Complain0  +     0.34016905753094 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.20323890063703 * AcceptedCmp10 + -0.08537895761507 
* AcceptedCmp20 + 0.22533818089504 * AcceptedCmp30 + -0.22195995100127 * AcceptedCmp40 + 
-2.01371926977123 * AcceptedCmp50 + -0.17097719978842 * Complain0 + 0.34016905753094 * 
HigherEducationBinary0 ;
389664    +   H1x1_1  = H1x1_1  +    -0.03394180683805 * Education2n_Cycle
389665    +          +    -0.38224926448988 * EducationBasic  +    -0.42512289883041 *
389666    +        EducationGraduation  +    -0.59708578424036 * EducationMaster
389667    +          +     0.48853068455666 * Marital_StatusDivorced
389668    +          +    -0.54903474026465 * Marital_StatusMarried
389669    +          +    -0.34079188373939 * Marital_StatusSingle
389670    +          +    -0.64602969938868 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.03394180683805 * Education2n_Cycle + 
-0.38224926448988 * EducationBasic + -0.42512289883041 * EducationGraduation + 
-0.59708578424036 * EducationMaster + 0.48853068455666 * Marital_StatusDivorced + 
-0.54903474026465 * Marital_StatusMarried + -0.34079188373939 * Marital_StatusSingle + 
-0.64602969938868 * Marital_StatusTogether ;
389671    +   H1x1_2  = H1x1_2  +    -0.26170943801998 * Education2n_Cycle
389672    +          +     0.06893871459175 * EducationBasic  +    -0.84123174187664 *
389673    +        EducationGraduation  +     0.19038549912088 * EducationMaster
389674    +          +    -1.03547689902027 * Marital_StatusDivorced
389675    +          +     2.42164864610471 * Marital_StatusMarried
389676    +          +    -1.95342561304942 * Marital_StatusSingle
389677    +          +      2.1397185142046 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.26170943801998 * Education2n_Cycle + 
0.06893871459175 * EducationBasic + -0.84123174187664 * EducationGraduation + 0.19038549912088 
* EducationMaster + -1.03547689902027 * Marital_StatusDivorced + 2.42164864610471 * 
Marital_StatusMarried + -1.95342561304942 * Marital_StatusSingle + 2.1397185142046 * 
Marital_StatusTogether ;
389678    +   H1x1_3  = H1x1_3  +    -0.04236694810886 * Education2n_Cycle
389679    +          +    -0.57404276980591 * EducationBasic  +     -0.1441989834351 *
389680    +        EducationGraduation  +    -0.31867831184924 * EducationMaster
389681    +          +      0.4337638747935 * Marital_StatusDivorced
389682    +          +    -0.38508657017615 * Marital_StatusMarried
389683    +          +     -0.0160269708326 * Marital_StatusSingle
389684    +          +    -0.57491004270903 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.04236694810886 * Education2n_Cycle + 
-0.57404276980591 * EducationBasic + -0.1441989834351 * EducationGraduation + 
-0.31867831184924 * EducationMaster + 0.4337638747935 * Marital_StatusDivorced + 
-0.38508657017615 * Marital_StatusMarried + -0.0160269708326 * Marital_StatusSingle + 
-0.57491004270903 * Marital_StatusTogether ;
389685    +   H1x1_1  =    -0.53426188790968 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.53426188790968 + H1x1_1 ;
389686    +   H1x1_2  =     0.98557066823746 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.98557066823746 + H1x1_2 ;
389687    +   H1x1_3  =     1.81937688438175 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.81937688438175 + H1x1_3 ;
389688    +   H1x1_4  = 0;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0;
389689    +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 );
389690    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
389691    +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
389692    +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
389693    +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
389694    +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
389695    +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
389696    +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
389697    +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
389698    +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
389699    +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
389700    +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
389701    +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
389702    +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
389703    +END;
MPRINT(EM_DIAGRAM):   END;
389704    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
389705    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
389706    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
389707    +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
389708    +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
389709    +END;
MPRINT(EM_DIAGRAM):   END;
389710    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
389711    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
389712    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
389713    +
389714    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
389715    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
389716    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
389717    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
389718    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
389719    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
389720    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
389721    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
389722    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
389723    +end;
MPRINT(EM_DIAGRAM):   end;
389724    +else do;
MPRINT(EM_DIAGRAM):   else do;
389725    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
389726    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
389727    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
389728    +   end;
MPRINT(EM_DIAGRAM):   end;
389729    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
389730    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
389731    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
389732    +   end;
MPRINT(EM_DIAGRAM):   end;
389733    +   else do;
MPRINT(EM_DIAGRAM):   else do;
389734    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
389735    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
389736    +   end;
MPRINT(EM_DIAGRAM):   end;
389737    +end;
MPRINT(EM_DIAGRAM):   end;
389738    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
389739    +   P_DepVar1  =    -3.43702380277695 * H1x1_1  +    -7.14235896425537 * H1x1_2
389740    +          +     10.8296305415538 * H1x1_3  +    -2.20824183229369 * H1x1_4 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.43702380277695 * H1x1_1 + -7.14235896425537 * H1x1_2 + 
10.8296305415538 * H1x1_3 + -2.20824183229369 * H1x1_4 ;
389741    +   P_DepVar1  =    -3.68304614366462 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.68304614366462 + P_DepVar1 ;
389742    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
389743    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
389744    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
389745    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
389746    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
389747    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
389748    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
389749    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
389750    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
389751    +END;
MPRINT(EM_DIAGRAM):   END;
389752    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
389753    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
389754    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
389755    +END;
MPRINT(EM_DIAGRAM):   END;
389756    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
389757    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
389758    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
389759    +END;
MPRINT(EM_DIAGRAM):   END;
389760    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
389761    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
389762    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
389763    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
389764    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
389765    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
389766    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
389767    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
389768    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
389769    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
389770    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
389771    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
389772    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
389773    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
389774    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
389775    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
389776    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
389777    +END;
MPRINT(EM_DIAGRAM):   END;
389778    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
389779    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
389780    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
389781    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
389782     run;

NOTE: DATA STEP view saved on file EMWS8.AUTONEURAL9_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.META_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
389783     quit;
389784     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
389785     filename emflow
389785   ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural9\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural9\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * AutoNeural9: Scoring VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
389786     *------------------------------------------------------------*;
389787     * AutoNeural9: Scoring VALIDATE data;
389788     *------------------------------------------------------------*;
389789     data EMWS8.AutoNeural9_VALIDATE
389790     / view=EMWS8.AutoNeural9_VALIDATE
389791     ;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural9_VALIDATE / view=EMWS8.AutoNeural9_VALIDATE ;
389792     set EMWS8.Meta_VALIDATE
389793     ;
MPRINT(EM_DIAGRAM):   set EMWS8.Meta_VALIDATE ;
389794     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural9\EMFLOWSCORE.sas.
389795    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
389796    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
389797    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
389798    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
389799    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
389800    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
389801    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
389802    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
389803    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
389804    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
389805    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
389806    +LENGTH _WARN_ $4
389807    +      F_DepVar  $ 12
389808    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
389809    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
389810    +
389811    +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
389812    +
389813    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
389814    +
389815    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
389816    +
389817    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
389818    +
389819    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
389820    +
389821    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
389822    +
389823    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
389824    +
389825    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
389826    +
389827    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
389828    +
389829    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
389830    +
389831    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
389832    +
389833    +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
389834    +
389835    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
389836    +
389837    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
389838    +
389839    +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
389840    +
389841    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
389842    +
389843    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
389844    +
389845    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
389846    +
389847    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
389848    +
389849    +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
389850    +
389851    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
389852    +
389853    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
389854    +
389855    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
389856    +
389857    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
389858    +
389859    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
389860    +
389861    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
389862    +
389863    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
389864    +
389865    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
389866    +
389867    +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
389868    +
389869    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
389870    +
389871    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
389872    +
389873    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
389874    +
389875    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
389876    +
389877    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
389878    +
389879    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
389880    +
389881    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
389882    +
389883    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
389884    +
389885    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
389886    +
389887    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
389888    +
389889    +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
389890    +
389891    +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
389892    +
389893    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
389894    +
389895    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
389896    +
389897    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
389898    +
389899    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
389900    +
389901    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
389902    +
389903    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
389904    +
389905    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
389906    +
389907    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
389908    +
389909    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
389910    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
389911    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
389912    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
389913    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
389914    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
389915    +end;
MPRINT(EM_DIAGRAM):   end;
389916    +else do;
MPRINT(EM_DIAGRAM):   else do;
389917    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
389918    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
389919    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
389920    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
389921    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
389922    +   end;
MPRINT(EM_DIAGRAM):   end;
389923    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
389924    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
389925    +   end;
MPRINT(EM_DIAGRAM):   end;
389926    +   else do;
MPRINT(EM_DIAGRAM):   else do;
389927    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
389928    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
389929    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
389930    +   end;
MPRINT(EM_DIAGRAM):   end;
389931    +end;
MPRINT(EM_DIAGRAM):   end;
389932    +
389933    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
389934    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
389935    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
389936    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
389937    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
389938    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
389939    +end;
MPRINT(EM_DIAGRAM):   end;
389940    +else do;
MPRINT(EM_DIAGRAM):   else do;
389941    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
389942    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
389943    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
389944    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
389945    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
389946    +   end;
MPRINT(EM_DIAGRAM):   end;
389947    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
389948    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
389949    +   end;
MPRINT(EM_DIAGRAM):   end;
389950    +   else do;
MPRINT(EM_DIAGRAM):   else do;
389951    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
389952    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
389953    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
389954    +   end;
MPRINT(EM_DIAGRAM):   end;
389955    +end;
MPRINT(EM_DIAGRAM):   end;
389956    +
389957    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
389958    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
389959    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
389960    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
389961    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
389962    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
389963    +end;
MPRINT(EM_DIAGRAM):   end;
389964    +else do;
MPRINT(EM_DIAGRAM):   else do;
389965    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
389966    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
389967    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
389968    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
389969    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
389970    +   end;
MPRINT(EM_DIAGRAM):   end;
389971    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
389972    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
389973    +   end;
MPRINT(EM_DIAGRAM):   end;
389974    +   else do;
MPRINT(EM_DIAGRAM):   else do;
389975    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
389976    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
389977    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
389978    +   end;
MPRINT(EM_DIAGRAM):   end;
389979    +end;
MPRINT(EM_DIAGRAM):   end;
389980    +
389981    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
389982    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
389983    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
389984    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
389985    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
389986    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
389987    +end;
MPRINT(EM_DIAGRAM):   end;
389988    +else do;
MPRINT(EM_DIAGRAM):   else do;
389989    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
389990    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
389991    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
389992    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
389993    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
389994    +   end;
MPRINT(EM_DIAGRAM):   end;
389995    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
389996    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
389997    +   end;
MPRINT(EM_DIAGRAM):   end;
389998    +   else do;
MPRINT(EM_DIAGRAM):   else do;
389999    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
390000    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
390001    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
390002    +   end;
MPRINT(EM_DIAGRAM):   end;
390003    +end;
MPRINT(EM_DIAGRAM):   end;
390004    +
390005    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
390006    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
390007    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
390008    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
390009    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
390010    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
390011    +end;
MPRINT(EM_DIAGRAM):   end;
390012    +else do;
MPRINT(EM_DIAGRAM):   else do;
390013    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
390014    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
390015    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
390016    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
390017    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
390018    +   end;
MPRINT(EM_DIAGRAM):   end;
390019    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
390020    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
390021    +   end;
MPRINT(EM_DIAGRAM):   end;
390022    +   else do;
MPRINT(EM_DIAGRAM):   else do;
390023    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
390024    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
390025    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
390026    +   end;
MPRINT(EM_DIAGRAM):   end;
390027    +end;
MPRINT(EM_DIAGRAM):   end;
390028    +
390029    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
390030    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
390031    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
390032    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
390033    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
390034    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
390035    +end;
MPRINT(EM_DIAGRAM):   end;
390036    +else do;
MPRINT(EM_DIAGRAM):   else do;
390037    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
390038    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
390039    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
390040    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
390041    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
390042    +   end;
MPRINT(EM_DIAGRAM):   end;
390043    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
390044    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
390045    +   end;
MPRINT(EM_DIAGRAM):   end;
390046    +   else do;
MPRINT(EM_DIAGRAM):   else do;
390047    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
390048    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
390049    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
390050    +   end;
MPRINT(EM_DIAGRAM):   end;
390051    +end;
MPRINT(EM_DIAGRAM):   end;
390052    +
390053    +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
390054    +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
390055    +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
390056    +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
390057    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
390058    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
390059    +end;
MPRINT(EM_DIAGRAM):   end;
390060    +else do;
MPRINT(EM_DIAGRAM):   else do;
390061    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
390062    +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
390063    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
390064    +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
390065    +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
390066    +   end;
MPRINT(EM_DIAGRAM):   end;
390067    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
390068    +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
390069    +   end;
MPRINT(EM_DIAGRAM):   end;
390070    +   else do;
MPRINT(EM_DIAGRAM):   else do;
390071    +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
390072    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
390073    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
390074    +   end;
MPRINT(EM_DIAGRAM):   end;
390075    +end;
MPRINT(EM_DIAGRAM):   end;
390076    +
390077    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
390078    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
390079    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
390080    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
390081    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
390082    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
390083    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
390084    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
390085    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
390086    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
390087    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
390088    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
390089    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
390090    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
390091    +end;
MPRINT(EM_DIAGRAM):   end;
390092    +else do;
MPRINT(EM_DIAGRAM):   else do;
390093    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
390094    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
390095    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
390096    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
390097    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
390098    +   end;
MPRINT(EM_DIAGRAM):   end;
390099    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
390100    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
390101    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
390102    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
390103    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
390104    +   end;
MPRINT(EM_DIAGRAM):   end;
390105    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
390106    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
390107    +   end;
MPRINT(EM_DIAGRAM):   end;
390108    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
390109    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
390110    +   end;
MPRINT(EM_DIAGRAM):   end;
390111    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
390112    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
390113    +   end;
MPRINT(EM_DIAGRAM):   end;
390114    +   else do;
MPRINT(EM_DIAGRAM):   else do;
390115    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
390116    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
390117    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
390118    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
390119    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
390120    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
390121    +   end;
MPRINT(EM_DIAGRAM):   end;
390122    +end;
MPRINT(EM_DIAGRAM):   end;
390123    +
390124    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
390125    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
390126    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
390127    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
390128    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
390129    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
390130    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
390131    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
390132    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
390133    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
390134    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
390135    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
390136    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
390137    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
390138    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
390139    +end;
MPRINT(EM_DIAGRAM):   end;
390140    +else do;
MPRINT(EM_DIAGRAM):   else do;
390141    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
390142    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
390143    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
390144    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
390145    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
390146    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
390147    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
390148    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
390149    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
390150    +         end;
MPRINT(EM_DIAGRAM):   end;
390151    +         else do;
MPRINT(EM_DIAGRAM):   else do;
390152    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
390153    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
390154    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
390155    +            end;
MPRINT(EM_DIAGRAM):   end;
390156    +         end;
MPRINT(EM_DIAGRAM):   end;
390157    +      end;
MPRINT(EM_DIAGRAM):   end;
390158    +      else do;
MPRINT(EM_DIAGRAM):   else do;
390159    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
390160    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
390161    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
390162    +         end;
MPRINT(EM_DIAGRAM):   end;
390163    +      end;
MPRINT(EM_DIAGRAM):   end;
390164    +   end;
MPRINT(EM_DIAGRAM):   end;
390165    +   else do;
MPRINT(EM_DIAGRAM):   else do;
390166    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
390167    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
390168    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
390169    +      end;
MPRINT(EM_DIAGRAM):   end;
390170    +      else do;
MPRINT(EM_DIAGRAM):   else do;
390171    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
390172    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
390173    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
390174    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
390175    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
390176    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
390177    +         end;
MPRINT(EM_DIAGRAM):   end;
390178    +      end;
MPRINT(EM_DIAGRAM):   end;
390179    +   end;
MPRINT(EM_DIAGRAM):   end;
390180    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
390181    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
390182    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
390183    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
390184    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
390185    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
390186    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
390187    +   end;
MPRINT(EM_DIAGRAM):   end;
390188    +end;
MPRINT(EM_DIAGRAM):   end;
390189    +
390190    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
390191    +*** Checking missing input Interval
390192    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
390193    +
390194    +IF NMISS(
390195    +   AcceptedCmpTotal ,
390196    +   Age ,
390197    +   Frq ,
390198    +   Income ,
390199    +   Kidhome ,
390200    +   Mnt ,
390201    +   MntFishProducts ,
390202    +   MntFruits ,
390203    +   MntGoldProds ,
390204    +   MntMeatProducts ,
390205    +   MntSweetProducts ,
390206    +   MntWines ,
390207    +   MonthsAsCustomer ,
390208    +   NumCatalogPurchases ,
390209    +   NumDealsPurchases ,
390210    +   NumDistPurchases ,
390211    +   NumStorePurchases ,
390212    +   NumWebPurchases ,
390213    +   NumWebVisitsMonth ,
390214    +   RFMstat ,
390215    +   RMntFrq ,
390216    +   Recency ,
390217    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
390218    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
390219    +
390220    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
390221    +END;
MPRINT(EM_DIAGRAM):   END;
390222    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
390223    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
390224    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
390225    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
390226    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
390227    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
390228    +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
390229    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
390230    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
390231    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
390232    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
390233    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
390234    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
390235    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
390236    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
390237    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
390238    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
390239    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
390240    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
390241    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
390242    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
390243    +   S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
390244    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 * 
MonthsAsCustomer ;
390245    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
390246    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
390247    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
390248    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
390249    +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
390250    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
390251    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
390252    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
390253    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
390254    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
390255    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
390256    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
390257    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
390258    +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
390259    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
390260    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
390261    +END;
MPRINT(EM_DIAGRAM):   END;
390262    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
390263    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
390264    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
390265    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
390266    +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
390267    +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
390268    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
390269    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
390270    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
390271    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
390272    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
390273    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
390274    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
390275    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
390276    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
390277    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
390278    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
390279    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
390280    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
390281    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
390282    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
390283    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
390284    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
390285    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
390286    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
390287    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
390288    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
390289    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
390290    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
390291    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
390292    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
390293    +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
390294    +   ELSE S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
390295    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 * 
MonthsAsCustomer ;
390296    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
390297    +   ELSE S_NumCatalogPurchases
390298    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
390299    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
390300    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
390301    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
390302    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
390303    +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
390304    +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
390305    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
390306    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
390307    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
390308    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
390309    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
390310    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
390311    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
390312    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
390313    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
390314    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
390315    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
390316    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
390317    +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
390318    +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
390319    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
390320    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
390321    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
390322    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
390323    +END;
MPRINT(EM_DIAGRAM):   END;
390324    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
390325    +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
390326    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
390327    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
390328    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
390329    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
390330    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
390331    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
390332    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
390333    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
390334    +   H1x1_1  =    -0.78941671657664 * S_AcceptedCmpTotal
390335    +          +     0.31767378900448 * S_Age  +      -0.450304150539 * S_Frq
390336    +          +     0.13641886985589 * S_Income  +    -0.76390352240561 *
390337    +        S_Kidhome  +    -0.84654868800943 * S_Mnt  +     0.96945558052651 *
390338    +        S_MntFishProducts  +     0.16268958674432 * S_MntFruits
390339    +          +     0.02144447788014 * S_MntGoldProds  +    -3.75090210449464 *
390340    +        S_MntMeatProducts  +    -0.22086629229442 * S_MntSweetProducts
390341    +          +      0.8352178457402 * S_MntWines  +     0.16493907873466 *
390342    +        S_MonthsAsCustomer  +    -1.54607390993048 * S_NumCatalogPurchases
390343    +          +    -1.12130210731541 * S_NumDealsPurchases
390344    +          +    -0.12343505299726 * S_NumDistPurchases
390345    +          +     0.11863092868196 * S_NumStorePurchases
390346    +          +       0.583917993314 * S_NumWebPurchases
390347    +          +     0.75529732848146 * S_NumWebVisitsMonth
390348    +          +    -0.49784215446785 * S_RFMstat  +     0.40580477815146 *
390349    +        S_RMntFrq  +    -0.95519170979342 * S_Recency
390350    +          +    -0.44895196625502 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.78941671657664 * S_AcceptedCmpTotal + 0.31767378900448 * 
S_Age + -0.450304150539 * S_Frq + 0.13641886985589 * S_Income + -0.76390352240561 * S_Kidhome 
+ -0.84654868800943 * S_Mnt + 0.96945558052651 * S_MntFishProducts + 0.16268958674432 * 
S_MntFruits + 0.02144447788014 * S_MntGoldProds + -3.75090210449464 * S_MntMeatProducts + 
-0.22086629229442 * S_MntSweetProducts + 0.8352178457402 * S_MntWines + 0.16493907873466 * 
S_MonthsAsCustomer + -1.54607390993048 * S_NumCatalogPurchases + -1.12130210731541 * 
S_NumDealsPurchases + -0.12343505299726 * S_NumDistPurchases + 0.11863092868196 * 
S_NumStorePurchases + 0.583917993314 * S_NumWebPurchases + 0.75529732848146 * 
S_NumWebVisitsMonth + -0.49784215446785 * S_RFMstat + 0.40580477815146 * S_RMntFrq + 
-0.95519170979342 * S_Recency + -0.44895196625502 * S_Teenhome ;
390351    +   H1x1_2  =    -0.22984864633102 * S_AcceptedCmpTotal
390352    +          +     0.08901810463204 * S_Age  +    -0.13007664741542 * S_Frq
390353    +          +    -0.64174617524704 * S_Income  +     0.26599968715733 *
390354    +        S_Kidhome  +     0.57486260655125 * S_Mnt  +    -0.56033337110694 *
390355    +        S_MntFishProducts  +     0.16060716517673 * S_MntFruits
390356    +          +      0.4349197289782 * S_MntGoldProds  +     1.41079767517969 *
390357    +        S_MntMeatProducts  +      0.0615730534741 * S_MntSweetProducts
390358    +          +    -0.09057901886639 * S_MntWines  +     0.20260454891291 *
390359    +        S_MonthsAsCustomer  +    -1.17048742280721 * S_NumCatalogPurchases
390360    +          +    -0.84113790640734 * S_NumDealsPurchases
390361    +          +    -0.10512672747147 * S_NumDistPurchases
390362    +          +     0.07268711782494 * S_NumStorePurchases
390363    +          +     0.57578331257439 * S_NumWebPurchases
390364    +          +    -1.34334433506558 * S_NumWebVisitsMonth
390365    +          +     0.50079465494904 * S_RFMstat  +     0.77329849238514 *
390366    +        S_RMntFrq  +      1.2759588366983 * S_Recency
390367    +          +     0.17722493443222 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.22984864633102 * S_AcceptedCmpTotal + 0.08901810463204 * 
S_Age + -0.13007664741542 * S_Frq + -0.64174617524704 * S_Income + 0.26599968715733 * 
S_Kidhome + 0.57486260655125 * S_Mnt + -0.56033337110694 * S_MntFishProducts + 
0.16060716517673 * S_MntFruits + 0.4349197289782 * S_MntGoldProds + 1.41079767517969 * 
S_MntMeatProducts + 0.0615730534741 * S_MntSweetProducts + -0.09057901886639 * S_MntWines + 
0.20260454891291 * S_MonthsAsCustomer + -1.17048742280721 * S_NumCatalogPurchases + 
-0.84113790640734 * S_NumDealsPurchases + -0.10512672747147 * S_NumDistPurchases + 
0.07268711782494 * S_NumStorePurchases + 0.57578331257439 * S_NumWebPurchases + 
-1.34334433506558 * S_NumWebVisitsMonth + 0.50079465494904 * S_RFMstat + 0.77329849238514 * 
S_RMntFrq + 1.2759588366983 * S_Recency + 0.17722493443222 * S_Teenhome ;
390368    +   H1x1_3  =      1.1751297152411 * S_AcceptedCmpTotal
390369    +          +     0.14380060376858 * S_Age  +    -0.90459868540245 * S_Frq
390370    +          +     0.65570498233801 * S_Income  +    -0.66078213466597 *
390371    +        S_Kidhome  +      0.5364727654141 * S_Mnt  +    -0.56452823521458 *
390372    +        S_MntFishProducts  +     0.11401811215013 * S_MntFruits
390373    +          +     0.42809239636494 * S_MntGoldProds  +     3.28485519579047 *
390374    +        S_MntMeatProducts  +    -0.10959477301368 * S_MntSweetProducts
390375    +          +     -0.5779524716069 * S_MntWines  +     0.08256957915579 *
390376    +        S_MonthsAsCustomer  +     0.48195221766948 * S_NumCatalogPurchases
390377    +          +     0.45924983504762 * S_NumDealsPurchases
390378    +          +    -0.25508041581692 * S_NumDistPurchases
390379    +          +    -1.34901283858526 * S_NumStorePurchases
390380    +          +    -0.86388975031663 * S_NumWebPurchases
390381    +          +     1.86136110391797 * S_NumWebVisitsMonth
390382    +          +     0.39724376701426 * S_RFMstat  +    -1.08648755949459 *
390383    +        S_RMntFrq  +    -2.06955456943047 * S_Recency
390384    +          +     -0.6524420065858 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.1751297152411 * S_AcceptedCmpTotal + 0.14380060376858 * S_Age 
+ -0.90459868540245 * S_Frq + 0.65570498233801 * S_Income + -0.66078213466597 * S_Kidhome + 
0.5364727654141 * S_Mnt + -0.56452823521458 * S_MntFishProducts + 0.11401811215013 * 
S_MntFruits + 0.42809239636494 * S_MntGoldProds + 3.28485519579047 * S_MntMeatProducts + 
-0.10959477301368 * S_MntSweetProducts + -0.5779524716069 * S_MntWines + 0.08256957915579 * 
S_MonthsAsCustomer + 0.48195221766948 * S_NumCatalogPurchases + 0.45924983504762 * 
S_NumDealsPurchases + -0.25508041581692 * S_NumDistPurchases + -1.34901283858526 * 
S_NumStorePurchases + -0.86388975031663 * S_NumWebPurchases + 1.86136110391797 * 
S_NumWebVisitsMonth + 0.39724376701426 * S_RFMstat + -1.08648755949459 * S_RMntFrq + 
-2.06955456943047 * S_Recency + -0.6524420065858 * S_Teenhome ;
390385    +   H1x1_1  = H1x1_1  +     0.80545309346785 * AcceptedCmp10
390386    +          +    -0.33518398776018 * AcceptedCmp20  +    -0.58961939502901 *
390387    +        AcceptedCmp30  +    -0.89675052404295 * AcceptedCmp40
390388    +          +     0.75506592249683 * AcceptedCmp50  +    -0.07335613460961 *
390389    +        Complain0  +     0.34255762261501 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.80545309346785 * AcceptedCmp10 + -0.33518398776018 * 
AcceptedCmp20 + -0.58961939502901 * AcceptedCmp30 + -0.89675052404295 * AcceptedCmp40 + 
0.75506592249683 * AcceptedCmp50 + -0.07335613460961 * Complain0 + 0.34255762261501 * 
HigherEducationBinary0 ;
390390    +   H1x1_2  = H1x1_2  +    -0.17834267108797 * AcceptedCmp10
390391    +          +    -0.54414628806984 * AcceptedCmp20  +      0.8037591997808 *
390392    +        AcceptedCmp30  +     0.37789561997689 * AcceptedCmp40
390393    +          +    -1.39910847665731 * AcceptedCmp50  +    -0.44783176263268 *
390394    +        Complain0  +     0.36763760090773 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.17834267108797 * AcceptedCmp10 + -0.54414628806984 
* AcceptedCmp20 + 0.8037591997808 * AcceptedCmp30 + 0.37789561997689 * AcceptedCmp40 + 
-1.39910847665731 * AcceptedCmp50 + -0.44783176263268 * Complain0 + 0.36763760090773 * 
HigherEducationBinary0 ;
390395    +   H1x1_3  = H1x1_3  +    -0.20323890063703 * AcceptedCmp10
390396    +          +    -0.08537895761507 * AcceptedCmp20  +     0.22533818089504 *
390397    +        AcceptedCmp30  +    -0.22195995100127 * AcceptedCmp40
390398    +          +    -2.01371926977123 * AcceptedCmp50  +    -0.17097719978842 *
390399    +        Complain0  +     0.34016905753094 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.20323890063703 * AcceptedCmp10 + -0.08537895761507 
* AcceptedCmp20 + 0.22533818089504 * AcceptedCmp30 + -0.22195995100127 * AcceptedCmp40 + 
-2.01371926977123 * AcceptedCmp50 + -0.17097719978842 * Complain0 + 0.34016905753094 * 
HigherEducationBinary0 ;
390400    +   H1x1_1  = H1x1_1  +    -0.03394180683805 * Education2n_Cycle
390401    +          +    -0.38224926448988 * EducationBasic  +    -0.42512289883041 *
390402    +        EducationGraduation  +    -0.59708578424036 * EducationMaster
390403    +          +     0.48853068455666 * Marital_StatusDivorced
390404    +          +    -0.54903474026465 * Marital_StatusMarried
390405    +          +    -0.34079188373939 * Marital_StatusSingle
390406    +          +    -0.64602969938868 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.03394180683805 * Education2n_Cycle + 
-0.38224926448988 * EducationBasic + -0.42512289883041 * EducationGraduation + 
-0.59708578424036 * EducationMaster + 0.48853068455666 * Marital_StatusDivorced + 
-0.54903474026465 * Marital_StatusMarried + -0.34079188373939 * Marital_StatusSingle + 
-0.64602969938868 * Marital_StatusTogether ;
390407    +   H1x1_2  = H1x1_2  +    -0.26170943801998 * Education2n_Cycle
390408    +          +     0.06893871459175 * EducationBasic  +    -0.84123174187664 *
390409    +        EducationGraduation  +     0.19038549912088 * EducationMaster
390410    +          +    -1.03547689902027 * Marital_StatusDivorced
390411    +          +     2.42164864610471 * Marital_StatusMarried
390412    +          +    -1.95342561304942 * Marital_StatusSingle
390413    +          +      2.1397185142046 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.26170943801998 * Education2n_Cycle + 
0.06893871459175 * EducationBasic + -0.84123174187664 * EducationGraduation + 0.19038549912088 
* EducationMaster + -1.03547689902027 * Marital_StatusDivorced + 2.42164864610471 * 
Marital_StatusMarried + -1.95342561304942 * Marital_StatusSingle + 2.1397185142046 * 
Marital_StatusTogether ;
390414    +   H1x1_3  = H1x1_3  +    -0.04236694810886 * Education2n_Cycle
390415    +          +    -0.57404276980591 * EducationBasic  +     -0.1441989834351 *
390416    +        EducationGraduation  +    -0.31867831184924 * EducationMaster
390417    +          +      0.4337638747935 * Marital_StatusDivorced
390418    +          +    -0.38508657017615 * Marital_StatusMarried
390419    +          +     -0.0160269708326 * Marital_StatusSingle
390420    +          +    -0.57491004270903 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.04236694810886 * Education2n_Cycle + 
-0.57404276980591 * EducationBasic + -0.1441989834351 * EducationGraduation + 
-0.31867831184924 * EducationMaster + 0.4337638747935 * Marital_StatusDivorced + 
-0.38508657017615 * Marital_StatusMarried + -0.0160269708326 * Marital_StatusSingle + 
-0.57491004270903 * Marital_StatusTogether ;
390421    +   H1x1_1  =    -0.53426188790968 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.53426188790968 + H1x1_1 ;
390422    +   H1x1_2  =     0.98557066823746 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.98557066823746 + H1x1_2 ;
390423    +   H1x1_3  =     1.81937688438175 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.81937688438175 + H1x1_3 ;
390424    +   H1x1_4  = 0;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0;
390425    +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 );
390426    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
390427    +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
390428    +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
390429    +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
390430    +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
390431    +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
390432    +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
390433    +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
390434    +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
390435    +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
390436    +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
390437    +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
390438    +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
390439    +END;
MPRINT(EM_DIAGRAM):   END;
390440    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
390441    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
390442    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
390443    +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
390444    +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
390445    +END;
MPRINT(EM_DIAGRAM):   END;
390446    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
390447    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
390448    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
390449    +
390450    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
390451    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
390452    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
390453    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
390454    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
390455    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
390456    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
390457    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
390458    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
390459    +end;
MPRINT(EM_DIAGRAM):   end;
390460    +else do;
MPRINT(EM_DIAGRAM):   else do;
390461    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
390462    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
390463    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
390464    +   end;
MPRINT(EM_DIAGRAM):   end;
390465    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
390466    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
390467    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
390468    +   end;
MPRINT(EM_DIAGRAM):   end;
390469    +   else do;
MPRINT(EM_DIAGRAM):   else do;
390470    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
390471    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
390472    +   end;
MPRINT(EM_DIAGRAM):   end;
390473    +end;
MPRINT(EM_DIAGRAM):   end;
390474    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
390475    +   P_DepVar1  =    -3.43702380277695 * H1x1_1  +    -7.14235896425537 * H1x1_2
390476    +          +     10.8296305415538 * H1x1_3  +    -2.20824183229369 * H1x1_4 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.43702380277695 * H1x1_1 + -7.14235896425537 * H1x1_2 + 
10.8296305415538 * H1x1_3 + -2.20824183229369 * H1x1_4 ;
390477    +   P_DepVar1  =    -3.68304614366462 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.68304614366462 + P_DepVar1 ;
390478    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
390479    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
390480    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
390481    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
390482    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
390483    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
390484    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
390485    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
390486    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
390487    +END;
MPRINT(EM_DIAGRAM):   END;
390488    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
390489    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
390490    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
390491    +END;
MPRINT(EM_DIAGRAM):   END;
390492    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
390493    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
390494    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
390495    +END;
MPRINT(EM_DIAGRAM):   END;
390496    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
390497    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
390498    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
390499    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
390500    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
390501    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
390502    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
390503    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
390504    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
390505    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
390506    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
390507    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
390508    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
390509    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
390510    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
390511    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
390512    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
390513    +END;
MPRINT(EM_DIAGRAM):   END;
390514    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
390515    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
390516    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
390517    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
390518     run;

NOTE: DATA STEP view saved on file EMWS8.AUTONEURAL9_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.META_VALIDATE.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(EM_DIAGRAM):   quit;
390519     quit;
390520     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
390521     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
390522     * AutoNeural9: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * AutoNeural9: Computing metadata for TRAIN data;
390523     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;

NOTE: View EMWS8.AUTONEURAL9_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural9\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS8.AutoNeural9_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS8.AutoNeural9_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS8.AutoNeural9_TRAIN out=WORK.M1SEE96F 
noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1SEE96F;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20 
INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M1SEE96F(keep=name type length label format formatl 
formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then format = strip(format)!!strip(put(formatl, 
best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, 
best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then informat = 
strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, 
best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1SEE96F;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M1SEE96F;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M02ULXKC NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M02ULXKC;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M02ULXKC;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3LH2CLX(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M02ULXKC;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M02ULXKC;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 
FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M02ULXKC;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" 
"MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" 
"QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" "YEAR" "YYMMDD" "YYMON" 
"YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" 
"EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) 
formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = 
"DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) 
formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" 
"NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" 
"SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = 
"DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then 
level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 
'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 
'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ 
('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 
'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 
'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M02ULXKC;
MPRINT(EMADVISECOLUMNS):   set WORK.M02ULXKC;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= 
"Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= 
"Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower limit" UPPERLIMIT= 
"Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= 
"Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Meta_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Meta_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural9_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT 
LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "AutoNeural9";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("P_DEPVAR1") creator = "AutoNeural9";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR1") creator = "AutoNeural9";
MPRINT(EM_DIAGRAM):   when("P_DEPVAR0") creator = "AutoNeural9";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR0") creator = "AutoNeural9";
MPRINT(EM_DIAGRAM):   when("F_DEPVAR") creator = "AutoNeural9";
MPRINT(EM_DIAGRAM):   when("I_DEPVAR") creator = "AutoNeural9";
MPRINT(EM_DIAGRAM):   when("U_DEPVAR") creator = "AutoNeural9";
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "AutoNeural9";
MPRINT(EM_DIAGRAM):   when("DEPVAR") model = "AutoNeural9";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * AutoNeural9: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
390835     data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
390836     set EMWS8.AutoNeural9_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural9_EMINFO;
390837     where DATA='AutoNeural9' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='AutoNeural9' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 
'MODEL');
390838     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.AUTONEURAL9_EMINFO.
      WHERE (DATA='AutoNeural9') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

390839     data EMWS8.AutoNeural9_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural9_EMINFO;
390840     length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
390841     input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
390842     cards;
MPRINT(EM_DIAGRAM):   cards;

NOTE: The data set EMWS8.AUTONEURAL9_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   run;
390846     run;
390847     data EMWS8.AutoNeural9_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural9_EMINFO;
390848     set EMWS8.AutoNeural9_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural9_EMINFO WORK.MODELTEMP_INFO;
390849     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.AUTONEURAL9_EMINFO.
NOTE: There were 0 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS8.AUTONEURAL9_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

390850     proc sort data = EMWS8.AutoNeural9_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.AutoNeural9_EMINFO NOTHREADS;
390851     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
390852     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.AUTONEURAL9_EMINFO.
NOTE: The data set EMWS8.AUTONEURAL9_EMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

390853     proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
390854     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
390855     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set EMWS8.FIMPORT_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 1 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

390856     proc sort data = EMWS8.AutoNeural9_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS8.AutoNeural9_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
390857     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
390858     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 3 observations read from the data set EMWS8.AUTONEURAL9_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

390859     data EMWS8.AutoNeural9_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural9_EMINFO;
390860     merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
390861     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
390862     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 3 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS8.AUTONEURAL9_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

390863     proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
390864     delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
390865     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
390866     quit;
MPRINT(EM_DIAGRAM):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

NOTE: View EMWS8.AUTONEURAL9_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
NOTE: View EMWS8.AUTONEURAL9_VALIDATE.VIEW used (Total process time):
      real time           0.34 seconds
      cpu time            0.03 seconds
      
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
