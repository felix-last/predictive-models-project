*------------------------------------------------------------*
User:                Lukas Fahr
Date:                28. April 2016
Time:                16.11 Uhr
Site:                70107571
Platform:            X64_7PRO
Maintenance Release: 9.03.01M2P081512
EM Version:          12.1
* 
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "28. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "16.09 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Training Log
Date:                28. April 2016
Time:                16.09 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O00GW22J
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural32\EMTRAIN.out" encoding="UTF-8"
NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O00GW22J new;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOG
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural32\EMLOG.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "28. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "16.09 Uhr" );
MPRINT(EM_DIAGRAM):   file _LOG;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                Lukas Fahr";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "Site:                70107571";
MPRINT(EM_DIAGRAM):   put "Platform:            X64_7PRO";
MPRINT(EM_DIAGRAM):   put "Maintenance Release: 9.03.01M2P081512";
MPRINT(EM_DIAGRAM):   put "EM Version:          12.1";
MPRINT(EM_DIAGRAM):   put "* ";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural32\EMTRAIN.log" encoding="UTF-8"
NOBOM;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _LOG MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_LOGIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _LOGIN
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural32\EMSCORE.log" encoding="UTF-8"
NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural32\EMREPORT.log" encoding="UTF-8"
NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    filename _LOG;
MPRINT(EM_DIAGRAM):    filename _OUT
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural32\EMOUTPUT.out" encoding="UTF-8"
NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "28. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "16.09 Uhr" );
MPRINT(EM_DIAGRAM):   file _OUT;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                Lukas Fahr";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural32\EMTRAIN.out" encoding="UTF-8"
NOBOM;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _OUT MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_OUTIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural32\EMSCORE.out" encoding="UTF-8"
NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural32\EMREPORT.out" encoding="UTF-8"
NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    filename _OUT;
MPRINT(EM_DIAGRAM):    filename _emtool_
'C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural32\EMRUNSTATUS.xml' encoding="UTF-8"
NOBOM;
480885     proc freq data=EMWS8.AutoNeural32_VariableSet noprint;
MPRINT(EM_DIAGRAM):    proc freq data=EMWS8.AutoNeural32_VariableSet noprint;
480886     table ROLE*LEVEL/out=WORK.AutoNeural32META;
MPRINT(EM_DIAGRAM):   table ROLE*LEVEL/out=WORK.AutoNeural32META;
480887     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 7 observations read from the data set EMWS8.AUTONEURAL32_VARIABLESET.
NOTE: The data set WORK.AUTONEURAL32META has 2 observations and 4 variables.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
480888     proc print data=WORK.AutoNeural32META label noobs;
MPRINT(EM_DIAGRAM):   proc print data=WORK.AutoNeural32META label noobs;
480889     var ROLE LEVEL COUNT;
MPRINT(EM_DIAGRAM):   var ROLE LEVEL COUNT;
480890     label ROLE = "%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel, NOQUOTE))" LEVEL =
480890   ! "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" COUNT =
480890   ! "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label ROLE = "Role" LEVEL = "Measurement Level" COUNT = "Frequency
Count";
480891     title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
480892     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_varSummary_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Variable Summary";
MPRINT(EM_DIAGRAM):   run;
480893     run;
 
NOTE: There were 2 observations read from the data set WORK.AUTONEURAL32META.
NOTE: The PROCEDURE PRINT printed page 328.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
480894     title10;
MPRINT(EM_DIAGRAM):   title10;
480895     %let EMNORLEN = %DMNORLEN;
MPRINT(EM_DIAGRAM):
EMWS8.Varsel_TRAIN EMWS8.Varsel_TRAIN
EMWS8.Varsel_TRAIN EMWS8.Varsel_TRAIN EMWS8 Varsel_TRAIN
EMWS8.Varsel_TRAIN EMWS8.Varsel_TRAIN
EMWS8.Varsel_TRAIN EMWS8.Varsel_TRAIN EMWS8 Varsel_TRAIN
MPRINT(EM_DIAGRAM):    proc dmdb data=EMWS8.Varsel_TRAIN
The SAS System
 
classout=WORK._DMDBCLASSTARGET(keep=NAME NRAW CRAW LEVEL FREQUENCY NMISSPERCENT);
MPRINT(EM_DIAGRAM):   class DepVar(DESC) ;
MPRINT(EM_DIAGRAM):   run;
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _INIT >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL setMetaData >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL setMetaData >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _term >>
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set WORK._DMDBCLASSTARGET;
MPRINT(EM_DIAGRAM):   where ^(NRAW eq . and CRAW eq '') and NAME="DepVar";
MPRINT(EM_DIAGRAM):   if _N_=1 then call symput('_newevent', strip(LEVEL));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK._DMDBCLASSTARGET out=_TEMPCLASS(keep=LEVEL FREQUENCY
NMISSPERCENT rename=(LEVEL=DepVar));
MPRINT(EM_DIAGRAM):   by LEVEL;
MPRINT(EM_DIAGRAM):   where ^(NRAW eq . and CRAW eq '') and NAME="DepVar";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _TEMPCLASS;
MPRINT(EM_DIAGRAM):   set _TEMPCLASS;
MPRINT(EM_DIAGRAM):   NMISSPERCENT= NMISSPERCENT/100;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _sortedDecData;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural32_DepVar_DD;
MPRINT(EM_DIAGRAM):   _levelorder_=_N_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_sortedDecdata;
MPRINT(EM_DIAGRAM):   by DepVar;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   merge _TEMPCLASS(in=_a) _sortedDecdata(in=_b);
MPRINT(EM_DIAGRAM):   by DepVar;
MPRINT(EM_DIAGRAM):   if (_a and ^_b) or (^_a and _b) then call symput('_emresetDec', '1');
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural32_DepVar_DD;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural32_DepVar_DD;
MPRINT(EM_DIAGRAM):   _levelorder_=_N_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural32_DepVar_DD;
MPRINT(EM_DIAGRAM):   by DepVar;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural32_DepVar_DD;
MPRINT(EM_DIAGRAM):   merge EMWS8.AutoNeural32_DepVar_DD
_TEMPCLASS(rename=(NMISSPERCENT=TRAINPRIOR FREQUENCY=COUNT));
MPRINT(EM_DIAGRAM):   by DepVar;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural32_DepVar_DD
out=EMWS8.AutoNeural32_DepVar_DD(drop=_levelorder_);
MPRINT(EM_DIAGRAM):   by _levelorder_;
MPRINT(EM_DIAGRAM):   run;
480942     data WORK.AutoNeural32_EVENT(KEEP=VARIABLE LABEL LEVEL EVENT NUMLEVELS ORDER);
MPRINT(EM_DIAGRAM):    data WORK.AutoNeural32_EVENT(KEEP=VARIABLE LABEL LEVEL EVENT NUMLEVELS
ORDER);
480943     length ORDER $20;
MPRINT(EM_DIAGRAM):   length ORDER $20;
480944     label VARIABLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel,  NOQUOTE))"
480944   ! EVENT = "%sysfunc(sasmsg(sashelp.dmine, assmt_event_vlabel, NOQUOTE))" NUMLEVELS =
480944   ! "%sysfunc(sasmsg(sashelp.dmine, rpt_numcat_vlabel, NOQUOTE))" LEVEL =
480945        "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" ORDER =
480945   ! "%sysfunc(sasmsg(sashelp.dmine, meta_order_vlabel, NOQUOTE))" LABEL =
480945   ! "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label VARIABLE = "Target" EVENT = "Event" NUMLEVELS = "Number of Levels"
LEVEL = "Measurement Level" ORDER = "Order" LABEL = "Label";
480946     set EMWS8.AUTONEURAL32_DEPVAR_DM( where=(_TYPE_="TARGET"));
MPRINT(EM_DIAGRAM):   set EMWS8.AUTONEURAL32_DEPVAR_DM( where=(_TYPE_="TARGET"));
480947     NumLevels=2;
MPRINT(EM_DIAGRAM):   NumLevels=2;
480948     select(upcase(ORDER));
MPRINT(EM_DIAGRAM):   select(upcase(ORDER));
480949     when('DESC') ORDER = 'Descending';
MPRINT(EM_DIAGRAM):   when('DESC') ORDER = 'Descending';
480950     when('ASC') ORDER = 'Ascending';
MPRINT(EM_DIAGRAM):   when('ASC') ORDER = 'Ascending';
480951     when('FMTDESC') ORDER = 'Formatted Descending';
MPRINT(EM_DIAGRAM):   when('FMTDESC') ORDER = 'Formatted Descending';
480952     when('FMTASC') ORDER = 'Formatted Ascending';
MPRINT(EM_DIAGRAM):   when('FMTASC') ORDER = 'Formatted Ascending';
480953     otherwise ORDER = 'Descending';
MPRINT(EM_DIAGRAM):   otherwise ORDER = 'Descending';
480954     end;
MPRINT(EM_DIAGRAM):   end;
480955     output;
MPRINT(EM_DIAGRAM):   output;
480956     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.AUTONEURAL32_DEPVAR_DM.
      WHERE _TYPE_='TARGET';
NOTE: The data set WORK.AUTONEURAL32_EVENT has 1 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
480957     title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
480958     proc print data=WORK.AutoNeural32_EVENT noobs label;
MPRINT(EM_DIAGRAM):   proc print data=WORK.AutoNeural32_EVENT noobs label;
480959     var VARIABLE EVENT LEVEL NUMLEVELS ORDER LABEL;
MPRINT(EM_DIAGRAM):   var VARIABLE EVENT LEVEL NUMLEVELS ORDER LABEL;
480960     title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
480961     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_modelEvent_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Model Events";
MPRINT(EM_DIAGRAM):   run;
480962     run;
 
NOTE: There were 1 observations read from the data set WORK.AUTONEURAL32_EVENT.
NOTE: The PROCEDURE PRINT printed page 329.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
480963     title10;
MPRINT(EM_DIAGRAM):   title10;
"No decisions defined for target "DepVar"."
480964     proc print data = EMWS8.AutoNeural32_DepVar_DM noobs label;
MPRINT(EM_DIAGRAM):    proc print data = EMWS8.AutoNeural32_DepVar_DM noobs label;
480965     var _type_ variable label;
MPRINT(EM_DIAGRAM):   var _type_ variable label;
480966     where _type_ ^in('MATRIX', 'DECISION', 'TRAINPRIOR', 'DATAPRIOR', 'DECPRIOR');
MPRINT(EM_DIAGRAM):   where _type_ ^in('MATRIX', 'DECISION', 'TRAINPRIOR', 'DATAPRIOR',
'DECPRIOR');
480967     label _TYPE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_type_vlabel,     NOQUOTE))"
480967   ! VARIABLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel, NOQUOTE))" LABEL =
480967   ! "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _TYPE_ = "Type" VARIABLE = "Variable" LABEL = "Label";
480968     title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
480969     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_predDecVars_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Predicted and decision variables";
MPRINT(EM_DIAGRAM):   run;
480970     run;
 
NOTE: There were 7 observations read from the data set EMWS8.AUTONEURAL32_DEPVAR_DM.
      WHERE _type_ not in ('DATAPRIOR', 'DECISION', 'DECPRIOR', 'MATRIX', 'TRAINPRIOR');
NOTE: The PROCEDURE PRINT printed page 330.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
480971     title10;
MPRINT(EM_DIAGRAM):   title10;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * AutoNeural32: Preparing metadata for Training;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   data WORK.M3TQY5SH;
MPRINT(EM_DIAGRAM):   set WORK.M3TQY5SH;
MPRINT(EM_DIAGRAM):   where(use = 'Y' or (role = 'INPUT' and use = 'D'));
MPRINT(EM_DIAGRAM):   if (role = 'REJECTED') then role = 'INPUT';
MPRINT(EM_DIAGRAM):   run;
480980     data WORK.M3TQY5SH;
MPRINT(EM_DIAGRAM):    data WORK.M3TQY5SH;
480981     set WORK.M3TQY5SH end=eof;
MPRINT(EM_DIAGRAM):   set WORK.M3TQY5SH end=eof;
480982     output;
MPRINT(EM_DIAGRAM):   output;
480983     if eof then do;
MPRINT(EM_DIAGRAM):   if eof then do;
480984     NAME="";
MPRINT(EM_DIAGRAM):   NAME="";
480985     ROLE="COST";
MPRINT(EM_DIAGRAM):   ROLE="COST";
480986     LEVEL="INTERVAL";
MPRINT(EM_DIAGRAM):   LEVEL="INTERVAL";
480987     TYPE="N";
MPRINT(EM_DIAGRAM):   TYPE="N";
480988     output;
MPRINT(EM_DIAGRAM):   output;
480989     end;
MPRINT(EM_DIAGRAM):   end;
480990     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 7 observations read from the data set WORK.M3TQY5SH.
NOTE: The data set WORK.M3TQY5SH has 8 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
NOTE: There were 2 observations read from the data set EMWS8.AUTONEURAL32_DEPVAR_DD.
NOTE: The data set WORK.DEPVAR has 2 observations and 7 variables.
480991     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
480992     * AutoNeural32: Create decision matrix;
MPRINT(EM_DIAGRAM):   * AutoNeural32: Create decision matrix;
480993     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
480994     data WORK.DepVar;
MPRINT(EM_DIAGRAM):   data WORK.DepVar;
480995       length   DepVar                           $  32
480996                COUNT                                8
480997                DATAPRIOR                            8
480998                TRAINPRIOR                           8
480999                DECPRIOR                             8
481000                DECISION1                            8
481001                DECISION2                            8
481002                ;
MPRINT(EM_DIAGRAM):   length DepVar $ 32 COUNT 8 DATAPRIOR 8 TRAINPRIOR 8 DECPRIOR 8 DECISION1
8 DECISION2 8 ;
481003
481004       label    COUNT="Level Counts"
481005                DATAPRIOR="Data Proportions"
481006                TRAINPRIOR="Training Proportions"
481007                DECPRIOR="Decision Priors"
481008                DECISION1="1"
481009                DECISION2="0"
481010                ;
MPRINT(EM_DIAGRAM):   label COUNT= "Level Counts" DATAPRIOR= "Data Proportions" TRAINPRIOR=
"Training Proportions" DECPRIOR= "Decision Priors" DECISION1= "1" DECISION2= "0" ;
481011       format   COUNT 10.
481012                ;
MPRINT(EM_DIAGRAM):   format COUNT 10. ;
481013     DepVar="1"; COUNT=359; DATAPRIOR=0.151221567; TRAINPRIOR=0.15122156697556;
481013   ! DECPRIOR=.; DECISION1=1; DECISION2=0;
MPRINT(EM_DIAGRAM):   DepVar="1";
MPRINT(EM_DIAGRAM):   COUNT=359;
MPRINT(EM_DIAGRAM):   DATAPRIOR=0.151221567;
MPRINT(EM_DIAGRAM):   TRAINPRIOR=0.15122156697556;
MPRINT(EM_DIAGRAM):   DECPRIOR=.;
MPRINT(EM_DIAGRAM):   DECISION1=1;
MPRINT(EM_DIAGRAM):   DECISION2=0;
481014     output;
MPRINT(EM_DIAGRAM):   output;
481015     DepVar="0"; COUNT=2015; DATAPRIOR=0.848778433; TRAINPRIOR=0.84877843302443;
481015   ! DECPRIOR=.; DECISION1=0; DECISION2=1;
MPRINT(EM_DIAGRAM):   DepVar="0";
MPRINT(EM_DIAGRAM):   COUNT=2015;
MPRINT(EM_DIAGRAM):   DATAPRIOR=0.848778433;
MPRINT(EM_DIAGRAM):   TRAINPRIOR=0.84877843302443;
MPRINT(EM_DIAGRAM):   DECPRIOR=.;
MPRINT(EM_DIAGRAM):   DECISION1=0;
MPRINT(EM_DIAGRAM):   DECISION2=1;
481016     output;
MPRINT(EM_DIAGRAM):   output;
481017     ;
MPRINT(EM_DIAGRAM):   ;
481018     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK.DEPVAR has 2 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
481019     proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
481020     modify DepVar(type=PROFIT label=DepVar);
MPRINT(EM_DIAGRAM):   modify DepVar(type=PROFIT label= DepVar);
MPRINT(EM_DIAGRAM):   label DECISION1= '1';
MPRINT(EM_DIAGRAM):   label DECISION2= '0';
MPRINT(EM_DIAGRAM):   run;
481021     label DECISION1= '1';
481022     label DECISION2= '0';
481023     run;
 
NOTE: MODIFY was successful for WORK.DEPVAR.DATA.
481024     quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
481025     data EM_AutoNeural32;
MPRINT(EM_DIAGRAM):   data EM_AutoNeural32;
481026     set EMWS8.Varsel_TRAIN(keep=
481027     AcceptedCmpTotal DepVar Mnt MntMeatProducts NumCatalogPurchases RFMstat
481028     Recency );
MPRINT(EM_DIAGRAM):   set EMWS8.Varsel_TRAIN(keep= AcceptedCmpTotal DepVar Mnt MntMeatProducts
NumCatalogPurchases RFMstat Recency );
481029     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Variable _WARN_ is uninitialized.
NOTE: View EMWS8.VARSEL_TRAIN.VIEW used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
NOTE: There were 2374 observations read from the data set EMWS8.PART_TRAIN.
NOTE: There were 2374 observations read from the data set EMWS8.VARSEL_TRAIN.
NOTE: The data set WORK.EM_AUTONEURAL32 has 2374 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * AutoNeural32: DMDBClass Macro ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
481030     *------------------------------------------------------------* ;
481031     * AutoNeural32: DMDBClass Macro ;
481032     *------------------------------------------------------------* ;
481033     %macro DMDBClass;
481034         DepVar(DESC)
481035     %mend DMDBClass;
481036     *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
481037     * AutoNeural32: DMDBVar Macro ;
MPRINT(EM_DIAGRAM):   * AutoNeural32: DMDBVar Macro ;
481038     *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
481039     %macro DMDBVar;
481040         AcceptedCmpTotal Mnt MntMeatProducts NumCatalogPurchases RFMstat Recency
481041     %mend DMDBVar;
481042     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
481043     * AutoNeural32: Create DMDB;
MPRINT(EM_DIAGRAM):   * AutoNeural32: Create DMDB;
481044     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
481045     proc dmdb batch data=WORK.EM_AutoNeural32
481046     dmdbcat=WORK.AutoNeural32_DMDB
481047     maxlevel = 513
481048     ;
MPRINT(EM_DIAGRAM):   proc dmdb batch data=WORK.EM_AutoNeural32 dmdbcat=WORK.AutoNeural32_DMDB
maxlevel = 513 ;
MPRINT(EM_DIAGRAM):   class
481049     class %DMDBClass;
MPRINT(DMDBCLASS):   DepVar(DESC)
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   var
481050     var %DMDBVar;
MPRINT(DMDBVAR):   AcceptedCmpTotal Mnt MntMeatProducts NumCatalogPurchases RFMstat Recency
MPRINT(EM_DIAGRAM):  ;
481051     target
481052     DepVar
481053     ;
MPRINT(EM_DIAGRAM):   target DepVar ;
481054     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Records processed = 2374   Memory used = 511K.
NOTE: There were 2374 observations read from the data set WORK.EM_AUTONEURAL32.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):   *--- end code ---*;
481055     quit;
481056     *--- end code ---*;
 
481057     *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------* ;
481058     * AutoNeural32: Interval Inputs Macro ;
MPRINT(EM_DIAGRAM):   * AutoNeural32: Interval Inputs Macro ;
481059     *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
481060     %macro INTINPUTS;
481061         AcceptedCmpTotal Mnt MntMeatProducts NumCatalogPurchases RFMstat Recency
481062     %mend INTINPUTS;
481063     *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
481064     * AutoNeural32: Binary Inputs Macro ;
MPRINT(EM_DIAGRAM):   * AutoNeural32: Binary Inputs Macro ;
481065     *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
481066     %macro BININPUTS;
481067
481068     %mend BININPUTS;
481069     *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
481070     * AutoNeural32: Nominal Inputs Macro ;
MPRINT(EM_DIAGRAM):   * AutoNeural32: Nominal Inputs Macro ;
481071     *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
481072     %macro NOMINPUTS;
481073
481074     %mend NOMINPUTS;
481075     *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
481076     * AutoNeural32: Ordinal Inputs Macro ;
MPRINT(EM_DIAGRAM):   * AutoNeural32: Ordinal Inputs Macro ;
481077     *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
481078     %macro ORDINPUTS;
481079
481080     %mend ORDINPUTS;
481081     * set printing options;
MPRINT(EM_DIAGRAM):   * set printing options;
481082     ;
MPRINT(EM_DIAGRAM):   ;
481083     options linesize = 80;
MPRINT(EM_DIAGRAM):   options linesize = 80;
481084     options pagesize = 6000;
MPRINT(EM_DIAGRAM):   options pagesize = 6000;
481085     options nonumber;
MPRINT(EM_DIAGRAM):   options nonumber;
481086     options nocenter;
MPRINT(EM_DIAGRAM):   options nocenter;
481087     options nodate;
MPRINT(EM_DIAGRAM):   options nodate;
481088     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
481089     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_autonet_title  ,
481089   ! NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "AutoNet";
MPRINT(EM_DIAGRAM):   *;
481090     *;
 
481091     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
481092     * Autoneural: search / FUNNEL LAYERS;
MPRINT(EM_DIAGRAM):   * Autoneural: search / FUNNEL LAYERS;
481093     ;
MPRINT(EM_DIAGRAM):   ;
481094     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
481095     *;
MPRINT(EM_DIAGRAM):   *;
 
481096     *;
MPRINT(EM_DIAGRAM):    *;
481097     proc neural data=EM_AutoNeural32 dmdbcat=WORK.AutoNeural32_DMDB
481098     validdata=EMWS8.Varsel_VALIDATE
481099     ;
MPRINT(EM_DIAGRAM):   proc neural data=EM_AutoNeural32
dmdbcat=WORK.AutoNeural32_DMDB validdata=EMWS8.Varsel_VALIDATE ;
481100     *;
MPRINT(EM_DIAGRAM):   *;
481101     nloptions noprint;
MPRINT(EM_DIAGRAM):   nloptions noprint;
481102     performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   input
481103     input %INTINPUTS / level=interval id=interval;
MPRINT(INTINPUTS):   AcceptedCmpTotal Mnt MntMeatProducts NumCatalogPurchases
RFMstat Recency
MPRINT(EM_DIAGRAM):   / level=interval id=interval;
481104     target DepVar / level=NOMINAL id=DepVar
481105     ;
MPRINT(EM_DIAGRAM):   target DepVar / level=NOMINAL id=DepVar ;
481106     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
481107     * Direct connection;
MPRINT(EM_DIAGRAM):   * Direct connection;
481108     ;
MPRINT(EM_DIAGRAM):   ;
481109     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
481110     connect interval DepVar;
MPRINT(EM_DIAGRAM):   connect interval DepVar;
481111     *;
MPRINT(EM_DIAGRAM):   *;
481112     netoptions ranscale = 1;
MPRINT(EM_DIAGRAM):   netoptions ranscale = 1;
481113     *;
MPRINT(EM_DIAGRAM):   *;
481114     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
481115     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_train_title  ,NOQUOTE,
481115   ! Search # 1 FUNNEL LAYERS trial # 1 : DIRECT : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 1 FUNNEL LAYERS trial # 1 : DIRECT :
Training";
MPRINT(EM_DIAGRAM):   train estiter=1 outest=_anest outfit=_anfit maxtime=1800
maxiter=50 tech = Default;
NOTE: Variable _WARN_ is uninitialized.
NOTE:  Synchronizing the objectives and the Solution.
NOTE: Convergence criterion (ABSGCONV=0.00001) satisfied.
NOTE: The data set WORK._ANEST has 22 observations and 22 variables.
NOTE: The data set WORK._ANFIT has 28 observations and 36 variables.
MPRINT(EM_DIAGRAM):   ;
481116     train estiter=1 outest=_anest outfit=_anfit maxtime=1800 maxiter=50
MPRINT(EM_DIAGRAM):   run;
481117     tech = Default;
481118     ;
481119     run;
 
NOTE: The data set WORK.EM_AUTONEURAL32 has 2374 observations and 7 variables.
NOTE: The data set EMWS8.VARSEL_VALIDATE has . observations and 46 variables.
NOTE: View EMWS8.VARSEL_VALIDATE.VIEW used (Total process time):
      real time           0.24 seconds
      cpu time            0.23 seconds
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: Closing the Neural Application.
NOTE: PROCEDURE NEURAL used (Total process time):
      real time           0.25 seconds
      cpu time            0.24 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
481120     *;
481121     proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
MPRINT(EM_DIAGRAM):   proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
481122     var _iter_ _aic_ _averr_ _misc_
481123     _vaverr_ _vmisc_
481124     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
481125     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 14 observations read from the data set WORK._ANFIT.
      WHERE _name_='OVERALL';
NOTE: The PROCEDURE PRINT printed page 331.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Extract best iteration;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
481126     *------------------------------------------------------------*;
481127     * Extract best iteration;
481128     ;
481129     *------------------------------------------------------------*;
481130     %global _iter;
481131     data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
481132     set _anfit(where=(_NAME_ eq 'OVERALL'));
MPRINT(EM_DIAGRAM):   set _anfit(where=(_NAME_ eq 'OVERALL'));
481133     retain _min 1e+64;
MPRINT(EM_DIAGRAM):   retain _min 1e+64;
481134     if _VMISC_ < _min then do;
MPRINT(EM_DIAGRAM):   if _VMISC_ < _min then do;
481135     _min = _VMISC_;
MPRINT(EM_DIAGRAM):   _min = _VMISC_;
481136     call symput('_iter',put(_ITER_, 6.));
MPRINT(EM_DIAGRAM):   call symput('_iter',put(_ITER_, 6.));
481137     end;
MPRINT(EM_DIAGRAM):   end;
481138     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 14 observations read from the data set WORK._ANFIT.
      WHERE _NAME_='OVERALL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
481139     *;
 
481140     data EMWS8.AutoNeural32_ESTDS;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural32_ESTDS;
481141     set _anest;
MPRINT(EM_DIAGRAM):   set _anest;
481142     if _ITER_ eq 1 then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 1 then do;
481143     output;
MPRINT(EM_DIAGRAM):   output;
481144     stop;
MPRINT(EM_DIAGRAM):   stop;
481145     end;
MPRINT(EM_DIAGRAM):   end;
481146     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set WORK._ANEST.
NOTE: The data set EMWS8.AUTONEURAL32_ESTDS has 1 observations and 22 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
481147     *;
481148     data EMWS8.AutoNeural32_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural32_OUTFIT;
481149     set _anfit;
MPRINT(EM_DIAGRAM):   set _anfit;
481150     if _ITER_ eq 1 and _NAME_ eq "OVERALL" then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 1 and _NAME_ eq "OVERALL" then do;
481151     output;
MPRINT(EM_DIAGRAM):   output;
481152     stop;
MPRINT(EM_DIAGRAM):   stop;
481153     end;
MPRINT(EM_DIAGRAM):   end;
481154     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._ANFIT.
NOTE: The data set EMWS8.AUTONEURAL32_OUTFIT has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
481155     *;
MPRINT(EM_DIAGRAM):    *;
481156     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
481157     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_selectediteration_title
481157   ! , NOQUOTE, _VMISC_))";
MPRINT(EM_DIAGRAM):   title10 "Selected Iteration based on _VMISC_";
481158     proc print data=EMWS8.AutoNeural32_OUTFIT noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural32_OUTFIT noobs;
481159     var _iter_ _aic_ _averr_ _misc_
481160     _vaverr_ _vmisc_
481161     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
481162     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL32_OUTFIT.
NOTE: The PROCEDURE PRINT printed page 332.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
481163     title9;
MPRINT(EM_DIAGRAM):   title9;
481164     title10;
MPRINT(EM_DIAGRAM):   title10;
481165     %sysfunc(sasmsg(sashelp.dmine, starthistory_note , NOQUOTE));
MPRINT(EM_DIAGRAM):    * Start history;
MPRINT(EM_DIAGRAM):  ;
481166     data EMWS8.AutoNeural32_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural32_HISTORY;
481167     length _func_ _status_ _step_ $16;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16;
481168     label _func_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_function_vlabel  ,
481168   !  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _func_ = "Function";
481169     label _status_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_status_vlabel  ,
481169   !  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _status_ = "Status";
481170     label _iter_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_iteration_vlabel
481170   ! , NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _iter_ = "Iteration";
481171     label _step_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_step_vlabel  ,
481171   ! NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _step_ = "Step";
481172     _func_ = '';
MPRINT(EM_DIAGRAM):   _func_ = '';
481173     _status_ = '';
MPRINT(EM_DIAGRAM):   _status_ = '';
481174     _step_ = 'FUNNEL LAYERS 1';
MPRINT(EM_DIAGRAM):   _step_ = 'FUNNEL LAYERS 1';
481175     set
481176     _anfit(where=(_name_ eq 'OVERALL' and _iter_ eq 0))
481177     ;
MPRINT(EM_DIAGRAM):   set _anfit(where=(_name_ eq 'OVERALL' and _iter_ eq 0)) ;
481178     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK._ANFIT.
      WHERE (_name_='OVERALL') and (_iter_=0);
NOTE: The data set EMWS8.AUTONEURAL32_HISTORY has 1 observations and 39
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
481179     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
481180     set EMWS8.AutoNeural32_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural32_OUTFIT;
481181     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
481182     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL32_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
481183     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
481184     set EMWS8.AutoNeural32_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural32_OUTFIT;
481185     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
481186     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL32_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
481187     *SEARCH: copy estimates and fit to best buffer;
MPRINT(EM_DIAGRAM):    *SEARCH: copy estimates and fit to best buffer;
481188     ;
MPRINT(EM_DIAGRAM):   ;
481189     data WORK.SAVEDS_AUTONEUR_37IDK5U;
MPRINT(EM_DIAGRAM):   data WORK.SAVEDS_AUTONEUR_37IDK5U;
481190     set EMWS8.AutoNeural32_ESTDS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural32_ESTDS;
481191     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.AUTONEURAL32_ESTDS.
NOTE: The data set WORK.SAVEDS_AUTONEUR_37IDK5U has 1 observations and 22
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
481192     data EMWS8.AutoNeural32_BESTDS;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural32_BESTDS;
481193     set EMWS8.AutoNeural32_ESTDS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural32_ESTDS;
481194     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.AUTONEURAL32_ESTDS.
NOTE: The data set EMWS8.AUTONEURAL32_BESTDS has 1 observations and 22
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
481195     data WORK.BFITDS_AUTONEUR_37IDK5U;
MPRINT(EM_DIAGRAM):   data WORK.BFITDS_AUTONEUR_37IDK5U;
481196     set EMWS8.AutoNeural32_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural32_OUTFIT;
481197     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL32_OUTFIT.
NOTE: The data set WORK.BFITDS_AUTONEUR_37IDK5U has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
481198     * Add function info to new history;
MPRINT(EM_DIAGRAM):    * Add function info to new history;
481199     ;
MPRINT(EM_DIAGRAM):   ;
481200     data EMWS8.AutoNeural32_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural32_HISTORY;
481201     set EMWS8.AutoNeural32_HISTORY;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural32_HISTORY;
481202     _func_ = 'DIRECT';
MPRINT(EM_DIAGRAM):   _func_ = 'DIRECT';
481203     _status_ = 'initial';
MPRINT(EM_DIAGRAM):   _status_ = 'initial';
481204     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL32_HISTORY.
NOTE: The data set EMWS8.AUTONEURAL32_HISTORY has 1 observations and 39
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
481205     * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
481206     ;
MPRINT(EM_DIAGRAM):   ;
481207     data EMWS8.AutoNeural32_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural32_OUTFIT;
481208     set EMWS8.AutoNeural32_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural32_OUTFIT;
481209     length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
481210     _func_ = "DIRECT";
MPRINT(EM_DIAGRAM):   _func_ = "DIRECT";
481211     _status_ = "candidate";
MPRINT(EM_DIAGRAM):   _status_ = "candidate";
481212     _step_ = "FUNNEL LAYERS 1";
MPRINT(EM_DIAGRAM):   _step_ = "FUNNEL LAYERS 1";
481213     _index_ = 1;
MPRINT(EM_DIAGRAM):   _index_ = 1;
481214     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL32_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL32_OUTFIT has 1 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
481215     data EMWS8.AutoNeural32_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural32_HISTORY;
481216     set EMWS8.AutoNeural32_HISTORY EMWS8.AutoNeural32_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural32_HISTORY EMWS8.AutoNeural32_OUTFIT;
481217     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL32_HISTORY.
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL32_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL32_HISTORY has 2 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
481218     *;
MPRINT(EM_DIAGRAM):    *;
481219     proc neural data=EM_AutoNeural32 dmdbcat=WORK.AutoNeural32_DMDB
481220     validdata=EMWS8.Varsel_VALIDATE
481221     ;
MPRINT(EM_DIAGRAM):   proc neural data=EM_AutoNeural32
dmdbcat=WORK.AutoNeural32_DMDB validdata=EMWS8.Varsel_VALIDATE ;
481222     *;
MPRINT(EM_DIAGRAM):   *;
481223     nloptions noprint;
MPRINT(EM_DIAGRAM):   nloptions noprint;
481224     performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   input
481225     input %INTINPUTS / level=interval id=interval;
MPRINT(INTINPUTS):   AcceptedCmpTotal Mnt MntMeatProducts NumCatalogPurchases
RFMstat Recency
MPRINT(EM_DIAGRAM):   / level=interval id=interval;
481226     target DepVar / level=NOMINAL id=DepVar
481227     ;
MPRINT(EM_DIAGRAM):   target DepVar / level=NOMINAL id=DepVar ;
481228     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
481229     * Layer #1;
MPRINT(EM_DIAGRAM):   * Layer #1;
481230     ;
MPRINT(EM_DIAGRAM):   ;
481231     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
481232     Hidden 3 / id = H1x1_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 3 / id = H1x1_ act=LOG;
481233     connect interval H1x1_;
MPRINT(EM_DIAGRAM):   connect interval H1x1_;
481234     connect H1x1_ DepVar;
MPRINT(EM_DIAGRAM):   connect H1x1_ DepVar;
481235     *;
MPRINT(EM_DIAGRAM):   *;
481236     netoptions ranscale = 1;
MPRINT(EM_DIAGRAM):   netoptions ranscale = 1;
481237     *;
MPRINT(EM_DIAGRAM):   *;
481238     initial
481239     ;
MPRINT(EM_DIAGRAM):   initial ;
NOTE: Variable _WARN_ is uninitialized.
481240     *;
MPRINT(EM_DIAGRAM):   *;
481241     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
481242     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_prelim_title  ,NOQUOTE,
481242   ! Search # 1 FUNNEL LAYERS trial # 2 : LOGISTIC : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 1 FUNNEL LAYERS trial # 2 : LOGISTIC :
Prelim";
MPRINT(EM_DIAGRAM):   prelim 12 outest=_anpre pretime=75 preiter=25 tech =
Default ;
NOTE:  Synchronizing the objectives and the Solution.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANPRE has 25 observations and 40 variables.
MPRINT(EM_DIAGRAM):   *;
481243     prelim 12 outest=_anpre pretime=75 preiter=25
481244     tech = Default
481245     ;
481246     *;
481247     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
481248     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_train_title  ,NOQUOTE,
481248   ! Search # 1 FUNNEL LAYERS trial # 2 : LOGISTIC : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 1 FUNNEL LAYERS trial # 2 : LOGISTIC :
Training";
MPRINT(EM_DIAGRAM):   train estiter=1 outest=_anest outfit=_anfit maxtime=900
maxiter=50 tech = Default;
NOTE: Convergence criterion (FCONV=0.0001) satisfied.
NOTE: The data set WORK._ANEST has 51 observations and 40 variables.
NOTE: The data set WORK._ANFIT has 50 observations and 36 variables.
MPRINT(EM_DIAGRAM):   ;
481249     train estiter=1 outest=_anest outfit=_anfit maxtime=900 maxiter=50
MPRINT(EM_DIAGRAM):   run;
481250     tech = Default;
481251     ;
481252     run;
 
NOTE: The data set WORK.EM_AUTONEURAL32 has 2374 observations and 7 variables.
NOTE: The data set EMWS8.VARSEL_VALIDATE has . observations and 46 variables.
NOTE: View EMWS8.VARSEL_VALIDATE.VIEW used (Total process time):
      real time           4.04 seconds
      cpu time            3.99 seconds
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: Closing the Neural Application.
NOTE: The PROCEDURE NEURAL printed page 333.
NOTE: PROCEDURE NEURAL used (Total process time):
      real time           4.04 seconds
      cpu time            3.99 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
481253     *;
481254     proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
MPRINT(EM_DIAGRAM):   proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
481255     var _iter_ _aic_ _averr_ _misc_
481256     _vaverr_ _vmisc_
481257     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
481258     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 25 observations read from the data set WORK._ANFIT.
      WHERE _name_='OVERALL';
NOTE: The PROCEDURE PRINT printed page 334.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Extract best iteration;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
481259     *------------------------------------------------------------*;
481260     * Extract best iteration;
481261     ;
481262     *------------------------------------------------------------*;
481263     %global _iter;
481264     data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
481265     set _anfit(where=(_NAME_ eq 'OVERALL'));
MPRINT(EM_DIAGRAM):   set _anfit(where=(_NAME_ eq 'OVERALL'));
481266     retain _min 1e+64;
MPRINT(EM_DIAGRAM):   retain _min 1e+64;
481267     if _VMISC_ < _min then do;
MPRINT(EM_DIAGRAM):   if _VMISC_ < _min then do;
481268     _min = _VMISC_;
MPRINT(EM_DIAGRAM):   _min = _VMISC_;
481269     call symput('_iter',put(_ITER_, 6.));
MPRINT(EM_DIAGRAM):   call symput('_iter',put(_ITER_, 6.));
481270     end;
MPRINT(EM_DIAGRAM):   end;
481271     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 25 observations read from the data set WORK._ANFIT.
      WHERE _NAME_='OVERALL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
481272     *;
 
481273     data EMWS8.AutoNeural32_ESTDS;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural32_ESTDS;
481274     set _anest;
MPRINT(EM_DIAGRAM):   set _anest;
481275     if _ITER_ eq 1 then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 1 then do;
481276     output;
MPRINT(EM_DIAGRAM):   output;
481277     stop;
MPRINT(EM_DIAGRAM):   stop;
481278     end;
MPRINT(EM_DIAGRAM):   end;
481279     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set WORK._ANEST.
NOTE: The data set EMWS8.AUTONEURAL32_ESTDS has 1 observations and 40 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
481280     *;
481281     data EMWS8.AutoNeural32_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural32_OUTFIT;
481282     set _anfit;
MPRINT(EM_DIAGRAM):   set _anfit;
481283     if _ITER_ eq 1 and _NAME_ eq "OVERALL" then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 1 and _NAME_ eq "OVERALL" then do;
481284     output;
MPRINT(EM_DIAGRAM):   output;
481285     stop;
MPRINT(EM_DIAGRAM):   stop;
481286     end;
MPRINT(EM_DIAGRAM):   end;
481287     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._ANFIT.
NOTE: The data set EMWS8.AUTONEURAL32_OUTFIT has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
481288     *;
MPRINT(EM_DIAGRAM):    *;
481289     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
481290     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_selectediteration_title
481290   ! , NOQUOTE, _VMISC_))";
MPRINT(EM_DIAGRAM):   title10 "Selected Iteration based on _VMISC_";
481291     proc print data=EMWS8.AutoNeural32_OUTFIT noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural32_OUTFIT noobs;
481292     var _iter_ _aic_ _averr_ _misc_
481293     _vaverr_ _vmisc_
481294     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
481295     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL32_OUTFIT.
NOTE: The PROCEDURE PRINT printed page 335.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
481296     title9;
MPRINT(EM_DIAGRAM):   title9;
481297     title10;
MPRINT(EM_DIAGRAM):   title10;
481298     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
481299     set EMWS8.AutoNeural32_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural32_OUTFIT;
481300     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
481301     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL32_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
481302     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
481303     set EMWS8.AutoNeural32_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural32_OUTFIT;
481304     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
481305     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL32_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
481306     *SEARCH: copy estimates and fit to best buffer;
MPRINT(EM_DIAGRAM):    *SEARCH: copy estimates and fit to best buffer;
481307     ;
MPRINT(EM_DIAGRAM):   ;
481308     data WORK.SAVEDS_AUTONEUR_37IDK5U;
MPRINT(EM_DIAGRAM):   data WORK.SAVEDS_AUTONEUR_37IDK5U;
481309     set EMWS8.AutoNeural32_ESTDS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural32_ESTDS;
481310     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.AUTONEURAL32_ESTDS.
NOTE: The data set WORK.SAVEDS_AUTONEUR_37IDK5U has 1 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
481311     data EMWS8.AutoNeural32_BESTDS;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural32_BESTDS;
481312     set EMWS8.AutoNeural32_ESTDS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural32_ESTDS;
481313     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.AUTONEURAL32_ESTDS.
NOTE: The data set EMWS8.AUTONEURAL32_BESTDS has 1 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
481314     data WORK.BFITDS_AUTONEUR_37IDK5U;
MPRINT(EM_DIAGRAM):   data WORK.BFITDS_AUTONEUR_37IDK5U;
481315     set EMWS8.AutoNeural32_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural32_OUTFIT;
481316     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL32_OUTFIT.
NOTE: The data set WORK.BFITDS_AUTONEUR_37IDK5U has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
481317     * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
481318     ;
MPRINT(EM_DIAGRAM):   ;
481319     data EMWS8.AutoNeural32_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural32_OUTFIT;
481320     set EMWS8.AutoNeural32_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural32_OUTFIT;
481321     length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
481322     _func_ = "LOGISTIC";
MPRINT(EM_DIAGRAM):   _func_ = "LOGISTIC";
481323     _status_ = "candidate";
MPRINT(EM_DIAGRAM):   _status_ = "candidate";
481324     _step_ = "FUNNEL LAYERS 1";
MPRINT(EM_DIAGRAM):   _step_ = "FUNNEL LAYERS 1";
481325     _index_ = 1;
MPRINT(EM_DIAGRAM):   _index_ = 1;
481326     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL32_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL32_OUTFIT has 1 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
481327     data EMWS8.AutoNeural32_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural32_HISTORY;
481328     set EMWS8.AutoNeural32_HISTORY EMWS8.AutoNeural32_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural32_HISTORY EMWS8.AutoNeural32_OUTFIT;
481329     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set
      EMWS8.AUTONEURAL32_HISTORY.
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL32_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL32_HISTORY has 3 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
481330     *;
MPRINT(EM_DIAGRAM):    *;
481331     proc neural data=EM_AutoNeural32 dmdbcat=WORK.AutoNeural32_DMDB
481332     validdata=EMWS8.Varsel_VALIDATE
481333     ;
MPRINT(EM_DIAGRAM):   proc neural data=EM_AutoNeural32
dmdbcat=WORK.AutoNeural32_DMDB validdata=EMWS8.Varsel_VALIDATE ;
481334     *;
MPRINT(EM_DIAGRAM):   *;
481335     nloptions noprint;
MPRINT(EM_DIAGRAM):   nloptions noprint;
481336     performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   input
481337     input %INTINPUTS / level=interval id=interval;
MPRINT(INTINPUTS):   AcceptedCmpTotal Mnt MntMeatProducts NumCatalogPurchases
RFMstat Recency
MPRINT(EM_DIAGRAM):   / level=interval id=interval;
481338     target DepVar / level=NOMINAL id=DepVar
481339     ;
MPRINT(EM_DIAGRAM):   target DepVar / level=NOMINAL id=DepVar ;
481340     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
481341     * Layer #1;
MPRINT(EM_DIAGRAM):   * Layer #1;
481342     ;
MPRINT(EM_DIAGRAM):   ;
481343     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
481344     Hidden 3 / id = H1x1_ act=SINE;
MPRINT(EM_DIAGRAM):   Hidden 3 / id = H1x1_ act=SINE;
481345     connect interval H1x1_;
MPRINT(EM_DIAGRAM):   connect interval H1x1_;
481346     connect H1x1_ DepVar;
MPRINT(EM_DIAGRAM):   connect H1x1_ DepVar;
481347     *;
MPRINT(EM_DIAGRAM):   *;
481348     netoptions ranscale = 1;
MPRINT(EM_DIAGRAM):   netoptions ranscale = 1;
481349     *;
MPRINT(EM_DIAGRAM):   *;
481350     initial
481351     ;
MPRINT(EM_DIAGRAM):   initial ;
NOTE: Variable _WARN_ is uninitialized.
481352     *;
MPRINT(EM_DIAGRAM):   *;
481353     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
481354     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_prelim_title  ,NOQUOTE,
481354   ! Search # 1 FUNNEL LAYERS trial # 3 : SINE : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 1 FUNNEL LAYERS trial # 3 : SINE :
Prelim";
MPRINT(EM_DIAGRAM):   prelim 12 outest=_anpre pretime=74 preiter=25 tech =
Default ;
NOTE:  Synchronizing the objectives and the Solution.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANPRE has 25 observations and 40 variables.
MPRINT(EM_DIAGRAM):   *;
481355     prelim 12 outest=_anpre pretime=74 preiter=25
481356     tech = Default
481357     ;
481358     *;
481359     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
481360     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_train_title  ,NOQUOTE,
481360   ! Search # 1 FUNNEL LAYERS trial # 3 : SINE : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 1 FUNNEL LAYERS trial # 3 : SINE :
Training";
MPRINT(EM_DIAGRAM):   train estiter=1 outest=_anest outfit=_anfit maxtime=898
maxiter=50 tech = Default;
NOTE: Convergence criterion (FCONV=0.0001) satisfied.
NOTE: At least one element of the gradient is greater than 1e-3.
NOTE: The data set WORK._ANEST has 42 observations and 40 variables.
NOTE: The data set WORK._ANFIT has 32 observations and 36 variables.
MPRINT(EM_DIAGRAM):   ;
481361     train estiter=1 outest=_anest outfit=_anfit maxtime=898 maxiter=50
MPRINT(EM_DIAGRAM):   run;
481362     tech = Default;
481363     ;
481364     run;
 
NOTE: The data set WORK.EM_AUTONEURAL32 has 2374 observations and 7 variables.
NOTE: The data set EMWS8.VARSEL_VALIDATE has . observations and 46 variables.
NOTE: View EMWS8.VARSEL_VALIDATE.VIEW used (Total process time):
      real time           3.93 seconds
      cpu time            3.88 seconds
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: Closing the Neural Application.
NOTE: The PROCEDURE NEURAL printed page 336.
NOTE: PROCEDURE NEURAL used (Total process time):
      real time           3.94 seconds
      cpu time            3.90 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
481365     *;
481366     proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
MPRINT(EM_DIAGRAM):   proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
481367     var _iter_ _aic_ _averr_ _misc_
481368     _vaverr_ _vmisc_
481369     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
481370     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 16 observations read from the data set WORK._ANFIT.
      WHERE _name_='OVERALL';
NOTE: The PROCEDURE PRINT printed page 337.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Extract best iteration;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
481371     *------------------------------------------------------------*;
481372     * Extract best iteration;
481373     ;
481374     *------------------------------------------------------------*;
481375     %global _iter;
481376     data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
481377     set _anfit(where=(_NAME_ eq 'OVERALL'));
MPRINT(EM_DIAGRAM):   set _anfit(where=(_NAME_ eq 'OVERALL'));
481378     retain _min 1e+64;
MPRINT(EM_DIAGRAM):   retain _min 1e+64;
481379     if _VMISC_ < _min then do;
MPRINT(EM_DIAGRAM):   if _VMISC_ < _min then do;
481380     _min = _VMISC_;
MPRINT(EM_DIAGRAM):   _min = _VMISC_;
481381     call symput('_iter',put(_ITER_, 6.));
MPRINT(EM_DIAGRAM):   call symput('_iter',put(_ITER_, 6.));
481382     end;
MPRINT(EM_DIAGRAM):   end;
481383     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 16 observations read from the data set WORK._ANFIT.
      WHERE _NAME_='OVERALL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
481384     *;
 
481385     data EMWS8.AutoNeural32_ESTDS;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural32_ESTDS;
481386     set _anest;
MPRINT(EM_DIAGRAM):   set _anest;
481387     if _ITER_ eq 8 then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 8 then do;
481388     output;
MPRINT(EM_DIAGRAM):   output;
481389     stop;
MPRINT(EM_DIAGRAM):   stop;
481390     end;
MPRINT(EM_DIAGRAM):   end;
481391     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 9 observations read from the data set WORK._ANEST.
NOTE: The data set EMWS8.AUTONEURAL32_ESTDS has 1 observations and 40 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
481392     *;
481393     data EMWS8.AutoNeural32_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural32_OUTFIT;
481394     set _anfit;
MPRINT(EM_DIAGRAM):   set _anfit;
481395     if _ITER_ eq 8 and _NAME_ eq "OVERALL" then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 8 and _NAME_ eq "OVERALL" then do;
481396     output;
MPRINT(EM_DIAGRAM):   output;
481397     stop;
MPRINT(EM_DIAGRAM):   stop;
481398     end;
MPRINT(EM_DIAGRAM):   end;
481399     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 18 observations read from the data set WORK._ANFIT.
NOTE: The data set EMWS8.AUTONEURAL32_OUTFIT has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
481400     *;
MPRINT(EM_DIAGRAM):    *;
481401     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
481402     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_selectediteration_title
481402   ! , NOQUOTE, _VMISC_))";
MPRINT(EM_DIAGRAM):   title10 "Selected Iteration based on _VMISC_";
481403     proc print data=EMWS8.AutoNeural32_OUTFIT noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural32_OUTFIT noobs;
481404     var _iter_ _aic_ _averr_ _misc_
481405     _vaverr_ _vmisc_
481406     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
481407     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL32_OUTFIT.
NOTE: The PROCEDURE PRINT printed page 338.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
481408     title9;
MPRINT(EM_DIAGRAM):   title9;
481409     title10;
MPRINT(EM_DIAGRAM):   title10;
481410     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
481411     set EMWS8.AutoNeural32_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural32_OUTFIT;
481412     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
481413     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL32_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
481414     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
481415     set EMWS8.AutoNeural32_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural32_OUTFIT;
481416     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
481417     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL32_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
481418     * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
481419     ;
MPRINT(EM_DIAGRAM):   ;
481420     data EMWS8.AutoNeural32_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural32_OUTFIT;
481421     set EMWS8.AutoNeural32_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural32_OUTFIT;
481422     length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
481423     _func_ = "SINE";
MPRINT(EM_DIAGRAM):   _func_ = "SINE";
481424     _status_ = "reject";
MPRINT(EM_DIAGRAM):   _status_ = "reject";
481425     _step_ = "FUNNEL LAYERS 1";
MPRINT(EM_DIAGRAM):   _step_ = "FUNNEL LAYERS 1";
481426     _index_ = 1;
MPRINT(EM_DIAGRAM):   _index_ = 1;
481427     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL32_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL32_OUTFIT has 1 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
481428     data EMWS8.AutoNeural32_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural32_HISTORY;
481429     set EMWS8.AutoNeural32_HISTORY EMWS8.AutoNeural32_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural32_HISTORY EMWS8.AutoNeural32_OUTFIT;
481430     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set
      EMWS8.AUTONEURAL32_HISTORY.
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL32_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL32_HISTORY has 4 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
481431     *;
MPRINT(EM_DIAGRAM):    *;
481432     proc neural data=EM_AutoNeural32 dmdbcat=WORK.AutoNeural32_DMDB
481433     validdata=EMWS8.Varsel_VALIDATE
481434     ;
MPRINT(EM_DIAGRAM):   proc neural data=EM_AutoNeural32
dmdbcat=WORK.AutoNeural32_DMDB validdata=EMWS8.Varsel_VALIDATE ;
481435     *;
MPRINT(EM_DIAGRAM):   *;
481436     nloptions noprint;
MPRINT(EM_DIAGRAM):   nloptions noprint;
481437     performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   input
481438     input %INTINPUTS / level=interval id=interval;
MPRINT(INTINPUTS):   AcceptedCmpTotal Mnt MntMeatProducts NumCatalogPurchases
RFMstat Recency
MPRINT(EM_DIAGRAM):   / level=interval id=interval;
481439     target DepVar / level=NOMINAL id=DepVar
481440     ;
MPRINT(EM_DIAGRAM):   target DepVar / level=NOMINAL id=DepVar ;
481441     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
481442     * Layer #1;
MPRINT(EM_DIAGRAM):   * Layer #1;
481443     ;
MPRINT(EM_DIAGRAM):   ;
481444     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
481445     Hidden 3 / id = H1x1_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 3 / id = H1x1_ act=SOFTMAX;
481446     connect interval H1x1_;
MPRINT(EM_DIAGRAM):   connect interval H1x1_;
481447     connect H1x1_ DepVar;
MPRINT(EM_DIAGRAM):   connect H1x1_ DepVar;
481448     *;
MPRINT(EM_DIAGRAM):   *;
481449     netoptions ranscale = 1;
MPRINT(EM_DIAGRAM):   netoptions ranscale = 1;
481450     *;
MPRINT(EM_DIAGRAM):   *;
481451     initial
481452     ;
MPRINT(EM_DIAGRAM):   initial ;
NOTE: Variable _WARN_ is uninitialized.
481453     *;
MPRINT(EM_DIAGRAM):   *;
481454     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
481455     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_prelim_title  ,NOQUOTE,
481455   ! Search # 1 FUNNEL LAYERS trial # 4 : SOFTMAX : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 1 FUNNEL LAYERS trial # 4 : SOFTMAX :
Prelim";
MPRINT(EM_DIAGRAM):   prelim 12 outest=_anpre pretime=74 preiter=25 tech =
Default ;
NOTE:  Synchronizing the objectives and the Solution.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANPRE has 25 observations and 33 variables.
MPRINT(EM_DIAGRAM):   *;
481456     prelim 12 outest=_anpre pretime=74 preiter=25
481457     tech = Default
481458     ;
481459     *;
481460     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
481461     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_train_title  ,NOQUOTE,
481461   ! Search # 1 FUNNEL LAYERS trial # 4 : SOFTMAX : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 1 FUNNEL LAYERS trial # 4 : SOFTMAX :
Training";
MPRINT(EM_DIAGRAM):   train estiter=1 outest=_anest outfit=_anfit maxtime=897
maxiter=50 tech = Default;
NOTE: Convergence criterion (FCONV=0.0001) satisfied.
NOTE: The data set WORK._ANEST has 31 observations and 33 variables.
NOTE: The data set WORK._ANFIT has 24 observations and 36 variables.
MPRINT(EM_DIAGRAM):   ;
481462     train estiter=1 outest=_anest outfit=_anfit maxtime=897 maxiter=50
MPRINT(EM_DIAGRAM):   run;
481463     tech = Default;
481464     ;
481465     run;
 
NOTE: The data set WORK.EM_AUTONEURAL32 has 2374 observations and 7 variables.
NOTE: The data set EMWS8.VARSEL_VALIDATE has . observations and 46 variables.
NOTE: View EMWS8.VARSEL_VALIDATE.VIEW used (Total process time):
      real time           3.26 seconds
      cpu time            3.26 seconds
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: Closing the Neural Application.
NOTE: The PROCEDURE NEURAL printed page 339.
NOTE: PROCEDURE NEURAL used (Total process time):
      real time           3.27 seconds
      cpu time            3.26 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
481466     *;
481467     proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
MPRINT(EM_DIAGRAM):   proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
481468     var _iter_ _aic_ _averr_ _misc_
481469     _vaverr_ _vmisc_
481470     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
481471     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 12 observations read from the data set WORK._ANFIT.
      WHERE _name_='OVERALL';
NOTE: The PROCEDURE PRINT printed page 340.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Extract best iteration;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
481472     *------------------------------------------------------------*;
481473     * Extract best iteration;
481474     ;
481475     *------------------------------------------------------------*;
481476     %global _iter;
481477     data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
481478     set _anfit(where=(_NAME_ eq 'OVERALL'));
MPRINT(EM_DIAGRAM):   set _anfit(where=(_NAME_ eq 'OVERALL'));
481479     retain _min 1e+64;
MPRINT(EM_DIAGRAM):   retain _min 1e+64;
481480     if _VMISC_ < _min then do;
MPRINT(EM_DIAGRAM):   if _VMISC_ < _min then do;
481481     _min = _VMISC_;
MPRINT(EM_DIAGRAM):   _min = _VMISC_;
481482     call symput('_iter',put(_ITER_, 6.));
MPRINT(EM_DIAGRAM):   call symput('_iter',put(_ITER_, 6.));
481483     end;
MPRINT(EM_DIAGRAM):   end;
481484     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 12 observations read from the data set WORK._ANFIT.
      WHERE _NAME_='OVERALL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
481485     *;
 
481486     data EMWS8.AutoNeural32_ESTDS;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural32_ESTDS;
481487     set _anest;
MPRINT(EM_DIAGRAM):   set _anest;
481488     if _ITER_ eq 0 then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 0 then do;
481489     output;
MPRINT(EM_DIAGRAM):   output;
481490     stop;
MPRINT(EM_DIAGRAM):   stop;
481491     end;
MPRINT(EM_DIAGRAM):   end;
481492     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK._ANEST.
NOTE: The data set EMWS8.AUTONEURAL32_ESTDS has 1 observations and 33 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
481493     *;
481494     data EMWS8.AutoNeural32_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural32_OUTFIT;
481495     set _anfit;
MPRINT(EM_DIAGRAM):   set _anfit;
481496     if _ITER_ eq 0 and _NAME_ eq "OVERALL" then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 0 and _NAME_ eq "OVERALL" then do;
481497     output;
MPRINT(EM_DIAGRAM):   output;
481498     stop;
MPRINT(EM_DIAGRAM):   stop;
481499     end;
MPRINT(EM_DIAGRAM):   end;
481500     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set WORK._ANFIT.
NOTE: The data set EMWS8.AUTONEURAL32_OUTFIT has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
481501     *;
MPRINT(EM_DIAGRAM):    *;
481502     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
481503     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_selectediteration_title
481503   ! , NOQUOTE, _VMISC_))";
MPRINT(EM_DIAGRAM):   title10 "Selected Iteration based on _VMISC_";
481504     proc print data=EMWS8.AutoNeural32_OUTFIT noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural32_OUTFIT noobs;
481505     var _iter_ _aic_ _averr_ _misc_
481506     _vaverr_ _vmisc_
481507     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
481508     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL32_OUTFIT.
NOTE: The PROCEDURE PRINT printed page 341.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
481509     title9;
MPRINT(EM_DIAGRAM):   title9;
481510     title10;
MPRINT(EM_DIAGRAM):   title10;
481511     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
481512     set EMWS8.AutoNeural32_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural32_OUTFIT;
481513     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
481514     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL32_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
481515     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
481516     set EMWS8.AutoNeural32_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural32_OUTFIT;
481517     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
481518     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL32_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
481519     * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
481520     ;
MPRINT(EM_DIAGRAM):   ;
481521     data EMWS8.AutoNeural32_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural32_OUTFIT;
481522     set EMWS8.AutoNeural32_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural32_OUTFIT;
481523     length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
481524     _func_ = "SOFTMAX";
MPRINT(EM_DIAGRAM):   _func_ = "SOFTMAX";
481525     _status_ = "reject";
MPRINT(EM_DIAGRAM):   _status_ = "reject";
481526     _step_ = "FUNNEL LAYERS 1";
MPRINT(EM_DIAGRAM):   _step_ = "FUNNEL LAYERS 1";
481527     _index_ = 1;
MPRINT(EM_DIAGRAM):   _index_ = 1;
481528     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL32_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL32_OUTFIT has 1 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
481529     data EMWS8.AutoNeural32_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural32_HISTORY;
481530     set EMWS8.AutoNeural32_HISTORY EMWS8.AutoNeural32_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural32_HISTORY EMWS8.AutoNeural32_OUTFIT;
481531     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set
      EMWS8.AUTONEURAL32_HISTORY.
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL32_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL32_HISTORY has 5 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
481532     *SEARCH: recall best estimates and fit;
MPRINT(EM_DIAGRAM):    *SEARCH: recall best estimates and fit;
481533     ;
MPRINT(EM_DIAGRAM):   ;
481534     data EMWS8.AutoNeural32_ESTDS;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural32_ESTDS;
481535     set EMWS8.AutoNeural32_BESTDS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural32_BESTDS;
481536     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL32_BESTDS.
NOTE: The data set EMWS8.AUTONEURAL32_ESTDS has 1 observations and 40 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
481537     data EMWS8.AutoNeural32_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural32_OUTFIT;
481538     set WORK.BFITDS_AUTONEUR_37IDK5U;
MPRINT(EM_DIAGRAM):   set WORK.BFITDS_AUTONEUR_37IDK5U;
481539     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      WORK.BFITDS_AUTONEUR_37IDK5U.
NOTE: The data set EMWS8.AUTONEURAL32_OUTFIT has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
481540     * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
481541     ;
MPRINT(EM_DIAGRAM):   ;
481542     data EMWS8.AutoNeural32_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural32_OUTFIT;
481543     set EMWS8.AutoNeural32_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural32_OUTFIT;
481544     length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
481545     _func_ = "LOGISTIC";
MPRINT(EM_DIAGRAM):   _func_ = "LOGISTIC";
481546     _status_ = "keep";
MPRINT(EM_DIAGRAM):   _status_ = "keep";
481547     _step_ = "FUNNEL LAYERS 1";
MPRINT(EM_DIAGRAM):   _step_ = "FUNNEL LAYERS 1";
481548     _index_ = 1;
MPRINT(EM_DIAGRAM):   _index_ = 1;
481549     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL32_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL32_OUTFIT has 1 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
481550     data EMWS8.AutoNeural32_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural32_HISTORY;
481551     set EMWS8.AutoNeural32_HISTORY EMWS8.AutoNeural32_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural32_HISTORY EMWS8.AutoNeural32_OUTFIT;
481552     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 5 observations read from the data set
      EMWS8.AUTONEURAL32_HISTORY.
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL32_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL32_HISTORY has 6 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
481553     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
481554     set EMWS8.AutoNeural32_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural32_OUTFIT;
481555     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
481556     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL32_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 40 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
481557     *;
MPRINT(EM_DIAGRAM):    *;
481558     proc neural data=EM_AutoNeural32 dmdbcat=WORK.AutoNeural32_DMDB
481559     validdata=EMWS8.Varsel_VALIDATE
481560     ;
MPRINT(EM_DIAGRAM):   proc neural data=EM_AutoNeural32
dmdbcat=WORK.AutoNeural32_DMDB validdata=EMWS8.Varsel_VALIDATE ;
481561     *;
MPRINT(EM_DIAGRAM):   *;
481562     nloptions noprint;
MPRINT(EM_DIAGRAM):   nloptions noprint;
481563     performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   input
481564     input %INTINPUTS / level=interval id=interval;
MPRINT(INTINPUTS):   AcceptedCmpTotal Mnt MntMeatProducts NumCatalogPurchases
RFMstat Recency
MPRINT(EM_DIAGRAM):   / level=interval id=interval;
481565     target DepVar / level=NOMINAL id=DepVar
481566     ;
MPRINT(EM_DIAGRAM):   target DepVar / level=NOMINAL id=DepVar ;
481567     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
481568     * Direct connection;
MPRINT(EM_DIAGRAM):   * Direct connection;
481569     ;
MPRINT(EM_DIAGRAM):   ;
481570     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
481571     connect interval DepVar;
MPRINT(EM_DIAGRAM):   connect interval DepVar;
481572     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
481573     * Layer #1;
MPRINT(EM_DIAGRAM):   * Layer #1;
481574     ;
MPRINT(EM_DIAGRAM):   ;
481575     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
481576     Hidden 3 / id = H1x1_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 3 / id = H1x1_ act=LOG;
481577     connect interval H1x1_;
MPRINT(EM_DIAGRAM):   connect interval H1x1_;
481578     connect H1x1_ DepVar;
MPRINT(EM_DIAGRAM):   connect H1x1_ DepVar;
481579     *;
MPRINT(EM_DIAGRAM):   *;
481580     netoptions ranscale = 1;
MPRINT(EM_DIAGRAM):   netoptions ranscale = 1;
481581     *;
MPRINT(EM_DIAGRAM):   *;
481582     initial
481583     inest = EMWS8.AutoNeural32_ESTDS bylabel;
MPRINT(EM_DIAGRAM):   initial inest = EMWS8.AutoNeural32_ESTDS bylabel;
NOTE: Variable _WARN_ is uninitialized.
NOTE: The data set EMWS8.AUTONEURAL32_ESTDS has 1 observations and 40 variables.
481584     ;
MPRINT(EM_DIAGRAM):   ;
481585     *;
MPRINT(EM_DIAGRAM):   *;
481586     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
481587     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_prelim_title  ,NOQUOTE,
481587   ! Search # 2 FUNNEL LAYERS trial # 1 : DIRECT : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 2 FUNNEL LAYERS trial # 1 : DIRECT :
Prelim";
481588     prelim 12 outest=_anpre pretime=74 preiter=25
MPRINT(EM_DIAGRAM):   prelim 12 outest=_anpre pretime=74 preiter=25 tech =
Default inest = EMWS8.AutoNeural32_ESTDS bylabel ;
NOTE:  Synchronizing the objectives and the Solution.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
The prelim will run only once. Use the randbias or randout option on the target
layer.
NOTE: The data set WORK._ANPRE has 3 observations and 46 variables.
NOTE: The data set EMWS8.AUTONEURAL32_ESTDS has 1 observations and 40 variables.
MPRINT(EM_DIAGRAM):   *;
481589     tech = Default
481590     inest = EMWS8.AutoNeural32_ESTDS bylabel
481591     ;
481592     *;
481593     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
481594     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_train_title  ,NOQUOTE,
481594   ! Search # 2 FUNNEL LAYERS trial # 1 : DIRECT : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 2 FUNNEL LAYERS trial # 1 : DIRECT :
Training";
MPRINT(EM_DIAGRAM):   train estiter=1 outest=_anest outfit=_anfit maxtime=897
maxiter=50 tech = Default;
NOTE: Convergence criterion (FCONV=0.0001) satisfied.
NOTE: The data set WORK._ANEST has 80 observations and 46 variables.
NOTE: The data set WORK._ANFIT has 96 observations and 36 variables.
MPRINT(EM_DIAGRAM):   ;
481595     train estiter=1 outest=_anest outfit=_anfit maxtime=897 maxiter=50
MPRINT(EM_DIAGRAM):   run;
481596     tech = Default;
481597     ;
481598     run;
 
NOTE: The data set WORK.EM_AUTONEURAL32 has 2374 observations and 7 variables.
NOTE: The data set EMWS8.VARSEL_VALIDATE has . observations and 46 variables.
NOTE: View EMWS8.VARSEL_VALIDATE.VIEW used (Total process time):
      real time           1.25 seconds
      cpu time            1.21 seconds
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: Closing the Neural Application.
NOTE: The PROCEDURE NEURAL printed page 342.
NOTE: PROCEDURE NEURAL used (Total process time):
      real time           1.26 seconds
      cpu time            1.23 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
481599     *;
481600     proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
MPRINT(EM_DIAGRAM):   proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
481601     var _iter_ _aic_ _averr_ _misc_
481602     _vaverr_ _vmisc_
481603     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
481604     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 48 observations read from the data set WORK._ANFIT.
      WHERE _name_='OVERALL';
NOTE: The PROCEDURE PRINT printed page 343.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Extract best iteration;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
481605     *------------------------------------------------------------*;
481606     * Extract best iteration;
481607     ;
481608     *------------------------------------------------------------*;
481609     %global _iter;
481610     data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
481611     set _anfit(where=(_NAME_ eq 'OVERALL'));
MPRINT(EM_DIAGRAM):   set _anfit(where=(_NAME_ eq 'OVERALL'));
481612     retain _min 1e+64;
MPRINT(EM_DIAGRAM):   retain _min 1e+64;
481613     if _VMISC_ < _min then do;
MPRINT(EM_DIAGRAM):   if _VMISC_ < _min then do;
481614     _min = _VMISC_;
MPRINT(EM_DIAGRAM):   _min = _VMISC_;
481615     call symput('_iter',put(_ITER_, 6.));
MPRINT(EM_DIAGRAM):   call symput('_iter',put(_ITER_, 6.));
481616     end;
MPRINT(EM_DIAGRAM):   end;
481617     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 48 observations read from the data set WORK._ANFIT.
      WHERE _NAME_='OVERALL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
481618     *;
 
481619     data EMWS8.AutoNeural32_ESTDS;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural32_ESTDS;
481620     set _anest;
MPRINT(EM_DIAGRAM):   set _anest;
481621     if _ITER_ eq 1 then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 1 then do;
481622     output;
MPRINT(EM_DIAGRAM):   output;
481623     stop;
MPRINT(EM_DIAGRAM):   stop;
481624     end;
MPRINT(EM_DIAGRAM):   end;
481625     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set WORK._ANEST.
NOTE: The data set EMWS8.AUTONEURAL32_ESTDS has 1 observations and 46 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
481626     *;
481627     data EMWS8.AutoNeural32_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural32_OUTFIT;
481628     set _anfit;
MPRINT(EM_DIAGRAM):   set _anfit;
481629     if _ITER_ eq 1 and _NAME_ eq "OVERALL" then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 1 and _NAME_ eq "OVERALL" then do;
481630     output;
MPRINT(EM_DIAGRAM):   output;
481631     stop;
MPRINT(EM_DIAGRAM):   stop;
481632     end;
MPRINT(EM_DIAGRAM):   end;
481633     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._ANFIT.
NOTE: The data set EMWS8.AUTONEURAL32_OUTFIT has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
481634     *;
MPRINT(EM_DIAGRAM):    *;
481635     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
481636     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_selectediteration_title
481636   ! , NOQUOTE, _VMISC_))";
MPRINT(EM_DIAGRAM):   title10 "Selected Iteration based on _VMISC_";
481637     proc print data=EMWS8.AutoNeural32_OUTFIT noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural32_OUTFIT noobs;
481638     var _iter_ _aic_ _averr_ _misc_
481639     _vaverr_ _vmisc_
481640     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
481641     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL32_OUTFIT.
NOTE: The PROCEDURE PRINT printed page 344.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
481642     title9;
MPRINT(EM_DIAGRAM):   title9;
481643     title10;
MPRINT(EM_DIAGRAM):   title10;
481644     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
481645     set EMWS8.AutoNeural32_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural32_OUTFIT;
481646     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
481647     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL32_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
481648     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
481649     set EMWS8.AutoNeural32_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural32_OUTFIT;
481650     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
481651     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL32_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
481652     *SEARCH: copy estimates and fit to best buffer;
MPRINT(EM_DIAGRAM):    *SEARCH: copy estimates and fit to best buffer;
481653     ;
MPRINT(EM_DIAGRAM):   ;
481654     data WORK.SAVEDS_AUTONEUR_37IDK5U;
MPRINT(EM_DIAGRAM):   data WORK.SAVEDS_AUTONEUR_37IDK5U;
481655     set EMWS8.AutoNeural32_ESTDS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural32_ESTDS;
481656     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.AUTONEURAL32_ESTDS.
NOTE: The data set WORK.SAVEDS_AUTONEUR_37IDK5U has 1 observations and 46
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
481657     data EMWS8.AutoNeural32_BESTDS;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural32_BESTDS;
481658     set EMWS8.AutoNeural32_ESTDS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural32_ESTDS;
481659     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.AUTONEURAL32_ESTDS.
NOTE: The data set EMWS8.AUTONEURAL32_BESTDS has 1 observations and 46
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
481660     data WORK.BFITDS_AUTONEUR_37IDK5U;
MPRINT(EM_DIAGRAM):   data WORK.BFITDS_AUTONEUR_37IDK5U;
481661     set EMWS8.AutoNeural32_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural32_OUTFIT;
481662     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL32_OUTFIT.
NOTE: The data set WORK.BFITDS_AUTONEUR_37IDK5U has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
481663     * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
481664     ;
MPRINT(EM_DIAGRAM):   ;
481665     data EMWS8.AutoNeural32_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural32_OUTFIT;
481666     set EMWS8.AutoNeural32_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural32_OUTFIT;
481667     length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
481668     _func_ = "DIRECT";
MPRINT(EM_DIAGRAM):   _func_ = "DIRECT";
481669     _status_ = "candidate";
MPRINT(EM_DIAGRAM):   _status_ = "candidate";
481670     _step_ = "FUNNEL LAYERS 2";
MPRINT(EM_DIAGRAM):   _step_ = "FUNNEL LAYERS 2";
481671     _index_ = 2;
MPRINT(EM_DIAGRAM):   _index_ = 2;
481672     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL32_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL32_OUTFIT has 1 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
481673     data EMWS8.AutoNeural32_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural32_HISTORY;
481674     set EMWS8.AutoNeural32_HISTORY EMWS8.AutoNeural32_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural32_HISTORY EMWS8.AutoNeural32_OUTFIT;
481675     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 6 observations read from the data set
      EMWS8.AUTONEURAL32_HISTORY.
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL32_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL32_HISTORY has 7 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
481676     * SEARCH: recall starting estimates;
MPRINT(EM_DIAGRAM):    * SEARCH: recall starting estimates;
481677     ;
MPRINT(EM_DIAGRAM):   ;
481678     data EMWS8.AutoNeural32_ESTDS;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural32_ESTDS;
481679     set EMWS8.AutoNeural32_BESTDS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural32_BESTDS;
481680     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL32_BESTDS.
NOTE: The data set EMWS8.AUTONEURAL32_ESTDS has 1 observations and 46 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
481681     *;
MPRINT(EM_DIAGRAM):    *;
481682     proc neural data=EM_AutoNeural32 dmdbcat=WORK.AutoNeural32_DMDB
481683     validdata=EMWS8.Varsel_VALIDATE
481684     ;
MPRINT(EM_DIAGRAM):   proc neural data=EM_AutoNeural32
dmdbcat=WORK.AutoNeural32_DMDB validdata=EMWS8.Varsel_VALIDATE ;
481685     *;
MPRINT(EM_DIAGRAM):   *;
481686     nloptions noprint;
MPRINT(EM_DIAGRAM):   nloptions noprint;
481687     performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   input
481688     input %INTINPUTS / level=interval id=interval;
MPRINT(INTINPUTS):   AcceptedCmpTotal Mnt MntMeatProducts NumCatalogPurchases
RFMstat Recency
MPRINT(EM_DIAGRAM):   / level=interval id=interval;
481689     target DepVar / level=NOMINAL id=DepVar
481690     ;
MPRINT(EM_DIAGRAM):   target DepVar / level=NOMINAL id=DepVar ;
481691     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
481692     * Layer #1;
MPRINT(EM_DIAGRAM):   * Layer #1;
481693     ;
MPRINT(EM_DIAGRAM):   ;
481694     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
481695     Hidden 3 / id = H1x1_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 3 / id = H1x1_ act=LOG;
481696     connect interval H1x1_;
MPRINT(EM_DIAGRAM):   connect interval H1x1_;
481697     Hidden 3 / id = H1x2_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 3 / id = H1x2_ act=LOG;
481698     connect interval H1x2_;
MPRINT(EM_DIAGRAM):   connect interval H1x2_;
481699     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
481700     * Layer #2;
MPRINT(EM_DIAGRAM):   * Layer #2;
481701     ;
MPRINT(EM_DIAGRAM):   ;
481702     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
481703     Hidden 3 / id = H2x1_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 3 / id = H2x1_ act=LOG;
481704     connect H1x1_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x1_ H2x1_;
481705     connect H1x2_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x2_ H2x1_;
481706     connect H2x1_ DepVar;
MPRINT(EM_DIAGRAM):   connect H2x1_ DepVar;
481707     *;
MPRINT(EM_DIAGRAM):   *;
481708     netoptions ranscale = 1;
MPRINT(EM_DIAGRAM):   netoptions ranscale = 1;
481709     *;
MPRINT(EM_DIAGRAM):   *;
481710     initial
481711     inest = EMWS8.AutoNeural32_ESTDS bylabel;
MPRINT(EM_DIAGRAM):   initial inest = EMWS8.AutoNeural32_ESTDS bylabel;
NOTE: Variable _WARN_ is uninitialized.
NOTE: The data set EMWS8.AUTONEURAL32_ESTDS has 1 observations and 46 variables.
481712     ;
MPRINT(EM_DIAGRAM):   ;
481713     *;
MPRINT(EM_DIAGRAM):   *;
481714     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
481715     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_prelim_title  ,NOQUOTE,
481715   ! Search # 2 FUNNEL LAYERS trial # 2 : LOGISTIC : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 2 FUNNEL LAYERS trial # 2 : LOGISTIC :
Prelim";
481716     prelim 15 outest=_anpre pretime=59 preiter=25
MPRINT(EM_DIAGRAM):   prelim 15 outest=_anpre pretime=59 preiter=25 tech =
Default inest = EMWS8.AutoNeural32_ESTDS bylabel ;
NOTE:  Synchronizing the objectives and the Solution.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANPRE has 31 observations and 82 variables.
NOTE: The data set EMWS8.AUTONEURAL32_ESTDS has 1 observations and 46 variables.
MPRINT(EM_DIAGRAM):   *;
481717     tech = Default
481718     inest = EMWS8.AutoNeural32_ESTDS bylabel
481719     ;
481720     *;
481721     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
481722     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_train_title  ,NOQUOTE,
481722   ! Search # 2 FUNNEL LAYERS trial # 2 : LOGISTIC : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 2 FUNNEL LAYERS trial # 2 : LOGISTIC :
Training";
MPRINT(EM_DIAGRAM):   train estiter=1 outest=_anest outfit=_anfit maxtime=896
maxiter=50 tech = Default;
WARNING: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 50 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANEST has 120 observations and 82 variables.
NOTE: The data set WORK._ANFIT has 104 observations and 36 variables.
MPRINT(EM_DIAGRAM):   ;
481723     train estiter=1 outest=_anest outfit=_anfit maxtime=896 maxiter=50
MPRINT(EM_DIAGRAM):   run;
481724     tech = Default;
481725     ;
481726     run;
 
NOTE: The data set WORK.EM_AUTONEURAL32 has 2374 observations and 7 variables.
NOTE: The data set EMWS8.VARSEL_VALIDATE has . observations and 46 variables.
NOTE: View EMWS8.VARSEL_VALIDATE.VIEW used (Total process time):
      real time           17.48 seconds
      cpu time            17.40 seconds
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: Closing the Neural Application.
NOTE: The PROCEDURE NEURAL printed page 345.
NOTE: PROCEDURE NEURAL used (Total process time):
      real time           17.48 seconds
      cpu time            17.40 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
481727     *;
481728     proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
MPRINT(EM_DIAGRAM):   proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
481729     var _iter_ _aic_ _averr_ _misc_
481730     _vaverr_ _vmisc_
481731     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
481732     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _name_='OVERALL';
NOTE: The PROCEDURE PRINT printed page 346.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Extract best iteration;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
481733     *------------------------------------------------------------*;
481734     * Extract best iteration;
481735     ;
481736     *------------------------------------------------------------*;
481737     %global _iter;
481738     data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
481739     set _anfit(where=(_NAME_ eq 'OVERALL'));
MPRINT(EM_DIAGRAM):   set _anfit(where=(_NAME_ eq 'OVERALL'));
481740     retain _min 1e+64;
MPRINT(EM_DIAGRAM):   retain _min 1e+64;
481741     if _VMISC_ < _min then do;
MPRINT(EM_DIAGRAM):   if _VMISC_ < _min then do;
481742     _min = _VMISC_;
MPRINT(EM_DIAGRAM):   _min = _VMISC_;
481743     call symput('_iter',put(_ITER_, 6.));
MPRINT(EM_DIAGRAM):   call symput('_iter',put(_ITER_, 6.));
481744     end;
MPRINT(EM_DIAGRAM):   end;
481745     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _NAME_='OVERALL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
481746     *;
 
481747     data EMWS8.AutoNeural32_ESTDS;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural32_ESTDS;
481748     set _anest;
MPRINT(EM_DIAGRAM):   set _anest;
481749     if _ITER_ eq 5 then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 5 then do;
481750     output;
MPRINT(EM_DIAGRAM):   output;
481751     stop;
MPRINT(EM_DIAGRAM):   stop;
481752     end;
MPRINT(EM_DIAGRAM):   end;
481753     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 6 observations read from the data set WORK._ANEST.
NOTE: The data set EMWS8.AUTONEURAL32_ESTDS has 1 observations and 82 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
481754     *;
481755     data EMWS8.AutoNeural32_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural32_OUTFIT;
481756     set _anfit;
MPRINT(EM_DIAGRAM):   set _anfit;
481757     if _ITER_ eq 5 and _NAME_ eq "OVERALL" then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 5 and _NAME_ eq "OVERALL" then do;
481758     output;
MPRINT(EM_DIAGRAM):   output;
481759     stop;
MPRINT(EM_DIAGRAM):   stop;
481760     end;
MPRINT(EM_DIAGRAM):   end;
481761     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 12 observations read from the data set WORK._ANFIT.
NOTE: The data set EMWS8.AUTONEURAL32_OUTFIT has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
481762     *;
MPRINT(EM_DIAGRAM):    *;
481763     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
481764     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_selectediteration_title
481764   ! , NOQUOTE, _VMISC_))";
MPRINT(EM_DIAGRAM):   title10 "Selected Iteration based on _VMISC_";
481765     proc print data=EMWS8.AutoNeural32_OUTFIT noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural32_OUTFIT noobs;
481766     var _iter_ _aic_ _averr_ _misc_
481767     _vaverr_ _vmisc_
481768     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
481769     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL32_OUTFIT.
NOTE: The PROCEDURE PRINT printed page 347.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
481770     title9;
MPRINT(EM_DIAGRAM):   title9;
481771     title10;
MPRINT(EM_DIAGRAM):   title10;
481772     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
481773     set EMWS8.AutoNeural32_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural32_OUTFIT;
481774     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
481775     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL32_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
481776     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
481777     set EMWS8.AutoNeural32_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural32_OUTFIT;
481778     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
481779     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL32_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
481780     * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
481781     ;
MPRINT(EM_DIAGRAM):   ;
481782     data EMWS8.AutoNeural32_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural32_OUTFIT;
481783     set EMWS8.AutoNeural32_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural32_OUTFIT;
481784     length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
481785     _func_ = "LOGISTIC";
MPRINT(EM_DIAGRAM):   _func_ = "LOGISTIC";
481786     _status_ = "reject";
MPRINT(EM_DIAGRAM):   _status_ = "reject";
481787     _step_ = "FUNNEL LAYERS 2";
MPRINT(EM_DIAGRAM):   _step_ = "FUNNEL LAYERS 2";
481788     _index_ = 2;
MPRINT(EM_DIAGRAM):   _index_ = 2;
481789     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL32_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL32_OUTFIT has 1 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
481790     data EMWS8.AutoNeural32_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural32_HISTORY;
481791     set EMWS8.AutoNeural32_HISTORY EMWS8.AutoNeural32_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural32_HISTORY EMWS8.AutoNeural32_OUTFIT;
481792     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 7 observations read from the data set
      EMWS8.AUTONEURAL32_HISTORY.
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL32_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL32_HISTORY has 8 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
481793     * SEARCH: recall starting estimates;
MPRINT(EM_DIAGRAM):    * SEARCH: recall starting estimates;
481794     ;
MPRINT(EM_DIAGRAM):   ;
481795     data EMWS8.AutoNeural32_ESTDS;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural32_ESTDS;
481796     set EMWS8.AutoNeural32_BESTDS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural32_BESTDS;
481797     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL32_BESTDS.
NOTE: The data set EMWS8.AUTONEURAL32_ESTDS has 1 observations and 46 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
481798     *;
MPRINT(EM_DIAGRAM):    *;
481799     proc neural data=EM_AutoNeural32 dmdbcat=WORK.AutoNeural32_DMDB
481800     validdata=EMWS8.Varsel_VALIDATE
481801     ;
MPRINT(EM_DIAGRAM):   proc neural data=EM_AutoNeural32
dmdbcat=WORK.AutoNeural32_DMDB validdata=EMWS8.Varsel_VALIDATE ;
481802     *;
MPRINT(EM_DIAGRAM):   *;
481803     nloptions noprint;
MPRINT(EM_DIAGRAM):   nloptions noprint;
481804     performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   input
481805     input %INTINPUTS / level=interval id=interval;
MPRINT(INTINPUTS):   AcceptedCmpTotal Mnt MntMeatProducts NumCatalogPurchases
RFMstat Recency
MPRINT(EM_DIAGRAM):   / level=interval id=interval;
481806     target DepVar / level=NOMINAL id=DepVar
481807     ;
MPRINT(EM_DIAGRAM):   target DepVar / level=NOMINAL id=DepVar ;
481808     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
481809     * Layer #1;
MPRINT(EM_DIAGRAM):   * Layer #1;
481810     ;
MPRINT(EM_DIAGRAM):   ;
481811     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
481812     Hidden 3 / id = H1x1_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 3 / id = H1x1_ act=LOG;
481813     connect interval H1x1_;
MPRINT(EM_DIAGRAM):   connect interval H1x1_;
481814     Hidden 3 / id = H1x2_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 3 / id = H1x2_ act=LOG;
481815     connect interval H1x2_;
MPRINT(EM_DIAGRAM):   connect interval H1x2_;
481816     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
481817     * Layer #2;
MPRINT(EM_DIAGRAM):   * Layer #2;
481818     ;
MPRINT(EM_DIAGRAM):   ;
481819     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
481820     Hidden 3 / id = H2x1_ act=SINE;
MPRINT(EM_DIAGRAM):   Hidden 3 / id = H2x1_ act=SINE;
481821     connect H1x1_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x1_ H2x1_;
481822     connect H1x2_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x2_ H2x1_;
481823     connect H2x1_ DepVar;
MPRINT(EM_DIAGRAM):   connect H2x1_ DepVar;
481824     *;
MPRINT(EM_DIAGRAM):   *;
481825     netoptions ranscale = 1;
MPRINT(EM_DIAGRAM):   netoptions ranscale = 1;
481826     *;
MPRINT(EM_DIAGRAM):   *;
481827     initial
481828     inest = EMWS8.AutoNeural32_ESTDS bylabel;
MPRINT(EM_DIAGRAM):   initial inest = EMWS8.AutoNeural32_ESTDS bylabel;
NOTE: Variable _WARN_ is uninitialized.
NOTE: The data set EMWS8.AUTONEURAL32_ESTDS has 1 observations and 46 variables.
481829     ;
MPRINT(EM_DIAGRAM):   ;
481830     *;
MPRINT(EM_DIAGRAM):   *;
481831     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
481832     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_prelim_title  ,NOQUOTE,
481832   ! Search # 2 FUNNEL LAYERS trial # 3 : SINE : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 2 FUNNEL LAYERS trial # 3 : SINE :
Prelim";
481833     prelim 15 outest=_anpre pretime=59 preiter=25
MPRINT(EM_DIAGRAM):   prelim 15 outest=_anpre pretime=59 preiter=25 tech =
Default inest = EMWS8.AutoNeural32_ESTDS bylabel ;
NOTE:  Synchronizing the objectives and the Solution.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANPRE has 31 observations and 82 variables.
NOTE: The data set EMWS8.AUTONEURAL32_ESTDS has 1 observations and 46 variables.
MPRINT(EM_DIAGRAM):   *;
481834     tech = Default
481835     inest = EMWS8.AutoNeural32_ESTDS bylabel
481836     ;
481837     *;
481838     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
481839     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_train_title  ,NOQUOTE,
481839   ! Search # 2 FUNNEL LAYERS trial # 3 : SINE : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 2 FUNNEL LAYERS trial # 3 : SINE :
Training";
MPRINT(EM_DIAGRAM):   train estiter=1 outest=_anest outfit=_anfit maxtime=892
maxiter=50 tech = Default;
WARNING: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 50 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANEST has 120 observations and 82 variables.
NOTE: The data set WORK._ANFIT has 104 observations and 36 variables.
MPRINT(EM_DIAGRAM):   ;
481840     train estiter=1 outest=_anest outfit=_anfit maxtime=892 maxiter=50
MPRINT(EM_DIAGRAM):   run;
481841     tech = Default;
481842     ;
481843     run;
 
NOTE: The data set WORK.EM_AUTONEURAL32 has 2374 observations and 7 variables.
NOTE: The data set EMWS8.VARSEL_VALIDATE has . observations and 46 variables.
NOTE: View EMWS8.VARSEL_VALIDATE.VIEW used (Total process time):
      real time           17.76 seconds
      cpu time            17.67 seconds
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: Closing the Neural Application.
NOTE: The PROCEDURE NEURAL printed page 348.
NOTE: PROCEDURE NEURAL used (Total process time):
      real time           17.76 seconds
      cpu time            17.67 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
481844     *;
481845     proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
MPRINT(EM_DIAGRAM):   proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
481846     var _iter_ _aic_ _averr_ _misc_
481847     _vaverr_ _vmisc_
481848     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
481849     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _name_='OVERALL';
NOTE: The PROCEDURE PRINT printed page 349.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Extract best iteration;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
481850     *------------------------------------------------------------*;
481851     * Extract best iteration;
481852     ;
481853     *------------------------------------------------------------*;
481854     %global _iter;
481855     data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
481856     set _anfit(where=(_NAME_ eq 'OVERALL'));
MPRINT(EM_DIAGRAM):   set _anfit(where=(_NAME_ eq 'OVERALL'));
481857     retain _min 1e+64;
MPRINT(EM_DIAGRAM):   retain _min 1e+64;
481858     if _VMISC_ < _min then do;
MPRINT(EM_DIAGRAM):   if _VMISC_ < _min then do;
481859     _min = _VMISC_;
MPRINT(EM_DIAGRAM):   _min = _VMISC_;
481860     call symput('_iter',put(_ITER_, 6.));
MPRINT(EM_DIAGRAM):   call symput('_iter',put(_ITER_, 6.));
481861     end;
MPRINT(EM_DIAGRAM):   end;
481862     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _NAME_='OVERALL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
481863     *;
 
481864     data EMWS8.AutoNeural32_ESTDS;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural32_ESTDS;
481865     set _anest;
MPRINT(EM_DIAGRAM):   set _anest;
481866     if _ITER_ eq 0 then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 0 then do;
481867     output;
MPRINT(EM_DIAGRAM):   output;
481868     stop;
MPRINT(EM_DIAGRAM):   stop;
481869     end;
MPRINT(EM_DIAGRAM):   end;
481870     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK._ANEST.
NOTE: The data set EMWS8.AUTONEURAL32_ESTDS has 1 observations and 82 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
481871     *;
481872     data EMWS8.AutoNeural32_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural32_OUTFIT;
481873     set _anfit;
MPRINT(EM_DIAGRAM):   set _anfit;
481874     if _ITER_ eq 0 and _NAME_ eq "OVERALL" then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 0 and _NAME_ eq "OVERALL" then do;
481875     output;
MPRINT(EM_DIAGRAM):   output;
481876     stop;
MPRINT(EM_DIAGRAM):   stop;
481877     end;
MPRINT(EM_DIAGRAM):   end;
481878     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set WORK._ANFIT.
NOTE: The data set EMWS8.AUTONEURAL32_OUTFIT has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
481879     *;
MPRINT(EM_DIAGRAM):    *;
481880     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
481881     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_selectediteration_title
481881   ! , NOQUOTE, _VMISC_))";
MPRINT(EM_DIAGRAM):   title10 "Selected Iteration based on _VMISC_";
481882     proc print data=EMWS8.AutoNeural32_OUTFIT noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural32_OUTFIT noobs;
481883     var _iter_ _aic_ _averr_ _misc_
481884     _vaverr_ _vmisc_
481885     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
481886     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL32_OUTFIT.
NOTE: The PROCEDURE PRINT printed page 350.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
481887     title9;
MPRINT(EM_DIAGRAM):   title9;
481888     title10;
MPRINT(EM_DIAGRAM):   title10;
481889     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
481890     set EMWS8.AutoNeural32_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural32_OUTFIT;
481891     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
481892     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL32_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
481893     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
481894     set EMWS8.AutoNeural32_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural32_OUTFIT;
481895     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
481896     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL32_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
481897     * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
481898     ;
MPRINT(EM_DIAGRAM):   ;
481899     data EMWS8.AutoNeural32_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural32_OUTFIT;
481900     set EMWS8.AutoNeural32_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural32_OUTFIT;
481901     length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
481902     _func_ = "SINE";
MPRINT(EM_DIAGRAM):   _func_ = "SINE";
481903     _status_ = "reject";
MPRINT(EM_DIAGRAM):   _status_ = "reject";
481904     _step_ = "FUNNEL LAYERS 2";
MPRINT(EM_DIAGRAM):   _step_ = "FUNNEL LAYERS 2";
481905     _index_ = 2;
MPRINT(EM_DIAGRAM):   _index_ = 2;
481906     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL32_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL32_OUTFIT has 1 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
481907     data EMWS8.AutoNeural32_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural32_HISTORY;
481908     set EMWS8.AutoNeural32_HISTORY EMWS8.AutoNeural32_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural32_HISTORY EMWS8.AutoNeural32_OUTFIT;
481909     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set
      EMWS8.AUTONEURAL32_HISTORY.
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL32_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL32_HISTORY has 9 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
481910     * SEARCH: recall starting estimates;
MPRINT(EM_DIAGRAM):    * SEARCH: recall starting estimates;
481911     ;
MPRINT(EM_DIAGRAM):   ;
481912     data EMWS8.AutoNeural32_ESTDS;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural32_ESTDS;
481913     set EMWS8.AutoNeural32_BESTDS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural32_BESTDS;
481914     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL32_BESTDS.
NOTE: The data set EMWS8.AUTONEURAL32_ESTDS has 1 observations and 46 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
481915     *;
MPRINT(EM_DIAGRAM):    *;
481916     proc neural data=EM_AutoNeural32 dmdbcat=WORK.AutoNeural32_DMDB
481917     validdata=EMWS8.Varsel_VALIDATE
481918     ;
MPRINT(EM_DIAGRAM):   proc neural data=EM_AutoNeural32
dmdbcat=WORK.AutoNeural32_DMDB validdata=EMWS8.Varsel_VALIDATE ;
481919     *;
MPRINT(EM_DIAGRAM):   *;
481920     nloptions noprint;
MPRINT(EM_DIAGRAM):   nloptions noprint;
481921     performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   input
481922     input %INTINPUTS / level=interval id=interval;
MPRINT(INTINPUTS):   AcceptedCmpTotal Mnt MntMeatProducts NumCatalogPurchases
RFMstat Recency
MPRINT(EM_DIAGRAM):   / level=interval id=interval;
481923     target DepVar / level=NOMINAL id=DepVar
481924     ;
MPRINT(EM_DIAGRAM):   target DepVar / level=NOMINAL id=DepVar ;
481925     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
481926     * Layer #1;
MPRINT(EM_DIAGRAM):   * Layer #1;
481927     ;
MPRINT(EM_DIAGRAM):   ;
481928     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
481929     Hidden 3 / id = H1x1_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 3 / id = H1x1_ act=LOG;
481930     connect interval H1x1_;
MPRINT(EM_DIAGRAM):   connect interval H1x1_;
481931     Hidden 3 / id = H1x2_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 3 / id = H1x2_ act=LOG;
481932     connect interval H1x2_;
MPRINT(EM_DIAGRAM):   connect interval H1x2_;
481933     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
481934     * Layer #2;
MPRINT(EM_DIAGRAM):   * Layer #2;
481935     ;
MPRINT(EM_DIAGRAM):   ;
481936     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
481937     Hidden 3 / id = H2x1_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 3 / id = H2x1_ act=SOFTMAX;
481938     connect H1x1_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x1_ H2x1_;
481939     connect H1x2_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x2_ H2x1_;
481940     connect H2x1_ DepVar;
MPRINT(EM_DIAGRAM):   connect H2x1_ DepVar;
481941     *;
MPRINT(EM_DIAGRAM):   *;
481942     netoptions ranscale = 1;
MPRINT(EM_DIAGRAM):   netoptions ranscale = 1;
481943     *;
MPRINT(EM_DIAGRAM):   *;
481944     initial
481945     inest = EMWS8.AutoNeural32_ESTDS bylabel;
MPRINT(EM_DIAGRAM):   initial inest = EMWS8.AutoNeural32_ESTDS bylabel;
NOTE: Variable _WARN_ is uninitialized.
NOTE: The data set EMWS8.AUTONEURAL32_ESTDS has 1 observations and 46 variables.
481946     ;
MPRINT(EM_DIAGRAM):   ;
481947     *;
MPRINT(EM_DIAGRAM):   *;
481948     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
481949     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_prelim_title  ,NOQUOTE,
481949   ! Search # 2 FUNNEL LAYERS trial # 4 : SOFTMAX : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 2 FUNNEL LAYERS trial # 4 : SOFTMAX :
Prelim";
481950     prelim 15 outest=_anpre pretime=59 preiter=25
MPRINT(EM_DIAGRAM):   prelim 15 outest=_anpre pretime=59 preiter=25 tech =
Default inest = EMWS8.AutoNeural32_ESTDS bylabel ;
NOTE:  Synchronizing the objectives and the Solution.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANPRE has 31 observations and 75 variables.
NOTE: The data set EMWS8.AUTONEURAL32_ESTDS has 1 observations and 46 variables.
MPRINT(EM_DIAGRAM):   *;
481951     tech = Default
481952     inest = EMWS8.AutoNeural32_ESTDS bylabel
481953     ;
481954     *;
481955     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
481956     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_train_title  ,NOQUOTE,
481956   ! Search # 2 FUNNEL LAYERS trial # 4 : SOFTMAX : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 2 FUNNEL LAYERS trial # 4 : SOFTMAX :
Training";
MPRINT(EM_DIAGRAM):   train estiter=1 outest=_anest outfit=_anfit maxtime=887
maxiter=50 tech = Default;
WARNING: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 50 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANEST has 113 observations and 75 variables.
NOTE: The data set WORK._ANFIT has 104 observations and 36 variables.
MPRINT(EM_DIAGRAM):   ;
481957     train estiter=1 outest=_anest outfit=_anfit maxtime=887 maxiter=50
MPRINT(EM_DIAGRAM):   run;
481958     tech = Default;
481959     ;
481960     run;
 
NOTE: The data set WORK.EM_AUTONEURAL32 has 2374 observations and 7 variables.
NOTE: The data set EMWS8.VARSEL_VALIDATE has . observations and 46 variables.
NOTE: View EMWS8.VARSEL_VALIDATE.VIEW used (Total process time):
      real time           15.66 seconds
      cpu time            15.52 seconds
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: Closing the Neural Application.
NOTE: The PROCEDURE NEURAL printed page 351.
NOTE: PROCEDURE NEURAL used (Total process time):
      real time           15.67 seconds
      cpu time            15.52 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
481961     *;
481962     proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
MPRINT(EM_DIAGRAM):   proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
481963     var _iter_ _aic_ _averr_ _misc_
481964     _vaverr_ _vmisc_
481965     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
481966     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _name_='OVERALL';
NOTE: The PROCEDURE PRINT printed page 352.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Extract best iteration;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
481967     *------------------------------------------------------------*;
481968     * Extract best iteration;
481969     ;
481970     *------------------------------------------------------------*;
481971     %global _iter;
481972     data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
481973     set _anfit(where=(_NAME_ eq 'OVERALL'));
MPRINT(EM_DIAGRAM):   set _anfit(where=(_NAME_ eq 'OVERALL'));
481974     retain _min 1e+64;
MPRINT(EM_DIAGRAM):   retain _min 1e+64;
481975     if _VMISC_ < _min then do;
MPRINT(EM_DIAGRAM):   if _VMISC_ < _min then do;
481976     _min = _VMISC_;
MPRINT(EM_DIAGRAM):   _min = _VMISC_;
481977     call symput('_iter',put(_ITER_, 6.));
MPRINT(EM_DIAGRAM):   call symput('_iter',put(_ITER_, 6.));
481978     end;
MPRINT(EM_DIAGRAM):   end;
481979     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _NAME_='OVERALL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
481980     *;
 
481981     data EMWS8.AutoNeural32_ESTDS;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural32_ESTDS;
481982     set _anest;
MPRINT(EM_DIAGRAM):   set _anest;
481983     if _ITER_ eq 3 then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 3 then do;
481984     output;
MPRINT(EM_DIAGRAM):   output;
481985     stop;
MPRINT(EM_DIAGRAM):   stop;
481986     end;
MPRINT(EM_DIAGRAM):   end;
481987     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._ANEST.
NOTE: The data set EMWS8.AUTONEURAL32_ESTDS has 1 observations and 75 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
481988     *;
481989     data EMWS8.AutoNeural32_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural32_OUTFIT;
481990     set _anfit;
MPRINT(EM_DIAGRAM):   set _anfit;
481991     if _ITER_ eq 3 and _NAME_ eq "OVERALL" then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 3 and _NAME_ eq "OVERALL" then do;
481992     output;
MPRINT(EM_DIAGRAM):   output;
481993     stop;
MPRINT(EM_DIAGRAM):   stop;
481994     end;
MPRINT(EM_DIAGRAM):   end;
481995     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set WORK._ANFIT.
NOTE: The data set EMWS8.AUTONEURAL32_OUTFIT has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
481996     *;
MPRINT(EM_DIAGRAM):    *;
481997     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
481998     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_selectediteration_title
481998   ! , NOQUOTE, _VMISC_))";
MPRINT(EM_DIAGRAM):   title10 "Selected Iteration based on _VMISC_";
481999     proc print data=EMWS8.AutoNeural32_OUTFIT noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural32_OUTFIT noobs;
482000     var _iter_ _aic_ _averr_ _misc_
482001     _vaverr_ _vmisc_
482002     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
482003     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL32_OUTFIT.
NOTE: The PROCEDURE PRINT printed page 353.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
482004     title9;
MPRINT(EM_DIAGRAM):   title9;
482005     title10;
MPRINT(EM_DIAGRAM):   title10;
482006     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
482007     set EMWS8.AutoNeural32_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural32_OUTFIT;
482008     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
482009     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL32_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
482010     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
482011     set EMWS8.AutoNeural32_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural32_OUTFIT;
482012     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
482013     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL32_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
482014     * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
482015     ;
MPRINT(EM_DIAGRAM):   ;
482016     data EMWS8.AutoNeural32_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural32_OUTFIT;
482017     set EMWS8.AutoNeural32_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural32_OUTFIT;
482018     length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
482019     _func_ = "SOFTMAX";
MPRINT(EM_DIAGRAM):   _func_ = "SOFTMAX";
482020     _status_ = "reject";
MPRINT(EM_DIAGRAM):   _status_ = "reject";
482021     _step_ = "FUNNEL LAYERS 2";
MPRINT(EM_DIAGRAM):   _step_ = "FUNNEL LAYERS 2";
482022     _index_ = 2;
MPRINT(EM_DIAGRAM):   _index_ = 2;
482023     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL32_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL32_OUTFIT has 1 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
482024     data EMWS8.AutoNeural32_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural32_HISTORY;
482025     set EMWS8.AutoNeural32_HISTORY EMWS8.AutoNeural32_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural32_HISTORY EMWS8.AutoNeural32_OUTFIT;
482026     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 9 observations read from the data set
      EMWS8.AUTONEURAL32_HISTORY.
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL32_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL32_HISTORY has 10 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
482027     *SEARCH: recall best estimates and fit;
MPRINT(EM_DIAGRAM):    *SEARCH: recall best estimates and fit;
482028     ;
MPRINT(EM_DIAGRAM):   ;
482029     data EMWS8.AutoNeural32_ESTDS;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural32_ESTDS;
482030     set EMWS8.AutoNeural32_BESTDS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural32_BESTDS;
482031     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL32_BESTDS.
NOTE: The data set EMWS8.AUTONEURAL32_ESTDS has 1 observations and 46 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
482032     data EMWS8.AutoNeural32_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural32_OUTFIT;
482033     set WORK.BFITDS_AUTONEUR_37IDK5U;
MPRINT(EM_DIAGRAM):   set WORK.BFITDS_AUTONEUR_37IDK5U;
482034     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      WORK.BFITDS_AUTONEUR_37IDK5U.
NOTE: The data set EMWS8.AUTONEURAL32_OUTFIT has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
482035     * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
482036     ;
MPRINT(EM_DIAGRAM):   ;
482037     data EMWS8.AutoNeural32_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural32_OUTFIT;
482038     set EMWS8.AutoNeural32_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural32_OUTFIT;
482039     length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
482040     _func_ = "DIRECT";
MPRINT(EM_DIAGRAM):   _func_ = "DIRECT";
482041     _status_ = "keep";
MPRINT(EM_DIAGRAM):   _status_ = "keep";
482042     _step_ = "FUNNEL LAYERS 2";
MPRINT(EM_DIAGRAM):   _step_ = "FUNNEL LAYERS 2";
482043     _index_ = 2;
MPRINT(EM_DIAGRAM):   _index_ = 2;
482044     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL32_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL32_OUTFIT has 1 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
482045     data EMWS8.AutoNeural32_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural32_HISTORY;
482046     set EMWS8.AutoNeural32_HISTORY EMWS8.AutoNeural32_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural32_HISTORY EMWS8.AutoNeural32_OUTFIT;
482047     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 10 observations read from the data set
      EMWS8.AUTONEURAL32_HISTORY.
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL32_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL32_HISTORY has 11 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
482048     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
482049     set EMWS8.AutoNeural32_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural32_OUTFIT;
482050     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
482051     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL32_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 40 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
482052     *;
MPRINT(EM_DIAGRAM):    *;
482053     proc neural data=EM_AutoNeural32 dmdbcat=WORK.AutoNeural32_DMDB
482054     validdata=EMWS8.Varsel_VALIDATE
482055     ;
MPRINT(EM_DIAGRAM):   proc neural data=EM_AutoNeural32
dmdbcat=WORK.AutoNeural32_DMDB validdata=EMWS8.Varsel_VALIDATE ;
482056     *;
MPRINT(EM_DIAGRAM):   *;
482057     nloptions noprint;
MPRINT(EM_DIAGRAM):   nloptions noprint;
482058     performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   input
482059     input %INTINPUTS / level=interval id=interval;
MPRINT(INTINPUTS):   AcceptedCmpTotal Mnt MntMeatProducts NumCatalogPurchases
RFMstat Recency
MPRINT(EM_DIAGRAM):   / level=interval id=interval;
482060     target DepVar / level=NOMINAL id=DepVar
482061     ;
MPRINT(EM_DIAGRAM):   target DepVar / level=NOMINAL id=DepVar ;
482062     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
482063     * Direct connection;
MPRINT(EM_DIAGRAM):   * Direct connection;
482064     ;
MPRINT(EM_DIAGRAM):   ;
482065     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
482066     connect interval DepVar;
MPRINT(EM_DIAGRAM):   connect interval DepVar;
482067     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
482068     * Layer #1;
MPRINT(EM_DIAGRAM):   * Layer #1;
482069     ;
MPRINT(EM_DIAGRAM):   ;
482070     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
482071     Hidden 3 / id = H1x1_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 3 / id = H1x1_ act=LOG;
482072     connect interval H1x1_;
MPRINT(EM_DIAGRAM):   connect interval H1x1_;
482073     Hidden 3 / id = H1x2_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 3 / id = H1x2_ act=LOG;
482074     connect interval H1x2_;
MPRINT(EM_DIAGRAM):   connect interval H1x2_;
482075     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
482076     * Layer #2;
MPRINT(EM_DIAGRAM):   * Layer #2;
482077     ;
MPRINT(EM_DIAGRAM):   ;
482078     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
482079     Hidden 3 / id = H2x1_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 3 / id = H2x1_ act=LOG;
482080     connect H1x1_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x1_ H2x1_;
482081     connect H1x2_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x2_ H2x1_;
482082     connect H2x1_ DepVar;
MPRINT(EM_DIAGRAM):   connect H2x1_ DepVar;
482083     *;
MPRINT(EM_DIAGRAM):   *;
482084     netoptions ranscale = 1;
MPRINT(EM_DIAGRAM):   netoptions ranscale = 1;
482085     *;
MPRINT(EM_DIAGRAM):   *;
482086     initial
482087     inest = EMWS8.AutoNeural32_ESTDS bylabel;
MPRINT(EM_DIAGRAM):   initial inest = EMWS8.AutoNeural32_ESTDS bylabel;
NOTE: Variable _WARN_ is uninitialized.
NOTE: The data set EMWS8.AUTONEURAL32_ESTDS has 1 observations and 46 variables.
482088     ;
MPRINT(EM_DIAGRAM):   ;
482089     *;
MPRINT(EM_DIAGRAM):   *;
482090     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
482091     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_prelim_title  ,NOQUOTE,
482091   ! Search # 3 FUNNEL LAYERS trial # 1 : LOGISTIC : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 3 FUNNEL LAYERS trial # 1 : LOGISTIC :
Prelim";
482092     prelim 15 outest=_anpre pretime=58 preiter=25
MPRINT(EM_DIAGRAM):   prelim 15 outest=_anpre pretime=58 preiter=25 tech =
Default inest = EMWS8.AutoNeural32_ESTDS bylabel ;
NOTE:  Synchronizing the objectives and the Solution.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANPRE has 31 observations and 88 variables.
NOTE: The data set EMWS8.AUTONEURAL32_ESTDS has 1 observations and 46 variables.
MPRINT(EM_DIAGRAM):   *;
482093     tech = Default
482094     inest = EMWS8.AutoNeural32_ESTDS bylabel
482095     ;
482096     *;
482097     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
482098     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_train_title  ,NOQUOTE,
482098   ! Search # 3 FUNNEL LAYERS trial # 1 : LOGISTIC : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 3 FUNNEL LAYERS trial # 1 : LOGISTIC :
Training";
MPRINT(EM_DIAGRAM):   train estiter=1 outest=_anest outfit=_anfit maxtime=883
maxiter=50 tech = Default;
WARNING: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 50 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANEST has 126 observations and 88 variables.
NOTE: The data set WORK._ANFIT has 104 observations and 36 variables.
MPRINT(EM_DIAGRAM):   ;
482099     train estiter=1 outest=_anest outfit=_anfit maxtime=883 maxiter=50
MPRINT(EM_DIAGRAM):   run;
482100     tech = Default;
482101     ;
482102     run;
 
NOTE: The data set WORK.EM_AUTONEURAL32 has 2374 observations and 7 variables.
NOTE: The data set EMWS8.VARSEL_VALIDATE has . observations and 46 variables.
NOTE: View EMWS8.VARSEL_VALIDATE.VIEW used (Total process time):
      real time           19.13 seconds
      cpu time            18.87 seconds
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: Closing the Neural Application.
NOTE: The PROCEDURE NEURAL printed page 354.
NOTE: PROCEDURE NEURAL used (Total process time):
      real time           19.13 seconds
      cpu time            18.87 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
482103     *;
482104     proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
MPRINT(EM_DIAGRAM):   proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
482105     var _iter_ _aic_ _averr_ _misc_
482106     _vaverr_ _vmisc_
482107     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
482108     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _name_='OVERALL';
NOTE: The PROCEDURE PRINT printed page 355.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Extract best iteration;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
482109     *------------------------------------------------------------*;
482110     * Extract best iteration;
482111     ;
482112     *------------------------------------------------------------*;
482113     %global _iter;
482114     data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
482115     set _anfit(where=(_NAME_ eq 'OVERALL'));
MPRINT(EM_DIAGRAM):   set _anfit(where=(_NAME_ eq 'OVERALL'));
482116     retain _min 1e+64;
MPRINT(EM_DIAGRAM):   retain _min 1e+64;
482117     if _VMISC_ < _min then do;
MPRINT(EM_DIAGRAM):   if _VMISC_ < _min then do;
482118     _min = _VMISC_;
MPRINT(EM_DIAGRAM):   _min = _VMISC_;
482119     call symput('_iter',put(_ITER_, 6.));
MPRINT(EM_DIAGRAM):   call symput('_iter',put(_ITER_, 6.));
482120     end;
MPRINT(EM_DIAGRAM):   end;
482121     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _NAME_='OVERALL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
482122     *;
 
482123     data EMWS8.AutoNeural32_ESTDS;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural32_ESTDS;
482124     set _anest;
MPRINT(EM_DIAGRAM):   set _anest;
482125     if _ITER_ eq 0 then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 0 then do;
482126     output;
MPRINT(EM_DIAGRAM):   output;
482127     stop;
MPRINT(EM_DIAGRAM):   stop;
482128     end;
MPRINT(EM_DIAGRAM):   end;
482129     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK._ANEST.
NOTE: The data set EMWS8.AUTONEURAL32_ESTDS has 1 observations and 88 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
482130     *;
482131     data EMWS8.AutoNeural32_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural32_OUTFIT;
482132     set _anfit;
MPRINT(EM_DIAGRAM):   set _anfit;
482133     if _ITER_ eq 0 and _NAME_ eq "OVERALL" then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 0 and _NAME_ eq "OVERALL" then do;
482134     output;
MPRINT(EM_DIAGRAM):   output;
482135     stop;
MPRINT(EM_DIAGRAM):   stop;
482136     end;
MPRINT(EM_DIAGRAM):   end;
482137     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set WORK._ANFIT.
NOTE: The data set EMWS8.AUTONEURAL32_OUTFIT has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
482138     *;
MPRINT(EM_DIAGRAM):    *;
482139     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
482140     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_selectediteration_title
482140   ! , NOQUOTE, _VMISC_))";
MPRINT(EM_DIAGRAM):   title10 "Selected Iteration based on _VMISC_";
482141     proc print data=EMWS8.AutoNeural32_OUTFIT noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural32_OUTFIT noobs;
482142     var _iter_ _aic_ _averr_ _misc_
482143     _vaverr_ _vmisc_
482144     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
482145     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL32_OUTFIT.
NOTE: The PROCEDURE PRINT printed page 356.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
482146     title9;
MPRINT(EM_DIAGRAM):   title9;
482147     title10;
MPRINT(EM_DIAGRAM):   title10;
482148     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
482149     set EMWS8.AutoNeural32_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural32_OUTFIT;
482150     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
482151     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL32_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
482152     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
482153     set EMWS8.AutoNeural32_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural32_OUTFIT;
482154     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
482155     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL32_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
482156     * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
482157     ;
MPRINT(EM_DIAGRAM):   ;
482158     data EMWS8.AutoNeural32_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural32_OUTFIT;
482159     set EMWS8.AutoNeural32_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural32_OUTFIT;
482160     length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
482161     _func_ = "LOGISTIC";
MPRINT(EM_DIAGRAM):   _func_ = "LOGISTIC";
482162     _status_ = "reject";
MPRINT(EM_DIAGRAM):   _status_ = "reject";
482163     _step_ = "FUNNEL LAYERS 3";
MPRINT(EM_DIAGRAM):   _step_ = "FUNNEL LAYERS 3";
482164     _index_ = 3;
MPRINT(EM_DIAGRAM):   _index_ = 3;
482165     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL32_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL32_OUTFIT has 1 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
482166     data EMWS8.AutoNeural32_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural32_HISTORY;
482167     set EMWS8.AutoNeural32_HISTORY EMWS8.AutoNeural32_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural32_HISTORY EMWS8.AutoNeural32_OUTFIT;
482168     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 11 observations read from the data set
      EMWS8.AUTONEURAL32_HISTORY.
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL32_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL32_HISTORY has 12 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
482169     * SEARCH: recall starting estimates;
MPRINT(EM_DIAGRAM):    * SEARCH: recall starting estimates;
482170     ;
MPRINT(EM_DIAGRAM):   ;
482171     data EMWS8.AutoNeural32_ESTDS;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural32_ESTDS;
482172     set EMWS8.AutoNeural32_BESTDS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural32_BESTDS;
482173     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL32_BESTDS.
NOTE: The data set EMWS8.AUTONEURAL32_ESTDS has 1 observations and 46 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
482174     *;
MPRINT(EM_DIAGRAM):    *;
482175     proc neural data=EM_AutoNeural32 dmdbcat=WORK.AutoNeural32_DMDB
482176     validdata=EMWS8.Varsel_VALIDATE
482177     ;
MPRINT(EM_DIAGRAM):   proc neural data=EM_AutoNeural32
dmdbcat=WORK.AutoNeural32_DMDB validdata=EMWS8.Varsel_VALIDATE ;
482178     *;
MPRINT(EM_DIAGRAM):   *;
482179     nloptions noprint;
MPRINT(EM_DIAGRAM):   nloptions noprint;
482180     performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   input
482181     input %INTINPUTS / level=interval id=interval;
MPRINT(INTINPUTS):   AcceptedCmpTotal Mnt MntMeatProducts NumCatalogPurchases
RFMstat Recency
MPRINT(EM_DIAGRAM):   / level=interval id=interval;
482182     target DepVar / level=NOMINAL id=DepVar
482183     ;
MPRINT(EM_DIAGRAM):   target DepVar / level=NOMINAL id=DepVar ;
482184     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
482185     * Direct connection;
MPRINT(EM_DIAGRAM):   * Direct connection;
482186     ;
MPRINT(EM_DIAGRAM):   ;
482187     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
482188     connect interval DepVar;
MPRINT(EM_DIAGRAM):   connect interval DepVar;
482189     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
482190     * Layer #1;
MPRINT(EM_DIAGRAM):   * Layer #1;
482191     ;
MPRINT(EM_DIAGRAM):   ;
482192     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
482193     Hidden 3 / id = H1x1_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 3 / id = H1x1_ act=LOG;
482194     connect interval H1x1_;
MPRINT(EM_DIAGRAM):   connect interval H1x1_;
482195     Hidden 3 / id = H1x2_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 3 / id = H1x2_ act=LOG;
482196     connect interval H1x2_;
MPRINT(EM_DIAGRAM):   connect interval H1x2_;
482197     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
482198     * Layer #2;
MPRINT(EM_DIAGRAM):   * Layer #2;
482199     ;
MPRINT(EM_DIAGRAM):   ;
482200     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
482201     Hidden 3 / id = H2x1_ act=SINE;
MPRINT(EM_DIAGRAM):   Hidden 3 / id = H2x1_ act=SINE;
482202     connect H1x1_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x1_ H2x1_;
482203     connect H1x2_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x2_ H2x1_;
482204     connect H2x1_ DepVar;
MPRINT(EM_DIAGRAM):   connect H2x1_ DepVar;
482205     *;
MPRINT(EM_DIAGRAM):   *;
482206     netoptions ranscale = 1;
MPRINT(EM_DIAGRAM):   netoptions ranscale = 1;
482207     *;
MPRINT(EM_DIAGRAM):   *;
482208     initial
482209     inest = EMWS8.AutoNeural32_ESTDS bylabel;
MPRINT(EM_DIAGRAM):   initial inest = EMWS8.AutoNeural32_ESTDS bylabel;
NOTE: Variable _WARN_ is uninitialized.
NOTE: The data set EMWS8.AUTONEURAL32_ESTDS has 1 observations and 46 variables.
482210     ;
MPRINT(EM_DIAGRAM):   ;
482211     *;
MPRINT(EM_DIAGRAM):   *;
482212     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
482213     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_prelim_title  ,NOQUOTE,
482213   ! Search # 3 FUNNEL LAYERS trial # 2 : SINE : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 3 FUNNEL LAYERS trial # 2 : SINE :
Prelim";
482214     prelim 15 outest=_anpre pretime=58 preiter=25
MPRINT(EM_DIAGRAM):   prelim 15 outest=_anpre pretime=58 preiter=25 tech =
Default inest = EMWS8.AutoNeural32_ESTDS bylabel ;
NOTE:  Synchronizing the objectives and the Solution.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANPRE has 31 observations and 88 variables.
NOTE: The data set EMWS8.AUTONEURAL32_ESTDS has 1 observations and 46 variables.
MPRINT(EM_DIAGRAM):   *;
482215     tech = Default
482216     inest = EMWS8.AutoNeural32_ESTDS bylabel
482217     ;
482218     *;
482219     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
482220     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_train_title  ,NOQUOTE,
482220   ! Search # 3 FUNNEL LAYERS trial # 2 : SINE : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 3 FUNNEL LAYERS trial # 2 : SINE :
Training";
MPRINT(EM_DIAGRAM):   train estiter=1 outest=_anest outfit=_anfit maxtime=879
maxiter=50 tech = Default;
NOTE: Convergence criterion (FCONV=0.0001) satisfied.
NOTE: The data set WORK._ANEST has 122 observations and 88 variables.
NOTE: The data set WORK._ANFIT has 96 observations and 36 variables.
MPRINT(EM_DIAGRAM):   ;
482221     train estiter=1 outest=_anest outfit=_anfit maxtime=879 maxiter=50
MPRINT(EM_DIAGRAM):   run;
482222     tech = Default;
482223     ;
482224     run;
 
NOTE: The data set WORK.EM_AUTONEURAL32 has 2374 observations and 7 variables.
NOTE: The data set EMWS8.VARSEL_VALIDATE has . observations and 46 variables.
NOTE: View EMWS8.VARSEL_VALIDATE.VIEW used (Total process time):
      real time           17.85 seconds
      cpu time            17.83 seconds
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: Closing the Neural Application.
NOTE: The PROCEDURE NEURAL printed page 357.
NOTE: PROCEDURE NEURAL used (Total process time):
      real time           17.86 seconds
      cpu time            17.84 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
482225     *;
482226     proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
MPRINT(EM_DIAGRAM):   proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
482227     var _iter_ _aic_ _averr_ _misc_
482228     _vaverr_ _vmisc_
482229     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
482230     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 48 observations read from the data set WORK._ANFIT.
      WHERE _name_='OVERALL';
NOTE: The PROCEDURE PRINT printed page 358.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Extract best iteration;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
482231     *------------------------------------------------------------*;
482232     * Extract best iteration;
482233     ;
482234     *------------------------------------------------------------*;
482235     %global _iter;
482236     data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
482237     set _anfit(where=(_NAME_ eq 'OVERALL'));
MPRINT(EM_DIAGRAM):   set _anfit(where=(_NAME_ eq 'OVERALL'));
482238     retain _min 1e+64;
MPRINT(EM_DIAGRAM):   retain _min 1e+64;
482239     if _VMISC_ < _min then do;
MPRINT(EM_DIAGRAM):   if _VMISC_ < _min then do;
482240     _min = _VMISC_;
MPRINT(EM_DIAGRAM):   _min = _VMISC_;
482241     call symput('_iter',put(_ITER_, 6.));
MPRINT(EM_DIAGRAM):   call symput('_iter',put(_ITER_, 6.));
482242     end;
MPRINT(EM_DIAGRAM):   end;
482243     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 48 observations read from the data set WORK._ANFIT.
      WHERE _NAME_='OVERALL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
482244     *;
 
482245     data EMWS8.AutoNeural32_ESTDS;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural32_ESTDS;
482246     set _anest;
MPRINT(EM_DIAGRAM):   set _anest;
482247     if _ITER_ eq 1 then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 1 then do;
482248     output;
MPRINT(EM_DIAGRAM):   output;
482249     stop;
MPRINT(EM_DIAGRAM):   stop;
482250     end;
MPRINT(EM_DIAGRAM):   end;
482251     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set WORK._ANEST.
NOTE: The data set EMWS8.AUTONEURAL32_ESTDS has 1 observations and 88 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
482252     *;
482253     data EMWS8.AutoNeural32_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural32_OUTFIT;
482254     set _anfit;
MPRINT(EM_DIAGRAM):   set _anfit;
482255     if _ITER_ eq 1 and _NAME_ eq "OVERALL" then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 1 and _NAME_ eq "OVERALL" then do;
482256     output;
MPRINT(EM_DIAGRAM):   output;
482257     stop;
MPRINT(EM_DIAGRAM):   stop;
482258     end;
MPRINT(EM_DIAGRAM):   end;
482259     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._ANFIT.
NOTE: The data set EMWS8.AUTONEURAL32_OUTFIT has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
482260     *;
MPRINT(EM_DIAGRAM):    *;
482261     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
482262     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_selectediteration_title
482262   ! , NOQUOTE, _VMISC_))";
MPRINT(EM_DIAGRAM):   title10 "Selected Iteration based on _VMISC_";
482263     proc print data=EMWS8.AutoNeural32_OUTFIT noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural32_OUTFIT noobs;
482264     var _iter_ _aic_ _averr_ _misc_
482265     _vaverr_ _vmisc_
482266     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
482267     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL32_OUTFIT.
NOTE: The PROCEDURE PRINT printed page 359.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
482268     title9;
MPRINT(EM_DIAGRAM):   title9;
482269     title10;
MPRINT(EM_DIAGRAM):   title10;
482270     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
482271     set EMWS8.AutoNeural32_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural32_OUTFIT;
482272     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
482273     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL32_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
482274     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
482275     set EMWS8.AutoNeural32_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural32_OUTFIT;
482276     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
482277     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL32_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
482278     * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
482279     ;
MPRINT(EM_DIAGRAM):   ;
482280     data EMWS8.AutoNeural32_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural32_OUTFIT;
482281     set EMWS8.AutoNeural32_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural32_OUTFIT;
482282     length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
482283     _func_ = "SINE";
MPRINT(EM_DIAGRAM):   _func_ = "SINE";
482284     _status_ = "reject";
MPRINT(EM_DIAGRAM):   _status_ = "reject";
482285     _step_ = "FUNNEL LAYERS 3";
MPRINT(EM_DIAGRAM):   _step_ = "FUNNEL LAYERS 3";
482286     _index_ = 3;
MPRINT(EM_DIAGRAM):   _index_ = 3;
482287     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL32_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL32_OUTFIT has 1 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
482288     data EMWS8.AutoNeural32_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural32_HISTORY;
482289     set EMWS8.AutoNeural32_HISTORY EMWS8.AutoNeural32_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural32_HISTORY EMWS8.AutoNeural32_OUTFIT;
482290     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 12 observations read from the data set
      EMWS8.AUTONEURAL32_HISTORY.
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL32_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL32_HISTORY has 13 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
482291     * SEARCH: recall starting estimates;
MPRINT(EM_DIAGRAM):    * SEARCH: recall starting estimates;
482292     ;
MPRINT(EM_DIAGRAM):   ;
482293     data EMWS8.AutoNeural32_ESTDS;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural32_ESTDS;
482294     set EMWS8.AutoNeural32_BESTDS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural32_BESTDS;
482295     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL32_BESTDS.
NOTE: The data set EMWS8.AUTONEURAL32_ESTDS has 1 observations and 46 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
482296     *;
MPRINT(EM_DIAGRAM):    *;
482297     proc neural data=EM_AutoNeural32 dmdbcat=WORK.AutoNeural32_DMDB
482298     validdata=EMWS8.Varsel_VALIDATE
482299     ;
MPRINT(EM_DIAGRAM):   proc neural data=EM_AutoNeural32
dmdbcat=WORK.AutoNeural32_DMDB validdata=EMWS8.Varsel_VALIDATE ;
482300     *;
MPRINT(EM_DIAGRAM):   *;
482301     nloptions noprint;
MPRINT(EM_DIAGRAM):   nloptions noprint;
482302     performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   input
482303     input %INTINPUTS / level=interval id=interval;
MPRINT(INTINPUTS):   AcceptedCmpTotal Mnt MntMeatProducts NumCatalogPurchases
RFMstat Recency
MPRINT(EM_DIAGRAM):   / level=interval id=interval;
482304     target DepVar / level=NOMINAL id=DepVar
482305     ;
MPRINT(EM_DIAGRAM):   target DepVar / level=NOMINAL id=DepVar ;
482306     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
482307     * Direct connection;
MPRINT(EM_DIAGRAM):   * Direct connection;
482308     ;
MPRINT(EM_DIAGRAM):   ;
482309     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
482310     connect interval DepVar;
MPRINT(EM_DIAGRAM):   connect interval DepVar;
482311     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
482312     * Layer #1;
MPRINT(EM_DIAGRAM):   * Layer #1;
482313     ;
MPRINT(EM_DIAGRAM):   ;
482314     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
482315     Hidden 3 / id = H1x1_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 3 / id = H1x1_ act=LOG;
482316     connect interval H1x1_;
MPRINT(EM_DIAGRAM):   connect interval H1x1_;
482317     Hidden 3 / id = H1x2_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 3 / id = H1x2_ act=LOG;
482318     connect interval H1x2_;
MPRINT(EM_DIAGRAM):   connect interval H1x2_;
482319     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
482320     * Layer #2;
MPRINT(EM_DIAGRAM):   * Layer #2;
482321     ;
MPRINT(EM_DIAGRAM):   ;
482322     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
482323     Hidden 3 / id = H2x1_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 3 / id = H2x1_ act=SOFTMAX;
482324     connect H1x1_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x1_ H2x1_;
482325     connect H1x2_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x2_ H2x1_;
482326     connect H2x1_ DepVar;
MPRINT(EM_DIAGRAM):   connect H2x1_ DepVar;
482327     *;
MPRINT(EM_DIAGRAM):   *;
482328     netoptions ranscale = 1;
MPRINT(EM_DIAGRAM):   netoptions ranscale = 1;
482329     *;
MPRINT(EM_DIAGRAM):   *;
482330     initial
482331     inest = EMWS8.AutoNeural32_ESTDS bylabel;
MPRINT(EM_DIAGRAM):   initial inest = EMWS8.AutoNeural32_ESTDS bylabel;
NOTE: Variable _WARN_ is uninitialized.
NOTE: The data set EMWS8.AUTONEURAL32_ESTDS has 1 observations and 46 variables.
482332     ;
MPRINT(EM_DIAGRAM):   ;
482333     *;
MPRINT(EM_DIAGRAM):   *;
482334     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
482335     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_prelim_title  ,NOQUOTE,
482335   ! Search # 3 FUNNEL LAYERS trial # 3 : SOFTMAX : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 3 FUNNEL LAYERS trial # 3 : SOFTMAX :
Prelim";
482336     prelim 15 outest=_anpre pretime=58 preiter=25
MPRINT(EM_DIAGRAM):   prelim 15 outest=_anpre pretime=58 preiter=25 tech =
Default inest = EMWS8.AutoNeural32_ESTDS bylabel ;
NOTE:  Synchronizing the objectives and the Solution.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANPRE has 31 observations and 81 variables.
NOTE: The data set EMWS8.AUTONEURAL32_ESTDS has 1 observations and 46 variables.
MPRINT(EM_DIAGRAM):   *;
482337     tech = Default
482338     inest = EMWS8.AutoNeural32_ESTDS bylabel
482339     ;
482340     *;
482341     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
482342     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_train_title  ,NOQUOTE,
482342   ! Search # 3 FUNNEL LAYERS trial # 3 : SOFTMAX : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 3 FUNNEL LAYERS trial # 3 : SOFTMAX :
Training";
MPRINT(EM_DIAGRAM):   train estiter=1 outest=_anest outfit=_anfit maxtime=874
maxiter=50 tech = Default;
WARNING: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 50 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANEST has 119 observations and 81 variables.
NOTE: The data set WORK._ANFIT has 104 observations and 36 variables.
MPRINT(EM_DIAGRAM):   ;
482343     train estiter=1 outest=_anest outfit=_anfit maxtime=874 maxiter=50
MPRINT(EM_DIAGRAM):   run;
482344     tech = Default;
482345     ;
482346     run;
 
NOTE: The data set WORK.EM_AUTONEURAL32 has 2374 observations and 7 variables.
NOTE: The data set EMWS8.VARSEL_VALIDATE has . observations and 46 variables.
NOTE: View EMWS8.VARSEL_VALIDATE.VIEW used (Total process time):
      real time           16.60 seconds
      cpu time            16.61 seconds
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: Closing the Neural Application.
NOTE: The PROCEDURE NEURAL printed page 360.
NOTE: PROCEDURE NEURAL used (Total process time):
      real time           16.61 seconds
      cpu time            16.61 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
482347     *;
482348     proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
MPRINT(EM_DIAGRAM):   proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
482349     var _iter_ _aic_ _averr_ _misc_
482350     _vaverr_ _vmisc_
482351     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
482352     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _name_='OVERALL';
NOTE: The PROCEDURE PRINT printed page 361.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Extract best iteration;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
482353     *------------------------------------------------------------*;
482354     * Extract best iteration;
482355     ;
482356     *------------------------------------------------------------*;
482357     %global _iter;
482358     data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
482359     set _anfit(where=(_NAME_ eq 'OVERALL'));
MPRINT(EM_DIAGRAM):   set _anfit(where=(_NAME_ eq 'OVERALL'));
482360     retain _min 1e+64;
MPRINT(EM_DIAGRAM):   retain _min 1e+64;
482361     if _VMISC_ < _min then do;
MPRINT(EM_DIAGRAM):   if _VMISC_ < _min then do;
482362     _min = _VMISC_;
MPRINT(EM_DIAGRAM):   _min = _VMISC_;
482363     call symput('_iter',put(_ITER_, 6.));
MPRINT(EM_DIAGRAM):   call symput('_iter',put(_ITER_, 6.));
482364     end;
MPRINT(EM_DIAGRAM):   end;
482365     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _NAME_='OVERALL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
482366     *;
 
482367     data EMWS8.AutoNeural32_ESTDS;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural32_ESTDS;
482368     set _anest;
MPRINT(EM_DIAGRAM):   set _anest;
482369     if _ITER_ eq 41 then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 41 then do;
482370     output;
MPRINT(EM_DIAGRAM):   output;
482371     stop;
MPRINT(EM_DIAGRAM):   stop;
482372     end;
MPRINT(EM_DIAGRAM):   end;
482373     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 42 observations read from the data set WORK._ANEST.
NOTE: The data set EMWS8.AUTONEURAL32_ESTDS has 1 observations and 81 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
482374     *;
482375     data EMWS8.AutoNeural32_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural32_OUTFIT;
482376     set _anfit;
MPRINT(EM_DIAGRAM):   set _anfit;
482377     if _ITER_ eq 41 and _NAME_ eq "OVERALL" then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 41 and _NAME_ eq "OVERALL" then do;
482378     output;
MPRINT(EM_DIAGRAM):   output;
482379     stop;
MPRINT(EM_DIAGRAM):   stop;
482380     end;
MPRINT(EM_DIAGRAM):   end;
482381     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 84 observations read from the data set WORK._ANFIT.
NOTE: The data set EMWS8.AUTONEURAL32_OUTFIT has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
482382     *;
MPRINT(EM_DIAGRAM):    *;
482383     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
482384     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_selectediteration_title
482384   ! , NOQUOTE, _VMISC_))";
MPRINT(EM_DIAGRAM):   title10 "Selected Iteration based on _VMISC_";
482385     proc print data=EMWS8.AutoNeural32_OUTFIT noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural32_OUTFIT noobs;
482386     var _iter_ _aic_ _averr_ _misc_
482387     _vaverr_ _vmisc_
482388     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
482389     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL32_OUTFIT.
NOTE: The PROCEDURE PRINT printed page 362.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
482390     title9;
MPRINT(EM_DIAGRAM):   title9;
482391     title10;
MPRINT(EM_DIAGRAM):   title10;
482392     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
482393     set EMWS8.AutoNeural32_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural32_OUTFIT;
482394     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
482395     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL32_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
482396     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
482397     set EMWS8.AutoNeural32_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural32_OUTFIT;
482398     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
482399     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL32_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
482400     * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
482401     ;
MPRINT(EM_DIAGRAM):   ;
482402     data EMWS8.AutoNeural32_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural32_OUTFIT;
482403     set EMWS8.AutoNeural32_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural32_OUTFIT;
482404     length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
482405     _func_ = "SOFTMAX";
MPRINT(EM_DIAGRAM):   _func_ = "SOFTMAX";
482406     _status_ = "reject";
MPRINT(EM_DIAGRAM):   _status_ = "reject";
482407     _step_ = "FUNNEL LAYERS 3";
MPRINT(EM_DIAGRAM):   _step_ = "FUNNEL LAYERS 3";
482408     _index_ = 3;
MPRINT(EM_DIAGRAM):   _index_ = 3;
482409     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL32_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL32_OUTFIT has 1 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
482410     data EMWS8.AutoNeural32_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural32_HISTORY;
482411     set EMWS8.AutoNeural32_HISTORY EMWS8.AutoNeural32_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural32_HISTORY EMWS8.AutoNeural32_OUTFIT;
482412     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 13 observations read from the data set
      EMWS8.AUTONEURAL32_HISTORY.
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL32_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL32_HISTORY has 14 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
482413     data EMWS8.AutoNeural32_ESTDS;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural32_ESTDS;
482414     set WORK.SAVEDS_AUTONEUR_37IDK5U;
MPRINT(EM_DIAGRAM):   set WORK.SAVEDS_AUTONEUR_37IDK5U;
482415     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      WORK.SAVEDS_AUTONEUR_37IDK5U.
NOTE: The data set EMWS8.AUTONEURAL32_ESTDS has 1 observations and 46 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
482416     *;
MPRINT(EM_DIAGRAM):    *;
482417     proc neural data=EM_AutoNeural32 dmdbcat=WORK.AutoNeural32_DMDB
482418     validdata=EMWS8.Varsel_VALIDATE
482419     ;
MPRINT(EM_DIAGRAM):   proc neural data=EM_AutoNeural32
dmdbcat=WORK.AutoNeural32_DMDB validdata=EMWS8.Varsel_VALIDATE ;
482420     *;
MPRINT(EM_DIAGRAM):   *;
482421     nloptions noprint;
MPRINT(EM_DIAGRAM):   nloptions noprint;
482422     performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   input
482423     input %INTINPUTS / level=interval id=interval;
MPRINT(INTINPUTS):   AcceptedCmpTotal Mnt MntMeatProducts NumCatalogPurchases
RFMstat Recency
MPRINT(EM_DIAGRAM):   / level=interval id=interval;
482424     target DepVar / level=NOMINAL id=DepVar
482425     ;
MPRINT(EM_DIAGRAM):   target DepVar / level=NOMINAL id=DepVar ;
482426     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
482427     * Direct connection;
MPRINT(EM_DIAGRAM):   * Direct connection;
482428     ;
MPRINT(EM_DIAGRAM):   ;
482429     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
482430     connect interval DepVar;
MPRINT(EM_DIAGRAM):   connect interval DepVar;
482431     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
482432     * Layer #1;
MPRINT(EM_DIAGRAM):   * Layer #1;
482433     ;
MPRINT(EM_DIAGRAM):   ;
482434     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
482435     Hidden 3 / id = H1x1_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 3 / id = H1x1_ act=LOG;
482436     connect interval H1x1_;
MPRINT(EM_DIAGRAM):   connect interval H1x1_;
482437     connect H1x1_ DepVar;
MPRINT(EM_DIAGRAM):   connect H1x1_ DepVar;
482438     *;
MPRINT(EM_DIAGRAM):   *;
482439     netoptions ranscale = 1;
MPRINT(EM_DIAGRAM):   netoptions ranscale = 1;
482440     *;
MPRINT(EM_DIAGRAM):   *;
482441     initial
482442     inest = EMWS8.AutoNeural32_ESTDS bylabel;
MPRINT(EM_DIAGRAM):   initial inest = EMWS8.AutoNeural32_ESTDS bylabel;
NOTE: Variable _WARN_ is uninitialized.
NOTE: The data set EMWS8.AUTONEURAL32_ESTDS has 1 observations and 46 variables.
482443     ;
MPRINT(EM_DIAGRAM):   ;
482444     *;
MPRINT(EM_DIAGRAM):   *;
482445     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
482446     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_prelim_title  ,NOQUOTE,
482446   ! Final Training))";
MPRINT(EM_DIAGRAM):   title10 "Final Training Prelim";
482447     prelim 12 outest=_anpre pretime=72 preiter=25
MPRINT(EM_DIAGRAM):   prelim 12 outest=_anpre pretime=72 preiter=25 tech =
Default inest = EMWS8.AutoNeural32_ESTDS bylabel ;
NOTE:  Synchronizing the objectives and the Solution.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
The prelim will run only once. Use the randbias or randout option on the target
layer.
NOTE: The data set WORK._ANPRE has 3 observations and 46 variables.
NOTE: The data set EMWS8.AUTONEURAL32_ESTDS has 1 observations and 46 variables.
MPRINT(EM_DIAGRAM):   *;
482448     tech = Default
482449     inest = EMWS8.AutoNeural32_ESTDS bylabel
482450     ;
482451     *;
482452     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
482453     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_train_title  ,NOQUOTE,
482453   ! Final Training))";
MPRINT(EM_DIAGRAM):   title10 "Final Training Training";
MPRINT(EM_DIAGRAM):   train estiter=1 outest=_anest outfit=_anfit maxtime=870
maxiter=5 tech = Default;
WARNING: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 5 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANEST has 39 observations and 46 variables.
NOTE: The data set WORK._ANFIT has 14 observations and 36 variables.
MPRINT(EM_DIAGRAM):   ;
482454     train estiter=1 outest=_anest outfit=_anfit maxtime=870 maxiter=5
MPRINT(EM_DIAGRAM):   run;
482455     tech = Default;
482456     ;
482457     run;
 
NOTE: The data set WORK.EM_AUTONEURAL32 has 2374 observations and 7 variables.
NOTE: The data set EMWS8.VARSEL_VALIDATE has . observations and 46 variables.
NOTE: View EMWS8.VARSEL_VALIDATE.VIEW used (Total process time):
      real time           0.62 seconds
      cpu time            0.62 seconds
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: Closing the Neural Application.
NOTE: The PROCEDURE NEURAL printed page 363.
NOTE: PROCEDURE NEURAL used (Total process time):
      real time           0.63 seconds
      cpu time            0.62 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
482458     *;
482459     proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
MPRINT(EM_DIAGRAM):   proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
482460     var _iter_ _aic_ _averr_ _misc_
482461     _vaverr_ _vmisc_
482462     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
482463     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 7 observations read from the data set WORK._ANFIT.
      WHERE _name_='OVERALL';
NOTE: The PROCEDURE PRINT printed page 364.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Extract best iteration;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
482464     *------------------------------------------------------------*;
482465     * Extract best iteration;
482466     ;
482467     *------------------------------------------------------------*;
482468     %global _iter;
482469     data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
482470     set _anfit(where=(_NAME_ eq 'OVERALL'));
MPRINT(EM_DIAGRAM):   set _anfit(where=(_NAME_ eq 'OVERALL'));
482471     retain _min 1e+64;
MPRINT(EM_DIAGRAM):   retain _min 1e+64;
482472     if _VMISC_ < _min then do;
MPRINT(EM_DIAGRAM):   if _VMISC_ < _min then do;
482473     _min = _VMISC_;
MPRINT(EM_DIAGRAM):   _min = _VMISC_;
482474     call symput('_iter',put(_ITER_, 6.));
MPRINT(EM_DIAGRAM):   call symput('_iter',put(_ITER_, 6.));
482475     end;
MPRINT(EM_DIAGRAM):   end;
482476     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 7 observations read from the data set WORK._ANFIT.
      WHERE _NAME_='OVERALL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
482477     *;
 
482478     data EMWS8.AutoNeural32_ESTDS;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural32_ESTDS;
482479     set _anest;
MPRINT(EM_DIAGRAM):   set _anest;
482480     if _ITER_ eq 4 then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 4 then do;
482481     output;
MPRINT(EM_DIAGRAM):   output;
482482     stop;
MPRINT(EM_DIAGRAM):   stop;
482483     end;
MPRINT(EM_DIAGRAM):   end;
482484     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 5 observations read from the data set WORK._ANEST.
NOTE: The data set EMWS8.AUTONEURAL32_ESTDS has 1 observations and 46 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
482485     *;
482486     data EMWS8.AutoNeural32_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural32_OUTFIT;
482487     set _anfit;
MPRINT(EM_DIAGRAM):   set _anfit;
482488     if _ITER_ eq 4 and _NAME_ eq "OVERALL" then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 4 and _NAME_ eq "OVERALL" then do;
482489     output;
MPRINT(EM_DIAGRAM):   output;
482490     stop;
MPRINT(EM_DIAGRAM):   stop;
482491     end;
MPRINT(EM_DIAGRAM):   end;
482492     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 10 observations read from the data set WORK._ANFIT.
NOTE: The data set EMWS8.AUTONEURAL32_OUTFIT has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
482493     *;
MPRINT(EM_DIAGRAM):    *;
482494     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
482495     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_selectediteration_title
482495   ! , NOQUOTE, _VMISC_))";
MPRINT(EM_DIAGRAM):   title10 "Selected Iteration based on _VMISC_";
482496     proc print data=EMWS8.AutoNeural32_OUTFIT noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural32_OUTFIT noobs;
482497     var _iter_ _aic_ _averr_ _misc_
482498     _vaverr_ _vmisc_
482499     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
482500     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL32_OUTFIT.
NOTE: The PROCEDURE PRINT printed page 365.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
482501     title9;
MPRINT(EM_DIAGRAM):   title9;
482502     title10;
MPRINT(EM_DIAGRAM):   title10;
482503     * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
482504     ;
MPRINT(EM_DIAGRAM):   ;
482505     data EMWS8.AutoNeural32_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural32_OUTFIT;
482506     set EMWS8.AutoNeural32_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural32_OUTFIT;
482507     length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
482508     _func_ = "";
MPRINT(EM_DIAGRAM):   _func_ = "";
482509     _status_ = "Final";
MPRINT(EM_DIAGRAM):   _status_ = "Final";
482510     _step_ = "";
MPRINT(EM_DIAGRAM):   _step_ = "";
482511     _index_ = 4;
MPRINT(EM_DIAGRAM):   _index_ = 4;
482512     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL32_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL32_OUTFIT has 1 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
482513     data EMWS8.AutoNeural32_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural32_HISTORY;
482514     set EMWS8.AutoNeural32_HISTORY EMWS8.AutoNeural32_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural32_HISTORY EMWS8.AutoNeural32_OUTFIT;
482515     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 14 observations read from the data set
      EMWS8.AUTONEURAL32_HISTORY.
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL32_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL32_HISTORY has 15 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
482516     title9 " ";
MPRINT(EM_DIAGRAM):    title9 " ";
482517     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_finaltrainhistory_title
482517   ! , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Final Training History";
482518     proc print data=EMWS8.AutoNeural32_HISTORY noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural32_HISTORY noobs;
482519     var _step_ _func_ _status_ _iter_ _averr_ _misc_ _aic_
482520     _vaverr_ _vmisc_
482521     ;
MPRINT(EM_DIAGRAM):   var _step_ _func_ _status_ _iter_ _averr_ _misc_ _aic_
_vaverr_ _vmisc_ ;
482522     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 15 observations read from the data set
      EMWS8.AUTONEURAL32_HISTORY.
NOTE: The PROCEDURE PRINT printed page 366.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
482523     data work.keep_history;
MPRINT(EM_DIAGRAM):   data work.keep_history;
482524     set EMWS8.AutoNeural32_HISTORY;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural32_HISTORY;
482525     if _status_='keep';
MPRINT(EM_DIAGRAM):   if _status_='keep';
482526     if _func_='DIRECT' then neurons=0;
MPRINT(EM_DIAGRAM):   if _func_='DIRECT' then neurons=0;
482527     else neurons=3;
MPRINT(EM_DIAGRAM):   else neurons=3;
482528     label neurons="%sysfunc(sasmsg(sashelp.dmine,
482528   ! rpt_numberneurons_vlabel  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   label neurons= "Number of Neurons";
482529     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 15 observations read from the data set
      EMWS8.AUTONEURAL32_HISTORY.
NOTE: The data set WORK.KEEP_HISTORY has 2 observations and 41 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
482530     title8 " ";
MPRINT(EM_DIAGRAM):   title8 " ";
482531     title9 "%sysfunc(sasmsg(sashelp.dmine, rpt_finalmodel_title  ,
482531   ! NOQUOTE))";
MPRINT(EM_DIAGRAM):   title9 "Final Model";
482532     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_stopping_title  ,
482532   ! NOQUOTE, %nrbquote(Termination criteria were satisfied: overfitting
482532   ! based on _VMISC_)))";
MPRINT(EM_DIAGRAM):   title10 "Stopping: Termination criteria were satisfied:
overfitting based on _VMISC_";
482533     proc print data=work.keep_history noobs;
MPRINT(EM_DIAGRAM):   proc print data=work.keep_history noobs;
482534     var _func_ _averr_
482535     _vaverr_
482536     neurons;
MPRINT(EM_DIAGRAM):   var _func_ _averr_ _vaverr_ neurons;
482537     sum neurons;
MPRINT(EM_DIAGRAM):   sum neurons;
482538     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set WORK.KEEP_HISTORY.
NOTE: The PROCEDURE PRINT printed page 367.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
482539     title8;
MPRINT(EM_DIAGRAM):   title8;
482540     title9;
MPRINT(EM_DIAGRAM):   title9;
482541     title10;
MPRINT(EM_DIAGRAM):   title10;
482542     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
482543     * AutoNeural Final Network;
MPRINT(EM_DIAGRAM):   * AutoNeural Final Network;
482544     ;
MPRINT(EM_DIAGRAM):   ;
482545     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
482546     *;
MPRINT(EM_DIAGRAM):   *;
482547     proc neural data=EM_AutoNeural32 dmdbcat=WORK.AutoNeural32_DMDB
482548     validdata=EMWS8.Varsel_VALIDATE
482549     ;
MPRINT(EM_DIAGRAM):   proc neural data=EM_AutoNeural32
dmdbcat=WORK.AutoNeural32_DMDB validdata=EMWS8.Varsel_VALIDATE ;
482550     *;
MPRINT(EM_DIAGRAM):   *;
482551     nloptions noprint;
MPRINT(EM_DIAGRAM):   nloptions noprint;
482552     performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   input
482553     input %INTINPUTS / level=interval id=interval;
MPRINT(INTINPUTS):   AcceptedCmpTotal Mnt MntMeatProducts NumCatalogPurchases
RFMstat Recency
MPRINT(EM_DIAGRAM):   / level=interval id=interval;
482554     target DepVar / level=NOMINAL id=DepVar
482555     ;
MPRINT(EM_DIAGRAM):   target DepVar / level=NOMINAL id=DepVar ;
482556     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
482557     * Layer #1;
MPRINT(EM_DIAGRAM):   * Layer #1;
482558     ;
MPRINT(EM_DIAGRAM):   ;
482559     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
482560     Hidden 3 / id = H1x1_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 3 / id = H1x1_ act=LOG;
482561     connect interval H1x1_;
MPRINT(EM_DIAGRAM):   connect interval H1x1_;
482562     connect H1x1_ DepVar;
MPRINT(EM_DIAGRAM):   connect H1x1_ DepVar;
482563     *;
MPRINT(EM_DIAGRAM):   *;
482564     initial inest= EMWS8.AutoNeural32_ESTDS bylabel;
MPRINT(EM_DIAGRAM):   initial inest= EMWS8.AutoNeural32_ESTDS bylabel;
NOTE: Variable _WARN_ is uninitialized.
NOTE: The data set EMWS8.AUTONEURAL32_ESTDS has 1 observations and 46 variables.
482565     train tech=none;
MPRINT(EM_DIAGRAM):   train tech=none;
NOTE: No optimization performed.
482566     code
482566   ! file="C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural32\SCO
482566   ! RECODE.sas"
482567     group=AutoNeural32
482568     ;
MPRINT(EM_DIAGRAM):   code
file="C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural32\SCORECODE.sas"
 group=AutoNeural32 ;
NOTE: External file
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural32\SCORECODE.sas
      opened.
482569     ;
MPRINT(EM_DIAGRAM):   ;
482570     code
482570   ! file="C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural32\RES
482570   ! IDUALSCORECODE.sas"
482571     group=AutoNeural32
482572     residual
482573     ;
MPRINT(EM_DIAGRAM):   code
file="C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural32\RESIDUALSCOREC
ODE.sas" group=AutoNeural32 residual ;
NOTE: External file
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural32\RESIDUALSCOREC
      ODE.sas opened.
482574     ;
MPRINT(EM_DIAGRAM):   ;
482575     score data=EMWS8.Varsel_TRAIN out=_NULL_
NOTE: View EMWS8.VARSEL_TRAIN.VIEW used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
482576     outfit=WORK.FIT1
482577     role=TRAIN
482578     outkey=EMWS8.AutoNeural32_OUTKEY;
MPRINT(EM_DIAGRAM):   score data=EMWS8.Varsel_TRAIN out=_NULL_ outfit=WORK.FIT1
role=TRAIN outkey=EMWS8.AutoNeural32_OUTKEY;
NOTE: The data set EMWS8.AUTONEURAL32_OUTKEY has 21 observations and 8
      variables.
NOTE: Variable _WARN_ is uninitialized.
NOTE: The data set EMWS8.VARSEL_TRAIN has . observations and 46 variables.
NOTE: There were 2374 observations read from the data set EMWS8.PART_TRAIN.
NOTE: The data set WORK.FIT1 has 2 observations and 23 variables.
482579     score data=EMWS8.Varsel_VALIDATE out=_NULL_
NOTE: View EMWS8.VARSEL_VALIDATE.VIEW used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
482580     outfit=WORK.FIT2
482581     outkey=EMWS8.AutoNeural32_OUTKEY;
MPRINT(EM_DIAGRAM):   score data=EMWS8.Varsel_VALIDATE out=_NULL_
outfit=WORK.FIT2 outkey=EMWS8.AutoNeural32_OUTKEY;
NOTE: The data set EMWS8.AUTONEURAL32_OUTKEY has 21 observations and 8
      variables.
NOTE: Variable _WARN_ is uninitialized.
NOTE: The data set EMWS8.VARSEL_VALIDATE has . observations and 46 variables.
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: The data set WORK.FIT2 has 2 observations and 15 variables.
482582     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK.EM_AUTONEURAL32 has 2374 observations and 7 variables.
NOTE: The data set EMWS8.VARSEL_VALIDATE has . observations and 46 variables.
NOTE: View EMWS8.VARSEL_VALIDATE.VIEW used (Total process time):
      real time           0.23 seconds
      cpu time            0.21 seconds
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: Closing the Neural Application.
NOTE: PROCEDURE NEURAL used (Total process time):
      real time           0.24 seconds
      cpu time            0.21 seconds
 
 
482583     data EMWS8.AutoNeural32_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural32_OUTFIT;
482584     merge WORK.FIT1 WORK.FIT2;
MPRINT(EM_DIAGRAM):   merge WORK.FIT1 WORK.FIT2;
482585     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set WORK.FIT1.
NOTE: There were 2 observations read from the data set WORK.FIT2.
NOTE: The data set EMWS8.AUTONEURAL32_OUTFIT has 2 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
482586     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
482587     * Generate Weights Plotting data set;
MPRINT(EM_DIAGRAM):   * Generate Weights Plotting data set;
482588     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
482589     data tempweight ( drop = _tech_ _decay_ _seed_ _nobj_ _obj_ _objerr_
482589   ! _averr_ _p_num_ where= (_type_ eq "PARMS"));
MPRINT(EM_DIAGRAM):   data tempweight ( drop = _tech_ _decay_ _seed_ _nobj_
_obj_ _objerr_ _averr_ _p_num_ where= (_type_ eq "PARMS"));
482590     set EMWS8.AutoNeural32_ESTDS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural32_ESTDS;
482591     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.AUTONEURAL32_ESTDS.
NOTE: The data set WORK.TEMPWEIGHT has 1 observations and 38 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
482592     proc sort;
MPRINT(EM_DIAGRAM):   proc sort;
482593     by _name_;
MPRINT(EM_DIAGRAM):   by _name_;
482594     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK.TEMPWEIGHT.
NOTE: The data set WORK.TEMPWEIGHT has 1 observations and 38 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
482595     proc transpose data=tempweight out=EMWS8.AutoNeural32_WEIGHTS;
MPRINT(EM_DIAGRAM):   proc transpose data=tempweight
out=EMWS8.AutoNeural32_WEIGHTS;
482596     by _name_;
MPRINT(EM_DIAGRAM):   by _name_;
482597     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK.TEMPWEIGHT.
NOTE: The data set EMWS8.AUTONEURAL32_WEIGHTS has 36 observations and 3
      variables.
NOTE: PROCEDURE TRANSPOSE used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
482598     data EMWS8.AutoNeural32_WEIGHTS;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural32_WEIGHTS;
482599     set EMWS8.AutoNeural32_WEIGHTS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural32_WEIGHTS;
482600     FROM = ktrim(kleft(kscan(_LABEL_, 1, '-->')));
MPRINT(EM_DIAGRAM):   FROM = ktrim(kleft(kscan(_LABEL_, 1, '-->')));
482601     TO = ktrim(kleft(kscan(_LABEL_, 2, '>')));
MPRINT(EM_DIAGRAM):   TO = ktrim(kleft(kscan(_LABEL_, 2, '>')));
482602     WEIGHT = COL1;
MPRINT(EM_DIAGRAM):   WEIGHT = COL1;
482603     if (TO eq '') or (FROM eq '') then delete;
MPRINT(EM_DIAGRAM):   if (TO eq '') or (FROM eq '') then delete;
482604     label _LABEL_ ="%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel  ,
482604   ! NOQUOTE))" FROM = "%sysfunc(sasmsg(sashelp.dmine, rpt_from_vlabel  ,
482604   ! NOQUOTE))" TO = "%sysfunc(sasmsg(sashelp.dmine, rpt_into_vlabel  ,
482604   ! NOQUOTE))" WEIGHT =
482605        "%sysfunc(sasmsg(sashelp.dmine, rpt_weight_vlabel  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _LABEL_ = "Label" FROM = "From" TO = "Into" WEIGHT
= "Weight";
482606     keep FROM TO WEIGHT _LABEL_;
MPRINT(EM_DIAGRAM):   keep FROM TO WEIGHT _LABEL_;
482607     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 36 observations read from the data set
      EMWS8.AUTONEURAL32_WEIGHTS.
NOTE: The data set EMWS8.AUTONEURAL32_WEIGHTS has 31 observations and 4
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   * restore printing options;
MPRINT(EM_DIAGRAM):   ;
482608     * restore printing options;
482609     ;
482610     title10;
MPRINT(EM_DIAGRAM):   title10;
482611     options linesize=95;
MPRINT(EM_DIAGRAM):   options linesize=95;
482612     options pagesize=10000;
MPRINT(EM_DIAGRAM):   options pagesize=10000;
482613     options nonumber;
MPRINT(EM_DIAGRAM):   options nonumber;
482614     options nocenter;
MPRINT(EM_DIAGRAM):   options nocenter;
482615     options nodate;
MPRINT(EM_DIAGRAM):   options nodate;
MPRINT(EM_DIAGRAM):   *;
482616     *;
482617     proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
482618     delete EM_AutoNeural32;
MPRINT(EM_DIAGRAM):   delete EM_AutoNeural32;
482619     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Deleting WORK.EM_AUTONEURAL32 (memtype=DATA).
482620     quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
482621     data EMWS8.AutoNeural32_HISTORY;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural32_HISTORY;
482622     set EMWS8.AutoNeural32_HISTORY;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural32_HISTORY;
482623     label _T_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_trainstep_vlabel  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _T_ = "Training Step";
482624     label _iter_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_trainiterations_vlabel  ,
482624   ! NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _iter_ = "Training Iterations";
482625     _T_ = _N_ -1;
MPRINT(EM_DIAGRAM):   _T_ = _N_ -1;
482626     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 15 observations read from the data set EMWS8.AUTONEURAL32_HISTORY.
NOTE: The data set EMWS8.AUTONEURAL32_HISTORY has 15 observations and 41 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "28. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "16.11 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                28. April 2016
Time:                16.11 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O2GW701S
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural32\EMSCORE.out" encoding="UTF-8"
NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O2GW701S new;
MPRINT(EM_DIAGRAM):   run;
482728     filename emflow
482728   ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural32\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural32\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * AutoNeural32: Scoring DATA data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
482729     *------------------------------------------------------------*;
482730     * AutoNeural32: Scoring DATA data;
482731     *------------------------------------------------------------*;
482732     data EMWS8.AutoNeural32_TRAIN
482733     / view=EMWS8.AutoNeural32_TRAIN
482734     ;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural32_TRAIN / view=EMWS8.AutoNeural32_TRAIN ;
482735     set EMWS8.Varsel_TRAIN
482736     ;
MPRINT(EM_DIAGRAM):   set EMWS8.Varsel_TRAIN ;
482737     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural32\EMFLOWSCORE.sas.
482738    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
482739    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
482740    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
482741    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
482742    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
482743    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
482744    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
482745    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
482746    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
482747    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
482748    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
482749    +LENGTH _WARN_ $4
482750    +      F_DepVar  $ 12
482751    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
482752    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
482753    +
482754    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
482755    +
482756    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
482757    +
482758    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
482759    +
482760    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
482761    +
482762    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
482763    +
482764    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
482765    +
482766    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
482767    +
482768    +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
482769    +
482770    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
482771    +
482772    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
482773    +
482774    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
482775    +
482776    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
482777    +
482778    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
482779    +
482780    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
482781    +
482782    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
482783    +
482784    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
482785    +
482786    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
482787    +*** Checking missing input Interval
482788    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
482789    +
482790    +IF NMISS(
482791    +   AcceptedCmpTotal ,
482792    +   Mnt ,
482793    +   MntMeatProducts ,
482794    +   NumCatalogPurchases ,
482795    +   RFMstat ,
482796    +   Recency   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Mnt , MntMeatProducts , NumCatalogPurchases
, RFMstat , Recency ) THEN DO;
482797    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
482798    +
482799    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
482800    +END;
MPRINT(EM_DIAGRAM):   END;
482801    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
482802    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
482803    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
482804    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
482805    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
482806    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
482807    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
482808    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
482809    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
482810    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
482811    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
482812    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
482813    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
482814    +END;
MPRINT(EM_DIAGRAM):   END;
482815    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
482816    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
482817    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
482818    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
482819    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
482820    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
482821    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
482822    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
482823    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
482824    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
482825    +   ELSE S_NumCatalogPurchases
482826    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
482827    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
482828    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
482829    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
482830    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
482831    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
482832    +END;
MPRINT(EM_DIAGRAM):   END;
482833    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
482834    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
482835    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
482836    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
482837    +   H1x1_1  =    -0.14955504394548 * S_AcceptedCmpTotal
482838    +          +    -1.51573020728474 * S_Mnt  +      0.4607268669617 *
482839    +        S_MntMeatProducts  +     -0.3334944156024 * S_NumCatalogPurchases
482840    +          +     0.09267374022355 * S_RFMstat  +     0.47606901130176 *
482841    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.14955504394548 * S_AcceptedCmpTotal + -1.51573020728474 *
S_Mnt + 0.4607268669617 * S_MntMeatProducts + -0.3334944156024 * S_NumCatalogPurchases +
0.09267374022355 * S_RFMstat + 0.47606901130176 * S_Recency ;
482842    +   H1x1_2  =      0.2468028004293 * S_AcceptedCmpTotal
482843    +          +    -0.77717776485086 * S_Mnt  +     7.40002044896531 *
482844    +        S_MntMeatProducts  +     1.60897655452635 * S_NumCatalogPurchases
482845    +          +     0.67552122628568 * S_RFMstat  +    -0.32443547406066 *
482846    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.2468028004293 * S_AcceptedCmpTotal + -0.77717776485086 *
S_Mnt + 7.40002044896531 * S_MntMeatProducts + 1.60897655452635 * S_NumCatalogPurchases +
0.67552122628568 * S_RFMstat + -0.32443547406066 * S_Recency ;
482847    +   H1x1_3  =     6.59800324692585 * S_AcceptedCmpTotal
482848    +          +    -28.0912205253849 * S_Mnt  +     13.5059679211684 *
482849    +        S_MntMeatProducts  +     5.32084702602181 * S_NumCatalogPurchases
482850    +          +    -1.75455080633468 * S_RFMstat  +    -3.56741217768456 *
482851    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 6.59800324692585 * S_AcceptedCmpTotal + -28.0912205253849 *
S_Mnt + 13.5059679211684 * S_MntMeatProducts + 5.32084702602181 * S_NumCatalogPurchases +
-1.75455080633468 * S_RFMstat + -3.56741217768456 * S_Recency ;
482852    +   H1x1_1  =     2.30670471730853 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 2.30670471730853 + H1x1_1 ;
482853    +   H1x1_2  =     6.72353576768002 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 6.72353576768002 + H1x1_2 ;
482854    +   H1x1_3  =    -10.2093918588588 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -10.2093918588588 + H1x1_3 ;
482855    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
482856    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
482857    +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
482858    +   H1x1_2  = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
482859    +   H1x1_3  = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
482860    +END;
MPRINT(EM_DIAGRAM):   END;
482861    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
482862    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
482863    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
482864    +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
482865    +END;
MPRINT(EM_DIAGRAM):   END;
482866    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
482867    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
482868    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
482869    +
482870    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
482871    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
482872    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
482873    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
482874    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
482875    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
482876    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
482877    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
482878    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
482879    +end;
MPRINT(EM_DIAGRAM):   end;
482880    +else do;
MPRINT(EM_DIAGRAM):   else do;
482881    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
482882    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
482883    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
482884    +   end;
MPRINT(EM_DIAGRAM):   end;
482885    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
482886    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
482887    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
482888    +   end;
MPRINT(EM_DIAGRAM):   end;
482889    +   else do;
MPRINT(EM_DIAGRAM):   else do;
482890    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
482891    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
482892    +   end;
MPRINT(EM_DIAGRAM):   end;
482893    +end;
MPRINT(EM_DIAGRAM):   end;
482894    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
482895    +   P_DepVar1  =    -13.8690336647034 * H1x1_1  +     12.3879569416654 * H1x1_2
482896    +          +     2.67685271681444 * H1x1_3 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -13.8690336647034 * H1x1_1 + 12.3879569416654 * H1x1_2 +
2.67685271681444 * H1x1_3 ;
482897    +   P_DepVar1  =    -2.88709627935044 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.88709627935044 + P_DepVar1 ;
482898    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
482899    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
482900    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
482901    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
482902    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
482903    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
482904    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
482905    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
482906    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
482907    +END;
MPRINT(EM_DIAGRAM):   END;
482908    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
482909    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
482910    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
482911    +END;
MPRINT(EM_DIAGRAM):   END;
482912    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
482913    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
482914    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
482915    +END;
MPRINT(EM_DIAGRAM):   END;
482916    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
482917    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
482918    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
482919    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
482920    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
482921    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
482922    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
482923    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
482924    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
482925    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
482926    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
482927    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
482928    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
482929    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
482930    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
482931    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
482932    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
482933    +END;
MPRINT(EM_DIAGRAM):   END;
482934    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
482935    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
482936    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
482937    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
482938     run;
 
NOTE: DATA STEP view saved on file EMWS8.AUTONEURAL32_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.VARSEL_TRAIN.VIEW used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
482939     quit;
482940     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
482941     filename emflow
482941   ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural32\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural32\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * AutoNeural32: Scoring VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
482942     *------------------------------------------------------------*;
482943     * AutoNeural32: Scoring VALIDATE data;
482944     *------------------------------------------------------------*;
482945     data EMWS8.AutoNeural32_VALIDATE
482946     / view=EMWS8.AutoNeural32_VALIDATE
482947     ;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural32_VALIDATE / view=EMWS8.AutoNeural32_VALIDATE ;
482948     set EMWS8.Varsel_VALIDATE
482949     ;
MPRINT(EM_DIAGRAM):   set EMWS8.Varsel_VALIDATE ;
482950     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural32\EMFLOWSCORE.sas.
482951    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
482952    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
482953    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
482954    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
482955    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
482956    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
482957    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
482958    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
482959    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
482960    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
482961    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
482962    +LENGTH _WARN_ $4
482963    +      F_DepVar  $ 12
482964    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
482965    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
482966    +
482967    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
482968    +
482969    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
482970    +
482971    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
482972    +
482973    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
482974    +
482975    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
482976    +
482977    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
482978    +
482979    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
482980    +
482981    +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
482982    +
482983    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
482984    +
482985    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
482986    +
482987    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
482988    +
482989    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
482990    +
482991    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
482992    +
482993    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
482994    +
482995    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
482996    +
482997    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
482998    +
482999    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
483000    +*** Checking missing input Interval
483001    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
483002    +
483003    +IF NMISS(
483004    +   AcceptedCmpTotal ,
483005    +   Mnt ,
483006    +   MntMeatProducts ,
483007    +   NumCatalogPurchases ,
483008    +   RFMstat ,
483009    +   Recency   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Mnt , MntMeatProducts , NumCatalogPurchases
, RFMstat , Recency ) THEN DO;
483010    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
483011    +
483012    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
483013    +END;
MPRINT(EM_DIAGRAM):   END;
483014    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
483015    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
483016    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
483017    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
483018    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
483019    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
483020    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
483021    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
483022    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
483023    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
483024    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
483025    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
483026    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
483027    +END;
MPRINT(EM_DIAGRAM):   END;
483028    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
483029    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
483030    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
483031    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
483032    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
483033    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
483034    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
483035    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
483036    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
483037    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
483038    +   ELSE S_NumCatalogPurchases
483039    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
483040    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
483041    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
483042    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
483043    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
483044    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
483045    +END;
MPRINT(EM_DIAGRAM):   END;
483046    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
483047    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
483048    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
483049    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
483050    +   H1x1_1  =    -0.14955504394548 * S_AcceptedCmpTotal
483051    +          +    -1.51573020728474 * S_Mnt  +      0.4607268669617 *
483052    +        S_MntMeatProducts  +     -0.3334944156024 * S_NumCatalogPurchases
483053    +          +     0.09267374022355 * S_RFMstat  +     0.47606901130176 *
483054    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.14955504394548 * S_AcceptedCmpTotal + -1.51573020728474 *
S_Mnt + 0.4607268669617 * S_MntMeatProducts + -0.3334944156024 * S_NumCatalogPurchases +
0.09267374022355 * S_RFMstat + 0.47606901130176 * S_Recency ;
483055    +   H1x1_2  =      0.2468028004293 * S_AcceptedCmpTotal
483056    +          +    -0.77717776485086 * S_Mnt  +     7.40002044896531 *
483057    +        S_MntMeatProducts  +     1.60897655452635 * S_NumCatalogPurchases
483058    +          +     0.67552122628568 * S_RFMstat  +    -0.32443547406066 *
483059    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.2468028004293 * S_AcceptedCmpTotal + -0.77717776485086 *
S_Mnt + 7.40002044896531 * S_MntMeatProducts + 1.60897655452635 * S_NumCatalogPurchases +
0.67552122628568 * S_RFMstat + -0.32443547406066 * S_Recency ;
483060    +   H1x1_3  =     6.59800324692585 * S_AcceptedCmpTotal
483061    +          +    -28.0912205253849 * S_Mnt  +     13.5059679211684 *
483062    +        S_MntMeatProducts  +     5.32084702602181 * S_NumCatalogPurchases
483063    +          +    -1.75455080633468 * S_RFMstat  +    -3.56741217768456 *
483064    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 6.59800324692585 * S_AcceptedCmpTotal + -28.0912205253849 *
S_Mnt + 13.5059679211684 * S_MntMeatProducts + 5.32084702602181 * S_NumCatalogPurchases +
-1.75455080633468 * S_RFMstat + -3.56741217768456 * S_Recency ;
483065    +   H1x1_1  =     2.30670471730853 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 2.30670471730853 + H1x1_1 ;
483066    +   H1x1_2  =     6.72353576768002 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 6.72353576768002 + H1x1_2 ;
483067    +   H1x1_3  =    -10.2093918588588 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -10.2093918588588 + H1x1_3 ;
483068    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
483069    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
483070    +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
483071    +   H1x1_2  = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
483072    +   H1x1_3  = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
483073    +END;
MPRINT(EM_DIAGRAM):   END;
483074    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
483075    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
483076    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
483077    +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
483078    +END;
MPRINT(EM_DIAGRAM):   END;
483079    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
483080    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
483081    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
483082    +
483083    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
483084    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
483085    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
483086    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
483087    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
483088    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
483089    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
483090    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
483091    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
483092    +end;
MPRINT(EM_DIAGRAM):   end;
483093    +else do;
MPRINT(EM_DIAGRAM):   else do;
483094    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
483095    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
483096    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
483097    +   end;
MPRINT(EM_DIAGRAM):   end;
483098    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
483099    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
483100    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
483101    +   end;
MPRINT(EM_DIAGRAM):   end;
483102    +   else do;
MPRINT(EM_DIAGRAM):   else do;
483103    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
483104    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
483105    +   end;
MPRINT(EM_DIAGRAM):   end;
483106    +end;
MPRINT(EM_DIAGRAM):   end;
483107    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
483108    +   P_DepVar1  =    -13.8690336647034 * H1x1_1  +     12.3879569416654 * H1x1_2
483109    +          +     2.67685271681444 * H1x1_3 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -13.8690336647034 * H1x1_1 + 12.3879569416654 * H1x1_2 +
2.67685271681444 * H1x1_3 ;
483110    +   P_DepVar1  =    -2.88709627935044 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.88709627935044 + P_DepVar1 ;
483111    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
483112    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
483113    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
483114    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
483115    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
483116    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
483117    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
483118    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
483119    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
483120    +END;
MPRINT(EM_DIAGRAM):   END;
483121    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
483122    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
483123    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
483124    +END;
MPRINT(EM_DIAGRAM):   END;
483125    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
483126    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
483127    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
483128    +END;
MPRINT(EM_DIAGRAM):   END;
483129    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
483130    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
483131    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
483132    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
483133    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
483134    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
483135    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
483136    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
483137    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
483138    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
483139    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
483140    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
483141    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
483142    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
483143    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
483144    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
483145    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
483146    +END;
MPRINT(EM_DIAGRAM):   END;
483147    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
483148    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
483149    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
483150    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
483151     run;
 
NOTE: DATA STEP view saved on file EMWS8.AUTONEURAL32_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.VARSEL_VALIDATE.VIEW used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
483152     quit;
483153     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
483154     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
483155     * AutoNeural32: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * AutoNeural32: Computing metadata for TRAIN data;
483156     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
 
NOTE: View EMWS8.AUTONEURAL32_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural32\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS8.AutoNeural32_TRAIN out=_tempAdvisor
noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS8.AutoNeural32_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS8.AutoNeural32_TRAIN out=WORK.M28IXU33
noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M28IXU33;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20
INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M28IXU33(keep=name type length label format formatl
formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then format = strip(format)!!strip(put(formatl,
best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd,
best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then informat =
strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl,
best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M28IXU33;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M28IXU33;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M1OHGLE4 NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1OHGLE4;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M1OHGLE4;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M09SCXPO(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M1OHGLE4;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1OHGLE4;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32
FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M1OHGLE4;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN"
"MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO"
"QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" "YEAR" "YYMMDD" "YYMON"
"YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD"
"EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" ))
formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype =
"DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" ))
formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT"
"NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB"
"SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType =
"DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then
level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA',
'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W',
'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_
('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL',
'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT',
'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1OHGLE4;
MPRINT(EMADVISECOLUMNS):   set WORK.M1OHGLE4;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL=
"Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY=
"Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower limit" UPPERLIMIT=
"Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL=
"Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Varsel_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Varsel_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural32_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT
LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "AutoNeural32";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("P_DEPVAR1") creator = "AutoNeural32";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR1") creator = "AutoNeural32";
MPRINT(EM_DIAGRAM):   when("P_DEPVAR0") creator = "AutoNeural32";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR0") creator = "AutoNeural32";
MPRINT(EM_DIAGRAM):   when("F_DEPVAR") creator = "AutoNeural32";
MPRINT(EM_DIAGRAM):   when("I_DEPVAR") creator = "AutoNeural32";
MPRINT(EM_DIAGRAM):   when("U_DEPVAR") creator = "AutoNeural32";
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "AutoNeural32";
MPRINT(EM_DIAGRAM):   when("DEPVAR") model = "AutoNeural32";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * AutoNeural32: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
483468     data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
483469     set EMWS8.AutoNeural32_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural32_EMINFO;
483470     where DATA='AutoNeural32' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='AutoNeural32' and KEY ^in('DECDATA', 'DECMETA',
'IMPORTANCE', 'MODEL');
483471     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.AUTONEURAL32_EMINFO.
      WHERE (DATA='AutoNeural32') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
483472     data EMWS8.AutoNeural32_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural32_EMINFO;
483473     length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
483474     input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
483475     cards;
MPRINT(EM_DIAGRAM):   cards;
 
NOTE: The data set EMWS8.AUTONEURAL32_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   run;
483479     run;
483480     data EMWS8.AutoNeural32_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural32_EMINFO;
483481     set EMWS8.AutoNeural32_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural32_EMINFO WORK.MODELTEMP_INFO;
483482     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set EMWS8.AUTONEURAL32_EMINFO.
NOTE: There were 0 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS8.AUTONEURAL32_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
483483     proc sort data = EMWS8.AutoNeural32_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.AutoNeural32_EMINFO NOTHREADS;
483484     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
483485     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set EMWS8.AUTONEURAL32_EMINFO.
NOTE: The data set EMWS8.AUTONEURAL32_EMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
483486     proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
483487     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
483488     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.FIMPORT_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 1 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
483489     proc sort data = EMWS8.AutoNeural32_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS8.AutoNeural32_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
483490     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
483491     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 3 observations read from the data set EMWS8.AUTONEURAL32_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
483492     data EMWS8.AutoNeural32_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural32_EMINFO;
483493     merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
483494     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
483495     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 3 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS8.AUTONEURAL32_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
483496     proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
483497     delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
483498     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
483499     quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
NOTE: View EMWS8.AUTONEURAL32_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
 
NOTE: View EMWS8.AUTONEURAL32_VALIDATE.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "28. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "16.11 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Report Log
Date:                28. April 2016
Time:                16.11 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O2L0V4C7
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural32\EMREPORT.out" encoding="UTF-8"
NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O2L0V4C7 new;
MPRINT(EM_DIAGRAM):   run;
483523     proc sort data=EMWS8.AutoNeural32_OUTFIT nodupkey;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS8.AutoNeural32_OUTFIT nodupkey;
483524     by _NAME_;
MPRINT(EM_DIAGRAM):   by _NAME_;
483525     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set EMWS8.AUTONEURAL32_OUTFIT.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set EMWS8.AUTONEURAL32_OUTFIT has 2 observations and 36 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
483526     data EMWS8.AutoNeural32_EMOUTFIT(rename=(_NAME_=TARGET));
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural32_EMOUTFIT(rename=(_NAME_=TARGET));
483527     set EMWS8.AutoNeural32_OUTFIT(where=(_NAME_ eq 'OVERALL'));
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural32_OUTFIT(where=(_NAME_ eq 'OVERALL'));
483528     label _NAME_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _NAME_ = "Target";
483529     if _NAME_='OVERALL' then _NAME_='DepVar';
MPRINT(EM_DIAGRAM):   if _NAME_='OVERALL' then _NAME_='DepVar';
483530     drop _ITER_;
MPRINT(EM_DIAGRAM):   drop _ITER_;
483531     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.AUTONEURAL32_OUTFIT.
      WHERE _NAME_='OVERALL';
NOTE: The data set EMWS8.AUTONEURAL32_EMOUTFIT has 1 observations and 35 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
483532     data EMWS8.AutoNeural32_EMOUTFIT;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural32_EMOUTFIT;
483533     set EMWS8.AutoNeural32_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural32_EMOUTFIT;
483534     length TargetLabel $200;
MPRINT(EM_DIAGRAM):   length TargetLabel $200;
483535     label targetLabel = "%sysfunc(sasmsg(sashelp.dmine, meta_targetlabel_vlabel,
483535   ! NOQUOTE))";
MPRINT(EM_DIAGRAM):   label targetLabel = "Target Label";
483536     if upcase(TARGET) eq "DEPVAR" then TargetLabel = 'DepVar';
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TargetLabel = 'DepVar';
483537     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.AUTONEURAL32_EMOUTFIT.
NOTE: The data set EMWS8.AUTONEURAL32_EMOUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
483538     proc sort data=EMWS8.AutoNeural32_EMREPORTFIT nothreads;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS8.AutoNeural32_EMREPORTFIT nothreads;
483539     by TARGET;
MPRINT(EM_DIAGRAM):   by TARGET;
483540     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 21 observations read from the data set EMWS8.AUTONEURAL32_EMREPORTFIT.
NOTE: The data set EMWS8.AUTONEURAL32_EMREPORTFIT has 21 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
483541     %let _EMwarndup = 0;
483542     %let _EMtargetdup =;
483543     %let _EMASEtargetdup =;
483544     data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
483545     set EMWS8.AutoNeural32_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural32_EMOUTFIT;
483546     if .<_ASE_<0.000001 then do;
MPRINT(EM_DIAGRAM):   if .<_ASE_<0.000001 then do;
483547     call symput('_EMwarndup', '1');
MPRINT(EM_DIAGRAM):   call symput('_EMwarndup', '1');
483548     call symput('_EMtargetdup', target);
MPRINT(EM_DIAGRAM):   call symput('_EMtargetdup', target);
483549     call symput('_EMASEtargetdup', put(_ASE_, best.));
MPRINT(EM_DIAGRAM):   call symput('_EMASEtargetdup', put(_ASE_, best.));
483550     end;
MPRINT(EM_DIAGRAM):   end;
483551     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.AUTONEURAL32_EMOUTFIT.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
483552     proc sort data=EMWS8.Varsel_CMeta_TRAIN out=WORK.SUBSETINMETA;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS8.Varsel_CMeta_TRAIN out=WORK.SUBSETINMETA;
483553     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
483554     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 10 observations read from the data set EMWS8.VARSEL_CMETA_TRAIN.
NOTE: The data set WORK.SUBSETINMETA has 10 observations and 20 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
483555     proc sort data=EMWS8.AutoNeural32_VariableSet out=WORK.SUBSETVARSET(keep=NAME
483555   ! REPORT);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural32_VariableSet
out=WORK.SUBSETVARSET(keep=NAME REPORT);
483556     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
483557     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 7 observations read from the data set EMWS8.AUTONEURAL32_VARIABLESET.
NOTE: The data set WORK.SUBSETVARSET has 7 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
483558     data WORK.ASSESS_META;
MPRINT(EM_DIAGRAM):   data WORK.ASSESS_META;
483559     merge WORK.SUBSETINMETA WORK.SUBSETVARSET;
MPRINT(EM_DIAGRAM):   merge WORK.SUBSETINMETA WORK.SUBSETVARSET;
483560     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
483561     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 10 observations read from the data set WORK.SUBSETINMETA.
NOTE: There were 7 observations read from the data set WORK.SUBSETVARSET.
NOTE: The data set WORK.ASSESS_META has 10 observations and 20 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
483562     data EM_temp_assessMeta;
MPRINT(EM_DIAGRAM):    data EM_temp_assessMeta;
483563     set EMWS8.AutoNeural32_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural32_CMeta_TRAIN;
483564     where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION', 'ASSESS', 'COST')
483564   ! ;
MPRINT(EM_DIAGRAM):   where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION',
'ASSESS', 'COST');
483565     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set EMWS8.AUTONEURAL32_CMETA_TRAIN.
      WHERE role in ('ASSESS', 'CLASSIFICATION', 'COST', 'DECISION', 'PREDICT', 'RESIDUAL');
NOTE: The data set WORK.EM_TEMP_ASSESSMETA has 8 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
483566     data EM_temp_assessdata;
MPRINT(EM_DIAGRAM):    data EM_temp_assessdata;
483567     set EMWS8.AutoNeural32_TRAIN(keep=
483568     F_DepVar
483569     I_DepVar
483570     P_DepVar0
483571     P_DepVar1
483572     R_DepVar0
483573     R_DepVar1
483574     U_DepVar
483575     _WARN_
483576     DepVar
483577     );
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural32_TRAIN(keep= F_DepVar I_DepVar P_DepVar0 P_DepVar1
R_DepVar0 R_DepVar1 U_DepVar _WARN_ DepVar );
483578     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Variable _WARN_ is uninitialized.
NOTE: There were 2374 observations read from the data set EMWS8.PART_TRAIN.
NOTE: View EMWS8.AUTONEURAL32_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
NOTE: There were 2374 observations read from the data set EMWS8.VARSEL_TRAIN.
NOTE: There were 2374 observations read from the data set EMWS8.AUTONEURAL32_TRAIN.
NOTE: The data set WORK.EM_TEMP_ASSESSDATA has 2374 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
 
 
MPRINT(EM_DIAGRAM):    proc freq data=EM_temp_assessdata noprint;
MPRINT(EM_DIAGRAM):   table I_DepVar*F_DepVar / out = WORK.AutoNeural32_0GYVVL0 nocol norow
outpct;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.AutoNeural32_0GYVVL0;
MPRINT(EM_DIAGRAM):   length _TYPE_ $10 DATAROLE TARGET $32 TARGETLABEL $200 FROM INTO $32
CORRECTTEXT $40 ;
MPRINT(EM_DIAGRAM):   label _TYPE_ = "Outcome Type";
MPRINT(EM_DIAGRAM):   label DATAROLE = "Data Role";
MPRINT(EM_DIAGRAM):   label TARGET = "Target Variable";
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   label FROM = "Target";
MPRINT(EM_DIAGRAM):   label INTO = "Outcome";
MPRINT(EM_DIAGRAM):   label PCT_ROW = "Target Percentage";
MPRINT(EM_DIAGRAM):   label PCT_COL = "Outcome Percentage";
MPRINT(EM_DIAGRAM):   label COUNT = "Frequency Count";
MPRINT(EM_DIAGRAM):   label PERCENT = "Total Percentage";
MPRINT(EM_DIAGRAM):   label CORRECTTEXT = "Correct Text";
MPRINT(EM_DIAGRAM):   label CORRECT = "Correct";
MPRINT(EM_DIAGRAM):   set WORK.AutoNeural32_0GYVVL0(rename=(F_DepVar=FROM I_DepVar=INTO));
MPRINT(EM_DIAGRAM):   retain _TYPE_ 'PREDICTION' DATAROLE "TRAIN" TARGET "DepVar";
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TARGETLABEL = 'DepVar';
MPRINT(EM_DIAGRAM):   if FROM eq INTO then do;
MPRINT(EM_DIAGRAM):   CORRECT = 0;
MPRINT(EM_DIAGRAM):   CORRECTTEXT="Correct";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   CORRECT = 1;
MPRINT(EM_DIAGRAM):   CORRECTTEXT="Incorrect";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural32_EMCLASSIFICATION;
MPRINT(EM_DIAGRAM):   set WORK.AutoNeural32_0GYVVL0;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   set WORK.AutoNeural32_0GYVVL0;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.MISCREPORT(drop=INTO FROM _TYPE_);
MPRINT(EM_DIAGRAM):   set WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   length MISC $12;
MPRINT(EM_DIAGRAM):   if FROM='1' and INTO='1' then MISC='TRUEEVENT';
MPRINT(EM_DIAGRAM):   else if FROM='1' and INTO ne '1' then MISC='FALSENEVENT';
MPRINT(EM_DIAGRAM):   else if FROM ne '1' and INTO='1' then MISC='FALSEEVENT';
MPRINT(EM_DIAGRAM):   else if FROM ne'1' and INTO ne '1' then MISC='TRUENEVENT';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.MISCREPORT nothreads;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc summary data=WORK.MISCREPORT NWAY;
MPRINT(EM_DIAGRAM):   output out=WORK.MISCCOUNT(drop=_FREQ_ _TYPE_) SUM=COUNT;
MPRINT(EM_DIAGRAM):   CLASS MISC;
MPRINT(EM_DIAGRAM):   VAR COUNT;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc transpose data=WORK.MISCCOUNT out=WORK.MISCREPORT(drop=_NAME_
_LABEL_);
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   ID MISC;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural32_EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   length TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TARGETLABEL = 'DepVar';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data ASSESS_REPORTMETA;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural32_VariableSet;
MPRINT(EM_DIAGRAM):   where REPORT='Y';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename temp catalog 'sashelp.emassmt.em_assess.source';
MPRINT(EM_DIAGRAM):   filename temp;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural32_DepVar_DM;
MPRINT(EM_DIAGRAM):   where _TYPE_="TARGET";
MPRINT(EM_DIAGRAM):   call symput('ASSMT_EVENT', strip(event));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):
MPRINT(EM_ASSESS):   data _ea_tmpdata;
MPRINT(EM_ASSESS):   set EM_temp_assessdata;
MPRINT(EM_ASSESS):   _tmpfreqvar_=1;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_CHECKEMSETINIT):   DATA _NULL_;
MPRINT(EM_CHECKEMSETINIT):   EM_SETINIT = 'N';
MPRINT(EM_CHECKEMSETINIT):   IF SYSPROD('PRODNUM50') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM448') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM102') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM103') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   CALL SYMPUT('EM_SETINIT', EM_SETINIT);
MPRINT(EM_CHECKEMSETINIT):   RUN;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Reading in reporting data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET ASSESS_REPORTMETA END = EOF;
MPRINT(EM_ASSESS):   IF TYPE = "C" OR UPCASE (LEVEL) IN ("NOMINAL", "BINARY" , "ORDINAL") THEN
DO;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) NE UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   NUMCTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTC" || LEFT (PUT (NUMCTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "C");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF UPCASE(NAME) NE UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   NUMNTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTN" || LEFT (PUT (NUMNTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMNTOREPORT", NUMNTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMCTOREPORT", NUMCTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMTOREPORT", SUM (NUMNTOREPORT, NUMCTOREPORT));
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   PROC DMDB DATA = _ea_tmpdata VAROUT = VAROUT DMDBCAT = _D CLASSOUT =
_ASSMT_CLASSOUT;
MPRINT(EM_ASSESS):   CLASS F_DepVar ;
 
MPRINT(EM_ASSESS):   VAR P_DepVar1 _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_;
MPRINT(EM_ASSESS):   RUN ;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   PROC SORT DATA = _ASSMT_CLASSOUT;
MPRINT(EM_ASSESS):   BY NAME;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _auxeventname (keep = __event__) ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ...FLAG0_1 = ..... TARGET IS 0, 1 & EVENT = 1;
 
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   length __event__ $ 32;
MPRINT(EM_ASSESS):   RETAIN FLAG0_1 1 NUM1 . NUM0 . __event__ "_missing_" ;
 
MPRINT(EM_ASSESS):   SET _ASSMT_CLASSOUT END = EOF;
MPRINT(EM_ASSESS):   BY NAME;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ....... LEVEL = BINARY OR NOMINAL OR ORDINAL;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   IF UPCASE(NAME) = UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   CUMFREQ + FREQUENCY;
MPRINT(EM_ASSESS):   IF LEVEL NE "." THEN DO;
MPRINT(EM_ASSESS):   N1 + 1;
MPRINT(EM_ASSESS):   IF (NRAW NE 0 AND NRAW NE 1) OR TYPE NE "N" OR "" > " " THEN FLAG0_1 = 0;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ......................... IF EVENT NE BLANK;
MPRINT(EM_ASSESS):   * ....................LEVEL IS CHAR VAR ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   IF UPCASE("1") = UPCASE(LEVEL) THEN DO;
MPRINT(EM_ASSESS):   NUM1 = FREQUENCY;
MPRINT(EM_ASSESS):   IF TYPE = "C" THEN do;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("EVENTVALUERAW", CRAW );
MPRINT(EM_ASSESS):   __event__ = craw;
MPRINT(EM_ASSESS):   end;
MPRINT(EM_ASSESS):   ELSE do;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("EVENTVALUERAW", NRAW );
MPRINT(EM_ASSESS):   __event__ = nraw;
MPRINT(EM_ASSESS):   end;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF LAST.NAME THEN DO;
 
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * .............. IN NOMINAL CASE, NEED TO GROUP ALL '0' ;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   NUM0 = SUM (CUMFREQ, - NUM1);
MPRINT(EM_ASSESS):   IF NUM0 < 0 THEN NUM0 = 0;
MPRINT(EM_ASSESS):   IF NUM1 = . THEN NUM1 = 0;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUM0", NUM0 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUM1", NUM1);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PNUM1", NUM1 / CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PNUM0", (CUMFREQ - NUM1) / CUMFREQ);
MPRINT(EM_ASSESS):   IF TYPE = "C" THEN DO;
MPRINT(EM_ASSESS):   FLAG0_1 = 0;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "C" );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF "" = " " THEN DO;
MPRINT(EM_ASSESS):   IF "1" NE "1" THEN FLAG0_1 = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "N" );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ................... IF TYPE = N;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("FLAG0_1", FLAG0_1 );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..................IF LAST.NAME ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ...............IF LEVEL NE '.' ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * .............. IF NAME = TARGET;
MPRINT(EM_ASSESS):   ELSE IF "" > " " AND UPCASE(NAME) = UPCASE("") THEN DO;
MPRINT(EM_ASSESS):   NUMDECISIONS + 1;
MPRINT(EM_ASSESS):   LEVEL = TRANSLATE (LEVEL, "_", "'", "_", '"');
MPRINT(EM_ASSESS):   CALL SYMPUTX ("D_LABEL" || LEFT (PUT (NUMDECISIONS, 3.)), LEVEL );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..................... ELSE IF UPCASE;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   output _auxeventname;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMOBS", CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMDECISIONS", NUMDECISIONS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET VAROUT END = EOF;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) = UPCASE ("P_DepVar1") THEN DO;
MPRINT(EM_ASSESS):   IF N = 0 THEN DO;
MPRINT(EM_ASSESS):   PUT //// "          Warning: All posterior probabilities are missing
values ";
MPRINT(EM_ASSESS):   PUT ///;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("ALLMISS", 1);
MPRINT(EM_ASSESS):   STOP;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("ALLMISS", 0);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB", MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB", MAX);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("DIFF", MAX - MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NMISSPROB", NMISS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF UPCASE (NAME) = UPCASE ("_tmpfreqvar_") THEN DO;
MPRINT(EM_ASSESS):   AUXMIN = MIN - INT (MIN);
MPRINT(EM_ASSESS):   AUXMAX = MAX - INT (MAX);
MPRINT(EM_ASSESS):   IF AUXMIN > 0 OR AUXMAX > 0 THEN CALL SYMPUTX ("USEWEIGHT", "Y");
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("USEWEIGHT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _ANY0;
MPRINT(EM_ASSESS):   SET _ea_tmpdata (KEEP = F_DepVar P_DepVar1 _tmpfreqvar_ );
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................... No Formats;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF LEFT ( F_DepVar ) = "1" THEN NTARGET = 1;
MPRINT(EM_ASSESS):   ELSE NTARGET = 0;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .............. Before proc summary of binary case;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC SUMMARY DATA = _ANY0 (KEEP = P_DepVar1 NTARGET _tmpfreqvar_ WHERE =
(NTARGET > . )) NWAY MISSING;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   CLASS P_DepVar1 ;
MPRINT(EM_ASSESS):   VAR NTARGET ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   OUTPUT OUT = ANYSUM (DROP = _TYPE_) MEAN = _MEANTARGET _MEANFREQVAR ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... Main Data Set Processing, Binary case;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK (KEEP = BASECAPC BASECAP __EVENT__ BASEEVENTS
BASEGAIN BASELIFT BASERESP BASERESPC BESTCAP BESTCAPC BESTGAIN BESTLIFT BESTLIFTC
BESTNUMEVENTS BESTRESP BESTRESPC BIN CBASELIFT C_LIFT C_P_CAPT_RESP C_P_RESP GAIN LIFT MAXPROB
MINPROB MNPROB NUMNONRESP NUMOBS NUMRESP PERCENTILE P_CAPT_RESP P_RESP ) WORK._TEMPSCOREDIST
(KEEP = BIN LOWERPROB UPPERPROB EVENTVALUE SCR_NUMEVENTS MODELSCORE SCR_NUMNONEVENTS RANGE
NUMOBSINGROUP PERCOBSINGROUP C_PERCOBSINGROUP SCR_P_EVENTS SCR_CP_EVENTS SCR_P_NONEVENTS
SCR_CP_NONEVENTS SCR_MNPROB SCR_MINPROB SCR_MAXPROB ) ;
 
MPRINT(EM_ASSESS):   SET ANYSUM END = EOF;
 
MPRINT(EM_ASSESS):   IF _N_ = 1 THEN SET _AUXEVENTNAME;
 
MPRINT(EM_ASSESS):   RETAIN MINPROB1 - MINPROB20 1 MAXPROB1 - MAXPROB20 0 MNPROB1 - MNPROB20 0
NUMOBS1 - NUMOBS20 0 NUMRESP1 - NUMRESP20 0 TRUEPOS1 - TRUEPOS100 0 TRUENEG1 - TRUENEG100 0
FALSEPOS1 - FALSEPOS100 0 FALSENEG1 - FALSENEG100 0 EVENTS1 - EVENTS100 NONEVENTS1 -
NONEVENTS100 0 FIRSTIN1 - FIRSTIN100 . LASTIN1 - LASTIN100 . RESPRATE 0.151221567 _NEVENTS 359
_NNONEVENTS 2015 TARGET "NTARGET" ;
MPRINT(EM_ASSESS):   ARRAY MINPROBS (20) MINPROB1 - MINPROB20;
MPRINT(EM_ASSESS):   ARRAY MAXPROBS (20) MAXPROB1 - MAXPROB20;
MPRINT(EM_ASSESS):   ARRAY MNPROBS (20) MNPROB1 - MNPROB20;
MPRINT(EM_ASSESS):   ARRAY NUMOBSS (20) NUMOBS1 - NUMOBS20;
MPRINT(EM_ASSESS):   ARRAY NUMRESPS (20) NUMRESP1 - NUMRESP20;
MPRINT(EM_ASSESS):   ARRAY TRUEPOSX (100) TRUEPOS1 - TRUEPOS100;
MPRINT(EM_ASSESS):   ARRAY FALSEPOSX (100) FALSEPOS1 - FALSEPOS100;
MPRINT(EM_ASSESS):   ARRAY FALSENEGX (100) FALSENEG1 - FALSENEG100;
MPRINT(EM_ASSESS):   ARRAY TRUENEGX (100) TRUENEG1 - TRUENEG100;
MPRINT(EM_ASSESS):   ARRAY _EVENTS (100) EVENTS1 - EVENTS100;
MPRINT(EM_ASSESS):   ARRAY NONEVENTS (100) NONEVENTS1 - NONEVENTS100;
MPRINT(EM_ASSESS):   ARRAY FIRSTIN (100) FIRSTIN1 - FIRSTIN100;
MPRINT(EM_ASSESS):   ARRAY LASTIN (100) LASTIN1 - LASTIN100;
MPRINT(EM_ASSESS):   RETAIN SCR_MNPROB1 - SCR_MNPROB100 0 SCR_MINPROB1 - SCR_MINPROB100 1
SCR_MAXPROB1 - SCR_MAXPROB100 0;
MPRINT(EM_ASSESS):   ARRAY SCR_MNPROBS (100) SCR_MNPROB1 - SCR_MNPROB100;
MPRINT(EM_ASSESS):   ARRAY SCR_MINPROBS (100) SCR_MINPROB1 - SCR_MINPROB100;
MPRINT(EM_ASSESS):   ARRAY SCR_MAXPROBS (100) SCR_MAXPROB1 - SCR_MAXPROB100;
MPRINT(EM_ASSESS):   DROP SCR_MINPROB1 - SCR_MINPROB100 SCR_MAXPROB1 - SCR_MAXPROB100
SCR_MNPROB1 - SCR_MNPROB100 ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...... Area For 8 Financials ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF _MEANTARGET = . THEN _MEANTARGET = RESPRATE;
MPRINT(EM_ASSESS):   DROP N1 _K SUMWEIGHTS ;
MPRINT(EM_ASSESS):   SUMWEIGHTS = 1;
 
MPRINT(EM_ASSESS):   DO _K = 1 TO CEIL (_FREQ_);
MPRINT(EM_ASSESS):   IF _K = CEIL (_FREQ_) THEN DO;
MPRINT(EM_ASSESS):   IF _FREQ_ < CEIL (_FREQ_) THEN _WEIGHT = _FREQ_ - FLOOR (_FREQ_);
MPRINT(EM_ASSESS):   ELSE _WEIGHT = 1;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE _WEIGHT = 1;
MPRINT(EM_ASSESS):   N1 + _WEIGHT;
MPRINT(EM_ASSESS):   NTARGET = _MEANTARGET ;
MPRINT(EM_ASSESS):   DECILE = MIN (20, CEIL (N1 * 20 / 2374));
MPRINT(EM_ASSESS):   MINPROBS ( DECILE) = MIN (MINPROBS ( DECILE), P_DepVar1 );
MPRINT(EM_ASSESS):   MAXPROBS ( DECILE) = MAX (MAXPROBS ( DECILE), P_DepVar1 );
MPRINT(EM_ASSESS):   MNPROBS ( DECILE) = SUM (MNPROBS ( DECILE), P_DepVar1 * _WEIGHT);
MPRINT(EM_ASSESS):   NUMOBSS ( DECILE) = NUMOBSS ( DECILE) + _WEIGHT;
MPRINT(EM_ASSESS):   NUMRESPS ( DECILE) = NUMRESPS ( DECILE) + _MEANTARGET * _WEIGHT;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ outside of do loop, Area for final ROC;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   RANKDELTA = (ROUND ( _FREQ_ ) + 1) / 2;
MPRINT(EM_ASSESS):   RANK = UNTIEDRANK + RANKDELTA;
MPRINT(EM_ASSESS):   DROP RANK ;
MPRINT(EM_ASSESS):   SUMRANK1 + RANK * ROUND (_MEANTARGET * _FREQ_, .0000001);
MPRINT(EM_ASSESS):   UNTIEDRANK + ROUND (_FREQ_, .00000001);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Area For ROC Curve;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DO _K = 1 TO 100;
MPRINT(EM_ASSESS):   IF P_DepVar1 * 100 >= _K THEN DO;
MPRINT(EM_ASSESS):   TRUEPOSX ( _K ) + _FREQ_ * _MEANTARGET ;
MPRINT(EM_ASSESS):   FALSEPOSX ( _K ) + _FREQ_ * (1 - _MEANTARGET) ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   TRUENEGX ( _K ) + _FREQ_ * ( 1 - _MEANTARGET) ;
MPRINT(EM_ASSESS):   FALSENEGX ( _K ) + _FREQ_ * _MEANTARGET ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   SLOT = MIN (MAX (CEIL (P_DepVar1 * 100), 1), 100) ;
MPRINT(EM_ASSESS):   DROP SLOT;
MPRINT(EM_ASSESS):   FIRSTIN ( SLOT ) = MIN ( FIRSTIN ( SLOT ), P_DepVar1);
MPRINT(EM_ASSESS):   LASTIN ( SLOT ) = MAX ( LASTIN ( SLOT ), P_DepVar1);
MPRINT(EM_ASSESS):   _EVENTS ( SLOT) = _EVENTS ( SLOT) + _FREQ_ * _MEANTARGET;
MPRINT(EM_ASSESS):   NONEVENTS ( SLOT) = NONEVENTS ( SLOT) + _FREQ_ * (1 - _MEANTARGET);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ START OF OUTDIST IN BINARY CASE MAIN DATA STEP ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   SCR_MNPROBS ( SLOT ) = SUM (SCR_MNPROBS (SLOT), P_DepVar1 * _FREQ_ );
MPRINT(EM_ASSESS):   SCR_MINPROBS ( SLOT ) = MIN (SCR_MINPROBS (SLOT), P_DepVar1 );
MPRINT(EM_ASSESS):   SCR_MAXPROBS ( SLOT ) = MAX (SCR_MAXPROBS (SLOT), P_DepVar1 );
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ End of Outdist in Binary case main DATA STEP ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   PUT //;
MPRINT(EM_ASSESS):   DO K = 1 TO 20;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LENGTH EVENTVALUE $ 32;
MPRINT(EM_ASSESS):   RETAIN EVENTVALUE "1" ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ......... Start of EOF area of BINARY processing of main data set ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SUMRANK1", SUMRANK1);
MPRINT(EM_ASSESS):   LENGTH DATAROLE $ 10;
MPRINT(EM_ASSESS):   RETAIN DATAROLE "TRAIN" ;
MPRINT(EM_ASSESS):   RETAIN OVLMIN 4.0470409E-6 OVLMAX 0.9999101185 ;
MPRINT(EM_ASSESS):   DROP OVLMIN OVLMAX ;
MPRINT(EM_ASSESS):   C_NUMOBS = 0;
MPRINT(EM_ASSESS):   C_NUM_RESP = 0;
MPRINT(EM_ASSESS):   C_NUM_NONRESP = 0;
MPRINT(EM_ASSESS):   C_P_RESP = 0;
MPRINT(EM_ASSESS):   P_CAPT_RESP = 0;
MPRINT(EM_ASSESS):   C_P_CAPT_RESP = 0;
MPRINT(EM_ASSESS):   PREVIOUSPROFIT = 0;
MPRINT(EM_ASSESS):   MAXPROFIT = 0;
MPRINT(EM_ASSESS):   _KS_BIN_ = 0;
MPRINT(EM_ASSESS):   DROP _KS_BIN_;
MPRINT(EM_ASSESS):   AVGNUMRESP = _NEVENTS / 20;
MPRINT(EM_ASSESS):   BASERESP = 100 * RESPRATE;
MPRINT(EM_ASSESS):   BASERESPC = BASERESP;
MPRINT(EM_ASSESS):   BASECAP = 100 / 20;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................Start OF Gainschart = Outranks Area;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   _KS_BIN_PROB = 0;
MPRINT(EM_ASSESS):   DO GROUP = 20 TO 1 BY -1;
 
MPRINT(EM_ASSESS):   BASECAPC + BASECAP;
MPRINT(EM_ASSESS):   PERCENTILE = GROUP * (100 / 20);
MPRINT(EM_ASSESS):   MINPROB = MINPROBS ( GROUP);
MPRINT(EM_ASSESS):   MAXPROB = MAXPROBS ( GROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB" || LEFT ( PUT (GROUP, 3.)), MINPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB" || LEFT ( PUT (GROUP, 3.)), MAXPROB);
MPRINT(EM_ASSESS):   NUMOBS = NUMOBSS ( GROUP);
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN MNPROB = MNPROBS ( GROUP) / NUMOBS;
MPRINT(EM_ASSESS):   ELSE MNPROB = .;
MPRINT(EM_ASSESS):   C_NUMOBS = SUM (NUMOBS, C_NUMOBS);
MPRINT(EM_ASSESS):   NUMRESP = NUMRESPS ( GROUP);
MPRINT(EM_ASSESS):   NUMNONRESP = NUMOBS - NUMRESP;
MPRINT(EM_ASSESS):   C_AVGNUM_RESP + AVGNUMRESP;
MPRINT(EM_ASSESS):   IF C_NUMOBS <= _NEVENTS THEN DO;
MPRINT(EM_ASSESS):   BESTNUMEVENTS = NUMOBS;
MPRINT(EM_ASSESS):   BESTCAPC = C_NUMOBS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   BASEEVENTS = _NEVENTS / 20;
MPRINT(EM_ASSESS):   BASENONEVENTS = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   FLAG + 1;
MPRINT(EM_ASSESS):   DROP FLAG;
MPRINT(EM_ASSESS):   BESTNUMEVENTS = _NEVENTS - C_NUMOBS + NUMOBS;
MPRINT(EM_ASSESS):   IF FLAG > 1 THEN BESTNUMEVENTS = 0;
MPRINT(EM_ASSESS):   BESTCAPC = 100;
MPRINT(EM_ASSESS):   IF C_NUMOBS - _NEVENTS <= NUMOBS THEN DO;
MPRINT(EM_ASSESS):   BASEEVENTS = C_NUMOBS - _NEVENTS;
MPRINT(EM_ASSESS):   BASENONEVENTS = NUMOBS - C_NUMOBS + _NEVENTS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BASEEVENTS = 0;
MPRINT(EM_ASSESS):   BASENONEVENTS = NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   BESTCAP = BESTNUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   BESTLIFT = BESTNUMEVENTS / AVGNUMRESP;
MPRINT(EM_ASSESS):   C_BESTNUMEVENTS + BESTNUMEVENTS;
MPRINT(EM_ASSESS):   DROP C_BESTNUMEVENTS;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN BESTLIFTC = C_BESTNUMEVENTS / (_NEVENTS / 2374 *
C_NUMOBS);
MPRINT(EM_ASSESS):   ELSE BESTLIFTC = .;
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BESTRESP = BESTNUMEVENTS * 100 / NUMOBS;
MPRINT(EM_ASSESS):   P_RESP = NUMRESP * 100 / NUMOBS;
MPRINT(EM_ASSESS):   P_NONRESP = NUMNONRESP * 100 / NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTRESP = .;
MPRINT(EM_ASSESS):   P_RESP = .;
MPRINT(EM_ASSESS):   P_NONRESP = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BESTRESPC = C_BESTNUMEVENTS * 100 / C_NUMOBS;
MPRINT(EM_ASSESS):   BESTGAIN = MAX (0, ((C_BESTNUMEVENTS / C_NUMOBS ) / ( AVGNUMRESP /
NUMOBS) - 1) * 100);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTRESPC = .;
MPRINT(EM_ASSESS):   BESTGAIN = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF NUMNONRESP > 0 THEN ODDS = NUMRESP / NUMNONRESP;
MPRINT(EM_ASSESS):   ELSE ODDS = .;
MPRINT(EM_ASSESS):   C_NUM_RESP = SUM (C_NUM_RESP , NUMRESP );
MPRINT(EM_ASSESS):   C_NUM_NONRESP = SUM (C_NUM_NONRESP, NUMNONRESP );
MPRINT(EM_ASSESS):   IF C_NUM_NONRESP > 0 THEN C_ODDS = C_NUM_RESP / C_NUM_NONRESP;
MPRINT(EM_ASSESS):   ELSE C_ODDS = .;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   C_P_RESP = C_NUM_RESP * 100 / C_NUMOBS;
MPRINT(EM_ASSESS):   GAIN = ABS(100 * (((C_NUM_RESP / C_NUMOBS ) / (_NEVENTS / 2374)) - 1));
MPRINT(EM_ASSESS):   BASEGAIN = 100 * (( (C_AVGNUM_RESP / C_NUMOBS) / ( AVGNUMRESP / NUMOBS))
- 1);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   GAIN = .;
MPRINT(EM_ASSESS):   BASEGAIN = .;
MPRINT(EM_ASSESS):   C_P_RESP = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF BASEGAIN <= 0 THEN BASEGAIN = 0;
MPRINT(EM_ASSESS):   P_CAPT_RESP = NUMRESP * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   P_CAPT_NONRESP = NUMNONRESP * 100 / ( 2374 - _NEVENTS);
MPRINT(EM_ASSESS):   C_P_CAPT_RESP = C_NUM_RESP * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   C_P_CAPT_NONRESP = C_NUM_NONRESP * 100 / ( 2374 - _NEVENTS);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Area For Binned KS in Outranks area;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   _DIFFERENCE = C_P_CAPT_RESP - C_P_CAPT_NONRESP ;
MPRINT(EM_ASSESS):   IF _KS_BIN_ < _DIFFERENCE THEN DO;
MPRINT(EM_ASSESS):   _KS_BIN_ = _DIFFERENCE;
MPRINT(EM_ASSESS):   _KS_BIN_PROB = MINPROB + (MAXPROB - MINPROB) / 2 ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LIFT = P_RESP * .01 / RESPRATE ;
MPRINT(EM_ASSESS):   C_LIFT = C_P_RESP * .01 / RESPRATE;
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BASELIFT = AVGNUMRESP / ( RESPRATE * NUMOBS );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE BASELIFT = .;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN CBASELIFT = C_AVGNUM_RESP / (RESPRATE * C_NUMOBS);
MPRINT(EM_ASSESS):   ELSE CBASELIFT = .;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ WITHIN DO LOOP FOR OUTRANKS;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   BIN = 20 + 1 - GROUP;
MPRINT(EM_ASSESS):   PERCENTILE = BIN * (100 / 20);
MPRINT(EM_ASSESS):   B_C_P_RESP = PERCENTILE;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPRANK ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................ END OF GAINSCHART = OUTRANKS AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROFITGROUP" , MAXPROFITGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROFIT" , MAXPROFIT );
MPRINT(EM_ASSESS):   KS_ABSDIFF = 0 ;
MPRINT(EM_ASSESS):   MINPRECTPR = 9999;
MPRINT(EM_ASSESS):   Y0 = 1 - RESPRATE;
MPRINT(EM_ASSESS):   Y1 = RESPRATE;
MPRINT(EM_ASSESS):   MAXMUTUAL = 0;
MPRINT(EM_ASSESS):   DROP MAXMUTUAL KSPROB Y0 Y1 KS_ABSDIFF MINPRECTPR;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .....................About to start Processing Outroc ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................... Finished Processing Outroc ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .............. Outdist ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   BIN = 20 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS96 - EVENTS100 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS96 - NONEVENTS100);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB96 -
SCR_MNPROB100) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB96 - SCR_MINPROB100) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB96 - SCR_MAXPROB100) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 20;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 19 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS91 - EVENTS95 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS91 - NONEVENTS95);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB91 -
SCR_MNPROB95) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB91 - SCR_MINPROB95) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB91 - SCR_MAXPROB95) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 19;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 18 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS86 - EVENTS90 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS86 - NONEVENTS90);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB86 -
SCR_MNPROB90) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB86 - SCR_MINPROB90) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB86 - SCR_MAXPROB90) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 18;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 17 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS81 - EVENTS85 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS81 - NONEVENTS85);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB81 -
SCR_MNPROB85) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB81 - SCR_MINPROB85) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB81 - SCR_MAXPROB85) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 17;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 16 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS76 - EVENTS80 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS76 - NONEVENTS80);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB76 -
SCR_MNPROB80) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB76 - SCR_MINPROB80) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB76 - SCR_MAXPROB80) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 16;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 15 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS71 - EVENTS75 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS71 - NONEVENTS75);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB71 -
SCR_MNPROB75) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB71 - SCR_MINPROB75) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB71 - SCR_MAXPROB75) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 15;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 14 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS66 - EVENTS70 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS66 - NONEVENTS70);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB66 -
SCR_MNPROB70) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB66 - SCR_MINPROB70) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB66 - SCR_MAXPROB70) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 14;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 13 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS61 - EVENTS65 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS61 - NONEVENTS65);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB61 -
SCR_MNPROB65) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB61 - SCR_MINPROB65) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB61 - SCR_MAXPROB65) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 13;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 12 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS56 - EVENTS60 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS56 - NONEVENTS60);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB56 -
SCR_MNPROB60) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB56 - SCR_MINPROB60) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB56 - SCR_MAXPROB60) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 12;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 11 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS51 - EVENTS55 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS51 - NONEVENTS55);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB51 -
SCR_MNPROB55) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB51 - SCR_MINPROB55) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB51 - SCR_MAXPROB55) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 11;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 10 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS46 - EVENTS50 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS46 - NONEVENTS50);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB46 -
SCR_MNPROB50) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB46 - SCR_MINPROB50) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB46 - SCR_MAXPROB50) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 10;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 9 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS41 - EVENTS45 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS41 - NONEVENTS45);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB41 -
SCR_MNPROB45) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB41 - SCR_MINPROB45) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB41 - SCR_MAXPROB45) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 9;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 8 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS36 - EVENTS40 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS36 - NONEVENTS40);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB36 -
SCR_MNPROB40) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB36 - SCR_MINPROB40) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB36 - SCR_MAXPROB40) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 8;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 7 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS31 - EVENTS35 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS31 - NONEVENTS35);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB31 -
SCR_MNPROB35) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB31 - SCR_MINPROB35) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB31 - SCR_MAXPROB35) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 7;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 6 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS26 - EVENTS30 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS26 - NONEVENTS30);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB26 -
SCR_MNPROB30) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB26 - SCR_MINPROB30) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB26 - SCR_MAXPROB30) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 6;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 5 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS21 - EVENTS25 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS21 - NONEVENTS25);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB21 -
SCR_MNPROB25) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB21 - SCR_MINPROB25) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB21 - SCR_MAXPROB25) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 5;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 4 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS16 - EVENTS20 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS16 - NONEVENTS20);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB16 -
SCR_MNPROB20) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB16 - SCR_MINPROB20) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB16 - SCR_MAXPROB20) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 4;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 3 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS11 - EVENTS15 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS11 - NONEVENTS15);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB11 -
SCR_MNPROB15) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB11 - SCR_MINPROB15) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB11 - SCR_MAXPROB15) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 3;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 2 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS6 - EVENTS10 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS6 - NONEVENTS10);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB6 -
SCR_MNPROB10) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB6 - SCR_MINPROB10) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB6 - SCR_MAXPROB10) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 2;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 1 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS1 - EVENTS5 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS1 - NONEVENTS5);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB1 - SCR_MNPROB5)
/ NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB1 - SCR_MINPROB5) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB1 - SCR_MAXPROB5) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 1;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("KSPROB" , PUT (KSPROB, 5.3 ) );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("_KS_BIN_PROB" , _KS_BIN_PROB );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("_KS_BIN_" , _KS_BIN_ / 100 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("KSDIFF" , KS_ABSDIFF );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PRECTPR" , PRECTPR );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXMUTUALPROB" , MAXMUTUALPROB);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LABEL __EVENT__ = "Event" DECILE = "Depth" BIN = "Bin" NUMOBS = "Number
of Observations" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * RUN for large data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST;
MPRINT(EM_ASSESS):   DELETE _AUXEVENTNAME;
MPRINT(EM_ASSESS):   QUIT;
 
MPRINT(EM_ASSESS):   OPTION NOCENTER LS = 95;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Report Vars Area.;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start OF Outdist Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPSCOREDIST;
MPRINT(EM_ASSESS):   RENAME MODELSCORE = SCORE UPPERPROB = UPPOSTERIOR SCR_CP_EVENTS =
CUMULATIVEPERCENTAGEOFEVENTS SCR_CP_NONEVENTS = CUMULATIVEPERCENTAGEOFNONEVENTS EVENTVALUE =
EVENT LOWERPROB = LOWPOSTERIOR NUMOBSINGROUP = N PERCOBSINGROUP = PERCENTAGE SCR_MINPROB =
_MINP_ SCR_MAXPROB = _MAXP_ SCR_MNPROB = _MEANP_ RANGE = P_LABEL C_PERCOBSINGROUP =
CUMULATIVEPERCENTAGE SCR_NUMEVENTS = NUMBEROFEVENTS SCR_NUMNONEVENTS = NUMBEROFNONEVENTS
SCR_P_EVENTS = PERCENTAGEOFEVENTS SCR_P_NONEVENTS = PERCENTAGEOFNONEVENTS ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... OUTDIST MODIFICATION LABEL AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL BIN = "Bin" N = "Number of Observations" P_LABEL = "Posterior
Probability Range" EVENT = "Event" LOWPOSTERIOR = "Lower Bound Posterior Probability"
PERCENTAGEOFEVENTS = "Percentage of Events" CUMULATIVEPERCENTAGEOFNONEVENTS = "Cumulative
Percentage of Nonevents" CUMULATIVEPERCENTAGE = "Cumulative Percentage" PERCENTAGEOFEVENTS =
"Percentage of Events" PERCENTAGEOFNONEVENTS = "Percentage of Nonevents"
CUMULATIVEPERCENTAGEOFEVENTS = "Cumulative Percentage of Events" UPPOSTERIOR = "Upper Bound
Posterior Probability" NUMBEROFEVENTS = "Number of Events" PERCENTAGE = "Percentage"
NUMBEROFNONEVENTS = "Number of Nonevents" _MEANP_ = "Mean Posterior Probability" _MINP_ = "Min
Posterior Probability" _MAXP_ = "Max Posterior Probability" SCORE = "Model Score" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   SET WORK._TEMPSCOREDIST (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........... END OF OUTDIST MODIFICATION;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start of OUTRANKS Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPRANK;
MPRINT(EM_ASSESS):   RENAME __EVENT__ = EVENT P_RESP = RESP C_P_CAPT_RESP = CAPC P_CAPT_RESP =
CAP NUMNONRESP = NUMNEVENT NUMRESP = NUMEVENT BASEEVENTS = BASENUMBEROFEVENTS BESTNUMEVENTS =
BESTNUMBEROFEVENTS MAXPROB = _MAXP_ MINPROB = _MINP_ CBASELIFT = BASELIFTC C_LIFT = LIFTC
MNPROB = _MEANP_ PERCENTILE = DECILE NUMOBS = N NUMEVENT = NUMBEROFEVENTS C_P_RESP = RESPC ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................. OUTRANKS;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL _MAXP_ = "Max Posterior Probability" _MINP_ = "Min Posterior
Probability" _MEANP_ = "Mean Posterior Probability" BASECAP = "Baseline % Captured Response"
BASECAPC = "Baseline Cumulative % Captured Response" BASENUMBEROFEVENTS = "Baseline Number of
Events" BASEGAIN = "Baseline Gain" BASELIFT = "Baseline Lift" BASELIFTC = "Baseline Cumulative
Lift" BASERESP = "Baseline % Response" BASERESPC = "Baseline Cumulative % Response" BASELIFTC
= "Baseline Cumulative Lift" BESTCAP = "Best % Captured Response" BESTCAPC = "Best Cumulative
% Captured Response" BESTGAIN = "Best Gain" BESTRESP = "Best % Response" BESTRESPC = "Best
Cumulative % Response" BESTLIFT = "Best Lift" BESTLIFTC = "Best Cumulative Lift"
BESTNUMBEROFEVENTS = "Best Number of Events" CAP = "% Captured Response" CAPC = "Cumulative %
Captured Response" DECILE = "Depth" GAIN = "Gain" LIFT = "Lift" LIFTC = "Cumulative Lift"
NUMNEVENT = "Number of Nonevents" N = "Number of Observations" EVENT = "Event" RESPC =
"Cumulative % Response" NUMBEROFEVENTS = "Number of Events" RESP = "% Response" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK;
MPRINT(EM_ASSESS):   SET WORK._TEMPRANK (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   proc datasets lib=work nolist;
MPRINT(EM_ASSESS):   delete _ea_tmpdata;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_ASSESS):   quit;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   OPTION ERRORS = 20;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):    data WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   retain target "DepVar";
MPRINT(EM_DIAGRAM):   retain TARGETLABEL 'DepVar';
MPRINT(EM_DIAGRAM):   retain dataRole "TRAIN";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural32_EMRANK;
MPRINT(EM_DIAGRAM):   set WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   retain target "DepVar";
MPRINT(EM_DIAGRAM):   retain TARGETLABEL 'DepVar';
MPRINT(EM_DIAGRAM):   retain dataRole "TRAIN";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural32_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   set WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   run;
487844     data EM_temp_assessMeta;
MPRINT(EM_DIAGRAM):    data EM_temp_assessMeta;
487845     set EMWS8.AutoNeural32_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural32_CMeta_TRAIN;
487846     where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION', 'ASSESS', 'COST')
487846   ! ;
MPRINT(EM_DIAGRAM):   where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION',
'ASSESS', 'COST');
487847     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set EMWS8.AUTONEURAL32_CMETA_TRAIN.
      WHERE role in ('ASSESS', 'CLASSIFICATION', 'COST', 'DECISION', 'PREDICT', 'RESIDUAL');
NOTE: The data set WORK.EM_TEMP_ASSESSMETA has 8 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
487848     data EM_temp_assessdata;
MPRINT(EM_DIAGRAM):    data EM_temp_assessdata;
487849     set EMWS8.AutoNeural32_VALIDATE(keep=
487850     F_DepVar
487851     I_DepVar
487852     P_DepVar0
487853     P_DepVar1
487854     R_DepVar0
487855     R_DepVar1
487856     U_DepVar
487857     _WARN_
487858     DepVar
487859     );
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural32_VALIDATE(keep= F_DepVar I_DepVar P_DepVar0
P_DepVar1 R_DepVar0 R_DepVar1 U_DepVar _WARN_ DepVar );
487860     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Variable _WARN_ is uninitialized.
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: View EMWS8.AUTONEURAL32_VALIDATE.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
 
NOTE: There were 1018 observations read from the data set EMWS8.VARSEL_VALIDATE.
NOTE: There were 1018 observations read from the data set EMWS8.AUTONEURAL32_VALIDATE.
NOTE: The data set WORK.EM_TEMP_ASSESSDATA has 1018 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(EM_DIAGRAM):    proc freq data=EM_temp_assessdata noprint;
MPRINT(EM_DIAGRAM):   table I_DepVar*F_DepVar / out = WORK.AutoNeural32_3QMJNTD nocol norow
outpct;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.AutoNeural32_3QMJNTD;
MPRINT(EM_DIAGRAM):   length _TYPE_ $10 DATAROLE TARGET $32 TARGETLABEL $200 FROM INTO $32
CORRECTTEXT $40 ;
MPRINT(EM_DIAGRAM):   label _TYPE_ = "Outcome Type";
MPRINT(EM_DIAGRAM):   label DATAROLE = "Data Role";
MPRINT(EM_DIAGRAM):   label TARGET = "Target Variable";
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   label FROM = "Target";
MPRINT(EM_DIAGRAM):   label INTO = "Outcome";
MPRINT(EM_DIAGRAM):   label PCT_ROW = "Target Percentage";
MPRINT(EM_DIAGRAM):   label PCT_COL = "Outcome Percentage";
MPRINT(EM_DIAGRAM):   label COUNT = "Frequency Count";
MPRINT(EM_DIAGRAM):   label PERCENT = "Total Percentage";
MPRINT(EM_DIAGRAM):   label CORRECTTEXT = "Correct Text";
MPRINT(EM_DIAGRAM):   label CORRECT = "Correct";
MPRINT(EM_DIAGRAM):   set WORK.AutoNeural32_3QMJNTD(rename=(F_DepVar=FROM I_DepVar=INTO));
MPRINT(EM_DIAGRAM):   retain _TYPE_ 'PREDICTION' DATAROLE "VALIDATE" TARGET "DepVar";
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TARGETLABEL = 'DepVar';
MPRINT(EM_DIAGRAM):   if FROM eq INTO then do;
MPRINT(EM_DIAGRAM):   CORRECT = 0;
MPRINT(EM_DIAGRAM):   CORRECTTEXT="Correct";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   CORRECT = 1;
MPRINT(EM_DIAGRAM):   CORRECTTEXT="Incorrect";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural32_EMCLASSIFICATION;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural32_EMCLASSIFICATION WORK.AutoNeural32_3QMJNTD;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   set WORK.AutoNeural32_3QMJNTD;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.MISCREPORT(drop=INTO FROM _TYPE_);
MPRINT(EM_DIAGRAM):   set WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   length MISC $12;
MPRINT(EM_DIAGRAM):   if FROM='1' and INTO='1' then MISC='TRUEEVENT';
MPRINT(EM_DIAGRAM):   else if FROM='1' and INTO ne '1' then MISC='FALSENEVENT';
MPRINT(EM_DIAGRAM):   else if FROM ne '1' and INTO='1' then MISC='FALSEEVENT';
MPRINT(EM_DIAGRAM):   else if FROM ne'1' and INTO ne '1' then MISC='TRUENEVENT';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.MISCREPORT nothreads;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc summary data=WORK.MISCREPORT NWAY;
MPRINT(EM_DIAGRAM):   output out=WORK.MISCCOUNT(drop=_FREQ_ _TYPE_) SUM=COUNT;
MPRINT(EM_DIAGRAM):   CLASS MISC;
MPRINT(EM_DIAGRAM):   VAR COUNT;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc transpose data=WORK.MISCCOUNT out=WORK.MISCREPORT(drop=_NAME_
_LABEL_);
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   ID MISC;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural32_EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   length TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural32_EMEVENTREPORT WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TARGETLABEL = 'DepVar';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data ASSESS_REPORTMETA;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural32_VariableSet;
MPRINT(EM_DIAGRAM):   where REPORT='Y';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename temp catalog 'sashelp.emassmt.em_assess.source';
MPRINT(EM_DIAGRAM):   filename temp;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural32_DepVar_DM;
MPRINT(EM_DIAGRAM):   where _TYPE_="TARGET";
MPRINT(EM_DIAGRAM):   call symput('ASSMT_EVENT', strip(event));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):
MPRINT(EM_ASSESS):   data _ea_tmpdata;
MPRINT(EM_ASSESS):   set EM_temp_assessdata;
MPRINT(EM_ASSESS):   _tmpfreqvar_=1;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_CHECKEMSETINIT):   DATA _NULL_;
MPRINT(EM_CHECKEMSETINIT):   EM_SETINIT = 'N';
MPRINT(EM_CHECKEMSETINIT):   IF SYSPROD('PRODNUM50') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM448') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM102') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM103') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   CALL SYMPUT('EM_SETINIT', EM_SETINIT);
MPRINT(EM_CHECKEMSETINIT):   RUN;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Reading in reporting data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET ASSESS_REPORTMETA END = EOF;
MPRINT(EM_ASSESS):   IF TYPE = "C" OR UPCASE (LEVEL) IN ("NOMINAL", "BINARY" , "ORDINAL") THEN
DO;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) NE UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   NUMCTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTC" || LEFT (PUT (NUMCTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "C");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF UPCASE(NAME) NE UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   NUMNTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTN" || LEFT (PUT (NUMNTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMNTOREPORT", NUMNTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMCTOREPORT", NUMCTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMTOREPORT", SUM (NUMNTOREPORT, NUMCTOREPORT));
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   PROC DMDB DATA = _ea_tmpdata VAROUT = VAROUT DMDBCAT = _D CLASSOUT =
_ASSMT_CLASSOUT;
MPRINT(EM_ASSESS):   CLASS F_DepVar ;
 
MPRINT(EM_ASSESS):   VAR P_DepVar1 _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_;
MPRINT(EM_ASSESS):   RUN ;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   PROC SORT DATA = _ASSMT_CLASSOUT;
MPRINT(EM_ASSESS):   BY NAME;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _auxeventname (keep = __event__) ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ...FLAG0_1 = ..... TARGET IS 0, 1 & EVENT = 1;
 
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   length __event__ $ 32;
MPRINT(EM_ASSESS):   RETAIN FLAG0_1 1 NUM1 . NUM0 . __event__ "_missing_" ;
 
MPRINT(EM_ASSESS):   SET _ASSMT_CLASSOUT END = EOF;
MPRINT(EM_ASSESS):   BY NAME;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ....... LEVEL = BINARY OR NOMINAL OR ORDINAL;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   IF UPCASE(NAME) = UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   CUMFREQ + FREQUENCY;
MPRINT(EM_ASSESS):   IF LEVEL NE "." THEN DO;
MPRINT(EM_ASSESS):   N1 + 1;
MPRINT(EM_ASSESS):   IF (NRAW NE 0 AND NRAW NE 1) OR TYPE NE "N" OR "" > " " THEN FLAG0_1 = 0;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ......................... IF EVENT NE BLANK;
MPRINT(EM_ASSESS):   * ....................LEVEL IS CHAR VAR ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   IF UPCASE("1") = UPCASE(LEVEL) THEN DO;
MPRINT(EM_ASSESS):   NUM1 = FREQUENCY;
MPRINT(EM_ASSESS):   IF TYPE = "C" THEN do;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("EVENTVALUERAW", CRAW );
MPRINT(EM_ASSESS):   __event__ = craw;
MPRINT(EM_ASSESS):   end;
MPRINT(EM_ASSESS):   ELSE do;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("EVENTVALUERAW", NRAW );
MPRINT(EM_ASSESS):   __event__ = nraw;
MPRINT(EM_ASSESS):   end;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF LAST.NAME THEN DO;
 
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * .............. IN NOMINAL CASE, NEED TO GROUP ALL '0' ;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   NUM0 = SUM (CUMFREQ, - NUM1);
MPRINT(EM_ASSESS):   IF NUM0 < 0 THEN NUM0 = 0;
MPRINT(EM_ASSESS):   IF NUM1 = . THEN NUM1 = 0;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUM0", NUM0 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUM1", NUM1);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PNUM1", NUM1 / CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PNUM0", (CUMFREQ - NUM1) / CUMFREQ);
MPRINT(EM_ASSESS):   IF TYPE = "C" THEN DO;
MPRINT(EM_ASSESS):   FLAG0_1 = 0;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "C" );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF "" = " " THEN DO;
MPRINT(EM_ASSESS):   IF "1" NE "1" THEN FLAG0_1 = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "N" );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ................... IF TYPE = N;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("FLAG0_1", FLAG0_1 );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..................IF LAST.NAME ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ...............IF LEVEL NE '.' ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * .............. IF NAME = TARGET;
MPRINT(EM_ASSESS):   ELSE IF "" > " " AND UPCASE(NAME) = UPCASE("") THEN DO;
MPRINT(EM_ASSESS):   NUMDECISIONS + 1;
MPRINT(EM_ASSESS):   LEVEL = TRANSLATE (LEVEL, "_", "'", "_", '"');
MPRINT(EM_ASSESS):   CALL SYMPUTX ("D_LABEL" || LEFT (PUT (NUMDECISIONS, 3.)), LEVEL );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..................... ELSE IF UPCASE;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   output _auxeventname;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMOBS", CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMDECISIONS", NUMDECISIONS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET VAROUT END = EOF;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) = UPCASE ("P_DepVar1") THEN DO;
MPRINT(EM_ASSESS):   IF N = 0 THEN DO;
MPRINT(EM_ASSESS):   PUT //// "          Warning: All posterior probabilities are missing
values ";
MPRINT(EM_ASSESS):   PUT ///;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("ALLMISS", 1);
MPRINT(EM_ASSESS):   STOP;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("ALLMISS", 0);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB", MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB", MAX);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("DIFF", MAX - MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NMISSPROB", NMISS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF UPCASE (NAME) = UPCASE ("_tmpfreqvar_") THEN DO;
MPRINT(EM_ASSESS):   AUXMIN = MIN - INT (MIN);
MPRINT(EM_ASSESS):   AUXMAX = MAX - INT (MAX);
MPRINT(EM_ASSESS):   IF AUXMIN > 0 OR AUXMAX > 0 THEN CALL SYMPUTX ("USEWEIGHT", "Y");
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("USEWEIGHT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _ANY0;
MPRINT(EM_ASSESS):   SET _ea_tmpdata (KEEP = F_DepVar P_DepVar1 _tmpfreqvar_ );
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................... No Formats;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF LEFT ( F_DepVar ) = "1" THEN NTARGET = 1;
MPRINT(EM_ASSESS):   ELSE NTARGET = 0;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .............. Before proc summary of binary case;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC SUMMARY DATA = _ANY0 (KEEP = P_DepVar1 NTARGET _tmpfreqvar_ WHERE =
(NTARGET > . )) NWAY MISSING;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   CLASS P_DepVar1 ;
MPRINT(EM_ASSESS):   VAR NTARGET ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   OUTPUT OUT = ANYSUM (DROP = _TYPE_) MEAN = _MEANTARGET _MEANFREQVAR ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... Main Data Set Processing, Binary case;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK (KEEP = BASECAPC BASECAP __EVENT__ BASEEVENTS
BASEGAIN BASELIFT BASERESP BASERESPC BESTCAP BESTCAPC BESTGAIN BESTLIFT BESTLIFTC
BESTNUMEVENTS BESTRESP BESTRESPC BIN CBASELIFT C_LIFT C_P_CAPT_RESP C_P_RESP GAIN LIFT MAXPROB
MINPROB MNPROB NUMNONRESP NUMOBS NUMRESP PERCENTILE P_CAPT_RESP P_RESP ) WORK._TEMPSCOREDIST
(KEEP = BIN LOWERPROB UPPERPROB EVENTVALUE SCR_NUMEVENTS MODELSCORE SCR_NUMNONEVENTS RANGE
NUMOBSINGROUP PERCOBSINGROUP C_PERCOBSINGROUP SCR_P_EVENTS SCR_CP_EVENTS SCR_P_NONEVENTS
SCR_CP_NONEVENTS SCR_MNPROB SCR_MINPROB SCR_MAXPROB ) ;
 
MPRINT(EM_ASSESS):   SET ANYSUM END = EOF;
 
MPRINT(EM_ASSESS):   IF _N_ = 1 THEN SET _AUXEVENTNAME;
 
MPRINT(EM_ASSESS):   RETAIN MINPROB1 - MINPROB20 1 MAXPROB1 - MAXPROB20 0 MNPROB1 - MNPROB20 0
NUMOBS1 - NUMOBS20 0 NUMRESP1 - NUMRESP20 0 TRUEPOS1 - TRUEPOS100 0 TRUENEG1 - TRUENEG100 0
FALSEPOS1 - FALSEPOS100 0 FALSENEG1 - FALSENEG100 0 EVENTS1 - EVENTS100 NONEVENTS1 -
NONEVENTS100 0 FIRSTIN1 - FIRSTIN100 . LASTIN1 - LASTIN100 . RESPRATE 0.152259332 _NEVENTS 155
_NNONEVENTS 863 TARGET "NTARGET" ;
MPRINT(EM_ASSESS):   ARRAY MINPROBS (20) MINPROB1 - MINPROB20;
MPRINT(EM_ASSESS):   ARRAY MAXPROBS (20) MAXPROB1 - MAXPROB20;
MPRINT(EM_ASSESS):   ARRAY MNPROBS (20) MNPROB1 - MNPROB20;
MPRINT(EM_ASSESS):   ARRAY NUMOBSS (20) NUMOBS1 - NUMOBS20;
MPRINT(EM_ASSESS):   ARRAY NUMRESPS (20) NUMRESP1 - NUMRESP20;
MPRINT(EM_ASSESS):   ARRAY TRUEPOSX (100) TRUEPOS1 - TRUEPOS100;
MPRINT(EM_ASSESS):   ARRAY FALSEPOSX (100) FALSEPOS1 - FALSEPOS100;
MPRINT(EM_ASSESS):   ARRAY FALSENEGX (100) FALSENEG1 - FALSENEG100;
MPRINT(EM_ASSESS):   ARRAY TRUENEGX (100) TRUENEG1 - TRUENEG100;
MPRINT(EM_ASSESS):   ARRAY _EVENTS (100) EVENTS1 - EVENTS100;
MPRINT(EM_ASSESS):   ARRAY NONEVENTS (100) NONEVENTS1 - NONEVENTS100;
MPRINT(EM_ASSESS):   ARRAY FIRSTIN (100) FIRSTIN1 - FIRSTIN100;
MPRINT(EM_ASSESS):   ARRAY LASTIN (100) LASTIN1 - LASTIN100;
MPRINT(EM_ASSESS):   RETAIN SCR_MNPROB1 - SCR_MNPROB100 0 SCR_MINPROB1 - SCR_MINPROB100 1
SCR_MAXPROB1 - SCR_MAXPROB100 0;
MPRINT(EM_ASSESS):   ARRAY SCR_MNPROBS (100) SCR_MNPROB1 - SCR_MNPROB100;
MPRINT(EM_ASSESS):   ARRAY SCR_MINPROBS (100) SCR_MINPROB1 - SCR_MINPROB100;
MPRINT(EM_ASSESS):   ARRAY SCR_MAXPROBS (100) SCR_MAXPROB1 - SCR_MAXPROB100;
MPRINT(EM_ASSESS):   DROP SCR_MINPROB1 - SCR_MINPROB100 SCR_MAXPROB1 - SCR_MAXPROB100
SCR_MNPROB1 - SCR_MNPROB100 ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...... Area For 8 Financials ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF _MEANTARGET = . THEN _MEANTARGET = RESPRATE;
MPRINT(EM_ASSESS):   DROP N1 _K SUMWEIGHTS ;
MPRINT(EM_ASSESS):   SUMWEIGHTS = 1;
 
MPRINT(EM_ASSESS):   DO _K = 1 TO CEIL (_FREQ_);
MPRINT(EM_ASSESS):   IF _K = CEIL (_FREQ_) THEN DO;
MPRINT(EM_ASSESS):   IF _FREQ_ < CEIL (_FREQ_) THEN _WEIGHT = _FREQ_ - FLOOR (_FREQ_);
MPRINT(EM_ASSESS):   ELSE _WEIGHT = 1;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE _WEIGHT = 1;
MPRINT(EM_ASSESS):   N1 + _WEIGHT;
MPRINT(EM_ASSESS):   NTARGET = _MEANTARGET ;
MPRINT(EM_ASSESS):   DECILE = MIN (20, CEIL (N1 * 20 / 1018));
MPRINT(EM_ASSESS):   MINPROBS ( DECILE) = MIN (MINPROBS ( DECILE), P_DepVar1 );
MPRINT(EM_ASSESS):   MAXPROBS ( DECILE) = MAX (MAXPROBS ( DECILE), P_DepVar1 );
MPRINT(EM_ASSESS):   MNPROBS ( DECILE) = SUM (MNPROBS ( DECILE), P_DepVar1 * _WEIGHT);
MPRINT(EM_ASSESS):   NUMOBSS ( DECILE) = NUMOBSS ( DECILE) + _WEIGHT;
MPRINT(EM_ASSESS):   NUMRESPS ( DECILE) = NUMRESPS ( DECILE) + _MEANTARGET * _WEIGHT;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ outside of do loop, Area for final ROC;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   RANKDELTA = (ROUND ( _FREQ_ ) + 1) / 2;
MPRINT(EM_ASSESS):   RANK = UNTIEDRANK + RANKDELTA;
MPRINT(EM_ASSESS):   DROP RANK ;
MPRINT(EM_ASSESS):   SUMRANK1 + RANK * ROUND (_MEANTARGET * _FREQ_, .0000001);
MPRINT(EM_ASSESS):   UNTIEDRANK + ROUND (_FREQ_, .00000001);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Area For ROC Curve;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DO _K = 1 TO 100;
MPRINT(EM_ASSESS):   IF P_DepVar1 * 100 >= _K THEN DO;
MPRINT(EM_ASSESS):   TRUEPOSX ( _K ) + _FREQ_ * _MEANTARGET ;
MPRINT(EM_ASSESS):   FALSEPOSX ( _K ) + _FREQ_ * (1 - _MEANTARGET) ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   TRUENEGX ( _K ) + _FREQ_ * ( 1 - _MEANTARGET) ;
MPRINT(EM_ASSESS):   FALSENEGX ( _K ) + _FREQ_ * _MEANTARGET ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   SLOT = MIN (MAX (CEIL (P_DepVar1 * 100), 1), 100) ;
MPRINT(EM_ASSESS):   DROP SLOT;
MPRINT(EM_ASSESS):   FIRSTIN ( SLOT ) = MIN ( FIRSTIN ( SLOT ), P_DepVar1);
MPRINT(EM_ASSESS):   LASTIN ( SLOT ) = MAX ( LASTIN ( SLOT ), P_DepVar1);
MPRINT(EM_ASSESS):   _EVENTS ( SLOT) = _EVENTS ( SLOT) + _FREQ_ * _MEANTARGET;
MPRINT(EM_ASSESS):   NONEVENTS ( SLOT) = NONEVENTS ( SLOT) + _FREQ_ * (1 - _MEANTARGET);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ START OF OUTDIST IN BINARY CASE MAIN DATA STEP ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   SCR_MNPROBS ( SLOT ) = SUM (SCR_MNPROBS (SLOT), P_DepVar1 * _FREQ_ );
MPRINT(EM_ASSESS):   SCR_MINPROBS ( SLOT ) = MIN (SCR_MINPROBS (SLOT), P_DepVar1 );
MPRINT(EM_ASSESS):   SCR_MAXPROBS ( SLOT ) = MAX (SCR_MAXPROBS (SLOT), P_DepVar1 );
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ End of Outdist in Binary case main DATA STEP ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   PUT //;
MPRINT(EM_ASSESS):   DO K = 1 TO 20;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LENGTH EVENTVALUE $ 32;
MPRINT(EM_ASSESS):   RETAIN EVENTVALUE "1" ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ......... Start of EOF area of BINARY processing of main data set ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SUMRANK1", SUMRANK1);
MPRINT(EM_ASSESS):   LENGTH DATAROLE $ 10;
MPRINT(EM_ASSESS):   RETAIN DATAROLE "VALIDATE" ;
MPRINT(EM_ASSESS):   RETAIN OVLMIN 3.5000777E-6 OVLMAX 0.9999369499 ;
MPRINT(EM_ASSESS):   DROP OVLMIN OVLMAX ;
MPRINT(EM_ASSESS):   C_NUMOBS = 0;
MPRINT(EM_ASSESS):   C_NUM_RESP = 0;
MPRINT(EM_ASSESS):   C_NUM_NONRESP = 0;
MPRINT(EM_ASSESS):   C_P_RESP = 0;
MPRINT(EM_ASSESS):   P_CAPT_RESP = 0;
MPRINT(EM_ASSESS):   C_P_CAPT_RESP = 0;
MPRINT(EM_ASSESS):   PREVIOUSPROFIT = 0;
MPRINT(EM_ASSESS):   MAXPROFIT = 0;
MPRINT(EM_ASSESS):   _KS_BIN_ = 0;
MPRINT(EM_ASSESS):   DROP _KS_BIN_;
MPRINT(EM_ASSESS):   AVGNUMRESP = _NEVENTS / 20;
MPRINT(EM_ASSESS):   BASERESP = 100 * RESPRATE;
MPRINT(EM_ASSESS):   BASERESPC = BASERESP;
MPRINT(EM_ASSESS):   BASECAP = 100 / 20;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................Start OF Gainschart = Outranks Area;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   _KS_BIN_PROB = 0;
MPRINT(EM_ASSESS):   DO GROUP = 20 TO 1 BY -1;
 
MPRINT(EM_ASSESS):   BASECAPC + BASECAP;
MPRINT(EM_ASSESS):   PERCENTILE = GROUP * (100 / 20);
MPRINT(EM_ASSESS):   MINPROB = MINPROBS ( GROUP);
MPRINT(EM_ASSESS):   MAXPROB = MAXPROBS ( GROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB" || LEFT ( PUT (GROUP, 3.)), MINPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB" || LEFT ( PUT (GROUP, 3.)), MAXPROB);
MPRINT(EM_ASSESS):   NUMOBS = NUMOBSS ( GROUP);
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN MNPROB = MNPROBS ( GROUP) / NUMOBS;
MPRINT(EM_ASSESS):   ELSE MNPROB = .;
MPRINT(EM_ASSESS):   C_NUMOBS = SUM (NUMOBS, C_NUMOBS);
MPRINT(EM_ASSESS):   NUMRESP = NUMRESPS ( GROUP);
MPRINT(EM_ASSESS):   NUMNONRESP = NUMOBS - NUMRESP;
MPRINT(EM_ASSESS):   C_AVGNUM_RESP + AVGNUMRESP;
MPRINT(EM_ASSESS):   IF C_NUMOBS <= _NEVENTS THEN DO;
MPRINT(EM_ASSESS):   BESTNUMEVENTS = NUMOBS;
MPRINT(EM_ASSESS):   BESTCAPC = C_NUMOBS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   BASEEVENTS = _NEVENTS / 20;
MPRINT(EM_ASSESS):   BASENONEVENTS = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   FLAG + 1;
MPRINT(EM_ASSESS):   DROP FLAG;
MPRINT(EM_ASSESS):   BESTNUMEVENTS = _NEVENTS - C_NUMOBS + NUMOBS;
MPRINT(EM_ASSESS):   IF FLAG > 1 THEN BESTNUMEVENTS = 0;
MPRINT(EM_ASSESS):   BESTCAPC = 100;
MPRINT(EM_ASSESS):   IF C_NUMOBS - _NEVENTS <= NUMOBS THEN DO;
MPRINT(EM_ASSESS):   BASEEVENTS = C_NUMOBS - _NEVENTS;
MPRINT(EM_ASSESS):   BASENONEVENTS = NUMOBS - C_NUMOBS + _NEVENTS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BASEEVENTS = 0;
MPRINT(EM_ASSESS):   BASENONEVENTS = NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   BESTCAP = BESTNUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   BESTLIFT = BESTNUMEVENTS / AVGNUMRESP;
MPRINT(EM_ASSESS):   C_BESTNUMEVENTS + BESTNUMEVENTS;
MPRINT(EM_ASSESS):   DROP C_BESTNUMEVENTS;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN BESTLIFTC = C_BESTNUMEVENTS / (_NEVENTS / 1018 *
C_NUMOBS);
MPRINT(EM_ASSESS):   ELSE BESTLIFTC = .;
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BESTRESP = BESTNUMEVENTS * 100 / NUMOBS;
MPRINT(EM_ASSESS):   P_RESP = NUMRESP * 100 / NUMOBS;
MPRINT(EM_ASSESS):   P_NONRESP = NUMNONRESP * 100 / NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTRESP = .;
MPRINT(EM_ASSESS):   P_RESP = .;
MPRINT(EM_ASSESS):   P_NONRESP = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BESTRESPC = C_BESTNUMEVENTS * 100 / C_NUMOBS;
MPRINT(EM_ASSESS):   BESTGAIN = MAX (0, ((C_BESTNUMEVENTS / C_NUMOBS ) / ( AVGNUMRESP /
NUMOBS) - 1) * 100);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTRESPC = .;
MPRINT(EM_ASSESS):   BESTGAIN = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF NUMNONRESP > 0 THEN ODDS = NUMRESP / NUMNONRESP;
MPRINT(EM_ASSESS):   ELSE ODDS = .;
MPRINT(EM_ASSESS):   C_NUM_RESP = SUM (C_NUM_RESP , NUMRESP );
MPRINT(EM_ASSESS):   C_NUM_NONRESP = SUM (C_NUM_NONRESP, NUMNONRESP );
MPRINT(EM_ASSESS):   IF C_NUM_NONRESP > 0 THEN C_ODDS = C_NUM_RESP / C_NUM_NONRESP;
MPRINT(EM_ASSESS):   ELSE C_ODDS = .;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   C_P_RESP = C_NUM_RESP * 100 / C_NUMOBS;
MPRINT(EM_ASSESS):   GAIN = ABS(100 * (((C_NUM_RESP / C_NUMOBS ) / (_NEVENTS / 1018)) - 1));
MPRINT(EM_ASSESS):   BASEGAIN = 100 * (( (C_AVGNUM_RESP / C_NUMOBS) / ( AVGNUMRESP / NUMOBS))
- 1);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   GAIN = .;
MPRINT(EM_ASSESS):   BASEGAIN = .;
MPRINT(EM_ASSESS):   C_P_RESP = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF BASEGAIN <= 0 THEN BASEGAIN = 0;
MPRINT(EM_ASSESS):   P_CAPT_RESP = NUMRESP * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   P_CAPT_NONRESP = NUMNONRESP * 100 / ( 1018 - _NEVENTS);
MPRINT(EM_ASSESS):   C_P_CAPT_RESP = C_NUM_RESP * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   C_P_CAPT_NONRESP = C_NUM_NONRESP * 100 / ( 1018 - _NEVENTS);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Area For Binned KS in Outranks area;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   _DIFFERENCE = C_P_CAPT_RESP - C_P_CAPT_NONRESP ;
MPRINT(EM_ASSESS):   IF _KS_BIN_ < _DIFFERENCE THEN DO;
MPRINT(EM_ASSESS):   _KS_BIN_ = _DIFFERENCE;
MPRINT(EM_ASSESS):   _KS_BIN_PROB = MINPROB + (MAXPROB - MINPROB) / 2 ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LIFT = P_RESP * .01 / RESPRATE ;
MPRINT(EM_ASSESS):   C_LIFT = C_P_RESP * .01 / RESPRATE;
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BASELIFT = AVGNUMRESP / ( RESPRATE * NUMOBS );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE BASELIFT = .;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN CBASELIFT = C_AVGNUM_RESP / (RESPRATE * C_NUMOBS);
MPRINT(EM_ASSESS):   ELSE CBASELIFT = .;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ WITHIN DO LOOP FOR OUTRANKS;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   BIN = 20 + 1 - GROUP;
MPRINT(EM_ASSESS):   PERCENTILE = BIN * (100 / 20);
MPRINT(EM_ASSESS):   B_C_P_RESP = PERCENTILE;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPRANK ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................ END OF GAINSCHART = OUTRANKS AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROFITGROUP" , MAXPROFITGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROFIT" , MAXPROFIT );
MPRINT(EM_ASSESS):   KS_ABSDIFF = 0 ;
MPRINT(EM_ASSESS):   MINPRECTPR = 9999;
MPRINT(EM_ASSESS):   Y0 = 1 - RESPRATE;
MPRINT(EM_ASSESS):   Y1 = RESPRATE;
MPRINT(EM_ASSESS):   MAXMUTUAL = 0;
MPRINT(EM_ASSESS):   DROP MAXMUTUAL KSPROB Y0 Y1 KS_ABSDIFF MINPRECTPR;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .....................About to start Processing Outroc ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................... Finished Processing Outroc ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .............. Outdist ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   BIN = 20 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS96 - EVENTS100 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS96 - NONEVENTS100);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB96 -
SCR_MNPROB100) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB96 - SCR_MINPROB100) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB96 - SCR_MAXPROB100) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 20;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 19 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS91 - EVENTS95 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS91 - NONEVENTS95);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB91 -
SCR_MNPROB95) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB91 - SCR_MINPROB95) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB91 - SCR_MAXPROB95) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 19;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 18 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS86 - EVENTS90 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS86 - NONEVENTS90);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB86 -
SCR_MNPROB90) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB86 - SCR_MINPROB90) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB86 - SCR_MAXPROB90) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 18;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 17 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS81 - EVENTS85 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS81 - NONEVENTS85);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB81 -
SCR_MNPROB85) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB81 - SCR_MINPROB85) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB81 - SCR_MAXPROB85) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 17;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 16 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS76 - EVENTS80 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS76 - NONEVENTS80);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB76 -
SCR_MNPROB80) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB76 - SCR_MINPROB80) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB76 - SCR_MAXPROB80) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 16;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 15 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS71 - EVENTS75 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS71 - NONEVENTS75);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB71 -
SCR_MNPROB75) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB71 - SCR_MINPROB75) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB71 - SCR_MAXPROB75) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 15;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 14 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS66 - EVENTS70 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS66 - NONEVENTS70);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB66 -
SCR_MNPROB70) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB66 - SCR_MINPROB70) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB66 - SCR_MAXPROB70) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 14;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 13 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS61 - EVENTS65 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS61 - NONEVENTS65);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB61 -
SCR_MNPROB65) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB61 - SCR_MINPROB65) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB61 - SCR_MAXPROB65) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 13;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 12 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS56 - EVENTS60 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS56 - NONEVENTS60);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB56 -
SCR_MNPROB60) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB56 - SCR_MINPROB60) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB56 - SCR_MAXPROB60) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 12;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 11 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS51 - EVENTS55 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS51 - NONEVENTS55);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB51 -
SCR_MNPROB55) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB51 - SCR_MINPROB55) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB51 - SCR_MAXPROB55) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 11;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 10 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS46 - EVENTS50 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS46 - NONEVENTS50);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB46 -
SCR_MNPROB50) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB46 - SCR_MINPROB50) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB46 - SCR_MAXPROB50) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 10;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 9 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS41 - EVENTS45 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS41 - NONEVENTS45);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB41 -
SCR_MNPROB45) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB41 - SCR_MINPROB45) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB41 - SCR_MAXPROB45) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 9;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 8 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS36 - EVENTS40 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS36 - NONEVENTS40);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB36 -
SCR_MNPROB40) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB36 - SCR_MINPROB40) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB36 - SCR_MAXPROB40) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 8;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 7 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS31 - EVENTS35 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS31 - NONEVENTS35);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB31 -
SCR_MNPROB35) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB31 - SCR_MINPROB35) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB31 - SCR_MAXPROB35) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 7;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 6 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS26 - EVENTS30 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS26 - NONEVENTS30);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB26 -
SCR_MNPROB30) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB26 - SCR_MINPROB30) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB26 - SCR_MAXPROB30) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 6;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 5 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS21 - EVENTS25 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS21 - NONEVENTS25);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB21 -
SCR_MNPROB25) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB21 - SCR_MINPROB25) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB21 - SCR_MAXPROB25) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 5;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 4 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS16 - EVENTS20 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS16 - NONEVENTS20);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB16 -
SCR_MNPROB20) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB16 - SCR_MINPROB20) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB16 - SCR_MAXPROB20) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 4;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 3 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS11 - EVENTS15 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS11 - NONEVENTS15);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB11 -
SCR_MNPROB15) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB11 - SCR_MINPROB15) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB11 - SCR_MAXPROB15) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 3;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 2 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS6 - EVENTS10 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS6 - NONEVENTS10);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB6 -
SCR_MNPROB10) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB6 - SCR_MINPROB10) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB6 - SCR_MAXPROB10) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 2;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 1 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS1 - EVENTS5 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS1 - NONEVENTS5);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB1 - SCR_MNPROB5)
/ NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB1 - SCR_MINPROB5) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB1 - SCR_MAXPROB5) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 1;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("KSPROB" , PUT (KSPROB, 5.3 ) );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("_KS_BIN_PROB" , _KS_BIN_PROB );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("_KS_BIN_" , _KS_BIN_ / 100 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("KSDIFF" , KS_ABSDIFF );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PRECTPR" , PRECTPR );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXMUTUALPROB" , MAXMUTUALPROB);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LABEL __EVENT__ = "Event" DECILE = "Depth" BIN = "Bin" NUMOBS = "Number
of Observations" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * RUN for large data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST;
MPRINT(EM_ASSESS):   DELETE _AUXEVENTNAME;
MPRINT(EM_ASSESS):   QUIT;
 
MPRINT(EM_ASSESS):   OPTION NOCENTER LS = 95;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Report Vars Area.;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start OF Outdist Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPSCOREDIST;
MPRINT(EM_ASSESS):   RENAME MODELSCORE = SCORE UPPERPROB = UPPOSTERIOR SCR_CP_EVENTS =
CUMULATIVEPERCENTAGEOFEVENTS SCR_CP_NONEVENTS = CUMULATIVEPERCENTAGEOFNONEVENTS EVENTVALUE =
EVENT LOWERPROB = LOWPOSTERIOR NUMOBSINGROUP = N PERCOBSINGROUP = PERCENTAGE SCR_MINPROB =
_MINP_ SCR_MAXPROB = _MAXP_ SCR_MNPROB = _MEANP_ RANGE = P_LABEL C_PERCOBSINGROUP =
CUMULATIVEPERCENTAGE SCR_NUMEVENTS = NUMBEROFEVENTS SCR_NUMNONEVENTS = NUMBEROFNONEVENTS
SCR_P_EVENTS = PERCENTAGEOFEVENTS SCR_P_NONEVENTS = PERCENTAGEOFNONEVENTS ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... OUTDIST MODIFICATION LABEL AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL BIN = "Bin" N = "Number of Observations" P_LABEL = "Posterior
Probability Range" EVENT = "Event" LOWPOSTERIOR = "Lower Bound Posterior Probability"
PERCENTAGEOFEVENTS = "Percentage of Events" CUMULATIVEPERCENTAGEOFNONEVENTS = "Cumulative
Percentage of Nonevents" CUMULATIVEPERCENTAGE = "Cumulative Percentage" PERCENTAGEOFEVENTS =
"Percentage of Events" PERCENTAGEOFNONEVENTS = "Percentage of Nonevents"
CUMULATIVEPERCENTAGEOFEVENTS = "Cumulative Percentage of Events" UPPOSTERIOR = "Upper Bound
Posterior Probability" NUMBEROFEVENTS = "Number of Events" PERCENTAGE = "Percentage"
NUMBEROFNONEVENTS = "Number of Nonevents" _MEANP_ = "Mean Posterior Probability" _MINP_ = "Min
Posterior Probability" _MAXP_ = "Max Posterior Probability" SCORE = "Model Score" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   SET WORK._TEMPSCOREDIST (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........... END OF OUTDIST MODIFICATION;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start of OUTRANKS Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPRANK;
MPRINT(EM_ASSESS):   RENAME __EVENT__ = EVENT P_RESP = RESP C_P_CAPT_RESP = CAPC P_CAPT_RESP =
CAP NUMNONRESP = NUMNEVENT NUMRESP = NUMEVENT BASEEVENTS = BASENUMBEROFEVENTS BESTNUMEVENTS =
BESTNUMBEROFEVENTS MAXPROB = _MAXP_ MINPROB = _MINP_ CBASELIFT = BASELIFTC C_LIFT = LIFTC
MNPROB = _MEANP_ PERCENTILE = DECILE NUMOBS = N NUMEVENT = NUMBEROFEVENTS C_P_RESP = RESPC ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................. OUTRANKS;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL _MAXP_ = "Max Posterior Probability" _MINP_ = "Min Posterior
Probability" _MEANP_ = "Mean Posterior Probability" BASECAP = "Baseline % Captured Response"
BASECAPC = "Baseline Cumulative % Captured Response" BASENUMBEROFEVENTS = "Baseline Number of
Events" BASEGAIN = "Baseline Gain" BASELIFT = "Baseline Lift" BASELIFTC = "Baseline Cumulative
Lift" BASERESP = "Baseline % Response" BASERESPC = "Baseline Cumulative % Response" BASELIFTC
= "Baseline Cumulative Lift" BESTCAP = "Best % Captured Response" BESTCAPC = "Best Cumulative
% Captured Response" BESTGAIN = "Best Gain" BESTRESP = "Best % Response" BESTRESPC = "Best
Cumulative % Response" BESTLIFT = "Best Lift" BESTLIFTC = "Best Cumulative Lift"
BESTNUMBEROFEVENTS = "Best Number of Events" CAP = "% Captured Response" CAPC = "Cumulative %
Captured Response" DECILE = "Depth" GAIN = "Gain" LIFT = "Lift" LIFTC = "Cumulative Lift"
NUMNEVENT = "Number of Nonevents" N = "Number of Observations" EVENT = "Event" RESPC =
"Cumulative % Response" NUMBEROFEVENTS = "Number of Events" RESP = "% Response" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK;
MPRINT(EM_ASSESS):   SET WORK._TEMPRANK (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   proc datasets lib=work nolist;
MPRINT(EM_ASSESS):   delete _ea_tmpdata;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_ASSESS):   quit;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   OPTION ERRORS = 20;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):    data WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   retain target "DepVar";
MPRINT(EM_DIAGRAM):   retain TARGETLABEL 'DepVar';
MPRINT(EM_DIAGRAM):   retain dataRole "VALIDATE";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural32_EMRANK;
MPRINT(EM_DIAGRAM):   length target $32;
MPRINT(EM_DIAGRAM):   length TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   length dataRole $20;
MPRINT(EM_DIAGRAM):   length EVENT $32;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural32_EMRANK WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   retain target "DepVar";
MPRINT(EM_DIAGRAM):   retain TARGETLABEL 'DepVar';
MPRINT(EM_DIAGRAM):   retain dataRole "VALIDATE";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural32_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   length target $32;
MPRINT(EM_DIAGRAM):   length TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   length dataRole $20;
MPRINT(EM_DIAGRAM):   length EVENT $32;
MPRINT(EM_DIAGRAM):   length P_LABEL $9;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural32_EMSCOREDIST WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   run;
492135     %let _cn = %sysfunc(getoption(CENTER));
492136     options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
492137     proc print data=EMWS8.AutoNeural32_EMREPORTFIT noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural32_EMREPORTFIT noobs label;
492138     var STAT LABEL TRAIN
492139     VALIDATE
492140     ;
MPRINT(EM_DIAGRAM):   var STAT LABEL TRAIN VALIDATE ;
492141     by TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by TARGET TARGETLABEL;
492142     title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
492143     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_fitstat_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Fit Statistics";
MPRINT(EM_DIAGRAM):   run;
492144     run;
 
NOTE: There were 21 observations read from the data set EMWS8.AUTONEURAL32_EMREPORTFIT.
NOTE: The PROCEDURE PRINT printed page 368.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
492145     title10;
MPRINT(EM_DIAGRAM):   title10;
492146     options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
492147     proc sort data=EMWS8.AutoNeural32_EMCLASSIFICATION nothreads;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS8.AutoNeural32_EMCLASSIFICATION nothreads;
492148     by DATAROLE TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET TARGETLABEL;
492149     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set EMWS8.AUTONEURAL32_EMCLASSIFICATION.
NOTE: The data set EMWS8.AUTONEURAL32_EMCLASSIFICATION has 8 observations and 12 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
492150     %let _cn = %sysfunc(getoption(CENTER));
492151     options nocenter;
MPRINT(EM_DIAGRAM):   options nocenter;
492152     proc print data=EMWS8.AutoNeural32_EMCLASSIFICATION noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural32_EMCLASSIFICATION noobs label;
492153     var from into pct_row pct_col count percent
492154     ;
MPRINT(EM_DIAGRAM):   var from into pct_row pct_col count percent ;
492155     by DATAROLE TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET TARGETLABEL;
492156     label FROM = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel ,     NOQUOTE))";
MPRINT(EM_DIAGRAM):   label FROM = "Target";
492157     label INTO = "%sysfunc(sasmsg(sashelp.dmine, rpt_outcome_vlabel ,    NOQUOTE))";
MPRINT(EM_DIAGRAM):   label INTO = "Outcome";
492158     label PCT_ROW = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetpct_vlabel ,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PCT_ROW = "Target Percentage";
492159     label PCT_COL = "%sysfunc(sasmsg(sashelp.dmine, rpt_outcomepct_vlabel , NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PCT_COL = "Outcome Percentage";
492160     label COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel ,      NOQUOTE))";
MPRINT(EM_DIAGRAM):   label COUNT = "Frequency Count";
492161     label PERCENT = "%sysfunc(sasmsg(sashelp.dmine, rpt_totalpct_vlabel ,   NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PERCENT = "Total Percentage";
492162     where _TYPE_='PREDICTION';
MPRINT(EM_DIAGRAM):   where _TYPE_='PREDICTION';
492163     title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
492164     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_classification_title    , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Classification Table";
MPRINT(EM_DIAGRAM):   run;
492165     run;
 
NOTE: There were 8 observations read from the data set EMWS8.AUTONEURAL32_EMCLASSIFICATION.
      WHERE _TYPE_='PREDICTION';
NOTE: The PROCEDURE PRINT printed page 369.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
492166     title9;
MPRINT(EM_DIAGRAM):   title9;
492167     title10;
MPRINT(EM_DIAGRAM):   title10;
492168     options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
492169     %let _cn = %sysfunc(getoption(CENTER));
492170     options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
492171     data EMWS8.AutoNeural32_EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural32_EMEVENTREPORT;
492172     length DATAROLE TARGET $32 TARGETLABEL $200 FALSENEVENT TRUENEVENT FALSEEVENT
492172   ! TRUEEVENT 8;
MPRINT(EM_DIAGRAM):   length DATAROLE TARGET $32 TARGETLABEL $200 FALSENEVENT TRUENEVENT
FALSEEVENT TRUEEVENT 8;
492173     label DATAROLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))"
492173   !  TARGET = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel ,      NOQUOTE))"
492173   ! TARGETLABEL = "%sysfunc(sasmsg(sashelp.dmine, meta_targetlabel_vlabel, NOQUOTE))"
492173   ! FALSEEVENT
492174     = "%sysfunc(sasmsg(sashelp.dmine, rpt_falseevent_vlabel ,  NOQUOTE))" FALSENEVENT =
492174   ! "%sysfunc(sasmsg(sashelp.dmine, rpt_falsenevent_vlabel , NOQUOTE))" TRUEEVENT =
492174   ! "%sysfunc(sasmsg(sashelp.dmine, rpt_trueevent_vlabel ,   NOQUOTE))" TRUENEVENT =
492175        "%sysfunc(sasmsg(sashelp.dmine, rpt_truenevent_vlabel ,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label DATAROLE = "Data Role" TARGET = "Target" TARGETLABEL = "Target
Label" FALSEEVENT = "False Positive" FALSENEVENT = "False Negative" TRUEEVENT = "True
Positive" TRUENEVENT = "True Negative";
492176     FALSEEVENT=0;
MPRINT(EM_DIAGRAM):   FALSEEVENT=0;
492177     FALSENEVENT=0;
MPRINT(EM_DIAGRAM):   FALSENEVENT=0;
492178     TRUEEVENT=0;
MPRINT(EM_DIAGRAM):   TRUEEVENT=0;
492179     TRUENEVENT=0;
MPRINT(EM_DIAGRAM):   TRUENEVENT=0;
492180     set EMWS8.AutoNeural32_EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural32_EMEVENTREPORT;
492181     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set EMWS8.AUTONEURAL32_EMEVENTREPORT.
NOTE: The data set EMWS8.AUTONEURAL32_EMEVENTREPORT has 2 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
492182     proc print data=EMWS8.AutoNeural32_EMEVENTREPORT noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural32_EMEVENTREPORT noobs label;
492183     title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
492184     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_eventtable_title    , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Event Classification Table";
MPRINT(EM_DIAGRAM):   by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL;
MPRINT(EM_DIAGRAM):   run;
492185     by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL;
492186     run;
 
NOTE: There were 2 observations read from the data set EMWS8.AUTONEURAL32_EMEVENTREPORT.
NOTE: The PROCEDURE PRINT printed page 370.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
492187     title10;
MPRINT(EM_DIAGRAM):   title10;
492188     options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
492189     proc datasets library=EMWS8 nolist;
MPRINT(EM_DIAGRAM):    proc datasets library=EMWS8 nolist;
492190     modify AutoNeural32_EMRANK;
MPRINT(EM_DIAGRAM):   modify AutoNeural32_EMRANK;
MPRINT(EM_DIAGRAM):   label target = "Target Variable";
492191     label target = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetvar_vlabel ,   NOQUOTE))";
MPRINT(EM_DIAGRAM):   label datarole = "Data Role";
492192     label datarole = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))"
492192   ! ;
MPRINT(EM_DIAGRAM):   run;
492193     run;
 
NOTE: MODIFY was successful for EMWS8.AUTONEURAL32_EMRANK.DATA.
492194     quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.19 seconds
      cpu time            0.20 seconds
 
 
492195     %let _cn = %sysfunc(getoption(CENTER));
492196     options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
492197     proc print data=EMWS8.AutoNeural32_EMRANK label noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural32_EMRANK label noobs;
492198     var
492199     decile gain lift liftc resp respc N _meanP_;
MPRINT(EM_DIAGRAM):   var decile gain lift liftc resp respc N _meanP_;
492200     by
492201     notsorted DATAROLE
492202     notsorted TARGET
492203     notsorted TARGETLABEL
492204     ;
MPRINT(EM_DIAGRAM):   by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL ;
492205     title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
492206     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_scoreranking_title , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Assessment Score Rankings";
MPRINT(EM_DIAGRAM):   run;
492207     run;
 
NOTE: There were 40 observations read from the data set EMWS8.AUTONEURAL32_EMRANK.
NOTE: The PROCEDURE PRINT printed page 371.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
492208     title10;
MPRINT(EM_DIAGRAM):   title10;
492209     options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
492210     proc datasets library=EMWS8 nolist;
MPRINT(EM_DIAGRAM):    proc datasets library=EMWS8 nolist;
492211     modify AutoNeural32_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   modify AutoNeural32_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   label target = "Target Variable";
492212     label target = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetvar_vlabel ,
492212   ! NOQUOTE))";
MPRINT(EM_DIAGRAM):   label datarole = "Data Role";
492213     label datarole = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))"
492213   ! ;
MPRINT(EM_DIAGRAM):   run;
492214     run;
 
NOTE: MODIFY was successful for EMWS8.AUTONEURAL32_EMSCOREDIST.DATA.
492215     quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.18 seconds
      cpu time            0.18 seconds
 
 
MPRINT(EM_DIAGRAM):    options nocenter;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural32_EMSCOREDIST label noobs;
MPRINT(EM_DIAGRAM):   var p_label numberOfEvents numberOfNonEvents _meanp_ percentage;
MPRINT(EM_DIAGRAM):   by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL ;
MPRINT(EM_DIAGRAM):   where TARGET in( "DepVar" );
MPRINT(EM_DIAGRAM):   title9 ' ';
MPRINT(EM_DIAGRAM):   title10 "Assessment Score Distribution";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   title10;
MPRINT(EM_DIAGRAM):   options NOCENTER;
MPRINT(EM_DIAGRAM):   proc printto;
MPRINT(EM_DIAGRAM):   run;
