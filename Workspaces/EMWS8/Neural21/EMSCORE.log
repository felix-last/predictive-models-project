MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "21. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "18.53 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                21. April 2016
Time:                18.53 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O2QZCSY5 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural21\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O2QZCSY5 new;
MPRINT(EM_DIAGRAM):   run;
826219     data work.outkey;
MPRINT(EM_DIAGRAM):    data work.outkey;
826220     set EMWS8.Neural21_OUTKEY;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural21_OUTKEY;
826221     if upcase(ROLE) = 'HIDDEN';
MPRINT(EM_DIAGRAM):   if upcase(ROLE) = 'HIDDEN';
826222     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 56 observations read from the data set EMWS8.NEURAL21_OUTKEY.
NOTE: The data set WORK.OUTKEY has 4 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

826223     filename emflow
826223   ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural21\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural21\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural21: Scoring DATA data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
826224     *------------------------------------------------------------*;
826225     * Neural21: Scoring DATA data;
826226     *------------------------------------------------------------*;
826227     data EMWS8.Neural21_TRAIN
826228     / view=EMWS8.Neural21_TRAIN
826229     ;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural21_TRAIN / view=EMWS8.Neural21_TRAIN ;
826230     set EMWS8.BINNING_TRAIN
826231     ;
MPRINT(EM_DIAGRAM):   set EMWS8.BINNING_TRAIN ;
826232     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Neural21\EMFLOWSCORE.sas.
826233    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
826234    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
826235    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
826236    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
826237    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
826238    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
826239    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
826240    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
826241    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
826242    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
826243    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
826244    +LENGTH _WARN_ $4
826245    +      F_DepVar  $ 12
826246    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
826247    +      label S_Year_Birth = 'Standard: Year_Birth' ;
MPRINT(EM_DIAGRAM):   label S_Year_Birth = 'Standard: Year_Birth' ;
826248    +
826249    +      label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
MPRINT(EM_DIAGRAM):   label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
826250    +
826251    +      label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
826252    +
826253    +      label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
826254    +
826255    +      label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
826256    +
826257    +      label GRP_Income2 = 'Dummy: GRP_Income=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Income2 = 'Dummy: GRP_Income=2' ;
826258    +
826259    +      label GRP_Income3 = 'Dummy: GRP_Income=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Income3 = 'Dummy: GRP_Income=3' ;
826260    +
826261    +      label GRP_Income4 = 'Dummy: GRP_Income=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Income4 = 'Dummy: GRP_Income=4' ;
826262    +
826263    +      label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
826264    +
826265    +      label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
826266    +
826267    +      label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
826268    +
826269    +      label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
826270    +
826271    +      label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
826272    +
826273    +      label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
826274    +
826275    +      label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
826276    +
826277    +      label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
826278    +
826279    +      label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
826280    +
826281    +      label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
826282    +
826283    +      label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
826284    +
826285    +      label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
826286    +
826287    +      label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
826288    +
826289    +      label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
826290    +
826291    +      label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
826292    +
826293    +      label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
826294    +
826295    +      label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
826296    +
826297    +      label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
826298    +
826299    +      label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
826300    +
826301    +      label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
826302    +
826303    +      label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
826304    +
826305    +      label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
826306    +
826307    +      label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
826308    +
826309    +      label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
826310    +
826311    +      label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
826312    +
826313    +      label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
826314    +
826315    +      label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
826316    +
826317    +      label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
826318    +
826319    +      label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
826320    +
826321    +      label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
826322    +
826323    +      label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
826324    +
826325    +      label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
826326    +
826327    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
826328    +
826329    +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
826330    +
826331    +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
826332    +
826333    +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
826334    +
826335    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
826336    +
826337    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
826338    +
826339    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
826340    +
826341    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
826342    +
826343    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
826344    +
826345    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
826346    +
826347    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
826348    +
826349    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
826350    +
826351    +*** Generate dummy variables for GRP_AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_AcceptedCmp5 ;
826352    +drop GRP_AcceptedCmp52 ;
MPRINT(EM_DIAGRAM):   drop GRP_AcceptedCmp52 ;
826353    +if missing( GRP_AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_AcceptedCmp5 ) then do;
826354    +   GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
826355    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
826356    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
826357    +end;
MPRINT(EM_DIAGRAM):   end;
826358    +else do;
MPRINT(EM_DIAGRAM):   else do;
826359    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
826360    +   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
826361    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
826362    +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
826363    +      GRP_AcceptedCmp52 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = 1;
826364    +   end;
MPRINT(EM_DIAGRAM):   end;
826365    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
826366    +      GRP_AcceptedCmp52 = -1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = -1;
826367    +   end;
MPRINT(EM_DIAGRAM):   end;
826368    +   else do;
MPRINT(EM_DIAGRAM):   else do;
826369    +      GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
826370    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
826371    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
826372    +   end;
MPRINT(EM_DIAGRAM):   end;
826373    +end;
MPRINT(EM_DIAGRAM):   end;
826374    +
826375    +*** Generate dummy variables for GRP_Frq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Frq ;
826376    +drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
826377    +if missing( GRP_Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Frq ) then do;
826378    +   GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
826379    +   GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
826380    +   GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
826381    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
826382    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
826383    +end;
MPRINT(EM_DIAGRAM):   end;
826384    +else do;
MPRINT(EM_DIAGRAM):   else do;
826385    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
826386    +   _dm12 = put( GRP_Frq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Frq , BEST12. );
826387    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
826388    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
826389    +      GRP_Frq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = -1;
826390    +      GRP_Frq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = -1;
826391    +      GRP_Frq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = -1;
826392    +   end;
MPRINT(EM_DIAGRAM):   end;
826393    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
826394    +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
826395    +      GRP_Frq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 1;
826396    +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
826397    +   end;
MPRINT(EM_DIAGRAM):   end;
826398    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
826399    +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
826400    +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
826401    +      GRP_Frq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 1;
826402    +   end;
MPRINT(EM_DIAGRAM):   end;
826403    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
826404    +      GRP_Frq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 1;
826405    +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
826406    +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
826407    +   end;
MPRINT(EM_DIAGRAM):   end;
826408    +   else do;
MPRINT(EM_DIAGRAM):   else do;
826409    +      GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
826410    +      GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
826411    +      GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
826412    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
826413    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
826414    +   end;
MPRINT(EM_DIAGRAM):   end;
826415    +end;
MPRINT(EM_DIAGRAM):   end;
826416    +
826417    +*** Generate dummy variables for GRP_Income ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Income ;
826418    +drop GRP_Income2 GRP_Income3 GRP_Income4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Income2 GRP_Income3 GRP_Income4 ;
826419    +if missing( GRP_Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Income ) then do;
826420    +   GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
826421    +   GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
826422    +   GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
826423    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
826424    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
826425    +end;
MPRINT(EM_DIAGRAM):   end;
826426    +else do;
MPRINT(EM_DIAGRAM):   else do;
826427    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
826428    +   _dm12 = put( GRP_Income , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Income , BEST12. );
826429    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
826430    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
826431    +      GRP_Income2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = -1;
826432    +      GRP_Income3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = -1;
826433    +      GRP_Income4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = -1;
826434    +   end;
MPRINT(EM_DIAGRAM):   end;
826435    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
826436    +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
826437    +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
826438    +      GRP_Income4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 1;
826439    +   end;
MPRINT(EM_DIAGRAM):   end;
826440    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
826441    +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
826442    +      GRP_Income3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 1;
826443    +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
826444    +   end;
MPRINT(EM_DIAGRAM):   end;
826445    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
826446    +      GRP_Income2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 1;
826447    +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
826448    +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
826449    +   end;
MPRINT(EM_DIAGRAM):   end;
826450    +   else do;
MPRINT(EM_DIAGRAM):   else do;
826451    +      GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
826452    +      GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
826453    +      GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
826454    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
826455    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
826456    +   end;
MPRINT(EM_DIAGRAM):   end;
826457    +end;
MPRINT(EM_DIAGRAM):   end;
826458    +
826459    +*** Generate dummy variables for GRP_Mnt ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Mnt ;
826460    +drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
826461    +if missing( GRP_Mnt ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Mnt ) then do;
826462    +   GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
826463    +   GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
826464    +   GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
826465    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
826466    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
826467    +end;
MPRINT(EM_DIAGRAM):   end;
826468    +else do;
MPRINT(EM_DIAGRAM):   else do;
826469    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
826470    +   _dm12 = put( GRP_Mnt , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Mnt , BEST12. );
826471    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
826472    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
826473    +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
826474    +      GRP_Mnt3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 1;
826475    +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
826476    +   end;
MPRINT(EM_DIAGRAM):   end;
826477    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
826478    +      GRP_Mnt2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = -1;
826479    +      GRP_Mnt3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = -1;
826480    +      GRP_Mnt4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = -1;
826481    +   end;
MPRINT(EM_DIAGRAM):   end;
826482    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
826483    +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
826484    +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
826485    +      GRP_Mnt4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 1;
826486    +   end;
MPRINT(EM_DIAGRAM):   end;
826487    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
826488    +      GRP_Mnt2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 1;
826489    +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
826490    +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
826491    +   end;
MPRINT(EM_DIAGRAM):   end;
826492    +   else do;
MPRINT(EM_DIAGRAM):   else do;
826493    +      GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
826494    +      GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
826495    +      GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
826496    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
826497    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
826498    +   end;
MPRINT(EM_DIAGRAM):   end;
826499    +end;
MPRINT(EM_DIAGRAM):   end;
826500    +
826501    +*** Generate dummy variables for GRP_MntFishProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntFishProducts ;
826502    +drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
826503    +if missing( GRP_MntFishProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntFishProducts ) then do;
826504    +   GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
826505    +   GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
826506    +   GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
826507    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
826508    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
826509    +end;
MPRINT(EM_DIAGRAM):   end;
826510    +else do;
MPRINT(EM_DIAGRAM):   else do;
826511    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
826512    +   _dm12 = put( GRP_MntFishProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntFishProducts , BEST12. );
826513    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
826514    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
826515    +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
826516    +      GRP_MntFishProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 1;
826517    +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
826518    +   end;
MPRINT(EM_DIAGRAM):   end;
826519    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
826520    +      GRP_MntFishProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = -1;
826521    +      GRP_MntFishProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = -1;
826522    +      GRP_MntFishProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = -1;
826523    +   end;
MPRINT(EM_DIAGRAM):   end;
826524    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
826525    +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
826526    +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
826527    +      GRP_MntFishProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 1;
826528    +   end;
MPRINT(EM_DIAGRAM):   end;
826529    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
826530    +      GRP_MntFishProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 1;
826531    +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
826532    +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
826533    +   end;
MPRINT(EM_DIAGRAM):   end;
826534    +   else do;
MPRINT(EM_DIAGRAM):   else do;
826535    +      GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
826536    +      GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
826537    +      GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
826538    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
826539    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
826540    +   end;
MPRINT(EM_DIAGRAM):   end;
826541    +end;
MPRINT(EM_DIAGRAM):   end;
826542    +
826543    +*** Generate dummy variables for GRP_MntGoldProds ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntGoldProds ;
826544    +drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
826545    +if missing( GRP_MntGoldProds ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntGoldProds ) then do;
826546    +   GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
826547    +   GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
826548    +   GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
826549    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
826550    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
826551    +end;
MPRINT(EM_DIAGRAM):   end;
826552    +else do;
MPRINT(EM_DIAGRAM):   else do;
826553    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
826554    +   _dm12 = put( GRP_MntGoldProds , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntGoldProds , BEST12. );
826555    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
826556    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
826557    +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
826558    +      GRP_MntGoldProds3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 1;
826559    +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
826560    +   end;
MPRINT(EM_DIAGRAM):   end;
826561    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
826562    +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
826563    +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
826564    +      GRP_MntGoldProds4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 1;
826565    +   end;
MPRINT(EM_DIAGRAM):   end;
826566    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
826567    +      GRP_MntGoldProds2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = -1;
826568    +      GRP_MntGoldProds3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = -1;
826569    +      GRP_MntGoldProds4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = -1;
826570    +   end;
MPRINT(EM_DIAGRAM):   end;
826571    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
826572    +      GRP_MntGoldProds2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 1;
826573    +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
826574    +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
826575    +   end;
MPRINT(EM_DIAGRAM):   end;
826576    +   else do;
MPRINT(EM_DIAGRAM):   else do;
826577    +      GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
826578    +      GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
826579    +      GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
826580    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
826581    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
826582    +   end;
MPRINT(EM_DIAGRAM):   end;
826583    +end;
MPRINT(EM_DIAGRAM):   end;
826584    +
826585    +*** Generate dummy variables for GRP_MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntMeatProducts ;
826586    +drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
826587    +if missing( GRP_MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntMeatProducts ) then do;
826588    +   GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
826589    +   GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
826590    +   GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
826591    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
826592    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
826593    +end;
MPRINT(EM_DIAGRAM):   end;
826594    +else do;
MPRINT(EM_DIAGRAM):   else do;
826595    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
826596    +   _dm12 = put( GRP_MntMeatProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntMeatProducts , BEST12. );
826597    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
826598    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
826599    +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
826600    +      GRP_MntMeatProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 1;
826601    +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
826602    +   end;
MPRINT(EM_DIAGRAM):   end;
826603    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
826604    +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
826605    +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
826606    +      GRP_MntMeatProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 1;
826607    +   end;
MPRINT(EM_DIAGRAM):   end;
826608    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
826609    +      GRP_MntMeatProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = -1;
826610    +      GRP_MntMeatProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = -1;
826611    +      GRP_MntMeatProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = -1;
826612    +   end;
MPRINT(EM_DIAGRAM):   end;
826613    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
826614    +      GRP_MntMeatProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 1;
826615    +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
826616    +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
826617    +   end;
MPRINT(EM_DIAGRAM):   end;
826618    +   else do;
MPRINT(EM_DIAGRAM):   else do;
826619    +      GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
826620    +      GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
826621    +      GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
826622    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
826623    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
826624    +   end;
MPRINT(EM_DIAGRAM):   end;
826625    +end;
MPRINT(EM_DIAGRAM):   end;
826626    +
826627    +*** Generate dummy variables for GRP_MntWines ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntWines ;
826628    +drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
826629    +if missing( GRP_MntWines ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntWines ) then do;
826630    +   GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
826631    +   GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
826632    +   GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
826633    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
826634    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
826635    +end;
MPRINT(EM_DIAGRAM):   end;
826636    +else do;
MPRINT(EM_DIAGRAM):   else do;
826637    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
826638    +   _dm12 = put( GRP_MntWines , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntWines , BEST12. );
826639    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
826640    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
826641    +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
826642    +      GRP_MntWines3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 1;
826643    +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
826644    +   end;
MPRINT(EM_DIAGRAM):   end;
826645    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
826646    +      GRP_MntWines2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = -1;
826647    +      GRP_MntWines3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = -1;
826648    +      GRP_MntWines4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = -1;
826649    +   end;
MPRINT(EM_DIAGRAM):   end;
826650    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
826651    +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
826652    +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
826653    +      GRP_MntWines4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 1;
826654    +   end;
MPRINT(EM_DIAGRAM):   end;
826655    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
826656    +      GRP_MntWines2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 1;
826657    +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
826658    +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
826659    +   end;
MPRINT(EM_DIAGRAM):   end;
826660    +   else do;
MPRINT(EM_DIAGRAM):   else do;
826661    +      GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
826662    +      GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
826663    +      GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
826664    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
826665    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
826666    +   end;
MPRINT(EM_DIAGRAM):   end;
826667    +end;
MPRINT(EM_DIAGRAM):   end;
826668    +
826669    +*** Generate dummy variables for GRP_NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumCatalogPurchases ;
826670    +drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
826671    +if missing( GRP_NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumCatalogPurchases ) then do;
826672    +   GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
826673    +   GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
826674    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
826675    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
826676    +end;
MPRINT(EM_DIAGRAM):   end;
826677    +else do;
MPRINT(EM_DIAGRAM):   else do;
826678    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
826679    +   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
826680    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
826681    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
826682    +      GRP_NumCatalogPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 1;
826683    +      GRP_NumCatalogPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 0;
826684    +   end;
MPRINT(EM_DIAGRAM):   end;
826685    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
826686    +      GRP_NumCatalogPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = -1;
826687    +      GRP_NumCatalogPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = -1;
826688    +   end;
MPRINT(EM_DIAGRAM):   end;
826689    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
826690    +      GRP_NumCatalogPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 0;
826691    +      GRP_NumCatalogPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 1;
826692    +   end;
MPRINT(EM_DIAGRAM):   end;
826693    +   else do;
MPRINT(EM_DIAGRAM):   else do;
826694    +      GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
826695    +      GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
826696    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
826697    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
826698    +   end;
MPRINT(EM_DIAGRAM):   end;
826699    +end;
MPRINT(EM_DIAGRAM):   end;
826700    +
826701    +*** Generate dummy variables for GRP_NumDistPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumDistPurchases ;
826702    +drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
826703    +if missing( GRP_NumDistPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumDistPurchases ) then do;
826704    +   GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
826705    +   GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
826706    +   GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
826707    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
826708    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
826709    +end;
MPRINT(EM_DIAGRAM):   end;
826710    +else do;
MPRINT(EM_DIAGRAM):   else do;
826711    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
826712    +   _dm12 = put( GRP_NumDistPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumDistPurchases , BEST12. );
826713    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
826714    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
826715    +      GRP_NumDistPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = -1;
826716    +      GRP_NumDistPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = -1;
826717    +      GRP_NumDistPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = -1;
826718    +   end;
MPRINT(EM_DIAGRAM):   end;
826719    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
826720    +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
826721    +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
826722    +      GRP_NumDistPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 1;
826723    +   end;
MPRINT(EM_DIAGRAM):   end;
826724    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
826725    +      GRP_NumDistPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 1;
826726    +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
826727    +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
826728    +   end;
MPRINT(EM_DIAGRAM):   end;
826729    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
826730    +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
826731    +      GRP_NumDistPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 1;
826732    +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
826733    +   end;
MPRINT(EM_DIAGRAM):   end;
826734    +   else do;
MPRINT(EM_DIAGRAM):   else do;
826735    +      GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
826736    +      GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
826737    +      GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
826738    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
826739    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
826740    +   end;
MPRINT(EM_DIAGRAM):   end;
826741    +end;
MPRINT(EM_DIAGRAM):   end;
826742    +
826743    +*** Generate dummy variables for GRP_NumWebPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumWebPurchases ;
826744    +drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
826745    +if missing( GRP_NumWebPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumWebPurchases ) then do;
826746    +   GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
826747    +   GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
826748    +   GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
826749    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
826750    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
826751    +end;
MPRINT(EM_DIAGRAM):   end;
826752    +else do;
MPRINT(EM_DIAGRAM):   else do;
826753    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
826754    +   _dm12 = put( GRP_NumWebPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumWebPurchases , BEST12. );
826755    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
826756    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
826757    +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
826758    +      GRP_NumWebPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 1;
826759    +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
826760    +   end;
MPRINT(EM_DIAGRAM):   end;
826761    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
826762    +      GRP_NumWebPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = -1;
826763    +      GRP_NumWebPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = -1;
826764    +      GRP_NumWebPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = -1;
826765    +   end;
MPRINT(EM_DIAGRAM):   end;
826766    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
826767    +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
826768    +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
826769    +      GRP_NumWebPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 1;
826770    +   end;
MPRINT(EM_DIAGRAM):   end;
826771    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
826772    +      GRP_NumWebPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 1;
826773    +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
826774    +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
826775    +   end;
MPRINT(EM_DIAGRAM):   end;
826776    +   else do;
MPRINT(EM_DIAGRAM):   else do;
826777    +      GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
826778    +      GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
826779    +      GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
826780    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
826781    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
826782    +   end;
MPRINT(EM_DIAGRAM):   end;
826783    +end;
MPRINT(EM_DIAGRAM):   end;
826784    +
826785    +*** Generate dummy variables for GRP_RFMstat ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RFMstat ;
826786    +drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
826787    +if missing( GRP_RFMstat ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RFMstat ) then do;
826788    +   GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
826789    +   GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
826790    +   GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
826791    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
826792    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
826793    +end;
MPRINT(EM_DIAGRAM):   end;
826794    +else do;
MPRINT(EM_DIAGRAM):   else do;
826795    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
826796    +   _dm12 = put( GRP_RFMstat , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RFMstat , BEST12. );
826797    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
826798    +   if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
826799    +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
826800    +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
826801    +      GRP_RFMstat4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 1;
826802    +   end;
MPRINT(EM_DIAGRAM):   end;
826803    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
826804    +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
826805    +      GRP_RFMstat3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 1;
826806    +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
826807    +   end;
MPRINT(EM_DIAGRAM):   end;
826808    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
826809    +      GRP_RFMstat2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = -1;
826810    +      GRP_RFMstat3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = -1;
826811    +      GRP_RFMstat4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = -1;
826812    +   end;
MPRINT(EM_DIAGRAM):   end;
826813    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
826814    +      GRP_RFMstat2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 1;
826815    +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
826816    +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
826817    +   end;
MPRINT(EM_DIAGRAM):   end;
826818    +   else do;
MPRINT(EM_DIAGRAM):   else do;
826819    +      GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
826820    +      GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
826821    +      GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
826822    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
826823    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
826824    +   end;
MPRINT(EM_DIAGRAM):   end;
826825    +end;
MPRINT(EM_DIAGRAM):   end;
826826    +
826827    +*** Generate dummy variables for GRP_RMntFrq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RMntFrq ;
826828    +drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
826829    +if missing( GRP_RMntFrq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RMntFrq ) then do;
826830    +   GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
826831    +   GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
826832    +   GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
826833    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
826834    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
826835    +end;
MPRINT(EM_DIAGRAM):   end;
826836    +else do;
MPRINT(EM_DIAGRAM):   else do;
826837    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
826838    +   _dm12 = put( GRP_RMntFrq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RMntFrq , BEST12. );
826839    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
826840    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
826841    +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
826842    +      GRP_RMntFrq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 1;
826843    +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
826844    +   end;
MPRINT(EM_DIAGRAM):   end;
826845    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
826846    +      GRP_RMntFrq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = -1;
826847    +      GRP_RMntFrq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = -1;
826848    +      GRP_RMntFrq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = -1;
826849    +   end;
MPRINT(EM_DIAGRAM):   end;
826850    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
826851    +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
826852    +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
826853    +      GRP_RMntFrq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 1;
826854    +   end;
MPRINT(EM_DIAGRAM):   end;
826855    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
826856    +      GRP_RMntFrq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 1;
826857    +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
826858    +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
826859    +   end;
MPRINT(EM_DIAGRAM):   end;
826860    +   else do;
MPRINT(EM_DIAGRAM):   else do;
826861    +      GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
826862    +      GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
826863    +      GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
826864    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
826865    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
826866    +   end;
MPRINT(EM_DIAGRAM):   end;
826867    +end;
MPRINT(EM_DIAGRAM):   end;
826868    +
826869    +*** Generate dummy variables for GRP_Recency ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Recency ;
826870    +drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
826871    +if missing( GRP_Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Recency ) then do;
826872    +   GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
826873    +   GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
826874    +   GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
826875    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
826876    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
826877    +end;
MPRINT(EM_DIAGRAM):   end;
826878    +else do;
MPRINT(EM_DIAGRAM):   else do;
826879    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
826880    +   _dm12 = put( GRP_Recency , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Recency , BEST12. );
826881    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
826882    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
826883    +      GRP_Recency2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = -1;
826884    +      GRP_Recency3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = -1;
826885    +      GRP_Recency4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = -1;
826886    +   end;
MPRINT(EM_DIAGRAM):   end;
826887    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
826888    +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
826889    +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
826890    +      GRP_Recency4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 1;
826891    +   end;
MPRINT(EM_DIAGRAM):   end;
826892    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
826893    +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
826894    +      GRP_Recency3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 1;
826895    +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
826896    +   end;
MPRINT(EM_DIAGRAM):   end;
826897    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
826898    +      GRP_Recency2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 1;
826899    +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
826900    +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
826901    +   end;
MPRINT(EM_DIAGRAM):   end;
826902    +   else do;
MPRINT(EM_DIAGRAM):   else do;
826903    +      GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
826904    +      GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
826905    +      GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
826906    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
826907    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
826908    +   end;
MPRINT(EM_DIAGRAM):   end;
826909    +end;
MPRINT(EM_DIAGRAM):   end;
826910    +
826911    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
826912    +*** Checking missing input Interval
826913    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
826914    +
826915    +IF NMISS(
826916    +   Year_Birth   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Year_Birth ) THEN DO;
826917    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
826918    +
826919    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
826920    +END;
MPRINT(EM_DIAGRAM):   END;
826921    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
826922    +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
826923    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
826924    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
826925    +   S_Year_Birth  =    -163.205330145852 +     0.08289609202864 * Year_Birth ;
MPRINT(EM_DIAGRAM):   S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
826926    +END;
MPRINT(EM_DIAGRAM):   END;
826927    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
826928    +   IF MISSING( Year_Birth ) THEN S_Year_Birth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Year_Birth ) THEN S_Year_Birth = . ;
826929    +   ELSE S_Year_Birth  =    -163.205330145852 +     0.08289609202864 *
826930    +        Year_Birth ;
MPRINT(EM_DIAGRAM):   ELSE S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
826931    +END;
MPRINT(EM_DIAGRAM):   END;
826932    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
826933    +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
826934    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
826935    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
826936    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
826937    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
826938    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
826939    +   H11  =      0.0668146440452 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H11 = 0.0668146440452 * S_Year_Birth ;
826940    +   H12  =     0.02918236951724 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H12 = 0.02918236951724 * S_Year_Birth ;
826941    +   H13  =     0.52122974180208 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H13 = 0.52122974180208 * S_Year_Birth ;
826942    +   H14  =     -0.1823800721103 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H14 = -0.1823800721103 * S_Year_Birth ;
826943    +   H11  = H11  +    -0.48347630033708 * GRP_AcceptedCmp52
826944    +          +     0.37100635990339 * GRP_Frq2  +     0.04377799127913 * GRP_Frq3
826945    +          +     -0.1974477050613 * GRP_Frq4  +     0.10700887225506 *
826946    +        GRP_Income2  +      0.3291591268929 * GRP_Income3
826947    +          +     0.00612929517663 * GRP_Income4  +    -0.23329153390557 *
826948    +        GRP_Mnt2  +    -0.08800204437411 * GRP_Mnt3  +    -0.08445529701198 *
826949    +        GRP_Mnt4  +     0.28673732624133 * GRP_MntFishProducts2
826950    +          +    -0.14978605827752 * GRP_MntFishProducts3
826951    +          +     0.22642470616542 * GRP_MntFishProducts4
826952    +          +     0.07604404821672 * GRP_MntGoldProds2
826953    +          +     0.04745212568332 * GRP_MntGoldProds3
826954    +          +    -0.10028215217028 * GRP_MntGoldProds4
826955    +          +    -0.07377682497053 * GRP_MntMeatProducts2
826956    +          +    -0.09960214357487 * GRP_MntMeatProducts3
826957    +          +    -0.25438120582859 * GRP_MntMeatProducts4
826958    +          +     0.42639299324809 * GRP_MntWines2  +     0.31089292559786 *
826959    +        GRP_MntWines3  +    -0.26826041457934 * GRP_MntWines4
826960    +          +    -0.53742609478771 * GRP_NumCatalogPurchases3
826961    +          +    -0.03023603128161 * GRP_NumCatalogPurchases4
826962    +          +    -0.37743946252805 * GRP_NumDistPurchases2
826963    +          +    -0.01872647257623 * GRP_NumDistPurchases3
826964    +          +    -0.31993024737958 * GRP_NumDistPurchases4
826965    +          +    -0.11078713164327 * GRP_NumWebPurchases2
826966    +          +     0.24754701690398 * GRP_NumWebPurchases3
826967    +          +     0.01530465573539 * GRP_NumWebPurchases4
826968    +          +    -0.17630256491744 * GRP_RFMstat2  +    -0.47929093118323 *
826969    +        GRP_RFMstat3  +     0.26729201021061 * GRP_RFMstat4
826970    +          +    -0.20197995708067 * GRP_RMntFrq2  +    -0.07138949090838 *
826971    +        GRP_RMntFrq3  +    -0.08653988697814 * GRP_RMntFrq4
826972    +          +     1.10790516734526 * GRP_Recency2  +     0.22440369463671 *
826973    +        GRP_Recency3  +    -0.44624012521308 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.48347630033708 * GRP_AcceptedCmp52 + 0.37100635990339 * 
GRP_Frq2 + 0.04377799127913 * GRP_Frq3 + -0.1974477050613 * GRP_Frq4 + 0.10700887225506 * 
GRP_Income2 + 0.3291591268929 * GRP_Income3 + 0.00612929517663 * GRP_Income4 + 
-0.23329153390557 * GRP_Mnt2 + -0.08800204437411 * GRP_Mnt3 + -0.08445529701198 * GRP_Mnt4 + 
0.28673732624133 * GRP_MntFishProducts2 + -0.14978605827752 * GRP_MntFishProducts3 + 
0.22642470616542 * GRP_MntFishProducts4 + 0.07604404821672 * GRP_MntGoldProds2 + 
0.04745212568332 * GRP_MntGoldProds3 + -0.10028215217028 * GRP_MntGoldProds4 + 
-0.07377682497053 * GRP_MntMeatProducts2 + -0.09960214357487 * GRP_MntMeatProducts3 + 
-0.25438120582859 * GRP_MntMeatProducts4 + 0.42639299324809 * GRP_MntWines2 + 0.31089292559786 
* GRP_MntWines3 + -0.26826041457934 * GRP_MntWines4 + -0.53742609478771 * 
GRP_NumCatalogPurchases3 + -0.03023603128161 * GRP_NumCatalogPurchases4 + -0.37743946252805 * 
GRP_NumDistPurchases2 + -0.01872647257623 * GRP_NumDistPurchases3 + -0.31993024737958 * 
GRP_NumDistPurchases4 + -0.11078713164327 * GRP_NumWebPurchases2 + 0.24754701690398 * 
GRP_NumWebPurchases3 + 0.01530465573539 * GRP_NumWebPurchases4 + -0.17630256491744 * 
GRP_RFMstat2 + -0.47929093118323 * GRP_RFMstat3 + 0.26729201021061 * GRP_RFMstat4 + 
-0.20197995708067 * GRP_RMntFrq2 + -0.07138949090838 * GRP_RMntFrq3 + -0.08653988697814 * 
GRP_RMntFrq4 + 1.10790516734526 * GRP_Recency2 + 0.22440369463671 * GRP_Recency3 + 
-0.44624012521308 * GRP_Recency4 ;
826974    +   H12  = H12  +    -0.39171353947494 * GRP_AcceptedCmp52
826975    +          +     0.47539355981113 * GRP_Frq2  +     0.13865083322043 * GRP_Frq3
826976    +          +     0.07826446095659 * GRP_Frq4  +     0.08299165408218 *
826977    +        GRP_Income2  +     0.19385348399904 * GRP_Income3
826978    +          +     -0.4686130167393 * GRP_Income4  +     0.07036992149948 *
826979    +        GRP_Mnt2  +     0.03891677493503 * GRP_Mnt3  +     0.07820077346387 *
826980    +        GRP_Mnt4  +     0.36400126236983 * GRP_MntFishProducts2
826981    +          +    -0.12626287803422 * GRP_MntFishProducts3
826982    +          +    -0.42885022606866 * GRP_MntFishProducts4
826983    +          +    -0.08312331608509 * GRP_MntGoldProds2
826984    +          +    -0.20061238652989 * GRP_MntGoldProds3
826985    +          +      0.2540651659901 * GRP_MntGoldProds4
826986    +          +    -0.05377938516186 * GRP_MntMeatProducts2
826987    +          +    -0.20960578757846 * GRP_MntMeatProducts3
826988    +          +     0.40616704937625 * GRP_MntMeatProducts4
826989    +          +     0.10444770584156 * GRP_MntWines2  +     0.28632714955895 *
826990    +        GRP_MntWines3  +     -0.0752487603973 * GRP_MntWines4
826991    +          +    -0.34375303246386 * GRP_NumCatalogPurchases3
826992    +          +     0.09580710843179 * GRP_NumCatalogPurchases4
826993    +          +    -0.07273864038222 * GRP_NumDistPurchases2
826994    +          +     0.10966715611059 * GRP_NumDistPurchases3
826995    +          +      -0.043035493739 * GRP_NumDistPurchases4
826996    +          +    -0.11780256604927 * GRP_NumWebPurchases2
826997    +          +    -0.18165047164828 * GRP_NumWebPurchases3
826998    +          +     0.26936545488609 * GRP_NumWebPurchases4
826999    +          +    -0.06874165804548 * GRP_RFMstat2  +     0.09298117986488 *
827000    +        GRP_RFMstat3  +    -0.24177720125931 * GRP_RFMstat4
827001    +          +    -0.06280623207978 * GRP_RMntFrq2  +     0.01871815739589 *
827002    +        GRP_RMntFrq3  +    -0.14308267957716 * GRP_RMntFrq4
827003    +          +     0.34467425877566 * GRP_Recency2  +     0.05820913643645 *
827004    +        GRP_Recency3  +     -0.0454148085012 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.39171353947494 * GRP_AcceptedCmp52 + 0.47539355981113 * 
GRP_Frq2 + 0.13865083322043 * GRP_Frq3 + 0.07826446095659 * GRP_Frq4 + 0.08299165408218 * 
GRP_Income2 + 0.19385348399904 * GRP_Income3 + -0.4686130167393 * GRP_Income4 + 
0.07036992149948 * GRP_Mnt2 + 0.03891677493503 * GRP_Mnt3 + 0.07820077346387 * GRP_Mnt4 + 
0.36400126236983 * GRP_MntFishProducts2 + -0.12626287803422 * GRP_MntFishProducts3 + 
-0.42885022606866 * GRP_MntFishProducts4 + -0.08312331608509 * GRP_MntGoldProds2 + 
-0.20061238652989 * GRP_MntGoldProds3 + 0.2540651659901 * GRP_MntGoldProds4 + 
-0.05377938516186 * GRP_MntMeatProducts2 + -0.20960578757846 * GRP_MntMeatProducts3 + 
0.40616704937625 * GRP_MntMeatProducts4 + 0.10444770584156 * GRP_MntWines2 + 0.28632714955895 
* GRP_MntWines3 + -0.0752487603973 * GRP_MntWines4 + -0.34375303246386 * 
GRP_NumCatalogPurchases3 + 0.09580710843179 * GRP_NumCatalogPurchases4 + -0.07273864038222 * 
GRP_NumDistPurchases2 + 0.10966715611059 * GRP_NumDistPurchases3 + -0.043035493739 * 
GRP_NumDistPurchases4 + -0.11780256604927 * GRP_NumWebPurchases2 + -0.18165047164828 * 
GRP_NumWebPurchases3 + 0.26936545488609 * GRP_NumWebPurchases4 + -0.06874165804548 * 
GRP_RFMstat2 + 0.09298117986488 * GRP_RFMstat3 + -0.24177720125931 * GRP_RFMstat4 + 
-0.06280623207978 * GRP_RMntFrq2 + 0.01871815739589 * GRP_RMntFrq3 + -0.14308267957716 * 
GRP_RMntFrq4 + 0.34467425877566 * GRP_Recency2 + 0.05820913643645 * GRP_Recency3 + 
-0.0454148085012 * GRP_Recency4 ;
827005    +   H13  = H13  +    -0.08768819217047 * GRP_AcceptedCmp52
827006    +          +     0.44895652806962 * GRP_Frq2  +      0.3800586670059 * GRP_Frq3
827007    +          +    -0.07849333722318 * GRP_Frq4  +     0.61398939980043 *
827008    +        GRP_Income2  +     0.47732933105902 * GRP_Income3
827009    +          +    -0.46767598050409 * GRP_Income4  +     0.00119742402812 *
827010    +        GRP_Mnt2  +     0.28434487319801 * GRP_Mnt3  +    -0.16337373090226 *
827011    +        GRP_Mnt4  +     0.24731982804653 * GRP_MntFishProducts2
827012    +          +     0.07001619920815 * GRP_MntFishProducts3
827013    +          +     0.07735498521359 * GRP_MntFishProducts4
827014    +          +    -0.15884098938162 * GRP_MntGoldProds2
827015    +          +    -0.27657428867783 * GRP_MntGoldProds3
827016    +          +     -0.1812542301124 * GRP_MntGoldProds4
827017    +          +    -0.05299867036647 * GRP_MntMeatProducts2
827018    +          +     0.00010942539908 * GRP_MntMeatProducts3
827019    +          +     0.03587382246671 * GRP_MntMeatProducts4
827020    +          +      0.1756484217323 * GRP_MntWines2  +     0.00289944116976 *
827021    +        GRP_MntWines3  +    -0.03752905583429 * GRP_MntWines4
827022    +          +     0.14681010085531 * GRP_NumCatalogPurchases3
827023    +          +    -0.23177792190553 * GRP_NumCatalogPurchases4
827024    +          +      -0.481887498986 * GRP_NumDistPurchases2
827025    +          +    -0.09943718589693 * GRP_NumDistPurchases3
827026    +          +     0.21760620991618 * GRP_NumDistPurchases4
827027    +          +    -0.09523799103665 * GRP_NumWebPurchases2
827028    +          +     0.06245025753157 * GRP_NumWebPurchases3
827029    +          +     0.11312469123111 * GRP_NumWebPurchases4
827030    +          +     -0.0156924842698 * GRP_RFMstat2  +     0.04329307564553 *
827031    +        GRP_RFMstat3  +    -0.06522539538042 * GRP_RFMstat4
827032    +          +     0.03130432577469 * GRP_RMntFrq2  +     0.15385182155627 *
827033    +        GRP_RMntFrq3  +    -0.05116322369837 * GRP_RMntFrq4
827034    +          +     0.52385840277978 * GRP_Recency2  +     0.44348058106283 *
827035    +        GRP_Recency3  +    -0.30003743891847 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.08768819217047 * GRP_AcceptedCmp52 + 0.44895652806962 * 
GRP_Frq2 + 0.3800586670059 * GRP_Frq3 + -0.07849333722318 * GRP_Frq4 + 0.61398939980043 * 
GRP_Income2 + 0.47732933105902 * GRP_Income3 + -0.46767598050409 * GRP_Income4 + 
0.00119742402812 * GRP_Mnt2 + 0.28434487319801 * GRP_Mnt3 + -0.16337373090226 * GRP_Mnt4 + 
0.24731982804653 * GRP_MntFishProducts2 + 0.07001619920815 * GRP_MntFishProducts3 + 
0.07735498521359 * GRP_MntFishProducts4 + -0.15884098938162 * GRP_MntGoldProds2 + 
-0.27657428867783 * GRP_MntGoldProds3 + -0.1812542301124 * GRP_MntGoldProds4 + 
-0.05299867036647 * GRP_MntMeatProducts2 + 0.00010942539908 * GRP_MntMeatProducts3 + 
0.03587382246671 * GRP_MntMeatProducts4 + 0.1756484217323 * GRP_MntWines2 + 0.00289944116976 * 
GRP_MntWines3 + -0.03752905583429 * GRP_MntWines4 + 0.14681010085531 * 
GRP_NumCatalogPurchases3 + -0.23177792190553 * GRP_NumCatalogPurchases4 + -0.481887498986 * 
GRP_NumDistPurchases2 + -0.09943718589693 * GRP_NumDistPurchases3 + 0.21760620991618 * 
GRP_NumDistPurchases4 + -0.09523799103665 * GRP_NumWebPurchases2 + 0.06245025753157 * 
GRP_NumWebPurchases3 + 0.11312469123111 * GRP_NumWebPurchases4 + -0.0156924842698 * 
GRP_RFMstat2 + 0.04329307564553 * GRP_RFMstat3 + -0.06522539538042 * GRP_RFMstat4 + 
0.03130432577469 * GRP_RMntFrq2 + 0.15385182155627 * GRP_RMntFrq3 + -0.05116322369837 * 
GRP_RMntFrq4 + 0.52385840277978 * GRP_Recency2 + 0.44348058106283 * GRP_Recency3 + 
-0.30003743891847 * GRP_Recency4 ;
827036    +   H14  = H14  +    -0.30891588421078 * GRP_AcceptedCmp52
827037    +          +     0.10101143238536 * GRP_Frq2  +    -0.03148220138998 * GRP_Frq3
827038    +          +     0.09807803608029 * GRP_Frq4  +     0.11294471318052 *
827039    +        GRP_Income2  +      0.0433560034099 * GRP_Income3
827040    +          +    -0.35503487261838 * GRP_Income4  +     0.15199410100967 *
827041    +        GRP_Mnt2  +    -0.15675008677561 * GRP_Mnt3  +    -0.06110606567063 *
827042    +        GRP_Mnt4  +     0.10272197664106 * GRP_MntFishProducts2
827043    +          +     0.33369645018356 * GRP_MntFishProducts3
827044    +          +     0.08427214551103 * GRP_MntFishProducts4
827045    +          +    -0.36187933889617 * GRP_MntGoldProds2
827046    +          +      0.1522584097588 * GRP_MntGoldProds3
827047    +          +    -0.18069803129722 * GRP_MntGoldProds4
827048    +          +    -0.39829328143793 * GRP_MntMeatProducts2
827049    +          +     0.00511939388608 * GRP_MntMeatProducts3
827050    +          +      0.0518722466688 * GRP_MntMeatProducts4
827051    +          +     0.10413724420858 * GRP_MntWines2  +    -0.30183392073068 *
827052    +        GRP_MntWines3  +    -0.40546180997599 * GRP_MntWines4
827053    +          +    -0.73564355192687 * GRP_NumCatalogPurchases3
827054    +          +     0.04239157662699 * GRP_NumCatalogPurchases4
827055    +          +    -0.61448773428482 * GRP_NumDistPurchases2
827056    +          +    -0.10817170519054 * GRP_NumDistPurchases3
827057    +          +    -0.00883878051452 * GRP_NumDistPurchases4
827058    +          +      0.0024401108853 * GRP_NumWebPurchases2
827059    +          +     -0.1066188825276 * GRP_NumWebPurchases3
827060    +          +     -0.2845728776007 * GRP_NumWebPurchases4
827061    +          +    -0.46846387193519 * GRP_RFMstat2  +     0.01548835288752 *
827062    +        GRP_RFMstat3  +     0.29056719482503 * GRP_RFMstat4
827063    +          +     0.13283388675843 * GRP_RMntFrq2  +    -0.01179035894062 *
827064    +        GRP_RMntFrq3  +    -0.40979674551139 * GRP_RMntFrq4
827065    +          +     0.39674687653317 * GRP_Recency2  +     0.48674783005161 *
827066    +        GRP_Recency3  +     0.19384397786172 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.30891588421078 * GRP_AcceptedCmp52 + 0.10101143238536 * 
GRP_Frq2 + -0.03148220138998 * GRP_Frq3 + 0.09807803608029 * GRP_Frq4 + 0.11294471318052 * 
GRP_Income2 + 0.0433560034099 * GRP_Income3 + -0.35503487261838 * GRP_Income4 + 
0.15199410100967 * GRP_Mnt2 + -0.15675008677561 * GRP_Mnt3 + -0.06110606567063 * GRP_Mnt4 + 
0.10272197664106 * GRP_MntFishProducts2 + 0.33369645018356 * GRP_MntFishProducts3 + 
0.08427214551103 * GRP_MntFishProducts4 + -0.36187933889617 * GRP_MntGoldProds2 + 
0.1522584097588 * GRP_MntGoldProds3 + -0.18069803129722 * GRP_MntGoldProds4 + 
-0.39829328143793 * GRP_MntMeatProducts2 + 0.00511939388608 * GRP_MntMeatProducts3 + 
0.0518722466688 * GRP_MntMeatProducts4 + 0.10413724420858 * GRP_MntWines2 + -0.30183392073068 
* GRP_MntWines3 + -0.40546180997599 * GRP_MntWines4 + -0.73564355192687 * 
GRP_NumCatalogPurchases3 + 0.04239157662699 * GRP_NumCatalogPurchases4 + -0.61448773428482 * 
GRP_NumDistPurchases2 + -0.10817170519054 * GRP_NumDistPurchases3 + -0.00883878051452 * 
GRP_NumDistPurchases4 + 0.0024401108853 * GRP_NumWebPurchases2 + -0.1066188825276 * 
GRP_NumWebPurchases3 + -0.2845728776007 * GRP_NumWebPurchases4 + -0.46846387193519 * 
GRP_RFMstat2 + 0.01548835288752 * GRP_RFMstat3 + 0.29056719482503 * GRP_RFMstat4 + 
0.13283388675843 * GRP_RMntFrq2 + -0.01179035894062 * GRP_RMntFrq3 + -0.40979674551139 * 
GRP_RMntFrq4 + 0.39674687653317 * GRP_Recency2 + 0.48674783005161 * GRP_Recency3 + 
0.19384397786172 * GRP_Recency4 ;
827067    +   H11  =    -1.18381596942405 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -1.18381596942405 + H11 ;
827068    +   H12  =     0.86336963287203 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.86336963287203 + H12 ;
827069    +   H13  =     -0.9724199391604 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.9724199391604 + H13 ;
827070    +   H14  =     1.35533016839911 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 1.35533016839911 + H14 ;
827071    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
827072    +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
827073    +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
827074    +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
827075    +END;
MPRINT(EM_DIAGRAM):   END;
827076    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
827077    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
827078    +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
827079    +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
827080    +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
827081    +END;
MPRINT(EM_DIAGRAM):   END;
827082    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
827083    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
827084    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
827085    +
827086    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
827087    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
827088    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
827089    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
827090    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
827091    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
827092    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
827093    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
827094    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
827095    +end;
MPRINT(EM_DIAGRAM):   end;
827096    +else do;
MPRINT(EM_DIAGRAM):   else do;
827097    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
827098    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
827099    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
827100    +   end;
MPRINT(EM_DIAGRAM):   end;
827101    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
827102    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
827103    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
827104    +   end;
MPRINT(EM_DIAGRAM):   end;
827105    +   else do;
MPRINT(EM_DIAGRAM):   else do;
827106    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
827107    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
827108    +   end;
MPRINT(EM_DIAGRAM):   end;
827109    +end;
MPRINT(EM_DIAGRAM):   end;
827110    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
827111    +   P_DepVar1  =     2.12648206014408 * H11  +      1.4206902210932 * H12
827112    +          +     1.21164854880393 * H13  +      1.5803543453738 * H14 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 2.12648206014408 * H11 + 1.4206902210932 * H12 + 
1.21164854880393 * H13 + 1.5803543453738 * H14 ;
827113    +   P_DepVar1  =    -1.66515506353131 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.66515506353131 + P_DepVar1 ;
827114    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
827115    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
827116    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
827117    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
827118    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
827119    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
827120    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
827121    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
827122    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
827123    +END;
MPRINT(EM_DIAGRAM):   END;
827124    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
827125    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
827126    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
827127    +END;
MPRINT(EM_DIAGRAM):   END;
827128    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
827129    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
827130    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
827131    +END;
MPRINT(EM_DIAGRAM):   END;
827132    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
827133    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
827134    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
827135    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
827136    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
827137    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
827138    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
827139    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
827140    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
827141    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
827142    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
827143    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
827144    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
827145    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
827146    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
827147    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
827148    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
827149    +END;
MPRINT(EM_DIAGRAM):   END;
827150    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
827151    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
827152    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
827153    +drop
827154    +H11
827155    +H12
827156    +H13
827157    +H14
827158    +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 ;
827159    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
827160     run;

NOTE: DATA STEP view saved on file EMWS8.NEURAL21_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.BINNING_TRAIN.VIEW used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.06 seconds
      

MPRINT(EM_DIAGRAM):   quit;
827161     quit;
827162     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
827163     filename emflow
827163   ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural21\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural21\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural21: Scoring VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
827164     *------------------------------------------------------------*;
827165     * Neural21: Scoring VALIDATE data;
827166     *------------------------------------------------------------*;
827167     data EMWS8.Neural21_VALIDATE
827168     / view=EMWS8.Neural21_VALIDATE
827169     ;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural21_VALIDATE / view=EMWS8.Neural21_VALIDATE ;
827170     set EMWS8.BINNING_VALIDATE
827171     ;
MPRINT(EM_DIAGRAM):   set EMWS8.BINNING_VALIDATE ;
827172     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Neural21\EMFLOWSCORE.sas.
827173    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
827174    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
827175    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
827176    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
827177    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
827178    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
827179    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
827180    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
827181    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
827182    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
827183    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
827184    +LENGTH _WARN_ $4
827185    +      F_DepVar  $ 12
827186    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
827187    +      label S_Year_Birth = 'Standard: Year_Birth' ;
MPRINT(EM_DIAGRAM):   label S_Year_Birth = 'Standard: Year_Birth' ;
827188    +
827189    +      label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
MPRINT(EM_DIAGRAM):   label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
827190    +
827191    +      label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
827192    +
827193    +      label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
827194    +
827195    +      label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
827196    +
827197    +      label GRP_Income2 = 'Dummy: GRP_Income=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Income2 = 'Dummy: GRP_Income=2' ;
827198    +
827199    +      label GRP_Income3 = 'Dummy: GRP_Income=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Income3 = 'Dummy: GRP_Income=3' ;
827200    +
827201    +      label GRP_Income4 = 'Dummy: GRP_Income=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Income4 = 'Dummy: GRP_Income=4' ;
827202    +
827203    +      label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
827204    +
827205    +      label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
827206    +
827207    +      label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
827208    +
827209    +      label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
827210    +
827211    +      label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
827212    +
827213    +      label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
827214    +
827215    +      label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
827216    +
827217    +      label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
827218    +
827219    +      label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
827220    +
827221    +      label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
827222    +
827223    +      label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
827224    +
827225    +      label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
827226    +
827227    +      label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
827228    +
827229    +      label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
827230    +
827231    +      label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
827232    +
827233    +      label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
827234    +
827235    +      label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
827236    +
827237    +      label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
827238    +
827239    +      label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
827240    +
827241    +      label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
827242    +
827243    +      label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
827244    +
827245    +      label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
827246    +
827247    +      label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
827248    +
827249    +      label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
827250    +
827251    +      label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
827252    +
827253    +      label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
827254    +
827255    +      label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
827256    +
827257    +      label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
827258    +
827259    +      label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
827260    +
827261    +      label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
827262    +
827263    +      label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
827264    +
827265    +      label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
827266    +
827267    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
827268    +
827269    +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
827270    +
827271    +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
827272    +
827273    +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
827274    +
827275    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
827276    +
827277    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
827278    +
827279    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
827280    +
827281    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
827282    +
827283    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
827284    +
827285    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
827286    +
827287    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
827288    +
827289    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
827290    +
827291    +*** Generate dummy variables for GRP_AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_AcceptedCmp5 ;
827292    +drop GRP_AcceptedCmp52 ;
MPRINT(EM_DIAGRAM):   drop GRP_AcceptedCmp52 ;
827293    +if missing( GRP_AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_AcceptedCmp5 ) then do;
827294    +   GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
827295    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
827296    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
827297    +end;
MPRINT(EM_DIAGRAM):   end;
827298    +else do;
MPRINT(EM_DIAGRAM):   else do;
827299    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
827300    +   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
827301    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
827302    +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
827303    +      GRP_AcceptedCmp52 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = 1;
827304    +   end;
MPRINT(EM_DIAGRAM):   end;
827305    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
827306    +      GRP_AcceptedCmp52 = -1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = -1;
827307    +   end;
MPRINT(EM_DIAGRAM):   end;
827308    +   else do;
MPRINT(EM_DIAGRAM):   else do;
827309    +      GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
827310    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
827311    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
827312    +   end;
MPRINT(EM_DIAGRAM):   end;
827313    +end;
MPRINT(EM_DIAGRAM):   end;
827314    +
827315    +*** Generate dummy variables for GRP_Frq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Frq ;
827316    +drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
827317    +if missing( GRP_Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Frq ) then do;
827318    +   GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
827319    +   GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
827320    +   GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
827321    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
827322    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
827323    +end;
MPRINT(EM_DIAGRAM):   end;
827324    +else do;
MPRINT(EM_DIAGRAM):   else do;
827325    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
827326    +   _dm12 = put( GRP_Frq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Frq , BEST12. );
827327    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
827328    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
827329    +      GRP_Frq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = -1;
827330    +      GRP_Frq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = -1;
827331    +      GRP_Frq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = -1;
827332    +   end;
MPRINT(EM_DIAGRAM):   end;
827333    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
827334    +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
827335    +      GRP_Frq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 1;
827336    +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
827337    +   end;
MPRINT(EM_DIAGRAM):   end;
827338    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
827339    +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
827340    +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
827341    +      GRP_Frq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 1;
827342    +   end;
MPRINT(EM_DIAGRAM):   end;
827343    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
827344    +      GRP_Frq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 1;
827345    +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
827346    +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
827347    +   end;
MPRINT(EM_DIAGRAM):   end;
827348    +   else do;
MPRINT(EM_DIAGRAM):   else do;
827349    +      GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
827350    +      GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
827351    +      GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
827352    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
827353    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
827354    +   end;
MPRINT(EM_DIAGRAM):   end;
827355    +end;
MPRINT(EM_DIAGRAM):   end;
827356    +
827357    +*** Generate dummy variables for GRP_Income ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Income ;
827358    +drop GRP_Income2 GRP_Income3 GRP_Income4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Income2 GRP_Income3 GRP_Income4 ;
827359    +if missing( GRP_Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Income ) then do;
827360    +   GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
827361    +   GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
827362    +   GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
827363    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
827364    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
827365    +end;
MPRINT(EM_DIAGRAM):   end;
827366    +else do;
MPRINT(EM_DIAGRAM):   else do;
827367    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
827368    +   _dm12 = put( GRP_Income , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Income , BEST12. );
827369    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
827370    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
827371    +      GRP_Income2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = -1;
827372    +      GRP_Income3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = -1;
827373    +      GRP_Income4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = -1;
827374    +   end;
MPRINT(EM_DIAGRAM):   end;
827375    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
827376    +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
827377    +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
827378    +      GRP_Income4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 1;
827379    +   end;
MPRINT(EM_DIAGRAM):   end;
827380    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
827381    +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
827382    +      GRP_Income3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 1;
827383    +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
827384    +   end;
MPRINT(EM_DIAGRAM):   end;
827385    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
827386    +      GRP_Income2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 1;
827387    +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
827388    +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
827389    +   end;
MPRINT(EM_DIAGRAM):   end;
827390    +   else do;
MPRINT(EM_DIAGRAM):   else do;
827391    +      GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
827392    +      GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
827393    +      GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
827394    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
827395    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
827396    +   end;
MPRINT(EM_DIAGRAM):   end;
827397    +end;
MPRINT(EM_DIAGRAM):   end;
827398    +
827399    +*** Generate dummy variables for GRP_Mnt ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Mnt ;
827400    +drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
827401    +if missing( GRP_Mnt ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Mnt ) then do;
827402    +   GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
827403    +   GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
827404    +   GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
827405    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
827406    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
827407    +end;
MPRINT(EM_DIAGRAM):   end;
827408    +else do;
MPRINT(EM_DIAGRAM):   else do;
827409    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
827410    +   _dm12 = put( GRP_Mnt , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Mnt , BEST12. );
827411    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
827412    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
827413    +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
827414    +      GRP_Mnt3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 1;
827415    +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
827416    +   end;
MPRINT(EM_DIAGRAM):   end;
827417    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
827418    +      GRP_Mnt2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = -1;
827419    +      GRP_Mnt3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = -1;
827420    +      GRP_Mnt4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = -1;
827421    +   end;
MPRINT(EM_DIAGRAM):   end;
827422    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
827423    +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
827424    +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
827425    +      GRP_Mnt4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 1;
827426    +   end;
MPRINT(EM_DIAGRAM):   end;
827427    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
827428    +      GRP_Mnt2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 1;
827429    +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
827430    +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
827431    +   end;
MPRINT(EM_DIAGRAM):   end;
827432    +   else do;
MPRINT(EM_DIAGRAM):   else do;
827433    +      GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
827434    +      GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
827435    +      GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
827436    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
827437    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
827438    +   end;
MPRINT(EM_DIAGRAM):   end;
827439    +end;
MPRINT(EM_DIAGRAM):   end;
827440    +
827441    +*** Generate dummy variables for GRP_MntFishProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntFishProducts ;
827442    +drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
827443    +if missing( GRP_MntFishProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntFishProducts ) then do;
827444    +   GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
827445    +   GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
827446    +   GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
827447    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
827448    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
827449    +end;
MPRINT(EM_DIAGRAM):   end;
827450    +else do;
MPRINT(EM_DIAGRAM):   else do;
827451    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
827452    +   _dm12 = put( GRP_MntFishProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntFishProducts , BEST12. );
827453    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
827454    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
827455    +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
827456    +      GRP_MntFishProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 1;
827457    +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
827458    +   end;
MPRINT(EM_DIAGRAM):   end;
827459    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
827460    +      GRP_MntFishProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = -1;
827461    +      GRP_MntFishProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = -1;
827462    +      GRP_MntFishProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = -1;
827463    +   end;
MPRINT(EM_DIAGRAM):   end;
827464    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
827465    +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
827466    +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
827467    +      GRP_MntFishProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 1;
827468    +   end;
MPRINT(EM_DIAGRAM):   end;
827469    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
827470    +      GRP_MntFishProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 1;
827471    +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
827472    +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
827473    +   end;
MPRINT(EM_DIAGRAM):   end;
827474    +   else do;
MPRINT(EM_DIAGRAM):   else do;
827475    +      GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
827476    +      GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
827477    +      GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
827478    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
827479    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
827480    +   end;
MPRINT(EM_DIAGRAM):   end;
827481    +end;
MPRINT(EM_DIAGRAM):   end;
827482    +
827483    +*** Generate dummy variables for GRP_MntGoldProds ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntGoldProds ;
827484    +drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
827485    +if missing( GRP_MntGoldProds ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntGoldProds ) then do;
827486    +   GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
827487    +   GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
827488    +   GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
827489    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
827490    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
827491    +end;
MPRINT(EM_DIAGRAM):   end;
827492    +else do;
MPRINT(EM_DIAGRAM):   else do;
827493    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
827494    +   _dm12 = put( GRP_MntGoldProds , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntGoldProds , BEST12. );
827495    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
827496    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
827497    +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
827498    +      GRP_MntGoldProds3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 1;
827499    +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
827500    +   end;
MPRINT(EM_DIAGRAM):   end;
827501    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
827502    +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
827503    +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
827504    +      GRP_MntGoldProds4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 1;
827505    +   end;
MPRINT(EM_DIAGRAM):   end;
827506    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
827507    +      GRP_MntGoldProds2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = -1;
827508    +      GRP_MntGoldProds3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = -1;
827509    +      GRP_MntGoldProds4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = -1;
827510    +   end;
MPRINT(EM_DIAGRAM):   end;
827511    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
827512    +      GRP_MntGoldProds2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 1;
827513    +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
827514    +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
827515    +   end;
MPRINT(EM_DIAGRAM):   end;
827516    +   else do;
MPRINT(EM_DIAGRAM):   else do;
827517    +      GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
827518    +      GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
827519    +      GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
827520    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
827521    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
827522    +   end;
MPRINT(EM_DIAGRAM):   end;
827523    +end;
MPRINT(EM_DIAGRAM):   end;
827524    +
827525    +*** Generate dummy variables for GRP_MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntMeatProducts ;
827526    +drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
827527    +if missing( GRP_MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntMeatProducts ) then do;
827528    +   GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
827529    +   GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
827530    +   GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
827531    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
827532    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
827533    +end;
MPRINT(EM_DIAGRAM):   end;
827534    +else do;
MPRINT(EM_DIAGRAM):   else do;
827535    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
827536    +   _dm12 = put( GRP_MntMeatProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntMeatProducts , BEST12. );
827537    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
827538    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
827539    +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
827540    +      GRP_MntMeatProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 1;
827541    +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
827542    +   end;
MPRINT(EM_DIAGRAM):   end;
827543    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
827544    +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
827545    +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
827546    +      GRP_MntMeatProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 1;
827547    +   end;
MPRINT(EM_DIAGRAM):   end;
827548    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
827549    +      GRP_MntMeatProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = -1;
827550    +      GRP_MntMeatProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = -1;
827551    +      GRP_MntMeatProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = -1;
827552    +   end;
MPRINT(EM_DIAGRAM):   end;
827553    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
827554    +      GRP_MntMeatProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 1;
827555    +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
827556    +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
827557    +   end;
MPRINT(EM_DIAGRAM):   end;
827558    +   else do;
MPRINT(EM_DIAGRAM):   else do;
827559    +      GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
827560    +      GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
827561    +      GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
827562    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
827563    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
827564    +   end;
MPRINT(EM_DIAGRAM):   end;
827565    +end;
MPRINT(EM_DIAGRAM):   end;
827566    +
827567    +*** Generate dummy variables for GRP_MntWines ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntWines ;
827568    +drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
827569    +if missing( GRP_MntWines ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntWines ) then do;
827570    +   GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
827571    +   GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
827572    +   GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
827573    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
827574    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
827575    +end;
MPRINT(EM_DIAGRAM):   end;
827576    +else do;
MPRINT(EM_DIAGRAM):   else do;
827577    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
827578    +   _dm12 = put( GRP_MntWines , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntWines , BEST12. );
827579    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
827580    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
827581    +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
827582    +      GRP_MntWines3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 1;
827583    +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
827584    +   end;
MPRINT(EM_DIAGRAM):   end;
827585    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
827586    +      GRP_MntWines2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = -1;
827587    +      GRP_MntWines3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = -1;
827588    +      GRP_MntWines4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = -1;
827589    +   end;
MPRINT(EM_DIAGRAM):   end;
827590    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
827591    +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
827592    +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
827593    +      GRP_MntWines4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 1;
827594    +   end;
MPRINT(EM_DIAGRAM):   end;
827595    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
827596    +      GRP_MntWines2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 1;
827597    +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
827598    +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
827599    +   end;
MPRINT(EM_DIAGRAM):   end;
827600    +   else do;
MPRINT(EM_DIAGRAM):   else do;
827601    +      GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
827602    +      GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
827603    +      GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
827604    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
827605    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
827606    +   end;
MPRINT(EM_DIAGRAM):   end;
827607    +end;
MPRINT(EM_DIAGRAM):   end;
827608    +
827609    +*** Generate dummy variables for GRP_NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumCatalogPurchases ;
827610    +drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
827611    +if missing( GRP_NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumCatalogPurchases ) then do;
827612    +   GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
827613    +   GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
827614    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
827615    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
827616    +end;
MPRINT(EM_DIAGRAM):   end;
827617    +else do;
MPRINT(EM_DIAGRAM):   else do;
827618    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
827619    +   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
827620    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
827621    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
827622    +      GRP_NumCatalogPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 1;
827623    +      GRP_NumCatalogPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 0;
827624    +   end;
MPRINT(EM_DIAGRAM):   end;
827625    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
827626    +      GRP_NumCatalogPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = -1;
827627    +      GRP_NumCatalogPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = -1;
827628    +   end;
MPRINT(EM_DIAGRAM):   end;
827629    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
827630    +      GRP_NumCatalogPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 0;
827631    +      GRP_NumCatalogPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 1;
827632    +   end;
MPRINT(EM_DIAGRAM):   end;
827633    +   else do;
MPRINT(EM_DIAGRAM):   else do;
827634    +      GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
827635    +      GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
827636    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
827637    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
827638    +   end;
MPRINT(EM_DIAGRAM):   end;
827639    +end;
MPRINT(EM_DIAGRAM):   end;
827640    +
827641    +*** Generate dummy variables for GRP_NumDistPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumDistPurchases ;
827642    +drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
827643    +if missing( GRP_NumDistPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumDistPurchases ) then do;
827644    +   GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
827645    +   GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
827646    +   GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
827647    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
827648    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
827649    +end;
MPRINT(EM_DIAGRAM):   end;
827650    +else do;
MPRINT(EM_DIAGRAM):   else do;
827651    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
827652    +   _dm12 = put( GRP_NumDistPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumDistPurchases , BEST12. );
827653    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
827654    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
827655    +      GRP_NumDistPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = -1;
827656    +      GRP_NumDistPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = -1;
827657    +      GRP_NumDistPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = -1;
827658    +   end;
MPRINT(EM_DIAGRAM):   end;
827659    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
827660    +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
827661    +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
827662    +      GRP_NumDistPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 1;
827663    +   end;
MPRINT(EM_DIAGRAM):   end;
827664    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
827665    +      GRP_NumDistPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 1;
827666    +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
827667    +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
827668    +   end;
MPRINT(EM_DIAGRAM):   end;
827669    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
827670    +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
827671    +      GRP_NumDistPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 1;
827672    +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
827673    +   end;
MPRINT(EM_DIAGRAM):   end;
827674    +   else do;
MPRINT(EM_DIAGRAM):   else do;
827675    +      GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
827676    +      GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
827677    +      GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
827678    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
827679    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
827680    +   end;
MPRINT(EM_DIAGRAM):   end;
827681    +end;
MPRINT(EM_DIAGRAM):   end;
827682    +
827683    +*** Generate dummy variables for GRP_NumWebPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumWebPurchases ;
827684    +drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
827685    +if missing( GRP_NumWebPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumWebPurchases ) then do;
827686    +   GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
827687    +   GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
827688    +   GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
827689    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
827690    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
827691    +end;
MPRINT(EM_DIAGRAM):   end;
827692    +else do;
MPRINT(EM_DIAGRAM):   else do;
827693    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
827694    +   _dm12 = put( GRP_NumWebPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumWebPurchases , BEST12. );
827695    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
827696    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
827697    +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
827698    +      GRP_NumWebPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 1;
827699    +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
827700    +   end;
MPRINT(EM_DIAGRAM):   end;
827701    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
827702    +      GRP_NumWebPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = -1;
827703    +      GRP_NumWebPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = -1;
827704    +      GRP_NumWebPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = -1;
827705    +   end;
MPRINT(EM_DIAGRAM):   end;
827706    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
827707    +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
827708    +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
827709    +      GRP_NumWebPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 1;
827710    +   end;
MPRINT(EM_DIAGRAM):   end;
827711    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
827712    +      GRP_NumWebPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 1;
827713    +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
827714    +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
827715    +   end;
MPRINT(EM_DIAGRAM):   end;
827716    +   else do;
MPRINT(EM_DIAGRAM):   else do;
827717    +      GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
827718    +      GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
827719    +      GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
827720    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
827721    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
827722    +   end;
MPRINT(EM_DIAGRAM):   end;
827723    +end;
MPRINT(EM_DIAGRAM):   end;
827724    +
827725    +*** Generate dummy variables for GRP_RFMstat ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RFMstat ;
827726    +drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
827727    +if missing( GRP_RFMstat ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RFMstat ) then do;
827728    +   GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
827729    +   GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
827730    +   GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
827731    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
827732    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
827733    +end;
MPRINT(EM_DIAGRAM):   end;
827734    +else do;
MPRINT(EM_DIAGRAM):   else do;
827735    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
827736    +   _dm12 = put( GRP_RFMstat , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RFMstat , BEST12. );
827737    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
827738    +   if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
827739    +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
827740    +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
827741    +      GRP_RFMstat4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 1;
827742    +   end;
MPRINT(EM_DIAGRAM):   end;
827743    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
827744    +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
827745    +      GRP_RFMstat3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 1;
827746    +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
827747    +   end;
MPRINT(EM_DIAGRAM):   end;
827748    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
827749    +      GRP_RFMstat2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = -1;
827750    +      GRP_RFMstat3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = -1;
827751    +      GRP_RFMstat4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = -1;
827752    +   end;
MPRINT(EM_DIAGRAM):   end;
827753    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
827754    +      GRP_RFMstat2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 1;
827755    +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
827756    +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
827757    +   end;
MPRINT(EM_DIAGRAM):   end;
827758    +   else do;
MPRINT(EM_DIAGRAM):   else do;
827759    +      GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
827760    +      GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
827761    +      GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
827762    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
827763    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
827764    +   end;
MPRINT(EM_DIAGRAM):   end;
827765    +end;
MPRINT(EM_DIAGRAM):   end;
827766    +
827767    +*** Generate dummy variables for GRP_RMntFrq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RMntFrq ;
827768    +drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
827769    +if missing( GRP_RMntFrq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RMntFrq ) then do;
827770    +   GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
827771    +   GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
827772    +   GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
827773    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
827774    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
827775    +end;
MPRINT(EM_DIAGRAM):   end;
827776    +else do;
MPRINT(EM_DIAGRAM):   else do;
827777    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
827778    +   _dm12 = put( GRP_RMntFrq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RMntFrq , BEST12. );
827779    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
827780    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
827781    +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
827782    +      GRP_RMntFrq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 1;
827783    +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
827784    +   end;
MPRINT(EM_DIAGRAM):   end;
827785    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
827786    +      GRP_RMntFrq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = -1;
827787    +      GRP_RMntFrq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = -1;
827788    +      GRP_RMntFrq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = -1;
827789    +   end;
MPRINT(EM_DIAGRAM):   end;
827790    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
827791    +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
827792    +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
827793    +      GRP_RMntFrq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 1;
827794    +   end;
MPRINT(EM_DIAGRAM):   end;
827795    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
827796    +      GRP_RMntFrq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 1;
827797    +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
827798    +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
827799    +   end;
MPRINT(EM_DIAGRAM):   end;
827800    +   else do;
MPRINT(EM_DIAGRAM):   else do;
827801    +      GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
827802    +      GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
827803    +      GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
827804    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
827805    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
827806    +   end;
MPRINT(EM_DIAGRAM):   end;
827807    +end;
MPRINT(EM_DIAGRAM):   end;
827808    +
827809    +*** Generate dummy variables for GRP_Recency ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Recency ;
827810    +drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
827811    +if missing( GRP_Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Recency ) then do;
827812    +   GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
827813    +   GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
827814    +   GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
827815    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
827816    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
827817    +end;
MPRINT(EM_DIAGRAM):   end;
827818    +else do;
MPRINT(EM_DIAGRAM):   else do;
827819    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
827820    +   _dm12 = put( GRP_Recency , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Recency , BEST12. );
827821    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
827822    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
827823    +      GRP_Recency2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = -1;
827824    +      GRP_Recency3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = -1;
827825    +      GRP_Recency4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = -1;
827826    +   end;
MPRINT(EM_DIAGRAM):   end;
827827    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
827828    +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
827829    +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
827830    +      GRP_Recency4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 1;
827831    +   end;
MPRINT(EM_DIAGRAM):   end;
827832    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
827833    +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
827834    +      GRP_Recency3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 1;
827835    +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
827836    +   end;
MPRINT(EM_DIAGRAM):   end;
827837    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
827838    +      GRP_Recency2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 1;
827839    +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
827840    +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
827841    +   end;
MPRINT(EM_DIAGRAM):   end;
827842    +   else do;
MPRINT(EM_DIAGRAM):   else do;
827843    +      GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
827844    +      GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
827845    +      GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
827846    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
827847    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
827848    +   end;
MPRINT(EM_DIAGRAM):   end;
827849    +end;
MPRINT(EM_DIAGRAM):   end;
827850    +
827851    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
827852    +*** Checking missing input Interval
827853    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
827854    +
827855    +IF NMISS(
827856    +   Year_Birth   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Year_Birth ) THEN DO;
827857    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
827858    +
827859    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
827860    +END;
MPRINT(EM_DIAGRAM):   END;
827861    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
827862    +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
827863    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
827864    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
827865    +   S_Year_Birth  =    -163.205330145852 +     0.08289609202864 * Year_Birth ;
MPRINT(EM_DIAGRAM):   S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
827866    +END;
MPRINT(EM_DIAGRAM):   END;
827867    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
827868    +   IF MISSING( Year_Birth ) THEN S_Year_Birth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Year_Birth ) THEN S_Year_Birth = . ;
827869    +   ELSE S_Year_Birth  =    -163.205330145852 +     0.08289609202864 *
827870    +        Year_Birth ;
MPRINT(EM_DIAGRAM):   ELSE S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
827871    +END;
MPRINT(EM_DIAGRAM):   END;
827872    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
827873    +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
827874    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
827875    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
827876    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
827877    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
827878    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
827879    +   H11  =      0.0668146440452 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H11 = 0.0668146440452 * S_Year_Birth ;
827880    +   H12  =     0.02918236951724 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H12 = 0.02918236951724 * S_Year_Birth ;
827881    +   H13  =     0.52122974180208 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H13 = 0.52122974180208 * S_Year_Birth ;
827882    +   H14  =     -0.1823800721103 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H14 = -0.1823800721103 * S_Year_Birth ;
827883    +   H11  = H11  +    -0.48347630033708 * GRP_AcceptedCmp52
827884    +          +     0.37100635990339 * GRP_Frq2  +     0.04377799127913 * GRP_Frq3
827885    +          +     -0.1974477050613 * GRP_Frq4  +     0.10700887225506 *
827886    +        GRP_Income2  +      0.3291591268929 * GRP_Income3
827887    +          +     0.00612929517663 * GRP_Income4  +    -0.23329153390557 *
827888    +        GRP_Mnt2  +    -0.08800204437411 * GRP_Mnt3  +    -0.08445529701198 *
827889    +        GRP_Mnt4  +     0.28673732624133 * GRP_MntFishProducts2
827890    +          +    -0.14978605827752 * GRP_MntFishProducts3
827891    +          +     0.22642470616542 * GRP_MntFishProducts4
827892    +          +     0.07604404821672 * GRP_MntGoldProds2
827893    +          +     0.04745212568332 * GRP_MntGoldProds3
827894    +          +    -0.10028215217028 * GRP_MntGoldProds4
827895    +          +    -0.07377682497053 * GRP_MntMeatProducts2
827896    +          +    -0.09960214357487 * GRP_MntMeatProducts3
827897    +          +    -0.25438120582859 * GRP_MntMeatProducts4
827898    +          +     0.42639299324809 * GRP_MntWines2  +     0.31089292559786 *
827899    +        GRP_MntWines3  +    -0.26826041457934 * GRP_MntWines4
827900    +          +    -0.53742609478771 * GRP_NumCatalogPurchases3
827901    +          +    -0.03023603128161 * GRP_NumCatalogPurchases4
827902    +          +    -0.37743946252805 * GRP_NumDistPurchases2
827903    +          +    -0.01872647257623 * GRP_NumDistPurchases3
827904    +          +    -0.31993024737958 * GRP_NumDistPurchases4
827905    +          +    -0.11078713164327 * GRP_NumWebPurchases2
827906    +          +     0.24754701690398 * GRP_NumWebPurchases3
827907    +          +     0.01530465573539 * GRP_NumWebPurchases4
827908    +          +    -0.17630256491744 * GRP_RFMstat2  +    -0.47929093118323 *
827909    +        GRP_RFMstat3  +     0.26729201021061 * GRP_RFMstat4
827910    +          +    -0.20197995708067 * GRP_RMntFrq2  +    -0.07138949090838 *
827911    +        GRP_RMntFrq3  +    -0.08653988697814 * GRP_RMntFrq4
827912    +          +     1.10790516734526 * GRP_Recency2  +     0.22440369463671 *
827913    +        GRP_Recency3  +    -0.44624012521308 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.48347630033708 * GRP_AcceptedCmp52 + 0.37100635990339 * 
GRP_Frq2 + 0.04377799127913 * GRP_Frq3 + -0.1974477050613 * GRP_Frq4 + 0.10700887225506 * 
GRP_Income2 + 0.3291591268929 * GRP_Income3 + 0.00612929517663 * GRP_Income4 + 
-0.23329153390557 * GRP_Mnt2 + -0.08800204437411 * GRP_Mnt3 + -0.08445529701198 * GRP_Mnt4 + 
0.28673732624133 * GRP_MntFishProducts2 + -0.14978605827752 * GRP_MntFishProducts3 + 
0.22642470616542 * GRP_MntFishProducts4 + 0.07604404821672 * GRP_MntGoldProds2 + 
0.04745212568332 * GRP_MntGoldProds3 + -0.10028215217028 * GRP_MntGoldProds4 + 
-0.07377682497053 * GRP_MntMeatProducts2 + -0.09960214357487 * GRP_MntMeatProducts3 + 
-0.25438120582859 * GRP_MntMeatProducts4 + 0.42639299324809 * GRP_MntWines2 + 0.31089292559786 
* GRP_MntWines3 + -0.26826041457934 * GRP_MntWines4 + -0.53742609478771 * 
GRP_NumCatalogPurchases3 + -0.03023603128161 * GRP_NumCatalogPurchases4 + -0.37743946252805 * 
GRP_NumDistPurchases2 + -0.01872647257623 * GRP_NumDistPurchases3 + -0.31993024737958 * 
GRP_NumDistPurchases4 + -0.11078713164327 * GRP_NumWebPurchases2 + 0.24754701690398 * 
GRP_NumWebPurchases3 + 0.01530465573539 * GRP_NumWebPurchases4 + -0.17630256491744 * 
GRP_RFMstat2 + -0.47929093118323 * GRP_RFMstat3 + 0.26729201021061 * GRP_RFMstat4 + 
-0.20197995708067 * GRP_RMntFrq2 + -0.07138949090838 * GRP_RMntFrq3 + -0.08653988697814 * 
GRP_RMntFrq4 + 1.10790516734526 * GRP_Recency2 + 0.22440369463671 * GRP_Recency3 + 
-0.44624012521308 * GRP_Recency4 ;
827914    +   H12  = H12  +    -0.39171353947494 * GRP_AcceptedCmp52
827915    +          +     0.47539355981113 * GRP_Frq2  +     0.13865083322043 * GRP_Frq3
827916    +          +     0.07826446095659 * GRP_Frq4  +     0.08299165408218 *
827917    +        GRP_Income2  +     0.19385348399904 * GRP_Income3
827918    +          +     -0.4686130167393 * GRP_Income4  +     0.07036992149948 *
827919    +        GRP_Mnt2  +     0.03891677493503 * GRP_Mnt3  +     0.07820077346387 *
827920    +        GRP_Mnt4  +     0.36400126236983 * GRP_MntFishProducts2
827921    +          +    -0.12626287803422 * GRP_MntFishProducts3
827922    +          +    -0.42885022606866 * GRP_MntFishProducts4
827923    +          +    -0.08312331608509 * GRP_MntGoldProds2
827924    +          +    -0.20061238652989 * GRP_MntGoldProds3
827925    +          +      0.2540651659901 * GRP_MntGoldProds4
827926    +          +    -0.05377938516186 * GRP_MntMeatProducts2
827927    +          +    -0.20960578757846 * GRP_MntMeatProducts3
827928    +          +     0.40616704937625 * GRP_MntMeatProducts4
827929    +          +     0.10444770584156 * GRP_MntWines2  +     0.28632714955895 *
827930    +        GRP_MntWines3  +     -0.0752487603973 * GRP_MntWines4
827931    +          +    -0.34375303246386 * GRP_NumCatalogPurchases3
827932    +          +     0.09580710843179 * GRP_NumCatalogPurchases4
827933    +          +    -0.07273864038222 * GRP_NumDistPurchases2
827934    +          +     0.10966715611059 * GRP_NumDistPurchases3
827935    +          +      -0.043035493739 * GRP_NumDistPurchases4
827936    +          +    -0.11780256604927 * GRP_NumWebPurchases2
827937    +          +    -0.18165047164828 * GRP_NumWebPurchases3
827938    +          +     0.26936545488609 * GRP_NumWebPurchases4
827939    +          +    -0.06874165804548 * GRP_RFMstat2  +     0.09298117986488 *
827940    +        GRP_RFMstat3  +    -0.24177720125931 * GRP_RFMstat4
827941    +          +    -0.06280623207978 * GRP_RMntFrq2  +     0.01871815739589 *
827942    +        GRP_RMntFrq3  +    -0.14308267957716 * GRP_RMntFrq4
827943    +          +     0.34467425877566 * GRP_Recency2  +     0.05820913643645 *
827944    +        GRP_Recency3  +     -0.0454148085012 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.39171353947494 * GRP_AcceptedCmp52 + 0.47539355981113 * 
GRP_Frq2 + 0.13865083322043 * GRP_Frq3 + 0.07826446095659 * GRP_Frq4 + 0.08299165408218 * 
GRP_Income2 + 0.19385348399904 * GRP_Income3 + -0.4686130167393 * GRP_Income4 + 
0.07036992149948 * GRP_Mnt2 + 0.03891677493503 * GRP_Mnt3 + 0.07820077346387 * GRP_Mnt4 + 
0.36400126236983 * GRP_MntFishProducts2 + -0.12626287803422 * GRP_MntFishProducts3 + 
-0.42885022606866 * GRP_MntFishProducts4 + -0.08312331608509 * GRP_MntGoldProds2 + 
-0.20061238652989 * GRP_MntGoldProds3 + 0.2540651659901 * GRP_MntGoldProds4 + 
-0.05377938516186 * GRP_MntMeatProducts2 + -0.20960578757846 * GRP_MntMeatProducts3 + 
0.40616704937625 * GRP_MntMeatProducts4 + 0.10444770584156 * GRP_MntWines2 + 0.28632714955895 
* GRP_MntWines3 + -0.0752487603973 * GRP_MntWines4 + -0.34375303246386 * 
GRP_NumCatalogPurchases3 + 0.09580710843179 * GRP_NumCatalogPurchases4 + -0.07273864038222 * 
GRP_NumDistPurchases2 + 0.10966715611059 * GRP_NumDistPurchases3 + -0.043035493739 * 
GRP_NumDistPurchases4 + -0.11780256604927 * GRP_NumWebPurchases2 + -0.18165047164828 * 
GRP_NumWebPurchases3 + 0.26936545488609 * GRP_NumWebPurchases4 + -0.06874165804548 * 
GRP_RFMstat2 + 0.09298117986488 * GRP_RFMstat3 + -0.24177720125931 * GRP_RFMstat4 + 
-0.06280623207978 * GRP_RMntFrq2 + 0.01871815739589 * GRP_RMntFrq3 + -0.14308267957716 * 
GRP_RMntFrq4 + 0.34467425877566 * GRP_Recency2 + 0.05820913643645 * GRP_Recency3 + 
-0.0454148085012 * GRP_Recency4 ;
827945    +   H13  = H13  +    -0.08768819217047 * GRP_AcceptedCmp52
827946    +          +     0.44895652806962 * GRP_Frq2  +      0.3800586670059 * GRP_Frq3
827947    +          +    -0.07849333722318 * GRP_Frq4  +     0.61398939980043 *
827948    +        GRP_Income2  +     0.47732933105902 * GRP_Income3
827949    +          +    -0.46767598050409 * GRP_Income4  +     0.00119742402812 *
827950    +        GRP_Mnt2  +     0.28434487319801 * GRP_Mnt3  +    -0.16337373090226 *
827951    +        GRP_Mnt4  +     0.24731982804653 * GRP_MntFishProducts2
827952    +          +     0.07001619920815 * GRP_MntFishProducts3
827953    +          +     0.07735498521359 * GRP_MntFishProducts4
827954    +          +    -0.15884098938162 * GRP_MntGoldProds2
827955    +          +    -0.27657428867783 * GRP_MntGoldProds3
827956    +          +     -0.1812542301124 * GRP_MntGoldProds4
827957    +          +    -0.05299867036647 * GRP_MntMeatProducts2
827958    +          +     0.00010942539908 * GRP_MntMeatProducts3
827959    +          +     0.03587382246671 * GRP_MntMeatProducts4
827960    +          +      0.1756484217323 * GRP_MntWines2  +     0.00289944116976 *
827961    +        GRP_MntWines3  +    -0.03752905583429 * GRP_MntWines4
827962    +          +     0.14681010085531 * GRP_NumCatalogPurchases3
827963    +          +    -0.23177792190553 * GRP_NumCatalogPurchases4
827964    +          +      -0.481887498986 * GRP_NumDistPurchases2
827965    +          +    -0.09943718589693 * GRP_NumDistPurchases3
827966    +          +     0.21760620991618 * GRP_NumDistPurchases4
827967    +          +    -0.09523799103665 * GRP_NumWebPurchases2
827968    +          +     0.06245025753157 * GRP_NumWebPurchases3
827969    +          +     0.11312469123111 * GRP_NumWebPurchases4
827970    +          +     -0.0156924842698 * GRP_RFMstat2  +     0.04329307564553 *
827971    +        GRP_RFMstat3  +    -0.06522539538042 * GRP_RFMstat4
827972    +          +     0.03130432577469 * GRP_RMntFrq2  +     0.15385182155627 *
827973    +        GRP_RMntFrq3  +    -0.05116322369837 * GRP_RMntFrq4
827974    +          +     0.52385840277978 * GRP_Recency2  +     0.44348058106283 *
827975    +        GRP_Recency3  +    -0.30003743891847 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.08768819217047 * GRP_AcceptedCmp52 + 0.44895652806962 * 
GRP_Frq2 + 0.3800586670059 * GRP_Frq3 + -0.07849333722318 * GRP_Frq4 + 0.61398939980043 * 
GRP_Income2 + 0.47732933105902 * GRP_Income3 + -0.46767598050409 * GRP_Income4 + 
0.00119742402812 * GRP_Mnt2 + 0.28434487319801 * GRP_Mnt3 + -0.16337373090226 * GRP_Mnt4 + 
0.24731982804653 * GRP_MntFishProducts2 + 0.07001619920815 * GRP_MntFishProducts3 + 
0.07735498521359 * GRP_MntFishProducts4 + -0.15884098938162 * GRP_MntGoldProds2 + 
-0.27657428867783 * GRP_MntGoldProds3 + -0.1812542301124 * GRP_MntGoldProds4 + 
-0.05299867036647 * GRP_MntMeatProducts2 + 0.00010942539908 * GRP_MntMeatProducts3 + 
0.03587382246671 * GRP_MntMeatProducts4 + 0.1756484217323 * GRP_MntWines2 + 0.00289944116976 * 
GRP_MntWines3 + -0.03752905583429 * GRP_MntWines4 + 0.14681010085531 * 
GRP_NumCatalogPurchases3 + -0.23177792190553 * GRP_NumCatalogPurchases4 + -0.481887498986 * 
GRP_NumDistPurchases2 + -0.09943718589693 * GRP_NumDistPurchases3 + 0.21760620991618 * 
GRP_NumDistPurchases4 + -0.09523799103665 * GRP_NumWebPurchases2 + 0.06245025753157 * 
GRP_NumWebPurchases3 + 0.11312469123111 * GRP_NumWebPurchases4 + -0.0156924842698 * 
GRP_RFMstat2 + 0.04329307564553 * GRP_RFMstat3 + -0.06522539538042 * GRP_RFMstat4 + 
0.03130432577469 * GRP_RMntFrq2 + 0.15385182155627 * GRP_RMntFrq3 + -0.05116322369837 * 
GRP_RMntFrq4 + 0.52385840277978 * GRP_Recency2 + 0.44348058106283 * GRP_Recency3 + 
-0.30003743891847 * GRP_Recency4 ;
827976    +   H14  = H14  +    -0.30891588421078 * GRP_AcceptedCmp52
827977    +          +     0.10101143238536 * GRP_Frq2  +    -0.03148220138998 * GRP_Frq3
827978    +          +     0.09807803608029 * GRP_Frq4  +     0.11294471318052 *
827979    +        GRP_Income2  +      0.0433560034099 * GRP_Income3
827980    +          +    -0.35503487261838 * GRP_Income4  +     0.15199410100967 *
827981    +        GRP_Mnt2  +    -0.15675008677561 * GRP_Mnt3  +    -0.06110606567063 *
827982    +        GRP_Mnt4  +     0.10272197664106 * GRP_MntFishProducts2
827983    +          +     0.33369645018356 * GRP_MntFishProducts3
827984    +          +     0.08427214551103 * GRP_MntFishProducts4
827985    +          +    -0.36187933889617 * GRP_MntGoldProds2
827986    +          +      0.1522584097588 * GRP_MntGoldProds3
827987    +          +    -0.18069803129722 * GRP_MntGoldProds4
827988    +          +    -0.39829328143793 * GRP_MntMeatProducts2
827989    +          +     0.00511939388608 * GRP_MntMeatProducts3
827990    +          +      0.0518722466688 * GRP_MntMeatProducts4
827991    +          +     0.10413724420858 * GRP_MntWines2  +    -0.30183392073068 *
827992    +        GRP_MntWines3  +    -0.40546180997599 * GRP_MntWines4
827993    +          +    -0.73564355192687 * GRP_NumCatalogPurchases3
827994    +          +     0.04239157662699 * GRP_NumCatalogPurchases4
827995    +          +    -0.61448773428482 * GRP_NumDistPurchases2
827996    +          +    -0.10817170519054 * GRP_NumDistPurchases3
827997    +          +    -0.00883878051452 * GRP_NumDistPurchases4
827998    +          +      0.0024401108853 * GRP_NumWebPurchases2
827999    +          +     -0.1066188825276 * GRP_NumWebPurchases3
828000    +          +     -0.2845728776007 * GRP_NumWebPurchases4
828001    +          +    -0.46846387193519 * GRP_RFMstat2  +     0.01548835288752 *
828002    +        GRP_RFMstat3  +     0.29056719482503 * GRP_RFMstat4
828003    +          +     0.13283388675843 * GRP_RMntFrq2  +    -0.01179035894062 *
828004    +        GRP_RMntFrq3  +    -0.40979674551139 * GRP_RMntFrq4
828005    +          +     0.39674687653317 * GRP_Recency2  +     0.48674783005161 *
828006    +        GRP_Recency3  +     0.19384397786172 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.30891588421078 * GRP_AcceptedCmp52 + 0.10101143238536 * 
GRP_Frq2 + -0.03148220138998 * GRP_Frq3 + 0.09807803608029 * GRP_Frq4 + 0.11294471318052 * 
GRP_Income2 + 0.0433560034099 * GRP_Income3 + -0.35503487261838 * GRP_Income4 + 
0.15199410100967 * GRP_Mnt2 + -0.15675008677561 * GRP_Mnt3 + -0.06110606567063 * GRP_Mnt4 + 
0.10272197664106 * GRP_MntFishProducts2 + 0.33369645018356 * GRP_MntFishProducts3 + 
0.08427214551103 * GRP_MntFishProducts4 + -0.36187933889617 * GRP_MntGoldProds2 + 
0.1522584097588 * GRP_MntGoldProds3 + -0.18069803129722 * GRP_MntGoldProds4 + 
-0.39829328143793 * GRP_MntMeatProducts2 + 0.00511939388608 * GRP_MntMeatProducts3 + 
0.0518722466688 * GRP_MntMeatProducts4 + 0.10413724420858 * GRP_MntWines2 + -0.30183392073068 
* GRP_MntWines3 + -0.40546180997599 * GRP_MntWines4 + -0.73564355192687 * 
GRP_NumCatalogPurchases3 + 0.04239157662699 * GRP_NumCatalogPurchases4 + -0.61448773428482 * 
GRP_NumDistPurchases2 + -0.10817170519054 * GRP_NumDistPurchases3 + -0.00883878051452 * 
GRP_NumDistPurchases4 + 0.0024401108853 * GRP_NumWebPurchases2 + -0.1066188825276 * 
GRP_NumWebPurchases3 + -0.2845728776007 * GRP_NumWebPurchases4 + -0.46846387193519 * 
GRP_RFMstat2 + 0.01548835288752 * GRP_RFMstat3 + 0.29056719482503 * GRP_RFMstat4 + 
0.13283388675843 * GRP_RMntFrq2 + -0.01179035894062 * GRP_RMntFrq3 + -0.40979674551139 * 
GRP_RMntFrq4 + 0.39674687653317 * GRP_Recency2 + 0.48674783005161 * GRP_Recency3 + 
0.19384397786172 * GRP_Recency4 ;
828007    +   H11  =    -1.18381596942405 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -1.18381596942405 + H11 ;
828008    +   H12  =     0.86336963287203 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.86336963287203 + H12 ;
828009    +   H13  =     -0.9724199391604 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.9724199391604 + H13 ;
828010    +   H14  =     1.35533016839911 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 1.35533016839911 + H14 ;
828011    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
828012    +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
828013    +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
828014    +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
828015    +END;
MPRINT(EM_DIAGRAM):   END;
828016    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
828017    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
828018    +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
828019    +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
828020    +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
828021    +END;
MPRINT(EM_DIAGRAM):   END;
828022    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
828023    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
828024    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
828025    +
828026    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
828027    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
828028    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
828029    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
828030    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
828031    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
828032    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
828033    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
828034    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
828035    +end;
MPRINT(EM_DIAGRAM):   end;
828036    +else do;
MPRINT(EM_DIAGRAM):   else do;
828037    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
828038    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
828039    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
828040    +   end;
MPRINT(EM_DIAGRAM):   end;
828041    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
828042    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
828043    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
828044    +   end;
MPRINT(EM_DIAGRAM):   end;
828045    +   else do;
MPRINT(EM_DIAGRAM):   else do;
828046    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
828047    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
828048    +   end;
MPRINT(EM_DIAGRAM):   end;
828049    +end;
MPRINT(EM_DIAGRAM):   end;
828050    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
828051    +   P_DepVar1  =     2.12648206014408 * H11  +      1.4206902210932 * H12
828052    +          +     1.21164854880393 * H13  +      1.5803543453738 * H14 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 2.12648206014408 * H11 + 1.4206902210932 * H12 + 
1.21164854880393 * H13 + 1.5803543453738 * H14 ;
828053    +   P_DepVar1  =    -1.66515506353131 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.66515506353131 + P_DepVar1 ;
828054    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
828055    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
828056    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
828057    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
828058    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
828059    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
828060    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
828061    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
828062    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
828063    +END;
MPRINT(EM_DIAGRAM):   END;
828064    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
828065    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
828066    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
828067    +END;
MPRINT(EM_DIAGRAM):   END;
828068    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
828069    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
828070    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
828071    +END;
MPRINT(EM_DIAGRAM):   END;
828072    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
828073    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
828074    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
828075    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
828076    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
828077    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
828078    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
828079    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
828080    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
828081    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
828082    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
828083    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
828084    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
828085    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
828086    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
828087    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
828088    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
828089    +END;
MPRINT(EM_DIAGRAM):   END;
828090    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
828091    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
828092    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
828093    +drop
828094    +H11
828095    +H12
828096    +H13
828097    +H14
828098    +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 ;
828099    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
828100     run;

NOTE: DATA STEP view saved on file EMWS8.NEURAL21_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.BINNING_VALIDATE.VIEW used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(EM_DIAGRAM):   quit;
828101     quit;
828102     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
828103     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
828104     * Neural21: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * Neural21: Computing metadata for TRAIN data;
828105     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;

NOTE: View EMWS8.NEURAL21_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural21\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS8.Neural21_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS8.Neural21_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS8.Neural21_TRAIN out=WORK.M1K4VJ8U noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1K4VJ8U;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20 
INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M1K4VJ8U(keep=name type length label format formatl 
formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then format = strip(format)!!strip(put(formatl, 
best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, 
best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then informat = 
strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, 
best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1K4VJ8U;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M1K4VJ8U;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M3TXK2VI NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3TXK2VI;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M3TXK2VI;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0S41VRV(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M3TXK2VI;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3TXK2VI;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 
FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M3TXK2VI;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" 
"MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" 
"QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" "YEAR" "YYMMDD" "YYMON" 
"YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" 
"EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) 
formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = 
"DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) 
formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" 
"NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" 
"SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = 
"DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then 
level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 
'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 
'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ 
('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 
'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 
'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3TXK2VI;
MPRINT(EMADVISECOLUMNS):   set WORK.M3TXK2VI;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= 
"Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= 
"Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower limit" UPPERLIMIT= 
"Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= 
"Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.BINNING_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.BINNING_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural21_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT 
LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "Neural21";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("P_DEPVAR1") creator = "Neural21";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR1") creator = "Neural21";
MPRINT(EM_DIAGRAM):   when("P_DEPVAR0") creator = "Neural21";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR0") creator = "Neural21";
MPRINT(EM_DIAGRAM):   when("F_DEPVAR") creator = "Neural21";
MPRINT(EM_DIAGRAM):   when("I_DEPVAR") creator = "Neural21";
MPRINT(EM_DIAGRAM):   when("U_DEPVAR") creator = "Neural21";
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "Neural21";
MPRINT(EM_DIAGRAM):   when("DEPVAR") model = "Neural21";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural21: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
828417     data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
828418     set EMWS8.Neural21_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural21_EMINFO;
828419     where DATA='Neural21' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='Neural21' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 
'MODEL');
828420     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.NEURAL21_EMINFO.
      WHERE (DATA='Neural21') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

828421     data EMWS8.Neural21_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS8.Neural21_EMINFO;
828422     length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
828423     input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
828424     cards;
MPRINT(EM_DIAGRAM):   cards;

NOTE: The data set EMWS8.NEURAL21_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   run;
828428     run;
828429     data EMWS8.Neural21_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural21_EMINFO;
828430     set EMWS8.Neural21_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural21_EMINFO WORK.MODELTEMP_INFO;
828431     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.NEURAL21_EMINFO.
NOTE: There were 0 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS8.NEURAL21_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

828432     proc sort data = EMWS8.Neural21_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.Neural21_EMINFO NOTHREADS;
828433     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
828434     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.NEURAL21_EMINFO.
NOTE: The data set EMWS8.NEURAL21_EMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

828435     proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
828436     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
828437     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set EMWS8.FIMPORT_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 1 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

828438     proc sort data = EMWS8.Neural21_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS8.Neural21_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
828439     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
828440     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 3 observations read from the data set EMWS8.NEURAL21_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

828441     data EMWS8.Neural21_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural21_EMINFO;
828442     merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
828443     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
828444     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 3 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS8.NEURAL21_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

828445     proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
828446     delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
828447     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
828448     quit;
MPRINT(EM_DIAGRAM):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

NOTE: View EMWS8.NEURAL21_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
NOTE: View EMWS8.NEURAL21_VALIDATE.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
