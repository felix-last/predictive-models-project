MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "28. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "11.26 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                28. April 2016
Time:                11.26 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O2X69U2A 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural35\EMSCORE.out" encoding="UTF-8" 
NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O2X69U2A new;
MPRINT(EM_DIAGRAM):   run;
3358671    filename emflow
3358671  ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural35\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural35\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * AutoNeural35: Scoring DATA data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
3358672    *------------------------------------------------------------*;
3358673    * AutoNeural35: Scoring DATA data;
3358674    *------------------------------------------------------------*;
3358675    data EMWS8.AutoNeural35_TRAIN
3358676    / view=EMWS8.AutoNeural35_TRAIN
3358677    ;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural35_TRAIN / view=EMWS8.AutoNeural35_TRAIN ;
3358678    set EMWS8.Meta3_TRAIN
3358679    ;
MPRINT(EM_DIAGRAM):   set EMWS8.Meta3_TRAIN ;
3358680    %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural35\EMFLOWSCORE.sas.
3358681   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
3358682   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
3358683   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
3358684   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
3358685   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
3358686   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
3358687   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
3358688   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
3358689   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
3358690   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
3358691   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
3358692   +LENGTH _WARN_ $4
3358693   +      F_DepVar  $ 12
3358694   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
3358695   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
3358696   +
3358697   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
3358698   +
3358699   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
3358700   +
3358701   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
3358702   +
3358703   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
3358704   +
3358705   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
3358706   +
3358707   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
3358708   +
3358709   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
3358710   +
3358711   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
3358712   +
3358713   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
3358714   +
3358715   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
3358716   +
3358717   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
3358718   +
3358719   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
3358720   +
3358721   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
3358722   +
3358723   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
3358724   +
3358725   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
3358726   +
3358727   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
3358728   +
3358729   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
3358730   +
3358731   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
3358732   +
3358733   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
3358734   +
3358735   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
3358736   +
3358737   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
3358738   +
3358739   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
3358740   +
3358741   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
3358742   +
3358743   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
3358744   +
3358745   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
3358746   +
3358747   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
3358748   +
3358749   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
3358750   +
3358751   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
3358752   +
3358753   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
3358754   +
3358755   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
3358756   +
3358757   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
3358758   +
3358759   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
3358760   +
3358761   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
3358762   +
3358763   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
3358764   +
3358765   +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
3358766   +
3358767   +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
3358768   +
3358769   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
3358770   +
3358771   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
3358772   +
3358773   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
3358774   +
3358775   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
3358776   +
3358777   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
3358778   +
3358779   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
3358780   +
3358781   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
3358782   +
3358783   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
3358784   +
3358785   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
3358786   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
3358787   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
3358788   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
3358789   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
3358790   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3358791   +end;
MPRINT(EM_DIAGRAM):   end;
3358792   +else do;
MPRINT(EM_DIAGRAM):   else do;
3358793   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
3358794   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
3358795   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3358796   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
3358797   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
3358798   +   end;
MPRINT(EM_DIAGRAM):   end;
3358799   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
3358800   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
3358801   +   end;
MPRINT(EM_DIAGRAM):   end;
3358802   +   else do;
MPRINT(EM_DIAGRAM):   else do;
3358803   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
3358804   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
3358805   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3358806   +   end;
MPRINT(EM_DIAGRAM):   end;
3358807   +end;
MPRINT(EM_DIAGRAM):   end;
3358808   +
3358809   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
3358810   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
3358811   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
3358812   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
3358813   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
3358814   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3358815   +end;
MPRINT(EM_DIAGRAM):   end;
3358816   +else do;
MPRINT(EM_DIAGRAM):   else do;
3358817   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
3358818   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
3358819   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3358820   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
3358821   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
3358822   +   end;
MPRINT(EM_DIAGRAM):   end;
3358823   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
3358824   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
3358825   +   end;
MPRINT(EM_DIAGRAM):   end;
3358826   +   else do;
MPRINT(EM_DIAGRAM):   else do;
3358827   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
3358828   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
3358829   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3358830   +   end;
MPRINT(EM_DIAGRAM):   end;
3358831   +end;
MPRINT(EM_DIAGRAM):   end;
3358832   +
3358833   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
3358834   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
3358835   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
3358836   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
3358837   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
3358838   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3358839   +end;
MPRINT(EM_DIAGRAM):   end;
3358840   +else do;
MPRINT(EM_DIAGRAM):   else do;
3358841   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
3358842   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
3358843   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3358844   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
3358845   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
3358846   +   end;
MPRINT(EM_DIAGRAM):   end;
3358847   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
3358848   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
3358849   +   end;
MPRINT(EM_DIAGRAM):   end;
3358850   +   else do;
MPRINT(EM_DIAGRAM):   else do;
3358851   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
3358852   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
3358853   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3358854   +   end;
MPRINT(EM_DIAGRAM):   end;
3358855   +end;
MPRINT(EM_DIAGRAM):   end;
3358856   +
3358857   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
3358858   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
3358859   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
3358860   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
3358861   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
3358862   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3358863   +end;
MPRINT(EM_DIAGRAM):   end;
3358864   +else do;
MPRINT(EM_DIAGRAM):   else do;
3358865   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
3358866   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
3358867   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3358868   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
3358869   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
3358870   +   end;
MPRINT(EM_DIAGRAM):   end;
3358871   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
3358872   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
3358873   +   end;
MPRINT(EM_DIAGRAM):   end;
3358874   +   else do;
MPRINT(EM_DIAGRAM):   else do;
3358875   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
3358876   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
3358877   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3358878   +   end;
MPRINT(EM_DIAGRAM):   end;
3358879   +end;
MPRINT(EM_DIAGRAM):   end;
3358880   +
3358881   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
3358882   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
3358883   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
3358884   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
3358885   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
3358886   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3358887   +end;
MPRINT(EM_DIAGRAM):   end;
3358888   +else do;
MPRINT(EM_DIAGRAM):   else do;
3358889   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
3358890   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
3358891   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3358892   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
3358893   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
3358894   +   end;
MPRINT(EM_DIAGRAM):   end;
3358895   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
3358896   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
3358897   +   end;
MPRINT(EM_DIAGRAM):   end;
3358898   +   else do;
MPRINT(EM_DIAGRAM):   else do;
3358899   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
3358900   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
3358901   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3358902   +   end;
MPRINT(EM_DIAGRAM):   end;
3358903   +end;
MPRINT(EM_DIAGRAM):   end;
3358904   +
3358905   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
3358906   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
3358907   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
3358908   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
3358909   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
3358910   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3358911   +end;
MPRINT(EM_DIAGRAM):   end;
3358912   +else do;
MPRINT(EM_DIAGRAM):   else do;
3358913   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
3358914   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
3358915   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3358916   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
3358917   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
3358918   +   end;
MPRINT(EM_DIAGRAM):   end;
3358919   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
3358920   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
3358921   +   end;
MPRINT(EM_DIAGRAM):   end;
3358922   +   else do;
MPRINT(EM_DIAGRAM):   else do;
3358923   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
3358924   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
3358925   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3358926   +   end;
MPRINT(EM_DIAGRAM):   end;
3358927   +end;
MPRINT(EM_DIAGRAM):   end;
3358928   +
3358929   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
3358930   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
3358931   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
3358932   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
3358933   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
3358934   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3358935   +end;
MPRINT(EM_DIAGRAM):   end;
3358936   +else do;
MPRINT(EM_DIAGRAM):   else do;
3358937   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
3358938   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
3358939   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3358940   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
3358941   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
3358942   +   end;
MPRINT(EM_DIAGRAM):   end;
3358943   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
3358944   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
3358945   +   end;
MPRINT(EM_DIAGRAM):   end;
3358946   +   else do;
MPRINT(EM_DIAGRAM):   else do;
3358947   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
3358948   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
3358949   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3358950   +   end;
MPRINT(EM_DIAGRAM):   end;
3358951   +end;
MPRINT(EM_DIAGRAM):   end;
3358952   +
3358953   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
3358954   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
3358955   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
3358956   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
3358957   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
3358958   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
3358959   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
3358960   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
3358961   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
3358962   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
3358963   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
3358964   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
3358965   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
3358966   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3358967   +end;
MPRINT(EM_DIAGRAM):   end;
3358968   +else do;
MPRINT(EM_DIAGRAM):   else do;
3358969   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
3358970   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
3358971   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3358972   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
3358973   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
3358974   +   end;
MPRINT(EM_DIAGRAM):   end;
3358975   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
3358976   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
3358977   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
3358978   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
3358979   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
3358980   +   end;
MPRINT(EM_DIAGRAM):   end;
3358981   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
3358982   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
3358983   +   end;
MPRINT(EM_DIAGRAM):   end;
3358984   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
3358985   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
3358986   +   end;
MPRINT(EM_DIAGRAM):   end;
3358987   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
3358988   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
3358989   +   end;
MPRINT(EM_DIAGRAM):   end;
3358990   +   else do;
MPRINT(EM_DIAGRAM):   else do;
3358991   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
3358992   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
3358993   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
3358994   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
3358995   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
3358996   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3358997   +   end;
MPRINT(EM_DIAGRAM):   end;
3358998   +end;
MPRINT(EM_DIAGRAM):   end;
3358999   +
3359000   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
3359001   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
3359002   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
3359003   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
3359004   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
3359005   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
3359006   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
3359007   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
3359008   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
3359009   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
3359010   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
3359011   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
3359012   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
3359013   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
3359014   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3359015   +end;
MPRINT(EM_DIAGRAM):   end;
3359016   +else do;
MPRINT(EM_DIAGRAM):   else do;
3359017   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
3359018   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
3359019   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3359020   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
3359021   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
3359022   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
3359023   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
3359024   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
3359025   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3359026   +         end;
MPRINT(EM_DIAGRAM):   end;
3359027   +         else do;
MPRINT(EM_DIAGRAM):   else do;
3359028   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
3359029   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
3359030   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3359031   +            end;
MPRINT(EM_DIAGRAM):   end;
3359032   +         end;
MPRINT(EM_DIAGRAM):   end;
3359033   +      end;
MPRINT(EM_DIAGRAM):   end;
3359034   +      else do;
MPRINT(EM_DIAGRAM):   else do;
3359035   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
3359036   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
3359037   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3359038   +         end;
MPRINT(EM_DIAGRAM):   end;
3359039   +      end;
MPRINT(EM_DIAGRAM):   end;
3359040   +   end;
MPRINT(EM_DIAGRAM):   end;
3359041   +   else do;
MPRINT(EM_DIAGRAM):   else do;
3359042   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
3359043   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
3359044   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3359045   +      end;
MPRINT(EM_DIAGRAM):   end;
3359046   +      else do;
MPRINT(EM_DIAGRAM):   else do;
3359047   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
3359048   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
3359049   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
3359050   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
3359051   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
3359052   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3359053   +         end;
MPRINT(EM_DIAGRAM):   end;
3359054   +      end;
MPRINT(EM_DIAGRAM):   end;
3359055   +   end;
MPRINT(EM_DIAGRAM):   end;
3359056   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
3359057   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
3359058   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
3359059   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
3359060   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
3359061   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
3359062   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3359063   +   end;
MPRINT(EM_DIAGRAM):   end;
3359064   +end;
MPRINT(EM_DIAGRAM):   end;
3359065   +
3359066   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3359067   +*** Checking missing input Interval
3359068   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
3359069   +
3359070   +IF NMISS(
3359071   +   AcceptedCmpTotal ,
3359072   +   Age ,
3359073   +   Frq ,
3359074   +   Income ,
3359075   +   Kidhome ,
3359076   +   MntFishProducts ,
3359077   +   MntFruits ,
3359078   +   MntGoldProds ,
3359079   +   MntSweetProducts ,
3359080   +   MonthsAsCustomer ,
3359081   +   NumDealsPurchases ,
3359082   +   NumWebVisitsMonth ,
3359083   +   RFMstat ,
3359084   +   RMntFrq ,
3359085   +   Recency ,
3359086   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , 
MntFishProducts , MntFruits , MntGoldProds , MntSweetProducts , MonthsAsCustomer , 
NumDealsPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , Teenhome ) THEN DO;
3359087   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
3359088   +
3359089   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3359090   +END;
MPRINT(EM_DIAGRAM):   END;
3359091   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3359092   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
3359093   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3359094   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
3359095   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
3359096   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
3359097   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
3359098   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
3359099   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
3359100   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
3359101   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
3359102   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
3359103   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
3359104   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
3359105   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
3359106   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
3359107   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
3359108   +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
3359109   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
3359110   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
3359111   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
3359112   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
3359113   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
3359114   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
3359115   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
3359116   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
3359117   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
3359118   +END;
MPRINT(EM_DIAGRAM):   END;
3359119   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
3359120   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
3359121   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
3359122   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
3359123   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
3359124   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
3359125   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
3359126   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
3359127   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
3359128   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
3359129   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
3359130   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
3359131   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
3359132   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
3359133   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
3359134   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
3359135   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
3359136   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
3359137   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
3359138   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
3359139   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
3359140   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
3359141   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
3359142   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
3359143   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
3359144   +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
3359145   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
3359146   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
3359147   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
3359148   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
3359149   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
3359150   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
3359151   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
3359152   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
3359153   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
3359154   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
3359155   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
3359156   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
3359157   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
3359158   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
3359159   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
3359160   +END;
MPRINT(EM_DIAGRAM):   END;
3359161   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3359162   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
3359163   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3359164   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3359165   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
3359166   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3359167   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3359168   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
3359169   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3359170   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
3359171   +   H1x1_1  =     0.42585587882538 * S_AcceptedCmpTotal
3359172   +          +    -0.43032612946411 * S_Age  +    -1.84723116954266 * S_Frq
3359173   +          +    -0.09376996424096 * S_Income  +    -0.63457337145111 *
3359174   +        S_Kidhome  +    -1.07062735228011 * S_MntFishProducts
3359175   +          +    -0.39750126211014 * S_MntFruits  +     0.87836102594883 *
3359176   +        S_MntGoldProds  +     4.02875150179318 * S_MntSweetProducts
3359177   +          +    -0.63886071804247 * S_MonthsAsCustomer
3359178   +          +      2.3488612891037 * S_NumDealsPurchases
3359179   +          +     2.32996461229282 * S_NumWebVisitsMonth
3359180   +          +     3.26514327762389 * S_RFMstat  +     0.81545333248878 *
3359181   +        S_RMntFrq  +    -3.18599476886695 * S_Recency
3359182   +          +    -0.36606572424478 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.42585587882538 * S_AcceptedCmpTotal + -0.43032612946411 * 
S_Age + -1.84723116954266 * S_Frq + -0.09376996424096 * S_Income + -0.63457337145111 * 
S_Kidhome + -1.07062735228011 * S_MntFishProducts + -0.39750126211014 * S_MntFruits + 
0.87836102594883 * S_MntGoldProds + 4.02875150179318 * S_MntSweetProducts + -0.63886071804247 
* S_MonthsAsCustomer + 2.3488612891037 * S_NumDealsPurchases + 2.32996461229282 * 
S_NumWebVisitsMonth + 3.26514327762389 * S_RFMstat + 0.81545333248878 * S_RMntFrq + 
-3.18599476886695 * S_Recency + -0.36606572424478 * S_Teenhome ;
3359183   +   H1x1_2  =     -0.3238529971058 * S_AcceptedCmpTotal
3359184   +          +     0.01122128383802 * S_Age  +    -1.81697004648061 * S_Frq
3359185   +          +     0.27195583458212 * S_Income  +     2.44028375867625 *
3359186   +        S_Kidhome  +     0.03188165765923 * S_MntFishProducts
3359187   +          +     0.28741461463462 * S_MntFruits  +     0.91740540315279 *
3359188   +        S_MntGoldProds  +     1.53257516137636 * S_MntSweetProducts
3359189   +          +     0.67699646331113 * S_MonthsAsCustomer
3359190   +          +     0.70523055739254 * S_NumDealsPurchases
3359191   +          +    -2.06406682205141 * S_NumWebVisitsMonth
3359192   +          +    -0.07912192803919 * S_RFMstat  +     -0.1981410297834 *
3359193   +        S_RMntFrq  +      5.0273672656487 * S_Recency
3359194   +          +      1.7761639681499 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.3238529971058 * S_AcceptedCmpTotal + 0.01122128383802 * 
S_Age + -1.81697004648061 * S_Frq + 0.27195583458212 * S_Income + 2.44028375867625 * S_Kidhome 
+ 0.03188165765923 * S_MntFishProducts + 0.28741461463462 * S_MntFruits + 0.91740540315279 * 
S_MntGoldProds + 1.53257516137636 * S_MntSweetProducts + 0.67699646331113 * S_MonthsAsCustomer 
+ 0.70523055739254 * S_NumDealsPurchases + -2.06406682205141 * S_NumWebVisitsMonth + 
-0.07912192803919 * S_RFMstat + -0.1981410297834 * S_RMntFrq + 5.0273672656487 * S_Recency + 
1.7761639681499 * S_Teenhome ;
3359195   +   H1x1_3  =    -0.31627698433663 * S_AcceptedCmpTotal
3359196   +          +    -1.66608599580569 * S_Age  +     3.03276701042245 * S_Frq
3359197   +          +    -1.55807144100301 * S_Income  +    -1.61052956577749 *
3359198   +        S_Kidhome  +    -1.13374850666912 * S_MntFishProducts
3359199   +          +     1.69712033465415 * S_MntFruits  +     -0.0956378742157 *
3359200   +        S_MntGoldProds  +     0.42344107897201 * S_MntSweetProducts
3359201   +          +    -0.53694216899543 * S_MonthsAsCustomer
3359202   +          +     0.25908508836257 * S_NumDealsPurchases
3359203   +          +    -1.18459231573601 * S_NumWebVisitsMonth
3359204   +          +    -0.91952963382786 * S_RFMstat  +     1.14118358901223 *
3359205   +        S_RMntFrq  +    -1.22457627833901 * S_Recency
3359206   +          +     0.58418149816249 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.31627698433663 * S_AcceptedCmpTotal + -1.66608599580569 * 
S_Age + 3.03276701042245 * S_Frq + -1.55807144100301 * S_Income + -1.61052956577749 * 
S_Kidhome + -1.13374850666912 * S_MntFishProducts + 1.69712033465415 * S_MntFruits + 
-0.0956378742157 * S_MntGoldProds + 0.42344107897201 * S_MntSweetProducts + -0.53694216899543 
* S_MonthsAsCustomer + 0.25908508836257 * S_NumDealsPurchases + -1.18459231573601 * 
S_NumWebVisitsMonth + -0.91952963382786 * S_RFMstat + 1.14118358901223 * S_RMntFrq + 
-1.22457627833901 * S_Recency + 0.58418149816249 * S_Teenhome ;
3359207   +   H1x1_4  =    -0.18730828314928 * S_AcceptedCmpTotal
3359208   +          +     0.44335866520169 * S_Age  +    -0.52967041213464 * S_Frq
3359209   +          +    -2.49889000722688 * S_Income  +     2.09225176560102 *
3359210   +        S_Kidhome  +     -0.0365038378872 * S_MntFishProducts
3359211   +          +    -0.27687707269551 * S_MntFruits  +     0.22172940394581 *
3359212   +        S_MntGoldProds  +     1.18008846653352 * S_MntSweetProducts
3359213   +          +    -0.08931078748332 * S_MonthsAsCustomer
3359214   +          +    -0.46561962814047 * S_NumDealsPurchases
3359215   +          +    -0.12241295445297 * S_NumWebVisitsMonth
3359216   +          +    -0.88584926273299 * S_RFMstat  +    -0.19321792123793 *
3359217   +        S_RMntFrq  +     0.96804234233608 * S_Recency
3359218   +          +     2.36799993608153 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -0.18730828314928 * S_AcceptedCmpTotal + 0.44335866520169 * 
S_Age + -0.52967041213464 * S_Frq + -2.49889000722688 * S_Income + 2.09225176560102 * 
S_Kidhome + -0.0365038378872 * S_MntFishProducts + -0.27687707269551 * S_MntFruits + 
0.22172940394581 * S_MntGoldProds + 1.18008846653352 * S_MntSweetProducts + -0.08931078748332 
* S_MonthsAsCustomer + -0.46561962814047 * S_NumDealsPurchases + -0.12241295445297 * 
S_NumWebVisitsMonth + -0.88584926273299 * S_RFMstat + -0.19321792123793 * S_RMntFrq + 
0.96804234233608 * S_Recency + 2.36799993608153 * S_Teenhome ;
3359219   +   H1x1_5  =    -0.61669680820161 * S_AcceptedCmpTotal
3359220   +          +    -2.33152931225693 * S_Age  +    -5.55252945538268 * S_Frq
3359221   +          +    -1.27866281458938 * S_Income  +     0.57490346430235 *
3359222   +        S_Kidhome  +    -0.72481428507501 * S_MntFishProducts
3359223   +          +     1.09506142984139 * S_MntFruits  +     0.13317961278198 *
3359224   +        S_MntGoldProds  +    -0.09910013481931 * S_MntSweetProducts
3359225   +          +     -0.9186653552138 * S_MonthsAsCustomer
3359226   +          +     2.17624393037629 * S_NumDealsPurchases
3359227   +          +    -0.41699900714758 * S_NumWebVisitsMonth
3359228   +          +     0.90353546864265 * S_RFMstat  +      1.3997584305474 *
3359229   +        S_RMntFrq  +    -0.28987089218356 * S_Recency
3359230   +          +     1.91100508225075 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -0.61669680820161 * S_AcceptedCmpTotal + -2.33152931225693 * 
S_Age + -5.55252945538268 * S_Frq + -1.27866281458938 * S_Income + 0.57490346430235 * 
S_Kidhome + -0.72481428507501 * S_MntFishProducts + 1.09506142984139 * S_MntFruits + 
0.13317961278198 * S_MntGoldProds + -0.09910013481931 * S_MntSweetProducts + -0.9186653552138 
* S_MonthsAsCustomer + 2.17624393037629 * S_NumDealsPurchases + -0.41699900714758 * 
S_NumWebVisitsMonth + 0.90353546864265 * S_RFMstat + 1.3997584305474 * S_RMntFrq + 
-0.28987089218356 * S_Recency + 1.91100508225075 * S_Teenhome ;
3359231   +   H1x1_6  =     2.41979447479877 * S_AcceptedCmpTotal
3359232   +          +    -0.20582802429798 * S_Age  +     1.18277101919857 * S_Frq
3359233   +          +     0.52347523464991 * S_Income  +     0.59569652351781 *
3359234   +        S_Kidhome  +    -0.48037342144038 * S_MntFishProducts
3359235   +          +    -0.75448191371446 * S_MntFruits  +     0.93881795060256 *
3359236   +        S_MntGoldProds  +    -1.19303493808819 * S_MntSweetProducts
3359237   +          +     1.32865070741283 * S_MonthsAsCustomer
3359238   +          +      0.8173864987673 * S_NumDealsPurchases
3359239   +          +     1.04804775338375 * S_NumWebVisitsMonth
3359240   +          +    -1.72946268323829 * S_RFMstat  +     3.74278593401599 *
3359241   +        S_RMntFrq  +     0.08690587270493 * S_Recency
3359242   +          +     0.02047957204463 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_6 = 2.41979447479877 * S_AcceptedCmpTotal + -0.20582802429798 * 
S_Age + 1.18277101919857 * S_Frq + 0.52347523464991 * S_Income + 0.59569652351781 * S_Kidhome 
+ -0.48037342144038 * S_MntFishProducts + -0.75448191371446 * S_MntFruits + 0.93881795060256 * 
S_MntGoldProds + -1.19303493808819 * S_MntSweetProducts + 1.32865070741283 * 
S_MonthsAsCustomer + 0.8173864987673 * S_NumDealsPurchases + 1.04804775338375 * 
S_NumWebVisitsMonth + -1.72946268323829 * S_RFMstat + 3.74278593401599 * S_RMntFrq + 
0.08690587270493 * S_Recency + 0.02047957204463 * S_Teenhome ;
3359243   +   H1x1_1  = H1x1_1  +    -1.50344324990897 * AcceptedCmp10
3359244   +          +    -0.20978380766564 * AcceptedCmp20  +    -0.59285418034505 *
3359245   +        AcceptedCmp30  +    -0.17149392972569 * AcceptedCmp40
3359246   +          +     0.45249707477318 * AcceptedCmp50  +    -0.65327760824746 *
3359247   +        Complain0  +     1.42156460466466 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -1.50344324990897 * AcceptedCmp10 + -0.20978380766564 
* AcceptedCmp20 + -0.59285418034505 * AcceptedCmp30 + -0.17149392972569 * AcceptedCmp40 + 
0.45249707477318 * AcceptedCmp50 + -0.65327760824746 * Complain0 + 1.42156460466466 * 
HigherEducationBinary0 ;
3359248   +   H1x1_2  = H1x1_2  +    -1.24289798004439 * AcceptedCmp10
3359249   +          +     1.24624979457488 * AcceptedCmp20  +     0.33144842139218 *
3359250   +        AcceptedCmp30  +     -0.4872034456722 * AcceptedCmp40
3359251   +          +     1.28997041867854 * AcceptedCmp50  +     -1.5327032066878 *
3359252   +        Complain0  +     1.91778569876362 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -1.24289798004439 * AcceptedCmp10 + 1.24624979457488 * 
AcceptedCmp20 + 0.33144842139218 * AcceptedCmp30 + -0.4872034456722 * AcceptedCmp40 + 
1.28997041867854 * AcceptedCmp50 + -1.5327032066878 * Complain0 + 1.91778569876362 * 
HigherEducationBinary0 ;
3359253   +   H1x1_3  = H1x1_3  +     0.87922911399007 * AcceptedCmp10
3359254   +          +    -0.94787288066533 * AcceptedCmp20  +     2.04527234601749 *
3359255   +        AcceptedCmp30  +     0.24833213694075 * AcceptedCmp40
3359256   +          +     1.60900434754659 * AcceptedCmp50  +    -0.55004614971759 *
3359257   +        Complain0  +     0.61774573286103 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.87922911399007 * AcceptedCmp10 + -0.94787288066533 * 
AcceptedCmp20 + 2.04527234601749 * AcceptedCmp30 + 0.24833213694075 * AcceptedCmp40 + 
1.60900434754659 * AcceptedCmp50 + -0.55004614971759 * Complain0 + 0.61774573286103 * 
HigherEducationBinary0 ;
3359258   +   H1x1_4  = H1x1_4  +     0.86935835312931 * AcceptedCmp10
3359259   +          +     0.86645335600811 * AcceptedCmp20  +     0.88117597493148 *
3359260   +        AcceptedCmp30  +     0.81675523083166 * AcceptedCmp40
3359261   +          +     0.19025673240958 * AcceptedCmp50  +     0.88726242767978 *
3359262   +        Complain0  +    -1.77794504788307 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + 0.86935835312931 * AcceptedCmp10 + 0.86645335600811 * 
AcceptedCmp20 + 0.88117597493148 * AcceptedCmp30 + 0.81675523083166 * AcceptedCmp40 + 
0.19025673240958 * AcceptedCmp50 + 0.88726242767978 * Complain0 + -1.77794504788307 * 
HigherEducationBinary0 ;
3359263   +   H1x1_5  = H1x1_5  +    -1.31606378982907 * AcceptedCmp10
3359264   +          +    -2.73475337981814 * AcceptedCmp20  +    -0.70870498104131 *
3359265   +        AcceptedCmp30  +    -1.05303367791364 * AcceptedCmp40
3359266   +          +    -0.04198792844785 * AcceptedCmp50  +     0.05756398556346 *
3359267   +        Complain0  +     1.03743504565535 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -1.31606378982907 * AcceptedCmp10 + -2.73475337981814 
* AcceptedCmp20 + -0.70870498104131 * AcceptedCmp30 + -1.05303367791364 * AcceptedCmp40 + 
-0.04198792844785 * AcceptedCmp50 + 0.05756398556346 * Complain0 + 1.03743504565535 * 
HigherEducationBinary0 ;
3359268   +   H1x1_6  = H1x1_6  +    -0.34885584282455 * AcceptedCmp10
3359269   +          +     1.03682337828657 * AcceptedCmp20  +     0.42400668101582 *
3359270   +        AcceptedCmp30  +     0.21978456990971 * AcceptedCmp40
3359271   +          +    -0.07932087917736 * AcceptedCmp50  +      0.8792580651126 *
3359272   +        Complain0  +    -1.32868689587866 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + -0.34885584282455 * AcceptedCmp10 + 1.03682337828657 * 
AcceptedCmp20 + 0.42400668101582 * AcceptedCmp30 + 0.21978456990971 * AcceptedCmp40 + 
-0.07932087917736 * AcceptedCmp50 + 0.8792580651126 * Complain0 + -1.32868689587866 * 
HigherEducationBinary0 ;
3359273   +   H1x1_1  = H1x1_1  +     1.22170418338538 * Education2n_Cycle
3359274   +          +    -0.89708584095759 * EducationBasic  +     0.14600831823121 *
3359275   +        EducationGraduation  +    -0.31624019107181 * EducationMaster
3359276   +          +    -0.82783034099773 * Marital_StatusDivorced
3359277   +          +     0.39651075241405 * Marital_StatusMarried
3359278   +          +     0.17323156170107 * Marital_StatusSingle
3359279   +          +    -0.15463096860068 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 1.22170418338538 * Education2n_Cycle + 
-0.89708584095759 * EducationBasic + 0.14600831823121 * EducationGraduation + 
-0.31624019107181 * EducationMaster + -0.82783034099773 * Marital_StatusDivorced + 
0.39651075241405 * Marital_StatusMarried + 0.17323156170107 * Marital_StatusSingle + 
-0.15463096860068 * Marital_StatusTogether ;
3359280   +   H1x1_2  = H1x1_2  +     0.58978972451291 * Education2n_Cycle
3359281   +          +     0.19362558984066 * EducationBasic  +    -1.26231294369002 *
3359282   +        EducationGraduation  +    -0.05323450200928 * EducationMaster
3359283   +          +    -2.42314580112302 * Marital_StatusDivorced
3359284   +          +     1.72709251267075 * Marital_StatusMarried
3359285   +          +    -0.94350561587168 * Marital_StatusSingle
3359286   +          +      0.7843550906207 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.58978972451291 * Education2n_Cycle + 
0.19362558984066 * EducationBasic + -1.26231294369002 * EducationGraduation + 
-0.05323450200928 * EducationMaster + -2.42314580112302 * Marital_StatusDivorced + 
1.72709251267075 * Marital_StatusMarried + -0.94350561587168 * Marital_StatusSingle + 
0.7843550906207 * Marital_StatusTogether ;
3359287   +   H1x1_3  = H1x1_3  +    -0.72941468865776 * Education2n_Cycle
3359288   +          +    -0.36115614328883 * EducationBasic  +    -1.74898957297891 *
3359289   +        EducationGraduation  +    -1.41317064722862 * EducationMaster
3359290   +          +    -1.25323701705333 * Marital_StatusDivorced
3359291   +          +    -0.72618091015379 * Marital_StatusMarried
3359292   +          +     0.20594885266863 * Marital_StatusSingle
3359293   +          +     1.01375770093502 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.72941468865776 * Education2n_Cycle + 
-0.36115614328883 * EducationBasic + -1.74898957297891 * EducationGraduation + 
-1.41317064722862 * EducationMaster + -1.25323701705333 * Marital_StatusDivorced + 
-0.72618091015379 * Marital_StatusMarried + 0.20594885266863 * Marital_StatusSingle + 
1.01375770093502 * Marital_StatusTogether ;
3359294   +   H1x1_4  = H1x1_4  +     0.50789594186684 * Education2n_Cycle
3359295   +          +     -1.1844688511224 * EducationBasic  +     0.58416148321529 *
3359296   +        EducationGraduation  +     0.75559299844055 * EducationMaster
3359297   +          +     -0.9159957275063 * Marital_StatusDivorced
3359298   +          +     2.06164757358796 * Marital_StatusMarried
3359299   +          +    -1.61544310412168 * Marital_StatusSingle
3359300   +          +     2.48191290499231 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + 0.50789594186684 * Education2n_Cycle + 
-1.1844688511224 * EducationBasic + 0.58416148321529 * EducationGraduation + 0.75559299844055 
* EducationMaster + -0.9159957275063 * Marital_StatusDivorced + 2.06164757358796 * 
Marital_StatusMarried + -1.61544310412168 * Marital_StatusSingle + 2.48191290499231 * 
Marital_StatusTogether ;
3359301   +   H1x1_5  = H1x1_5  +    -0.12718285014627 * Education2n_Cycle
3359302   +          +    -1.15731060601092 * EducationBasic  +    -2.27989707190272 *
3359303   +        EducationGraduation  +     0.27594869585414 * EducationMaster
3359304   +          +    -0.72418104768251 * Marital_StatusDivorced
3359305   +          +     0.51077116161056 * Marital_StatusMarried
3359306   +          +     -2.0857896888723 * Marital_StatusSingle
3359307   +          +     1.23349520338513 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.12718285014627 * Education2n_Cycle + 
-1.15731060601092 * EducationBasic + -2.27989707190272 * EducationGraduation + 
0.27594869585414 * EducationMaster + -0.72418104768251 * Marital_StatusDivorced + 
0.51077116161056 * Marital_StatusMarried + -2.0857896888723 * Marital_StatusSingle + 
1.23349520338513 * Marital_StatusTogether ;
3359308   +   H1x1_6  = H1x1_6  +    -0.27482868097878 * Education2n_Cycle
3359309   +          +     0.43660267071317 * EducationBasic  +     2.25751743331526 *
3359310   +        EducationGraduation  +     -0.7287361872795 * EducationMaster
3359311   +          +     0.64139965212864 * Marital_StatusDivorced
3359312   +          +    -1.52338846336783 * Marital_StatusMarried
3359313   +          +     1.94794784762286 * Marital_StatusSingle
3359314   +          +     -0.8708272739488 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + -0.27482868097878 * Education2n_Cycle + 
0.43660267071317 * EducationBasic + 2.25751743331526 * EducationGraduation + -0.7287361872795 
* EducationMaster + 0.64139965212864 * Marital_StatusDivorced + -1.52338846336783 * 
Marital_StatusMarried + 1.94794784762286 * Marital_StatusSingle + -0.8708272739488 * 
Marital_StatusTogether ;
3359315   +   H1x1_1  =    -0.50508246154341 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.50508246154341 + H1x1_1 ;
3359316   +   H1x1_2  =     0.29227723492853 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.29227723492853 + H1x1_2 ;
3359317   +   H1x1_3  =     0.87104310832885 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.87104310832885 + H1x1_3 ;
3359318   +   H1x1_4  =     1.73967602723421 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 1.73967602723421 + H1x1_4 ;
3359319   +   H1x1_5  =    -2.04513596136193 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -2.04513596136193 + H1x1_5 ;
3359320   +   H1x1_6  =     2.15101812022157 + H1x1_6 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = 2.15101812022157 + H1x1_6 ;
3359321   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
3359322   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
3359323   +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
3359324   +   H1x1_2  = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
3359325   +   H1x1_3  = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
3359326   +   H1x1_4  = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_4 = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
3359327   +   H1x1_5  = 1.0 / (1.0 + EXP(MIN( - H1x1_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_5 = 1.0 / (1.0 + EXP(MIN( - H1x1_5 , _EXP_BAR)));
3359328   +   H1x1_6  = 1.0 / (1.0 + EXP(MIN( - H1x1_6 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_6 = 1.0 / (1.0 + EXP(MIN( - H1x1_6 , _EXP_BAR)));
3359329   +END;
MPRINT(EM_DIAGRAM):   END;
3359330   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
3359331   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
3359332   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
3359333   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
3359334   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
3359335   +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
3359336   +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
3359337   +END;
MPRINT(EM_DIAGRAM):   END;
3359338   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3359339   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
3359340   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3359341   +
3359342   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
3359343   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
3359344   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
3359345   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
3359346   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
3359347   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3359348   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
3359349   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
3359350   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
3359351   +end;
MPRINT(EM_DIAGRAM):   end;
3359352   +else do;
MPRINT(EM_DIAGRAM):   else do;
3359353   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
3359354   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
3359355   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
3359356   +   end;
MPRINT(EM_DIAGRAM):   end;
3359357   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
3359358   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
3359359   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
3359360   +   end;
MPRINT(EM_DIAGRAM):   end;
3359361   +   else do;
MPRINT(EM_DIAGRAM):   else do;
3359362   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
3359363   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
3359364   +   end;
MPRINT(EM_DIAGRAM):   end;
3359365   +end;
MPRINT(EM_DIAGRAM):   end;
3359366   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
3359367   +   P_DepVar1  =     6.16204844771495 * H1x1_1  +    -7.21545236186523 * H1x1_2
3359368   +          +    -5.36324944599407 * H1x1_3  +    -11.4351776197688 * H1x1_4
3359369   +          +     9.05135439297009 * H1x1_5  +     11.1808170215866 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 6.16204844771495 * H1x1_1 + -7.21545236186523 * H1x1_2 + 
-5.36324944599407 * H1x1_3 + -11.4351776197688 * H1x1_4 + 9.05135439297009 * H1x1_5 + 
11.1808170215866 * H1x1_6 ;
3359370   +   P_DepVar1  =    -1.47727219445057 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.47727219445057 + P_DepVar1 ;
3359371   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
3359372   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
3359373   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
3359374   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
3359375   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
3359376   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
3359377   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
3359378   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
3359379   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
3359380   +END;
MPRINT(EM_DIAGRAM):   END;
3359381   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
3359382   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
3359383   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
3359384   +END;
MPRINT(EM_DIAGRAM):   END;
3359385   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
3359386   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
3359387   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
3359388   +END;
MPRINT(EM_DIAGRAM):   END;
3359389   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
3359390   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
3359391   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
3359392   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
3359393   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
3359394   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
3359395   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
3359396   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3359397   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
3359398   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3359399   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
3359400   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
3359401   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
3359402   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
3359403   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
3359404   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
3359405   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
3359406   +END;
MPRINT(EM_DIAGRAM):   END;
3359407   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
3359408   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
3359409   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
3359410   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
3359411    run;

NOTE: DATA STEP view saved on file EMWS8.AUTONEURAL35_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.META3_TRAIN.VIEW used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
      

MPRINT(EM_DIAGRAM):   quit;
3359412    quit;
3359413    filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
3359414    filename emflow
3359414  ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural35\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural35\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * AutoNeural35: Scoring VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
3359415    *------------------------------------------------------------*;
3359416    * AutoNeural35: Scoring VALIDATE data;
3359417    *------------------------------------------------------------*;
3359418    data EMWS8.AutoNeural35_VALIDATE
3359419    / view=EMWS8.AutoNeural35_VALIDATE
3359420    ;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural35_VALIDATE / view=EMWS8.AutoNeural35_VALIDATE ;
3359421    set EMWS8.Meta3_VALIDATE
3359422    ;
MPRINT(EM_DIAGRAM):   set EMWS8.Meta3_VALIDATE ;
3359423    %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural35\EMFLOWSCORE.sas.
3359424   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
3359425   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
3359426   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
3359427   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
3359428   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
3359429   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
3359430   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
3359431   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
3359432   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
3359433   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
3359434   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
3359435   +LENGTH _WARN_ $4
3359436   +      F_DepVar  $ 12
3359437   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
3359438   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
3359439   +
3359440   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
3359441   +
3359442   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
3359443   +
3359444   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
3359445   +
3359446   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
3359447   +
3359448   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
3359449   +
3359450   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
3359451   +
3359452   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
3359453   +
3359454   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
3359455   +
3359456   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
3359457   +
3359458   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
3359459   +
3359460   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
3359461   +
3359462   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
3359463   +
3359464   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
3359465   +
3359466   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
3359467   +
3359468   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
3359469   +
3359470   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
3359471   +
3359472   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
3359473   +
3359474   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
3359475   +
3359476   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
3359477   +
3359478   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
3359479   +
3359480   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
3359481   +
3359482   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
3359483   +
3359484   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
3359485   +
3359486   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
3359487   +
3359488   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
3359489   +
3359490   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
3359491   +
3359492   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
3359493   +
3359494   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
3359495   +
3359496   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
3359497   +
3359498   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
3359499   +
3359500   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
3359501   +
3359502   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
3359503   +
3359504   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
3359505   +
3359506   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
3359507   +
3359508   +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
3359509   +
3359510   +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
3359511   +
3359512   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
3359513   +
3359514   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
3359515   +
3359516   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
3359517   +
3359518   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
3359519   +
3359520   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
3359521   +
3359522   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
3359523   +
3359524   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
3359525   +
3359526   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
3359527   +
3359528   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
3359529   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
3359530   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
3359531   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
3359532   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
3359533   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3359534   +end;
MPRINT(EM_DIAGRAM):   end;
3359535   +else do;
MPRINT(EM_DIAGRAM):   else do;
3359536   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
3359537   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
3359538   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3359539   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
3359540   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
3359541   +   end;
MPRINT(EM_DIAGRAM):   end;
3359542   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
3359543   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
3359544   +   end;
MPRINT(EM_DIAGRAM):   end;
3359545   +   else do;
MPRINT(EM_DIAGRAM):   else do;
3359546   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
3359547   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
3359548   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3359549   +   end;
MPRINT(EM_DIAGRAM):   end;
3359550   +end;
MPRINT(EM_DIAGRAM):   end;
3359551   +
3359552   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
3359553   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
3359554   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
3359555   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
3359556   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
3359557   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3359558   +end;
MPRINT(EM_DIAGRAM):   end;
3359559   +else do;
MPRINT(EM_DIAGRAM):   else do;
3359560   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
3359561   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
3359562   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3359563   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
3359564   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
3359565   +   end;
MPRINT(EM_DIAGRAM):   end;
3359566   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
3359567   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
3359568   +   end;
MPRINT(EM_DIAGRAM):   end;
3359569   +   else do;
MPRINT(EM_DIAGRAM):   else do;
3359570   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
3359571   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
3359572   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3359573   +   end;
MPRINT(EM_DIAGRAM):   end;
3359574   +end;
MPRINT(EM_DIAGRAM):   end;
3359575   +
3359576   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
3359577   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
3359578   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
3359579   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
3359580   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
3359581   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3359582   +end;
MPRINT(EM_DIAGRAM):   end;
3359583   +else do;
MPRINT(EM_DIAGRAM):   else do;
3359584   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
3359585   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
3359586   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3359587   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
3359588   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
3359589   +   end;
MPRINT(EM_DIAGRAM):   end;
3359590   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
3359591   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
3359592   +   end;
MPRINT(EM_DIAGRAM):   end;
3359593   +   else do;
MPRINT(EM_DIAGRAM):   else do;
3359594   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
3359595   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
3359596   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3359597   +   end;
MPRINT(EM_DIAGRAM):   end;
3359598   +end;
MPRINT(EM_DIAGRAM):   end;
3359599   +
3359600   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
3359601   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
3359602   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
3359603   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
3359604   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
3359605   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3359606   +end;
MPRINT(EM_DIAGRAM):   end;
3359607   +else do;
MPRINT(EM_DIAGRAM):   else do;
3359608   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
3359609   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
3359610   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3359611   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
3359612   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
3359613   +   end;
MPRINT(EM_DIAGRAM):   end;
3359614   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
3359615   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
3359616   +   end;
MPRINT(EM_DIAGRAM):   end;
3359617   +   else do;
MPRINT(EM_DIAGRAM):   else do;
3359618   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
3359619   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
3359620   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3359621   +   end;
MPRINT(EM_DIAGRAM):   end;
3359622   +end;
MPRINT(EM_DIAGRAM):   end;
3359623   +
3359624   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
3359625   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
3359626   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
3359627   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
3359628   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
3359629   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3359630   +end;
MPRINT(EM_DIAGRAM):   end;
3359631   +else do;
MPRINT(EM_DIAGRAM):   else do;
3359632   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
3359633   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
3359634   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3359635   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
3359636   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
3359637   +   end;
MPRINT(EM_DIAGRAM):   end;
3359638   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
3359639   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
3359640   +   end;
MPRINT(EM_DIAGRAM):   end;
3359641   +   else do;
MPRINT(EM_DIAGRAM):   else do;
3359642   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
3359643   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
3359644   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3359645   +   end;
MPRINT(EM_DIAGRAM):   end;
3359646   +end;
MPRINT(EM_DIAGRAM):   end;
3359647   +
3359648   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
3359649   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
3359650   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
3359651   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
3359652   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
3359653   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3359654   +end;
MPRINT(EM_DIAGRAM):   end;
3359655   +else do;
MPRINT(EM_DIAGRAM):   else do;
3359656   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
3359657   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
3359658   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3359659   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
3359660   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
3359661   +   end;
MPRINT(EM_DIAGRAM):   end;
3359662   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
3359663   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
3359664   +   end;
MPRINT(EM_DIAGRAM):   end;
3359665   +   else do;
MPRINT(EM_DIAGRAM):   else do;
3359666   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
3359667   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
3359668   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3359669   +   end;
MPRINT(EM_DIAGRAM):   end;
3359670   +end;
MPRINT(EM_DIAGRAM):   end;
3359671   +
3359672   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
3359673   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
3359674   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
3359675   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
3359676   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
3359677   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3359678   +end;
MPRINT(EM_DIAGRAM):   end;
3359679   +else do;
MPRINT(EM_DIAGRAM):   else do;
3359680   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
3359681   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
3359682   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3359683   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
3359684   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
3359685   +   end;
MPRINT(EM_DIAGRAM):   end;
3359686   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
3359687   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
3359688   +   end;
MPRINT(EM_DIAGRAM):   end;
3359689   +   else do;
MPRINT(EM_DIAGRAM):   else do;
3359690   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
3359691   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
3359692   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3359693   +   end;
MPRINT(EM_DIAGRAM):   end;
3359694   +end;
MPRINT(EM_DIAGRAM):   end;
3359695   +
3359696   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
3359697   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
3359698   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
3359699   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
3359700   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
3359701   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
3359702   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
3359703   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
3359704   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
3359705   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
3359706   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
3359707   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
3359708   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
3359709   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3359710   +end;
MPRINT(EM_DIAGRAM):   end;
3359711   +else do;
MPRINT(EM_DIAGRAM):   else do;
3359712   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
3359713   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
3359714   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3359715   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
3359716   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
3359717   +   end;
MPRINT(EM_DIAGRAM):   end;
3359718   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
3359719   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
3359720   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
3359721   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
3359722   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
3359723   +   end;
MPRINT(EM_DIAGRAM):   end;
3359724   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
3359725   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
3359726   +   end;
MPRINT(EM_DIAGRAM):   end;
3359727   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
3359728   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
3359729   +   end;
MPRINT(EM_DIAGRAM):   end;
3359730   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
3359731   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
3359732   +   end;
MPRINT(EM_DIAGRAM):   end;
3359733   +   else do;
MPRINT(EM_DIAGRAM):   else do;
3359734   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
3359735   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
3359736   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
3359737   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
3359738   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
3359739   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3359740   +   end;
MPRINT(EM_DIAGRAM):   end;
3359741   +end;
MPRINT(EM_DIAGRAM):   end;
3359742   +
3359743   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
3359744   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
3359745   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
3359746   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
3359747   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
3359748   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
3359749   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
3359750   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
3359751   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
3359752   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
3359753   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
3359754   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
3359755   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
3359756   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
3359757   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3359758   +end;
MPRINT(EM_DIAGRAM):   end;
3359759   +else do;
MPRINT(EM_DIAGRAM):   else do;
3359760   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
3359761   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
3359762   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3359763   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
3359764   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
3359765   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
3359766   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
3359767   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
3359768   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3359769   +         end;
MPRINT(EM_DIAGRAM):   end;
3359770   +         else do;
MPRINT(EM_DIAGRAM):   else do;
3359771   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
3359772   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
3359773   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3359774   +            end;
MPRINT(EM_DIAGRAM):   end;
3359775   +         end;
MPRINT(EM_DIAGRAM):   end;
3359776   +      end;
MPRINT(EM_DIAGRAM):   end;
3359777   +      else do;
MPRINT(EM_DIAGRAM):   else do;
3359778   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
3359779   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
3359780   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3359781   +         end;
MPRINT(EM_DIAGRAM):   end;
3359782   +      end;
MPRINT(EM_DIAGRAM):   end;
3359783   +   end;
MPRINT(EM_DIAGRAM):   end;
3359784   +   else do;
MPRINT(EM_DIAGRAM):   else do;
3359785   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
3359786   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
3359787   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3359788   +      end;
MPRINT(EM_DIAGRAM):   end;
3359789   +      else do;
MPRINT(EM_DIAGRAM):   else do;
3359790   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
3359791   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
3359792   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
3359793   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
3359794   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
3359795   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3359796   +         end;
MPRINT(EM_DIAGRAM):   end;
3359797   +      end;
MPRINT(EM_DIAGRAM):   end;
3359798   +   end;
MPRINT(EM_DIAGRAM):   end;
3359799   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
3359800   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
3359801   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
3359802   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
3359803   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
3359804   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
3359805   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3359806   +   end;
MPRINT(EM_DIAGRAM):   end;
3359807   +end;
MPRINT(EM_DIAGRAM):   end;
3359808   +
3359809   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3359810   +*** Checking missing input Interval
3359811   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
3359812   +
3359813   +IF NMISS(
3359814   +   AcceptedCmpTotal ,
3359815   +   Age ,
3359816   +   Frq ,
3359817   +   Income ,
3359818   +   Kidhome ,
3359819   +   MntFishProducts ,
3359820   +   MntFruits ,
3359821   +   MntGoldProds ,
3359822   +   MntSweetProducts ,
3359823   +   MonthsAsCustomer ,
3359824   +   NumDealsPurchases ,
3359825   +   NumWebVisitsMonth ,
3359826   +   RFMstat ,
3359827   +   RMntFrq ,
3359828   +   Recency ,
3359829   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , 
MntFishProducts , MntFruits , MntGoldProds , MntSweetProducts , MonthsAsCustomer , 
NumDealsPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , Teenhome ) THEN DO;
3359830   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
3359831   +
3359832   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3359833   +END;
MPRINT(EM_DIAGRAM):   END;
3359834   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3359835   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
3359836   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3359837   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
3359838   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
3359839   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
3359840   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
3359841   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
3359842   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
3359843   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
3359844   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
3359845   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
3359846   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
3359847   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
3359848   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
3359849   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
3359850   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
3359851   +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
3359852   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
3359853   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
3359854   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
3359855   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
3359856   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
3359857   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
3359858   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
3359859   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
3359860   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
3359861   +END;
MPRINT(EM_DIAGRAM):   END;
3359862   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
3359863   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
3359864   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
3359865   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
3359866   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
3359867   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
3359868   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
3359869   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
3359870   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
3359871   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
3359872   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
3359873   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
3359874   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
3359875   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
3359876   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
3359877   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
3359878   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
3359879   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
3359880   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
3359881   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
3359882   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
3359883   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
3359884   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
3359885   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
3359886   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
3359887   +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
3359888   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
3359889   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
3359890   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
3359891   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
3359892   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
3359893   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
3359894   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
3359895   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
3359896   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
3359897   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
3359898   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
3359899   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
3359900   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
3359901   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
3359902   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
3359903   +END;
MPRINT(EM_DIAGRAM):   END;
3359904   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3359905   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
3359906   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3359907   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3359908   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
3359909   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3359910   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3359911   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
3359912   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3359913   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
3359914   +   H1x1_1  =     0.42585587882538 * S_AcceptedCmpTotal
3359915   +          +    -0.43032612946411 * S_Age  +    -1.84723116954266 * S_Frq
3359916   +          +    -0.09376996424096 * S_Income  +    -0.63457337145111 *
3359917   +        S_Kidhome  +    -1.07062735228011 * S_MntFishProducts
3359918   +          +    -0.39750126211014 * S_MntFruits  +     0.87836102594883 *
3359919   +        S_MntGoldProds  +     4.02875150179318 * S_MntSweetProducts
3359920   +          +    -0.63886071804247 * S_MonthsAsCustomer
3359921   +          +      2.3488612891037 * S_NumDealsPurchases
3359922   +          +     2.32996461229282 * S_NumWebVisitsMonth
3359923   +          +     3.26514327762389 * S_RFMstat  +     0.81545333248878 *
3359924   +        S_RMntFrq  +    -3.18599476886695 * S_Recency
3359925   +          +    -0.36606572424478 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.42585587882538 * S_AcceptedCmpTotal + -0.43032612946411 * 
S_Age + -1.84723116954266 * S_Frq + -0.09376996424096 * S_Income + -0.63457337145111 * 
S_Kidhome + -1.07062735228011 * S_MntFishProducts + -0.39750126211014 * S_MntFruits + 
0.87836102594883 * S_MntGoldProds + 4.02875150179318 * S_MntSweetProducts + -0.63886071804247 
* S_MonthsAsCustomer + 2.3488612891037 * S_NumDealsPurchases + 2.32996461229282 * 
S_NumWebVisitsMonth + 3.26514327762389 * S_RFMstat + 0.81545333248878 * S_RMntFrq + 
-3.18599476886695 * S_Recency + -0.36606572424478 * S_Teenhome ;
3359926   +   H1x1_2  =     -0.3238529971058 * S_AcceptedCmpTotal
3359927   +          +     0.01122128383802 * S_Age  +    -1.81697004648061 * S_Frq
3359928   +          +     0.27195583458212 * S_Income  +     2.44028375867625 *
3359929   +        S_Kidhome  +     0.03188165765923 * S_MntFishProducts
3359930   +          +     0.28741461463462 * S_MntFruits  +     0.91740540315279 *
3359931   +        S_MntGoldProds  +     1.53257516137636 * S_MntSweetProducts
3359932   +          +     0.67699646331113 * S_MonthsAsCustomer
3359933   +          +     0.70523055739254 * S_NumDealsPurchases
3359934   +          +    -2.06406682205141 * S_NumWebVisitsMonth
3359935   +          +    -0.07912192803919 * S_RFMstat  +     -0.1981410297834 *
3359936   +        S_RMntFrq  +      5.0273672656487 * S_Recency
3359937   +          +      1.7761639681499 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.3238529971058 * S_AcceptedCmpTotal + 0.01122128383802 * 
S_Age + -1.81697004648061 * S_Frq + 0.27195583458212 * S_Income + 2.44028375867625 * S_Kidhome 
+ 0.03188165765923 * S_MntFishProducts + 0.28741461463462 * S_MntFruits + 0.91740540315279 * 
S_MntGoldProds + 1.53257516137636 * S_MntSweetProducts + 0.67699646331113 * S_MonthsAsCustomer 
+ 0.70523055739254 * S_NumDealsPurchases + -2.06406682205141 * S_NumWebVisitsMonth + 
-0.07912192803919 * S_RFMstat + -0.1981410297834 * S_RMntFrq + 5.0273672656487 * S_Recency + 
1.7761639681499 * S_Teenhome ;
3359938   +   H1x1_3  =    -0.31627698433663 * S_AcceptedCmpTotal
3359939   +          +    -1.66608599580569 * S_Age  +     3.03276701042245 * S_Frq
3359940   +          +    -1.55807144100301 * S_Income  +    -1.61052956577749 *
3359941   +        S_Kidhome  +    -1.13374850666912 * S_MntFishProducts
3359942   +          +     1.69712033465415 * S_MntFruits  +     -0.0956378742157 *
3359943   +        S_MntGoldProds  +     0.42344107897201 * S_MntSweetProducts
3359944   +          +    -0.53694216899543 * S_MonthsAsCustomer
3359945   +          +     0.25908508836257 * S_NumDealsPurchases
3359946   +          +    -1.18459231573601 * S_NumWebVisitsMonth
3359947   +          +    -0.91952963382786 * S_RFMstat  +     1.14118358901223 *
3359948   +        S_RMntFrq  +    -1.22457627833901 * S_Recency
3359949   +          +     0.58418149816249 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.31627698433663 * S_AcceptedCmpTotal + -1.66608599580569 * 
S_Age + 3.03276701042245 * S_Frq + -1.55807144100301 * S_Income + -1.61052956577749 * 
S_Kidhome + -1.13374850666912 * S_MntFishProducts + 1.69712033465415 * S_MntFruits + 
-0.0956378742157 * S_MntGoldProds + 0.42344107897201 * S_MntSweetProducts + -0.53694216899543 
* S_MonthsAsCustomer + 0.25908508836257 * S_NumDealsPurchases + -1.18459231573601 * 
S_NumWebVisitsMonth + -0.91952963382786 * S_RFMstat + 1.14118358901223 * S_RMntFrq + 
-1.22457627833901 * S_Recency + 0.58418149816249 * S_Teenhome ;
3359950   +   H1x1_4  =    -0.18730828314928 * S_AcceptedCmpTotal
3359951   +          +     0.44335866520169 * S_Age  +    -0.52967041213464 * S_Frq
3359952   +          +    -2.49889000722688 * S_Income  +     2.09225176560102 *
3359953   +        S_Kidhome  +     -0.0365038378872 * S_MntFishProducts
3359954   +          +    -0.27687707269551 * S_MntFruits  +     0.22172940394581 *
3359955   +        S_MntGoldProds  +     1.18008846653352 * S_MntSweetProducts
3359956   +          +    -0.08931078748332 * S_MonthsAsCustomer
3359957   +          +    -0.46561962814047 * S_NumDealsPurchases
3359958   +          +    -0.12241295445297 * S_NumWebVisitsMonth
3359959   +          +    -0.88584926273299 * S_RFMstat  +    -0.19321792123793 *
3359960   +        S_RMntFrq  +     0.96804234233608 * S_Recency
3359961   +          +     2.36799993608153 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -0.18730828314928 * S_AcceptedCmpTotal + 0.44335866520169 * 
S_Age + -0.52967041213464 * S_Frq + -2.49889000722688 * S_Income + 2.09225176560102 * 
S_Kidhome + -0.0365038378872 * S_MntFishProducts + -0.27687707269551 * S_MntFruits + 
0.22172940394581 * S_MntGoldProds + 1.18008846653352 * S_MntSweetProducts + -0.08931078748332 
* S_MonthsAsCustomer + -0.46561962814047 * S_NumDealsPurchases + -0.12241295445297 * 
S_NumWebVisitsMonth + -0.88584926273299 * S_RFMstat + -0.19321792123793 * S_RMntFrq + 
0.96804234233608 * S_Recency + 2.36799993608153 * S_Teenhome ;
3359962   +   H1x1_5  =    -0.61669680820161 * S_AcceptedCmpTotal
3359963   +          +    -2.33152931225693 * S_Age  +    -5.55252945538268 * S_Frq
3359964   +          +    -1.27866281458938 * S_Income  +     0.57490346430235 *
3359965   +        S_Kidhome  +    -0.72481428507501 * S_MntFishProducts
3359966   +          +     1.09506142984139 * S_MntFruits  +     0.13317961278198 *
3359967   +        S_MntGoldProds  +    -0.09910013481931 * S_MntSweetProducts
3359968   +          +     -0.9186653552138 * S_MonthsAsCustomer
3359969   +          +     2.17624393037629 * S_NumDealsPurchases
3359970   +          +    -0.41699900714758 * S_NumWebVisitsMonth
3359971   +          +     0.90353546864265 * S_RFMstat  +      1.3997584305474 *
3359972   +        S_RMntFrq  +    -0.28987089218356 * S_Recency
3359973   +          +     1.91100508225075 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -0.61669680820161 * S_AcceptedCmpTotal + -2.33152931225693 * 
S_Age + -5.55252945538268 * S_Frq + -1.27866281458938 * S_Income + 0.57490346430235 * 
S_Kidhome + -0.72481428507501 * S_MntFishProducts + 1.09506142984139 * S_MntFruits + 
0.13317961278198 * S_MntGoldProds + -0.09910013481931 * S_MntSweetProducts + -0.9186653552138 
* S_MonthsAsCustomer + 2.17624393037629 * S_NumDealsPurchases + -0.41699900714758 * 
S_NumWebVisitsMonth + 0.90353546864265 * S_RFMstat + 1.3997584305474 * S_RMntFrq + 
-0.28987089218356 * S_Recency + 1.91100508225075 * S_Teenhome ;
3359974   +   H1x1_6  =     2.41979447479877 * S_AcceptedCmpTotal
3359975   +          +    -0.20582802429798 * S_Age  +     1.18277101919857 * S_Frq
3359976   +          +     0.52347523464991 * S_Income  +     0.59569652351781 *
3359977   +        S_Kidhome  +    -0.48037342144038 * S_MntFishProducts
3359978   +          +    -0.75448191371446 * S_MntFruits  +     0.93881795060256 *
3359979   +        S_MntGoldProds  +    -1.19303493808819 * S_MntSweetProducts
3359980   +          +     1.32865070741283 * S_MonthsAsCustomer
3359981   +          +      0.8173864987673 * S_NumDealsPurchases
3359982   +          +     1.04804775338375 * S_NumWebVisitsMonth
3359983   +          +    -1.72946268323829 * S_RFMstat  +     3.74278593401599 *
3359984   +        S_RMntFrq  +     0.08690587270493 * S_Recency
3359985   +          +     0.02047957204463 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_6 = 2.41979447479877 * S_AcceptedCmpTotal + -0.20582802429798 * 
S_Age + 1.18277101919857 * S_Frq + 0.52347523464991 * S_Income + 0.59569652351781 * S_Kidhome 
+ -0.48037342144038 * S_MntFishProducts + -0.75448191371446 * S_MntFruits + 0.93881795060256 * 
S_MntGoldProds + -1.19303493808819 * S_MntSweetProducts + 1.32865070741283 * 
S_MonthsAsCustomer + 0.8173864987673 * S_NumDealsPurchases + 1.04804775338375 * 
S_NumWebVisitsMonth + -1.72946268323829 * S_RFMstat + 3.74278593401599 * S_RMntFrq + 
0.08690587270493 * S_Recency + 0.02047957204463 * S_Teenhome ;
3359986   +   H1x1_1  = H1x1_1  +    -1.50344324990897 * AcceptedCmp10
3359987   +          +    -0.20978380766564 * AcceptedCmp20  +    -0.59285418034505 *
3359988   +        AcceptedCmp30  +    -0.17149392972569 * AcceptedCmp40
3359989   +          +     0.45249707477318 * AcceptedCmp50  +    -0.65327760824746 *
3359990   +        Complain0  +     1.42156460466466 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -1.50344324990897 * AcceptedCmp10 + -0.20978380766564 
* AcceptedCmp20 + -0.59285418034505 * AcceptedCmp30 + -0.17149392972569 * AcceptedCmp40 + 
0.45249707477318 * AcceptedCmp50 + -0.65327760824746 * Complain0 + 1.42156460466466 * 
HigherEducationBinary0 ;
3359991   +   H1x1_2  = H1x1_2  +    -1.24289798004439 * AcceptedCmp10
3359992   +          +     1.24624979457488 * AcceptedCmp20  +     0.33144842139218 *
3359993   +        AcceptedCmp30  +     -0.4872034456722 * AcceptedCmp40
3359994   +          +     1.28997041867854 * AcceptedCmp50  +     -1.5327032066878 *
3359995   +        Complain0  +     1.91778569876362 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -1.24289798004439 * AcceptedCmp10 + 1.24624979457488 * 
AcceptedCmp20 + 0.33144842139218 * AcceptedCmp30 + -0.4872034456722 * AcceptedCmp40 + 
1.28997041867854 * AcceptedCmp50 + -1.5327032066878 * Complain0 + 1.91778569876362 * 
HigherEducationBinary0 ;
3359996   +   H1x1_3  = H1x1_3  +     0.87922911399007 * AcceptedCmp10
3359997   +          +    -0.94787288066533 * AcceptedCmp20  +     2.04527234601749 *
3359998   +        AcceptedCmp30  +     0.24833213694075 * AcceptedCmp40
3359999   +          +     1.60900434754659 * AcceptedCmp50  +    -0.55004614971759 *
3360000   +        Complain0  +     0.61774573286103 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.87922911399007 * AcceptedCmp10 + -0.94787288066533 * 
AcceptedCmp20 + 2.04527234601749 * AcceptedCmp30 + 0.24833213694075 * AcceptedCmp40 + 
1.60900434754659 * AcceptedCmp50 + -0.55004614971759 * Complain0 + 0.61774573286103 * 
HigherEducationBinary0 ;
3360001   +   H1x1_4  = H1x1_4  +     0.86935835312931 * AcceptedCmp10
3360002   +          +     0.86645335600811 * AcceptedCmp20  +     0.88117597493148 *
3360003   +        AcceptedCmp30  +     0.81675523083166 * AcceptedCmp40
3360004   +          +     0.19025673240958 * AcceptedCmp50  +     0.88726242767978 *
3360005   +        Complain0  +    -1.77794504788307 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + 0.86935835312931 * AcceptedCmp10 + 0.86645335600811 * 
AcceptedCmp20 + 0.88117597493148 * AcceptedCmp30 + 0.81675523083166 * AcceptedCmp40 + 
0.19025673240958 * AcceptedCmp50 + 0.88726242767978 * Complain0 + -1.77794504788307 * 
HigherEducationBinary0 ;
3360006   +   H1x1_5  = H1x1_5  +    -1.31606378982907 * AcceptedCmp10
3360007   +          +    -2.73475337981814 * AcceptedCmp20  +    -0.70870498104131 *
3360008   +        AcceptedCmp30  +    -1.05303367791364 * AcceptedCmp40
3360009   +          +    -0.04198792844785 * AcceptedCmp50  +     0.05756398556346 *
3360010   +        Complain0  +     1.03743504565535 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -1.31606378982907 * AcceptedCmp10 + -2.73475337981814 
* AcceptedCmp20 + -0.70870498104131 * AcceptedCmp30 + -1.05303367791364 * AcceptedCmp40 + 
-0.04198792844785 * AcceptedCmp50 + 0.05756398556346 * Complain0 + 1.03743504565535 * 
HigherEducationBinary0 ;
3360011   +   H1x1_6  = H1x1_6  +    -0.34885584282455 * AcceptedCmp10
3360012   +          +     1.03682337828657 * AcceptedCmp20  +     0.42400668101582 *
3360013   +        AcceptedCmp30  +     0.21978456990971 * AcceptedCmp40
3360014   +          +    -0.07932087917736 * AcceptedCmp50  +      0.8792580651126 *
3360015   +        Complain0  +    -1.32868689587866 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + -0.34885584282455 * AcceptedCmp10 + 1.03682337828657 * 
AcceptedCmp20 + 0.42400668101582 * AcceptedCmp30 + 0.21978456990971 * AcceptedCmp40 + 
-0.07932087917736 * AcceptedCmp50 + 0.8792580651126 * Complain0 + -1.32868689587866 * 
HigherEducationBinary0 ;
3360016   +   H1x1_1  = H1x1_1  +     1.22170418338538 * Education2n_Cycle
3360017   +          +    -0.89708584095759 * EducationBasic  +     0.14600831823121 *
3360018   +        EducationGraduation  +    -0.31624019107181 * EducationMaster
3360019   +          +    -0.82783034099773 * Marital_StatusDivorced
3360020   +          +     0.39651075241405 * Marital_StatusMarried
3360021   +          +     0.17323156170107 * Marital_StatusSingle
3360022   +          +    -0.15463096860068 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 1.22170418338538 * Education2n_Cycle + 
-0.89708584095759 * EducationBasic + 0.14600831823121 * EducationGraduation + 
-0.31624019107181 * EducationMaster + -0.82783034099773 * Marital_StatusDivorced + 
0.39651075241405 * Marital_StatusMarried + 0.17323156170107 * Marital_StatusSingle + 
-0.15463096860068 * Marital_StatusTogether ;
3360023   +   H1x1_2  = H1x1_2  +     0.58978972451291 * Education2n_Cycle
3360024   +          +     0.19362558984066 * EducationBasic  +    -1.26231294369002 *
3360025   +        EducationGraduation  +    -0.05323450200928 * EducationMaster
3360026   +          +    -2.42314580112302 * Marital_StatusDivorced
3360027   +          +     1.72709251267075 * Marital_StatusMarried
3360028   +          +    -0.94350561587168 * Marital_StatusSingle
3360029   +          +      0.7843550906207 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.58978972451291 * Education2n_Cycle + 
0.19362558984066 * EducationBasic + -1.26231294369002 * EducationGraduation + 
-0.05323450200928 * EducationMaster + -2.42314580112302 * Marital_StatusDivorced + 
1.72709251267075 * Marital_StatusMarried + -0.94350561587168 * Marital_StatusSingle + 
0.7843550906207 * Marital_StatusTogether ;
3360030   +   H1x1_3  = H1x1_3  +    -0.72941468865776 * Education2n_Cycle
3360031   +          +    -0.36115614328883 * EducationBasic  +    -1.74898957297891 *
3360032   +        EducationGraduation  +    -1.41317064722862 * EducationMaster
3360033   +          +    -1.25323701705333 * Marital_StatusDivorced
3360034   +          +    -0.72618091015379 * Marital_StatusMarried
3360035   +          +     0.20594885266863 * Marital_StatusSingle
3360036   +          +     1.01375770093502 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.72941468865776 * Education2n_Cycle + 
-0.36115614328883 * EducationBasic + -1.74898957297891 * EducationGraduation + 
-1.41317064722862 * EducationMaster + -1.25323701705333 * Marital_StatusDivorced + 
-0.72618091015379 * Marital_StatusMarried + 0.20594885266863 * Marital_StatusSingle + 
1.01375770093502 * Marital_StatusTogether ;
3360037   +   H1x1_4  = H1x1_4  +     0.50789594186684 * Education2n_Cycle
3360038   +          +     -1.1844688511224 * EducationBasic  +     0.58416148321529 *
3360039   +        EducationGraduation  +     0.75559299844055 * EducationMaster
3360040   +          +     -0.9159957275063 * Marital_StatusDivorced
3360041   +          +     2.06164757358796 * Marital_StatusMarried
3360042   +          +    -1.61544310412168 * Marital_StatusSingle
3360043   +          +     2.48191290499231 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + 0.50789594186684 * Education2n_Cycle + 
-1.1844688511224 * EducationBasic + 0.58416148321529 * EducationGraduation + 0.75559299844055 
* EducationMaster + -0.9159957275063 * Marital_StatusDivorced + 2.06164757358796 * 
Marital_StatusMarried + -1.61544310412168 * Marital_StatusSingle + 2.48191290499231 * 
Marital_StatusTogether ;
3360044   +   H1x1_5  = H1x1_5  +    -0.12718285014627 * Education2n_Cycle
3360045   +          +    -1.15731060601092 * EducationBasic  +    -2.27989707190272 *
3360046   +        EducationGraduation  +     0.27594869585414 * EducationMaster
3360047   +          +    -0.72418104768251 * Marital_StatusDivorced
3360048   +          +     0.51077116161056 * Marital_StatusMarried
3360049   +          +     -2.0857896888723 * Marital_StatusSingle
3360050   +          +     1.23349520338513 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.12718285014627 * Education2n_Cycle + 
-1.15731060601092 * EducationBasic + -2.27989707190272 * EducationGraduation + 
0.27594869585414 * EducationMaster + -0.72418104768251 * Marital_StatusDivorced + 
0.51077116161056 * Marital_StatusMarried + -2.0857896888723 * Marital_StatusSingle + 
1.23349520338513 * Marital_StatusTogether ;
3360051   +   H1x1_6  = H1x1_6  +    -0.27482868097878 * Education2n_Cycle
3360052   +          +     0.43660267071317 * EducationBasic  +     2.25751743331526 *
3360053   +        EducationGraduation  +     -0.7287361872795 * EducationMaster
3360054   +          +     0.64139965212864 * Marital_StatusDivorced
3360055   +          +    -1.52338846336783 * Marital_StatusMarried
3360056   +          +     1.94794784762286 * Marital_StatusSingle
3360057   +          +     -0.8708272739488 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + -0.27482868097878 * Education2n_Cycle + 
0.43660267071317 * EducationBasic + 2.25751743331526 * EducationGraduation + -0.7287361872795 
* EducationMaster + 0.64139965212864 * Marital_StatusDivorced + -1.52338846336783 * 
Marital_StatusMarried + 1.94794784762286 * Marital_StatusSingle + -0.8708272739488 * 
Marital_StatusTogether ;
3360058   +   H1x1_1  =    -0.50508246154341 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.50508246154341 + H1x1_1 ;
3360059   +   H1x1_2  =     0.29227723492853 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.29227723492853 + H1x1_2 ;
3360060   +   H1x1_3  =     0.87104310832885 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.87104310832885 + H1x1_3 ;
3360061   +   H1x1_4  =     1.73967602723421 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 1.73967602723421 + H1x1_4 ;
3360062   +   H1x1_5  =    -2.04513596136193 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -2.04513596136193 + H1x1_5 ;
3360063   +   H1x1_6  =     2.15101812022157 + H1x1_6 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = 2.15101812022157 + H1x1_6 ;
3360064   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
3360065   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
3360066   +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
3360067   +   H1x1_2  = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
3360068   +   H1x1_3  = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
3360069   +   H1x1_4  = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_4 = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
3360070   +   H1x1_5  = 1.0 / (1.0 + EXP(MIN( - H1x1_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_5 = 1.0 / (1.0 + EXP(MIN( - H1x1_5 , _EXP_BAR)));
3360071   +   H1x1_6  = 1.0 / (1.0 + EXP(MIN( - H1x1_6 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_6 = 1.0 / (1.0 + EXP(MIN( - H1x1_6 , _EXP_BAR)));
3360072   +END;
MPRINT(EM_DIAGRAM):   END;
3360073   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
3360074   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
3360075   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
3360076   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
3360077   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
3360078   +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
3360079   +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
3360080   +END;
MPRINT(EM_DIAGRAM):   END;
3360081   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3360082   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
3360083   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3360084   +
3360085   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
3360086   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
3360087   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
3360088   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
3360089   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
3360090   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3360091   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
3360092   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
3360093   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
3360094   +end;
MPRINT(EM_DIAGRAM):   end;
3360095   +else do;
MPRINT(EM_DIAGRAM):   else do;
3360096   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
3360097   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
3360098   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
3360099   +   end;
MPRINT(EM_DIAGRAM):   end;
3360100   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
3360101   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
3360102   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
3360103   +   end;
MPRINT(EM_DIAGRAM):   end;
3360104   +   else do;
MPRINT(EM_DIAGRAM):   else do;
3360105   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
3360106   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
3360107   +   end;
MPRINT(EM_DIAGRAM):   end;
3360108   +end;
MPRINT(EM_DIAGRAM):   end;
3360109   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
3360110   +   P_DepVar1  =     6.16204844771495 * H1x1_1  +    -7.21545236186523 * H1x1_2
3360111   +          +    -5.36324944599407 * H1x1_3  +    -11.4351776197688 * H1x1_4
3360112   +          +     9.05135439297009 * H1x1_5  +     11.1808170215866 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 6.16204844771495 * H1x1_1 + -7.21545236186523 * H1x1_2 + 
-5.36324944599407 * H1x1_3 + -11.4351776197688 * H1x1_4 + 9.05135439297009 * H1x1_5 + 
11.1808170215866 * H1x1_6 ;
3360113   +   P_DepVar1  =    -1.47727219445057 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.47727219445057 + P_DepVar1 ;
3360114   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
3360115   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
3360116   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
3360117   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
3360118   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
3360119   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
3360120   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
3360121   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
3360122   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
3360123   +END;
MPRINT(EM_DIAGRAM):   END;
3360124   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
3360125   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
3360126   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
3360127   +END;
MPRINT(EM_DIAGRAM):   END;
3360128   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
3360129   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
3360130   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
3360131   +END;
MPRINT(EM_DIAGRAM):   END;
3360132   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
3360133   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
3360134   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
3360135   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
3360136   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
3360137   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
3360138   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
3360139   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3360140   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
3360141   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3360142   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
3360143   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
3360144   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
3360145   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
3360146   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
3360147   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
3360148   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
3360149   +END;
MPRINT(EM_DIAGRAM):   END;
3360150   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
3360151   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
3360152   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
3360153   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
3360154    run;

NOTE: DATA STEP view saved on file EMWS8.AUTONEURAL35_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.META3_VALIDATE.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(EM_DIAGRAM):   quit;
3360155    quit;
3360156    filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
3360157    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
3360158    * AutoNeural35: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * AutoNeural35: Computing metadata for TRAIN data;
3360159    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;

NOTE: View EMWS8.AUTONEURAL35_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural35\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS8.AutoNeural35_TRAIN out=_tempAdvisor 
noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS8.AutoNeural35_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS8.AutoNeural35_TRAIN out=WORK.M3KFAED0 
noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3KFAED0;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20 
INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M3KFAED0(keep=name type length label format formatl 
formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then format = strip(format)!!strip(put(formatl, 
best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, 
best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then informat = 
strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, 
best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3KFAED0;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M3KFAED0;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M12NGHYN NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M12NGHYN;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M12NGHYN;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3R8CI_U(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M12NGHYN;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M12NGHYN;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 
FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M12NGHYN;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" 
"MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" 
"QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" "YEAR" "YYMMDD" "YYMON" 
"YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" 
"EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) 
formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = 
"DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) 
formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" 
"NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" 
"SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = 
"DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then 
level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 
'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 
'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ 
('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 
'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 
'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M12NGHYN;
MPRINT(EMADVISECOLUMNS):   set WORK.M12NGHYN;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= 
"Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= 
"Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower limit" UPPERLIMIT= 
"Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= 
"Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Meta3_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Meta3_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural35_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT 
LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "AutoNeural35";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("P_DEPVAR1") creator = "AutoNeural35";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR1") creator = "AutoNeural35";
MPRINT(EM_DIAGRAM):   when("P_DEPVAR0") creator = "AutoNeural35";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR0") creator = "AutoNeural35";
MPRINT(EM_DIAGRAM):   when("F_DEPVAR") creator = "AutoNeural35";
MPRINT(EM_DIAGRAM):   when("I_DEPVAR") creator = "AutoNeural35";
MPRINT(EM_DIAGRAM):   when("U_DEPVAR") creator = "AutoNeural35";
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "AutoNeural35";
MPRINT(EM_DIAGRAM):   when("DEPVAR") model = "AutoNeural35";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * AutoNeural35: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
3360471    data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
3360472    set EMWS8.AutoNeural35_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural35_EMINFO;
3360473    where DATA='AutoNeural35' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='AutoNeural35' and KEY ^in('DECDATA', 'DECMETA', 
'IMPORTANCE', 'MODEL');
3360474    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.AUTONEURAL35_EMINFO.
      WHERE (DATA='AutoNeural35') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

3360475    data EMWS8.AutoNeural35_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural35_EMINFO;
3360476    length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
3360477    input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
3360478    cards;
MPRINT(EM_DIAGRAM):   cards;

NOTE: The data set EMWS8.AUTONEURAL35_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   run;
3360482    run;
3360483    data EMWS8.AutoNeural35_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural35_EMINFO;
3360484    set EMWS8.AutoNeural35_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural35_EMINFO WORK.MODELTEMP_INFO;
3360485    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.AUTONEURAL35_EMINFO.
NOTE: There were 0 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS8.AUTONEURAL35_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

3360486    proc sort data = EMWS8.AutoNeural35_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.AutoNeural35_EMINFO NOTHREADS;
3360487    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
3360488    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.AUTONEURAL35_EMINFO.
NOTE: The data set EMWS8.AUTONEURAL35_EMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

3360489    proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
3360490    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
3360491    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set EMWS8.FIMPORT_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 1 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

3360492    proc sort data = EMWS8.AutoNeural35_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS8.AutoNeural35_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
3360493    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
3360494    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 3 observations read from the data set EMWS8.AUTONEURAL35_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

3360495    data EMWS8.AutoNeural35_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural35_EMINFO;
3360496    merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
3360497    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
3360498    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 3 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS8.AUTONEURAL35_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

3360499    proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
3360500    delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
3360501    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
3360502    quit;
MPRINT(EM_DIAGRAM):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
      

NOTE: View EMWS8.AUTONEURAL35_TRAIN.VIEW used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      
NOTE: View EMWS8.AUTONEURAL35_VALIDATE.VIEW used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
      
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
