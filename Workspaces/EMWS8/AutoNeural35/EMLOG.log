*------------------------------------------------------------*
User:                Lukas Fahr
Date:                28. April 2016
Time:                20.19 Uhr
Site:                70107571
Platform:            X64_7PRO
Maintenance Release: 9.03.01M2P081512
EM Version:          12.1
* 
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "28. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "20.14 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Training Log
Date:                28. April 2016
Time:                20.14 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O263EERS
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural35\EMTRAIN.out" encoding="UTF-8"
NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O263EERS new;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOG
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural35\EMLOG.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "28. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "20.14 Uhr" );
MPRINT(EM_DIAGRAM):   file _LOG;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                Lukas Fahr";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "Site:                70107571";
MPRINT(EM_DIAGRAM):   put "Platform:            X64_7PRO";
MPRINT(EM_DIAGRAM):   put "Maintenance Release: 9.03.01M2P081512";
MPRINT(EM_DIAGRAM):   put "EM Version:          12.1";
MPRINT(EM_DIAGRAM):   put "* ";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural35\EMTRAIN.log" encoding="UTF-8"
NOBOM;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _LOG MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_LOGIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _LOGIN
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural35\EMSCORE.log" encoding="UTF-8"
NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural35\EMREPORT.log" encoding="UTF-8"
NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    filename _LOG;
MPRINT(EM_DIAGRAM):    filename _OUT
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural35\EMOUTPUT.out" encoding="UTF-8"
NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "28. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "20.14 Uhr" );
MPRINT(EM_DIAGRAM):   file _OUT;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                Lukas Fahr";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural35\EMTRAIN.out" encoding="UTF-8"
NOBOM;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _OUT MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_OUTIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural35\EMSCORE.out" encoding="UTF-8"
NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural35\EMREPORT.out" encoding="UTF-8"
NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    filename _OUT;
MPRINT(EM_DIAGRAM):    filename _emtool_
'C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural35\EMRUNSTATUS.xml' encoding="UTF-8"
NOBOM;
993839     proc freq data=EMWS8.AutoNeural35_VariableSet noprint;
MPRINT(EM_DIAGRAM):    proc freq data=EMWS8.AutoNeural35_VariableSet noprint;
993840     table ROLE*LEVEL/out=WORK.AutoNeural35META;
MPRINT(EM_DIAGRAM):   table ROLE*LEVEL/out=WORK.AutoNeural35META;
993841     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set EMWS8.AUTONEURAL35_VARIABLESET.
NOTE: The data set WORK.AUTONEURAL35META has 6 observations and 4 variables.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
993842     proc print data=WORK.AutoNeural35META label noobs;
MPRINT(EM_DIAGRAM):   proc print data=WORK.AutoNeural35META label noobs;
993843     var ROLE LEVEL COUNT;
MPRINT(EM_DIAGRAM):   var ROLE LEVEL COUNT;
993844     label ROLE = "%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel, NOQUOTE))" LEVEL =
993844   ! "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" COUNT =
993844   ! "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label ROLE = "Role" LEVEL = "Measurement Level" COUNT = "Frequency
Count";
993845     title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
993846     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_varSummary_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Variable Summary";
MPRINT(EM_DIAGRAM):   run;
993847     run;
 
NOTE: There were 6 observations read from the data set WORK.AUTONEURAL35META.
NOTE: The PROCEDURE PRINT printed page 939.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
993848     title10;
MPRINT(EM_DIAGRAM):   title10;
993849     %let EMNORLEN = %DMNORLEN;
MPRINT(EM_DIAGRAM):
EMWS8.Meta3_TRAIN EMWS8.Meta3_TRAIN
EMWS8.Meta3_TRAIN EMWS8.Meta3_TRAIN EMWS8 Meta3_TRAIN
EMWS8.Meta3_TRAIN EMWS8.Meta3_TRAIN
EMWS8.Meta3_TRAIN EMWS8.Meta3_TRAIN EMWS8 Meta3_TRAIN
MPRINT(EM_DIAGRAM):    proc dmdb data=EMWS8.Meta3_TRAIN
classout=WORK._DMDBCLASSTARGET(keep=NAME NRAW CRAW LEVEL FREQUENCY NMISSPERCENT);
MPRINT(EM_DIAGRAM):   class DepVar(DESC) ;
MPRINT(EM_DIAGRAM):   run;
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _INIT >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL setMetaData >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL setMetaData >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _term >>
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set WORK._DMDBCLASSTARGET;
MPRINT(EM_DIAGRAM):   where ^(NRAW eq . and CRAW eq '') and NAME="DepVar";
MPRINT(EM_DIAGRAM):   if _N_=1 then call symput('_newevent', strip(LEVEL));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK._DMDBCLASSTARGET out=_TEMPCLASS(keep=LEVEL FREQUENCY
NMISSPERCENT rename=(LEVEL=DepVar));
MPRINT(EM_DIAGRAM):   by LEVEL;
MPRINT(EM_DIAGRAM):   where ^(NRAW eq . and CRAW eq '') and NAME="DepVar";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _TEMPCLASS;
MPRINT(EM_DIAGRAM):   set _TEMPCLASS;
MPRINT(EM_DIAGRAM):   NMISSPERCENT= NMISSPERCENT/100;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _sortedDecData;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural35_DepVar_DD;
MPRINT(EM_DIAGRAM):   _levelorder_=_N_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_sortedDecdata;
MPRINT(EM_DIAGRAM):   by DepVar;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   merge _TEMPCLASS(in=_a) _sortedDecdata(in=_b);
MPRINT(EM_DIAGRAM):   by DepVar;
MPRINT(EM_DIAGRAM):   if (_a and ^_b) or (^_a and _b) then call symput('_emresetDec', '1');
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural35_DepVar_DD;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural35_DepVar_DD;
MPRINT(EM_DIAGRAM):   _levelorder_=_N_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural35_DepVar_DD;
MPRINT(EM_DIAGRAM):   by DepVar;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural35_DepVar_DD;
MPRINT(EM_DIAGRAM):   merge EMWS8.AutoNeural35_DepVar_DD
_TEMPCLASS(rename=(NMISSPERCENT=TRAINPRIOR FREQUENCY=COUNT));
MPRINT(EM_DIAGRAM):   by DepVar;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural35_DepVar_DD
out=EMWS8.AutoNeural35_DepVar_DD(drop=_levelorder_);
MPRINT(EM_DIAGRAM):   by _levelorder_;
MPRINT(EM_DIAGRAM):   run;
993896     data WORK.AutoNeural35_EVENT(KEEP=VARIABLE LABEL LEVEL EVENT NUMLEVELS ORDER);
MPRINT(EM_DIAGRAM):    data WORK.AutoNeural35_EVENT(KEEP=VARIABLE LABEL LEVEL EVENT NUMLEVELS
ORDER);
993897     length ORDER $20;
MPRINT(EM_DIAGRAM):   length ORDER $20;
993898     label VARIABLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel,  NOQUOTE))"
993898   ! EVENT = "%sysfunc(sasmsg(sashelp.dmine, assmt_event_vlabel, NOQUOTE))" NUMLEVELS =
993898   ! "%sysfunc(sasmsg(sashelp.dmine, rpt_numcat_vlabel, NOQUOTE))" LEVEL =
993899        "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" ORDER =
993899   ! "%sysfunc(sasmsg(sashelp.dmine, meta_order_vlabel, NOQUOTE))" LABEL =
993899   ! "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label VARIABLE = "Target" EVENT = "Event" NUMLEVELS = "Number of Levels"
LEVEL = "Measurement Level" ORDER = "Order" LABEL = "Label";
993900     set EMWS8.AUTONEURAL35_DEPVAR_DM( where=(_TYPE_="TARGET"));
MPRINT(EM_DIAGRAM):   set EMWS8.AUTONEURAL35_DEPVAR_DM( where=(_TYPE_="TARGET"));
993901     NumLevels=2;
MPRINT(EM_DIAGRAM):   NumLevels=2;
993902     select(upcase(ORDER));
MPRINT(EM_DIAGRAM):   select(upcase(ORDER));
993903     when('DESC') ORDER = 'Descending';
MPRINT(EM_DIAGRAM):   when('DESC') ORDER = 'Descending';
993904     when('ASC') ORDER = 'Ascending';
MPRINT(EM_DIAGRAM):   when('ASC') ORDER = 'Ascending';
993905     when('FMTDESC') ORDER = 'Formatted Descending';
MPRINT(EM_DIAGRAM):   when('FMTDESC') ORDER = 'Formatted Descending';
993906     when('FMTASC') ORDER = 'Formatted Ascending';
MPRINT(EM_DIAGRAM):   when('FMTASC') ORDER = 'Formatted Ascending';
993907     otherwise ORDER = 'Descending';
MPRINT(EM_DIAGRAM):   otherwise ORDER = 'Descending';
993908     end;
MPRINT(EM_DIAGRAM):   end;
993909     output;
MPRINT(EM_DIAGRAM):   output;
993910     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.AUTONEURAL35_DEPVAR_DM.
      WHERE _TYPE_='TARGET';
NOTE: The data set WORK.AUTONEURAL35_EVENT has 1 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
993911     title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
993912     proc print data=WORK.AutoNeural35_EVENT noobs label;
MPRINT(EM_DIAGRAM):   proc print data=WORK.AutoNeural35_EVENT noobs label;
993913     var VARIABLE EVENT LEVEL NUMLEVELS ORDER LABEL;
MPRINT(EM_DIAGRAM):   var VARIABLE EVENT LEVEL NUMLEVELS ORDER LABEL;
993914     title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
993915     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_modelEvent_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Model Events";
MPRINT(EM_DIAGRAM):   run;
993916     run;
 
NOTE: There were 1 observations read from the data set WORK.AUTONEURAL35_EVENT.
NOTE: The PROCEDURE PRINT printed page 940.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
993917     title10;
MPRINT(EM_DIAGRAM):   title10;
"No decisions defined for target "DepVar"."
993918     proc print data = EMWS8.AutoNeural35_DepVar_DM noobs label;
MPRINT(EM_DIAGRAM):    proc print data = EMWS8.AutoNeural35_DepVar_DM noobs label;
993919     var _type_ variable label;
MPRINT(EM_DIAGRAM):   var _type_ variable label;
993920     where _type_ ^in('MATRIX', 'DECISION', 'TRAINPRIOR', 'DATAPRIOR', 'DECPRIOR');
MPRINT(EM_DIAGRAM):   where _type_ ^in('MATRIX', 'DECISION', 'TRAINPRIOR', 'DATAPRIOR',
'DECPRIOR');
993921     label _TYPE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_type_vlabel,     NOQUOTE))"
993921   ! VARIABLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel, NOQUOTE))" LABEL =
993921   ! "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _TYPE_ = "Type" VARIABLE = "Variable" LABEL = "Label";
993922     title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
993923     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_predDecVars_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Predicted and decision variables";
MPRINT(EM_DIAGRAM):   run;
993924     run;
 
NOTE: There were 7 observations read from the data set EMWS8.AUTONEURAL35_DEPVAR_DM.
      WHERE _type_ not in ('DATAPRIOR', 'DECISION', 'DECPRIOR', 'MATRIX', 'TRAINPRIOR');
NOTE: The PROCEDURE PRINT printed page 941.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
993925     title10;
MPRINT(EM_DIAGRAM):   title10;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * AutoNeural35: Preparing metadata for Training;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   data WORK.M1UIV587;
MPRINT(EM_DIAGRAM):   set WORK.M1UIV587;
MPRINT(EM_DIAGRAM):   where(use = 'Y' or (role = 'INPUT' and use = 'D'));
MPRINT(EM_DIAGRAM):   if (role = 'REJECTED') then role = 'INPUT';
MPRINT(EM_DIAGRAM):   run;
993934     data WORK.M1UIV587;
MPRINT(EM_DIAGRAM):    data WORK.M1UIV587;
993935     set WORK.M1UIV587 end=eof;
MPRINT(EM_DIAGRAM):   set WORK.M1UIV587 end=eof;
993936     output;
MPRINT(EM_DIAGRAM):   output;
993937     if eof then do;
MPRINT(EM_DIAGRAM):   if eof then do;
993938     NAME="";
MPRINT(EM_DIAGRAM):   NAME="";
993939     ROLE="COST";
MPRINT(EM_DIAGRAM):   ROLE="COST";
993940     LEVEL="INTERVAL";
MPRINT(EM_DIAGRAM):   LEVEL="INTERVAL";
993941     TYPE="N";
MPRINT(EM_DIAGRAM):   TYPE="N";
993942     output;
MPRINT(EM_DIAGRAM):   output;
993943     end;
MPRINT(EM_DIAGRAM):   end;
993944     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 10 observations read from the data set WORK.M1UIV587.
NOTE: The data set WORK.M1UIV587 has 11 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
NOTE: There were 2 observations read from the data set EMWS8.AUTONEURAL35_DEPVAR_DD.
NOTE: The data set WORK.DEPVAR has 2 observations and 7 variables.
993945     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
993946     * AutoNeural35: Create decision matrix;
MPRINT(EM_DIAGRAM):   * AutoNeural35: Create decision matrix;
993947     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
993948     data WORK.DepVar;
MPRINT(EM_DIAGRAM):   data WORK.DepVar;
993949       length   DepVar                           $  32
993950                COUNT                                8
993951                DATAPRIOR                            8
993952                TRAINPRIOR                           8
993953                DECPRIOR                             8
993954                DECISION1                            8
993955                DECISION2                            8
993956                ;
MPRINT(EM_DIAGRAM):   length DepVar $ 32 COUNT 8 DATAPRIOR 8 TRAINPRIOR 8 DECPRIOR 8 DECISION1
8 DECISION2 8 ;
993957
993958       label    COUNT="Level Counts"
993959                DATAPRIOR="Data Proportions"
993960                TRAINPRIOR="Training Proportions"
993961                DECPRIOR="Decision Priors"
993962                DECISION1="1"
993963                DECISION2="0"
993964                ;
MPRINT(EM_DIAGRAM):   label COUNT= "Level Counts" DATAPRIOR= "Data Proportions" TRAINPRIOR=
"Training Proportions" DECPRIOR= "Decision Priors" DECISION1= "1" DECISION2= "0" ;
993965       format   COUNT 10.
993966                ;
MPRINT(EM_DIAGRAM):   format COUNT 10. ;
993967     DepVar="1"; COUNT=359; DATAPRIOR=0.151221567; TRAINPRIOR=0.15122156697556;
993967   ! DECPRIOR=.; DECISION1=1; DECISION2=0;
MPRINT(EM_DIAGRAM):   DepVar="1";
MPRINT(EM_DIAGRAM):   COUNT=359;
MPRINT(EM_DIAGRAM):   DATAPRIOR=0.151221567;
MPRINT(EM_DIAGRAM):   TRAINPRIOR=0.15122156697556;
MPRINT(EM_DIAGRAM):   DECPRIOR=.;
MPRINT(EM_DIAGRAM):   DECISION1=1;
MPRINT(EM_DIAGRAM):   DECISION2=0;
993968     output;
MPRINT(EM_DIAGRAM):   output;
993969     DepVar="0"; COUNT=2015; DATAPRIOR=0.848778433; TRAINPRIOR=0.84877843302443;
993969   ! DECPRIOR=.; DECISION1=0; DECISION2=1;
MPRINT(EM_DIAGRAM):   DepVar="0";
MPRINT(EM_DIAGRAM):   COUNT=2015;
MPRINT(EM_DIAGRAM):   DATAPRIOR=0.848778433;
MPRINT(EM_DIAGRAM):   TRAINPRIOR=0.84877843302443;
MPRINT(EM_DIAGRAM):   DECPRIOR=.;
MPRINT(EM_DIAGRAM):   DECISION1=0;
MPRINT(EM_DIAGRAM):   DECISION2=1;
993970     output;
MPRINT(EM_DIAGRAM):   output;
993971     ;
MPRINT(EM_DIAGRAM):   ;
993972     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK.DEPVAR has 2 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
993973     proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
993974     modify DepVar(type=PROFIT label=DepVar);
MPRINT(EM_DIAGRAM):   modify DepVar(type=PROFIT label= DepVar);
MPRINT(EM_DIAGRAM):   label DECISION1= '1';
MPRINT(EM_DIAGRAM):   label DECISION2= '0';
MPRINT(EM_DIAGRAM):   run;
993975     label DECISION1= '1';
993976     label DECISION2= '0';
993977     run;
 
NOTE: MODIFY was successful for WORK.DEPVAR.DATA.
993978     quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
993979     data EM_AutoNeural35;
MPRINT(EM_DIAGRAM):   data EM_AutoNeural35;
993980     set EMWS8.Meta3_TRAIN(keep=
993981     AcceptedCmpTotal DepVar Frq Marital_Status Mnt MntMeatProducts
993982     NumCatalogPurchases NumDealsPurchases NumWebVisitsMonth Recency );
MPRINT(EM_DIAGRAM):   set EMWS8.Meta3_TRAIN(keep= AcceptedCmpTotal DepVar Frq Marital_Status
Mnt MntMeatProducts NumCatalogPurchases NumDealsPurchases NumWebVisitsMonth Recency );
993983     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: View EMWS8.META3_TRAIN.VIEW used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
NOTE: There were 2374 observations read from the data set EMWS8.PART_TRAIN.
NOTE: There were 2374 observations read from the data set EMWS8.META3_TRAIN.
NOTE: The data set WORK.EM_AUTONEURAL35 has 2374 observations and 10 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * AutoNeural35: DMDBClass Macro ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
993984     *------------------------------------------------------------* ;
993985     * AutoNeural35: DMDBClass Macro ;
993986     *------------------------------------------------------------* ;
993987     %macro DMDBClass;
993988         DepVar(DESC) Marital_Status(ASC)
993989     %mend DMDBClass;
993990     *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
993991     * AutoNeural35: DMDBVar Macro ;
MPRINT(EM_DIAGRAM):   * AutoNeural35: DMDBVar Macro ;
993992     *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
993993     %macro DMDBVar;
993994         AcceptedCmpTotal Frq Mnt MntMeatProducts NumCatalogPurchases NumDealsPurchases
993995        NumWebVisitsMonth Recency
993996     %mend DMDBVar;
993997     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
993998     * AutoNeural35: Create DMDB;
MPRINT(EM_DIAGRAM):   * AutoNeural35: Create DMDB;
993999     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
994000     proc dmdb batch data=WORK.EM_AutoNeural35
994001     dmdbcat=WORK.AutoNeural35_DMDB
994002     maxlevel = 513
994003     ;
MPRINT(EM_DIAGRAM):   proc dmdb batch data=WORK.EM_AutoNeural35 dmdbcat=WORK.AutoNeural35_DMDB
maxlevel = 513 ;
MPRINT(EM_DIAGRAM):   class
994004     class %DMDBClass;
MPRINT(DMDBCLASS):   DepVar(DESC) Marital_Status(ASC)
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   var
994005     var %DMDBVar;
MPRINT(DMDBVAR):   AcceptedCmpTotal Frq Mnt MntMeatProducts NumCatalogPurchases
NumDealsPurchases NumWebVisitsMonth Recency
MPRINT(EM_DIAGRAM):  ;
994006     target
994007     DepVar
994008     ;
MPRINT(EM_DIAGRAM):   target DepVar ;
994009     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Records processed = 2374   Memory used = 511K.
NOTE: There were 2374 observations read from the data set WORK.EM_AUTONEURAL35.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):   *--- end code ---*;
994010     quit;
994011     *--- end code ---*;
 
994012     *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------* ;
994013     * AutoNeural35: Interval Inputs Macro ;
MPRINT(EM_DIAGRAM):   * AutoNeural35: Interval Inputs Macro ;
994014     *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
994015     %macro INTINPUTS;
994016         AcceptedCmpTotal Frq Mnt MntMeatProducts NumCatalogPurchases NumDealsPurchases
994017        NumWebVisitsMonth Recency
994018     %mend INTINPUTS;
994019     *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
994020     * AutoNeural35: Binary Inputs Macro ;
MPRINT(EM_DIAGRAM):   * AutoNeural35: Binary Inputs Macro ;
994021     *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
994022     %macro BININPUTS;
994023
994024     %mend BININPUTS;
994025     *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
994026     * AutoNeural35: Nominal Inputs Macro ;
MPRINT(EM_DIAGRAM):   * AutoNeural35: Nominal Inputs Macro ;
994027     *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
994028     %macro NOMINPUTS;
994029         Marital_Status
994030     %mend NOMINPUTS;
994031     *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
994032     * AutoNeural35: Ordinal Inputs Macro ;
MPRINT(EM_DIAGRAM):   * AutoNeural35: Ordinal Inputs Macro ;
994033     *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
994034     %macro ORDINPUTS;
994035
994036     %mend ORDINPUTS;
994037     * set printing options;
MPRINT(EM_DIAGRAM):   * set printing options;
994038     ;
MPRINT(EM_DIAGRAM):   ;
994039     options linesize = 80;
MPRINT(EM_DIAGRAM):   options linesize = 80;
994040     options pagesize = 6000;
MPRINT(EM_DIAGRAM):   options pagesize = 6000;
994041     options nonumber;
MPRINT(EM_DIAGRAM):   options nonumber;
994042     options nocenter;
MPRINT(EM_DIAGRAM):   options nocenter;
994043     options nodate;
MPRINT(EM_DIAGRAM):   options nodate;
994044     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
994045     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_autonet_title  ,
994045   ! NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "AutoNet";
MPRINT(EM_DIAGRAM):   *;
994046     *;
 
994047     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
994048     * Autoneural: search / FUNNEL LAYERS;
MPRINT(EM_DIAGRAM):   * Autoneural: search / FUNNEL LAYERS;
994049     ;
MPRINT(EM_DIAGRAM):   ;
994050     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
994051     *;
MPRINT(EM_DIAGRAM):   *;
 
994052     *;
MPRINT(EM_DIAGRAM):    *;
994053     proc neural data=EM_AutoNeural35 dmdbcat=WORK.AutoNeural35_DMDB
994054     validdata=EMWS8.Meta3_VALIDATE
994055     ;
MPRINT(EM_DIAGRAM):   proc neural data=EM_AutoNeural35
dmdbcat=WORK.AutoNeural35_DMDB validdata=EMWS8.Meta3_VALIDATE ;
994056     *;
MPRINT(EM_DIAGRAM):   *;
994057     nloptions noprint;
MPRINT(EM_DIAGRAM):   nloptions noprint;
994058     performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   input
994059     input %INTINPUTS / level=interval id=interval;
MPRINT(INTINPUTS):   AcceptedCmpTotal Frq Mnt MntMeatProducts
NumCatalogPurchases NumDealsPurchases NumWebVisitsMonth Recency
MPRINT(EM_DIAGRAM):   / level=interval id=interval;
MPRINT(EM_DIAGRAM):   input
994060     input %NOMINPUTS / level=nominal id=nominal;
MPRINT(NOMINPUTS):   Marital_Status
MPRINT(EM_DIAGRAM):   / level=nominal id=nominal;
994061     target DepVar / level=NOMINAL id=DepVar
994062     ;
MPRINT(EM_DIAGRAM):   target DepVar / level=NOMINAL id=DepVar ;
994063     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
994064     * Direct connection;
MPRINT(EM_DIAGRAM):   * Direct connection;
994065     ;
MPRINT(EM_DIAGRAM):   ;
994066     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
994067     connect interval DepVar;
MPRINT(EM_DIAGRAM):   connect interval DepVar;
994068     connect nominal DepVar;
MPRINT(EM_DIAGRAM):   connect nominal DepVar;
994069     *;
MPRINT(EM_DIAGRAM):   *;
994070     netoptions ranscale = 1;
MPRINT(EM_DIAGRAM):   netoptions ranscale = 1;
994071     *;
MPRINT(EM_DIAGRAM):   *;
994072     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
994073     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_train_title  ,NOQUOTE,
994073   ! Search # 1 FUNNEL LAYERS trial # 1 : DIRECT : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 1 FUNNEL LAYERS trial # 1 : DIRECT :
Training";
MPRINT(EM_DIAGRAM):   train estiter=1 outest=_anest outfit=_anfit maxtime=1800
maxiter=50 tech = Default;
NOTE:  Synchronizing the objectives and the Solution.
NOTE: Convergence criterion (ABSGCONV=0.00001) satisfied.
NOTE: The data set WORK._ANEST has 28 observations and 28 variables.
NOTE: The data set WORK._ANFIT has 28 observations and 36 variables.
MPRINT(EM_DIAGRAM):   ;
994074     train estiter=1 outest=_anest outfit=_anfit maxtime=1800 maxiter=50
MPRINT(EM_DIAGRAM):   run;
994075     tech = Default;
994076     ;
994077     run;
 
NOTE: The data set WORK.EM_AUTONEURAL35 has 2374 observations and 10 variables.
NOTE: The data set EMWS8.META3_VALIDATE has . observations and 45 variables.
NOTE: View EMWS8.META3_VALIDATE.VIEW used (Total process time):
      real time           0.23 seconds
      cpu time            0.23 seconds
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: Closing the Neural Application.
NOTE: PROCEDURE NEURAL used (Total process time):
      real time           0.24 seconds
      cpu time            0.24 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
994078     *;
994079     proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
MPRINT(EM_DIAGRAM):   proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
994080     var _iter_ _aic_ _averr_ _misc_
994081     _vaverr_ _vmisc_
994082     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
994083     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 14 observations read from the data set WORK._ANFIT.
      WHERE _name_='OVERALL';
NOTE: The PROCEDURE PRINT printed page 942.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Extract best iteration;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
994084     *------------------------------------------------------------*;
994085     * Extract best iteration;
994086     ;
994087     *------------------------------------------------------------*;
994088     %global _iter;
994089     data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
994090     set _anfit(where=(_NAME_ eq 'OVERALL'));
MPRINT(EM_DIAGRAM):   set _anfit(where=(_NAME_ eq 'OVERALL'));
994091     retain _min 1e+64;
MPRINT(EM_DIAGRAM):   retain _min 1e+64;
994092     if _VMISC_ < _min then do;
MPRINT(EM_DIAGRAM):   if _VMISC_ < _min then do;
994093     _min = _VMISC_;
MPRINT(EM_DIAGRAM):   _min = _VMISC_;
994094     call symput('_iter',put(_ITER_, 6.));
MPRINT(EM_DIAGRAM):   call symput('_iter',put(_ITER_, 6.));
994095     end;
MPRINT(EM_DIAGRAM):   end;
994096     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 14 observations read from the data set WORK._ANFIT.
      WHERE _NAME_='OVERALL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
994097     *;
 
994098     data EMWS8.AutoNeural35_ESTDS;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural35_ESTDS;
994099     set _anest;
MPRINT(EM_DIAGRAM):   set _anest;
994100     if _ITER_ eq 3 then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 3 then do;
994101     output;
MPRINT(EM_DIAGRAM):   output;
994102     stop;
MPRINT(EM_DIAGRAM):   stop;
994103     end;
MPRINT(EM_DIAGRAM):   end;
994104     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._ANEST.
NOTE: The data set EMWS8.AUTONEURAL35_ESTDS has 1 observations and 28 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
994105     *;
994106     data EMWS8.AutoNeural35_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural35_OUTFIT;
994107     set _anfit;
MPRINT(EM_DIAGRAM):   set _anfit;
994108     if _ITER_ eq 3 and _NAME_ eq "OVERALL" then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 3 and _NAME_ eq "OVERALL" then do;
994109     output;
MPRINT(EM_DIAGRAM):   output;
994110     stop;
MPRINT(EM_DIAGRAM):   stop;
994111     end;
MPRINT(EM_DIAGRAM):   end;
994112     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set WORK._ANFIT.
NOTE: The data set EMWS8.AUTONEURAL35_OUTFIT has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
994113     *;
MPRINT(EM_DIAGRAM):    *;
994114     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
994115     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_selectediteration_title
994115   ! , NOQUOTE, _VMISC_))";
MPRINT(EM_DIAGRAM):   title10 "Selected Iteration based on _VMISC_";
994116     proc print data=EMWS8.AutoNeural35_OUTFIT noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural35_OUTFIT noobs;
994117     var _iter_ _aic_ _averr_ _misc_
994118     _vaverr_ _vmisc_
994119     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
994120     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL35_OUTFIT.
NOTE: The PROCEDURE PRINT printed page 943.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
994121     title9;
MPRINT(EM_DIAGRAM):   title9;
994122     title10;
MPRINT(EM_DIAGRAM):   title10;
994123     %sysfunc(sasmsg(sashelp.dmine, starthistory_note , NOQUOTE));
MPRINT(EM_DIAGRAM):    * Start history;
MPRINT(EM_DIAGRAM):  ;
994124     data EMWS8.AutoNeural35_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural35_HISTORY;
994125     length _func_ _status_ _step_ $16;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16;
994126     label _func_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_function_vlabel  ,
994126   !  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _func_ = "Function";
994127     label _status_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_status_vlabel  ,
994127   !  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _status_ = "Status";
994128     label _iter_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_iteration_vlabel
994128   ! , NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _iter_ = "Iteration";
994129     label _step_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_step_vlabel  ,
994129   ! NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _step_ = "Step";
994130     _func_ = '';
MPRINT(EM_DIAGRAM):   _func_ = '';
994131     _status_ = '';
MPRINT(EM_DIAGRAM):   _status_ = '';
994132     _step_ = 'FUNNEL LAYERS 1';
MPRINT(EM_DIAGRAM):   _step_ = 'FUNNEL LAYERS 1';
994133     set
994134     _anfit(where=(_name_ eq 'OVERALL' and _iter_ eq 0))
994135     ;
MPRINT(EM_DIAGRAM):   set _anfit(where=(_name_ eq 'OVERALL' and _iter_ eq 0)) ;
994136     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK._ANFIT.
      WHERE (_name_='OVERALL') and (_iter_=0);
NOTE: The data set EMWS8.AUTONEURAL35_HISTORY has 1 observations and 39
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
994137     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
994138     set EMWS8.AutoNeural35_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural35_OUTFIT;
994139     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
994140     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL35_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
994141     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
994142     set EMWS8.AutoNeural35_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural35_OUTFIT;
994143     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
994144     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL35_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
994145     *SEARCH: copy estimates and fit to best buffer;
MPRINT(EM_DIAGRAM):    *SEARCH: copy estimates and fit to best buffer;
994146     ;
MPRINT(EM_DIAGRAM):   ;
994147     data WORK.SAVEDS_AUTONEUR_2H8DSPC;
MPRINT(EM_DIAGRAM):   data WORK.SAVEDS_AUTONEUR_2H8DSPC;
994148     set EMWS8.AutoNeural35_ESTDS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural35_ESTDS;
994149     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.AUTONEURAL35_ESTDS.
NOTE: The data set WORK.SAVEDS_AUTONEUR_2H8DSPC has 1 observations and 28
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
994150     data EMWS8.AutoNeural35_BESTDS;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural35_BESTDS;
994151     set EMWS8.AutoNeural35_ESTDS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural35_ESTDS;
994152     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.AUTONEURAL35_ESTDS.
NOTE: The data set EMWS8.AUTONEURAL35_BESTDS has 1 observations and 28
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
994153     data WORK.BFITDS_AUTONEUR_2H8DSPC;
MPRINT(EM_DIAGRAM):   data WORK.BFITDS_AUTONEUR_2H8DSPC;
994154     set EMWS8.AutoNeural35_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural35_OUTFIT;
994155     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL35_OUTFIT.
NOTE: The data set WORK.BFITDS_AUTONEUR_2H8DSPC has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
994156     * Add function info to new history;
MPRINT(EM_DIAGRAM):    * Add function info to new history;
994157     ;
MPRINT(EM_DIAGRAM):   ;
994158     data EMWS8.AutoNeural35_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural35_HISTORY;
994159     set EMWS8.AutoNeural35_HISTORY;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural35_HISTORY;
994160     _func_ = 'DIRECT';
MPRINT(EM_DIAGRAM):   _func_ = 'DIRECT';
994161     _status_ = 'initial';
MPRINT(EM_DIAGRAM):   _status_ = 'initial';
994162     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL35_HISTORY.
NOTE: The data set EMWS8.AUTONEURAL35_HISTORY has 1 observations and 39
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
994163     * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
994164     ;
MPRINT(EM_DIAGRAM):   ;
994165     data EMWS8.AutoNeural35_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural35_OUTFIT;
994166     set EMWS8.AutoNeural35_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural35_OUTFIT;
994167     length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
994168     _func_ = "DIRECT";
MPRINT(EM_DIAGRAM):   _func_ = "DIRECT";
994169     _status_ = "candidate";
MPRINT(EM_DIAGRAM):   _status_ = "candidate";
994170     _step_ = "FUNNEL LAYERS 1";
MPRINT(EM_DIAGRAM):   _step_ = "FUNNEL LAYERS 1";
994171     _index_ = 1;
MPRINT(EM_DIAGRAM):   _index_ = 1;
994172     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL35_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL35_OUTFIT has 1 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
994173     data EMWS8.AutoNeural35_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural35_HISTORY;
994174     set EMWS8.AutoNeural35_HISTORY EMWS8.AutoNeural35_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural35_HISTORY EMWS8.AutoNeural35_OUTFIT;
994175     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL35_HISTORY.
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL35_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL35_HISTORY has 2 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
994176     *;
MPRINT(EM_DIAGRAM):    *;
994177     proc neural data=EM_AutoNeural35 dmdbcat=WORK.AutoNeural35_DMDB
994178     validdata=EMWS8.Meta3_VALIDATE
994179     ;
MPRINT(EM_DIAGRAM):   proc neural data=EM_AutoNeural35
dmdbcat=WORK.AutoNeural35_DMDB validdata=EMWS8.Meta3_VALIDATE ;
994180     *;
MPRINT(EM_DIAGRAM):   *;
994181     nloptions noprint;
MPRINT(EM_DIAGRAM):   nloptions noprint;
994182     performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   input
994183     input %INTINPUTS / level=interval id=interval;
MPRINT(INTINPUTS):   AcceptedCmpTotal Frq Mnt MntMeatProducts
NumCatalogPurchases NumDealsPurchases NumWebVisitsMonth Recency
MPRINT(EM_DIAGRAM):   / level=interval id=interval;
MPRINT(EM_DIAGRAM):   input
994184     input %NOMINPUTS / level=nominal id=nominal;
MPRINT(NOMINPUTS):   Marital_Status
MPRINT(EM_DIAGRAM):   / level=nominal id=nominal;
994185     target DepVar / level=NOMINAL id=DepVar
994186     ;
MPRINT(EM_DIAGRAM):   target DepVar / level=NOMINAL id=DepVar ;
994187     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
994188     * Layer #1;
MPRINT(EM_DIAGRAM):   * Layer #1;
994189     ;
MPRINT(EM_DIAGRAM):   ;
994190     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
994191     Hidden 6 / id = H1x1_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H1x1_ act=LOG;
994192     connect interval H1x1_;
MPRINT(EM_DIAGRAM):   connect interval H1x1_;
994193     connect nominal H1x1_;
MPRINT(EM_DIAGRAM):   connect nominal H1x1_;
994194     connect H1x1_ DepVar;
MPRINT(EM_DIAGRAM):   connect H1x1_ DepVar;
994195     *;
MPRINT(EM_DIAGRAM):   *;
994196     netoptions ranscale = 1;
MPRINT(EM_DIAGRAM):   netoptions ranscale = 1;
994197     *;
MPRINT(EM_DIAGRAM):   *;
994198     initial
994199     ;
MPRINT(EM_DIAGRAM):   initial ;
994200     *;
MPRINT(EM_DIAGRAM):   *;
994201     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
994202     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_prelim_title  ,NOQUOTE,
994202   ! Search # 1 FUNNEL LAYERS trial # 2 : LOGISTIC : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 1 FUNNEL LAYERS trial # 2 : LOGISTIC :
Prelim";
MPRINT(EM_DIAGRAM):   prelim 24 outest=_anpre pretime=37 preiter=25 tech =
Default ;
NOTE:  Synchronizing the objectives and the Solution.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANPRE has 49 observations and 100 variables.
MPRINT(EM_DIAGRAM):   *;
994203     prelim 24 outest=_anpre pretime=37 preiter=25
994204     tech = Default
994205     ;
994206     *;
994207     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
994208     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_train_title  ,NOQUOTE,
994208   ! Search # 1 FUNNEL LAYERS trial # 2 : LOGISTIC : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 1 FUNNEL LAYERS trial # 2 : LOGISTIC :
Training";
MPRINT(EM_DIAGRAM):   train estiter=1 outest=_anest outfit=_anfit maxtime=900
maxiter=50 tech = Default;
WARNING: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 50 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANEST has 138 observations and 100 variables.
NOTE: The data set WORK._ANFIT has 104 observations and 36 variables.
MPRINT(EM_DIAGRAM):   ;
994209     train estiter=1 outest=_anest outfit=_anfit maxtime=900 maxiter=50
MPRINT(EM_DIAGRAM):   run;
994210     tech = Default;
994211     ;
994212     run;
 
NOTE: The data set WORK.EM_AUTONEURAL35 has 2374 observations and 10 variables.
NOTE: The data set EMWS8.META3_VALIDATE has . observations and 45 variables.
NOTE: View EMWS8.META3_VALIDATE.VIEW used (Total process time):
      real time           29.72 seconds
      cpu time            29.70 seconds
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: Closing the Neural Application.
NOTE: The PROCEDURE NEURAL printed page 944.
NOTE: PROCEDURE NEURAL used (Total process time):
      real time           29.72 seconds
      cpu time            29.70 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
994213     *;
994214     proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
MPRINT(EM_DIAGRAM):   proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
994215     var _iter_ _aic_ _averr_ _misc_
994216     _vaverr_ _vmisc_
994217     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
994218     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _name_='OVERALL';
NOTE: The PROCEDURE PRINT printed page 945.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Extract best iteration;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
994219     *------------------------------------------------------------*;
994220     * Extract best iteration;
994221     ;
994222     *------------------------------------------------------------*;
994223     %global _iter;
994224     data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
994225     set _anfit(where=(_NAME_ eq 'OVERALL'));
MPRINT(EM_DIAGRAM):   set _anfit(where=(_NAME_ eq 'OVERALL'));
994226     retain _min 1e+64;
MPRINT(EM_DIAGRAM):   retain _min 1e+64;
994227     if _VMISC_ < _min then do;
MPRINT(EM_DIAGRAM):   if _VMISC_ < _min then do;
994228     _min = _VMISC_;
MPRINT(EM_DIAGRAM):   _min = _VMISC_;
994229     call symput('_iter',put(_ITER_, 6.));
MPRINT(EM_DIAGRAM):   call symput('_iter',put(_ITER_, 6.));
994230     end;
MPRINT(EM_DIAGRAM):   end;
994231     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _NAME_='OVERALL';
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
994232     *;
 
994233     data EMWS8.AutoNeural35_ESTDS;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural35_ESTDS;
994234     set _anest;
MPRINT(EM_DIAGRAM):   set _anest;
994235     if _ITER_ eq 19 then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 19 then do;
994236     output;
MPRINT(EM_DIAGRAM):   output;
994237     stop;
MPRINT(EM_DIAGRAM):   stop;
994238     end;
MPRINT(EM_DIAGRAM):   end;
994239     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 20 observations read from the data set WORK._ANEST.
NOTE: The data set EMWS8.AUTONEURAL35_ESTDS has 1 observations and 100
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
994240     *;
994241     data EMWS8.AutoNeural35_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural35_OUTFIT;
994242     set _anfit;
MPRINT(EM_DIAGRAM):   set _anfit;
994243     if _ITER_ eq 19 and _NAME_ eq "OVERALL" then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 19 and _NAME_ eq "OVERALL" then do;
994244     output;
MPRINT(EM_DIAGRAM):   output;
994245     stop;
MPRINT(EM_DIAGRAM):   stop;
994246     end;
MPRINT(EM_DIAGRAM):   end;
994247     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 40 observations read from the data set WORK._ANFIT.
NOTE: The data set EMWS8.AUTONEURAL35_OUTFIT has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
994248     *;
MPRINT(EM_DIAGRAM):    *;
994249     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
994250     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_selectediteration_title
994250   ! , NOQUOTE, _VMISC_))";
MPRINT(EM_DIAGRAM):   title10 "Selected Iteration based on _VMISC_";
994251     proc print data=EMWS8.AutoNeural35_OUTFIT noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural35_OUTFIT noobs;
994252     var _iter_ _aic_ _averr_ _misc_
994253     _vaverr_ _vmisc_
994254     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
994255     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL35_OUTFIT.
NOTE: The PROCEDURE PRINT printed page 946.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
994256     title9;
MPRINT(EM_DIAGRAM):   title9;
994257     title10;
MPRINT(EM_DIAGRAM):   title10;
994258     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
994259     set EMWS8.AutoNeural35_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural35_OUTFIT;
994260     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
994261     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL35_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
994262     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
994263     set EMWS8.AutoNeural35_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural35_OUTFIT;
994264     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
994265     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL35_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
994266     *SEARCH: copy estimates and fit to best buffer;
MPRINT(EM_DIAGRAM):    *SEARCH: copy estimates and fit to best buffer;
994267     ;
MPRINT(EM_DIAGRAM):   ;
994268     data WORK.SAVEDS_AUTONEUR_2H8DSPC;
MPRINT(EM_DIAGRAM):   data WORK.SAVEDS_AUTONEUR_2H8DSPC;
994269     set EMWS8.AutoNeural35_ESTDS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural35_ESTDS;
994270     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.AUTONEURAL35_ESTDS.
NOTE: The data set WORK.SAVEDS_AUTONEUR_2H8DSPC has 1 observations and 100
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
994271     data EMWS8.AutoNeural35_BESTDS;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural35_BESTDS;
994272     set EMWS8.AutoNeural35_ESTDS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural35_ESTDS;
994273     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.AUTONEURAL35_ESTDS.
NOTE: The data set EMWS8.AUTONEURAL35_BESTDS has 1 observations and 100
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
994274     data WORK.BFITDS_AUTONEUR_2H8DSPC;
MPRINT(EM_DIAGRAM):   data WORK.BFITDS_AUTONEUR_2H8DSPC;
994275     set EMWS8.AutoNeural35_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural35_OUTFIT;
994276     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL35_OUTFIT.
NOTE: The data set WORK.BFITDS_AUTONEUR_2H8DSPC has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
994277     * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
994278     ;
MPRINT(EM_DIAGRAM):   ;
994279     data EMWS8.AutoNeural35_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural35_OUTFIT;
994280     set EMWS8.AutoNeural35_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural35_OUTFIT;
994281     length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
994282     _func_ = "LOGISTIC";
MPRINT(EM_DIAGRAM):   _func_ = "LOGISTIC";
994283     _status_ = "candidate";
MPRINT(EM_DIAGRAM):   _status_ = "candidate";
994284     _step_ = "FUNNEL LAYERS 1";
MPRINT(EM_DIAGRAM):   _step_ = "FUNNEL LAYERS 1";
994285     _index_ = 1;
MPRINT(EM_DIAGRAM):   _index_ = 1;
994286     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL35_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL35_OUTFIT has 1 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
994287     data EMWS8.AutoNeural35_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural35_HISTORY;
994288     set EMWS8.AutoNeural35_HISTORY EMWS8.AutoNeural35_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural35_HISTORY EMWS8.AutoNeural35_OUTFIT;
994289     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set
      EMWS8.AUTONEURAL35_HISTORY.
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL35_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL35_HISTORY has 3 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
994290     *;
MPRINT(EM_DIAGRAM):    *;
994291     proc neural data=EM_AutoNeural35 dmdbcat=WORK.AutoNeural35_DMDB
994292     validdata=EMWS8.Meta3_VALIDATE
994293     ;
MPRINT(EM_DIAGRAM):   proc neural data=EM_AutoNeural35
dmdbcat=WORK.AutoNeural35_DMDB validdata=EMWS8.Meta3_VALIDATE ;
994294     *;
MPRINT(EM_DIAGRAM):   *;
994295     nloptions noprint;
MPRINT(EM_DIAGRAM):   nloptions noprint;
994296     performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   input
994297     input %INTINPUTS / level=interval id=interval;
MPRINT(INTINPUTS):   AcceptedCmpTotal Frq Mnt MntMeatProducts
NumCatalogPurchases NumDealsPurchases NumWebVisitsMonth Recency
MPRINT(EM_DIAGRAM):   / level=interval id=interval;
MPRINT(EM_DIAGRAM):   input
994298     input %NOMINPUTS / level=nominal id=nominal;
MPRINT(NOMINPUTS):   Marital_Status
MPRINT(EM_DIAGRAM):   / level=nominal id=nominal;
994299     target DepVar / level=NOMINAL id=DepVar
994300     ;
MPRINT(EM_DIAGRAM):   target DepVar / level=NOMINAL id=DepVar ;
994301     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
994302     * Layer #1;
MPRINT(EM_DIAGRAM):   * Layer #1;
994303     ;
MPRINT(EM_DIAGRAM):   ;
994304     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
994305     Hidden 6 / id = H1x1_ act=SINE;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H1x1_ act=SINE;
994306     connect interval H1x1_;
MPRINT(EM_DIAGRAM):   connect interval H1x1_;
994307     connect nominal H1x1_;
MPRINT(EM_DIAGRAM):   connect nominal H1x1_;
994308     connect H1x1_ DepVar;
MPRINT(EM_DIAGRAM):   connect H1x1_ DepVar;
994309     *;
MPRINT(EM_DIAGRAM):   *;
994310     netoptions ranscale = 1;
MPRINT(EM_DIAGRAM):   netoptions ranscale = 1;
994311     *;
MPRINT(EM_DIAGRAM):   *;
994312     initial
994313     ;
MPRINT(EM_DIAGRAM):   initial ;
994314     *;
MPRINT(EM_DIAGRAM):   *;
994315     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
994316     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_prelim_title  ,NOQUOTE,
994316   ! Search # 1 FUNNEL LAYERS trial # 3 : SINE : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 1 FUNNEL LAYERS trial # 3 : SINE :
Prelim";
MPRINT(EM_DIAGRAM):   prelim 24 outest=_anpre pretime=37 preiter=25 tech =
Default ;
NOTE:  Synchronizing the objectives and the Solution.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANPRE has 49 observations and 100 variables.
MPRINT(EM_DIAGRAM):   *;
994317     prelim 24 outest=_anpre pretime=37 preiter=25
994318     tech = Default
994319     ;
994320     *;
994321     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
994322     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_train_title  ,NOQUOTE,
994322   ! Search # 1 FUNNEL LAYERS trial # 3 : SINE : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 1 FUNNEL LAYERS trial # 3 : SINE :
Training";
MPRINT(EM_DIAGRAM):   train estiter=1 outest=_anest outfit=_anfit maxtime=892
maxiter=50 tech = Default;
WARNING: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 50 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANEST has 138 observations and 100 variables.
NOTE: The data set WORK._ANFIT has 104 observations and 36 variables.
MPRINT(EM_DIAGRAM):   ;
994323     train estiter=1 outest=_anest outfit=_anfit maxtime=892 maxiter=50
MPRINT(EM_DIAGRAM):   run;
994324     tech = Default;
994325     ;
994326     run;
 
NOTE: The data set WORK.EM_AUTONEURAL35 has 2374 observations and 10 variables.
NOTE: The data set EMWS8.META3_VALIDATE has . observations and 45 variables.
NOTE: View EMWS8.META3_VALIDATE.VIEW used (Total process time):
      real time           29.31 seconds
      cpu time            29.29 seconds
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: Closing the Neural Application.
NOTE: The PROCEDURE NEURAL printed page 947.
NOTE: PROCEDURE NEURAL used (Total process time):
      real time           29.33 seconds
      cpu time            29.31 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
994327     *;
994328     proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
MPRINT(EM_DIAGRAM):   proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
994329     var _iter_ _aic_ _averr_ _misc_
994330     _vaverr_ _vmisc_
994331     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
994332     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _name_='OVERALL';
NOTE: The PROCEDURE PRINT printed page 948.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Extract best iteration;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
994333     *------------------------------------------------------------*;
994334     * Extract best iteration;
994335     ;
994336     *------------------------------------------------------------*;
994337     %global _iter;
994338     data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
994339     set _anfit(where=(_NAME_ eq 'OVERALL'));
MPRINT(EM_DIAGRAM):   set _anfit(where=(_NAME_ eq 'OVERALL'));
994340     retain _min 1e+64;
MPRINT(EM_DIAGRAM):   retain _min 1e+64;
994341     if _VMISC_ < _min then do;
MPRINT(EM_DIAGRAM):   if _VMISC_ < _min then do;
994342     _min = _VMISC_;
MPRINT(EM_DIAGRAM):   _min = _VMISC_;
994343     call symput('_iter',put(_ITER_, 6.));
MPRINT(EM_DIAGRAM):   call symput('_iter',put(_ITER_, 6.));
994344     end;
MPRINT(EM_DIAGRAM):   end;
994345     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _NAME_='OVERALL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
994346     *;
 
994347     data EMWS8.AutoNeural35_ESTDS;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural35_ESTDS;
994348     set _anest;
MPRINT(EM_DIAGRAM):   set _anest;
994349     if _ITER_ eq 20 then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 20 then do;
994350     output;
MPRINT(EM_DIAGRAM):   output;
994351     stop;
MPRINT(EM_DIAGRAM):   stop;
994352     end;
MPRINT(EM_DIAGRAM):   end;
994353     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 21 observations read from the data set WORK._ANEST.
NOTE: The data set EMWS8.AUTONEURAL35_ESTDS has 1 observations and 100
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
994354     *;
994355     data EMWS8.AutoNeural35_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural35_OUTFIT;
994356     set _anfit;
MPRINT(EM_DIAGRAM):   set _anfit;
994357     if _ITER_ eq 20 and _NAME_ eq "OVERALL" then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 20 and _NAME_ eq "OVERALL" then do;
994358     output;
MPRINT(EM_DIAGRAM):   output;
994359     stop;
MPRINT(EM_DIAGRAM):   stop;
994360     end;
MPRINT(EM_DIAGRAM):   end;
994361     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 42 observations read from the data set WORK._ANFIT.
NOTE: The data set EMWS8.AUTONEURAL35_OUTFIT has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
994362     *;
MPRINT(EM_DIAGRAM):    *;
994363     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
994364     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_selectediteration_title
994364   ! , NOQUOTE, _VMISC_))";
MPRINT(EM_DIAGRAM):   title10 "Selected Iteration based on _VMISC_";
994365     proc print data=EMWS8.AutoNeural35_OUTFIT noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural35_OUTFIT noobs;
994366     var _iter_ _aic_ _averr_ _misc_
994367     _vaverr_ _vmisc_
994368     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
994369     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL35_OUTFIT.
NOTE: The PROCEDURE PRINT printed page 949.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
994370     title9;
MPRINT(EM_DIAGRAM):   title9;
994371     title10;
MPRINT(EM_DIAGRAM):   title10;
994372     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
994373     set EMWS8.AutoNeural35_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural35_OUTFIT;
994374     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
994375     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL35_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
994376     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
994377     set EMWS8.AutoNeural35_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural35_OUTFIT;
994378     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
994379     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL35_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
994380     *SEARCH: copy estimates and fit to best buffer;
MPRINT(EM_DIAGRAM):    *SEARCH: copy estimates and fit to best buffer;
994381     ;
MPRINT(EM_DIAGRAM):   ;
994382     data WORK.SAVEDS_AUTONEUR_2H8DSPC;
MPRINT(EM_DIAGRAM):   data WORK.SAVEDS_AUTONEUR_2H8DSPC;
994383     set EMWS8.AutoNeural35_ESTDS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural35_ESTDS;
994384     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.AUTONEURAL35_ESTDS.
NOTE: The data set WORK.SAVEDS_AUTONEUR_2H8DSPC has 1 observations and 100
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
994385     data EMWS8.AutoNeural35_BESTDS;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural35_BESTDS;
994386     set EMWS8.AutoNeural35_ESTDS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural35_ESTDS;
994387     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.AUTONEURAL35_ESTDS.
NOTE: The data set EMWS8.AUTONEURAL35_BESTDS has 1 observations and 100
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.14 seconds
      cpu time            0.00 seconds
 
 
994388     data WORK.BFITDS_AUTONEUR_2H8DSPC;
MPRINT(EM_DIAGRAM):   data WORK.BFITDS_AUTONEUR_2H8DSPC;
994389     set EMWS8.AutoNeural35_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural35_OUTFIT;
994390     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL35_OUTFIT.
NOTE: The data set WORK.BFITDS_AUTONEUR_2H8DSPC has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
994391     * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
994392     ;
MPRINT(EM_DIAGRAM):   ;
994393     data EMWS8.AutoNeural35_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural35_OUTFIT;
994394     set EMWS8.AutoNeural35_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural35_OUTFIT;
994395     length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
994396     _func_ = "SINE";
MPRINT(EM_DIAGRAM):   _func_ = "SINE";
994397     _status_ = "candidate";
MPRINT(EM_DIAGRAM):   _status_ = "candidate";
994398     _step_ = "FUNNEL LAYERS 1";
MPRINT(EM_DIAGRAM):   _step_ = "FUNNEL LAYERS 1";
994399     _index_ = 1;
MPRINT(EM_DIAGRAM):   _index_ = 1;
994400     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL35_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL35_OUTFIT has 1 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
994401     data EMWS8.AutoNeural35_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural35_HISTORY;
994402     set EMWS8.AutoNeural35_HISTORY EMWS8.AutoNeural35_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural35_HISTORY EMWS8.AutoNeural35_OUTFIT;
994403     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set
      EMWS8.AUTONEURAL35_HISTORY.
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL35_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL35_HISTORY has 4 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
994404     *;
MPRINT(EM_DIAGRAM):    *;
994405     proc neural data=EM_AutoNeural35 dmdbcat=WORK.AutoNeural35_DMDB
994406     validdata=EMWS8.Meta3_VALIDATE
994407     ;
MPRINT(EM_DIAGRAM):   proc neural data=EM_AutoNeural35
dmdbcat=WORK.AutoNeural35_DMDB validdata=EMWS8.Meta3_VALIDATE ;
994408     *;
MPRINT(EM_DIAGRAM):   *;
994409     nloptions noprint;
MPRINT(EM_DIAGRAM):   nloptions noprint;
994410     performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   input
994411     input %INTINPUTS / level=interval id=interval;
MPRINT(INTINPUTS):   AcceptedCmpTotal Frq Mnt MntMeatProducts
NumCatalogPurchases NumDealsPurchases NumWebVisitsMonth Recency
MPRINT(EM_DIAGRAM):   / level=interval id=interval;
MPRINT(EM_DIAGRAM):   input
994412     input %NOMINPUTS / level=nominal id=nominal;
MPRINT(NOMINPUTS):   Marital_Status
MPRINT(EM_DIAGRAM):   / level=nominal id=nominal;
994413     target DepVar / level=NOMINAL id=DepVar
994414     ;
MPRINT(EM_DIAGRAM):   target DepVar / level=NOMINAL id=DepVar ;
994415     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
994416     * Layer #1;
MPRINT(EM_DIAGRAM):   * Layer #1;
994417     ;
MPRINT(EM_DIAGRAM):   ;
994418     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
994419     Hidden 6 / id = H1x1_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H1x1_ act=SOFTMAX;
994420     connect interval H1x1_;
MPRINT(EM_DIAGRAM):   connect interval H1x1_;
994421     connect nominal H1x1_;
MPRINT(EM_DIAGRAM):   connect nominal H1x1_;
994422     connect H1x1_ DepVar;
MPRINT(EM_DIAGRAM):   connect H1x1_ DepVar;
994423     *;
MPRINT(EM_DIAGRAM):   *;
994424     netoptions ranscale = 1;
MPRINT(EM_DIAGRAM):   netoptions ranscale = 1;
994425     *;
MPRINT(EM_DIAGRAM):   *;
994426     initial
994427     ;
MPRINT(EM_DIAGRAM):   initial ;
994428     *;
MPRINT(EM_DIAGRAM):   *;
994429     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
994430     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_prelim_title  ,NOQUOTE,
994430   ! Search # 1 FUNNEL LAYERS trial # 4 : SOFTMAX : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 1 FUNNEL LAYERS trial # 4 : SOFTMAX :
Prelim";
MPRINT(EM_DIAGRAM):   prelim 24 outest=_anpre pretime=36 preiter=25 tech =
Default ;
NOTE:  Synchronizing the objectives and the Solution.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANPRE has 49 observations and 87 variables.
MPRINT(EM_DIAGRAM):   *;
994431     prelim 24 outest=_anpre pretime=36 preiter=25
994432     tech = Default
994433     ;
994434     *;
994435     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
994436     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_train_title  ,NOQUOTE,
994436   ! Search # 1 FUNNEL LAYERS trial # 4 : SOFTMAX : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 1 FUNNEL LAYERS trial # 4 : SOFTMAX :
Training";
MPRINT(EM_DIAGRAM):   train estiter=1 outest=_anest outfit=_anfit maxtime=885
maxiter=50 tech = Default;
WARNING: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 50 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANEST has 125 observations and 87 variables.
NOTE: The data set WORK._ANFIT has 104 observations and 36 variables.
MPRINT(EM_DIAGRAM):   ;
994437     train estiter=1 outest=_anest outfit=_anfit maxtime=885 maxiter=50
MPRINT(EM_DIAGRAM):   run;
994438     tech = Default;
994439     ;
994440     run;
 
NOTE: The data set WORK.EM_AUTONEURAL35 has 2374 observations and 10 variables.
NOTE: The data set EMWS8.META3_VALIDATE has . observations and 45 variables.
NOTE: View EMWS8.META3_VALIDATE.VIEW used (Total process time):
      real time           23.46 seconds
      cpu time            23.43 seconds
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: Closing the Neural Application.
NOTE: The PROCEDURE NEURAL printed page 950.
NOTE: PROCEDURE NEURAL used (Total process time):
      real time           23.47 seconds
      cpu time            23.44 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
994441     *;
994442     proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
MPRINT(EM_DIAGRAM):   proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
994443     var _iter_ _aic_ _averr_ _misc_
994444     _vaverr_ _vmisc_
994445     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
994446     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _name_='OVERALL';
NOTE: The PROCEDURE PRINT printed page 951.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Extract best iteration;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
994447     *------------------------------------------------------------*;
994448     * Extract best iteration;
994449     ;
994450     *------------------------------------------------------------*;
994451     %global _iter;
994452     data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
994453     set _anfit(where=(_NAME_ eq 'OVERALL'));
MPRINT(EM_DIAGRAM):   set _anfit(where=(_NAME_ eq 'OVERALL'));
994454     retain _min 1e+64;
MPRINT(EM_DIAGRAM):   retain _min 1e+64;
994455     if _VMISC_ < _min then do;
MPRINT(EM_DIAGRAM):   if _VMISC_ < _min then do;
994456     _min = _VMISC_;
MPRINT(EM_DIAGRAM):   _min = _VMISC_;
994457     call symput('_iter',put(_ITER_, 6.));
MPRINT(EM_DIAGRAM):   call symput('_iter',put(_ITER_, 6.));
994458     end;
MPRINT(EM_DIAGRAM):   end;
994459     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _NAME_='OVERALL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
994460     *;
 
994461     data EMWS8.AutoNeural35_ESTDS;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural35_ESTDS;
994462     set _anest;
MPRINT(EM_DIAGRAM):   set _anest;
994463     if _ITER_ eq 3 then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 3 then do;
994464     output;
MPRINT(EM_DIAGRAM):   output;
994465     stop;
MPRINT(EM_DIAGRAM):   stop;
994466     end;
MPRINT(EM_DIAGRAM):   end;
994467     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._ANEST.
NOTE: The data set EMWS8.AUTONEURAL35_ESTDS has 1 observations and 87 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
994468     *;
994469     data EMWS8.AutoNeural35_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural35_OUTFIT;
994470     set _anfit;
MPRINT(EM_DIAGRAM):   set _anfit;
994471     if _ITER_ eq 3 and _NAME_ eq "OVERALL" then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 3 and _NAME_ eq "OVERALL" then do;
994472     output;
MPRINT(EM_DIAGRAM):   output;
994473     stop;
MPRINT(EM_DIAGRAM):   stop;
994474     end;
MPRINT(EM_DIAGRAM):   end;
994475     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set WORK._ANFIT.
NOTE: The data set EMWS8.AUTONEURAL35_OUTFIT has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
994476     *;
MPRINT(EM_DIAGRAM):    *;
994477     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
994478     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_selectediteration_title
994478   ! , NOQUOTE, _VMISC_))";
MPRINT(EM_DIAGRAM):   title10 "Selected Iteration based on _VMISC_";
994479     proc print data=EMWS8.AutoNeural35_OUTFIT noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural35_OUTFIT noobs;
994480     var _iter_ _aic_ _averr_ _misc_
994481     _vaverr_ _vmisc_
994482     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
994483     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL35_OUTFIT.
NOTE: The PROCEDURE PRINT printed page 952.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
994484     title9;
MPRINT(EM_DIAGRAM):   title9;
994485     title10;
MPRINT(EM_DIAGRAM):   title10;
994486     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
994487     set EMWS8.AutoNeural35_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural35_OUTFIT;
994488     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
994489     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL35_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
994490     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
994491     set EMWS8.AutoNeural35_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural35_OUTFIT;
994492     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
994493     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL35_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
994494     *SEARCH: copy estimates and fit to best buffer;
MPRINT(EM_DIAGRAM):    *SEARCH: copy estimates and fit to best buffer;
994495     ;
MPRINT(EM_DIAGRAM):   ;
994496     data WORK.SAVEDS_AUTONEUR_2H8DSPC;
MPRINT(EM_DIAGRAM):   data WORK.SAVEDS_AUTONEUR_2H8DSPC;
994497     set EMWS8.AutoNeural35_ESTDS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural35_ESTDS;
994498     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.AUTONEURAL35_ESTDS.
NOTE: The data set WORK.SAVEDS_AUTONEUR_2H8DSPC has 1 observations and 87
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
994499     data EMWS8.AutoNeural35_BESTDS;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural35_BESTDS;
994500     set EMWS8.AutoNeural35_ESTDS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural35_ESTDS;
994501     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.AUTONEURAL35_ESTDS.
NOTE: The data set EMWS8.AUTONEURAL35_BESTDS has 1 observations and 87
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
994502     data WORK.BFITDS_AUTONEUR_2H8DSPC;
MPRINT(EM_DIAGRAM):   data WORK.BFITDS_AUTONEUR_2H8DSPC;
994503     set EMWS8.AutoNeural35_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural35_OUTFIT;
994504     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL35_OUTFIT.
NOTE: The data set WORK.BFITDS_AUTONEUR_2H8DSPC has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
994505     * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
994506     ;
MPRINT(EM_DIAGRAM):   ;
994507     data EMWS8.AutoNeural35_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural35_OUTFIT;
994508     set EMWS8.AutoNeural35_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural35_OUTFIT;
994509     length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
994510     _func_ = "SOFTMAX";
MPRINT(EM_DIAGRAM):   _func_ = "SOFTMAX";
994511     _status_ = "candidate";
MPRINT(EM_DIAGRAM):   _status_ = "candidate";
994512     _step_ = "FUNNEL LAYERS 1";
MPRINT(EM_DIAGRAM):   _step_ = "FUNNEL LAYERS 1";
994513     _index_ = 1;
MPRINT(EM_DIAGRAM):   _index_ = 1;
994514     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL35_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL35_OUTFIT has 1 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
994515     data EMWS8.AutoNeural35_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural35_HISTORY;
994516     set EMWS8.AutoNeural35_HISTORY EMWS8.AutoNeural35_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural35_HISTORY EMWS8.AutoNeural35_OUTFIT;
994517     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set
      EMWS8.AUTONEURAL35_HISTORY.
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL35_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL35_HISTORY has 5 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
994518     *SEARCH: recall best estimates and fit;
MPRINT(EM_DIAGRAM):    *SEARCH: recall best estimates and fit;
994519     ;
MPRINT(EM_DIAGRAM):   ;
994520     data EMWS8.AutoNeural35_ESTDS;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural35_ESTDS;
994521     set EMWS8.AutoNeural35_BESTDS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural35_BESTDS;
994522     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL35_BESTDS.
NOTE: The data set EMWS8.AUTONEURAL35_ESTDS has 1 observations and 87 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
994523     data EMWS8.AutoNeural35_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural35_OUTFIT;
994524     set WORK.BFITDS_AUTONEUR_2H8DSPC;
MPRINT(EM_DIAGRAM):   set WORK.BFITDS_AUTONEUR_2H8DSPC;
994525     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      WORK.BFITDS_AUTONEUR_2H8DSPC.
NOTE: The data set EMWS8.AUTONEURAL35_OUTFIT has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
994526     * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
994527     ;
MPRINT(EM_DIAGRAM):   ;
994528     data EMWS8.AutoNeural35_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural35_OUTFIT;
994529     set EMWS8.AutoNeural35_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural35_OUTFIT;
994530     length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
994531     _func_ = "SOFTMAX";
MPRINT(EM_DIAGRAM):   _func_ = "SOFTMAX";
994532     _status_ = "keep";
MPRINT(EM_DIAGRAM):   _status_ = "keep";
994533     _step_ = "FUNNEL LAYERS 1";
MPRINT(EM_DIAGRAM):   _step_ = "FUNNEL LAYERS 1";
994534     _index_ = 1;
MPRINT(EM_DIAGRAM):   _index_ = 1;
994535     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL35_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL35_OUTFIT has 1 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
994536     data EMWS8.AutoNeural35_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural35_HISTORY;
994537     set EMWS8.AutoNeural35_HISTORY EMWS8.AutoNeural35_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural35_HISTORY EMWS8.AutoNeural35_OUTFIT;
994538     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 5 observations read from the data set
      EMWS8.AUTONEURAL35_HISTORY.
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL35_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL35_HISTORY has 6 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
994539     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
994540     set EMWS8.AutoNeural35_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural35_OUTFIT;
994541     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
994542     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL35_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 40 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
994543     *;
MPRINT(EM_DIAGRAM):    *;
994544     proc neural data=EM_AutoNeural35 dmdbcat=WORK.AutoNeural35_DMDB
994545     validdata=EMWS8.Meta3_VALIDATE
994546     ;
MPRINT(EM_DIAGRAM):   proc neural data=EM_AutoNeural35
dmdbcat=WORK.AutoNeural35_DMDB validdata=EMWS8.Meta3_VALIDATE ;
994547     *;
MPRINT(EM_DIAGRAM):   *;
994548     nloptions noprint;
MPRINT(EM_DIAGRAM):   nloptions noprint;
994549     performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   input
994550     input %INTINPUTS / level=interval id=interval;
MPRINT(INTINPUTS):   AcceptedCmpTotal Frq Mnt MntMeatProducts
NumCatalogPurchases NumDealsPurchases NumWebVisitsMonth Recency
MPRINT(EM_DIAGRAM):   / level=interval id=interval;
MPRINT(EM_DIAGRAM):   input
994551     input %NOMINPUTS / level=nominal id=nominal;
MPRINT(NOMINPUTS):   Marital_Status
MPRINT(EM_DIAGRAM):   / level=nominal id=nominal;
994552     target DepVar / level=NOMINAL id=DepVar
994553     ;
MPRINT(EM_DIAGRAM):   target DepVar / level=NOMINAL id=DepVar ;
994554     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
994555     * Direct connection;
MPRINT(EM_DIAGRAM):   * Direct connection;
994556     ;
MPRINT(EM_DIAGRAM):   ;
994557     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
994558     connect interval DepVar;
MPRINT(EM_DIAGRAM):   connect interval DepVar;
994559     connect nominal DepVar;
MPRINT(EM_DIAGRAM):   connect nominal DepVar;
994560     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
994561     * Layer #1;
MPRINT(EM_DIAGRAM):   * Layer #1;
994562     ;
MPRINT(EM_DIAGRAM):   ;
994563     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
994564     Hidden 6 / id = H1x1_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H1x1_ act=SOFTMAX;
994565     connect interval H1x1_;
MPRINT(EM_DIAGRAM):   connect interval H1x1_;
994566     connect nominal H1x1_;
MPRINT(EM_DIAGRAM):   connect nominal H1x1_;
994567     connect H1x1_ DepVar;
MPRINT(EM_DIAGRAM):   connect H1x1_ DepVar;
994568     *;
MPRINT(EM_DIAGRAM):   *;
994569     netoptions ranscale = 1;
MPRINT(EM_DIAGRAM):   netoptions ranscale = 1;
994570     *;
MPRINT(EM_DIAGRAM):   *;
994571     initial
994572     inest = EMWS8.AutoNeural35_ESTDS bylabel;
MPRINT(EM_DIAGRAM):   initial inest = EMWS8.AutoNeural35_ESTDS bylabel;
NOTE: The data set EMWS8.AUTONEURAL35_ESTDS has 1 observations and 87 variables.
994573     ;
MPRINT(EM_DIAGRAM):   ;
994574     *;
MPRINT(EM_DIAGRAM):   *;
994575     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
994576     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_prelim_title  ,NOQUOTE,
994576   ! Search # 2 FUNNEL LAYERS trial # 1 : DIRECT : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 2 FUNNEL LAYERS trial # 1 : DIRECT :
Prelim";
994577     prelim 24 outest=_anpre pretime=36 preiter=25
MPRINT(EM_DIAGRAM):   prelim 24 outest=_anpre pretime=36 preiter=25 tech =
Default inest = EMWS8.AutoNeural35_ESTDS bylabel ;
NOTE:  Synchronizing the objectives and the Solution.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
The prelim will run only once. Use the randbias or randout option on the target
layer.
NOTE: The data set WORK._ANPRE has 3 observations and 99 variables.
NOTE: The data set EMWS8.AUTONEURAL35_ESTDS has 1 observations and 87 variables.
MPRINT(EM_DIAGRAM):   *;
994578     tech = Default
994579     inest = EMWS8.AutoNeural35_ESTDS bylabel
994580     ;
994581     *;
994582     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
994583     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_train_title  ,NOQUOTE,
994583   ! Search # 2 FUNNEL LAYERS trial # 1 : DIRECT : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 2 FUNNEL LAYERS trial # 1 : DIRECT :
Training";
MPRINT(EM_DIAGRAM):   train estiter=1 outest=_anest outfit=_anfit maxtime=879
maxiter=50 tech = Default;
WARNING: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 50 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANEST has 137 observations and 99 variables.
NOTE: The data set WORK._ANFIT has 104 observations and 36 variables.
MPRINT(EM_DIAGRAM):   ;
994584     train estiter=1 outest=_anest outfit=_anfit maxtime=879 maxiter=50
MPRINT(EM_DIAGRAM):   run;
994585     tech = Default;
994586     ;
994587     run;
 
NOTE: The data set WORK.EM_AUTONEURAL35 has 2374 observations and 10 variables.
NOTE: The data set EMWS8.META3_VALIDATE has . observations and 45 variables.
NOTE: View EMWS8.META3_VALIDATE.VIEW used (Total process time):
      real time           4.18 seconds
      cpu time            3.51 seconds
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: Closing the Neural Application.
NOTE: The PROCEDURE NEURAL printed page 953.
NOTE: PROCEDURE NEURAL used (Total process time):
      real time           4.18 seconds
      cpu time            3.51 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
994588     *;
994589     proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
MPRINT(EM_DIAGRAM):   proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
994590     var _iter_ _aic_ _averr_ _misc_
994591     _vaverr_ _vmisc_
994592     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
994593     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _name_='OVERALL';
NOTE: The PROCEDURE PRINT printed page 954.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Extract best iteration;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
994594     *------------------------------------------------------------*;
994595     * Extract best iteration;
994596     ;
994597     *------------------------------------------------------------*;
994598     %global _iter;
994599     data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
994600     set _anfit(where=(_NAME_ eq 'OVERALL'));
MPRINT(EM_DIAGRAM):   set _anfit(where=(_NAME_ eq 'OVERALL'));
994601     retain _min 1e+64;
MPRINT(EM_DIAGRAM):   retain _min 1e+64;
994602     if _VMISC_ < _min then do;
MPRINT(EM_DIAGRAM):   if _VMISC_ < _min then do;
994603     _min = _VMISC_;
MPRINT(EM_DIAGRAM):   _min = _VMISC_;
994604     call symput('_iter',put(_ITER_, 6.));
MPRINT(EM_DIAGRAM):   call symput('_iter',put(_ITER_, 6.));
994605     end;
MPRINT(EM_DIAGRAM):   end;
994606     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _NAME_='OVERALL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
994607     *;
 
994608     data EMWS8.AutoNeural35_ESTDS;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural35_ESTDS;
994609     set _anest;
MPRINT(EM_DIAGRAM):   set _anest;
994610     if _ITER_ eq 0 then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 0 then do;
994611     output;
MPRINT(EM_DIAGRAM):   output;
994612     stop;
MPRINT(EM_DIAGRAM):   stop;
994613     end;
MPRINT(EM_DIAGRAM):   end;
994614     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK._ANEST.
NOTE: The data set EMWS8.AUTONEURAL35_ESTDS has 1 observations and 99 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
994615     *;
994616     data EMWS8.AutoNeural35_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural35_OUTFIT;
994617     set _anfit;
MPRINT(EM_DIAGRAM):   set _anfit;
994618     if _ITER_ eq 0 and _NAME_ eq "OVERALL" then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 0 and _NAME_ eq "OVERALL" then do;
994619     output;
MPRINT(EM_DIAGRAM):   output;
994620     stop;
MPRINT(EM_DIAGRAM):   stop;
994621     end;
MPRINT(EM_DIAGRAM):   end;
994622     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set WORK._ANFIT.
NOTE: The data set EMWS8.AUTONEURAL35_OUTFIT has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
994623     *;
MPRINT(EM_DIAGRAM):    *;
994624     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
994625     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_selectediteration_title
994625   ! , NOQUOTE, _VMISC_))";
MPRINT(EM_DIAGRAM):   title10 "Selected Iteration based on _VMISC_";
994626     proc print data=EMWS8.AutoNeural35_OUTFIT noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural35_OUTFIT noobs;
994627     var _iter_ _aic_ _averr_ _misc_
994628     _vaverr_ _vmisc_
994629     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
994630     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL35_OUTFIT.
NOTE: The PROCEDURE PRINT printed page 955.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
994631     title9;
MPRINT(EM_DIAGRAM):   title9;
994632     title10;
MPRINT(EM_DIAGRAM):   title10;
994633     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
994634     set EMWS8.AutoNeural35_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural35_OUTFIT;
994635     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
994636     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL35_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
994637     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
994638     set EMWS8.AutoNeural35_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural35_OUTFIT;
994639     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
994640     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL35_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
994641     * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
994642     ;
MPRINT(EM_DIAGRAM):   ;
994643     data EMWS8.AutoNeural35_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural35_OUTFIT;
994644     set EMWS8.AutoNeural35_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural35_OUTFIT;
994645     length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
994646     _func_ = "DIRECT";
MPRINT(EM_DIAGRAM):   _func_ = "DIRECT";
994647     _status_ = "reject";
MPRINT(EM_DIAGRAM):   _status_ = "reject";
994648     _step_ = "FUNNEL LAYERS 2";
MPRINT(EM_DIAGRAM):   _step_ = "FUNNEL LAYERS 2";
994649     _index_ = 2;
MPRINT(EM_DIAGRAM):   _index_ = 2;
994650     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL35_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL35_OUTFIT has 1 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
994651     data EMWS8.AutoNeural35_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural35_HISTORY;
994652     set EMWS8.AutoNeural35_HISTORY EMWS8.AutoNeural35_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural35_HISTORY EMWS8.AutoNeural35_OUTFIT;
994653     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 6 observations read from the data set
      EMWS8.AUTONEURAL35_HISTORY.
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL35_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL35_HISTORY has 7 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
994654     * SEARCH: recall starting estimates;
MPRINT(EM_DIAGRAM):    * SEARCH: recall starting estimates;
994655     ;
MPRINT(EM_DIAGRAM):   ;
994656     data EMWS8.AutoNeural35_ESTDS;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural35_ESTDS;
994657     set EMWS8.AutoNeural35_BESTDS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural35_BESTDS;
994658     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL35_BESTDS.
NOTE: The data set EMWS8.AUTONEURAL35_ESTDS has 1 observations and 87 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
994659     *;
MPRINT(EM_DIAGRAM):    *;
994660     proc neural data=EM_AutoNeural35 dmdbcat=WORK.AutoNeural35_DMDB
994661     validdata=EMWS8.Meta3_VALIDATE
994662     ;
MPRINT(EM_DIAGRAM):   proc neural data=EM_AutoNeural35
dmdbcat=WORK.AutoNeural35_DMDB validdata=EMWS8.Meta3_VALIDATE ;
994663     *;
MPRINT(EM_DIAGRAM):   *;
994664     nloptions noprint;
MPRINT(EM_DIAGRAM):   nloptions noprint;
994665     performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   input
994666     input %INTINPUTS / level=interval id=interval;
MPRINT(INTINPUTS):   AcceptedCmpTotal Frq Mnt MntMeatProducts
NumCatalogPurchases NumDealsPurchases NumWebVisitsMonth Recency
MPRINT(EM_DIAGRAM):   / level=interval id=interval;
MPRINT(EM_DIAGRAM):   input
994667     input %NOMINPUTS / level=nominal id=nominal;
MPRINT(NOMINPUTS):   Marital_Status
MPRINT(EM_DIAGRAM):   / level=nominal id=nominal;
994668     target DepVar / level=NOMINAL id=DepVar
994669     ;
MPRINT(EM_DIAGRAM):   target DepVar / level=NOMINAL id=DepVar ;
994670     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
994671     * Layer #1;
MPRINT(EM_DIAGRAM):   * Layer #1;
994672     ;
MPRINT(EM_DIAGRAM):   ;
994673     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
994674     Hidden 6 / id = H1x1_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H1x1_ act=SOFTMAX;
994675     connect interval H1x1_;
MPRINT(EM_DIAGRAM):   connect interval H1x1_;
994676     connect nominal H1x1_;
MPRINT(EM_DIAGRAM):   connect nominal H1x1_;
994677     Hidden 6 / id = H1x2_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H1x2_ act=SOFTMAX;
994678     connect interval H1x2_;
MPRINT(EM_DIAGRAM):   connect interval H1x2_;
994679     connect nominal H1x2_;
MPRINT(EM_DIAGRAM):   connect nominal H1x2_;
994680     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
994681     * Layer #2;
MPRINT(EM_DIAGRAM):   * Layer #2;
994682     ;
MPRINT(EM_DIAGRAM):   ;
994683     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
994684     Hidden 6 / id = H2x1_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H2x1_ act=LOG;
994685     connect H1x1_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x1_ H2x1_;
994686     connect H1x2_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x2_ H2x1_;
994687     connect H2x1_ DepVar;
MPRINT(EM_DIAGRAM):   connect H2x1_ DepVar;
994688     *;
MPRINT(EM_DIAGRAM):   *;
994689     netoptions ranscale = 1;
MPRINT(EM_DIAGRAM):   netoptions ranscale = 1;
994690     *;
MPRINT(EM_DIAGRAM):   *;
994691     initial
994692     inest = EMWS8.AutoNeural35_ESTDS bylabel;
MPRINT(EM_DIAGRAM):   initial inest = EMWS8.AutoNeural35_ESTDS bylabel;
NOTE: The data set EMWS8.AUTONEURAL35_ESTDS has 1 observations and 87 variables.
994693     ;
MPRINT(EM_DIAGRAM):   ;
994694     *;
MPRINT(EM_DIAGRAM):   *;
994695     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
994696     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_prelim_title  ,NOQUOTE,
994696   ! Search # 2 FUNNEL LAYERS trial # 2 : LOGISTIC : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 2 FUNNEL LAYERS trial # 2 : LOGISTIC :
Prelim";
994697     prelim 30 outest=_anpre pretime=30 preiter=25
MPRINT(EM_DIAGRAM):   prelim 30 outest=_anpre pretime=30 preiter=25 tech =
Default inest = EMWS8.AutoNeural35_ESTDS bylabel ;
NOTE:  Synchronizing the objectives and the Solution.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANPRE has 61 observations and 230 variables.
NOTE: The data set EMWS8.AUTONEURAL35_ESTDS has 1 observations and 87 variables.
MPRINT(EM_DIAGRAM):   *;
994698     tech = Default
994699     inest = EMWS8.AutoNeural35_ESTDS bylabel
994700     ;
994701     *;
994702     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
994703     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_train_title  ,NOQUOTE,
994703   ! Search # 2 FUNNEL LAYERS trial # 2 : LOGISTIC : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 2 FUNNEL LAYERS trial # 2 : LOGISTIC :
Training";
MPRINT(EM_DIAGRAM):   train estiter=1 outest=_anest outfit=_anfit maxtime=878
maxiter=50 tech = Default;
WARNING: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 50 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANEST has 53 observations and 230 variables.
NOTE: The data set WORK._ANFIT has 104 observations and 36 variables.
MPRINT(EM_DIAGRAM):   ;
994704     train estiter=1 outest=_anest outfit=_anfit maxtime=878 maxiter=50
MPRINT(EM_DIAGRAM):   run;
994705     tech = Default;
994706     ;
994707     run;
 
NOTE: The data set WORK.EM_AUTONEURAL35 has 2374 observations and 10 variables.
NOTE: The data set EMWS8.META3_VALIDATE has . observations and 45 variables.
NOTE: View EMWS8.META3_VALIDATE.VIEW used (Total process time):
      real time           13.03 seconds
      cpu time            13.02 seconds
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: Closing the Neural Application.
NOTE: The PROCEDURE NEURAL printed page 956.
NOTE: PROCEDURE NEURAL used (Total process time):
      real time           13.05 seconds
      cpu time            13.04 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
994708     *;
994709     proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
MPRINT(EM_DIAGRAM):   proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
994710     var _iter_ _aic_ _averr_ _misc_
994711     _vaverr_ _vmisc_
994712     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
994713     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _name_='OVERALL';
NOTE: The PROCEDURE PRINT printed page 957.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Extract best iteration;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
994714     *------------------------------------------------------------*;
994715     * Extract best iteration;
994716     ;
994717     *------------------------------------------------------------*;
994718     %global _iter;
994719     data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
994720     set _anfit(where=(_NAME_ eq 'OVERALL'));
MPRINT(EM_DIAGRAM):   set _anfit(where=(_NAME_ eq 'OVERALL'));
994721     retain _min 1e+64;
MPRINT(EM_DIAGRAM):   retain _min 1e+64;
994722     if _VMISC_ < _min then do;
MPRINT(EM_DIAGRAM):   if _VMISC_ < _min then do;
994723     _min = _VMISC_;
MPRINT(EM_DIAGRAM):   _min = _VMISC_;
994724     call symput('_iter',put(_ITER_, 6.));
MPRINT(EM_DIAGRAM):   call symput('_iter',put(_ITER_, 6.));
994725     end;
MPRINT(EM_DIAGRAM):   end;
994726     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _NAME_='OVERALL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
994727     *;
 
994728     data EMWS8.AutoNeural35_ESTDS;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural35_ESTDS;
994729     set _anest;
MPRINT(EM_DIAGRAM):   set _anest;
994730     if _ITER_ eq 49 then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 49 then do;
994731     output;
MPRINT(EM_DIAGRAM):   output;
994732     stop;
MPRINT(EM_DIAGRAM):   stop;
994733     end;
MPRINT(EM_DIAGRAM):   end;
994734     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 50 observations read from the data set WORK._ANEST.
NOTE: The data set EMWS8.AUTONEURAL35_ESTDS has 1 observations and 230
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
994735     *;
994736     data EMWS8.AutoNeural35_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural35_OUTFIT;
994737     set _anfit;
MPRINT(EM_DIAGRAM):   set _anfit;
994738     if _ITER_ eq 49 and _NAME_ eq "OVERALL" then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 49 and _NAME_ eq "OVERALL" then do;
994739     output;
MPRINT(EM_DIAGRAM):   output;
994740     stop;
MPRINT(EM_DIAGRAM):   stop;
994741     end;
MPRINT(EM_DIAGRAM):   end;
994742     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 100 observations read from the data set WORK._ANFIT.
NOTE: The data set EMWS8.AUTONEURAL35_OUTFIT has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
994743     *;
MPRINT(EM_DIAGRAM):    *;
994744     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
994745     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_selectediteration_title
994745   ! , NOQUOTE, _VMISC_))";
MPRINT(EM_DIAGRAM):   title10 "Selected Iteration based on _VMISC_";
994746     proc print data=EMWS8.AutoNeural35_OUTFIT noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural35_OUTFIT noobs;
994747     var _iter_ _aic_ _averr_ _misc_
994748     _vaverr_ _vmisc_
994749     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
994750     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL35_OUTFIT.
NOTE: The PROCEDURE PRINT printed page 958.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
994751     title9;
MPRINT(EM_DIAGRAM):   title9;
994752     title10;
MPRINT(EM_DIAGRAM):   title10;
994753     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
994754     set EMWS8.AutoNeural35_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural35_OUTFIT;
994755     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
994756     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL35_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
994757     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
994758     set EMWS8.AutoNeural35_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural35_OUTFIT;
994759     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
994760     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL35_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
994761     *SEARCH: copy estimates and fit to best buffer;
MPRINT(EM_DIAGRAM):    *SEARCH: copy estimates and fit to best buffer;
994762     ;
MPRINT(EM_DIAGRAM):   ;
994763     data WORK.SAVEDS_AUTONEUR_2H8DSPC;
MPRINT(EM_DIAGRAM):   data WORK.SAVEDS_AUTONEUR_2H8DSPC;
994764     set EMWS8.AutoNeural35_ESTDS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural35_ESTDS;
994765     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.AUTONEURAL35_ESTDS.
NOTE: The data set WORK.SAVEDS_AUTONEUR_2H8DSPC has 1 observations and 230
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
994766     data EMWS8.AutoNeural35_BESTDS;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural35_BESTDS;
994767     set EMWS8.AutoNeural35_ESTDS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural35_ESTDS;
994768     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.AUTONEURAL35_ESTDS.
NOTE: The data set EMWS8.AUTONEURAL35_BESTDS has 1 observations and 230
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
994769     data WORK.BFITDS_AUTONEUR_2H8DSPC;
MPRINT(EM_DIAGRAM):   data WORK.BFITDS_AUTONEUR_2H8DSPC;
994770     set EMWS8.AutoNeural35_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural35_OUTFIT;
994771     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL35_OUTFIT.
NOTE: The data set WORK.BFITDS_AUTONEUR_2H8DSPC has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
994772     * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
994773     ;
MPRINT(EM_DIAGRAM):   ;
994774     data EMWS8.AutoNeural35_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural35_OUTFIT;
994775     set EMWS8.AutoNeural35_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural35_OUTFIT;
994776     length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
994777     _func_ = "LOGISTIC";
MPRINT(EM_DIAGRAM):   _func_ = "LOGISTIC";
994778     _status_ = "candidate";
MPRINT(EM_DIAGRAM):   _status_ = "candidate";
994779     _step_ = "FUNNEL LAYERS 2";
MPRINT(EM_DIAGRAM):   _step_ = "FUNNEL LAYERS 2";
994780     _index_ = 2;
MPRINT(EM_DIAGRAM):   _index_ = 2;
994781     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL35_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL35_OUTFIT has 1 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
994782     data EMWS8.AutoNeural35_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural35_HISTORY;
994783     set EMWS8.AutoNeural35_HISTORY EMWS8.AutoNeural35_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural35_HISTORY EMWS8.AutoNeural35_OUTFIT;
994784     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 7 observations read from the data set
      EMWS8.AUTONEURAL35_HISTORY.
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL35_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL35_HISTORY has 8 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
994785     * SEARCH: recall starting estimates;
MPRINT(EM_DIAGRAM):    * SEARCH: recall starting estimates;
994786     ;
MPRINT(EM_DIAGRAM):   ;
994787     data EMWS8.AutoNeural35_ESTDS;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural35_ESTDS;
994788     set EMWS8.AutoNeural35_BESTDS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural35_BESTDS;
994789     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL35_BESTDS.
NOTE: The data set EMWS8.AUTONEURAL35_ESTDS has 1 observations and 230
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
994790     *;
MPRINT(EM_DIAGRAM):    *;
994791     proc neural data=EM_AutoNeural35 dmdbcat=WORK.AutoNeural35_DMDB
994792     validdata=EMWS8.Meta3_VALIDATE
994793     ;
MPRINT(EM_DIAGRAM):   proc neural data=EM_AutoNeural35
dmdbcat=WORK.AutoNeural35_DMDB validdata=EMWS8.Meta3_VALIDATE ;
994794     *;
MPRINT(EM_DIAGRAM):   *;
994795     nloptions noprint;
MPRINT(EM_DIAGRAM):   nloptions noprint;
994796     performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   input
994797     input %INTINPUTS / level=interval id=interval;
MPRINT(INTINPUTS):   AcceptedCmpTotal Frq Mnt MntMeatProducts
NumCatalogPurchases NumDealsPurchases NumWebVisitsMonth Recency
MPRINT(EM_DIAGRAM):   / level=interval id=interval;
MPRINT(EM_DIAGRAM):   input
994798     input %NOMINPUTS / level=nominal id=nominal;
MPRINT(NOMINPUTS):   Marital_Status
MPRINT(EM_DIAGRAM):   / level=nominal id=nominal;
994799     target DepVar / level=NOMINAL id=DepVar
994800     ;
MPRINT(EM_DIAGRAM):   target DepVar / level=NOMINAL id=DepVar ;
994801     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
994802     * Layer #1;
MPRINT(EM_DIAGRAM):   * Layer #1;
994803     ;
MPRINT(EM_DIAGRAM):   ;
994804     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
994805     Hidden 6 / id = H1x1_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H1x1_ act=SOFTMAX;
994806     connect interval H1x1_;
MPRINT(EM_DIAGRAM):   connect interval H1x1_;
994807     connect nominal H1x1_;
MPRINT(EM_DIAGRAM):   connect nominal H1x1_;
994808     Hidden 6 / id = H1x2_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H1x2_ act=SOFTMAX;
994809     connect interval H1x2_;
MPRINT(EM_DIAGRAM):   connect interval H1x2_;
994810     connect nominal H1x2_;
MPRINT(EM_DIAGRAM):   connect nominal H1x2_;
994811     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
994812     * Layer #2;
MPRINT(EM_DIAGRAM):   * Layer #2;
994813     ;
MPRINT(EM_DIAGRAM):   ;
994814     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
994815     Hidden 6 / id = H2x1_ act=SINE;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H2x1_ act=SINE;
994816     connect H1x1_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x1_ H2x1_;
994817     connect H1x2_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x2_ H2x1_;
994818     connect H2x1_ DepVar;
MPRINT(EM_DIAGRAM):   connect H2x1_ DepVar;
994819     *;
MPRINT(EM_DIAGRAM):   *;
994820     netoptions ranscale = 1;
MPRINT(EM_DIAGRAM):   netoptions ranscale = 1;
994821     *;
MPRINT(EM_DIAGRAM):   *;
994822     initial
994823     inest = EMWS8.AutoNeural35_ESTDS bylabel;
MPRINT(EM_DIAGRAM):   initial inest = EMWS8.AutoNeural35_ESTDS bylabel;
NOTE: The data set EMWS8.AUTONEURAL35_ESTDS has 1 observations and 230
      variables.
994824     ;
MPRINT(EM_DIAGRAM):   ;
994825     *;
MPRINT(EM_DIAGRAM):   *;
994826     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
994827     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_prelim_title  ,NOQUOTE,
994827   ! Search # 2 FUNNEL LAYERS trial # 3 : SINE : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 2 FUNNEL LAYERS trial # 3 : SINE :
Prelim";
994828     prelim 30 outest=_anpre pretime=30 preiter=25
MPRINT(EM_DIAGRAM):   prelim 30 outest=_anpre pretime=30 preiter=25 tech =
Default inest = EMWS8.AutoNeural35_ESTDS bylabel ;
NOTE:  Synchronizing the objectives and the Solution.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
The prelim will run only once. Use the randbias or randout option on the target
layer.
NOTE: The data set WORK._ANPRE has 3 observations and 230 variables.
NOTE: The data set EMWS8.AUTONEURAL35_ESTDS has 1 observations and 230
      variables.
MPRINT(EM_DIAGRAM):   *;
994829     tech = Default
994830     inest = EMWS8.AutoNeural35_ESTDS bylabel
994831     ;
994832     *;
994833     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
994834     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_train_title  ,NOQUOTE,
994834   ! Search # 2 FUNNEL LAYERS trial # 3 : SINE : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 2 FUNNEL LAYERS trial # 3 : SINE :
Training";
MPRINT(EM_DIAGRAM):   train estiter=1 outest=_anest outfit=_anfit maxtime=874
maxiter=50 tech = Default;
WARNING: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 50 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANEST has 53 observations and 230 variables.
NOTE: The data set WORK._ANFIT has 104 observations and 36 variables.
MPRINT(EM_DIAGRAM):   ;
994835     train estiter=1 outest=_anest outfit=_anfit maxtime=874 maxiter=50
MPRINT(EM_DIAGRAM):   run;
994836     tech = Default;
994837     ;
994838     run;
 
NOTE: The data set WORK.EM_AUTONEURAL35 has 2374 observations and 10 variables.
NOTE: The data set EMWS8.META3_VALIDATE has . observations and 45 variables.
NOTE: View EMWS8.META3_VALIDATE.VIEW used (Total process time):
      real time           1.21 seconds
      cpu time            1.20 seconds
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: Closing the Neural Application.
NOTE: The PROCEDURE NEURAL printed page 959.
NOTE: PROCEDURE NEURAL used (Total process time):
      real time           1.21 seconds
      cpu time            1.20 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
994839     *;
994840     proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
MPRINT(EM_DIAGRAM):   proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
994841     var _iter_ _aic_ _averr_ _misc_
994842     _vaverr_ _vmisc_
994843     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
994844     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _name_='OVERALL';
NOTE: The PROCEDURE PRINT printed page 960.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Extract best iteration;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
994845     *------------------------------------------------------------*;
994846     * Extract best iteration;
994847     ;
994848     *------------------------------------------------------------*;
994849     %global _iter;
994850     data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
994851     set _anfit(where=(_NAME_ eq 'OVERALL'));
MPRINT(EM_DIAGRAM):   set _anfit(where=(_NAME_ eq 'OVERALL'));
994852     retain _min 1e+64;
MPRINT(EM_DIAGRAM):   retain _min 1e+64;
994853     if _VMISC_ < _min then do;
MPRINT(EM_DIAGRAM):   if _VMISC_ < _min then do;
994854     _min = _VMISC_;
MPRINT(EM_DIAGRAM):   _min = _VMISC_;
994855     call symput('_iter',put(_ITER_, 6.));
MPRINT(EM_DIAGRAM):   call symput('_iter',put(_ITER_, 6.));
994856     end;
MPRINT(EM_DIAGRAM):   end;
994857     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _NAME_='OVERALL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
994858     *;
 
994859     data EMWS8.AutoNeural35_ESTDS;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural35_ESTDS;
994860     set _anest;
MPRINT(EM_DIAGRAM):   set _anest;
994861     if _ITER_ eq 10 then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 10 then do;
994862     output;
MPRINT(EM_DIAGRAM):   output;
994863     stop;
MPRINT(EM_DIAGRAM):   stop;
994864     end;
MPRINT(EM_DIAGRAM):   end;
994865     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 11 observations read from the data set WORK._ANEST.
NOTE: The data set EMWS8.AUTONEURAL35_ESTDS has 1 observations and 230
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
994866     *;
994867     data EMWS8.AutoNeural35_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural35_OUTFIT;
994868     set _anfit;
MPRINT(EM_DIAGRAM):   set _anfit;
994869     if _ITER_ eq 10 and _NAME_ eq "OVERALL" then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 10 and _NAME_ eq "OVERALL" then do;
994870     output;
MPRINT(EM_DIAGRAM):   output;
994871     stop;
MPRINT(EM_DIAGRAM):   stop;
994872     end;
MPRINT(EM_DIAGRAM):   end;
994873     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 22 observations read from the data set WORK._ANFIT.
NOTE: The data set EMWS8.AUTONEURAL35_OUTFIT has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
994874     *;
MPRINT(EM_DIAGRAM):    *;
994875     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
994876     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_selectediteration_title
994876   ! , NOQUOTE, _VMISC_))";
MPRINT(EM_DIAGRAM):   title10 "Selected Iteration based on _VMISC_";
994877     proc print data=EMWS8.AutoNeural35_OUTFIT noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural35_OUTFIT noobs;
994878     var _iter_ _aic_ _averr_ _misc_
994879     _vaverr_ _vmisc_
994880     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
994881     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL35_OUTFIT.
NOTE: The PROCEDURE PRINT printed page 961.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
994882     title9;
MPRINT(EM_DIAGRAM):   title9;
994883     title10;
MPRINT(EM_DIAGRAM):   title10;
994884     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
994885     set EMWS8.AutoNeural35_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural35_OUTFIT;
994886     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
994887     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL35_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
994888     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
994889     set EMWS8.AutoNeural35_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural35_OUTFIT;
994890     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
994891     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL35_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
994892     * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
994893     ;
MPRINT(EM_DIAGRAM):   ;
994894     data EMWS8.AutoNeural35_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural35_OUTFIT;
994895     set EMWS8.AutoNeural35_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural35_OUTFIT;
994896     length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
994897     _func_ = "SINE";
MPRINT(EM_DIAGRAM):   _func_ = "SINE";
994898     _status_ = "reject";
MPRINT(EM_DIAGRAM):   _status_ = "reject";
994899     _step_ = "FUNNEL LAYERS 2";
MPRINT(EM_DIAGRAM):   _step_ = "FUNNEL LAYERS 2";
994900     _index_ = 2;
MPRINT(EM_DIAGRAM):   _index_ = 2;
994901     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL35_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL35_OUTFIT has 1 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
994902     data EMWS8.AutoNeural35_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural35_HISTORY;
994903     set EMWS8.AutoNeural35_HISTORY EMWS8.AutoNeural35_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural35_HISTORY EMWS8.AutoNeural35_OUTFIT;
994904     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set
      EMWS8.AUTONEURAL35_HISTORY.
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL35_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL35_HISTORY has 9 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
994905     * SEARCH: recall starting estimates;
MPRINT(EM_DIAGRAM):    * SEARCH: recall starting estimates;
994906     ;
MPRINT(EM_DIAGRAM):   ;
994907     data EMWS8.AutoNeural35_ESTDS;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural35_ESTDS;
994908     set EMWS8.AutoNeural35_BESTDS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural35_BESTDS;
994909     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL35_BESTDS.
NOTE: The data set EMWS8.AUTONEURAL35_ESTDS has 1 observations and 230
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
994910     *;
MPRINT(EM_DIAGRAM):    *;
994911     proc neural data=EM_AutoNeural35 dmdbcat=WORK.AutoNeural35_DMDB
994912     validdata=EMWS8.Meta3_VALIDATE
994913     ;
MPRINT(EM_DIAGRAM):   proc neural data=EM_AutoNeural35
dmdbcat=WORK.AutoNeural35_DMDB validdata=EMWS8.Meta3_VALIDATE ;
994914     *;
MPRINT(EM_DIAGRAM):   *;
994915     nloptions noprint;
MPRINT(EM_DIAGRAM):   nloptions noprint;
994916     performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   input
994917     input %INTINPUTS / level=interval id=interval;
MPRINT(INTINPUTS):   AcceptedCmpTotal Frq Mnt MntMeatProducts
NumCatalogPurchases NumDealsPurchases NumWebVisitsMonth Recency
MPRINT(EM_DIAGRAM):   / level=interval id=interval;
MPRINT(EM_DIAGRAM):   input
994918     input %NOMINPUTS / level=nominal id=nominal;
MPRINT(NOMINPUTS):   Marital_Status
MPRINT(EM_DIAGRAM):   / level=nominal id=nominal;
994919     target DepVar / level=NOMINAL id=DepVar
994920     ;
MPRINT(EM_DIAGRAM):   target DepVar / level=NOMINAL id=DepVar ;
994921     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
994922     * Layer #1;
MPRINT(EM_DIAGRAM):   * Layer #1;
994923     ;
MPRINT(EM_DIAGRAM):   ;
994924     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
994925     Hidden 6 / id = H1x1_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H1x1_ act=SOFTMAX;
994926     connect interval H1x1_;
MPRINT(EM_DIAGRAM):   connect interval H1x1_;
994927     connect nominal H1x1_;
MPRINT(EM_DIAGRAM):   connect nominal H1x1_;
994928     Hidden 6 / id = H1x2_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H1x2_ act=SOFTMAX;
994929     connect interval H1x2_;
MPRINT(EM_DIAGRAM):   connect interval H1x2_;
994930     connect nominal H1x2_;
MPRINT(EM_DIAGRAM):   connect nominal H1x2_;
994931     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
994932     * Layer #2;
MPRINT(EM_DIAGRAM):   * Layer #2;
994933     ;
MPRINT(EM_DIAGRAM):   ;
994934     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
994935     Hidden 6 / id = H2x1_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H2x1_ act=SOFTMAX;
994936     connect H1x1_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x1_ H2x1_;
994937     connect H1x2_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x2_ H2x1_;
994938     connect H2x1_ DepVar;
MPRINT(EM_DIAGRAM):   connect H2x1_ DepVar;
994939     *;
MPRINT(EM_DIAGRAM):   *;
994940     netoptions ranscale = 1;
MPRINT(EM_DIAGRAM):   netoptions ranscale = 1;
994941     *;
MPRINT(EM_DIAGRAM):   *;
994942     initial
994943     inest = EMWS8.AutoNeural35_ESTDS bylabel;
MPRINT(EM_DIAGRAM):   initial inest = EMWS8.AutoNeural35_ESTDS bylabel;
NOTE: The data set EMWS8.AUTONEURAL35_ESTDS has 1 observations and 230
      variables.
994944     ;
MPRINT(EM_DIAGRAM):   ;
994945     *;
MPRINT(EM_DIAGRAM):   *;
994946     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
994947     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_prelim_title  ,NOQUOTE,
994947   ! Search # 2 FUNNEL LAYERS trial # 4 : SOFTMAX : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 2 FUNNEL LAYERS trial # 4 : SOFTMAX :
Prelim";
994948     prelim 30 outest=_anpre pretime=30 preiter=25
MPRINT(EM_DIAGRAM):   prelim 30 outest=_anpre pretime=30 preiter=25 tech =
Default inest = EMWS8.AutoNeural35_ESTDS bylabel ;
NOTE:  Synchronizing the objectives and the Solution.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
The prelim will run only once. Use the randbias or randout option on the target
layer.
NOTE: The data set WORK._ANPRE has 3 observations and 217 variables.
NOTE: The data set EMWS8.AUTONEURAL35_ESTDS has 1 observations and 230
      variables.
MPRINT(EM_DIAGRAM):   *;
994949     tech = Default
994950     inest = EMWS8.AutoNeural35_ESTDS bylabel
994951     ;
994952     *;
994953     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
994954     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_train_title  ,NOQUOTE,
994954   ! Search # 2 FUNNEL LAYERS trial # 4 : SOFTMAX : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 2 FUNNEL LAYERS trial # 4 : SOFTMAX :
Training";
MPRINT(EM_DIAGRAM):   train estiter=1 outest=_anest outfit=_anfit maxtime=874
maxiter=50 tech = Default;
WARNING: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 50 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANEST has 53 observations and 217 variables.
NOTE: The data set WORK._ANFIT has 104 observations and 36 variables.
MPRINT(EM_DIAGRAM):   ;
994955     train estiter=1 outest=_anest outfit=_anfit maxtime=874 maxiter=50
MPRINT(EM_DIAGRAM):   run;
994956     tech = Default;
994957     ;
994958     run;
 
NOTE: The data set WORK.EM_AUTONEURAL35 has 2374 observations and 10 variables.
NOTE: The data set EMWS8.META3_VALIDATE has . observations and 45 variables.
NOTE: View EMWS8.META3_VALIDATE.VIEW used (Total process time):
      real time           1.27 seconds
      cpu time            1.26 seconds
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: Closing the Neural Application.
NOTE: The PROCEDURE NEURAL printed page 962.
NOTE: PROCEDURE NEURAL used (Total process time):
      real time           1.27 seconds
      cpu time            1.26 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
994959     *;
994960     proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
MPRINT(EM_DIAGRAM):   proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
994961     var _iter_ _aic_ _averr_ _misc_
994962     _vaverr_ _vmisc_
994963     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
994964     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _name_='OVERALL';
NOTE: The PROCEDURE PRINT printed page 963.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Extract best iteration;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
994965     *------------------------------------------------------------*;
994966     * Extract best iteration;
994967     ;
994968     *------------------------------------------------------------*;
994969     %global _iter;
994970     data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
994971     set _anfit(where=(_NAME_ eq 'OVERALL'));
MPRINT(EM_DIAGRAM):   set _anfit(where=(_NAME_ eq 'OVERALL'));
994972     retain _min 1e+64;
MPRINT(EM_DIAGRAM):   retain _min 1e+64;
994973     if _VMISC_ < _min then do;
MPRINT(EM_DIAGRAM):   if _VMISC_ < _min then do;
994974     _min = _VMISC_;
MPRINT(EM_DIAGRAM):   _min = _VMISC_;
994975     call symput('_iter',put(_ITER_, 6.));
MPRINT(EM_DIAGRAM):   call symput('_iter',put(_ITER_, 6.));
994976     end;
MPRINT(EM_DIAGRAM):   end;
994977     run;
MPRINT(EM_DIAGRAM):   run;
 
The SAS System
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _NAME_='OVERALL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
994978     *;
 
994979     data EMWS8.AutoNeural35_ESTDS;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural35_ESTDS;
994980     set _anest;
MPRINT(EM_DIAGRAM):   set _anest;
994981     if _ITER_ eq 16 then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 16 then do;
994982     output;
MPRINT(EM_DIAGRAM):   output;
994983     stop;
MPRINT(EM_DIAGRAM):   stop;
994984     end;
MPRINT(EM_DIAGRAM):   end;
994985     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 17 observations read from the data set WORK._ANEST.
NOTE: The data set EMWS8.AUTONEURAL35_ESTDS has 1 observations and 217
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
994986     *;
994987     data EMWS8.AutoNeural35_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural35_OUTFIT;
994988     set _anfit;
MPRINT(EM_DIAGRAM):   set _anfit;
994989     if _ITER_ eq 16 and _NAME_ eq "OVERALL" then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 16 and _NAME_ eq "OVERALL" then do;
994990     output;
MPRINT(EM_DIAGRAM):   output;
994991     stop;
MPRINT(EM_DIAGRAM):   stop;
994992     end;
MPRINT(EM_DIAGRAM):   end;
994993     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._ANFIT.
NOTE: The data set EMWS8.AUTONEURAL35_OUTFIT has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
994994     *;
MPRINT(EM_DIAGRAM):    *;
994995     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
994996     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_selectediteration_title
994996   ! , NOQUOTE, _VMISC_))";
MPRINT(EM_DIAGRAM):   title10 "Selected Iteration based on _VMISC_";
994997     proc print data=EMWS8.AutoNeural35_OUTFIT noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural35_OUTFIT noobs;
994998     var _iter_ _aic_ _averr_ _misc_
994999     _vaverr_ _vmisc_
995000     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
995001     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL35_OUTFIT.
NOTE: The PROCEDURE PRINT printed page 964.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
995002     title9;
MPRINT(EM_DIAGRAM):   title9;
995003     title10;
MPRINT(EM_DIAGRAM):   title10;
995004     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
995005     set EMWS8.AutoNeural35_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural35_OUTFIT;
995006     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
995007     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL35_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
995008     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
995009     set EMWS8.AutoNeural35_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural35_OUTFIT;
995010     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
995011     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL35_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
995012     * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
995013     ;
MPRINT(EM_DIAGRAM):   ;
995014     data EMWS8.AutoNeural35_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural35_OUTFIT;
995015     set EMWS8.AutoNeural35_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural35_OUTFIT;
995016     length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
995017     _func_ = "SOFTMAX";
MPRINT(EM_DIAGRAM):   _func_ = "SOFTMAX";
995018     _status_ = "reject";
MPRINT(EM_DIAGRAM):   _status_ = "reject";
995019     _step_ = "FUNNEL LAYERS 2";
MPRINT(EM_DIAGRAM):   _step_ = "FUNNEL LAYERS 2";
995020     _index_ = 2;
MPRINT(EM_DIAGRAM):   _index_ = 2;
995021     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL35_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL35_OUTFIT has 1 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
995022     data EMWS8.AutoNeural35_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural35_HISTORY;
995023     set EMWS8.AutoNeural35_HISTORY EMWS8.AutoNeural35_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural35_HISTORY EMWS8.AutoNeural35_OUTFIT;
995024     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 9 observations read from the data set
      EMWS8.AUTONEURAL35_HISTORY.
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL35_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL35_HISTORY has 10 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
995025     *SEARCH: recall best estimates and fit;
MPRINT(EM_DIAGRAM):    *SEARCH: recall best estimates and fit;
995026     ;
MPRINT(EM_DIAGRAM):   ;
995027     data EMWS8.AutoNeural35_ESTDS;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural35_ESTDS;
995028     set EMWS8.AutoNeural35_BESTDS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural35_BESTDS;
995029     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL35_BESTDS.
NOTE: The data set EMWS8.AUTONEURAL35_ESTDS has 1 observations and 230
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
995030     data EMWS8.AutoNeural35_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural35_OUTFIT;
995031     set WORK.BFITDS_AUTONEUR_2H8DSPC;
MPRINT(EM_DIAGRAM):   set WORK.BFITDS_AUTONEUR_2H8DSPC;
995032     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      WORK.BFITDS_AUTONEUR_2H8DSPC.
NOTE: The data set EMWS8.AUTONEURAL35_OUTFIT has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
995033     * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
995034     ;
MPRINT(EM_DIAGRAM):   ;
995035     data EMWS8.AutoNeural35_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural35_OUTFIT;
995036     set EMWS8.AutoNeural35_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural35_OUTFIT;
995037     length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
995038     _func_ = "LOGISTIC";
MPRINT(EM_DIAGRAM):   _func_ = "LOGISTIC";
995039     _status_ = "keep";
MPRINT(EM_DIAGRAM):   _status_ = "keep";
995040     _step_ = "FUNNEL LAYERS 2";
MPRINT(EM_DIAGRAM):   _step_ = "FUNNEL LAYERS 2";
995041     _index_ = 2;
MPRINT(EM_DIAGRAM):   _index_ = 2;
995042     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL35_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL35_OUTFIT has 1 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
995043     data EMWS8.AutoNeural35_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural35_HISTORY;
995044     set EMWS8.AutoNeural35_HISTORY EMWS8.AutoNeural35_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural35_HISTORY EMWS8.AutoNeural35_OUTFIT;
995045     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 10 observations read from the data set
      EMWS8.AUTONEURAL35_HISTORY.
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL35_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL35_HISTORY has 11 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
995046     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
995047     set EMWS8.AutoNeural35_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural35_OUTFIT;
995048     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
995049     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL35_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 40 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
995050     *;
MPRINT(EM_DIAGRAM):    *;
995051     proc neural data=EM_AutoNeural35 dmdbcat=WORK.AutoNeural35_DMDB
995052     validdata=EMWS8.Meta3_VALIDATE
995053     ;
MPRINT(EM_DIAGRAM):   proc neural data=EM_AutoNeural35
dmdbcat=WORK.AutoNeural35_DMDB validdata=EMWS8.Meta3_VALIDATE ;
995054     *;
MPRINT(EM_DIAGRAM):   *;
995055     nloptions noprint;
MPRINT(EM_DIAGRAM):   nloptions noprint;
995056     performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   input
995057     input %INTINPUTS / level=interval id=interval;
MPRINT(INTINPUTS):   AcceptedCmpTotal Frq Mnt MntMeatProducts
NumCatalogPurchases NumDealsPurchases NumWebVisitsMonth Recency
MPRINT(EM_DIAGRAM):   / level=interval id=interval;
MPRINT(EM_DIAGRAM):   input
995058     input %NOMINPUTS / level=nominal id=nominal;
MPRINT(NOMINPUTS):   Marital_Status
MPRINT(EM_DIAGRAM):   / level=nominal id=nominal;
995059     target DepVar / level=NOMINAL id=DepVar
995060     ;
MPRINT(EM_DIAGRAM):   target DepVar / level=NOMINAL id=DepVar ;
995061     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
995062     * Direct connection;
MPRINT(EM_DIAGRAM):   * Direct connection;
995063     ;
MPRINT(EM_DIAGRAM):   ;
995064     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
995065     connect interval DepVar;
MPRINT(EM_DIAGRAM):   connect interval DepVar;
995066     connect nominal DepVar;
MPRINT(EM_DIAGRAM):   connect nominal DepVar;
995067     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
995068     * Layer #1;
MPRINT(EM_DIAGRAM):   * Layer #1;
995069     ;
MPRINT(EM_DIAGRAM):   ;
995070     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
995071     Hidden 6 / id = H1x1_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H1x1_ act=SOFTMAX;
995072     connect interval H1x1_;
MPRINT(EM_DIAGRAM):   connect interval H1x1_;
995073     connect nominal H1x1_;
MPRINT(EM_DIAGRAM):   connect nominal H1x1_;
995074     Hidden 6 / id = H1x2_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H1x2_ act=SOFTMAX;
995075     connect interval H1x2_;
MPRINT(EM_DIAGRAM):   connect interval H1x2_;
995076     connect nominal H1x2_;
MPRINT(EM_DIAGRAM):   connect nominal H1x2_;
995077     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
995078     * Layer #2;
MPRINT(EM_DIAGRAM):   * Layer #2;
995079     ;
MPRINT(EM_DIAGRAM):   ;
995080     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
995081     Hidden 6 / id = H2x1_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H2x1_ act=LOG;
995082     connect H1x1_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x1_ H2x1_;
995083     connect H1x2_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x2_ H2x1_;
995084     connect H2x1_ DepVar;
MPRINT(EM_DIAGRAM):   connect H2x1_ DepVar;
995085     *;
MPRINT(EM_DIAGRAM):   *;
995086     netoptions ranscale = 1;
MPRINT(EM_DIAGRAM):   netoptions ranscale = 1;
995087     *;
MPRINT(EM_DIAGRAM):   *;
995088     initial
995089     inest = EMWS8.AutoNeural35_ESTDS bylabel;
MPRINT(EM_DIAGRAM):   initial inest = EMWS8.AutoNeural35_ESTDS bylabel;
NOTE: The data set EMWS8.AUTONEURAL35_ESTDS has 1 observations and 230
      variables.
995090     ;
MPRINT(EM_DIAGRAM):   ;
995091     *;
MPRINT(EM_DIAGRAM):   *;
995092     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
995093     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_prelim_title  ,NOQUOTE,
995093   ! Search # 3 FUNNEL LAYERS trial # 1 : DIRECT : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 3 FUNNEL LAYERS trial # 1 : DIRECT :
Prelim";
995094     prelim 30 outest=_anpre pretime=30 preiter=25
MPRINT(EM_DIAGRAM):   prelim 30 outest=_anpre pretime=30 preiter=25 tech =
Default inest = EMWS8.AutoNeural35_ESTDS bylabel ;
NOTE:  Synchronizing the objectives and the Solution.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
The prelim will run only once. Use the randbias or randout option on the target
layer.
NOTE: The data set WORK._ANPRE has 3 observations and 242 variables.
NOTE: The data set EMWS8.AUTONEURAL35_ESTDS has 1 observations and 230
      variables.
MPRINT(EM_DIAGRAM):   *;
995095     tech = Default
995096     inest = EMWS8.AutoNeural35_ESTDS bylabel
995097     ;
995098     *;
995099     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
995100     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_train_title  ,NOQUOTE,
995100   ! Search # 3 FUNNEL LAYERS trial # 1 : DIRECT : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 3 FUNNEL LAYERS trial # 1 : DIRECT :
Training";
MPRINT(EM_DIAGRAM):   train estiter=1 outest=_anest outfit=_anfit maxtime=874
maxiter=50 tech = Default;
WARNING: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 50 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANEST has 53 observations and 242 variables.
NOTE: The data set WORK._ANFIT has 104 observations and 36 variables.
MPRINT(EM_DIAGRAM):   ;
995101     train estiter=1 outest=_anest outfit=_anfit maxtime=874 maxiter=50
MPRINT(EM_DIAGRAM):   run;
995102     tech = Default;
995103     ;
995104     run;
 
NOTE: The data set WORK.EM_AUTONEURAL35 has 2374 observations and 10 variables.
NOTE: The data set EMWS8.META3_VALIDATE has . observations and 45 variables.
NOTE: View EMWS8.META3_VALIDATE.VIEW used (Total process time):
      real time           1.58 seconds
      cpu time            1.56 seconds
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: Closing the Neural Application.
NOTE: The PROCEDURE NEURAL printed page 965.
NOTE: PROCEDURE NEURAL used (Total process time):
      real time           1.58 seconds
      cpu time            1.56 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
995105     *;
995106     proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
MPRINT(EM_DIAGRAM):   proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
995107     var _iter_ _aic_ _averr_ _misc_
995108     _vaverr_ _vmisc_
995109     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
995110     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _name_='OVERALL';
NOTE: The PROCEDURE PRINT printed page 966.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Extract best iteration;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
995111     *------------------------------------------------------------*;
995112     * Extract best iteration;
995113     ;
995114     *------------------------------------------------------------*;
995115     %global _iter;
995116     data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
995117     set _anfit(where=(_NAME_ eq 'OVERALL'));
MPRINT(EM_DIAGRAM):   set _anfit(where=(_NAME_ eq 'OVERALL'));
995118     retain _min 1e+64;
MPRINT(EM_DIAGRAM):   retain _min 1e+64;
995119     if _VMISC_ < _min then do;
MPRINT(EM_DIAGRAM):   if _VMISC_ < _min then do;
995120     _min = _VMISC_;
MPRINT(EM_DIAGRAM):   _min = _VMISC_;
995121     call symput('_iter',put(_ITER_, 6.));
MPRINT(EM_DIAGRAM):   call symput('_iter',put(_ITER_, 6.));
995122     end;
MPRINT(EM_DIAGRAM):   end;
995123     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _NAME_='OVERALL';
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
995124     *;
 
995125     data EMWS8.AutoNeural35_ESTDS;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural35_ESTDS;
995126     set _anest;
MPRINT(EM_DIAGRAM):   set _anest;
995127     if _ITER_ eq 13 then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 13 then do;
995128     output;
MPRINT(EM_DIAGRAM):   output;
995129     stop;
MPRINT(EM_DIAGRAM):   stop;
995130     end;
MPRINT(EM_DIAGRAM):   end;
995131     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 14 observations read from the data set WORK._ANEST.
NOTE: The data set EMWS8.AUTONEURAL35_ESTDS has 1 observations and 242
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
995132     *;
995133     data EMWS8.AutoNeural35_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural35_OUTFIT;
995134     set _anfit;
MPRINT(EM_DIAGRAM):   set _anfit;
995135     if _ITER_ eq 13 and _NAME_ eq "OVERALL" then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 13 and _NAME_ eq "OVERALL" then do;
995136     output;
MPRINT(EM_DIAGRAM):   output;
995137     stop;
MPRINT(EM_DIAGRAM):   stop;
995138     end;
MPRINT(EM_DIAGRAM):   end;
995139     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 28 observations read from the data set WORK._ANFIT.
NOTE: The data set EMWS8.AUTONEURAL35_OUTFIT has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
995140     *;
MPRINT(EM_DIAGRAM):    *;
995141     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
995142     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_selectediteration_title
995142   ! , NOQUOTE, _VMISC_))";
MPRINT(EM_DIAGRAM):   title10 "Selected Iteration based on _VMISC_";
995143     proc print data=EMWS8.AutoNeural35_OUTFIT noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural35_OUTFIT noobs;
995144     var _iter_ _aic_ _averr_ _misc_
995145     _vaverr_ _vmisc_
995146     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
995147     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL35_OUTFIT.
NOTE: The PROCEDURE PRINT printed page 967.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
995148     title9;
MPRINT(EM_DIAGRAM):   title9;
995149     title10;
MPRINT(EM_DIAGRAM):   title10;
995150     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
995151     set EMWS8.AutoNeural35_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural35_OUTFIT;
995152     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
995153     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL35_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
995154     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
995155     set EMWS8.AutoNeural35_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural35_OUTFIT;
995156     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
995157     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL35_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
995158     * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
995159     ;
MPRINT(EM_DIAGRAM):   ;
995160     data EMWS8.AutoNeural35_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural35_OUTFIT;
995161     set EMWS8.AutoNeural35_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural35_OUTFIT;
995162     length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
995163     _func_ = "DIRECT";
MPRINT(EM_DIAGRAM):   _func_ = "DIRECT";
995164     _status_ = "reject";
MPRINT(EM_DIAGRAM):   _status_ = "reject";
995165     _step_ = "FUNNEL LAYERS 3";
MPRINT(EM_DIAGRAM):   _step_ = "FUNNEL LAYERS 3";
995166     _index_ = 3;
MPRINT(EM_DIAGRAM):   _index_ = 3;
995167     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL35_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL35_OUTFIT has 1 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
995168     data EMWS8.AutoNeural35_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural35_HISTORY;
995169     set EMWS8.AutoNeural35_HISTORY EMWS8.AutoNeural35_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural35_HISTORY EMWS8.AutoNeural35_OUTFIT;
995170     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 11 observations read from the data set
      EMWS8.AUTONEURAL35_HISTORY.
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL35_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL35_HISTORY has 12 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
995171     * SEARCH: recall starting estimates;
MPRINT(EM_DIAGRAM):    * SEARCH: recall starting estimates;
995172     ;
MPRINT(EM_DIAGRAM):   ;
995173     data EMWS8.AutoNeural35_ESTDS;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural35_ESTDS;
995174     set EMWS8.AutoNeural35_BESTDS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural35_BESTDS;
995175     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL35_BESTDS.
NOTE: The data set EMWS8.AUTONEURAL35_ESTDS has 1 observations and 230
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
995176     *;
MPRINT(EM_DIAGRAM):    *;
995177     proc neural data=EM_AutoNeural35 dmdbcat=WORK.AutoNeural35_DMDB
995178     validdata=EMWS8.Meta3_VALIDATE
995179     ;
MPRINT(EM_DIAGRAM):   proc neural data=EM_AutoNeural35
dmdbcat=WORK.AutoNeural35_DMDB validdata=EMWS8.Meta3_VALIDATE ;
995180     *;
MPRINT(EM_DIAGRAM):   *;
995181     nloptions noprint;
MPRINT(EM_DIAGRAM):   nloptions noprint;
995182     performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   input
995183     input %INTINPUTS / level=interval id=interval;
MPRINT(INTINPUTS):   AcceptedCmpTotal Frq Mnt MntMeatProducts
NumCatalogPurchases NumDealsPurchases NumWebVisitsMonth Recency
MPRINT(EM_DIAGRAM):   / level=interval id=interval;
MPRINT(EM_DIAGRAM):   input
995184     input %NOMINPUTS / level=nominal id=nominal;
MPRINT(NOMINPUTS):   Marital_Status
MPRINT(EM_DIAGRAM):   / level=nominal id=nominal;
995185     target DepVar / level=NOMINAL id=DepVar
995186     ;
MPRINT(EM_DIAGRAM):   target DepVar / level=NOMINAL id=DepVar ;
995187     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
995188     * Layer #1;
MPRINT(EM_DIAGRAM):   * Layer #1;
995189     ;
MPRINT(EM_DIAGRAM):   ;
995190     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
995191     Hidden 6 / id = H1x1_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H1x1_ act=SOFTMAX;
995192     connect interval H1x1_;
MPRINT(EM_DIAGRAM):   connect interval H1x1_;
995193     connect nominal H1x1_;
MPRINT(EM_DIAGRAM):   connect nominal H1x1_;
995194     Hidden 6 / id = H1x2_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H1x2_ act=SOFTMAX;
995195     connect interval H1x2_;
MPRINT(EM_DIAGRAM):   connect interval H1x2_;
995196     connect nominal H1x2_;
MPRINT(EM_DIAGRAM):   connect nominal H1x2_;
995197     Hidden 6 / id = H1x3_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H1x3_ act=SOFTMAX;
995198     connect interval H1x3_;
MPRINT(EM_DIAGRAM):   connect interval H1x3_;
995199     connect nominal H1x3_;
MPRINT(EM_DIAGRAM):   connect nominal H1x3_;
995200     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
995201     * Layer #2;
MPRINT(EM_DIAGRAM):   * Layer #2;
995202     ;
MPRINT(EM_DIAGRAM):   ;
995203     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
995204     Hidden 6 / id = H2x1_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H2x1_ act=LOG;
995205     connect H1x1_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x1_ H2x1_;
995206     connect H1x2_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x2_ H2x1_;
995207     connect H1x3_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x3_ H2x1_;
995208     Hidden 6 / id = H2x2_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H2x2_ act=LOG;
995209     connect H1x1_ H2x2_;
MPRINT(EM_DIAGRAM):   connect H1x1_ H2x2_;
995210     connect H1x2_ H2x2_;
MPRINT(EM_DIAGRAM):   connect H1x2_ H2x2_;
995211     connect H1x3_ H2x2_;
MPRINT(EM_DIAGRAM):   connect H1x3_ H2x2_;
995212     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
995213     * Layer #3;
MPRINT(EM_DIAGRAM):   * Layer #3;
995214     ;
MPRINT(EM_DIAGRAM):   ;
995215     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
995216     Hidden 6 / id = H3x1_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H3x1_ act=LOG;
995217     connect H2x1_ H3x1_;
MPRINT(EM_DIAGRAM):   connect H2x1_ H3x1_;
995218     connect H2x2_ H3x1_;
MPRINT(EM_DIAGRAM):   connect H2x2_ H3x1_;
995219     connect H3x1_ DepVar;
MPRINT(EM_DIAGRAM):   connect H3x1_ DepVar;
995220     *;
MPRINT(EM_DIAGRAM):   *;
995221     netoptions ranscale = 1;
MPRINT(EM_DIAGRAM):   netoptions ranscale = 1;
995222     *;
MPRINT(EM_DIAGRAM):   *;
995223     initial
995224     inest = EMWS8.AutoNeural35_ESTDS bylabel;
MPRINT(EM_DIAGRAM):   initial inest = EMWS8.AutoNeural35_ESTDS bylabel;
NOTE: The data set EMWS8.AUTONEURAL35_ESTDS has 1 observations and 230
      variables.
995225     ;
MPRINT(EM_DIAGRAM):   ;
995226     *;
MPRINT(EM_DIAGRAM):   *;
995227     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
995228     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_prelim_title  ,NOQUOTE,
995228   ! Search # 3 FUNNEL LAYERS trial # 2 : LOGISTIC : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 3 FUNNEL LAYERS trial # 2 : LOGISTIC :
Prelim";
995229     prelim 32 outest=_anpre pretime=30 preiter=25
MPRINT(EM_DIAGRAM):   prelim 32 outest=_anpre pretime=30 preiter=25 tech =
Default inest = EMWS8.AutoNeural35_ESTDS bylabel ;
NOTE:  Synchronizing the objectives and the Solution.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANPRE has 65 observations and 523 variables.
NOTE: The data set EMWS8.AUTONEURAL35_ESTDS has 1 observations and 230
      variables.
MPRINT(EM_DIAGRAM):   *;
995230     tech = Default
995231     inest = EMWS8.AutoNeural35_ESTDS bylabel
995232     ;
995233     *;
995234     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
995235     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_train_title  ,NOQUOTE,
995235   ! Search # 3 FUNNEL LAYERS trial # 2 : LOGISTIC : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 3 FUNNEL LAYERS trial # 2 : LOGISTIC :
Training";
MPRINT(EM_DIAGRAM):   train estiter=1 outest=_anest outfit=_anfit maxtime=873
maxiter=50 tech = Default;
WARNING: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 50 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANEST has 53 observations and 523 variables.
NOTE: The data set WORK._ANFIT has 104 observations and 36 variables.
MPRINT(EM_DIAGRAM):   ;
995236     train estiter=1 outest=_anest outfit=_anfit maxtime=873 maxiter=50
MPRINT(EM_DIAGRAM):   run;
995237     tech = Default;
995238     ;
995239     run;
 
NOTE: The data set WORK.EM_AUTONEURAL35 has 2374 observations and 10 variables.
NOTE: The data set EMWS8.META3_VALIDATE has . observations and 45 variables.
NOTE: View EMWS8.META3_VALIDATE.VIEW used (Total process time):
      real time           35.70 seconds
      cpu time            35.66 seconds
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: Closing the Neural Application.
NOTE: The PROCEDURE NEURAL printed page 968.
NOTE: PROCEDURE NEURAL used (Total process time):
      real time           35.72 seconds
      cpu time            35.67 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
995240     *;
995241     proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
MPRINT(EM_DIAGRAM):   proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
995242     var _iter_ _aic_ _averr_ _misc_
995243     _vaverr_ _vmisc_
995244     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
995245     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _name_='OVERALL';
NOTE: The PROCEDURE PRINT printed page 969.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Extract best iteration;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
995246     *------------------------------------------------------------*;
995247     * Extract best iteration;
995248     ;
995249     *------------------------------------------------------------*;
995250     %global _iter;
995251     data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
995252     set _anfit(where=(_NAME_ eq 'OVERALL'));
MPRINT(EM_DIAGRAM):   set _anfit(where=(_NAME_ eq 'OVERALL'));
995253     retain _min 1e+64;
MPRINT(EM_DIAGRAM):   retain _min 1e+64;
995254     if _VMISC_ < _min then do;
MPRINT(EM_DIAGRAM):   if _VMISC_ < _min then do;
995255     _min = _VMISC_;
MPRINT(EM_DIAGRAM):   _min = _VMISC_;
995256     call symput('_iter',put(_ITER_, 6.));
MPRINT(EM_DIAGRAM):   call symput('_iter',put(_ITER_, 6.));
995257     end;
MPRINT(EM_DIAGRAM):   end;
995258     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _NAME_='OVERALL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
995259     *;
 
995260     data EMWS8.AutoNeural35_ESTDS;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural35_ESTDS;
995261     set _anest;
MPRINT(EM_DIAGRAM):   set _anest;
995262     if _ITER_ eq 4 then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 4 then do;
995263     output;
MPRINT(EM_DIAGRAM):   output;
995264     stop;
MPRINT(EM_DIAGRAM):   stop;
995265     end;
MPRINT(EM_DIAGRAM):   end;
995266     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 5 observations read from the data set WORK._ANEST.
NOTE: The data set EMWS8.AUTONEURAL35_ESTDS has 1 observations and 523
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
995267     *;
995268     data EMWS8.AutoNeural35_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural35_OUTFIT;
995269     set _anfit;
MPRINT(EM_DIAGRAM):   set _anfit;
995270     if _ITER_ eq 4 and _NAME_ eq "OVERALL" then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 4 and _NAME_ eq "OVERALL" then do;
995271     output;
MPRINT(EM_DIAGRAM):   output;
995272     stop;
MPRINT(EM_DIAGRAM):   stop;
995273     end;
MPRINT(EM_DIAGRAM):   end;
995274     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 10 observations read from the data set WORK._ANFIT.
NOTE: The data set EMWS8.AUTONEURAL35_OUTFIT has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
995275     *;
MPRINT(EM_DIAGRAM):    *;
995276     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
995277     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_selectediteration_title
995277   ! , NOQUOTE, _VMISC_))";
MPRINT(EM_DIAGRAM):   title10 "Selected Iteration based on _VMISC_";
995278     proc print data=EMWS8.AutoNeural35_OUTFIT noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural35_OUTFIT noobs;
995279     var _iter_ _aic_ _averr_ _misc_
995280     _vaverr_ _vmisc_
995281     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
995282     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL35_OUTFIT.
NOTE: The PROCEDURE PRINT printed page 970.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
995283     title9;
MPRINT(EM_DIAGRAM):   title9;
995284     title10;
MPRINT(EM_DIAGRAM):   title10;
995285     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
995286     set EMWS8.AutoNeural35_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural35_OUTFIT;
995287     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
995288     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL35_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
995289     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
995290     set EMWS8.AutoNeural35_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural35_OUTFIT;
995291     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
995292     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL35_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
995293     * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
995294     ;
MPRINT(EM_DIAGRAM):   ;
995295     data EMWS8.AutoNeural35_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural35_OUTFIT;
995296     set EMWS8.AutoNeural35_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural35_OUTFIT;
995297     length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
995298     _func_ = "LOGISTIC";
MPRINT(EM_DIAGRAM):   _func_ = "LOGISTIC";
995299     _status_ = "reject";
MPRINT(EM_DIAGRAM):   _status_ = "reject";
995300     _step_ = "FUNNEL LAYERS 3";
MPRINT(EM_DIAGRAM):   _step_ = "FUNNEL LAYERS 3";
995301     _index_ = 3;
MPRINT(EM_DIAGRAM):   _index_ = 3;
995302     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL35_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL35_OUTFIT has 1 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
995303     data EMWS8.AutoNeural35_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural35_HISTORY;
995304     set EMWS8.AutoNeural35_HISTORY EMWS8.AutoNeural35_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural35_HISTORY EMWS8.AutoNeural35_OUTFIT;
995305     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 12 observations read from the data set
      EMWS8.AUTONEURAL35_HISTORY.
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL35_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL35_HISTORY has 13 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
995306     * SEARCH: recall starting estimates;
MPRINT(EM_DIAGRAM):    * SEARCH: recall starting estimates;
995307     ;
MPRINT(EM_DIAGRAM):   ;
995308     data EMWS8.AutoNeural35_ESTDS;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural35_ESTDS;
995309     set EMWS8.AutoNeural35_BESTDS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural35_BESTDS;
995310     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL35_BESTDS.
NOTE: The data set EMWS8.AUTONEURAL35_ESTDS has 1 observations and 230
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
995311     *;
MPRINT(EM_DIAGRAM):    *;
995312     proc neural data=EM_AutoNeural35 dmdbcat=WORK.AutoNeural35_DMDB
995313     validdata=EMWS8.Meta3_VALIDATE
995314     ;
MPRINT(EM_DIAGRAM):   proc neural data=EM_AutoNeural35
dmdbcat=WORK.AutoNeural35_DMDB validdata=EMWS8.Meta3_VALIDATE ;
995315     *;
MPRINT(EM_DIAGRAM):   *;
995316     nloptions noprint;
MPRINT(EM_DIAGRAM):   nloptions noprint;
995317     performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   input
995318     input %INTINPUTS / level=interval id=interval;
MPRINT(INTINPUTS):   AcceptedCmpTotal Frq Mnt MntMeatProducts
NumCatalogPurchases NumDealsPurchases NumWebVisitsMonth Recency
MPRINT(EM_DIAGRAM):   / level=interval id=interval;
MPRINT(EM_DIAGRAM):   input
995319     input %NOMINPUTS / level=nominal id=nominal;
MPRINT(NOMINPUTS):   Marital_Status
MPRINT(EM_DIAGRAM):   / level=nominal id=nominal;
995320     target DepVar / level=NOMINAL id=DepVar
995321     ;
MPRINT(EM_DIAGRAM):   target DepVar / level=NOMINAL id=DepVar ;
995322     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
995323     * Layer #1;
MPRINT(EM_DIAGRAM):   * Layer #1;
995324     ;
MPRINT(EM_DIAGRAM):   ;
995325     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
995326     Hidden 6 / id = H1x1_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H1x1_ act=SOFTMAX;
995327     connect interval H1x1_;
MPRINT(EM_DIAGRAM):   connect interval H1x1_;
995328     connect nominal H1x1_;
MPRINT(EM_DIAGRAM):   connect nominal H1x1_;
995329     Hidden 6 / id = H1x2_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H1x2_ act=SOFTMAX;
995330     connect interval H1x2_;
MPRINT(EM_DIAGRAM):   connect interval H1x2_;
995331     connect nominal H1x2_;
MPRINT(EM_DIAGRAM):   connect nominal H1x2_;
995332     Hidden 6 / id = H1x3_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H1x3_ act=SOFTMAX;
995333     connect interval H1x3_;
MPRINT(EM_DIAGRAM):   connect interval H1x3_;
995334     connect nominal H1x3_;
MPRINT(EM_DIAGRAM):   connect nominal H1x3_;
995335     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
995336     * Layer #2;
MPRINT(EM_DIAGRAM):   * Layer #2;
995337     ;
MPRINT(EM_DIAGRAM):   ;
995338     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
995339     Hidden 6 / id = H2x1_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H2x1_ act=LOG;
995340     connect H1x1_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x1_ H2x1_;
995341     connect H1x2_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x2_ H2x1_;
995342     connect H1x3_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x3_ H2x1_;
995343     Hidden 6 / id = H2x2_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H2x2_ act=LOG;
995344     connect H1x1_ H2x2_;
MPRINT(EM_DIAGRAM):   connect H1x1_ H2x2_;
995345     connect H1x2_ H2x2_;
MPRINT(EM_DIAGRAM):   connect H1x2_ H2x2_;
995346     connect H1x3_ H2x2_;
MPRINT(EM_DIAGRAM):   connect H1x3_ H2x2_;
995347     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
995348     * Layer #3;
MPRINT(EM_DIAGRAM):   * Layer #3;
995349     ;
MPRINT(EM_DIAGRAM):   ;
995350     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
995351     Hidden 6 / id = H3x1_ act=SINE;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H3x1_ act=SINE;
995352     connect H2x1_ H3x1_;
MPRINT(EM_DIAGRAM):   connect H2x1_ H3x1_;
995353     connect H2x2_ H3x1_;
MPRINT(EM_DIAGRAM):   connect H2x2_ H3x1_;
995354     connect H3x1_ DepVar;
MPRINT(EM_DIAGRAM):   connect H3x1_ DepVar;
995355     *;
MPRINT(EM_DIAGRAM):   *;
995356     netoptions ranscale = 1;
MPRINT(EM_DIAGRAM):   netoptions ranscale = 1;
995357     *;
MPRINT(EM_DIAGRAM):   *;
995358     initial
995359     inest = EMWS8.AutoNeural35_ESTDS bylabel;
MPRINT(EM_DIAGRAM):   initial inest = EMWS8.AutoNeural35_ESTDS bylabel;
NOTE: The data set EMWS8.AUTONEURAL35_ESTDS has 1 observations and 230
      variables.
995360     ;
MPRINT(EM_DIAGRAM):   ;
995361     *;
MPRINT(EM_DIAGRAM):   *;
995362     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
995363     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_prelim_title  ,NOQUOTE,
995363   ! Search # 3 FUNNEL LAYERS trial # 3 : SINE : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 3 FUNNEL LAYERS trial # 3 : SINE :
Prelim";
995364     prelim 32 outest=_anpre pretime=30 preiter=25
MPRINT(EM_DIAGRAM):   prelim 32 outest=_anpre pretime=30 preiter=25 tech =
Default inest = EMWS8.AutoNeural35_ESTDS bylabel ;
NOTE:  Synchronizing the objectives and the Solution.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANPRE has 65 observations and 523 variables.
NOTE: The data set EMWS8.AUTONEURAL35_ESTDS has 1 observations and 230
      variables.
MPRINT(EM_DIAGRAM):   *;
995365     tech = Default
995366     inest = EMWS8.AutoNeural35_ESTDS bylabel
995367     ;
995368     *;
995369     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
995370     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_train_title  ,NOQUOTE,
995370   ! Search # 3 FUNNEL LAYERS trial # 3 : SINE : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 3 FUNNEL LAYERS trial # 3 : SINE :
Training";
MPRINT(EM_DIAGRAM):   train estiter=1 outest=_anest outfit=_anfit maxtime=864
maxiter=50 tech = Default;
WARNING: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 50 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANEST has 53 observations and 523 variables.
NOTE: The data set WORK._ANFIT has 104 observations and 36 variables.
MPRINT(EM_DIAGRAM):   ;
995371     train estiter=1 outest=_anest outfit=_anfit maxtime=864 maxiter=50
MPRINT(EM_DIAGRAM):   run;
995372     tech = Default;
995373     ;
995374     run;
 
NOTE: The data set WORK.EM_AUTONEURAL35 has 2374 observations and 10 variables.
NOTE: The data set EMWS8.META3_VALIDATE has . observations and 45 variables.
NOTE: View EMWS8.META3_VALIDATE.VIEW used (Total process time):
      real time           30.44 seconds
      cpu time            30.42 seconds
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: Closing the Neural Application.
NOTE: The PROCEDURE NEURAL printed page 971.
NOTE: PROCEDURE NEURAL used (Total process time):
      real time           30.44 seconds
      cpu time            30.42 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
995375     *;
995376     proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
MPRINT(EM_DIAGRAM):   proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
995377     var _iter_ _aic_ _averr_ _misc_
995378     _vaverr_ _vmisc_
995379     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
995380     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _name_='OVERALL';
NOTE: The PROCEDURE PRINT printed page 972.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Extract best iteration;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
995381     *------------------------------------------------------------*;
995382     * Extract best iteration;
995383     ;
995384     *------------------------------------------------------------*;
995385     %global _iter;
995386     data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
995387     set _anfit(where=(_NAME_ eq 'OVERALL'));
MPRINT(EM_DIAGRAM):   set _anfit(where=(_NAME_ eq 'OVERALL'));
995388     retain _min 1e+64;
MPRINT(EM_DIAGRAM):   retain _min 1e+64;
995389     if _VMISC_ < _min then do;
MPRINT(EM_DIAGRAM):   if _VMISC_ < _min then do;
995390     _min = _VMISC_;
MPRINT(EM_DIAGRAM):   _min = _VMISC_;
995391     call symput('_iter',put(_ITER_, 6.));
MPRINT(EM_DIAGRAM):   call symput('_iter',put(_ITER_, 6.));
995392     end;
MPRINT(EM_DIAGRAM):   end;
995393     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _NAME_='OVERALL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
995394     *;
 
995395     data EMWS8.AutoNeural35_ESTDS;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural35_ESTDS;
995396     set _anest;
MPRINT(EM_DIAGRAM):   set _anest;
995397     if _ITER_ eq 6 then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 6 then do;
995398     output;
MPRINT(EM_DIAGRAM):   output;
995399     stop;
MPRINT(EM_DIAGRAM):   stop;
995400     end;
MPRINT(EM_DIAGRAM):   end;
995401     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 7 observations read from the data set WORK._ANEST.
NOTE: The data set EMWS8.AUTONEURAL35_ESTDS has 1 observations and 523
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
995402     *;
995403     data EMWS8.AutoNeural35_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural35_OUTFIT;
995404     set _anfit;
MPRINT(EM_DIAGRAM):   set _anfit;
995405     if _ITER_ eq 6 and _NAME_ eq "OVERALL" then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 6 and _NAME_ eq "OVERALL" then do;
995406     output;
MPRINT(EM_DIAGRAM):   output;
995407     stop;
MPRINT(EM_DIAGRAM):   stop;
995408     end;
MPRINT(EM_DIAGRAM):   end;
995409     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 14 observations read from the data set WORK._ANFIT.
NOTE: The data set EMWS8.AUTONEURAL35_OUTFIT has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
995410     *;
MPRINT(EM_DIAGRAM):    *;
995411     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
995412     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_selectediteration_title
995412   ! , NOQUOTE, _VMISC_))";
MPRINT(EM_DIAGRAM):   title10 "Selected Iteration based on _VMISC_";
995413     proc print data=EMWS8.AutoNeural35_OUTFIT noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural35_OUTFIT noobs;
995414     var _iter_ _aic_ _averr_ _misc_
995415     _vaverr_ _vmisc_
995416     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
995417     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL35_OUTFIT.
NOTE: The PROCEDURE PRINT printed page 973.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
995418     title9;
MPRINT(EM_DIAGRAM):   title9;
995419     title10;
MPRINT(EM_DIAGRAM):   title10;
995420     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
995421     set EMWS8.AutoNeural35_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural35_OUTFIT;
995422     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
995423     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL35_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
995424     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
995425     set EMWS8.AutoNeural35_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural35_OUTFIT;
995426     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
995427     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL35_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
995428     *SEARCH: copy estimates and fit to best buffer;
MPRINT(EM_DIAGRAM):    *SEARCH: copy estimates and fit to best buffer;
995429     ;
MPRINT(EM_DIAGRAM):   ;
995430     data WORK.SAVEDS_AUTONEUR_2H8DSPC;
MPRINT(EM_DIAGRAM):   data WORK.SAVEDS_AUTONEUR_2H8DSPC;
995431     set EMWS8.AutoNeural35_ESTDS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural35_ESTDS;
995432     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.AUTONEURAL35_ESTDS.
NOTE: The data set WORK.SAVEDS_AUTONEUR_2H8DSPC has 1 observations and 523
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
995433     data EMWS8.AutoNeural35_BESTDS;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural35_BESTDS;
995434     set EMWS8.AutoNeural35_ESTDS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural35_ESTDS;
995435     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.AUTONEURAL35_ESTDS.
NOTE: The data set EMWS8.AUTONEURAL35_BESTDS has 1 observations and 523
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
995436     data WORK.BFITDS_AUTONEUR_2H8DSPC;
MPRINT(EM_DIAGRAM):   data WORK.BFITDS_AUTONEUR_2H8DSPC;
995437     set EMWS8.AutoNeural35_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural35_OUTFIT;
995438     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL35_OUTFIT.
NOTE: The data set WORK.BFITDS_AUTONEUR_2H8DSPC has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
995439     * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
995440     ;
MPRINT(EM_DIAGRAM):   ;
995441     data EMWS8.AutoNeural35_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural35_OUTFIT;
995442     set EMWS8.AutoNeural35_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural35_OUTFIT;
995443     length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
995444     _func_ = "SINE";
MPRINT(EM_DIAGRAM):   _func_ = "SINE";
995445     _status_ = "candidate";
MPRINT(EM_DIAGRAM):   _status_ = "candidate";
995446     _step_ = "FUNNEL LAYERS 3";
MPRINT(EM_DIAGRAM):   _step_ = "FUNNEL LAYERS 3";
995447     _index_ = 3;
MPRINT(EM_DIAGRAM):   _index_ = 3;
995448     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL35_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL35_OUTFIT has 1 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
995449     data EMWS8.AutoNeural35_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural35_HISTORY;
995450     set EMWS8.AutoNeural35_HISTORY EMWS8.AutoNeural35_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural35_HISTORY EMWS8.AutoNeural35_OUTFIT;
995451     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 13 observations read from the data set
      EMWS8.AUTONEURAL35_HISTORY.
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL35_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL35_HISTORY has 14 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
995452     * SEARCH: recall starting estimates;
MPRINT(EM_DIAGRAM):    * SEARCH: recall starting estimates;
995453     ;
MPRINT(EM_DIAGRAM):   ;
995454     data EMWS8.AutoNeural35_ESTDS;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural35_ESTDS;
995455     set EMWS8.AutoNeural35_BESTDS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural35_BESTDS;
995456     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL35_BESTDS.
NOTE: The data set EMWS8.AUTONEURAL35_ESTDS has 1 observations and 523
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
995457     *;
MPRINT(EM_DIAGRAM):    *;
995458     proc neural data=EM_AutoNeural35 dmdbcat=WORK.AutoNeural35_DMDB
995459     validdata=EMWS8.Meta3_VALIDATE
995460     ;
MPRINT(EM_DIAGRAM):   proc neural data=EM_AutoNeural35
dmdbcat=WORK.AutoNeural35_DMDB validdata=EMWS8.Meta3_VALIDATE ;
995461     *;
MPRINT(EM_DIAGRAM):   *;
995462     nloptions noprint;
MPRINT(EM_DIAGRAM):   nloptions noprint;
995463     performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   input
995464     input %INTINPUTS / level=interval id=interval;
MPRINT(INTINPUTS):   AcceptedCmpTotal Frq Mnt MntMeatProducts
NumCatalogPurchases NumDealsPurchases NumWebVisitsMonth Recency
MPRINT(EM_DIAGRAM):   / level=interval id=interval;
MPRINT(EM_DIAGRAM):   input
995465     input %NOMINPUTS / level=nominal id=nominal;
MPRINT(NOMINPUTS):   Marital_Status
MPRINT(EM_DIAGRAM):   / level=nominal id=nominal;
995466     target DepVar / level=NOMINAL id=DepVar
995467     ;
MPRINT(EM_DIAGRAM):   target DepVar / level=NOMINAL id=DepVar ;
995468     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
995469     * Layer #1;
MPRINT(EM_DIAGRAM):   * Layer #1;
995470     ;
MPRINT(EM_DIAGRAM):   ;
995471     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
995472     Hidden 6 / id = H1x1_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H1x1_ act=SOFTMAX;
995473     connect interval H1x1_;
MPRINT(EM_DIAGRAM):   connect interval H1x1_;
995474     connect nominal H1x1_;
MPRINT(EM_DIAGRAM):   connect nominal H1x1_;
995475     Hidden 6 / id = H1x2_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H1x2_ act=SOFTMAX;
995476     connect interval H1x2_;
MPRINT(EM_DIAGRAM):   connect interval H1x2_;
995477     connect nominal H1x2_;
MPRINT(EM_DIAGRAM):   connect nominal H1x2_;
995478     Hidden 6 / id = H1x3_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H1x3_ act=SOFTMAX;
995479     connect interval H1x3_;
MPRINT(EM_DIAGRAM):   connect interval H1x3_;
995480     connect nominal H1x3_;
MPRINT(EM_DIAGRAM):   connect nominal H1x3_;
995481     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
995482     * Layer #2;
MPRINT(EM_DIAGRAM):   * Layer #2;
995483     ;
MPRINT(EM_DIAGRAM):   ;
995484     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
995485     Hidden 6 / id = H2x1_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H2x1_ act=LOG;
995486     connect H1x1_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x1_ H2x1_;
995487     connect H1x2_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x2_ H2x1_;
995488     connect H1x3_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x3_ H2x1_;
995489     Hidden 6 / id = H2x2_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H2x2_ act=LOG;
995490     connect H1x1_ H2x2_;
MPRINT(EM_DIAGRAM):   connect H1x1_ H2x2_;
995491     connect H1x2_ H2x2_;
MPRINT(EM_DIAGRAM):   connect H1x2_ H2x2_;
995492     connect H1x3_ H2x2_;
MPRINT(EM_DIAGRAM):   connect H1x3_ H2x2_;
995493     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
995494     * Layer #3;
MPRINT(EM_DIAGRAM):   * Layer #3;
995495     ;
MPRINT(EM_DIAGRAM):   ;
995496     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
995497     Hidden 6 / id = H3x1_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H3x1_ act=SOFTMAX;
995498     connect H2x1_ H3x1_;
MPRINT(EM_DIAGRAM):   connect H2x1_ H3x1_;
995499     connect H2x2_ H3x1_;
MPRINT(EM_DIAGRAM):   connect H2x2_ H3x1_;
995500     connect H3x1_ DepVar;
MPRINT(EM_DIAGRAM):   connect H3x1_ DepVar;
995501     *;
MPRINT(EM_DIAGRAM):   *;
995502     netoptions ranscale = 1;
MPRINT(EM_DIAGRAM):   netoptions ranscale = 1;
995503     *;
MPRINT(EM_DIAGRAM):   *;
995504     initial
995505     inest = EMWS8.AutoNeural35_ESTDS bylabel;
MPRINT(EM_DIAGRAM):   initial inest = EMWS8.AutoNeural35_ESTDS bylabel;
NOTE: The data set EMWS8.AUTONEURAL35_ESTDS has 1 observations and 523
      variables.
995506     ;
MPRINT(EM_DIAGRAM):   ;
995507     *;
MPRINT(EM_DIAGRAM):   *;
995508     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
995509     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_prelim_title  ,NOQUOTE,
995509   ! Search # 3 FUNNEL LAYERS trial # 4 : SOFTMAX : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 3 FUNNEL LAYERS trial # 4 : SOFTMAX :
Prelim";
995510     prelim 32 outest=_anpre pretime=30 preiter=25
MPRINT(EM_DIAGRAM):   prelim 32 outest=_anpre pretime=30 preiter=25 tech =
Default inest = EMWS8.AutoNeural35_ESTDS bylabel ;
NOTE:  Synchronizing the objectives and the Solution.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
The prelim will run only once. Use the randbias or randout option on the target
layer.
NOTE: The data set WORK._ANPRE has 3 observations and 510 variables.
NOTE: The data set EMWS8.AUTONEURAL35_ESTDS has 1 observations and 523
      variables.
MPRINT(EM_DIAGRAM):   *;
995511     tech = Default
995512     inest = EMWS8.AutoNeural35_ESTDS bylabel
995513     ;
995514     *;
995515     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
995516     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_train_title  ,NOQUOTE,
995516   ! Search # 3 FUNNEL LAYERS trial # 4 : SOFTMAX : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 3 FUNNEL LAYERS trial # 4 : SOFTMAX :
Training";
MPRINT(EM_DIAGRAM):   train estiter=1 outest=_anest outfit=_anfit maxtime=857
maxiter=50 tech = Default;
WARNING: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 50 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANEST has 53 observations and 510 variables.
NOTE: The data set WORK._ANFIT has 104 observations and 36 variables.
MPRINT(EM_DIAGRAM):   ;
995517     train estiter=1 outest=_anest outfit=_anfit maxtime=857 maxiter=50
MPRINT(EM_DIAGRAM):   run;
995518     tech = Default;
995519     ;
995520     run;
 
NOTE: The data set WORK.EM_AUTONEURAL35 has 2374 observations and 10 variables.
NOTE: The data set EMWS8.META3_VALIDATE has . observations and 45 variables.
NOTE: View EMWS8.META3_VALIDATE.VIEW used (Total process time):
      real time           2.59 seconds
      cpu time            2.52 seconds
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: Closing the Neural Application.
NOTE: The PROCEDURE NEURAL printed page 974.
NOTE: PROCEDURE NEURAL used (Total process time):
      real time           2.61 seconds
      cpu time            2.54 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
995521     *;
995522     proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
MPRINT(EM_DIAGRAM):   proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
995523     var _iter_ _aic_ _averr_ _misc_
995524     _vaverr_ _vmisc_
995525     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
995526     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _name_='OVERALL';
NOTE: The PROCEDURE PRINT printed page 975.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Extract best iteration;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
995527     *------------------------------------------------------------*;
995528     * Extract best iteration;
995529     ;
995530     *------------------------------------------------------------*;
995531     %global _iter;
995532     data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
995533     set _anfit(where=(_NAME_ eq 'OVERALL'));
MPRINT(EM_DIAGRAM):   set _anfit(where=(_NAME_ eq 'OVERALL'));
995534     retain _min 1e+64;
MPRINT(EM_DIAGRAM):   retain _min 1e+64;
995535     if _VMISC_ < _min then do;
MPRINT(EM_DIAGRAM):   if _VMISC_ < _min then do;
995536     _min = _VMISC_;
MPRINT(EM_DIAGRAM):   _min = _VMISC_;
995537     call symput('_iter',put(_ITER_, 6.));
MPRINT(EM_DIAGRAM):   call symput('_iter',put(_ITER_, 6.));
995538     end;
MPRINT(EM_DIAGRAM):   end;
995539     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _NAME_='OVERALL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
995540     *;
 
995541     data EMWS8.AutoNeural35_ESTDS;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural35_ESTDS;
995542     set _anest;
MPRINT(EM_DIAGRAM):   set _anest;
995543     if _ITER_ eq 13 then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 13 then do;
995544     output;
MPRINT(EM_DIAGRAM):   output;
995545     stop;
MPRINT(EM_DIAGRAM):   stop;
995546     end;
MPRINT(EM_DIAGRAM):   end;
995547     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 14 observations read from the data set WORK._ANEST.
NOTE: The data set EMWS8.AUTONEURAL35_ESTDS has 1 observations and 510
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
995548     *;
995549     data EMWS8.AutoNeural35_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural35_OUTFIT;
995550     set _anfit;
MPRINT(EM_DIAGRAM):   set _anfit;
995551     if _ITER_ eq 13 and _NAME_ eq "OVERALL" then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 13 and _NAME_ eq "OVERALL" then do;
995552     output;
MPRINT(EM_DIAGRAM):   output;
995553     stop;
MPRINT(EM_DIAGRAM):   stop;
995554     end;
MPRINT(EM_DIAGRAM):   end;
995555     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 28 observations read from the data set WORK._ANFIT.
NOTE: The data set EMWS8.AUTONEURAL35_OUTFIT has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
995556     *;
MPRINT(EM_DIAGRAM):    *;
995557     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
995558     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_selectediteration_title
995558   ! , NOQUOTE, _VMISC_))";
MPRINT(EM_DIAGRAM):   title10 "Selected Iteration based on _VMISC_";
995559     proc print data=EMWS8.AutoNeural35_OUTFIT noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural35_OUTFIT noobs;
995560     var _iter_ _aic_ _averr_ _misc_
995561     _vaverr_ _vmisc_
995562     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
995563     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL35_OUTFIT.
NOTE: The PROCEDURE PRINT printed page 976.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
995564     title9;
MPRINT(EM_DIAGRAM):   title9;
995565     title10;
MPRINT(EM_DIAGRAM):   title10;
995566     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
995567     set EMWS8.AutoNeural35_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural35_OUTFIT;
995568     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
995569     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL35_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
995570     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
995571     set EMWS8.AutoNeural35_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural35_OUTFIT;
995572     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
995573     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL35_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
995574     * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
995575     ;
MPRINT(EM_DIAGRAM):   ;
995576     data EMWS8.AutoNeural35_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural35_OUTFIT;
995577     set EMWS8.AutoNeural35_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural35_OUTFIT;
995578     length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
995579     _func_ = "SOFTMAX";
MPRINT(EM_DIAGRAM):   _func_ = "SOFTMAX";
995580     _status_ = "reject";
MPRINT(EM_DIAGRAM):   _status_ = "reject";
995581     _step_ = "FUNNEL LAYERS 3";
MPRINT(EM_DIAGRAM):   _step_ = "FUNNEL LAYERS 3";
995582     _index_ = 3;
MPRINT(EM_DIAGRAM):   _index_ = 3;
995583     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL35_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL35_OUTFIT has 1 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
995584     data EMWS8.AutoNeural35_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural35_HISTORY;
995585     set EMWS8.AutoNeural35_HISTORY EMWS8.AutoNeural35_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural35_HISTORY EMWS8.AutoNeural35_OUTFIT;
995586     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 14 observations read from the data set
      EMWS8.AUTONEURAL35_HISTORY.
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL35_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL35_HISTORY has 15 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
995587     *SEARCH: recall best estimates and fit;
MPRINT(EM_DIAGRAM):    *SEARCH: recall best estimates and fit;
995588     ;
MPRINT(EM_DIAGRAM):   ;
995589     data EMWS8.AutoNeural35_ESTDS;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural35_ESTDS;
995590     set EMWS8.AutoNeural35_BESTDS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural35_BESTDS;
995591     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL35_BESTDS.
NOTE: The data set EMWS8.AUTONEURAL35_ESTDS has 1 observations and 523
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
995592     data EMWS8.AutoNeural35_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural35_OUTFIT;
995593     set WORK.BFITDS_AUTONEUR_2H8DSPC;
MPRINT(EM_DIAGRAM):   set WORK.BFITDS_AUTONEUR_2H8DSPC;
995594     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      WORK.BFITDS_AUTONEUR_2H8DSPC.
NOTE: The data set EMWS8.AUTONEURAL35_OUTFIT has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
995595     * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
995596     ;
MPRINT(EM_DIAGRAM):   ;
995597     data EMWS8.AutoNeural35_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural35_OUTFIT;
995598     set EMWS8.AutoNeural35_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural35_OUTFIT;
995599     length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
995600     _func_ = "SINE";
MPRINT(EM_DIAGRAM):   _func_ = "SINE";
995601     _status_ = "keep";
MPRINT(EM_DIAGRAM):   _status_ = "keep";
995602     _step_ = "FUNNEL LAYERS 3";
MPRINT(EM_DIAGRAM):   _step_ = "FUNNEL LAYERS 3";
995603     _index_ = 3;
MPRINT(EM_DIAGRAM):   _index_ = 3;
995604     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL35_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL35_OUTFIT has 1 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
995605     data EMWS8.AutoNeural35_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural35_HISTORY;
995606     set EMWS8.AutoNeural35_HISTORY EMWS8.AutoNeural35_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural35_HISTORY EMWS8.AutoNeural35_OUTFIT;
995607     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 15 observations read from the data set
      EMWS8.AUTONEURAL35_HISTORY.
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL35_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL35_HISTORY has 16 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
995608     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
995609     set EMWS8.AutoNeural35_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural35_OUTFIT;
995610     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
995611     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL35_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 40 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
995612     *;
MPRINT(EM_DIAGRAM):    *;
995613     proc neural data=EM_AutoNeural35 dmdbcat=WORK.AutoNeural35_DMDB
995614     validdata=EMWS8.Meta3_VALIDATE
995615     ;
MPRINT(EM_DIAGRAM):   proc neural data=EM_AutoNeural35
dmdbcat=WORK.AutoNeural35_DMDB validdata=EMWS8.Meta3_VALIDATE ;
995616     *;
MPRINT(EM_DIAGRAM):   *;
995617     nloptions noprint;
MPRINT(EM_DIAGRAM):   nloptions noprint;
995618     performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   input
995619     input %INTINPUTS / level=interval id=interval;
MPRINT(INTINPUTS):   AcceptedCmpTotal Frq Mnt MntMeatProducts
NumCatalogPurchases NumDealsPurchases NumWebVisitsMonth Recency
MPRINT(EM_DIAGRAM):   / level=interval id=interval;
MPRINT(EM_DIAGRAM):   input
995620     input %NOMINPUTS / level=nominal id=nominal;
MPRINT(NOMINPUTS):   Marital_Status
MPRINT(EM_DIAGRAM):   / level=nominal id=nominal;
995621     target DepVar / level=NOMINAL id=DepVar
995622     ;
MPRINT(EM_DIAGRAM):   target DepVar / level=NOMINAL id=DepVar ;
995623     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
995624     * Direct connection;
MPRINT(EM_DIAGRAM):   * Direct connection;
995625     ;
MPRINT(EM_DIAGRAM):   ;
995626     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
995627     connect interval DepVar;
MPRINT(EM_DIAGRAM):   connect interval DepVar;
995628     connect nominal DepVar;
MPRINT(EM_DIAGRAM):   connect nominal DepVar;
995629     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
995630     * Layer #1;
MPRINT(EM_DIAGRAM):   * Layer #1;
995631     ;
MPRINT(EM_DIAGRAM):   ;
995632     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
995633     Hidden 6 / id = H1x1_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H1x1_ act=SOFTMAX;
995634     connect interval H1x1_;
MPRINT(EM_DIAGRAM):   connect interval H1x1_;
995635     connect nominal H1x1_;
MPRINT(EM_DIAGRAM):   connect nominal H1x1_;
995636     Hidden 6 / id = H1x2_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H1x2_ act=SOFTMAX;
995637     connect interval H1x2_;
MPRINT(EM_DIAGRAM):   connect interval H1x2_;
995638     connect nominal H1x2_;
MPRINT(EM_DIAGRAM):   connect nominal H1x2_;
995639     Hidden 6 / id = H1x3_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H1x3_ act=SOFTMAX;
995640     connect interval H1x3_;
MPRINT(EM_DIAGRAM):   connect interval H1x3_;
995641     connect nominal H1x3_;
MPRINT(EM_DIAGRAM):   connect nominal H1x3_;
995642     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
995643     * Layer #2;
MPRINT(EM_DIAGRAM):   * Layer #2;
995644     ;
MPRINT(EM_DIAGRAM):   ;
995645     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
995646     Hidden 6 / id = H2x1_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H2x1_ act=LOG;
995647     connect H1x1_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x1_ H2x1_;
995648     connect H1x2_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x2_ H2x1_;
995649     connect H1x3_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x3_ H2x1_;
995650     Hidden 6 / id = H2x2_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H2x2_ act=LOG;
995651     connect H1x1_ H2x2_;
MPRINT(EM_DIAGRAM):   connect H1x1_ H2x2_;
995652     connect H1x2_ H2x2_;
MPRINT(EM_DIAGRAM):   connect H1x2_ H2x2_;
995653     connect H1x3_ H2x2_;
MPRINT(EM_DIAGRAM):   connect H1x3_ H2x2_;
995654     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
995655     * Layer #3;
MPRINT(EM_DIAGRAM):   * Layer #3;
995656     ;
MPRINT(EM_DIAGRAM):   ;
995657     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
995658     Hidden 6 / id = H3x1_ act=SINE;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H3x1_ act=SINE;
995659     connect H2x1_ H3x1_;
MPRINT(EM_DIAGRAM):   connect H2x1_ H3x1_;
995660     connect H2x2_ H3x1_;
MPRINT(EM_DIAGRAM):   connect H2x2_ H3x1_;
995661     connect H3x1_ DepVar;
MPRINT(EM_DIAGRAM):   connect H3x1_ DepVar;
995662     *;
MPRINT(EM_DIAGRAM):   *;
995663     netoptions ranscale = 1;
MPRINT(EM_DIAGRAM):   netoptions ranscale = 1;
995664     *;
MPRINT(EM_DIAGRAM):   *;
995665     initial
995666     inest = EMWS8.AutoNeural35_ESTDS bylabel;
MPRINT(EM_DIAGRAM):   initial inest = EMWS8.AutoNeural35_ESTDS bylabel;
NOTE: The data set EMWS8.AUTONEURAL35_ESTDS has 1 observations and 523
      variables.
995667     ;
MPRINT(EM_DIAGRAM):   ;
995668     *;
MPRINT(EM_DIAGRAM):   *;
995669     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
995670     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_prelim_title  ,NOQUOTE,
995670   ! Search # 4 FUNNEL LAYERS trial # 1 : DIRECT : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 4 FUNNEL LAYERS trial # 1 : DIRECT :
Prelim";
995671     prelim 32 outest=_anpre pretime=30 preiter=25
MPRINT(EM_DIAGRAM):   prelim 32 outest=_anpre pretime=30 preiter=25 tech =
Default inest = EMWS8.AutoNeural35_ESTDS bylabel ;
NOTE:  Synchronizing the objectives and the Solution.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
The prelim will run only once. Use the randbias or randout option on the target
layer.
NOTE: The data set WORK._ANPRE has 3 observations and 535 variables.
NOTE: The data set EMWS8.AUTONEURAL35_ESTDS has 1 observations and 523
      variables.
MPRINT(EM_DIAGRAM):   *;
995672     tech = Default
995673     inest = EMWS8.AutoNeural35_ESTDS bylabel
995674     ;
995675     *;
995676     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
995677     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_train_title  ,NOQUOTE,
995677   ! Search # 4 FUNNEL LAYERS trial # 1 : DIRECT : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 4 FUNNEL LAYERS trial # 1 : DIRECT :
Training";
MPRINT(EM_DIAGRAM):   train estiter=1 outest=_anest outfit=_anfit maxtime=856
maxiter=50 tech = Default;
WARNING: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 50 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANEST has 53 observations and 535 variables.
NOTE: The data set WORK._ANFIT has 104 observations and 36 variables.
MPRINT(EM_DIAGRAM):   ;
995678     train estiter=1 outest=_anest outfit=_anfit maxtime=856 maxiter=50
MPRINT(EM_DIAGRAM):   run;
995679     tech = Default;
995680     ;
995681     run;
 
NOTE: The data set WORK.EM_AUTONEURAL35 has 2374 observations and 10 variables.
NOTE: The data set EMWS8.META3_VALIDATE has . observations and 45 variables.
NOTE: View EMWS8.META3_VALIDATE.VIEW used (Total process time):
      real time           2.76 seconds
      cpu time            2.76 seconds
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: Closing the Neural Application.
NOTE: The PROCEDURE NEURAL printed page 977.
NOTE: PROCEDURE NEURAL used (Total process time):
      real time           2.77 seconds
      cpu time            2.77 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
995682     *;
995683     proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
MPRINT(EM_DIAGRAM):   proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
995684     var _iter_ _aic_ _averr_ _misc_
995685     _vaverr_ _vmisc_
995686     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
995687     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _name_='OVERALL';
NOTE: The PROCEDURE PRINT printed page 978.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Extract best iteration;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
995688     *------------------------------------------------------------*;
995689     * Extract best iteration;
995690     ;
995691     *------------------------------------------------------------*;
995692     %global _iter;
995693     data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
995694     set _anfit(where=(_NAME_ eq 'OVERALL'));
MPRINT(EM_DIAGRAM):   set _anfit(where=(_NAME_ eq 'OVERALL'));
995695     retain _min 1e+64;
MPRINT(EM_DIAGRAM):   retain _min 1e+64;
995696     if _VMISC_ < _min then do;
MPRINT(EM_DIAGRAM):   if _VMISC_ < _min then do;
995697     _min = _VMISC_;
MPRINT(EM_DIAGRAM):   _min = _VMISC_;
995698     call symput('_iter',put(_ITER_, 6.));
MPRINT(EM_DIAGRAM):   call symput('_iter',put(_ITER_, 6.));
995699     end;
MPRINT(EM_DIAGRAM):   end;
995700     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _NAME_='OVERALL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
995701     *;
 
995702     data EMWS8.AutoNeural35_ESTDS;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural35_ESTDS;
995703     set _anest;
MPRINT(EM_DIAGRAM):   set _anest;
995704     if _ITER_ eq 38 then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 38 then do;
995705     output;
MPRINT(EM_DIAGRAM):   output;
995706     stop;
MPRINT(EM_DIAGRAM):   stop;
995707     end;
MPRINT(EM_DIAGRAM):   end;
995708     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._ANEST.
NOTE: The data set EMWS8.AUTONEURAL35_ESTDS has 1 observations and 535
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
995709     *;
995710     data EMWS8.AutoNeural35_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural35_OUTFIT;
995711     set _anfit;
MPRINT(EM_DIAGRAM):   set _anfit;
995712     if _ITER_ eq 38 and _NAME_ eq "OVERALL" then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 38 and _NAME_ eq "OVERALL" then do;
995713     output;
MPRINT(EM_DIAGRAM):   output;
995714     stop;
MPRINT(EM_DIAGRAM):   stop;
995715     end;
MPRINT(EM_DIAGRAM):   end;
995716     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 78 observations read from the data set WORK._ANFIT.
NOTE: The data set EMWS8.AUTONEURAL35_OUTFIT has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
995717     *;
MPRINT(EM_DIAGRAM):    *;
995718     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
995719     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_selectediteration_title
995719   ! , NOQUOTE, _VMISC_))";
MPRINT(EM_DIAGRAM):   title10 "Selected Iteration based on _VMISC_";
995720     proc print data=EMWS8.AutoNeural35_OUTFIT noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural35_OUTFIT noobs;
995721     var _iter_ _aic_ _averr_ _misc_
995722     _vaverr_ _vmisc_
995723     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
995724     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL35_OUTFIT.
NOTE: The PROCEDURE PRINT printed page 979.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
995725     title9;
MPRINT(EM_DIAGRAM):   title9;
995726     title10;
MPRINT(EM_DIAGRAM):   title10;
995727     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
995728     set EMWS8.AutoNeural35_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural35_OUTFIT;
995729     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
995730     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL35_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
995731     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
995732     set EMWS8.AutoNeural35_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural35_OUTFIT;
995733     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
995734     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL35_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
995735     * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
995736     ;
MPRINT(EM_DIAGRAM):   ;
995737     data EMWS8.AutoNeural35_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural35_OUTFIT;
995738     set EMWS8.AutoNeural35_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural35_OUTFIT;
995739     length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
995740     _func_ = "DIRECT";
MPRINT(EM_DIAGRAM):   _func_ = "DIRECT";
995741     _status_ = "reject";
MPRINT(EM_DIAGRAM):   _status_ = "reject";
995742     _step_ = "FUNNEL LAYERS 4";
MPRINT(EM_DIAGRAM):   _step_ = "FUNNEL LAYERS 4";
995743     _index_ = 4;
MPRINT(EM_DIAGRAM):   _index_ = 4;
995744     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL35_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL35_OUTFIT has 1 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
995745     data EMWS8.AutoNeural35_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural35_HISTORY;
995746     set EMWS8.AutoNeural35_HISTORY EMWS8.AutoNeural35_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural35_HISTORY EMWS8.AutoNeural35_OUTFIT;
995747     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 16 observations read from the data set
      EMWS8.AUTONEURAL35_HISTORY.
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL35_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL35_HISTORY has 17 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
995748     * SEARCH: recall starting estimates;
MPRINT(EM_DIAGRAM):    * SEARCH: recall starting estimates;
995749     ;
MPRINT(EM_DIAGRAM):   ;
995750     data EMWS8.AutoNeural35_ESTDS;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural35_ESTDS;
995751     set EMWS8.AutoNeural35_BESTDS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural35_BESTDS;
995752     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL35_BESTDS.
NOTE: The data set EMWS8.AUTONEURAL35_ESTDS has 1 observations and 523
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
995753     *;
MPRINT(EM_DIAGRAM):    *;
995754     proc neural data=EM_AutoNeural35 dmdbcat=WORK.AutoNeural35_DMDB
995755     validdata=EMWS8.Meta3_VALIDATE
995756     ;
MPRINT(EM_DIAGRAM):   proc neural data=EM_AutoNeural35
dmdbcat=WORK.AutoNeural35_DMDB validdata=EMWS8.Meta3_VALIDATE ;
995757     *;
MPRINT(EM_DIAGRAM):   *;
995758     nloptions noprint;
MPRINT(EM_DIAGRAM):   nloptions noprint;
995759     performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   input
995760     input %INTINPUTS / level=interval id=interval;
MPRINT(INTINPUTS):   AcceptedCmpTotal Frq Mnt MntMeatProducts
NumCatalogPurchases NumDealsPurchases NumWebVisitsMonth Recency
MPRINT(EM_DIAGRAM):   / level=interval id=interval;
MPRINT(EM_DIAGRAM):   input
995761     input %NOMINPUTS / level=nominal id=nominal;
MPRINT(NOMINPUTS):   Marital_Status
MPRINT(EM_DIAGRAM):   / level=nominal id=nominal;
995762     target DepVar / level=NOMINAL id=DepVar
995763     ;
MPRINT(EM_DIAGRAM):   target DepVar / level=NOMINAL id=DepVar ;
995764     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
995765     * Layer #1;
MPRINT(EM_DIAGRAM):   * Layer #1;
995766     ;
MPRINT(EM_DIAGRAM):   ;
995767     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
995768     Hidden 6 / id = H1x1_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H1x1_ act=SOFTMAX;
995769     connect interval H1x1_;
MPRINT(EM_DIAGRAM):   connect interval H1x1_;
995770     connect nominal H1x1_;
MPRINT(EM_DIAGRAM):   connect nominal H1x1_;
995771     Hidden 6 / id = H1x2_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H1x2_ act=SOFTMAX;
995772     connect interval H1x2_;
MPRINT(EM_DIAGRAM):   connect interval H1x2_;
995773     connect nominal H1x2_;
MPRINT(EM_DIAGRAM):   connect nominal H1x2_;
995774     Hidden 6 / id = H1x3_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H1x3_ act=SOFTMAX;
995775     connect interval H1x3_;
MPRINT(EM_DIAGRAM):   connect interval H1x3_;
995776     connect nominal H1x3_;
MPRINT(EM_DIAGRAM):   connect nominal H1x3_;
995777     Hidden 6 / id = H1x4_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H1x4_ act=SOFTMAX;
995778     connect interval H1x4_;
MPRINT(EM_DIAGRAM):   connect interval H1x4_;
995779     connect nominal H1x4_;
MPRINT(EM_DIAGRAM):   connect nominal H1x4_;
995780     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
995781     * Layer #2;
MPRINT(EM_DIAGRAM):   * Layer #2;
995782     ;
MPRINT(EM_DIAGRAM):   ;
995783     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
995784     Hidden 6 / id = H2x1_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H2x1_ act=LOG;
995785     connect H1x1_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x1_ H2x1_;
995786     connect H1x2_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x2_ H2x1_;
995787     connect H1x3_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x3_ H2x1_;
995788     connect H1x4_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x4_ H2x1_;
995789     Hidden 6 / id = H2x2_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H2x2_ act=LOG;
995790     connect H1x1_ H2x2_;
MPRINT(EM_DIAGRAM):   connect H1x1_ H2x2_;
995791     connect H1x2_ H2x2_;
MPRINT(EM_DIAGRAM):   connect H1x2_ H2x2_;
995792     connect H1x3_ H2x2_;
MPRINT(EM_DIAGRAM):   connect H1x3_ H2x2_;
995793     connect H1x4_ H2x2_;
MPRINT(EM_DIAGRAM):   connect H1x4_ H2x2_;
995794     Hidden 6 / id = H2x3_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H2x3_ act=LOG;
995795     connect H1x1_ H2x3_;
MPRINT(EM_DIAGRAM):   connect H1x1_ H2x3_;
995796     connect H1x2_ H2x3_;
MPRINT(EM_DIAGRAM):   connect H1x2_ H2x3_;
995797     connect H1x3_ H2x3_;
MPRINT(EM_DIAGRAM):   connect H1x3_ H2x3_;
995798     connect H1x4_ H2x3_;
MPRINT(EM_DIAGRAM):   connect H1x4_ H2x3_;
995799     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
995800     * Layer #3;
MPRINT(EM_DIAGRAM):   * Layer #3;
995801     ;
MPRINT(EM_DIAGRAM):   ;
995802     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
995803     Hidden 6 / id = H3x1_ act=SINE;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H3x1_ act=SINE;
995804     connect H2x1_ H3x1_;
MPRINT(EM_DIAGRAM):   connect H2x1_ H3x1_;
995805     connect H2x2_ H3x1_;
MPRINT(EM_DIAGRAM):   connect H2x2_ H3x1_;
995806     connect H2x3_ H3x1_;
MPRINT(EM_DIAGRAM):   connect H2x3_ H3x1_;
995807     Hidden 6 / id = H3x2_ act=SINE;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H3x2_ act=SINE;
995808     connect H2x1_ H3x2_;
MPRINT(EM_DIAGRAM):   connect H2x1_ H3x2_;
995809     connect H2x2_ H3x2_;
MPRINT(EM_DIAGRAM):   connect H2x2_ H3x2_;
995810     connect H2x3_ H3x2_;
MPRINT(EM_DIAGRAM):   connect H2x3_ H3x2_;
995811     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
995812     * Layer #4;
MPRINT(EM_DIAGRAM):   * Layer #4;
995813     ;
MPRINT(EM_DIAGRAM):   ;
995814     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
995815     Hidden 6 / id = H4x1_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H4x1_ act=LOG;
995816     connect H3x1_ H4x1_;
MPRINT(EM_DIAGRAM):   connect H3x1_ H4x1_;
995817     connect H3x2_ H4x1_;
MPRINT(EM_DIAGRAM):   connect H3x2_ H4x1_;
995818     connect H4x1_ DepVar;
MPRINT(EM_DIAGRAM):   connect H4x1_ DepVar;
995819     *;
MPRINT(EM_DIAGRAM):   *;
995820     netoptions ranscale = 1;
MPRINT(EM_DIAGRAM):   netoptions ranscale = 1;
995821     *;
MPRINT(EM_DIAGRAM):   *;
995822     initial
995823     inest = EMWS8.AutoNeural35_ESTDS bylabel;
MPRINT(EM_DIAGRAM):   initial inest = EMWS8.AutoNeural35_ESTDS bylabel;
NOTE: The data set EMWS8.AUTONEURAL35_ESTDS has 1 observations and 523
      variables.
995824     ;
MPRINT(EM_DIAGRAM):   ;
995825     *;
MPRINT(EM_DIAGRAM):   *;
995826     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
995827     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_prelim_title  ,NOQUOTE,
995827   ! Search # 4 FUNNEL LAYERS trial # 2 : LOGISTIC : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 4 FUNNEL LAYERS trial # 2 : LOGISTIC :
Prelim";
995828     prelim 32 outest=_anpre pretime=30 preiter=25
MPRINT(EM_DIAGRAM):   prelim 32 outest=_anpre pretime=30 preiter=25 tech =
Default inest = EMWS8.AutoNeural35_ESTDS bylabel ;
NOTE:  Synchronizing the objectives and the Solution.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANPRE has 65 observations and 1038 variables.
NOTE: The data set EMWS8.AUTONEURAL35_ESTDS has 1 observations and 523
      variables.
MPRINT(EM_DIAGRAM):   *;
995829     tech = Default
995830     inest = EMWS8.AutoNeural35_ESTDS bylabel
995831     ;
995832     *;
995833     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
995834     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_train_title  ,NOQUOTE,
995834   ! Search # 4 FUNNEL LAYERS trial # 2 : LOGISTIC : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 4 FUNNEL LAYERS trial # 2 : LOGISTIC :
Training";
MPRINT(EM_DIAGRAM):   train estiter=1 outest=_anest outfit=_anfit maxtime=855
maxiter=50 tech = Default;
WARNING: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 50 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANEST has 53 observations and 1038 variables.
NOTE: The data set WORK._ANFIT has 104 observations and 36 variables.
MPRINT(EM_DIAGRAM):   ;
995835     train estiter=1 outest=_anest outfit=_anfit maxtime=855 maxiter=50
MPRINT(EM_DIAGRAM):   run;
995836     tech = Default;
995837     ;
995838     run;
 
NOTE: The data set WORK.EM_AUTONEURAL35 has 2374 observations and 10 variables.
NOTE: The data set EMWS8.META3_VALIDATE has . observations and 45 variables.
NOTE: View EMWS8.META3_VALIDATE.VIEW used (Total process time):
      real time           52.61 seconds
      cpu time            52.43 seconds
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: Closing the Neural Application.
NOTE: The PROCEDURE NEURAL printed page 980.
NOTE: PROCEDURE NEURAL used (Total process time):
      real time           52.62 seconds
      cpu time            52.44 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
995839     *;
995840     proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
MPRINT(EM_DIAGRAM):   proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
995841     var _iter_ _aic_ _averr_ _misc_
995842     _vaverr_ _vmisc_
995843     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
995844     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _name_='OVERALL';
NOTE: The PROCEDURE PRINT printed page 981.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Extract best iteration;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
995845     *------------------------------------------------------------*;
995846     * Extract best iteration;
995847     ;
995848     *------------------------------------------------------------*;
995849     %global _iter;
995850     data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
995851     set _anfit(where=(_NAME_ eq 'OVERALL'));
MPRINT(EM_DIAGRAM):   set _anfit(where=(_NAME_ eq 'OVERALL'));
995852     retain _min 1e+64;
MPRINT(EM_DIAGRAM):   retain _min 1e+64;
995853     if _VMISC_ < _min then do;
MPRINT(EM_DIAGRAM):   if _VMISC_ < _min then do;
995854     _min = _VMISC_;
MPRINT(EM_DIAGRAM):   _min = _VMISC_;
995855     call symput('_iter',put(_ITER_, 6.));
MPRINT(EM_DIAGRAM):   call symput('_iter',put(_ITER_, 6.));
995856     end;
MPRINT(EM_DIAGRAM):   end;
995857     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _NAME_='OVERALL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
995858     *;
 
995859     data EMWS8.AutoNeural35_ESTDS;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural35_ESTDS;
995860     set _anest;
MPRINT(EM_DIAGRAM):   set _anest;
995861     if _ITER_ eq 0 then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 0 then do;
995862     output;
MPRINT(EM_DIAGRAM):   output;
995863     stop;
MPRINT(EM_DIAGRAM):   stop;
995864     end;
MPRINT(EM_DIAGRAM):   end;
995865     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK._ANEST.
NOTE: The data set EMWS8.AUTONEURAL35_ESTDS has 1 observations and 1038
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
995866     *;
995867     data EMWS8.AutoNeural35_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural35_OUTFIT;
995868     set _anfit;
MPRINT(EM_DIAGRAM):   set _anfit;
995869     if _ITER_ eq 0 and _NAME_ eq "OVERALL" then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 0 and _NAME_ eq "OVERALL" then do;
995870     output;
MPRINT(EM_DIAGRAM):   output;
995871     stop;
MPRINT(EM_DIAGRAM):   stop;
995872     end;
MPRINT(EM_DIAGRAM):   end;
995873     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set WORK._ANFIT.
NOTE: The data set EMWS8.AUTONEURAL35_OUTFIT has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
995874     *;
MPRINT(EM_DIAGRAM):    *;
995875     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
995876     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_selectediteration_title
995876   ! , NOQUOTE, _VMISC_))";
MPRINT(EM_DIAGRAM):   title10 "Selected Iteration based on _VMISC_";
995877     proc print data=EMWS8.AutoNeural35_OUTFIT noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural35_OUTFIT noobs;
995878     var _iter_ _aic_ _averr_ _misc_
995879     _vaverr_ _vmisc_
995880     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
995881     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL35_OUTFIT.
NOTE: The PROCEDURE PRINT printed page 982.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
995882     title9;
MPRINT(EM_DIAGRAM):   title9;
995883     title10;
MPRINT(EM_DIAGRAM):   title10;
995884     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
995885     set EMWS8.AutoNeural35_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural35_OUTFIT;
995886     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
995887     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL35_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
995888     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
995889     set EMWS8.AutoNeural35_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural35_OUTFIT;
995890     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
995891     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL35_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
995892     * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
995893     ;
MPRINT(EM_DIAGRAM):   ;
995894     data EMWS8.AutoNeural35_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural35_OUTFIT;
995895     set EMWS8.AutoNeural35_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural35_OUTFIT;
995896     length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
995897     _func_ = "LOGISTIC";
MPRINT(EM_DIAGRAM):   _func_ = "LOGISTIC";
995898     _status_ = "reject";
MPRINT(EM_DIAGRAM):   _status_ = "reject";
995899     _step_ = "FUNNEL LAYERS 4";
MPRINT(EM_DIAGRAM):   _step_ = "FUNNEL LAYERS 4";
995900     _index_ = 4;
MPRINT(EM_DIAGRAM):   _index_ = 4;
995901     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL35_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL35_OUTFIT has 1 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
995902     data EMWS8.AutoNeural35_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural35_HISTORY;
995903     set EMWS8.AutoNeural35_HISTORY EMWS8.AutoNeural35_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural35_HISTORY EMWS8.AutoNeural35_OUTFIT;
995904     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 17 observations read from the data set
      EMWS8.AUTONEURAL35_HISTORY.
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL35_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL35_HISTORY has 18 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
995905     * SEARCH: recall starting estimates;
MPRINT(EM_DIAGRAM):    * SEARCH: recall starting estimates;
995906     ;
MPRINT(EM_DIAGRAM):   ;
995907     data EMWS8.AutoNeural35_ESTDS;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural35_ESTDS;
995908     set EMWS8.AutoNeural35_BESTDS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural35_BESTDS;
995909     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL35_BESTDS.
NOTE: The data set EMWS8.AUTONEURAL35_ESTDS has 1 observations and 523
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
995910     *;
MPRINT(EM_DIAGRAM):    *;
995911     proc neural data=EM_AutoNeural35 dmdbcat=WORK.AutoNeural35_DMDB
995912     validdata=EMWS8.Meta3_VALIDATE
995913     ;
MPRINT(EM_DIAGRAM):   proc neural data=EM_AutoNeural35
dmdbcat=WORK.AutoNeural35_DMDB validdata=EMWS8.Meta3_VALIDATE ;
995914     *;
MPRINT(EM_DIAGRAM):   *;
995915     nloptions noprint;
MPRINT(EM_DIAGRAM):   nloptions noprint;
995916     performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   input
995917     input %INTINPUTS / level=interval id=interval;
MPRINT(INTINPUTS):   AcceptedCmpTotal Frq Mnt MntMeatProducts
NumCatalogPurchases NumDealsPurchases NumWebVisitsMonth Recency
MPRINT(EM_DIAGRAM):   / level=interval id=interval;
MPRINT(EM_DIAGRAM):   input
995918     input %NOMINPUTS / level=nominal id=nominal;
MPRINT(NOMINPUTS):   Marital_Status
MPRINT(EM_DIAGRAM):   / level=nominal id=nominal;
995919     target DepVar / level=NOMINAL id=DepVar
995920     ;
MPRINT(EM_DIAGRAM):   target DepVar / level=NOMINAL id=DepVar ;
995921     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
995922     * Layer #1;
MPRINT(EM_DIAGRAM):   * Layer #1;
995923     ;
MPRINT(EM_DIAGRAM):   ;
995924     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
995925     Hidden 6 / id = H1x1_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H1x1_ act=SOFTMAX;
995926     connect interval H1x1_;
MPRINT(EM_DIAGRAM):   connect interval H1x1_;
995927     connect nominal H1x1_;
MPRINT(EM_DIAGRAM):   connect nominal H1x1_;
995928     Hidden 6 / id = H1x2_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H1x2_ act=SOFTMAX;
995929     connect interval H1x2_;
MPRINT(EM_DIAGRAM):   connect interval H1x2_;
995930     connect nominal H1x2_;
MPRINT(EM_DIAGRAM):   connect nominal H1x2_;
995931     Hidden 6 / id = H1x3_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H1x3_ act=SOFTMAX;
995932     connect interval H1x3_;
MPRINT(EM_DIAGRAM):   connect interval H1x3_;
995933     connect nominal H1x3_;
MPRINT(EM_DIAGRAM):   connect nominal H1x3_;
995934     Hidden 6 / id = H1x4_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H1x4_ act=SOFTMAX;
995935     connect interval H1x4_;
MPRINT(EM_DIAGRAM):   connect interval H1x4_;
995936     connect nominal H1x4_;
MPRINT(EM_DIAGRAM):   connect nominal H1x4_;
995937     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
995938     * Layer #2;
MPRINT(EM_DIAGRAM):   * Layer #2;
995939     ;
MPRINT(EM_DIAGRAM):   ;
995940     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
995941     Hidden 6 / id = H2x1_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H2x1_ act=LOG;
995942     connect H1x1_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x1_ H2x1_;
995943     connect H1x2_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x2_ H2x1_;
995944     connect H1x3_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x3_ H2x1_;
995945     connect H1x4_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x4_ H2x1_;
995946     Hidden 6 / id = H2x2_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H2x2_ act=LOG;
995947     connect H1x1_ H2x2_;
MPRINT(EM_DIAGRAM):   connect H1x1_ H2x2_;
995948     connect H1x2_ H2x2_;
MPRINT(EM_DIAGRAM):   connect H1x2_ H2x2_;
995949     connect H1x3_ H2x2_;
MPRINT(EM_DIAGRAM):   connect H1x3_ H2x2_;
995950     connect H1x4_ H2x2_;
MPRINT(EM_DIAGRAM):   connect H1x4_ H2x2_;
995951     Hidden 6 / id = H2x3_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H2x3_ act=LOG;
995952     connect H1x1_ H2x3_;
MPRINT(EM_DIAGRAM):   connect H1x1_ H2x3_;
995953     connect H1x2_ H2x3_;
MPRINT(EM_DIAGRAM):   connect H1x2_ H2x3_;
995954     connect H1x3_ H2x3_;
MPRINT(EM_DIAGRAM):   connect H1x3_ H2x3_;
995955     connect H1x4_ H2x3_;
MPRINT(EM_DIAGRAM):   connect H1x4_ H2x3_;
995956     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
995957     * Layer #3;
MPRINT(EM_DIAGRAM):   * Layer #3;
995958     ;
MPRINT(EM_DIAGRAM):   ;
995959     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
995960     Hidden 6 / id = H3x1_ act=SINE;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H3x1_ act=SINE;
995961     connect H2x1_ H3x1_;
MPRINT(EM_DIAGRAM):   connect H2x1_ H3x1_;
995962     connect H2x2_ H3x1_;
MPRINT(EM_DIAGRAM):   connect H2x2_ H3x1_;
995963     connect H2x3_ H3x1_;
MPRINT(EM_DIAGRAM):   connect H2x3_ H3x1_;
995964     Hidden 6 / id = H3x2_ act=SINE;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H3x2_ act=SINE;
995965     connect H2x1_ H3x2_;
MPRINT(EM_DIAGRAM):   connect H2x1_ H3x2_;
995966     connect H2x2_ H3x2_;
MPRINT(EM_DIAGRAM):   connect H2x2_ H3x2_;
995967     connect H2x3_ H3x2_;
MPRINT(EM_DIAGRAM):   connect H2x3_ H3x2_;
995968     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
995969     * Layer #4;
MPRINT(EM_DIAGRAM):   * Layer #4;
995970     ;
MPRINT(EM_DIAGRAM):   ;
995971     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
995972     Hidden 6 / id = H4x1_ act=SINE;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H4x1_ act=SINE;
995973     connect H3x1_ H4x1_;
MPRINT(EM_DIAGRAM):   connect H3x1_ H4x1_;
995974     connect H3x2_ H4x1_;
MPRINT(EM_DIAGRAM):   connect H3x2_ H4x1_;
995975     connect H4x1_ DepVar;
MPRINT(EM_DIAGRAM):   connect H4x1_ DepVar;
995976     *;
MPRINT(EM_DIAGRAM):   *;
995977     netoptions ranscale = 1;
MPRINT(EM_DIAGRAM):   netoptions ranscale = 1;
995978     *;
MPRINT(EM_DIAGRAM):   *;
995979     initial
995980     inest = EMWS8.AutoNeural35_ESTDS bylabel;
MPRINT(EM_DIAGRAM):   initial inest = EMWS8.AutoNeural35_ESTDS bylabel;
NOTE: The data set EMWS8.AUTONEURAL35_ESTDS has 1 observations and 523
      variables.
995981     ;
MPRINT(EM_DIAGRAM):   ;
995982     *;
MPRINT(EM_DIAGRAM):   *;
995983     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
995984     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_prelim_title  ,NOQUOTE,
995984   ! Search # 4 FUNNEL LAYERS trial # 3 : SINE : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 4 FUNNEL LAYERS trial # 3 : SINE :
Prelim";
995985     prelim 32 outest=_anpre pretime=30 preiter=25
MPRINT(EM_DIAGRAM):   prelim 32 outest=_anpre pretime=30 preiter=25 tech =
Default inest = EMWS8.AutoNeural35_ESTDS bylabel ;
NOTE:  Synchronizing the objectives and the Solution.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANPRE has 65 observations and 1038 variables.
NOTE: The data set EMWS8.AUTONEURAL35_ESTDS has 1 observations and 523
      variables.
MPRINT(EM_DIAGRAM):   *;
995986     tech = Default
995987     inest = EMWS8.AutoNeural35_ESTDS bylabel
995988     ;
995989     *;
995990     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
995991     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_train_title  ,NOQUOTE,
995991   ! Search # 4 FUNNEL LAYERS trial # 3 : SINE : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 4 FUNNEL LAYERS trial # 3 : SINE :
Training";
MPRINT(EM_DIAGRAM):   train estiter=1 outest=_anest outfit=_anfit maxtime=842
maxiter=50 tech = Default;
WARNING: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 50 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANEST has 53 observations and 1038 variables.
NOTE: The data set WORK._ANFIT has 104 observations and 36 variables.
MPRINT(EM_DIAGRAM):   ;
995992     train estiter=1 outest=_anest outfit=_anfit maxtime=842 maxiter=50
MPRINT(EM_DIAGRAM):   run;
995993     tech = Default;
995994     ;
995995     run;
 
NOTE: The data set WORK.EM_AUTONEURAL35 has 2374 observations and 10 variables.
NOTE: The data set EMWS8.META3_VALIDATE has . observations and 45 variables.
NOTE: View EMWS8.META3_VALIDATE.VIEW used (Total process time):
      real time           48.69 seconds
      cpu time            48.60 seconds
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: Closing the Neural Application.
NOTE: The PROCEDURE NEURAL printed page 983.
NOTE: PROCEDURE NEURAL used (Total process time):
      real time           48.69 seconds
      cpu time            48.60 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
995996     *;
995997     proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
MPRINT(EM_DIAGRAM):   proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
995998     var _iter_ _aic_ _averr_ _misc_
995999     _vaverr_ _vmisc_
996000     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
996001     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _name_='OVERALL';
NOTE: The PROCEDURE PRINT printed page 984.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Extract best iteration;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
996002     *------------------------------------------------------------*;
996003     * Extract best iteration;
996004     ;
996005     *------------------------------------------------------------*;
996006     %global _iter;
996007     data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
996008     set _anfit(where=(_NAME_ eq 'OVERALL'));
MPRINT(EM_DIAGRAM):   set _anfit(where=(_NAME_ eq 'OVERALL'));
996009     retain _min 1e+64;
MPRINT(EM_DIAGRAM):   retain _min 1e+64;
996010     if _VMISC_ < _min then do;
MPRINT(EM_DIAGRAM):   if _VMISC_ < _min then do;
996011     _min = _VMISC_;
MPRINT(EM_DIAGRAM):   _min = _VMISC_;
996012     call symput('_iter',put(_ITER_, 6.));
MPRINT(EM_DIAGRAM):   call symput('_iter',put(_ITER_, 6.));
996013     end;
MPRINT(EM_DIAGRAM):   end;
996014     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _NAME_='OVERALL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
996015     *;
 
996016     data EMWS8.AutoNeural35_ESTDS;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural35_ESTDS;
996017     set _anest;
MPRINT(EM_DIAGRAM):   set _anest;
996018     if _ITER_ eq 2 then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 2 then do;
996019     output;
MPRINT(EM_DIAGRAM):   output;
996020     stop;
MPRINT(EM_DIAGRAM):   stop;
996021     end;
MPRINT(EM_DIAGRAM):   end;
996022     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set WORK._ANEST.
NOTE: The data set EMWS8.AUTONEURAL35_ESTDS has 1 observations and 1038
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
996023     *;
996024     data EMWS8.AutoNeural35_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural35_OUTFIT;
996025     set _anfit;
MPRINT(EM_DIAGRAM):   set _anfit;
996026     if _ITER_ eq 2 and _NAME_ eq "OVERALL" then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 2 and _NAME_ eq "OVERALL" then do;
996027     output;
MPRINT(EM_DIAGRAM):   output;
996028     stop;
MPRINT(EM_DIAGRAM):   stop;
996029     end;
MPRINT(EM_DIAGRAM):   end;
996030     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 6 observations read from the data set WORK._ANFIT.
NOTE: The data set EMWS8.AUTONEURAL35_OUTFIT has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
996031     *;
MPRINT(EM_DIAGRAM):    *;
996032     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
996033     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_selectediteration_title
996033   ! , NOQUOTE, _VMISC_))";
MPRINT(EM_DIAGRAM):   title10 "Selected Iteration based on _VMISC_";
996034     proc print data=EMWS8.AutoNeural35_OUTFIT noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural35_OUTFIT noobs;
996035     var _iter_ _aic_ _averr_ _misc_
996036     _vaverr_ _vmisc_
996037     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
996038     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL35_OUTFIT.
NOTE: The PROCEDURE PRINT printed page 985.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
996039     title9;
MPRINT(EM_DIAGRAM):   title9;
996040     title10;
MPRINT(EM_DIAGRAM):   title10;
996041     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
996042     set EMWS8.AutoNeural35_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural35_OUTFIT;
996043     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
996044     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL35_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
996045     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
996046     set EMWS8.AutoNeural35_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural35_OUTFIT;
996047     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
996048     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL35_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
996049     * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
996050     ;
MPRINT(EM_DIAGRAM):   ;
996051     data EMWS8.AutoNeural35_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural35_OUTFIT;
996052     set EMWS8.AutoNeural35_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural35_OUTFIT;
996053     length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
996054     _func_ = "SINE";
MPRINT(EM_DIAGRAM):   _func_ = "SINE";
996055     _status_ = "reject";
MPRINT(EM_DIAGRAM):   _status_ = "reject";
996056     _step_ = "FUNNEL LAYERS 4";
MPRINT(EM_DIAGRAM):   _step_ = "FUNNEL LAYERS 4";
996057     _index_ = 4;
MPRINT(EM_DIAGRAM):   _index_ = 4;
996058     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL35_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL35_OUTFIT has 1 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
996059     data EMWS8.AutoNeural35_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural35_HISTORY;
996060     set EMWS8.AutoNeural35_HISTORY EMWS8.AutoNeural35_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural35_HISTORY EMWS8.AutoNeural35_OUTFIT;
996061     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 18 observations read from the data set
      EMWS8.AUTONEURAL35_HISTORY.
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL35_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL35_HISTORY has 19 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
996062     * SEARCH: recall starting estimates;
MPRINT(EM_DIAGRAM):    * SEARCH: recall starting estimates;
996063     ;
MPRINT(EM_DIAGRAM):   ;
996064     data EMWS8.AutoNeural35_ESTDS;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural35_ESTDS;
996065     set EMWS8.AutoNeural35_BESTDS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural35_BESTDS;
996066     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL35_BESTDS.
NOTE: The data set EMWS8.AUTONEURAL35_ESTDS has 1 observations and 523
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
996067     *;
MPRINT(EM_DIAGRAM):    *;
996068     proc neural data=EM_AutoNeural35 dmdbcat=WORK.AutoNeural35_DMDB
996069     validdata=EMWS8.Meta3_VALIDATE
996070     ;
MPRINT(EM_DIAGRAM):   proc neural data=EM_AutoNeural35
dmdbcat=WORK.AutoNeural35_DMDB validdata=EMWS8.Meta3_VALIDATE ;
996071     *;
MPRINT(EM_DIAGRAM):   *;
996072     nloptions noprint;
MPRINT(EM_DIAGRAM):   nloptions noprint;
996073     performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   input
996074     input %INTINPUTS / level=interval id=interval;
MPRINT(INTINPUTS):   AcceptedCmpTotal Frq Mnt MntMeatProducts
NumCatalogPurchases NumDealsPurchases NumWebVisitsMonth Recency
MPRINT(EM_DIAGRAM):   / level=interval id=interval;
MPRINT(EM_DIAGRAM):   input
996075     input %NOMINPUTS / level=nominal id=nominal;
MPRINT(NOMINPUTS):   Marital_Status
MPRINT(EM_DIAGRAM):   / level=nominal id=nominal;
996076     target DepVar / level=NOMINAL id=DepVar
996077     ;
MPRINT(EM_DIAGRAM):   target DepVar / level=NOMINAL id=DepVar ;
996078     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
996079     * Layer #1;
MPRINT(EM_DIAGRAM):   * Layer #1;
996080     ;
MPRINT(EM_DIAGRAM):   ;
996081     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
996082     Hidden 6 / id = H1x1_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H1x1_ act=SOFTMAX;
996083     connect interval H1x1_;
MPRINT(EM_DIAGRAM):   connect interval H1x1_;
996084     connect nominal H1x1_;
MPRINT(EM_DIAGRAM):   connect nominal H1x1_;
996085     Hidden 6 / id = H1x2_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H1x2_ act=SOFTMAX;
996086     connect interval H1x2_;
MPRINT(EM_DIAGRAM):   connect interval H1x2_;
996087     connect nominal H1x2_;
MPRINT(EM_DIAGRAM):   connect nominal H1x2_;
996088     Hidden 6 / id = H1x3_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H1x3_ act=SOFTMAX;
996089     connect interval H1x3_;
MPRINT(EM_DIAGRAM):   connect interval H1x3_;
996090     connect nominal H1x3_;
MPRINT(EM_DIAGRAM):   connect nominal H1x3_;
996091     Hidden 6 / id = H1x4_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H1x4_ act=SOFTMAX;
996092     connect interval H1x4_;
MPRINT(EM_DIAGRAM):   connect interval H1x4_;
996093     connect nominal H1x4_;
MPRINT(EM_DIAGRAM):   connect nominal H1x4_;
996094     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
996095     * Layer #2;
MPRINT(EM_DIAGRAM):   * Layer #2;
996096     ;
MPRINT(EM_DIAGRAM):   ;
996097     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
996098     Hidden 6 / id = H2x1_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H2x1_ act=LOG;
996099     connect H1x1_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x1_ H2x1_;
996100     connect H1x2_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x2_ H2x1_;
996101     connect H1x3_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x3_ H2x1_;
996102     connect H1x4_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x4_ H2x1_;
996103     Hidden 6 / id = H2x2_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H2x2_ act=LOG;
996104     connect H1x1_ H2x2_;
MPRINT(EM_DIAGRAM):   connect H1x1_ H2x2_;
996105     connect H1x2_ H2x2_;
MPRINT(EM_DIAGRAM):   connect H1x2_ H2x2_;
996106     connect H1x3_ H2x2_;
MPRINT(EM_DIAGRAM):   connect H1x3_ H2x2_;
996107     connect H1x4_ H2x2_;
MPRINT(EM_DIAGRAM):   connect H1x4_ H2x2_;
996108     Hidden 6 / id = H2x3_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H2x3_ act=LOG;
996109     connect H1x1_ H2x3_;
MPRINT(EM_DIAGRAM):   connect H1x1_ H2x3_;
996110     connect H1x2_ H2x3_;
MPRINT(EM_DIAGRAM):   connect H1x2_ H2x3_;
996111     connect H1x3_ H2x3_;
MPRINT(EM_DIAGRAM):   connect H1x3_ H2x3_;
996112     connect H1x4_ H2x3_;
MPRINT(EM_DIAGRAM):   connect H1x4_ H2x3_;
996113     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
996114     * Layer #3;
MPRINT(EM_DIAGRAM):   * Layer #3;
996115     ;
MPRINT(EM_DIAGRAM):   ;
996116     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
996117     Hidden 6 / id = H3x1_ act=SINE;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H3x1_ act=SINE;
996118     connect H2x1_ H3x1_;
MPRINT(EM_DIAGRAM):   connect H2x1_ H3x1_;
996119     connect H2x2_ H3x1_;
MPRINT(EM_DIAGRAM):   connect H2x2_ H3x1_;
996120     connect H2x3_ H3x1_;
MPRINT(EM_DIAGRAM):   connect H2x3_ H3x1_;
996121     Hidden 6 / id = H3x2_ act=SINE;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H3x2_ act=SINE;
996122     connect H2x1_ H3x2_;
MPRINT(EM_DIAGRAM):   connect H2x1_ H3x2_;
996123     connect H2x2_ H3x2_;
MPRINT(EM_DIAGRAM):   connect H2x2_ H3x2_;
996124     connect H2x3_ H3x2_;
MPRINT(EM_DIAGRAM):   connect H2x3_ H3x2_;
996125     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
996126     * Layer #4;
MPRINT(EM_DIAGRAM):   * Layer #4;
996127     ;
MPRINT(EM_DIAGRAM):   ;
996128     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
996129     Hidden 6 / id = H4x1_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H4x1_ act=SOFTMAX;
996130     connect H3x1_ H4x1_;
MPRINT(EM_DIAGRAM):   connect H3x1_ H4x1_;
996131     connect H3x2_ H4x1_;
MPRINT(EM_DIAGRAM):   connect H3x2_ H4x1_;
996132     connect H4x1_ DepVar;
MPRINT(EM_DIAGRAM):   connect H4x1_ DepVar;
996133     *;
MPRINT(EM_DIAGRAM):   *;
996134     netoptions ranscale = 1;
MPRINT(EM_DIAGRAM):   netoptions ranscale = 1;
996135     *;
MPRINT(EM_DIAGRAM):   *;
996136     initial
996137     inest = EMWS8.AutoNeural35_ESTDS bylabel;
MPRINT(EM_DIAGRAM):   initial inest = EMWS8.AutoNeural35_ESTDS bylabel;
NOTE: The data set EMWS8.AUTONEURAL35_ESTDS has 1 observations and 523
      variables.
996138     ;
MPRINT(EM_DIAGRAM):   ;
996139     *;
MPRINT(EM_DIAGRAM):   *;
996140     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
996141     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_prelim_title  ,NOQUOTE,
996141   ! Search # 4 FUNNEL LAYERS trial # 4 : SOFTMAX : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 4 FUNNEL LAYERS trial # 4 : SOFTMAX :
Prelim";
996142     prelim 32 outest=_anpre pretime=30 preiter=25
MPRINT(EM_DIAGRAM):   prelim 32 outest=_anpre pretime=30 preiter=25 tech =
Default inest = EMWS8.AutoNeural35_ESTDS bylabel ;
NOTE:  Synchronizing the objectives and the Solution.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANPRE has 65 observations and 1025 variables.
NOTE: The data set EMWS8.AUTONEURAL35_ESTDS has 1 observations and 523
      variables.
MPRINT(EM_DIAGRAM):   *;
996143     tech = Default
996144     inest = EMWS8.AutoNeural35_ESTDS bylabel
996145     ;
996146     *;
996147     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
996148     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_train_title  ,NOQUOTE,
996148   ! Search # 4 FUNNEL LAYERS trial # 4 : SOFTMAX : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 4 FUNNEL LAYERS trial # 4 : SOFTMAX :
Training";
MPRINT(EM_DIAGRAM):   train estiter=1 outest=_anest outfit=_anfit maxtime=830
maxiter=50 tech = Default;
WARNING: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 50 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANEST has 53 observations and 1025 variables.
NOTE: The data set WORK._ANFIT has 104 observations and 36 variables.
MPRINT(EM_DIAGRAM):   ;
996149     train estiter=1 outest=_anest outfit=_anfit maxtime=830 maxiter=50
MPRINT(EM_DIAGRAM):   run;
996150     tech = Default;
996151     ;
996152     run;
 
NOTE: The data set WORK.EM_AUTONEURAL35 has 2374 observations and 10 variables.
NOTE: The data set EMWS8.META3_VALIDATE has . observations and 45 variables.
NOTE: View EMWS8.META3_VALIDATE.VIEW used (Total process time):
      real time           56.34 seconds
      cpu time            56.20 seconds
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: Closing the Neural Application.
NOTE: The PROCEDURE NEURAL printed page 986.
NOTE: PROCEDURE NEURAL used (Total process time):
      real time           56.36 seconds
      cpu time            56.22 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
996153     *;
996154     proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
MPRINT(EM_DIAGRAM):   proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
996155     var _iter_ _aic_ _averr_ _misc_
996156     _vaverr_ _vmisc_
996157     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
996158     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _name_='OVERALL';
NOTE: The PROCEDURE PRINT printed page 987.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Extract best iteration;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
996159     *------------------------------------------------------------*;
996160     * Extract best iteration;
996161     ;
996162     *------------------------------------------------------------*;
996163     %global _iter;
996164     data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
996165     set _anfit(where=(_NAME_ eq 'OVERALL'));
MPRINT(EM_DIAGRAM):   set _anfit(where=(_NAME_ eq 'OVERALL'));
996166     retain _min 1e+64;
MPRINT(EM_DIAGRAM):   retain _min 1e+64;
996167     if _VMISC_ < _min then do;
MPRINT(EM_DIAGRAM):   if _VMISC_ < _min then do;
996168     _min = _VMISC_;
MPRINT(EM_DIAGRAM):   _min = _VMISC_;
996169     call symput('_iter',put(_ITER_, 6.));
MPRINT(EM_DIAGRAM):   call symput('_iter',put(_ITER_, 6.));
996170     end;
MPRINT(EM_DIAGRAM):   end;
996171     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _NAME_='OVERALL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
996172     *;
 
996173     data EMWS8.AutoNeural35_ESTDS;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural35_ESTDS;
996174     set _anest;
MPRINT(EM_DIAGRAM):   set _anest;
996175     if _ITER_ eq 24 then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 24 then do;
996176     output;
MPRINT(EM_DIAGRAM):   output;
996177     stop;
MPRINT(EM_DIAGRAM):   stop;
996178     end;
MPRINT(EM_DIAGRAM):   end;
996179     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 25 observations read from the data set WORK._ANEST.
NOTE: The data set EMWS8.AUTONEURAL35_ESTDS has 1 observations and 1025
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
996180     *;
996181     data EMWS8.AutoNeural35_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural35_OUTFIT;
996182     set _anfit;
MPRINT(EM_DIAGRAM):   set _anfit;
996183     if _ITER_ eq 24 and _NAME_ eq "OVERALL" then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 24 and _NAME_ eq "OVERALL" then do;
996184     output;
MPRINT(EM_DIAGRAM):   output;
996185     stop;
MPRINT(EM_DIAGRAM):   stop;
996186     end;
MPRINT(EM_DIAGRAM):   end;
996187     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 50 observations read from the data set WORK._ANFIT.
NOTE: The data set EMWS8.AUTONEURAL35_OUTFIT has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
996188     *;
MPRINT(EM_DIAGRAM):    *;
996189     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
996190     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_selectediteration_title
996190   ! , NOQUOTE, _VMISC_))";
MPRINT(EM_DIAGRAM):   title10 "Selected Iteration based on _VMISC_";
996191     proc print data=EMWS8.AutoNeural35_OUTFIT noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural35_OUTFIT noobs;
996192     var _iter_ _aic_ _averr_ _misc_
996193     _vaverr_ _vmisc_
996194     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
996195     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL35_OUTFIT.
NOTE: The PROCEDURE PRINT printed page 988.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
996196     title9;
MPRINT(EM_DIAGRAM):   title9;
996197     title10;
MPRINT(EM_DIAGRAM):   title10;
996198     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
996199     set EMWS8.AutoNeural35_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural35_OUTFIT;
996200     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
996201     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL35_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
996202     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
996203     set EMWS8.AutoNeural35_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural35_OUTFIT;
996204     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
996205     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL35_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
996206     * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
996207     ;
MPRINT(EM_DIAGRAM):   ;
996208     data EMWS8.AutoNeural35_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural35_OUTFIT;
996209     set EMWS8.AutoNeural35_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural35_OUTFIT;
996210     length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
996211     _func_ = "SOFTMAX";
MPRINT(EM_DIAGRAM):   _func_ = "SOFTMAX";
996212     _status_ = "reject";
MPRINT(EM_DIAGRAM):   _status_ = "reject";
996213     _step_ = "FUNNEL LAYERS 4";
MPRINT(EM_DIAGRAM):   _step_ = "FUNNEL LAYERS 4";
996214     _index_ = 4;
MPRINT(EM_DIAGRAM):   _index_ = 4;
996215     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL35_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL35_OUTFIT has 1 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
996216     data EMWS8.AutoNeural35_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural35_HISTORY;
996217     set EMWS8.AutoNeural35_HISTORY EMWS8.AutoNeural35_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural35_HISTORY EMWS8.AutoNeural35_OUTFIT;
996218     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 19 observations read from the data set
      EMWS8.AUTONEURAL35_HISTORY.
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL35_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL35_HISTORY has 20 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
996219     data EMWS8.AutoNeural35_ESTDS;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural35_ESTDS;
996220     set WORK.SAVEDS_AUTONEUR_2H8DSPC;
MPRINT(EM_DIAGRAM):   set WORK.SAVEDS_AUTONEUR_2H8DSPC;
996221     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      WORK.SAVEDS_AUTONEUR_2H8DSPC.
NOTE: The data set EMWS8.AUTONEURAL35_ESTDS has 1 observations and 523
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
996222     *;
MPRINT(EM_DIAGRAM):    *;
996223     proc neural data=EM_AutoNeural35 dmdbcat=WORK.AutoNeural35_DMDB
996224     validdata=EMWS8.Meta3_VALIDATE
996225     ;
MPRINT(EM_DIAGRAM):   proc neural data=EM_AutoNeural35
dmdbcat=WORK.AutoNeural35_DMDB validdata=EMWS8.Meta3_VALIDATE ;
996226     *;
MPRINT(EM_DIAGRAM):   *;
996227     nloptions noprint;
MPRINT(EM_DIAGRAM):   nloptions noprint;
996228     performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   input
996229     input %INTINPUTS / level=interval id=interval;
MPRINT(INTINPUTS):   AcceptedCmpTotal Frq Mnt MntMeatProducts
NumCatalogPurchases NumDealsPurchases NumWebVisitsMonth Recency
MPRINT(EM_DIAGRAM):   / level=interval id=interval;
MPRINT(EM_DIAGRAM):   input
996230     input %NOMINPUTS / level=nominal id=nominal;
MPRINT(NOMINPUTS):   Marital_Status
MPRINT(EM_DIAGRAM):   / level=nominal id=nominal;
996231     target DepVar / level=NOMINAL id=DepVar
996232     ;
MPRINT(EM_DIAGRAM):   target DepVar / level=NOMINAL id=DepVar ;
996233     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
996234     * Layer #1;
MPRINT(EM_DIAGRAM):   * Layer #1;
996235     ;
MPRINT(EM_DIAGRAM):   ;
996236     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
996237     Hidden 6 / id = H1x1_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H1x1_ act=SOFTMAX;
996238     connect interval H1x1_;
MPRINT(EM_DIAGRAM):   connect interval H1x1_;
996239     connect nominal H1x1_;
MPRINT(EM_DIAGRAM):   connect nominal H1x1_;
996240     Hidden 6 / id = H1x2_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H1x2_ act=SOFTMAX;
996241     connect interval H1x2_;
MPRINT(EM_DIAGRAM):   connect interval H1x2_;
996242     connect nominal H1x2_;
MPRINT(EM_DIAGRAM):   connect nominal H1x2_;
996243     Hidden 6 / id = H1x3_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H1x3_ act=SOFTMAX;
996244     connect interval H1x3_;
MPRINT(EM_DIAGRAM):   connect interval H1x3_;
996245     connect nominal H1x3_;
MPRINT(EM_DIAGRAM):   connect nominal H1x3_;
996246     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
996247     * Layer #2;
MPRINT(EM_DIAGRAM):   * Layer #2;
996248     ;
MPRINT(EM_DIAGRAM):   ;
996249     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
996250     Hidden 6 / id = H2x1_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H2x1_ act=LOG;
996251     connect H1x1_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x1_ H2x1_;
996252     connect H1x2_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x2_ H2x1_;
996253     connect H1x3_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x3_ H2x1_;
996254     Hidden 6 / id = H2x2_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H2x2_ act=LOG;
996255     connect H1x1_ H2x2_;
MPRINT(EM_DIAGRAM):   connect H1x1_ H2x2_;
996256     connect H1x2_ H2x2_;
MPRINT(EM_DIAGRAM):   connect H1x2_ H2x2_;
996257     connect H1x3_ H2x2_;
MPRINT(EM_DIAGRAM):   connect H1x3_ H2x2_;
996258     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
996259     * Layer #3;
MPRINT(EM_DIAGRAM):   * Layer #3;
996260     ;
MPRINT(EM_DIAGRAM):   ;
996261     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
996262     Hidden 6 / id = H3x1_ act=SINE;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H3x1_ act=SINE;
996263     connect H2x1_ H3x1_;
MPRINT(EM_DIAGRAM):   connect H2x1_ H3x1_;
996264     connect H2x2_ H3x1_;
MPRINT(EM_DIAGRAM):   connect H2x2_ H3x1_;
996265     connect H3x1_ DepVar;
MPRINT(EM_DIAGRAM):   connect H3x1_ DepVar;
996266     *;
MPRINT(EM_DIAGRAM):   *;
996267     netoptions ranscale = 1;
MPRINT(EM_DIAGRAM):   netoptions ranscale = 1;
996268     *;
MPRINT(EM_DIAGRAM):   *;
996269     initial
996270     inest = EMWS8.AutoNeural35_ESTDS bylabel;
MPRINT(EM_DIAGRAM):   initial inest = EMWS8.AutoNeural35_ESTDS bylabel;
NOTE: The data set EMWS8.AUTONEURAL35_ESTDS has 1 observations and 523
      variables.
996271     ;
MPRINT(EM_DIAGRAM):   ;
996272     *;
MPRINT(EM_DIAGRAM):   *;
996273     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
996274     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_prelim_title  ,NOQUOTE,
996274   ! Final Training))";
MPRINT(EM_DIAGRAM):   title10 "Final Training Prelim";
996275     prelim 32 outest=_anpre pretime=30 preiter=25
MPRINT(EM_DIAGRAM):   prelim 32 outest=_anpre pretime=30 preiter=25 tech =
Default inest = EMWS8.AutoNeural35_ESTDS bylabel ;
NOTE:  Synchronizing the objectives and the Solution.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
The prelim will run only once. Use the randbias or randout option on the target
layer.
NOTE: The data set WORK._ANPRE has 3 observations and 523 variables.
NOTE: The data set EMWS8.AUTONEURAL35_ESTDS has 1 observations and 523
      variables.
MPRINT(EM_DIAGRAM):   *;
996276     tech = Default
996277     inest = EMWS8.AutoNeural35_ESTDS bylabel
996278     ;
996279     *;
996280     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
996281     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_train_title  ,NOQUOTE,
996281   ! Final Training))";
MPRINT(EM_DIAGRAM):   title10 "Final Training Training";
MPRINT(EM_DIAGRAM):   train estiter=1 outest=_anest outfit=_anfit maxtime=816
maxiter=5 tech = Default;
WARNING: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 5 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANEST has 8 observations and 523 variables.
NOTE: The data set WORK._ANFIT has 14 observations and 36 variables.
MPRINT(EM_DIAGRAM):   ;
996282     train estiter=1 outest=_anest outfit=_anfit maxtime=816 maxiter=5
MPRINT(EM_DIAGRAM):   run;
996283     tech = Default;
996284     ;
996285     run;
 
NOTE: The data set WORK.EM_AUTONEURAL35 has 2374 observations and 10 variables.
NOTE: The data set EMWS8.META3_VALIDATE has . observations and 45 variables.
NOTE: View EMWS8.META3_VALIDATE.VIEW used (Total process time):
      real time           1.21 seconds
      cpu time            1.18 seconds
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: Closing the Neural Application.
NOTE: The PROCEDURE NEURAL printed page 989.
NOTE: PROCEDURE NEURAL used (Total process time):
      real time           1.23 seconds
      cpu time            1.20 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
996286     *;
996287     proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
MPRINT(EM_DIAGRAM):   proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
996288     var _iter_ _aic_ _averr_ _misc_
996289     _vaverr_ _vmisc_
996290     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
996291     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 7 observations read from the data set WORK._ANFIT.
      WHERE _name_='OVERALL';
NOTE: The PROCEDURE PRINT printed page 990.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Extract best iteration;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
996292     *------------------------------------------------------------*;
996293     * Extract best iteration;
996294     ;
996295     *------------------------------------------------------------*;
996296     %global _iter;
996297     data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
996298     set _anfit(where=(_NAME_ eq 'OVERALL'));
MPRINT(EM_DIAGRAM):   set _anfit(where=(_NAME_ eq 'OVERALL'));
996299     retain _min 1e+64;
MPRINT(EM_DIAGRAM):   retain _min 1e+64;
996300     if _VMISC_ < _min then do;
MPRINT(EM_DIAGRAM):   if _VMISC_ < _min then do;
996301     _min = _VMISC_;
MPRINT(EM_DIAGRAM):   _min = _VMISC_;
996302     call symput('_iter',put(_ITER_, 6.));
MPRINT(EM_DIAGRAM):   call symput('_iter',put(_ITER_, 6.));
996303     end;
MPRINT(EM_DIAGRAM):   end;
996304     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 7 observations read from the data set WORK._ANFIT.
      WHERE _NAME_='OVERALL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
996305     *;
 
996306     data EMWS8.AutoNeural35_ESTDS;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural35_ESTDS;
996307     set _anest;
MPRINT(EM_DIAGRAM):   set _anest;
996308     if _ITER_ eq 2 then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 2 then do;
996309     output;
MPRINT(EM_DIAGRAM):   output;
996310     stop;
MPRINT(EM_DIAGRAM):   stop;
996311     end;
MPRINT(EM_DIAGRAM):   end;
996312     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set WORK._ANEST.
NOTE: The data set EMWS8.AUTONEURAL35_ESTDS has 1 observations and 523
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
996313     *;
996314     data EMWS8.AutoNeural35_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural35_OUTFIT;
996315     set _anfit;
MPRINT(EM_DIAGRAM):   set _anfit;
996316     if _ITER_ eq 2 and _NAME_ eq "OVERALL" then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 2 and _NAME_ eq "OVERALL" then do;
996317     output;
MPRINT(EM_DIAGRAM):   output;
996318     stop;
MPRINT(EM_DIAGRAM):   stop;
996319     end;
MPRINT(EM_DIAGRAM):   end;
996320     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 6 observations read from the data set WORK._ANFIT.
NOTE: The data set EMWS8.AUTONEURAL35_OUTFIT has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
996321     *;
MPRINT(EM_DIAGRAM):    *;
996322     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
996323     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_selectediteration_title
996323   ! , NOQUOTE, _VMISC_))";
MPRINT(EM_DIAGRAM):   title10 "Selected Iteration based on _VMISC_";
996324     proc print data=EMWS8.AutoNeural35_OUTFIT noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural35_OUTFIT noobs;
996325     var _iter_ _aic_ _averr_ _misc_
996326     _vaverr_ _vmisc_
996327     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
996328     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL35_OUTFIT.
NOTE: The PROCEDURE PRINT printed page 991.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
996329     title9;
MPRINT(EM_DIAGRAM):   title9;
996330     title10;
MPRINT(EM_DIAGRAM):   title10;
996331     * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
996332     ;
MPRINT(EM_DIAGRAM):   ;
996333     data EMWS8.AutoNeural35_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural35_OUTFIT;
996334     set EMWS8.AutoNeural35_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural35_OUTFIT;
996335     length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
996336     _func_ = "";
MPRINT(EM_DIAGRAM):   _func_ = "";
996337     _status_ = "Final";
MPRINT(EM_DIAGRAM):   _status_ = "Final";
996338     _step_ = "";
MPRINT(EM_DIAGRAM):   _step_ = "";
996339     _index_ = 5;
MPRINT(EM_DIAGRAM):   _index_ = 5;
996340     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL35_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL35_OUTFIT has 1 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
996341     data EMWS8.AutoNeural35_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural35_HISTORY;
996342     set EMWS8.AutoNeural35_HISTORY EMWS8.AutoNeural35_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural35_HISTORY EMWS8.AutoNeural35_OUTFIT;
996343     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 20 observations read from the data set
      EMWS8.AUTONEURAL35_HISTORY.
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL35_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL35_HISTORY has 21 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
996344     title9 " ";
MPRINT(EM_DIAGRAM):    title9 " ";
996345     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_finaltrainhistory_title
996345   ! , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Final Training History";
996346     proc print data=EMWS8.AutoNeural35_HISTORY noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural35_HISTORY noobs;
996347     var _step_ _func_ _status_ _iter_ _averr_ _misc_ _aic_
996348     _vaverr_ _vmisc_
996349     ;
MPRINT(EM_DIAGRAM):   var _step_ _func_ _status_ _iter_ _averr_ _misc_ _aic_
_vaverr_ _vmisc_ ;
996350     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 21 observations read from the data set
      EMWS8.AUTONEURAL35_HISTORY.
NOTE: The PROCEDURE PRINT printed page 992.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
996351     data work.keep_history;
MPRINT(EM_DIAGRAM):   data work.keep_history;
996352     set EMWS8.AutoNeural35_HISTORY;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural35_HISTORY;
996353     if _status_='keep';
MPRINT(EM_DIAGRAM):   if _status_='keep';
996354     if _func_='DIRECT' then neurons=0;
MPRINT(EM_DIAGRAM):   if _func_='DIRECT' then neurons=0;
996355     else neurons=6;
MPRINT(EM_DIAGRAM):   else neurons=6;
996356     label neurons="%sysfunc(sasmsg(sashelp.dmine,
996356   ! rpt_numberneurons_vlabel  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   label neurons= "Number of Neurons";
996357     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 21 observations read from the data set
      EMWS8.AUTONEURAL35_HISTORY.
NOTE: The data set WORK.KEEP_HISTORY has 3 observations and 41 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
996358     title8 " ";
MPRINT(EM_DIAGRAM):   title8 " ";
996359     title9 "%sysfunc(sasmsg(sashelp.dmine, rpt_finalmodel_title  ,
996359   ! NOQUOTE))";
MPRINT(EM_DIAGRAM):   title9 "Final Model";
996360     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_stopping_title  ,
996360   ! NOQUOTE, %nrbquote(Termination criteria were satisfied: overfitting
996360   ! based on _VMISC_)))";
MPRINT(EM_DIAGRAM):   title10 "Stopping: Termination criteria were satisfied:
overfitting based on _VMISC_";
996361     proc print data=work.keep_history noobs;
MPRINT(EM_DIAGRAM):   proc print data=work.keep_history noobs;
996362     var _func_ _averr_
996363     _vaverr_
996364     neurons;
MPRINT(EM_DIAGRAM):   var _func_ _averr_ _vaverr_ neurons;
996365     sum neurons;
MPRINT(EM_DIAGRAM):   sum neurons;
996366     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set WORK.KEEP_HISTORY.
NOTE: The PROCEDURE PRINT printed page 993.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
996367     title8;
MPRINT(EM_DIAGRAM):   title8;
996368     title9;
MPRINT(EM_DIAGRAM):   title9;
996369     title10;
MPRINT(EM_DIAGRAM):   title10;
996370     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
996371     * AutoNeural Final Network;
MPRINT(EM_DIAGRAM):   * AutoNeural Final Network;
996372     ;
MPRINT(EM_DIAGRAM):   ;
996373     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
996374     *;
MPRINT(EM_DIAGRAM):   *;
996375     proc neural data=EM_AutoNeural35 dmdbcat=WORK.AutoNeural35_DMDB
996376     validdata=EMWS8.Meta3_VALIDATE
996377     ;
MPRINT(EM_DIAGRAM):   proc neural data=EM_AutoNeural35
dmdbcat=WORK.AutoNeural35_DMDB validdata=EMWS8.Meta3_VALIDATE ;
996378     *;
MPRINT(EM_DIAGRAM):   *;
996379     nloptions noprint;
MPRINT(EM_DIAGRAM):   nloptions noprint;
996380     performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   input
996381     input %INTINPUTS / level=interval id=interval;
MPRINT(INTINPUTS):   AcceptedCmpTotal Frq Mnt MntMeatProducts
NumCatalogPurchases NumDealsPurchases NumWebVisitsMonth Recency
MPRINT(EM_DIAGRAM):   / level=interval id=interval;
MPRINT(EM_DIAGRAM):   input
996382     input %NOMINPUTS / level=nominal id=nominal;
MPRINT(NOMINPUTS):   Marital_Status
MPRINT(EM_DIAGRAM):   / level=nominal id=nominal;
996383     target DepVar / level=NOMINAL id=DepVar
996384     ;
MPRINT(EM_DIAGRAM):   target DepVar / level=NOMINAL id=DepVar ;
996385     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
996386     * Layer #1;
MPRINT(EM_DIAGRAM):   * Layer #1;
996387     ;
MPRINT(EM_DIAGRAM):   ;
996388     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
996389     Hidden 6 / id = H1x1_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H1x1_ act=SOFTMAX;
996390     connect interval H1x1_;
MPRINT(EM_DIAGRAM):   connect interval H1x1_;
996391     connect nominal H1x1_;
MPRINT(EM_DIAGRAM):   connect nominal H1x1_;
996392     Hidden 6 / id = H1x2_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H1x2_ act=SOFTMAX;
996393     connect interval H1x2_;
MPRINT(EM_DIAGRAM):   connect interval H1x2_;
996394     connect nominal H1x2_;
MPRINT(EM_DIAGRAM):   connect nominal H1x2_;
996395     Hidden 6 / id = H1x3_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H1x3_ act=SOFTMAX;
996396     connect interval H1x3_;
MPRINT(EM_DIAGRAM):   connect interval H1x3_;
996397     connect nominal H1x3_;
MPRINT(EM_DIAGRAM):   connect nominal H1x3_;
996398     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
996399     * Layer #2;
MPRINT(EM_DIAGRAM):   * Layer #2;
996400     ;
MPRINT(EM_DIAGRAM):   ;
996401     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
996402     Hidden 6 / id = H2x1_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H2x1_ act=LOG;
996403     connect H1x1_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x1_ H2x1_;
996404     connect H1x2_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x2_ H2x1_;
996405     connect H1x3_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x3_ H2x1_;
996406     Hidden 6 / id = H2x2_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H2x2_ act=LOG;
996407     connect H1x1_ H2x2_;
MPRINT(EM_DIAGRAM):   connect H1x1_ H2x2_;
996408     connect H1x2_ H2x2_;
MPRINT(EM_DIAGRAM):   connect H1x2_ H2x2_;
996409     connect H1x3_ H2x2_;
MPRINT(EM_DIAGRAM):   connect H1x3_ H2x2_;
996410     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
996411     * Layer #3;
MPRINT(EM_DIAGRAM):   * Layer #3;
996412     ;
MPRINT(EM_DIAGRAM):   ;
996413     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
996414     Hidden 6 / id = H3x1_ act=SINE;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H3x1_ act=SINE;
996415     connect H2x1_ H3x1_;
MPRINT(EM_DIAGRAM):   connect H2x1_ H3x1_;
996416     connect H2x2_ H3x1_;
MPRINT(EM_DIAGRAM):   connect H2x2_ H3x1_;
996417     connect H3x1_ DepVar;
MPRINT(EM_DIAGRAM):   connect H3x1_ DepVar;
996418     *;
MPRINT(EM_DIAGRAM):   *;
996419     initial inest= EMWS8.AutoNeural35_ESTDS bylabel;
MPRINT(EM_DIAGRAM):   initial inest= EMWS8.AutoNeural35_ESTDS bylabel;
NOTE: The data set EMWS8.AUTONEURAL35_ESTDS has 1 observations and 523
      variables.
996420     train tech=none;
MPRINT(EM_DIAGRAM):   train tech=none;
NOTE: No optimization performed.
996421     code
996421   ! file="C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural35\SCO
996421   ! RECODE.sas"
996422     group=AutoNeural35
996423     ;
MPRINT(EM_DIAGRAM):   code
file="C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural35\SCORECODE.sas"
 group=AutoNeural35 ;
NOTE: External file
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural35\SCORECODE.sas
      opened.
996424     ;
MPRINT(EM_DIAGRAM):   ;
996425     code
996425   ! file="C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural35\RES
996425   ! IDUALSCORECODE.sas"
996426     group=AutoNeural35
996427     residual
996428     ;
MPRINT(EM_DIAGRAM):   code
file="C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural35\RESIDUALSCOREC
ODE.sas" group=AutoNeural35 residual ;
NOTE: External file
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural35\RESIDUALSCOREC
      ODE.sas opened.
996429     ;
MPRINT(EM_DIAGRAM):   ;
996430     score data=EMWS8.Meta3_TRAIN out=_NULL_
NOTE: View EMWS8.META3_TRAIN.VIEW used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
996431     outfit=WORK.FIT1
996432     role=TRAIN
996433     outkey=EMWS8.AutoNeural35_OUTKEY;
MPRINT(EM_DIAGRAM):   score data=EMWS8.Meta3_TRAIN out=_NULL_ outfit=WORK.FIT1
role=TRAIN outkey=EMWS8.AutoNeural35_OUTKEY;
NOTE: The data set EMWS8.AUTONEURAL35_OUTKEY has 60 observations and 8
      variables.
NOTE: The data set EMWS8.META3_TRAIN has . observations and 45 variables.
NOTE: There were 2374 observations read from the data set EMWS8.PART_TRAIN.
NOTE: The data set WORK.FIT1 has 2 observations and 23 variables.
996434     score data=EMWS8.Meta3_VALIDATE out=_NULL_
NOTE: View EMWS8.META3_VALIDATE.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
996435     outfit=WORK.FIT2
996436     outkey=EMWS8.AutoNeural35_OUTKEY;
MPRINT(EM_DIAGRAM):   score data=EMWS8.Meta3_VALIDATE out=_NULL_
outfit=WORK.FIT2 outkey=EMWS8.AutoNeural35_OUTKEY;
NOTE: The data set EMWS8.AUTONEURAL35_OUTKEY has 60 observations and 8
      variables.
NOTE: The data set EMWS8.META3_VALIDATE has . observations and 45 variables.
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: The data set WORK.FIT2 has 2 observations and 15 variables.
996437     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK.EM_AUTONEURAL35 has 2374 observations and 10 variables.
NOTE: The data set EMWS8.META3_VALIDATE has . observations and 45 variables.
NOTE: View EMWS8.META3_VALIDATE.VIEW used (Total process time):
      real time           0.26 seconds
      cpu time            0.28 seconds
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: Closing the Neural Application.
NOTE: PROCEDURE NEURAL used (Total process time):
      real time           0.26 seconds
      cpu time            0.28 seconds
 
 
996438     data EMWS8.AutoNeural35_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural35_OUTFIT;
996439     merge WORK.FIT1 WORK.FIT2;
MPRINT(EM_DIAGRAM):   merge WORK.FIT1 WORK.FIT2;
996440     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set WORK.FIT1.
NOTE: There were 2 observations read from the data set WORK.FIT2.
NOTE: The data set EMWS8.AUTONEURAL35_OUTFIT has 2 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
996441     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
996442     * Generate Weights Plotting data set;
MPRINT(EM_DIAGRAM):   * Generate Weights Plotting data set;
996443     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
996444     data tempweight ( drop = _tech_ _decay_ _seed_ _nobj_ _obj_ _objerr_
996444   ! _averr_ _p_num_ where= (_type_ eq "PARMS"));
MPRINT(EM_DIAGRAM):   data tempweight ( drop = _tech_ _decay_ _seed_ _nobj_
_obj_ _objerr_ _averr_ _p_num_ where= (_type_ eq "PARMS"));
996445     set EMWS8.AutoNeural35_ESTDS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural35_ESTDS;
996446     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.AUTONEURAL35_ESTDS.
NOTE: The data set WORK.TEMPWEIGHT has 1 observations and 515 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
996447     proc sort;
MPRINT(EM_DIAGRAM):   proc sort;
996448     by _name_;
MPRINT(EM_DIAGRAM):   by _name_;
996449     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK.TEMPWEIGHT.
NOTE: The data set WORK.TEMPWEIGHT has 1 observations and 515 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
996450     proc transpose data=tempweight out=EMWS8.AutoNeural35_WEIGHTS;
MPRINT(EM_DIAGRAM):   proc transpose data=tempweight
out=EMWS8.AutoNeural35_WEIGHTS;
996451     by _name_;
MPRINT(EM_DIAGRAM):   by _name_;
996452     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK.TEMPWEIGHT.
NOTE: The data set EMWS8.AUTONEURAL35_WEIGHTS has 513 observations and 3
      variables.
NOTE: PROCEDURE TRANSPOSE used (Total process time):
      real time           0.40 seconds
      cpu time            0.01 seconds
 
 
996453     data EMWS8.AutoNeural35_WEIGHTS;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural35_WEIGHTS;
996454     set EMWS8.AutoNeural35_WEIGHTS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural35_WEIGHTS;
996455     FROM = ktrim(kleft(kscan(_LABEL_, 1, '-->')));
MPRINT(EM_DIAGRAM):   FROM = ktrim(kleft(kscan(_LABEL_, 1, '-->')));
996456     TO = ktrim(kleft(kscan(_LABEL_, 2, '>')));
MPRINT(EM_DIAGRAM):   TO = ktrim(kleft(kscan(_LABEL_, 2, '>')));
996457     WEIGHT = COL1;
MPRINT(EM_DIAGRAM):   WEIGHT = COL1;
996458     if (TO eq '') or (FROM eq '') then delete;
MPRINT(EM_DIAGRAM):   if (TO eq '') or (FROM eq '') then delete;
996459     label _LABEL_ ="%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel  ,
996459   ! NOQUOTE))" FROM = "%sysfunc(sasmsg(sashelp.dmine, rpt_from_vlabel  ,
996459   ! NOQUOTE))" TO = "%sysfunc(sasmsg(sashelp.dmine, rpt_into_vlabel  ,
996459   ! NOQUOTE))" WEIGHT =
996460        "%sysfunc(sasmsg(sashelp.dmine, rpt_weight_vlabel  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _LABEL_ = "Label" FROM = "From" TO = "Into" WEIGHT
= "Weight";
996461     keep FROM TO WEIGHT _LABEL_;
MPRINT(EM_DIAGRAM):   keep FROM TO WEIGHT _LABEL_;
996462     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 513 observations read from the data set
      EMWS8.AUTONEURAL35_WEIGHTS.
NOTE: The data set EMWS8.AUTONEURAL35_WEIGHTS has 508 observations and 4
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   * restore printing options;
MPRINT(EM_DIAGRAM):   ;
996463     * restore printing options;
996464     ;
996465     title10;
MPRINT(EM_DIAGRAM):   title10;
996466     options linesize=95;
MPRINT(EM_DIAGRAM):   options linesize=95;
996467     options pagesize=10000;
MPRINT(EM_DIAGRAM):   options pagesize=10000;
996468     options nonumber;
MPRINT(EM_DIAGRAM):   options nonumber;
996469     options nocenter;
MPRINT(EM_DIAGRAM):   options nocenter;
996470     options nodate;
MPRINT(EM_DIAGRAM):   options nodate;
MPRINT(EM_DIAGRAM):   *;
996471     *;
996472     proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
996473     delete EM_AutoNeural35;
MPRINT(EM_DIAGRAM):   delete EM_AutoNeural35;
996474     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Deleting WORK.EM_AUTONEURAL35 (memtype=DATA).
996475     quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
 
 
996476     data EMWS8.AutoNeural35_HISTORY;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural35_HISTORY;
996477     set EMWS8.AutoNeural35_HISTORY;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural35_HISTORY;
996478     label _T_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_trainstep_vlabel  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _T_ = "Training Step";
996479     label _iter_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_trainiterations_vlabel  ,
996479   ! NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _iter_ = "Training Iterations";
996480     _T_ = _N_ -1;
MPRINT(EM_DIAGRAM):   _T_ = _N_ -1;
996481     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 21 observations read from the data set EMWS8.AUTONEURAL35_HISTORY.
NOTE: The data set EMWS8.AUTONEURAL35_HISTORY has 21 observations and 41 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "28. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "20.19 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                28. April 2016
Time:                20.19 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O11VTVLT
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural35\EMSCORE.out" encoding="UTF-8"
NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O11VTVLT new;
MPRINT(EM_DIAGRAM):   run;
996583     filename emflow
996583   ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural35\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural35\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * AutoNeural35: Scoring DATA data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
996584     *------------------------------------------------------------*;
996585     * AutoNeural35: Scoring DATA data;
996586     *------------------------------------------------------------*;
996587     data EMWS8.AutoNeural35_TRAIN
996588     / view=EMWS8.AutoNeural35_TRAIN
996589     ;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural35_TRAIN / view=EMWS8.AutoNeural35_TRAIN ;
996590     set EMWS8.Meta3_TRAIN
996591     ;
MPRINT(EM_DIAGRAM):   set EMWS8.Meta3_TRAIN ;
996592     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural35\EMFLOWSCORE.sas.
996593    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
996594    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
996595    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
996596    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
996597    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
996598    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
996599    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
996600    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
996601    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
996602    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
996603    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
996604    +LENGTH _WARN_ $4
996605    +      F_DepVar  $ 12
996606    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
996607    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
996608    +
996609    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
996610    +
996611    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
996612    +
996613    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
996614    +
996615    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
996616    +
996617    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
996618    +
996619    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
996620    +
996621    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
996622    +
996623    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
996624    +
996625    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
996626    +
996627    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
996628    +
996629    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
996630    +
996631    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
996632    +
996633    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
996634    +
996635    +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
996636    +
996637    +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
996638    +
996639    +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
996640    +
996641    +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
996642    +
996643    +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
996644    +
996645    +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
996646    +
996647    +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
996648    +
996649    +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
996650    +
996651    +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
996652    +
996653    +      label H1x2_6 = 'Hidden: H1x2_=6' ;
MPRINT(EM_DIAGRAM):   label H1x2_6 = 'Hidden: H1x2_=6' ;
996654    +
996655    +      label H1x3_1 = 'Hidden: H1x3_=1' ;
MPRINT(EM_DIAGRAM):   label H1x3_1 = 'Hidden: H1x3_=1' ;
996656    +
996657    +      label H1x3_2 = 'Hidden: H1x3_=2' ;
MPRINT(EM_DIAGRAM):   label H1x3_2 = 'Hidden: H1x3_=2' ;
996658    +
996659    +      label H1x3_3 = 'Hidden: H1x3_=3' ;
MPRINT(EM_DIAGRAM):   label H1x3_3 = 'Hidden: H1x3_=3' ;
996660    +
996661    +      label H1x3_4 = 'Hidden: H1x3_=4' ;
MPRINT(EM_DIAGRAM):   label H1x3_4 = 'Hidden: H1x3_=4' ;
996662    +
996663    +      label H1x3_5 = 'Hidden: H1x3_=5' ;
MPRINT(EM_DIAGRAM):   label H1x3_5 = 'Hidden: H1x3_=5' ;
996664    +
996665    +      label H1x3_6 = 'Hidden: H1x3_=6' ;
MPRINT(EM_DIAGRAM):   label H1x3_6 = 'Hidden: H1x3_=6' ;
996666    +
996667    +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
996668    +
996669    +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
996670    +
996671    +      label H2x1_3 = 'Hidden: H2x1_=3' ;
MPRINT(EM_DIAGRAM):   label H2x1_3 = 'Hidden: H2x1_=3' ;
996672    +
996673    +      label H2x1_4 = 'Hidden: H2x1_=4' ;
MPRINT(EM_DIAGRAM):   label H2x1_4 = 'Hidden: H2x1_=4' ;
996674    +
996675    +      label H2x1_5 = 'Hidden: H2x1_=5' ;
MPRINT(EM_DIAGRAM):   label H2x1_5 = 'Hidden: H2x1_=5' ;
996676    +
996677    +      label H2x1_6 = 'Hidden: H2x1_=6' ;
MPRINT(EM_DIAGRAM):   label H2x1_6 = 'Hidden: H2x1_=6' ;
996678    +
996679    +      label H2x2_1 = 'Hidden: H2x2_=1' ;
MPRINT(EM_DIAGRAM):   label H2x2_1 = 'Hidden: H2x2_=1' ;
996680    +
996681    +      label H2x2_2 = 'Hidden: H2x2_=2' ;
MPRINT(EM_DIAGRAM):   label H2x2_2 = 'Hidden: H2x2_=2' ;
996682    +
996683    +      label H2x2_3 = 'Hidden: H2x2_=3' ;
MPRINT(EM_DIAGRAM):   label H2x2_3 = 'Hidden: H2x2_=3' ;
996684    +
996685    +      label H2x2_4 = 'Hidden: H2x2_=4' ;
MPRINT(EM_DIAGRAM):   label H2x2_4 = 'Hidden: H2x2_=4' ;
996686    +
996687    +      label H2x2_5 = 'Hidden: H2x2_=5' ;
MPRINT(EM_DIAGRAM):   label H2x2_5 = 'Hidden: H2x2_=5' ;
996688    +
996689    +      label H2x2_6 = 'Hidden: H2x2_=6' ;
MPRINT(EM_DIAGRAM):   label H2x2_6 = 'Hidden: H2x2_=6' ;
996690    +
996691    +      label H3x1_1 = 'Hidden: H3x1_=1' ;
MPRINT(EM_DIAGRAM):   label H3x1_1 = 'Hidden: H3x1_=1' ;
996692    +
996693    +      label H3x1_2 = 'Hidden: H3x1_=2' ;
MPRINT(EM_DIAGRAM):   label H3x1_2 = 'Hidden: H3x1_=2' ;
996694    +
996695    +      label H3x1_3 = 'Hidden: H3x1_=3' ;
MPRINT(EM_DIAGRAM):   label H3x1_3 = 'Hidden: H3x1_=3' ;
996696    +
996697    +      label H3x1_4 = 'Hidden: H3x1_=4' ;
MPRINT(EM_DIAGRAM):   label H3x1_4 = 'Hidden: H3x1_=4' ;
996698    +
996699    +      label H3x1_5 = 'Hidden: H3x1_=5' ;
MPRINT(EM_DIAGRAM):   label H3x1_5 = 'Hidden: H3x1_=5' ;
996700    +
996701    +      label H3x1_6 = 'Hidden: H3x1_=6' ;
MPRINT(EM_DIAGRAM):   label H3x1_6 = 'Hidden: H3x1_=6' ;
996702    +
996703    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
996704    +
996705    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
996706    +
996707    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
996708    +
996709    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
996710    +
996711    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
996712    +
996713    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
996714    +
996715    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
996716    +
996717    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
996718    +
996719    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
996720    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
996721    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
996722    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
996723    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
996724    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
996725    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
996726    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
996727    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
996728    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
996729    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
996730    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
996731    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
996732    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
996733    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
996734    +end;
MPRINT(EM_DIAGRAM):   end;
996735    +else do;
MPRINT(EM_DIAGRAM):   else do;
996736    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
996737    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
996738    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
996739    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
996740    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
996741    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
996742    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
996743    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
996744    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
996745    +         end;
MPRINT(EM_DIAGRAM):   end;
996746    +         else do;
MPRINT(EM_DIAGRAM):   else do;
996747    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
996748    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
996749    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
996750    +            end;
MPRINT(EM_DIAGRAM):   end;
996751    +         end;
MPRINT(EM_DIAGRAM):   end;
996752    +      end;
MPRINT(EM_DIAGRAM):   end;
996753    +      else do;
MPRINT(EM_DIAGRAM):   else do;
996754    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
996755    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
996756    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
996757    +         end;
MPRINT(EM_DIAGRAM):   end;
996758    +      end;
MPRINT(EM_DIAGRAM):   end;
996759    +   end;
MPRINT(EM_DIAGRAM):   end;
996760    +   else do;
MPRINT(EM_DIAGRAM):   else do;
996761    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
996762    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
996763    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
996764    +      end;
MPRINT(EM_DIAGRAM):   end;
996765    +      else do;
MPRINT(EM_DIAGRAM):   else do;
996766    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
996767    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
996768    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
996769    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
996770    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
996771    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
996772    +         end;
MPRINT(EM_DIAGRAM):   end;
996773    +      end;
MPRINT(EM_DIAGRAM):   end;
996774    +   end;
MPRINT(EM_DIAGRAM):   end;
996775    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
996776    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
996777    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
996778    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
996779    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
996780    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
996781    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
996782    +   end;
MPRINT(EM_DIAGRAM):   end;
996783    +end;
MPRINT(EM_DIAGRAM):   end;
996784    +
996785    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
996786    +*** Checking missing input Interval
996787    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
996788    +
996789    +IF NMISS(
996790    +   AcceptedCmpTotal ,
996791    +   Frq ,
996792    +   Mnt ,
996793    +   MntMeatProducts ,
996794    +   NumCatalogPurchases ,
996795    +   NumDealsPurchases ,
996796    +   NumWebVisitsMonth ,
996797    +   Recency   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Mnt , MntMeatProducts ,
NumCatalogPurchases , NumDealsPurchases , NumWebVisitsMonth , Recency ) THEN DO;
996798    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
996799    +
996800    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
996801    +END;
MPRINT(EM_DIAGRAM):   END;
996802    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
996803    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
996804    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
996805    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
996806    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
996807    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
996808    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
996809    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
996810    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
996811    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
996812    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
996813    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
996814    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
996815    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
996816    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
996817    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
996818    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
996819    +END;
MPRINT(EM_DIAGRAM):   END;
996820    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
996821    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
996822    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
996823    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
996824    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
996825    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
996826    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
996827    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
996828    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
996829    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
996830    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
996831    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
996832    +   ELSE S_NumCatalogPurchases
996833    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
996834    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
996835    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
996836    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
996837    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
996838    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
996839    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
996840    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
996841    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
996842    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
996843    +END;
MPRINT(EM_DIAGRAM):   END;
996844    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
996845    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
996846    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
996847    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
996848    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
996849    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
996850    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
996851    +   H1x1_1  =    -0.67537728004966 * S_AcceptedCmpTotal
996852    +          +     2.81188938311993 * S_Frq  +    -0.48449735677533 * S_Mnt
996853    +          +     2.79168320854924 * S_MntMeatProducts
996854    +          +    -1.09894266401589 * S_NumCatalogPurchases
996855    +          +    -0.32966417347551 * S_NumDealsPurchases
996856    +          +    -0.72195034767343 * S_NumWebVisitsMonth
996857    +          +     1.26300567591683 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.67537728004966 * S_AcceptedCmpTotal + 2.81188938311993 *
S_Frq + -0.48449735677533 * S_Mnt + 2.79168320854924 * S_MntMeatProducts + -1.09894266401589 *
S_NumCatalogPurchases + -0.32966417347551 * S_NumDealsPurchases + -0.72195034767343 *
S_NumWebVisitsMonth + 1.26300567591683 * S_Recency ;
996858    +   H1x1_2  =    -0.10530102616636 * S_AcceptedCmpTotal
996859    +          +    -1.56143940912133 * S_Frq  +    -4.62897774617873 * S_Mnt
996860    +          +     9.02469430152189 * S_MntMeatProducts
996861    +          +     1.42644521887241 * S_NumCatalogPurchases
996862    +          +      0.6475058577302 * S_NumDealsPurchases
996863    +          +     0.08123225110233 * S_NumWebVisitsMonth
996864    +          +    -0.13437822083345 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.10530102616636 * S_AcceptedCmpTotal + -1.56143940912133 *
S_Frq + -4.62897774617873 * S_Mnt + 9.02469430152189 * S_MntMeatProducts + 1.42644521887241 *
S_NumCatalogPurchases + 0.6475058577302 * S_NumDealsPurchases + 0.08123225110233 *
S_NumWebVisitsMonth + -0.13437822083345 * S_Recency ;
996865    +   H1x1_3  =     0.38623415840156 * S_AcceptedCmpTotal
996866    +          +     1.26011321422418 * S_Frq  +     0.93412252767552 * S_Mnt
996867    +          +     5.40567027331821 * S_MntMeatProducts
996868    +          +     0.21404551755506 * S_NumCatalogPurchases
996869    +          +    -3.79184634796332 * S_NumDealsPurchases
996870    +          +     0.64355102802571 * S_NumWebVisitsMonth
996871    +          +     0.95080943397397 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.38623415840156 * S_AcceptedCmpTotal + 1.26011321422418 *
S_Frq + 0.93412252767552 * S_Mnt + 5.40567027331821 * S_MntMeatProducts + 0.21404551755506 *
S_NumCatalogPurchases + -3.79184634796332 * S_NumDealsPurchases + 0.64355102802571 *
S_NumWebVisitsMonth + 0.95080943397397 * S_Recency ;
996872    +   H1x1_4  =    -2.69419226375129 * S_AcceptedCmpTotal
996873    +          +     4.80721116964493 * S_Frq  +     4.56726230244782 * S_Mnt
996874    +          +     2.35287601364019 * S_MntMeatProducts
996875    +          +    -3.27198648531912 * S_NumCatalogPurchases
996876    +          +    -0.16046880718311 * S_NumDealsPurchases
996877    +          +     -3.7025327830273 * S_NumWebVisitsMonth
996878    +          +     5.47829314370286 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -2.69419226375129 * S_AcceptedCmpTotal + 4.80721116964493 *
S_Frq + 4.56726230244782 * S_Mnt + 2.35287601364019 * S_MntMeatProducts + -3.27198648531912 *
S_NumCatalogPurchases + -0.16046880718311 * S_NumDealsPurchases + -3.7025327830273 *
S_NumWebVisitsMonth + 5.47829314370286 * S_Recency ;
996879    +   H1x1_5  =     3.75699631118799 * S_AcceptedCmpTotal
996880    +          +    -1.60236762300853 * S_Frq  +     0.64007421195882 * S_Mnt
996881    +          +     8.39312647460766 * S_MntMeatProducts
996882    +          +     3.07026872536137 * S_NumCatalogPurchases
996883    +          +     2.03045608124213 * S_NumDealsPurchases
996884    +          +     3.86452915398414 * S_NumWebVisitsMonth
996885    +          +    -5.45655790704746 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 3.75699631118799 * S_AcceptedCmpTotal + -1.60236762300853 *
S_Frq + 0.64007421195882 * S_Mnt + 8.39312647460766 * S_MntMeatProducts + 3.07026872536137 *
S_NumCatalogPurchases + 2.03045608124213 * S_NumDealsPurchases + 3.86452915398414 *
S_NumWebVisitsMonth + -5.45655790704746 * S_Recency ;
996886    +   H1x1_1  = H1x1_1  +     0.59959546037733 * Marital_StatusDivorced
996887    +          +     0.14979485299347 * Marital_StatusMarried
996888    +          +    -0.09166445391312 * Marital_StatusSingle
996889    +          +     -0.8898837643688 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.59959546037733 * Marital_StatusDivorced +
0.14979485299347 * Marital_StatusMarried + -0.09166445391312 * Marital_StatusSingle +
-0.8898837643688 * Marital_StatusTogether ;
996890    +   H1x1_2  = H1x1_2  +     0.13516192952275 * Marital_StatusDivorced
996891    +          +      0.1646484112393 * Marital_StatusMarried
996892    +          +     0.01074681811884 * Marital_StatusSingle
996893    +          +    -0.38035258327435 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.13516192952275 * Marital_StatusDivorced +
0.1646484112393 * Marital_StatusMarried + 0.01074681811884 * Marital_StatusSingle +
-0.38035258327435 * Marital_StatusTogether ;
996894    +   H1x1_3  = H1x1_3  +    -6.14970888128598 * Marital_StatusDivorced
996895    +          +    -0.28313626645981 * Marital_StatusMarried
996896    +          +      2.8257446964988 * Marital_StatusSingle
996897    +          +     0.44817043395102 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -6.14970888128598 * Marital_StatusDivorced +
-0.28313626645981 * Marital_StatusMarried + 2.8257446964988 * Marital_StatusSingle +
0.44817043395102 * Marital_StatusTogether ;
996898    +   H1x1_4  = H1x1_4  +     -5.3794018991977 * Marital_StatusDivorced
996899    +          +     3.05775024202559 * Marital_StatusMarried
996900    +          +    -0.23539571945671 * Marital_StatusSingle
996901    +          +     4.66331490520755 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -5.3794018991977 * Marital_StatusDivorced +
3.05775024202559 * Marital_StatusMarried + -0.23539571945671 * Marital_StatusSingle +
4.66331490520755 * Marital_StatusTogether ;
996902    +   H1x1_5  = H1x1_5  +     1.25174944520682 * Marital_StatusDivorced
996903    +          +    -0.48359916542157 * Marital_StatusMarried
996904    +          +    -1.64182316823237 * Marital_StatusSingle
996905    +          +     1.33430611846768 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + 1.25174944520682 * Marital_StatusDivorced +
-0.48359916542157 * Marital_StatusMarried + -1.64182316823237 * Marital_StatusSingle +
1.33430611846768 * Marital_StatusTogether ;
996906    +   H1x1_1  =     4.63389499664507 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 4.63389499664507 + H1x1_1 ;
996907    +   H1x1_2  =     2.11311359057093 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 2.11311359057093 + H1x1_2 ;
996908    +   H1x1_3  =    -0.62083985205654 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.62083985205654 + H1x1_3 ;
996909    +   H1x1_4  =     3.41081693054871 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 3.41081693054871 + H1x1_4 ;
996910    +   H1x1_5  =    -9.34543620991542 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -9.34543620991542 + H1x1_5 ;
996911    +   H1x1_6  = 0;
MPRINT(EM_DIAGRAM):   H1x1_6 = 0;
996912    +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 );
996913    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
996914    +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
996915    +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
996916    +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
996917    +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
996918    +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
996919    +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
996920    +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
996921    +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
996922    +   H1x1_5  = EXP(H1x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_5 = EXP(H1x1_5 - _MAX_);
996923    +   _SUM_ = _SUM_ + H1x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_5 ;
996924    +   H1x1_6  = EXP(H1x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_6 = EXP(H1x1_6 - _MAX_);
996925    +   _SUM_ = _SUM_ + H1x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_6 ;
996926    +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
996927    +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
996928    +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
996929    +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
996930    +   H1x1_5  = H1x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 / _SUM_;
996931    +   H1x1_6  = H1x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 / _SUM_;
996932    +END;
MPRINT(EM_DIAGRAM):   END;
996933    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
996934    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
996935    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
996936    +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
996937    +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
996938    +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
996939    +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
996940    +END;
MPRINT(EM_DIAGRAM):   END;
996941    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
996942    +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
996943    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
996944    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
996945    +   H1x2_1  =     0.75154793671381 * S_AcceptedCmpTotal
996946    +          +     1.16505569462642 * S_Frq  +     -0.8308540177887 * S_Mnt
996947    +          +     0.55999885697493 * S_MntMeatProducts
996948    +          +      0.2225207563207 * S_NumCatalogPurchases
996949    +          +     -1.0233439835205 * S_NumDealsPurchases
996950    +          +    -0.35430585878397 * S_NumWebVisitsMonth
996951    +          +    -1.61097128706343 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.75154793671381 * S_AcceptedCmpTotal + 1.16505569462642 *
S_Frq + -0.8308540177887 * S_Mnt + 0.55999885697493 * S_MntMeatProducts + 0.2225207563207 *
S_NumCatalogPurchases + -1.0233439835205 * S_NumDealsPurchases + -0.35430585878397 *
S_NumWebVisitsMonth + -1.61097128706343 * S_Recency ;
996952    +   H1x2_2  =    -2.67887309413165 * S_AcceptedCmpTotal
996953    +          +    -1.18932806022128 * S_Frq  +    -0.12550289494399 * S_Mnt
996954    +          +    -1.04508919964747 * S_MntMeatProducts
996955    +          +     -0.6758665249546 * S_NumCatalogPurchases
996956    +          +    -0.24215201937497 * S_NumDealsPurchases
996957    +          +    -1.02736823453312 * S_NumWebVisitsMonth
996958    +          +    -2.91942343887972 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -2.67887309413165 * S_AcceptedCmpTotal + -1.18932806022128 *
S_Frq + -0.12550289494399 * S_Mnt + -1.04508919964747 * S_MntMeatProducts + -0.6758665249546 *
S_NumCatalogPurchases + -0.24215201937497 * S_NumDealsPurchases + -1.02736823453312 *
S_NumWebVisitsMonth + -2.91942343887972 * S_Recency ;
996959    +   H1x2_3  =    -1.59525226271453 * S_AcceptedCmpTotal
996960    +          +    -3.01360419340124 * S_Frq  +    -2.42130716453762 * S_Mnt
996961    +          +    -3.97854305593999 * S_MntMeatProducts
996962    +          +    -2.05331728407593 * S_NumCatalogPurchases
996963    +          +    -0.48841403720827 * S_NumDealsPurchases
996964    +          +     0.25411498590567 * S_NumWebVisitsMonth
996965    +          +     2.61356292629829 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -1.59525226271453 * S_AcceptedCmpTotal + -3.01360419340124 *
S_Frq + -2.42130716453762 * S_Mnt + -3.97854305593999 * S_MntMeatProducts + -2.05331728407593
* S_NumCatalogPurchases + -0.48841403720827 * S_NumDealsPurchases + 0.25411498590567 *
S_NumWebVisitsMonth + 2.61356292629829 * S_Recency ;
996966    +   H1x2_4  =    -0.23213568401478 * S_AcceptedCmpTotal
996967    +          +    -0.21547029102909 * S_Frq  +    -3.71365412498023 * S_Mnt
996968    +          +     -0.7071400781557 * S_MntMeatProducts
996969    +          +     1.20780208787296 * S_NumCatalogPurchases
996970    +          +    -0.58152407834402 * S_NumDealsPurchases
996971    +          +     2.15567925539399 * S_NumWebVisitsMonth
996972    +          +     0.04520696731554 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -0.23213568401478 * S_AcceptedCmpTotal + -0.21547029102909 *
S_Frq + -3.71365412498023 * S_Mnt + -0.7071400781557 * S_MntMeatProducts + 1.20780208787296 *
S_NumCatalogPurchases + -0.58152407834402 * S_NumDealsPurchases + 2.15567925539399 *
S_NumWebVisitsMonth + 0.04520696731554 * S_Recency ;
996973    +   H1x2_5  =    -0.77921338806706 * S_AcceptedCmpTotal
996974    +          +    -1.01600283852312 * S_Frq  +     0.74495825285389 * S_Mnt
996975    +          +    -1.07023271439686 * S_MntMeatProducts
996976    +          +     0.31952847185507 * S_NumCatalogPurchases
996977    +          +     0.97232557455358 * S_NumDealsPurchases
996978    +          +     1.40227284681788 * S_NumWebVisitsMonth
996979    +          +    -2.63740913159308 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -0.77921338806706 * S_AcceptedCmpTotal + -1.01600283852312 *
S_Frq + 0.74495825285389 * S_Mnt + -1.07023271439686 * S_MntMeatProducts + 0.31952847185507 *
S_NumCatalogPurchases + 0.97232557455358 * S_NumDealsPurchases + 1.40227284681788 *
S_NumWebVisitsMonth + -2.63740913159308 * S_Recency ;
996980    +   H1x2_1  = H1x2_1  +     0.27635646709847 * Marital_StatusDivorced
996981    +          +    -1.54860787754125 * Marital_StatusMarried
996982    +          +     3.07164083530731 * Marital_StatusSingle
996983    +          +    -0.82580381126768 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 0.27635646709847 * Marital_StatusDivorced +
-1.54860787754125 * Marital_StatusMarried + 3.07164083530731 * Marital_StatusSingle +
-0.82580381126768 * Marital_StatusTogether ;
996984    +   H1x2_2  = H1x2_2  +     0.41647124050716 * Marital_StatusDivorced
996985    +          +     1.93404037878036 * Marital_StatusMarried
996986    +          +    -1.33159061927866 * Marital_StatusSingle
996987    +          +    -1.07762979483959 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 0.41647124050716 * Marital_StatusDivorced +
1.93404037878036 * Marital_StatusMarried + -1.33159061927866 * Marital_StatusSingle +
-1.07762979483959 * Marital_StatusTogether ;
996988    +   H1x2_3  = H1x2_3  +     1.18723200575444 * Marital_StatusDivorced
996989    +          +    -1.20603561095549 * Marital_StatusMarried
996990    +          +     1.40927693179184 * Marital_StatusSingle
996991    +          +    -0.49407691558139 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 1.18723200575444 * Marital_StatusDivorced +
-1.20603561095549 * Marital_StatusMarried + 1.40927693179184 * Marital_StatusSingle +
-0.49407691558139 * Marital_StatusTogether ;
996992    +   H1x2_4  = H1x2_4  +     0.69596798616284 * Marital_StatusDivorced
996993    +          +     -0.1442863204197 * Marital_StatusMarried
996994    +          +     0.60523055771734 * Marital_StatusSingle
996995    +          +     0.73192299984342 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 0.69596798616284 * Marital_StatusDivorced +
-0.1442863204197 * Marital_StatusMarried + 0.60523055771734 * Marital_StatusSingle +
0.73192299984342 * Marital_StatusTogether ;
996996    +   H1x2_5  = H1x2_5  +      0.7891943859827 * Marital_StatusDivorced
996997    +          +     0.09024082077945 * Marital_StatusMarried
996998    +          +     0.46315219527454 * Marital_StatusSingle
996999    +          +    -0.88863370904771 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 0.7891943859827 * Marital_StatusDivorced +
0.09024082077945 * Marital_StatusMarried + 0.46315219527454 * Marital_StatusSingle +
-0.88863370904771 * Marital_StatusTogether ;
997000    +   H1x2_1  =    -1.73041096602206 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -1.73041096602206 + H1x2_1 ;
997001    +   H1x2_2  =     -0.9244515570647 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -0.9244515570647 + H1x2_2 ;
997002    +   H1x2_3  =     0.42257482856224 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = 0.42257482856224 + H1x2_3 ;
997003    +   H1x2_4  =    -1.17368520710394 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -1.17368520710394 + H1x2_4 ;
997004    +   H1x2_5  =    -0.96945494530554 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -0.96945494530554 + H1x2_5 ;
997005    +   H1x2_6  = 0;
MPRINT(EM_DIAGRAM):   H1x2_6 = 0;
997006    +   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 );
997007    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
997008    +   H1x2_1  = EXP(H1x2_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_1 = EXP(H1x2_1 - _MAX_);
997009    +   _SUM_ = _SUM_ + H1x2_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_1 ;
997010    +   H1x2_2  = EXP(H1x2_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_2 = EXP(H1x2_2 - _MAX_);
997011    +   _SUM_ = _SUM_ + H1x2_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_2 ;
997012    +   H1x2_3  = EXP(H1x2_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_3 = EXP(H1x2_3 - _MAX_);
997013    +   _SUM_ = _SUM_ + H1x2_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_3 ;
997014    +   H1x2_4  = EXP(H1x2_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_4 = EXP(H1x2_4 - _MAX_);
997015    +   _SUM_ = _SUM_ + H1x2_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_4 ;
997016    +   H1x2_5  = EXP(H1x2_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_5 = EXP(H1x2_5 - _MAX_);
997017    +   _SUM_ = _SUM_ + H1x2_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_5 ;
997018    +   H1x2_6  = EXP(H1x2_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_6 = EXP(H1x2_6 - _MAX_);
997019    +   _SUM_ = _SUM_ + H1x2_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_6 ;
997020    +   H1x2_1  = H1x2_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 / _SUM_;
997021    +   H1x2_2  = H1x2_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 / _SUM_;
997022    +   H1x2_3  = H1x2_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 / _SUM_;
997023    +   H1x2_4  = H1x2_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 / _SUM_;
997024    +   H1x2_5  = H1x2_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 / _SUM_;
997025    +   H1x2_6  = H1x2_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 / _SUM_;
997026    +END;
MPRINT(EM_DIAGRAM):   END;
997027    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
997028    +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
997029    +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
997030    +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
997031    +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
997032    +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
997033    +   H1x2_6  = .;
MPRINT(EM_DIAGRAM):   H1x2_6 = .;
997034    +END;
MPRINT(EM_DIAGRAM):   END;
997035    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
997036    +*** Writing the Node H1x3_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x3_ ;
997037    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
997038    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
997039    +   H1x3_1  =     0.60593493975552 * S_AcceptedCmpTotal
997040    +          +    -1.29329226371919 * S_Frq  +      0.9015843457146 * S_Mnt
997041    +          +    -1.02461177883701 * S_MntMeatProducts
997042    +          +     0.58245198640098 * S_NumCatalogPurchases
997043    +          +    -0.23780276328844 * S_NumDealsPurchases
997044    +          +     1.28202459687231 * S_NumWebVisitsMonth
997045    +          +     0.93713351024897 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 0.60593493975552 * S_AcceptedCmpTotal + -1.29329226371919 *
S_Frq + 0.9015843457146 * S_Mnt + -1.02461177883701 * S_MntMeatProducts + 0.58245198640098 *
S_NumCatalogPurchases + -0.23780276328844 * S_NumDealsPurchases + 1.28202459687231 *
S_NumWebVisitsMonth + 0.93713351024897 * S_Recency ;
997046    +   H1x3_2  =    -1.08797424998886 * S_AcceptedCmpTotal
997047    +          +     0.71996006602625 * S_Frq  +     0.26461282542951 * S_Mnt
997048    +          +     0.13875330330852 * S_MntMeatProducts
997049    +          +    -0.22996544763814 * S_NumCatalogPurchases
997050    +          +    -0.36599639965399 * S_NumDealsPurchases
997051    +          +     1.99081506581768 * S_NumWebVisitsMonth
997052    +          +    -0.27280347287018 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x3_2 = -1.08797424998886 * S_AcceptedCmpTotal + 0.71996006602625 *
S_Frq + 0.26461282542951 * S_Mnt + 0.13875330330852 * S_MntMeatProducts + -0.22996544763814 *
S_NumCatalogPurchases + -0.36599639965399 * S_NumDealsPurchases + 1.99081506581768 *
S_NumWebVisitsMonth + -0.27280347287018 * S_Recency ;
997053    +   H1x3_3  =     -0.3446411379442 * S_AcceptedCmpTotal
997054    +          +    -0.90527024017686 * S_Frq  +    -0.09374789575642 * S_Mnt
997055    +          +     0.94472031892058 * S_MntMeatProducts
997056    +          +     0.27511909854912 * S_NumCatalogPurchases
997057    +          +    -0.55526545857693 * S_NumDealsPurchases
997058    +          +    -0.61544688091302 * S_NumWebVisitsMonth
997059    +          +     1.92722528696298 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x3_3 = -0.3446411379442 * S_AcceptedCmpTotal + -0.90527024017686 *
S_Frq + -0.09374789575642 * S_Mnt + 0.94472031892058 * S_MntMeatProducts + 0.27511909854912 *
S_NumCatalogPurchases + -0.55526545857693 * S_NumDealsPurchases + -0.61544688091302 *
S_NumWebVisitsMonth + 1.92722528696298 * S_Recency ;
997060    +   H1x3_4  =     0.14447197723193 * S_AcceptedCmpTotal
997061    +          +     0.58502643519667 * S_Frq  +    -0.22179847560956 * S_Mnt
997062    +          +     1.61403840093612 * S_MntMeatProducts
997063    +          +    -0.34382576245292 * S_NumCatalogPurchases
997064    +          +     0.70213159483637 * S_NumDealsPurchases
997065    +          +    -0.39731145628175 * S_NumWebVisitsMonth
997066    +          +     0.76292573150858 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x3_4 = 0.14447197723193 * S_AcceptedCmpTotal + 0.58502643519667 *
S_Frq + -0.22179847560956 * S_Mnt + 1.61403840093612 * S_MntMeatProducts + -0.34382576245292 *
S_NumCatalogPurchases + 0.70213159483637 * S_NumDealsPurchases + -0.39731145628175 *
S_NumWebVisitsMonth + 0.76292573150858 * S_Recency ;
997067    +   H1x3_5  =     1.12424583212244 * S_AcceptedCmpTotal
997068    +          +     1.23224599851617 * S_Frq  +     0.66506653339362 * S_Mnt
997069    +          +    -0.33974847531229 * S_MntMeatProducts
997070    +          +     1.74350962571519 * S_NumCatalogPurchases
997071    +          +     0.41098583446208 * S_NumDealsPurchases
997072    +          +    -0.66305298743409 * S_NumWebVisitsMonth
997073    +          +    -1.08660974929691 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x3_5 = 1.12424583212244 * S_AcceptedCmpTotal + 1.23224599851617 *
S_Frq + 0.66506653339362 * S_Mnt + -0.33974847531229 * S_MntMeatProducts + 1.74350962571519 *
S_NumCatalogPurchases + 0.41098583446208 * S_NumDealsPurchases + -0.66305298743409 *
S_NumWebVisitsMonth + -1.08660974929691 * S_Recency ;
997074    +   H1x3_1  = H1x3_1  +     0.54739694564163 * Marital_StatusDivorced
997075    +          +    -0.29510060772746 * Marital_StatusMarried
997076    +          +     1.74124353401891 * Marital_StatusSingle
997077    +          +     0.09719439743973 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + 0.54739694564163 * Marital_StatusDivorced +
-0.29510060772746 * Marital_StatusMarried + 1.74124353401891 * Marital_StatusSingle +
0.09719439743973 * Marital_StatusTogether ;
997078    +   H1x3_2  = H1x3_2  +     0.45031904962773 * Marital_StatusDivorced
997079    +          +    -0.61203463567014 * Marital_StatusMarried
997080    +          +     1.95705767804118 * Marital_StatusSingle
997081    +          +     0.33872926096104 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 + 0.45031904962773 * Marital_StatusDivorced +
-0.61203463567014 * Marital_StatusMarried + 1.95705767804118 * Marital_StatusSingle +
0.33872926096104 * Marital_StatusTogether ;
997082    +   H1x3_3  = H1x3_3  +     1.36802060586393 * Marital_StatusDivorced
997083    +          +      1.7151906515185 * Marital_StatusMarried
997084    +          +     0.70376524929742 * Marital_StatusSingle
997085    +          +    -1.29423542782048 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_3 = H1x3_3 + 1.36802060586393 * Marital_StatusDivorced +
1.7151906515185 * Marital_StatusMarried + 0.70376524929742 * Marital_StatusSingle +
-1.29423542782048 * Marital_StatusTogether ;
997086    +   H1x3_4  = H1x3_4  +      1.5350754313919 * Marital_StatusDivorced
997087    +          +    -1.27088213578872 * Marital_StatusMarried
997088    +          +    -0.91253966593459 * Marital_StatusSingle
997089    +          +    -1.63570965011409 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_4 = H1x3_4 + 1.5350754313919 * Marital_StatusDivorced +
-1.27088213578872 * Marital_StatusMarried + -0.91253966593459 * Marital_StatusSingle +
-1.63570965011409 * Marital_StatusTogether ;
997090    +   H1x3_5  = H1x3_5  +    -1.18462010911271 * Marital_StatusDivorced
997091    +          +     -0.5308059771847 * Marital_StatusMarried
997092    +          +    -0.11208078645904 * Marital_StatusSingle
997093    +          +     0.12123408245196 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_5 = H1x3_5 + -1.18462010911271 * Marital_StatusDivorced +
-0.5308059771847 * Marital_StatusMarried + -0.11208078645904 * Marital_StatusSingle +
0.12123408245196 * Marital_StatusTogether ;
997094    +   H1x3_1  =    -0.26014877330113 + H1x3_1 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = -0.26014877330113 + H1x3_1 ;
997095    +   H1x3_2  =     1.39405484419099 + H1x3_2 ;
MPRINT(EM_DIAGRAM):   H1x3_2 = 1.39405484419099 + H1x3_2 ;
997096    +   H1x3_3  =       0.062236253986 + H1x3_3 ;
MPRINT(EM_DIAGRAM):   H1x3_3 = 0.062236253986 + H1x3_3 ;
997097    +   H1x3_4  =    -1.27980815366792 + H1x3_4 ;
MPRINT(EM_DIAGRAM):   H1x3_4 = -1.27980815366792 + H1x3_4 ;
997098    +   H1x3_5  =     -1.1798994280447 + H1x3_5 ;
MPRINT(EM_DIAGRAM):   H1x3_5 = -1.1798994280447 + H1x3_5 ;
997099    +   H1x3_6  = 0;
MPRINT(EM_DIAGRAM):   H1x3_6 = 0;
997100    +   _MAX_ = MAX (H1x3_1 , H1x3_2 , H1x3_3 , H1x3_4 , H1x3_5 , H1x3_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x3_1 , H1x3_2 , H1x3_3 , H1x3_4 , H1x3_5 , H1x3_6 );
997101    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
997102    +   H1x3_1  = EXP(H1x3_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_1 = EXP(H1x3_1 - _MAX_);
997103    +   _SUM_ = _SUM_ + H1x3_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_1 ;
997104    +   H1x3_2  = EXP(H1x3_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_2 = EXP(H1x3_2 - _MAX_);
997105    +   _SUM_ = _SUM_ + H1x3_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_2 ;
997106    +   H1x3_3  = EXP(H1x3_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_3 = EXP(H1x3_3 - _MAX_);
997107    +   _SUM_ = _SUM_ + H1x3_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_3 ;
997108    +   H1x3_4  = EXP(H1x3_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_4 = EXP(H1x3_4 - _MAX_);
997109    +   _SUM_ = _SUM_ + H1x3_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_4 ;
997110    +   H1x3_5  = EXP(H1x3_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_5 = EXP(H1x3_5 - _MAX_);
997111    +   _SUM_ = _SUM_ + H1x3_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_5 ;
997112    +   H1x3_6  = EXP(H1x3_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_6 = EXP(H1x3_6 - _MAX_);
997113    +   _SUM_ = _SUM_ + H1x3_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_6 ;
997114    +   H1x3_1  = H1x3_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 / _SUM_;
997115    +   H1x3_2  = H1x3_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 / _SUM_;
997116    +   H1x3_3  = H1x3_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_3 = H1x3_3 / _SUM_;
997117    +   H1x3_4  = H1x3_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_4 = H1x3_4 / _SUM_;
997118    +   H1x3_5  = H1x3_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_5 = H1x3_5 / _SUM_;
997119    +   H1x3_6  = H1x3_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_6 = H1x3_6 / _SUM_;
997120    +END;
MPRINT(EM_DIAGRAM):   END;
997121    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
997122    +   H1x3_1  = .;
MPRINT(EM_DIAGRAM):   H1x3_1 = .;
997123    +   H1x3_2  = .;
MPRINT(EM_DIAGRAM):   H1x3_2 = .;
997124    +   H1x3_3  = .;
MPRINT(EM_DIAGRAM):   H1x3_3 = .;
997125    +   H1x3_4  = .;
MPRINT(EM_DIAGRAM):   H1x3_4 = .;
997126    +   H1x3_5  = .;
MPRINT(EM_DIAGRAM):   H1x3_5 = .;
997127    +   H1x3_6  = .;
MPRINT(EM_DIAGRAM):   H1x3_6 = .;
997128    +END;
MPRINT(EM_DIAGRAM):   END;
997129    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
997130    +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
997131    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
997132    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
997133    +   H2x1_1  =     3.99029808661292 * H1x1_1  +    -3.83684783950239 * H1x1_2
997134    +          +    -2.41319598667027 * H1x1_3  +     2.06742099113284 * H1x1_4
997135    +          +    -2.36394302227369 * H1x1_5  +     3.54247817086581 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 3.99029808661292 * H1x1_1 + -3.83684783950239 * H1x1_2 +
-2.41319598667027 * H1x1_3 + 2.06742099113284 * H1x1_4 + -2.36394302227369 * H1x1_5 +
3.54247817086581 * H1x1_6 ;
997136    +   H2x1_2  =     -2.0723583712808 * H1x1_1  +     1.12235090404628 * H1x1_2
997137    +          +    -0.03290243005002 * H1x1_3  +    -0.06417927223452 * H1x1_4
997138    +          +    -0.34539694059136 * H1x1_5  +    -0.52107667797315 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -2.0723583712808 * H1x1_1 + 1.12235090404628 * H1x1_2 +
-0.03290243005002 * H1x1_3 + -0.06417927223452 * H1x1_4 + -0.34539694059136 * H1x1_5 +
-0.52107667797315 * H1x1_6 ;
997139    +   H2x1_3  =     1.49450378696022 * H1x1_1  +      -2.468244574983 * H1x1_2
997140    +          +    -0.36343212796601 * H1x1_3  +      1.4169785905238 * H1x1_4
997141    +          +    -1.80253819167441 * H1x1_5  +     0.60012496024445 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = 1.49450378696022 * H1x1_1 + -2.468244574983 * H1x1_2 +
-0.36343212796601 * H1x1_3 + 1.4169785905238 * H1x1_4 + -1.80253819167441 * H1x1_5 +
0.60012496024445 * H1x1_6 ;
997142    +   H2x1_4  =     4.08181488615859 * H1x1_1  +    -4.15992879198886 * H1x1_2
997143    +          +    -2.19496884111483 * H1x1_3  +     3.11143094120583 * H1x1_4
997144    +          +    -3.40405639905396 * H1x1_5  +     2.02399938887542 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 4.08181488615859 * H1x1_1 + -4.15992879198886 * H1x1_2 +
-2.19496884111483 * H1x1_3 + 3.11143094120583 * H1x1_4 + -3.40405639905396 * H1x1_5 +
2.02399938887542 * H1x1_6 ;
997145    +   H2x1_5  =    -2.80696695717904 * H1x1_1  +     3.69857556154733 * H1x1_2
997146    +          +     1.61258939701991 * H1x1_3  +    -0.34320433710838 * H1x1_4
997147    +          +     2.41467598917752 * H1x1_5  +    -4.36781665394854 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = -2.80696695717904 * H1x1_1 + 3.69857556154733 * H1x1_2 +
1.61258939701991 * H1x1_3 + -0.34320433710838 * H1x1_4 + 2.41467598917752 * H1x1_5 +
-4.36781665394854 * H1x1_6 ;
997148    +   H2x1_6  =     1.17835620997236 * H1x1_1  +     1.12816318935432 * H1x1_2
997149    +          +     1.70095032323284 * H1x1_3  +     0.81564117008927 * H1x1_4
997150    +          +     1.08987549759927 * H1x1_5  +    -0.71801946066256 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = 1.17835620997236 * H1x1_1 + 1.12816318935432 * H1x1_2 +
1.70095032323284 * H1x1_3 + 0.81564117008927 * H1x1_4 + 1.08987549759927 * H1x1_5 +
-0.71801946066256 * H1x1_6 ;
997151    +   H2x1_1  = H2x1_1  +     -1.2826842607194 * H1x2_1
997152    +          +     2.22412584447126 * H1x2_2  +     0.72628922978475 * H1x2_3
997153    +          +    -3.95557982334969 * H1x2_4  +    -2.04105313525341 * H1x2_5
997154    +          +     2.04509722582983 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -1.2826842607194 * H1x2_1 + 2.22412584447126 * H1x2_2
+ 0.72628922978475 * H1x2_3 + -3.95557982334969 * H1x2_4 + -2.04105313525341 * H1x2_5 +
2.04509722582983 * H1x2_6 ;
997155    +   H2x1_2  = H2x1_2  +     0.49261020621896 * H1x2_1
997156    +          +    -0.93299086546719 * H1x2_2  +     0.26477710017311 * H1x2_3
997157    +          +     1.09581866123251 * H1x2_4  +    -0.46857965033394 * H1x2_5
997158    +          +    -0.58594558422322 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + 0.49261020621896 * H1x2_1 + -0.93299086546719 * H1x2_2
+ 0.26477710017311 * H1x2_3 + 1.09581866123251 * H1x2_4 + -0.46857965033394 * H1x2_5 +
-0.58594558422322 * H1x2_6 ;
997159    +   H2x1_3  = H2x1_3  +    -0.65407007731655 * H1x2_1
997160    +          +     1.01682664175846 * H1x2_2  +     1.17960401469824 * H1x2_3
997161    +          +    -0.57751066508002 * H1x2_4  +     0.53760419760268 * H1x2_5
997162    +          +     0.11690916040928 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + -0.65407007731655 * H1x2_1 + 1.01682664175846 * H1x2_2
+ 1.17960401469824 * H1x2_3 + -0.57751066508002 * H1x2_4 + 0.53760419760268 * H1x2_5 +
0.11690916040928 * H1x2_6 ;
997163    +   H2x1_4  = H2x1_4  +    -1.88745579191294 * H1x2_1
997164    +          +     0.08794337871579 * H1x2_2  +     1.00647337881564 * H1x2_3
997165    +          +     0.02010547776794 * H1x2_4  +     -0.9674279317507 * H1x2_5
997166    +          +     2.96934196494413 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + -1.88745579191294 * H1x2_1 + 0.08794337871579 * H1x2_2
+ 1.00647337881564 * H1x2_3 + 0.02010547776794 * H1x2_4 + -0.9674279317507 * H1x2_5 +
2.96934196494413 * H1x2_6 ;
997167    +   H2x1_5  = H2x1_5  +      1.2829064187123 * H1x2_1
997168    +          +    -1.00339413616366 * H1x2_2  +     0.80005613751846 * H1x2_3
997169    +          +     1.89259049343074 * H1x2_4  +     0.60916287215789 * H1x2_5
997170    +          +    -2.39364002282682 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + 1.2829064187123 * H1x2_1 + -1.00339413616366 * H1x2_2
+ 0.80005613751846 * H1x2_3 + 1.89259049343074 * H1x2_4 + 0.60916287215789 * H1x2_5 +
-2.39364002282682 * H1x2_6 ;
997171    +   H2x1_6  = H2x1_6  +    -0.81495808949076 * H1x2_1
997172    +          +    -0.00823496050906 * H1x2_2  +     0.66082398024174 * H1x2_3
997173    +          +     1.06065684801326 * H1x2_4  +    -1.16933111622346 * H1x2_5
997174    +          +    -0.91996717495653 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 + -0.81495808949076 * H1x2_1 + -0.00823496050906 *
H1x2_2 + 0.66082398024174 * H1x2_3 + 1.06065684801326 * H1x2_4 + -1.16933111622346 * H1x2_5 +
-0.91996717495653 * H1x2_6 ;
997175    +   H2x1_1  = H2x1_1  +     -0.6489804084947 * H1x3_1
997176    +          +    -0.44608682782132 * H1x3_2  +    -0.52631519220433 * H1x3_3
997177    +          +     0.05973897946073 * H1x3_4  +     0.44587517212447 * H1x3_5
997178    +          +     0.53167866343669 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -0.6489804084947 * H1x3_1 + -0.44608682782132 * H1x3_2
+ -0.52631519220433 * H1x3_3 + 0.05973897946073 * H1x3_4 + 0.44587517212447 * H1x3_5 +
0.53167866343669 * H1x3_6 ;
997179    +   H2x1_2  = H2x1_2  +     0.24566122981429 * H1x3_1
997180    +          +    -0.41402912962362 * H1x3_2  +      2.0594253556608 * H1x3_3
997181    +          +    -0.58320740989612 * H1x3_4  +    -2.08321797810741 * H1x3_5
997182    +          +     0.09325988094727 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + 0.24566122981429 * H1x3_1 + -0.41402912962362 * H1x3_2
+ 2.0594253556608 * H1x3_3 + -0.58320740989612 * H1x3_4 + -2.08321797810741 * H1x3_5 +
0.09325988094727 * H1x3_6 ;
997183    +   H2x1_3  = H2x1_3  +    -0.30386162033576 * H1x3_1
997184    +          +    -0.39149635061779 * H1x3_2  +    -1.24745656988432 * H1x3_3
997185    +          +    -0.74308961556897 * H1x3_4  +    -0.52424837897845 * H1x3_5
997186    +          +    -0.43722126116548 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + -0.30386162033576 * H1x3_1 + -0.39149635061779 *
H1x3_2 + -1.24745656988432 * H1x3_3 + -0.74308961556897 * H1x3_4 + -0.52424837897845 * H1x3_5
+ -0.43722126116548 * H1x3_6 ;
997187    +   H2x1_4  = H2x1_4  +    -1.17147905515311 * H1x3_1
997188    +          +     0.52572462392428 * H1x3_2  +     0.00378456310616 * H1x3_3
997189    +          +    -0.02141108534986 * H1x3_4  +     0.66609276044861 * H1x3_5
997190    +          +     1.49998370890459 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + -1.17147905515311 * H1x3_1 + 0.52572462392428 * H1x3_2
+ 0.00378456310616 * H1x3_3 + -0.02141108534986 * H1x3_4 + 0.66609276044861 * H1x3_5 +
1.49998370890459 * H1x3_6 ;
997191    +   H2x1_5  = H2x1_5  +     0.91101541301155 * H1x3_1
997192    +          +    -1.16594573895683 * H1x3_2  +     0.19997446137786 * H1x3_3
997193    +          +    -0.75943200735258 * H1x3_4  +    -1.58620169109633 * H1x3_5
997194    +          +    -0.30128378921356 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + 0.91101541301155 * H1x3_1 + -1.16594573895683 * H1x3_2
+ 0.19997446137786 * H1x3_3 + -0.75943200735258 * H1x3_4 + -1.58620169109633 * H1x3_5 +
-0.30128378921356 * H1x3_6 ;
997195    +   H2x1_6  = H2x1_6  +     1.75854843594447 * H1x3_1
997196    +          +     0.30319854862296 * H1x3_2  +    -0.73946432700618 * H1x3_3
997197    +          +     1.37468838558857 * H1x3_4  +    -0.00997395846467 * H1x3_5
997198    +          +    -0.19152232249307 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 + 1.75854843594447 * H1x3_1 + 0.30319854862296 * H1x3_2
+ -0.73946432700618 * H1x3_3 + 1.37468838558857 * H1x3_4 + -0.00997395846467 * H1x3_5 +
-0.19152232249307 * H1x3_6 ;
997199    +   H2x1_1  =     0.45481579395551 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 0.45481579395551 + H2x1_1 ;
997200    +   H2x1_2  =    -2.37666191889476 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -2.37666191889476 + H2x1_2 ;
997201    +   H2x1_3  =    -0.00303747786799 + H2x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -0.00303747786799 + H2x1_3 ;
997202    +   H2x1_4  =     0.00817665450619 + H2x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 0.00817665450619 + H2x1_4 ;
997203    +   H2x1_5  =    -0.26930716006201 + H2x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = -0.26930716006201 + H2x1_5 ;
997204    +   H2x1_6  =    -1.62147466604007 + H2x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = -1.62147466604007 + H2x1_6 ;
997205    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
997206    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
997207    +   H2x1_1  = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
997208    +   H2x1_2  = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
997209    +   H2x1_3  = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_3 = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
997210    +   H2x1_4  = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_4 = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
997211    +   H2x1_5  = 1.0 / (1.0 + EXP(MIN( - H2x1_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_5 = 1.0 / (1.0 + EXP(MIN( - H2x1_5 , _EXP_BAR)));
997212    +   H2x1_6  = 1.0 / (1.0 + EXP(MIN( - H2x1_6 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_6 = 1.0 / (1.0 + EXP(MIN( - H2x1_6 , _EXP_BAR)));
997213    +END;
MPRINT(EM_DIAGRAM):   END;
997214    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
997215    +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
997216    +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
997217    +   H2x1_3  = .;
MPRINT(EM_DIAGRAM):   H2x1_3 = .;
997218    +   H2x1_4  = .;
MPRINT(EM_DIAGRAM):   H2x1_4 = .;
997219    +   H2x1_5  = .;
MPRINT(EM_DIAGRAM):   H2x1_5 = .;
997220    +   H2x1_6  = .;
MPRINT(EM_DIAGRAM):   H2x1_6 = .;
997221    +END;
MPRINT(EM_DIAGRAM):   END;
997222    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
997223    +*** Writing the Node H2x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x2_ ;
997224    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
997225    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
997226    +   H2x2_1  =     0.00129497064463 * H1x1_1  +    -1.04968224667608 * H1x1_2
997227    +          +    -1.32377424983581 * H1x1_3  +    -0.11361581517247 * H1x1_4
997228    +          +    -0.37590426822975 * H1x1_5  +    -1.19299469136178 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = 0.00129497064463 * H1x1_1 + -1.04968224667608 * H1x1_2 +
-1.32377424983581 * H1x1_3 + -0.11361581517247 * H1x1_4 + -0.37590426822975 * H1x1_5 +
-1.19299469136178 * H1x1_6 ;
997229    +   H2x2_2  =    -1.54715956973408 * H1x1_1  +      0.1149804500896 * H1x1_2
997230    +          +    -0.31622478778172 * H1x1_3  +     0.19815372068281 * H1x1_4
997231    +          +     1.54570900690762 * H1x1_5  +    -0.23243316190231 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = -1.54715956973408 * H1x1_1 + 0.1149804500896 * H1x1_2 +
-0.31622478778172 * H1x1_3 + 0.19815372068281 * H1x1_4 + 1.54570900690762 * H1x1_5 +
-0.23243316190231 * H1x1_6 ;
997232    +   H2x2_3  =    -1.69410933303344 * H1x1_1  +    -0.10842772109927 * H1x1_2
997233    +          +     0.73648318250282 * H1x1_3  +     0.68553115685533 * H1x1_4
997234    +          +    -0.47234449931244 * H1x1_5  +     1.14739016222951 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = -1.69410933303344 * H1x1_1 + -0.10842772109927 * H1x1_2 +
0.73648318250282 * H1x1_3 + 0.68553115685533 * H1x1_4 + -0.47234449931244 * H1x1_5 +
1.14739016222951 * H1x1_6 ;
997235    +   H2x2_4  =     0.36443547307479 * H1x1_1  +     0.49919653848293 * H1x1_2
997236    +          +     1.98377926340404 * H1x1_3  +    -0.55638731785874 * H1x1_4
997237    +          +     0.51877040984242 * H1x1_5  +     0.69001883670374 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = 0.36443547307479 * H1x1_1 + 0.49919653848293 * H1x1_2 +
1.98377926340404 * H1x1_3 + -0.55638731785874 * H1x1_4 + 0.51877040984242 * H1x1_5 +
0.69001883670374 * H1x1_6 ;
997238    +   H2x2_5  =     0.15664903927836 * H1x1_1  +     0.89801997414549 * H1x1_2
997239    +          +     0.04506031069937 * H1x1_3  +      1.4896420490685 * H1x1_4
997240    +          +     0.98365163988804 * H1x1_5  +     1.62881757963203 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x2_5 = 0.15664903927836 * H1x1_1 + 0.89801997414549 * H1x1_2 +
0.04506031069937 * H1x1_3 + 1.4896420490685 * H1x1_4 + 0.98365163988804 * H1x1_5 +
1.62881757963203 * H1x1_6 ;
997241    +   H2x2_6  =    -0.88991913364633 * H1x1_1  +     1.86575129972351 * H1x1_2
997242    +          +     0.76328070558448 * H1x1_3  +     0.63606778895588 * H1x1_4
997243    +          +    -1.11359575595575 * H1x1_5  +     1.10728303240553 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x2_6 = -0.88991913364633 * H1x1_1 + 1.86575129972351 * H1x1_2 +
0.76328070558448 * H1x1_3 + 0.63606778895588 * H1x1_4 + -1.11359575595575 * H1x1_5 +
1.10728303240553 * H1x1_6 ;
997244    +   H2x2_1  = H2x2_1  +     -1.7548673730828 * H1x2_1
997245    +          +     1.87853034076717 * H1x2_2  +     0.85492889927862 * H1x2_3
997246    +          +     2.26726704170325 * H1x2_4  +       0.268534161133 * H1x2_5
997247    +          +     1.21824749182936 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + -1.7548673730828 * H1x2_1 + 1.87853034076717 * H1x2_2
+ 0.85492889927862 * H1x2_3 + 2.26726704170325 * H1x2_4 + 0.268534161133 * H1x2_5 +
1.21824749182936 * H1x2_6 ;
997248    +   H2x2_2  = H2x2_2  +    -0.17868178338793 * H1x2_1
997249    +          +     1.40599171642169 * H1x2_2  +      1.3483797762751 * H1x2_3
997250    +          +    -0.89621237430335 * H1x2_4  +     0.47933617934751 * H1x2_5
997251    +          +    -0.70127450180732 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 + -0.17868178338793 * H1x2_1 + 1.40599171642169 * H1x2_2
+ 1.3483797762751 * H1x2_3 + -0.89621237430335 * H1x2_4 + 0.47933617934751 * H1x2_5 +
-0.70127450180732 * H1x2_6 ;
997252    +   H2x2_3  = H2x2_3  +     0.42928211521549 * H1x2_1
997253    +          +     0.12704381906566 * H1x2_2  +    -0.80979451254833 * H1x2_3
997254    +          +     -0.6754098317508 * H1x2_4  +     1.10456495865489 * H1x2_5
997255    +          +      0.1757517587226 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = H2x2_3 + 0.42928211521549 * H1x2_1 + 0.12704381906566 * H1x2_2
+ -0.80979451254833 * H1x2_3 + -0.6754098317508 * H1x2_4 + 1.10456495865489 * H1x2_5 +
0.1757517587226 * H1x2_6 ;
997256    +   H2x2_4  = H2x2_4  +    -1.58081641854024 * H1x2_1
997257    +          +     0.41044457304901 * H1x2_2  +      0.1555052899648 * H1x2_3
997258    +          +     1.44452911239916 * H1x2_4  +     0.51745105090469 * H1x2_5
997259    +          +      0.8693099398328 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = H2x2_4 + -1.58081641854024 * H1x2_1 + 0.41044457304901 * H1x2_2
+ 0.1555052899648 * H1x2_3 + 1.44452911239916 * H1x2_4 + 0.51745105090469 * H1x2_5 +
0.8693099398328 * H1x2_6 ;
997260    +   H2x2_5  = H2x2_5  +     1.04509064360988 * H1x2_1
997261    +          +     0.85304412821506 * H1x2_2  +     0.02488996279683 * H1x2_3
997262    +          +     0.91802038137174 * H1x2_4  +    -1.81721580205502 * H1x2_5
997263    +          +     0.11240659705231 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x2_5 = H2x2_5 + 1.04509064360988 * H1x2_1 + 0.85304412821506 * H1x2_2
+ 0.02488996279683 * H1x2_3 + 0.91802038137174 * H1x2_4 + -1.81721580205502 * H1x2_5 +
0.11240659705231 * H1x2_6 ;
997264    +   H2x2_6  = H2x2_6  +     0.05653875399544 * H1x2_1
997265    +          +     1.39275186399065 * H1x2_2  +     0.15742585211841 * H1x2_3
997266    +          +    -0.88823005597082 * H1x2_4  +    -0.29404620644608 * H1x2_5
997267    +          +     0.67151326645383 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x2_6 = H2x2_6 + 0.05653875399544 * H1x2_1 + 1.39275186399065 * H1x2_2
+ 0.15742585211841 * H1x2_3 + -0.88823005597082 * H1x2_4 + -0.29404620644608 * H1x2_5 +
0.67151326645383 * H1x2_6 ;
997268    +   H2x2_1  = H2x2_1  +     -0.3030053902263 * H1x3_1
997269    +          +     2.78883241587523 * H1x3_2  +      0.2423564112649 * H1x3_3
997270    +          +      0.7361422570599 * H1x3_4  +     1.00815416571126 * H1x3_5
997271    +          +    -0.76522554014331 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + -0.3030053902263 * H1x3_1 + 2.78883241587523 * H1x3_2
+ 0.2423564112649 * H1x3_3 + 0.7361422570599 * H1x3_4 + 1.00815416571126 * H1x3_5 +
-0.76522554014331 * H1x3_6 ;
997272    +   H2x2_2  = H2x2_2  +     0.82248064405342 * H1x3_1
997273    +          +    -0.44213525858661 * H1x3_2  +    -0.00950377945068 * H1x3_3
997274    +          +    -0.26973050484517 * H1x3_4  +    -1.64864877093803 * H1x3_5
997275    +          +     1.79694481340011 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 + 0.82248064405342 * H1x3_1 + -0.44213525858661 * H1x3_2
+ -0.00950377945068 * H1x3_3 + -0.26973050484517 * H1x3_4 + -1.64864877093803 * H1x3_5 +
1.79694481340011 * H1x3_6 ;
997276    +   H2x2_3  = H2x2_3  +     0.58931676503392 * H1x3_1
997277    +          +     -0.3196648688702 * H1x3_2  +    -1.13832101252701 * H1x3_3
997278    +          +    -0.03125400478011 * H1x3_4  +    -1.43718277665665 * H1x3_5
997279    +          +     0.43346153474351 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = H2x2_3 + 0.58931676503392 * H1x3_1 + -0.3196648688702 * H1x3_2
+ -1.13832101252701 * H1x3_3 + -0.03125400478011 * H1x3_4 + -1.43718277665665 * H1x3_5 +
0.43346153474351 * H1x3_6 ;
997280    +   H2x2_4  = H2x2_4  +    -1.21075206873547 * H1x3_1
997281    +          +    -1.44059265356325 * H1x3_2  +    -0.70572923760085 * H1x3_3
997282    +          +    -0.50514975818712 * H1x3_4  +    -1.15362557643796 * H1x3_5
997283    +          +     0.11633831354046 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = H2x2_4 + -1.21075206873547 * H1x3_1 + -1.44059265356325 *
H1x3_2 + -0.70572923760085 * H1x3_3 + -0.50514975818712 * H1x3_4 + -1.15362557643796 * H1x3_5
+ 0.11633831354046 * H1x3_6 ;
997284    +   H2x2_5  = H2x2_5  +     1.62708810169671 * H1x3_1
997285    +          +     -0.1172779578507 * H1x3_2  +    -2.68535586251402 * H1x3_3
997286    +          +     0.70733149959662 * H1x3_4  +     0.37426620231353 * H1x3_5
997287    +          +    -0.51535580022884 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x2_5 = H2x2_5 + 1.62708810169671 * H1x3_1 + -0.1172779578507 * H1x3_2
+ -2.68535586251402 * H1x3_3 + 0.70733149959662 * H1x3_4 + 0.37426620231353 * H1x3_5 +
-0.51535580022884 * H1x3_6 ;
997288    +   H2x2_6  = H2x2_6  +     1.13688712518045 * H1x3_1
997289    +          +      0.5035299609214 * H1x3_2  +    -0.37315357246579 * H1x3_3
997290    +          +     2.28435302728227 * H1x3_4  +    -0.86692347925858 * H1x3_5
997291    +          +     1.02261478089015 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x2_6 = H2x2_6 + 1.13688712518045 * H1x3_1 + 0.5035299609214 * H1x3_2 +
-0.37315357246579 * H1x3_3 + 2.28435302728227 * H1x3_4 + -0.86692347925858 * H1x3_5 +
1.02261478089015 * H1x3_6 ;
997292    +   H2x2_1  =      2.1294351501339 + H2x2_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = 2.1294351501339 + H2x2_1 ;
997293    +   H2x2_2  =     1.02351873226689 + H2x2_2 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = 1.02351873226689 + H2x2_2 ;
997294    +   H2x2_3  =    -2.24013423062467 + H2x2_3 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = -2.24013423062467 + H2x2_3 ;
997295    +   H2x2_4  =    -0.75459686616452 + H2x2_4 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = -0.75459686616452 + H2x2_4 ;
997296    +   H2x2_5  =    -0.02288525069595 + H2x2_5 ;
MPRINT(EM_DIAGRAM):   H2x2_5 = -0.02288525069595 + H2x2_5 ;
997297    +   H2x2_6  =     0.85009535412356 + H2x2_6 ;
MPRINT(EM_DIAGRAM):   H2x2_6 = 0.85009535412356 + H2x2_6 ;
997298    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
997299    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
997300    +   H2x2_1  = 1.0 / (1.0 + EXP(MIN( - H2x2_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x2_1 = 1.0 / (1.0 + EXP(MIN( - H2x2_1 , _EXP_BAR)));
997301    +   H2x2_2  = 1.0 / (1.0 + EXP(MIN( - H2x2_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x2_2 = 1.0 / (1.0 + EXP(MIN( - H2x2_2 , _EXP_BAR)));
997302    +   H2x2_3  = 1.0 / (1.0 + EXP(MIN( - H2x2_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x2_3 = 1.0 / (1.0 + EXP(MIN( - H2x2_3 , _EXP_BAR)));
997303    +   H2x2_4  = 1.0 / (1.0 + EXP(MIN( - H2x2_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x2_4 = 1.0 / (1.0 + EXP(MIN( - H2x2_4 , _EXP_BAR)));
997304    +   H2x2_5  = 1.0 / (1.0 + EXP(MIN( - H2x2_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x2_5 = 1.0 / (1.0 + EXP(MIN( - H2x2_5 , _EXP_BAR)));
997305    +   H2x2_6  = 1.0 / (1.0 + EXP(MIN( - H2x2_6 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x2_6 = 1.0 / (1.0 + EXP(MIN( - H2x2_6 , _EXP_BAR)));
997306    +END;
MPRINT(EM_DIAGRAM):   END;
997307    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
997308    +   H2x2_1  = .;
MPRINT(EM_DIAGRAM):   H2x2_1 = .;
997309    +   H2x2_2  = .;
MPRINT(EM_DIAGRAM):   H2x2_2 = .;
997310    +   H2x2_3  = .;
MPRINT(EM_DIAGRAM):   H2x2_3 = .;
997311    +   H2x2_4  = .;
MPRINT(EM_DIAGRAM):   H2x2_4 = .;
997312    +   H2x2_5  = .;
MPRINT(EM_DIAGRAM):   H2x2_5 = .;
997313    +   H2x2_6  = .;
MPRINT(EM_DIAGRAM):   H2x2_6 = .;
997314    +END;
MPRINT(EM_DIAGRAM):   END;
997315    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
997316    +*** Writing the Node H3x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H3x1_ ;
997317    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
997318    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
997319    +   H3x1_1  =     0.47414908117619 * H2x1_1  +    -0.48225593618443 * H2x1_2
997320    +          +     -2.1415546083933 * H2x1_3  +      0.1865992678808 * H2x1_4
997321    +          +     0.00905592746992 * H2x1_5  +    -0.19906676643855 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = 0.47414908117619 * H2x1_1 + -0.48225593618443 * H2x1_2 +
-2.1415546083933 * H2x1_3 + 0.1865992678808 * H2x1_4 + 0.00905592746992 * H2x1_5 +
-0.19906676643855 * H2x1_6 ;
997322    +   H3x1_2  =    -1.49254004953978 * H2x1_1  +     0.31026207162707 * H2x1_2
997323    +          +     1.32646563211977 * H2x1_3  +    -1.28309969785351 * H2x1_4
997324    +          +     0.25756953254945 * H2x1_5  +    -0.76411205087595 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = -1.49254004953978 * H2x1_1 + 0.31026207162707 * H2x1_2 +
1.32646563211977 * H2x1_3 + -1.28309969785351 * H2x1_4 + 0.25756953254945 * H2x1_5 +
-0.76411205087595 * H2x1_6 ;
997325    +   H3x1_3  =    -1.92735673513935 * H2x1_1  +    -0.43375763993013 * H2x1_2
997326    +          +     0.43682333912422 * H2x1_3  +    -1.82129068789797 * H2x1_4
997327    +          +     0.29218264240002 * H2x1_5  +    -1.24122940235749 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = -1.92735673513935 * H2x1_1 + -0.43375763993013 * H2x1_2 +
0.43682333912422 * H2x1_3 + -1.82129068789797 * H2x1_4 + 0.29218264240002 * H2x1_5 +
-1.24122940235749 * H2x1_6 ;
997328    +   H3x1_4  =    -1.64752963128738 * H2x1_1  +     0.57434247193535 * H2x1_2
997329    +          +    -0.25025779129033 * H2x1_3  +     0.22582895723418 * H2x1_4
997330    +          +     1.06280616805567 * H2x1_5  +     1.46523065565448 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   H3x1_4 = -1.64752963128738 * H2x1_1 + 0.57434247193535 * H2x1_2 +
-0.25025779129033 * H2x1_3 + 0.22582895723418 * H2x1_4 + 1.06280616805567 * H2x1_5 +
1.46523065565448 * H2x1_6 ;
997331    +   H3x1_5  =     1.12463631894495 * H2x1_1  +     0.41116194812841 * H2x1_2
997332    +          +      0.7487833097767 * H2x1_3  +     1.30777439715556 * H2x1_4
997333    +          +    -2.30583381860923 * H2x1_5  +    -0.45051702468841 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   H3x1_5 = 1.12463631894495 * H2x1_1 + 0.41116194812841 * H2x1_2 +
0.7487833097767 * H2x1_3 + 1.30777439715556 * H2x1_4 + -2.30583381860923 * H2x1_5 +
-0.45051702468841 * H2x1_6 ;
997334    +   H3x1_6  =     0.83619385924948 * H2x1_1  +    -1.59549231556809 * H2x1_2
997335    +          +     1.90180728278943 * H2x1_3  +     1.56404469490888 * H2x1_4
997336    +          +    -0.13088910369985 * H2x1_5  +     0.29690402913896 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   H3x1_6 = 0.83619385924948 * H2x1_1 + -1.59549231556809 * H2x1_2 +
1.90180728278943 * H2x1_3 + 1.56404469490888 * H2x1_4 + -0.13088910369985 * H2x1_5 +
0.29690402913896 * H2x1_6 ;
997337    +   H3x1_1  = H3x1_1  +    -0.92346745353313 * H2x2_1
997338    +          +    -0.03076503207993 * H2x2_2  +    -0.80770265916018 * H2x2_3
997339    +          +     2.13033820393108 * H2x2_4  +     1.57799583499821 * H2x2_5
997340    +          +    -0.96381430690961 * H2x2_6 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = H3x1_1 + -0.92346745353313 * H2x2_1 + -0.03076503207993 *
H2x2_2 + -0.80770265916018 * H2x2_3 + 2.13033820393108 * H2x2_4 + 1.57799583499821 * H2x2_5 +
-0.96381430690961 * H2x2_6 ;
997341    +   H3x1_2  = H3x1_2  +     -2.8908441376485 * H2x2_1
997342    +          +    -0.73955819678817 * H2x2_2  +     0.25644336633912 * H2x2_3
997343    +          +    -0.21076687801122 * H2x2_4  +    -0.80525890625048 * H2x2_5
997344    +          +    -1.37757472119786 * H2x2_6 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = H3x1_2 + -2.8908441376485 * H2x2_1 + -0.73955819678817 * H2x2_2
+ 0.25644336633912 * H2x2_3 + -0.21076687801122 * H2x2_4 + -0.80525890625048 * H2x2_5 +
-1.37757472119786 * H2x2_6 ;
997345    +   H3x1_3  = H3x1_3  +     1.68560264985255 * H2x2_1
997346    +          +    -1.80659127572232 * H2x2_2  +    -0.40798847098834 * H2x2_3
997347    +          +    -0.09427467518365 * H2x2_4  +       1.932433481179 * H2x2_5
997348    +          +    -1.58203174336227 * H2x2_6 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = H3x1_3 + 1.68560264985255 * H2x2_1 + -1.80659127572232 * H2x2_2
+ -0.40798847098834 * H2x2_3 + -0.09427467518365 * H2x2_4 + 1.932433481179 * H2x2_5 +
-1.58203174336227 * H2x2_6 ;
997349    +   H3x1_4  = H3x1_4  +    -0.79131921613464 * H2x2_1
997350    +          +    -0.94708168667993 * H2x2_2  +     0.95842423067232 * H2x2_3
997351    +          +    -1.35896085667273 * H2x2_4  +      0.3130528184907 * H2x2_5
997352    +          +     1.21364725785316 * H2x2_6 ;
MPRINT(EM_DIAGRAM):   H3x1_4 = H3x1_4 + -0.79131921613464 * H2x2_1 + -0.94708168667993 *
H2x2_2 + 0.95842423067232 * H2x2_3 + -1.35896085667273 * H2x2_4 + 0.3130528184907 * H2x2_5 +
1.21364725785316 * H2x2_6 ;
997353    +   H3x1_5  = H3x1_5  +    -1.65282990431545 * H2x2_1
997354    +          +     0.41456756806825 * H2x2_2  +    -2.00212916702729 * H2x2_3
997355    +          +    -1.19874789923068 * H2x2_4  +     0.20234859862481 * H2x2_5
997356    +          +     0.95942799624748 * H2x2_6 ;
MPRINT(EM_DIAGRAM):   H3x1_5 = H3x1_5 + -1.65282990431545 * H2x2_1 + 0.41456756806825 * H2x2_2
+ -2.00212916702729 * H2x2_3 + -1.19874789923068 * H2x2_4 + 0.20234859862481 * H2x2_5 +
0.95942799624748 * H2x2_6 ;
997357    +   H3x1_6  = H3x1_6  +    -0.52526666332317 * H2x2_1
997358    +          +      0.3234256287518 * H2x2_2  +    -0.93766150263141 * H2x2_3
997359    +          +    -1.81398789003556 * H2x2_4  +    -0.15539533140563 * H2x2_5
997360    +          +     0.23144688198135 * H2x2_6 ;
MPRINT(EM_DIAGRAM):   H3x1_6 = H3x1_6 + -0.52526666332317 * H2x2_1 + 0.3234256287518 * H2x2_2
+ -0.93766150263141 * H2x2_3 + -1.81398789003556 * H2x2_4 + -0.15539533140563 * H2x2_5 +
0.23144688198135 * H2x2_6 ;
997361    +   H3x1_1  =     0.24609695545564 + H3x1_1 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = 0.24609695545564 + H3x1_1 ;
997362    +   H3x1_2  =    -0.92728333066333 + H3x1_2 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = -0.92728333066333 + H3x1_2 ;
997363    +   H3x1_3  =     1.63161482532776 + H3x1_3 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = 1.63161482532776 + H3x1_3 ;
997364    +   H3x1_4  =     0.39161062590357 + H3x1_4 ;
MPRINT(EM_DIAGRAM):   H3x1_4 = 0.39161062590357 + H3x1_4 ;
997365    +   H3x1_5  =     0.01171760508297 + H3x1_5 ;
MPRINT(EM_DIAGRAM):   H3x1_5 = 0.01171760508297 + H3x1_5 ;
997366    +   H3x1_6  =    -0.72522461279376 + H3x1_6 ;
MPRINT(EM_DIAGRAM):   H3x1_6 = -0.72522461279376 + H3x1_6 ;
997367    +   H3x1_1  = SIN(H3x1_1 );
MPRINT(EM_DIAGRAM):   H3x1_1 = SIN(H3x1_1 );
997368    +   H3x1_2  = SIN(H3x1_2 );
MPRINT(EM_DIAGRAM):   H3x1_2 = SIN(H3x1_2 );
997369    +   H3x1_3  = SIN(H3x1_3 );
MPRINT(EM_DIAGRAM):   H3x1_3 = SIN(H3x1_3 );
997370    +   H3x1_4  = SIN(H3x1_4 );
MPRINT(EM_DIAGRAM):   H3x1_4 = SIN(H3x1_4 );
997371    +   H3x1_5  = SIN(H3x1_5 );
MPRINT(EM_DIAGRAM):   H3x1_5 = SIN(H3x1_5 );
997372    +   H3x1_6  = SIN(H3x1_6 );
MPRINT(EM_DIAGRAM):   H3x1_6 = SIN(H3x1_6 );
997373    +END;
MPRINT(EM_DIAGRAM):   END;
997374    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
997375    +   H3x1_1  = .;
MPRINT(EM_DIAGRAM):   H3x1_1 = .;
997376    +   H3x1_2  = .;
MPRINT(EM_DIAGRAM):   H3x1_2 = .;
997377    +   H3x1_3  = .;
MPRINT(EM_DIAGRAM):   H3x1_3 = .;
997378    +   H3x1_4  = .;
MPRINT(EM_DIAGRAM):   H3x1_4 = .;
997379    +   H3x1_5  = .;
MPRINT(EM_DIAGRAM):   H3x1_5 = .;
997380    +   H3x1_6  = .;
MPRINT(EM_DIAGRAM):   H3x1_6 = .;
997381    +END;
MPRINT(EM_DIAGRAM):   END;
997382    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
997383    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
997384    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
997385    +
997386    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
997387    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
997388    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
997389    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
997390    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
997391    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
997392    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
997393    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
997394    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
997395    +end;
MPRINT(EM_DIAGRAM):   end;
997396    +else do;
MPRINT(EM_DIAGRAM):   else do;
997397    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
997398    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
997399    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
997400    +   end;
MPRINT(EM_DIAGRAM):   end;
997401    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
997402    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
997403    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
997404    +   end;
MPRINT(EM_DIAGRAM):   end;
997405    +   else do;
MPRINT(EM_DIAGRAM):   else do;
997406    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
997407    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
997408    +   end;
MPRINT(EM_DIAGRAM):   end;
997409    +end;
MPRINT(EM_DIAGRAM):   end;
997410    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
997411    +   P_DepVar1  =      0.9799962964316 * H3x1_1  +     1.34210953311734 * H3x1_2
997412    +          +      2.0189927751579 * H3x1_3  +      1.8409060954552 * H3x1_4
997413    +          +    -3.17705772371323 * H3x1_5  +    -2.12623562549552 * H3x1_6 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.9799962964316 * H3x1_1 + 1.34210953311734 * H3x1_2 +
2.0189927751579 * H3x1_3 + 1.8409060954552 * H3x1_4 + -3.17705772371323 * H3x1_5 +
-2.12623562549552 * H3x1_6 ;
997414    +   P_DepVar1  =     1.17636518592867 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 1.17636518592867 + P_DepVar1 ;
997415    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
997416    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
997417    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
997418    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
997419    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
997420    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
997421    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
997422    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
997423    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
997424    +END;
MPRINT(EM_DIAGRAM):   END;
997425    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
997426    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
997427    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
997428    +END;
MPRINT(EM_DIAGRAM):   END;
997429    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
997430    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
997431    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
997432    +END;
MPRINT(EM_DIAGRAM):   END;
997433    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
997434    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
997435    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
997436    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
997437    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
997438    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
997439    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
997440    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
997441    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
997442    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
997443    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
997444    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
997445    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
997446    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
997447    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
997448    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
997449    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
997450    +END;
MPRINT(EM_DIAGRAM):   END;
997451    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
997452    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
997453    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
997454    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
997455     run;
 
NOTE: DATA STEP view saved on file EMWS8.AUTONEURAL35_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.META3_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
997456     quit;
997457     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
997458     filename emflow
997458   ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural35\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural35\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * AutoNeural35: Scoring VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
997459     *------------------------------------------------------------*;
997460     * AutoNeural35: Scoring VALIDATE data;
997461     *------------------------------------------------------------*;
997462     data EMWS8.AutoNeural35_VALIDATE
997463     / view=EMWS8.AutoNeural35_VALIDATE
997464     ;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural35_VALIDATE / view=EMWS8.AutoNeural35_VALIDATE ;
997465     set EMWS8.Meta3_VALIDATE
997466     ;
MPRINT(EM_DIAGRAM):   set EMWS8.Meta3_VALIDATE ;
997467     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural35\EMFLOWSCORE.sas.
997468    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
997469    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
997470    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
997471    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
997472    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
997473    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
997474    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
997475    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
997476    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
997477    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
997478    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
997479    +LENGTH _WARN_ $4
997480    +      F_DepVar  $ 12
997481    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
997482    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
997483    +
997484    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
997485    +
997486    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
997487    +
997488    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
997489    +
997490    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
997491    +
997492    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
997493    +
997494    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
997495    +
997496    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
997497    +
997498    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
997499    +
997500    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
997501    +
997502    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
997503    +
997504    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
997505    +
997506    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
997507    +
997508    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
997509    +
997510    +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
997511    +
997512    +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
997513    +
997514    +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
997515    +
997516    +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
997517    +
997518    +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
997519    +
997520    +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
997521    +
997522    +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
997523    +
997524    +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
997525    +
997526    +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
997527    +
997528    +      label H1x2_6 = 'Hidden: H1x2_=6' ;
MPRINT(EM_DIAGRAM):   label H1x2_6 = 'Hidden: H1x2_=6' ;
997529    +
997530    +      label H1x3_1 = 'Hidden: H1x3_=1' ;
MPRINT(EM_DIAGRAM):   label H1x3_1 = 'Hidden: H1x3_=1' ;
997531    +
997532    +      label H1x3_2 = 'Hidden: H1x3_=2' ;
MPRINT(EM_DIAGRAM):   label H1x3_2 = 'Hidden: H1x3_=2' ;
997533    +
997534    +      label H1x3_3 = 'Hidden: H1x3_=3' ;
MPRINT(EM_DIAGRAM):   label H1x3_3 = 'Hidden: H1x3_=3' ;
997535    +
997536    +      label H1x3_4 = 'Hidden: H1x3_=4' ;
MPRINT(EM_DIAGRAM):   label H1x3_4 = 'Hidden: H1x3_=4' ;
997537    +
997538    +      label H1x3_5 = 'Hidden: H1x3_=5' ;
MPRINT(EM_DIAGRAM):   label H1x3_5 = 'Hidden: H1x3_=5' ;
997539    +
997540    +      label H1x3_6 = 'Hidden: H1x3_=6' ;
MPRINT(EM_DIAGRAM):   label H1x3_6 = 'Hidden: H1x3_=6' ;
997541    +
997542    +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
997543    +
997544    +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
997545    +
997546    +      label H2x1_3 = 'Hidden: H2x1_=3' ;
MPRINT(EM_DIAGRAM):   label H2x1_3 = 'Hidden: H2x1_=3' ;
997547    +
997548    +      label H2x1_4 = 'Hidden: H2x1_=4' ;
MPRINT(EM_DIAGRAM):   label H2x1_4 = 'Hidden: H2x1_=4' ;
997549    +
997550    +      label H2x1_5 = 'Hidden: H2x1_=5' ;
MPRINT(EM_DIAGRAM):   label H2x1_5 = 'Hidden: H2x1_=5' ;
997551    +
997552    +      label H2x1_6 = 'Hidden: H2x1_=6' ;
MPRINT(EM_DIAGRAM):   label H2x1_6 = 'Hidden: H2x1_=6' ;
997553    +
997554    +      label H2x2_1 = 'Hidden: H2x2_=1' ;
MPRINT(EM_DIAGRAM):   label H2x2_1 = 'Hidden: H2x2_=1' ;
997555    +
997556    +      label H2x2_2 = 'Hidden: H2x2_=2' ;
MPRINT(EM_DIAGRAM):   label H2x2_2 = 'Hidden: H2x2_=2' ;
997557    +
997558    +      label H2x2_3 = 'Hidden: H2x2_=3' ;
MPRINT(EM_DIAGRAM):   label H2x2_3 = 'Hidden: H2x2_=3' ;
997559    +
997560    +      label H2x2_4 = 'Hidden: H2x2_=4' ;
MPRINT(EM_DIAGRAM):   label H2x2_4 = 'Hidden: H2x2_=4' ;
997561    +
997562    +      label H2x2_5 = 'Hidden: H2x2_=5' ;
MPRINT(EM_DIAGRAM):   label H2x2_5 = 'Hidden: H2x2_=5' ;
997563    +
997564    +      label H2x2_6 = 'Hidden: H2x2_=6' ;
MPRINT(EM_DIAGRAM):   label H2x2_6 = 'Hidden: H2x2_=6' ;
997565    +
997566    +      label H3x1_1 = 'Hidden: H3x1_=1' ;
MPRINT(EM_DIAGRAM):   label H3x1_1 = 'Hidden: H3x1_=1' ;
997567    +
997568    +      label H3x1_2 = 'Hidden: H3x1_=2' ;
MPRINT(EM_DIAGRAM):   label H3x1_2 = 'Hidden: H3x1_=2' ;
997569    +
997570    +      label H3x1_3 = 'Hidden: H3x1_=3' ;
MPRINT(EM_DIAGRAM):   label H3x1_3 = 'Hidden: H3x1_=3' ;
997571    +
997572    +      label H3x1_4 = 'Hidden: H3x1_=4' ;
MPRINT(EM_DIAGRAM):   label H3x1_4 = 'Hidden: H3x1_=4' ;
997573    +
997574    +      label H3x1_5 = 'Hidden: H3x1_=5' ;
MPRINT(EM_DIAGRAM):   label H3x1_5 = 'Hidden: H3x1_=5' ;
997575    +
997576    +      label H3x1_6 = 'Hidden: H3x1_=6' ;
MPRINT(EM_DIAGRAM):   label H3x1_6 = 'Hidden: H3x1_=6' ;
997577    +
997578    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
997579    +
997580    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
997581    +
997582    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
997583    +
997584    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
997585    +
997586    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
997587    +
997588    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
997589    +
997590    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
997591    +
997592    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
997593    +
997594    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
997595    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
997596    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
997597    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
997598    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
997599    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
997600    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
997601    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
997602    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
997603    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
997604    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
997605    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
997606    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
997607    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
997608    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
997609    +end;
MPRINT(EM_DIAGRAM):   end;
997610    +else do;
MPRINT(EM_DIAGRAM):   else do;
997611    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
997612    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
997613    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
997614    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
997615    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
997616    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
997617    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
997618    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
997619    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
997620    +         end;
MPRINT(EM_DIAGRAM):   end;
997621    +         else do;
MPRINT(EM_DIAGRAM):   else do;
997622    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
997623    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
997624    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
997625    +            end;
MPRINT(EM_DIAGRAM):   end;
997626    +         end;
MPRINT(EM_DIAGRAM):   end;
997627    +      end;
MPRINT(EM_DIAGRAM):   end;
997628    +      else do;
MPRINT(EM_DIAGRAM):   else do;
997629    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
997630    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
997631    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
997632    +         end;
MPRINT(EM_DIAGRAM):   end;
997633    +      end;
MPRINT(EM_DIAGRAM):   end;
997634    +   end;
MPRINT(EM_DIAGRAM):   end;
997635    +   else do;
MPRINT(EM_DIAGRAM):   else do;
997636    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
997637    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
997638    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
997639    +      end;
MPRINT(EM_DIAGRAM):   end;
997640    +      else do;
MPRINT(EM_DIAGRAM):   else do;
997641    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
997642    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
997643    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
997644    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
997645    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
997646    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
997647    +         end;
MPRINT(EM_DIAGRAM):   end;
997648    +      end;
MPRINT(EM_DIAGRAM):   end;
997649    +   end;
MPRINT(EM_DIAGRAM):   end;
997650    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
997651    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
997652    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
997653    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
997654    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
997655    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
997656    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
997657    +   end;
MPRINT(EM_DIAGRAM):   end;
997658    +end;
MPRINT(EM_DIAGRAM):   end;
997659    +
997660    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
997661    +*** Checking missing input Interval
997662    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
997663    +
997664    +IF NMISS(
997665    +   AcceptedCmpTotal ,
997666    +   Frq ,
997667    +   Mnt ,
997668    +   MntMeatProducts ,
997669    +   NumCatalogPurchases ,
997670    +   NumDealsPurchases ,
997671    +   NumWebVisitsMonth ,
997672    +   Recency   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Mnt , MntMeatProducts ,
NumCatalogPurchases , NumDealsPurchases , NumWebVisitsMonth , Recency ) THEN DO;
997673    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
997674    +
997675    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
997676    +END;
MPRINT(EM_DIAGRAM):   END;
997677    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
997678    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
997679    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
997680    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
997681    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
997682    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
997683    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
997684    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
997685    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
997686    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
997687    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
997688    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
997689    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
997690    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
997691    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
997692    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
997693    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
997694    +END;
MPRINT(EM_DIAGRAM):   END;
997695    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
997696    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
997697    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
997698    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
997699    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
997700    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
997701    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
997702    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
997703    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
997704    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
997705    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
997706    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
997707    +   ELSE S_NumCatalogPurchases
997708    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
997709    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
997710    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
997711    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
997712    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
997713    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
997714    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
997715    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
997716    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
997717    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
997718    +END;
MPRINT(EM_DIAGRAM):   END;
997719    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
997720    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
997721    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
997722    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
997723    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
997724    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
997725    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
997726    +   H1x1_1  =    -0.67537728004966 * S_AcceptedCmpTotal
997727    +          +     2.81188938311993 * S_Frq  +    -0.48449735677533 * S_Mnt
997728    +          +     2.79168320854924 * S_MntMeatProducts
997729    +          +    -1.09894266401589 * S_NumCatalogPurchases
997730    +          +    -0.32966417347551 * S_NumDealsPurchases
997731    +          +    -0.72195034767343 * S_NumWebVisitsMonth
997732    +          +     1.26300567591683 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.67537728004966 * S_AcceptedCmpTotal + 2.81188938311993 *
S_Frq + -0.48449735677533 * S_Mnt + 2.79168320854924 * S_MntMeatProducts + -1.09894266401589 *
S_NumCatalogPurchases + -0.32966417347551 * S_NumDealsPurchases + -0.72195034767343 *
S_NumWebVisitsMonth + 1.26300567591683 * S_Recency ;
997733    +   H1x1_2  =    -0.10530102616636 * S_AcceptedCmpTotal
997734    +          +    -1.56143940912133 * S_Frq  +    -4.62897774617873 * S_Mnt
997735    +          +     9.02469430152189 * S_MntMeatProducts
997736    +          +     1.42644521887241 * S_NumCatalogPurchases
997737    +          +      0.6475058577302 * S_NumDealsPurchases
997738    +          +     0.08123225110233 * S_NumWebVisitsMonth
997739    +          +    -0.13437822083345 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.10530102616636 * S_AcceptedCmpTotal + -1.56143940912133 *
S_Frq + -4.62897774617873 * S_Mnt + 9.02469430152189 * S_MntMeatProducts + 1.42644521887241 *
S_NumCatalogPurchases + 0.6475058577302 * S_NumDealsPurchases + 0.08123225110233 *
S_NumWebVisitsMonth + -0.13437822083345 * S_Recency ;
997740    +   H1x1_3  =     0.38623415840156 * S_AcceptedCmpTotal
997741    +          +     1.26011321422418 * S_Frq  +     0.93412252767552 * S_Mnt
997742    +          +     5.40567027331821 * S_MntMeatProducts
997743    +          +     0.21404551755506 * S_NumCatalogPurchases
997744    +          +    -3.79184634796332 * S_NumDealsPurchases
997745    +          +     0.64355102802571 * S_NumWebVisitsMonth
997746    +          +     0.95080943397397 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.38623415840156 * S_AcceptedCmpTotal + 1.26011321422418 *
S_Frq + 0.93412252767552 * S_Mnt + 5.40567027331821 * S_MntMeatProducts + 0.21404551755506 *
S_NumCatalogPurchases + -3.79184634796332 * S_NumDealsPurchases + 0.64355102802571 *
S_NumWebVisitsMonth + 0.95080943397397 * S_Recency ;
997747    +   H1x1_4  =    -2.69419226375129 * S_AcceptedCmpTotal
997748    +          +     4.80721116964493 * S_Frq  +     4.56726230244782 * S_Mnt
997749    +          +     2.35287601364019 * S_MntMeatProducts
997750    +          +    -3.27198648531912 * S_NumCatalogPurchases
997751    +          +    -0.16046880718311 * S_NumDealsPurchases
997752    +          +     -3.7025327830273 * S_NumWebVisitsMonth
997753    +          +     5.47829314370286 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -2.69419226375129 * S_AcceptedCmpTotal + 4.80721116964493 *
S_Frq + 4.56726230244782 * S_Mnt + 2.35287601364019 * S_MntMeatProducts + -3.27198648531912 *
S_NumCatalogPurchases + -0.16046880718311 * S_NumDealsPurchases + -3.7025327830273 *
S_NumWebVisitsMonth + 5.47829314370286 * S_Recency ;
997754    +   H1x1_5  =     3.75699631118799 * S_AcceptedCmpTotal
997755    +          +    -1.60236762300853 * S_Frq  +     0.64007421195882 * S_Mnt
997756    +          +     8.39312647460766 * S_MntMeatProducts
997757    +          +     3.07026872536137 * S_NumCatalogPurchases
997758    +          +     2.03045608124213 * S_NumDealsPurchases
997759    +          +     3.86452915398414 * S_NumWebVisitsMonth
997760    +          +    -5.45655790704746 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 3.75699631118799 * S_AcceptedCmpTotal + -1.60236762300853 *
S_Frq + 0.64007421195882 * S_Mnt + 8.39312647460766 * S_MntMeatProducts + 3.07026872536137 *
S_NumCatalogPurchases + 2.03045608124213 * S_NumDealsPurchases + 3.86452915398414 *
S_NumWebVisitsMonth + -5.45655790704746 * S_Recency ;
997761    +   H1x1_1  = H1x1_1  +     0.59959546037733 * Marital_StatusDivorced
997762    +          +     0.14979485299347 * Marital_StatusMarried
997763    +          +    -0.09166445391312 * Marital_StatusSingle
997764    +          +     -0.8898837643688 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.59959546037733 * Marital_StatusDivorced +
0.14979485299347 * Marital_StatusMarried + -0.09166445391312 * Marital_StatusSingle +
-0.8898837643688 * Marital_StatusTogether ;
997765    +   H1x1_2  = H1x1_2  +     0.13516192952275 * Marital_StatusDivorced
997766    +          +      0.1646484112393 * Marital_StatusMarried
997767    +          +     0.01074681811884 * Marital_StatusSingle
997768    +          +    -0.38035258327435 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.13516192952275 * Marital_StatusDivorced +
0.1646484112393 * Marital_StatusMarried + 0.01074681811884 * Marital_StatusSingle +
-0.38035258327435 * Marital_StatusTogether ;
997769    +   H1x1_3  = H1x1_3  +    -6.14970888128598 * Marital_StatusDivorced
997770    +          +    -0.28313626645981 * Marital_StatusMarried
997771    +          +      2.8257446964988 * Marital_StatusSingle
997772    +          +     0.44817043395102 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -6.14970888128598 * Marital_StatusDivorced +
-0.28313626645981 * Marital_StatusMarried + 2.8257446964988 * Marital_StatusSingle +
0.44817043395102 * Marital_StatusTogether ;
997773    +   H1x1_4  = H1x1_4  +     -5.3794018991977 * Marital_StatusDivorced
997774    +          +     3.05775024202559 * Marital_StatusMarried
997775    +          +    -0.23539571945671 * Marital_StatusSingle
997776    +          +     4.66331490520755 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -5.3794018991977 * Marital_StatusDivorced +
3.05775024202559 * Marital_StatusMarried + -0.23539571945671 * Marital_StatusSingle +
4.66331490520755 * Marital_StatusTogether ;
997777    +   H1x1_5  = H1x1_5  +     1.25174944520682 * Marital_StatusDivorced
997778    +          +    -0.48359916542157 * Marital_StatusMarried
997779    +          +    -1.64182316823237 * Marital_StatusSingle
997780    +          +     1.33430611846768 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + 1.25174944520682 * Marital_StatusDivorced +
-0.48359916542157 * Marital_StatusMarried + -1.64182316823237 * Marital_StatusSingle +
1.33430611846768 * Marital_StatusTogether ;
997781    +   H1x1_1  =     4.63389499664507 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 4.63389499664507 + H1x1_1 ;
997782    +   H1x1_2  =     2.11311359057093 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 2.11311359057093 + H1x1_2 ;
997783    +   H1x1_3  =    -0.62083985205654 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.62083985205654 + H1x1_3 ;
997784    +   H1x1_4  =     3.41081693054871 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 3.41081693054871 + H1x1_4 ;
997785    +   H1x1_5  =    -9.34543620991542 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -9.34543620991542 + H1x1_5 ;
997786    +   H1x1_6  = 0;
MPRINT(EM_DIAGRAM):   H1x1_6 = 0;
997787    +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 );
997788    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
997789    +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
997790    +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
997791    +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
997792    +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
997793    +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
997794    +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
997795    +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
997796    +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
997797    +   H1x1_5  = EXP(H1x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_5 = EXP(H1x1_5 - _MAX_);
997798    +   _SUM_ = _SUM_ + H1x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_5 ;
997799    +   H1x1_6  = EXP(H1x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_6 = EXP(H1x1_6 - _MAX_);
997800    +   _SUM_ = _SUM_ + H1x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_6 ;
997801    +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
997802    +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
997803    +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
997804    +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
997805    +   H1x1_5  = H1x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 / _SUM_;
997806    +   H1x1_6  = H1x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 / _SUM_;
997807    +END;
MPRINT(EM_DIAGRAM):   END;
997808    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
997809    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
997810    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
997811    +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
997812    +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
997813    +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
997814    +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
997815    +END;
MPRINT(EM_DIAGRAM):   END;
997816    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
997817    +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
997818    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
997819    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
997820    +   H1x2_1  =     0.75154793671381 * S_AcceptedCmpTotal
997821    +          +     1.16505569462642 * S_Frq  +     -0.8308540177887 * S_Mnt
997822    +          +     0.55999885697493 * S_MntMeatProducts
997823    +          +      0.2225207563207 * S_NumCatalogPurchases
997824    +          +     -1.0233439835205 * S_NumDealsPurchases
997825    +          +    -0.35430585878397 * S_NumWebVisitsMonth
997826    +          +    -1.61097128706343 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.75154793671381 * S_AcceptedCmpTotal + 1.16505569462642 *
S_Frq + -0.8308540177887 * S_Mnt + 0.55999885697493 * S_MntMeatProducts + 0.2225207563207 *
S_NumCatalogPurchases + -1.0233439835205 * S_NumDealsPurchases + -0.35430585878397 *
S_NumWebVisitsMonth + -1.61097128706343 * S_Recency ;
997827    +   H1x2_2  =    -2.67887309413165 * S_AcceptedCmpTotal
997828    +          +    -1.18932806022128 * S_Frq  +    -0.12550289494399 * S_Mnt
997829    +          +    -1.04508919964747 * S_MntMeatProducts
997830    +          +     -0.6758665249546 * S_NumCatalogPurchases
997831    +          +    -0.24215201937497 * S_NumDealsPurchases
997832    +          +    -1.02736823453312 * S_NumWebVisitsMonth
997833    +          +    -2.91942343887972 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -2.67887309413165 * S_AcceptedCmpTotal + -1.18932806022128 *
S_Frq + -0.12550289494399 * S_Mnt + -1.04508919964747 * S_MntMeatProducts + -0.6758665249546 *
S_NumCatalogPurchases + -0.24215201937497 * S_NumDealsPurchases + -1.02736823453312 *
S_NumWebVisitsMonth + -2.91942343887972 * S_Recency ;
997834    +   H1x2_3  =    -1.59525226271453 * S_AcceptedCmpTotal
997835    +          +    -3.01360419340124 * S_Frq  +    -2.42130716453762 * S_Mnt
997836    +          +    -3.97854305593999 * S_MntMeatProducts
997837    +          +    -2.05331728407593 * S_NumCatalogPurchases
997838    +          +    -0.48841403720827 * S_NumDealsPurchases
997839    +          +     0.25411498590567 * S_NumWebVisitsMonth
997840    +          +     2.61356292629829 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -1.59525226271453 * S_AcceptedCmpTotal + -3.01360419340124 *
S_Frq + -2.42130716453762 * S_Mnt + -3.97854305593999 * S_MntMeatProducts + -2.05331728407593
* S_NumCatalogPurchases + -0.48841403720827 * S_NumDealsPurchases + 0.25411498590567 *
S_NumWebVisitsMonth + 2.61356292629829 * S_Recency ;
997841    +   H1x2_4  =    -0.23213568401478 * S_AcceptedCmpTotal
997842    +          +    -0.21547029102909 * S_Frq  +    -3.71365412498023 * S_Mnt
997843    +          +     -0.7071400781557 * S_MntMeatProducts
997844    +          +     1.20780208787296 * S_NumCatalogPurchases
997845    +          +    -0.58152407834402 * S_NumDealsPurchases
997846    +          +     2.15567925539399 * S_NumWebVisitsMonth
997847    +          +     0.04520696731554 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -0.23213568401478 * S_AcceptedCmpTotal + -0.21547029102909 *
S_Frq + -3.71365412498023 * S_Mnt + -0.7071400781557 * S_MntMeatProducts + 1.20780208787296 *
S_NumCatalogPurchases + -0.58152407834402 * S_NumDealsPurchases + 2.15567925539399 *
S_NumWebVisitsMonth + 0.04520696731554 * S_Recency ;
997848    +   H1x2_5  =    -0.77921338806706 * S_AcceptedCmpTotal
997849    +          +    -1.01600283852312 * S_Frq  +     0.74495825285389 * S_Mnt
997850    +          +    -1.07023271439686 * S_MntMeatProducts
997851    +          +     0.31952847185507 * S_NumCatalogPurchases
997852    +          +     0.97232557455358 * S_NumDealsPurchases
997853    +          +     1.40227284681788 * S_NumWebVisitsMonth
997854    +          +    -2.63740913159308 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -0.77921338806706 * S_AcceptedCmpTotal + -1.01600283852312 *
S_Frq + 0.74495825285389 * S_Mnt + -1.07023271439686 * S_MntMeatProducts + 0.31952847185507 *
S_NumCatalogPurchases + 0.97232557455358 * S_NumDealsPurchases + 1.40227284681788 *
S_NumWebVisitsMonth + -2.63740913159308 * S_Recency ;
997855    +   H1x2_1  = H1x2_1  +     0.27635646709847 * Marital_StatusDivorced
997856    +          +    -1.54860787754125 * Marital_StatusMarried
997857    +          +     3.07164083530731 * Marital_StatusSingle
997858    +          +    -0.82580381126768 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 0.27635646709847 * Marital_StatusDivorced +
-1.54860787754125 * Marital_StatusMarried + 3.07164083530731 * Marital_StatusSingle +
-0.82580381126768 * Marital_StatusTogether ;
997859    +   H1x2_2  = H1x2_2  +     0.41647124050716 * Marital_StatusDivorced
997860    +          +     1.93404037878036 * Marital_StatusMarried
997861    +          +    -1.33159061927866 * Marital_StatusSingle
997862    +          +    -1.07762979483959 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 0.41647124050716 * Marital_StatusDivorced +
1.93404037878036 * Marital_StatusMarried + -1.33159061927866 * Marital_StatusSingle +
-1.07762979483959 * Marital_StatusTogether ;
997863    +   H1x2_3  = H1x2_3  +     1.18723200575444 * Marital_StatusDivorced
997864    +          +    -1.20603561095549 * Marital_StatusMarried
997865    +          +     1.40927693179184 * Marital_StatusSingle
997866    +          +    -0.49407691558139 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 1.18723200575444 * Marital_StatusDivorced +
-1.20603561095549 * Marital_StatusMarried + 1.40927693179184 * Marital_StatusSingle +
-0.49407691558139 * Marital_StatusTogether ;
997867    +   H1x2_4  = H1x2_4  +     0.69596798616284 * Marital_StatusDivorced
997868    +          +     -0.1442863204197 * Marital_StatusMarried
997869    +          +     0.60523055771734 * Marital_StatusSingle
997870    +          +     0.73192299984342 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 0.69596798616284 * Marital_StatusDivorced +
-0.1442863204197 * Marital_StatusMarried + 0.60523055771734 * Marital_StatusSingle +
0.73192299984342 * Marital_StatusTogether ;
997871    +   H1x2_5  = H1x2_5  +      0.7891943859827 * Marital_StatusDivorced
997872    +          +     0.09024082077945 * Marital_StatusMarried
997873    +          +     0.46315219527454 * Marital_StatusSingle
997874    +          +    -0.88863370904771 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 0.7891943859827 * Marital_StatusDivorced +
0.09024082077945 * Marital_StatusMarried + 0.46315219527454 * Marital_StatusSingle +
-0.88863370904771 * Marital_StatusTogether ;
997875    +   H1x2_1  =    -1.73041096602206 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -1.73041096602206 + H1x2_1 ;
997876    +   H1x2_2  =     -0.9244515570647 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -0.9244515570647 + H1x2_2 ;
997877    +   H1x2_3  =     0.42257482856224 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = 0.42257482856224 + H1x2_3 ;
997878    +   H1x2_4  =    -1.17368520710394 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -1.17368520710394 + H1x2_4 ;
997879    +   H1x2_5  =    -0.96945494530554 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -0.96945494530554 + H1x2_5 ;
997880    +   H1x2_6  = 0;
MPRINT(EM_DIAGRAM):   H1x2_6 = 0;
997881    +   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 );
997882    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
997883    +   H1x2_1  = EXP(H1x2_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_1 = EXP(H1x2_1 - _MAX_);
997884    +   _SUM_ = _SUM_ + H1x2_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_1 ;
997885    +   H1x2_2  = EXP(H1x2_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_2 = EXP(H1x2_2 - _MAX_);
997886    +   _SUM_ = _SUM_ + H1x2_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_2 ;
997887    +   H1x2_3  = EXP(H1x2_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_3 = EXP(H1x2_3 - _MAX_);
997888    +   _SUM_ = _SUM_ + H1x2_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_3 ;
997889    +   H1x2_4  = EXP(H1x2_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_4 = EXP(H1x2_4 - _MAX_);
997890    +   _SUM_ = _SUM_ + H1x2_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_4 ;
997891    +   H1x2_5  = EXP(H1x2_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_5 = EXP(H1x2_5 - _MAX_);
997892    +   _SUM_ = _SUM_ + H1x2_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_5 ;
997893    +   H1x2_6  = EXP(H1x2_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_6 = EXP(H1x2_6 - _MAX_);
997894    +   _SUM_ = _SUM_ + H1x2_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_6 ;
997895    +   H1x2_1  = H1x2_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 / _SUM_;
997896    +   H1x2_2  = H1x2_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 / _SUM_;
997897    +   H1x2_3  = H1x2_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 / _SUM_;
997898    +   H1x2_4  = H1x2_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 / _SUM_;
997899    +   H1x2_5  = H1x2_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 / _SUM_;
997900    +   H1x2_6  = H1x2_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 / _SUM_;
997901    +END;
MPRINT(EM_DIAGRAM):   END;
997902    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
997903    +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
997904    +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
997905    +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
997906    +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
997907    +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
997908    +   H1x2_6  = .;
MPRINT(EM_DIAGRAM):   H1x2_6 = .;
997909    +END;
MPRINT(EM_DIAGRAM):   END;
997910    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
997911    +*** Writing the Node H1x3_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x3_ ;
997912    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
997913    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
997914    +   H1x3_1  =     0.60593493975552 * S_AcceptedCmpTotal
997915    +          +    -1.29329226371919 * S_Frq  +      0.9015843457146 * S_Mnt
997916    +          +    -1.02461177883701 * S_MntMeatProducts
997917    +          +     0.58245198640098 * S_NumCatalogPurchases
997918    +          +    -0.23780276328844 * S_NumDealsPurchases
997919    +          +     1.28202459687231 * S_NumWebVisitsMonth
997920    +          +     0.93713351024897 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 0.60593493975552 * S_AcceptedCmpTotal + -1.29329226371919 *
S_Frq + 0.9015843457146 * S_Mnt + -1.02461177883701 * S_MntMeatProducts + 0.58245198640098 *
S_NumCatalogPurchases + -0.23780276328844 * S_NumDealsPurchases + 1.28202459687231 *
S_NumWebVisitsMonth + 0.93713351024897 * S_Recency ;
997921    +   H1x3_2  =    -1.08797424998886 * S_AcceptedCmpTotal
997922    +          +     0.71996006602625 * S_Frq  +     0.26461282542951 * S_Mnt
997923    +          +     0.13875330330852 * S_MntMeatProducts
997924    +          +    -0.22996544763814 * S_NumCatalogPurchases
997925    +          +    -0.36599639965399 * S_NumDealsPurchases
997926    +          +     1.99081506581768 * S_NumWebVisitsMonth
997927    +          +    -0.27280347287018 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x3_2 = -1.08797424998886 * S_AcceptedCmpTotal + 0.71996006602625 *
S_Frq + 0.26461282542951 * S_Mnt + 0.13875330330852 * S_MntMeatProducts + -0.22996544763814 *
S_NumCatalogPurchases + -0.36599639965399 * S_NumDealsPurchases + 1.99081506581768 *
S_NumWebVisitsMonth + -0.27280347287018 * S_Recency ;
997928    +   H1x3_3  =     -0.3446411379442 * S_AcceptedCmpTotal
997929    +          +    -0.90527024017686 * S_Frq  +    -0.09374789575642 * S_Mnt
997930    +          +     0.94472031892058 * S_MntMeatProducts
997931    +          +     0.27511909854912 * S_NumCatalogPurchases
997932    +          +    -0.55526545857693 * S_NumDealsPurchases
997933    +          +    -0.61544688091302 * S_NumWebVisitsMonth
997934    +          +     1.92722528696298 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x3_3 = -0.3446411379442 * S_AcceptedCmpTotal + -0.90527024017686 *
S_Frq + -0.09374789575642 * S_Mnt + 0.94472031892058 * S_MntMeatProducts + 0.27511909854912 *
S_NumCatalogPurchases + -0.55526545857693 * S_NumDealsPurchases + -0.61544688091302 *
S_NumWebVisitsMonth + 1.92722528696298 * S_Recency ;
997935    +   H1x3_4  =     0.14447197723193 * S_AcceptedCmpTotal
997936    +          +     0.58502643519667 * S_Frq  +    -0.22179847560956 * S_Mnt
997937    +          +     1.61403840093612 * S_MntMeatProducts
997938    +          +    -0.34382576245292 * S_NumCatalogPurchases
997939    +          +     0.70213159483637 * S_NumDealsPurchases
997940    +          +    -0.39731145628175 * S_NumWebVisitsMonth
997941    +          +     0.76292573150858 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x3_4 = 0.14447197723193 * S_AcceptedCmpTotal + 0.58502643519667 *
S_Frq + -0.22179847560956 * S_Mnt + 1.61403840093612 * S_MntMeatProducts + -0.34382576245292 *
S_NumCatalogPurchases + 0.70213159483637 * S_NumDealsPurchases + -0.39731145628175 *
S_NumWebVisitsMonth + 0.76292573150858 * S_Recency ;
997942    +   H1x3_5  =     1.12424583212244 * S_AcceptedCmpTotal
997943    +          +     1.23224599851617 * S_Frq  +     0.66506653339362 * S_Mnt
997944    +          +    -0.33974847531229 * S_MntMeatProducts
997945    +          +     1.74350962571519 * S_NumCatalogPurchases
997946    +          +     0.41098583446208 * S_NumDealsPurchases
997947    +          +    -0.66305298743409 * S_NumWebVisitsMonth
997948    +          +    -1.08660974929691 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x3_5 = 1.12424583212244 * S_AcceptedCmpTotal + 1.23224599851617 *
S_Frq + 0.66506653339362 * S_Mnt + -0.33974847531229 * S_MntMeatProducts + 1.74350962571519 *
S_NumCatalogPurchases + 0.41098583446208 * S_NumDealsPurchases + -0.66305298743409 *
S_NumWebVisitsMonth + -1.08660974929691 * S_Recency ;
997949    +   H1x3_1  = H1x3_1  +     0.54739694564163 * Marital_StatusDivorced
997950    +          +    -0.29510060772746 * Marital_StatusMarried
997951    +          +     1.74124353401891 * Marital_StatusSingle
997952    +          +     0.09719439743973 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + 0.54739694564163 * Marital_StatusDivorced +
-0.29510060772746 * Marital_StatusMarried + 1.74124353401891 * Marital_StatusSingle +
0.09719439743973 * Marital_StatusTogether ;
997953    +   H1x3_2  = H1x3_2  +     0.45031904962773 * Marital_StatusDivorced
997954    +          +    -0.61203463567014 * Marital_StatusMarried
997955    +          +     1.95705767804118 * Marital_StatusSingle
997956    +          +     0.33872926096104 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 + 0.45031904962773 * Marital_StatusDivorced +
-0.61203463567014 * Marital_StatusMarried + 1.95705767804118 * Marital_StatusSingle +
0.33872926096104 * Marital_StatusTogether ;
997957    +   H1x3_3  = H1x3_3  +     1.36802060586393 * Marital_StatusDivorced
997958    +          +      1.7151906515185 * Marital_StatusMarried
997959    +          +     0.70376524929742 * Marital_StatusSingle
997960    +          +    -1.29423542782048 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_3 = H1x3_3 + 1.36802060586393 * Marital_StatusDivorced +
1.7151906515185 * Marital_StatusMarried + 0.70376524929742 * Marital_StatusSingle +
-1.29423542782048 * Marital_StatusTogether ;
997961    +   H1x3_4  = H1x3_4  +      1.5350754313919 * Marital_StatusDivorced
997962    +          +    -1.27088213578872 * Marital_StatusMarried
997963    +          +    -0.91253966593459 * Marital_StatusSingle
997964    +          +    -1.63570965011409 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_4 = H1x3_4 + 1.5350754313919 * Marital_StatusDivorced +
-1.27088213578872 * Marital_StatusMarried + -0.91253966593459 * Marital_StatusSingle +
-1.63570965011409 * Marital_StatusTogether ;
997965    +   H1x3_5  = H1x3_5  +    -1.18462010911271 * Marital_StatusDivorced
997966    +          +     -0.5308059771847 * Marital_StatusMarried
997967    +          +    -0.11208078645904 * Marital_StatusSingle
997968    +          +     0.12123408245196 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_5 = H1x3_5 + -1.18462010911271 * Marital_StatusDivorced +
-0.5308059771847 * Marital_StatusMarried + -0.11208078645904 * Marital_StatusSingle +
0.12123408245196 * Marital_StatusTogether ;
997969    +   H1x3_1  =    -0.26014877330113 + H1x3_1 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = -0.26014877330113 + H1x3_1 ;
997970    +   H1x3_2  =     1.39405484419099 + H1x3_2 ;
MPRINT(EM_DIAGRAM):   H1x3_2 = 1.39405484419099 + H1x3_2 ;
997971    +   H1x3_3  =       0.062236253986 + H1x3_3 ;
MPRINT(EM_DIAGRAM):   H1x3_3 = 0.062236253986 + H1x3_3 ;
997972    +   H1x3_4  =    -1.27980815366792 + H1x3_4 ;
MPRINT(EM_DIAGRAM):   H1x3_4 = -1.27980815366792 + H1x3_4 ;
997973    +   H1x3_5  =     -1.1798994280447 + H1x3_5 ;
MPRINT(EM_DIAGRAM):   H1x3_5 = -1.1798994280447 + H1x3_5 ;
997974    +   H1x3_6  = 0;
MPRINT(EM_DIAGRAM):   H1x3_6 = 0;
997975    +   _MAX_ = MAX (H1x3_1 , H1x3_2 , H1x3_3 , H1x3_4 , H1x3_5 , H1x3_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x3_1 , H1x3_2 , H1x3_3 , H1x3_4 , H1x3_5 , H1x3_6 );
997976    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
997977    +   H1x3_1  = EXP(H1x3_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_1 = EXP(H1x3_1 - _MAX_);
997978    +   _SUM_ = _SUM_ + H1x3_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_1 ;
997979    +   H1x3_2  = EXP(H1x3_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_2 = EXP(H1x3_2 - _MAX_);
997980    +   _SUM_ = _SUM_ + H1x3_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_2 ;
997981    +   H1x3_3  = EXP(H1x3_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_3 = EXP(H1x3_3 - _MAX_);
997982    +   _SUM_ = _SUM_ + H1x3_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_3 ;
997983    +   H1x3_4  = EXP(H1x3_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_4 = EXP(H1x3_4 - _MAX_);
997984    +   _SUM_ = _SUM_ + H1x3_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_4 ;
997985    +   H1x3_5  = EXP(H1x3_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_5 = EXP(H1x3_5 - _MAX_);
997986    +   _SUM_ = _SUM_ + H1x3_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_5 ;
997987    +   H1x3_6  = EXP(H1x3_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_6 = EXP(H1x3_6 - _MAX_);
997988    +   _SUM_ = _SUM_ + H1x3_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_6 ;
997989    +   H1x3_1  = H1x3_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 / _SUM_;
997990    +   H1x3_2  = H1x3_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 / _SUM_;
997991    +   H1x3_3  = H1x3_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_3 = H1x3_3 / _SUM_;
997992    +   H1x3_4  = H1x3_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_4 = H1x3_4 / _SUM_;
997993    +   H1x3_5  = H1x3_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_5 = H1x3_5 / _SUM_;
997994    +   H1x3_6  = H1x3_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_6 = H1x3_6 / _SUM_;
997995    +END;
MPRINT(EM_DIAGRAM):   END;
997996    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
997997    +   H1x3_1  = .;
MPRINT(EM_DIAGRAM):   H1x3_1 = .;
997998    +   H1x3_2  = .;
MPRINT(EM_DIAGRAM):   H1x3_2 = .;
997999    +   H1x3_3  = .;
MPRINT(EM_DIAGRAM):   H1x3_3 = .;
998000    +   H1x3_4  = .;
MPRINT(EM_DIAGRAM):   H1x3_4 = .;
998001    +   H1x3_5  = .;
MPRINT(EM_DIAGRAM):   H1x3_5 = .;
998002    +   H1x3_6  = .;
MPRINT(EM_DIAGRAM):   H1x3_6 = .;
998003    +END;
MPRINT(EM_DIAGRAM):   END;
998004    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
998005    +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
998006    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
998007    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
998008    +   H2x1_1  =     3.99029808661292 * H1x1_1  +    -3.83684783950239 * H1x1_2
998009    +          +    -2.41319598667027 * H1x1_3  +     2.06742099113284 * H1x1_4
998010    +          +    -2.36394302227369 * H1x1_5  +     3.54247817086581 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 3.99029808661292 * H1x1_1 + -3.83684783950239 * H1x1_2 +
-2.41319598667027 * H1x1_3 + 2.06742099113284 * H1x1_4 + -2.36394302227369 * H1x1_5 +
3.54247817086581 * H1x1_6 ;
998011    +   H2x1_2  =     -2.0723583712808 * H1x1_1  +     1.12235090404628 * H1x1_2
998012    +          +    -0.03290243005002 * H1x1_3  +    -0.06417927223452 * H1x1_4
998013    +          +    -0.34539694059136 * H1x1_5  +    -0.52107667797315 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -2.0723583712808 * H1x1_1 + 1.12235090404628 * H1x1_2 +
-0.03290243005002 * H1x1_3 + -0.06417927223452 * H1x1_4 + -0.34539694059136 * H1x1_5 +
-0.52107667797315 * H1x1_6 ;
998014    +   H2x1_3  =     1.49450378696022 * H1x1_1  +      -2.468244574983 * H1x1_2
998015    +          +    -0.36343212796601 * H1x1_3  +      1.4169785905238 * H1x1_4
998016    +          +    -1.80253819167441 * H1x1_5  +     0.60012496024445 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = 1.49450378696022 * H1x1_1 + -2.468244574983 * H1x1_2 +
-0.36343212796601 * H1x1_3 + 1.4169785905238 * H1x1_4 + -1.80253819167441 * H1x1_5 +
0.60012496024445 * H1x1_6 ;
998017    +   H2x1_4  =     4.08181488615859 * H1x1_1  +    -4.15992879198886 * H1x1_2
998018    +          +    -2.19496884111483 * H1x1_3  +     3.11143094120583 * H1x1_4
998019    +          +    -3.40405639905396 * H1x1_5  +     2.02399938887542 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 4.08181488615859 * H1x1_1 + -4.15992879198886 * H1x1_2 +
-2.19496884111483 * H1x1_3 + 3.11143094120583 * H1x1_4 + -3.40405639905396 * H1x1_5 +
2.02399938887542 * H1x1_6 ;
998020    +   H2x1_5  =    -2.80696695717904 * H1x1_1  +     3.69857556154733 * H1x1_2
998021    +          +     1.61258939701991 * H1x1_3  +    -0.34320433710838 * H1x1_4
998022    +          +     2.41467598917752 * H1x1_5  +    -4.36781665394854 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = -2.80696695717904 * H1x1_1 + 3.69857556154733 * H1x1_2 +
1.61258939701991 * H1x1_3 + -0.34320433710838 * H1x1_4 + 2.41467598917752 * H1x1_5 +
-4.36781665394854 * H1x1_6 ;
998023    +   H2x1_6  =     1.17835620997236 * H1x1_1  +     1.12816318935432 * H1x1_2
998024    +          +     1.70095032323284 * H1x1_3  +     0.81564117008927 * H1x1_4
998025    +          +     1.08987549759927 * H1x1_5  +    -0.71801946066256 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = 1.17835620997236 * H1x1_1 + 1.12816318935432 * H1x1_2 +
1.70095032323284 * H1x1_3 + 0.81564117008927 * H1x1_4 + 1.08987549759927 * H1x1_5 +
-0.71801946066256 * H1x1_6 ;
998026    +   H2x1_1  = H2x1_1  +     -1.2826842607194 * H1x2_1
998027    +          +     2.22412584447126 * H1x2_2  +     0.72628922978475 * H1x2_3
998028    +          +    -3.95557982334969 * H1x2_4  +    -2.04105313525341 * H1x2_5
998029    +          +     2.04509722582983 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -1.2826842607194 * H1x2_1 + 2.22412584447126 * H1x2_2
+ 0.72628922978475 * H1x2_3 + -3.95557982334969 * H1x2_4 + -2.04105313525341 * H1x2_5 +
2.04509722582983 * H1x2_6 ;
998030    +   H2x1_2  = H2x1_2  +     0.49261020621896 * H1x2_1
998031    +          +    -0.93299086546719 * H1x2_2  +     0.26477710017311 * H1x2_3
998032    +          +     1.09581866123251 * H1x2_4  +    -0.46857965033394 * H1x2_5
998033    +          +    -0.58594558422322 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + 0.49261020621896 * H1x2_1 + -0.93299086546719 * H1x2_2
+ 0.26477710017311 * H1x2_3 + 1.09581866123251 * H1x2_4 + -0.46857965033394 * H1x2_5 +
-0.58594558422322 * H1x2_6 ;
998034    +   H2x1_3  = H2x1_3  +    -0.65407007731655 * H1x2_1
998035    +          +     1.01682664175846 * H1x2_2  +     1.17960401469824 * H1x2_3
998036    +          +    -0.57751066508002 * H1x2_4  +     0.53760419760268 * H1x2_5
998037    +          +     0.11690916040928 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + -0.65407007731655 * H1x2_1 + 1.01682664175846 * H1x2_2
+ 1.17960401469824 * H1x2_3 + -0.57751066508002 * H1x2_4 + 0.53760419760268 * H1x2_5 +
0.11690916040928 * H1x2_6 ;
998038    +   H2x1_4  = H2x1_4  +    -1.88745579191294 * H1x2_1
998039    +          +     0.08794337871579 * H1x2_2  +     1.00647337881564 * H1x2_3
998040    +          +     0.02010547776794 * H1x2_4  +     -0.9674279317507 * H1x2_5
998041    +          +     2.96934196494413 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + -1.88745579191294 * H1x2_1 + 0.08794337871579 * H1x2_2
+ 1.00647337881564 * H1x2_3 + 0.02010547776794 * H1x2_4 + -0.9674279317507 * H1x2_5 +
2.96934196494413 * H1x2_6 ;
998042    +   H2x1_5  = H2x1_5  +      1.2829064187123 * H1x2_1
998043    +          +    -1.00339413616366 * H1x2_2  +     0.80005613751846 * H1x2_3
998044    +          +     1.89259049343074 * H1x2_4  +     0.60916287215789 * H1x2_5
998045    +          +    -2.39364002282682 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + 1.2829064187123 * H1x2_1 + -1.00339413616366 * H1x2_2
+ 0.80005613751846 * H1x2_3 + 1.89259049343074 * H1x2_4 + 0.60916287215789 * H1x2_5 +
-2.39364002282682 * H1x2_6 ;
998046    +   H2x1_6  = H2x1_6  +    -0.81495808949076 * H1x2_1
998047    +          +    -0.00823496050906 * H1x2_2  +     0.66082398024174 * H1x2_3
998048    +          +     1.06065684801326 * H1x2_4  +    -1.16933111622346 * H1x2_5
998049    +          +    -0.91996717495653 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 + -0.81495808949076 * H1x2_1 + -0.00823496050906 *
H1x2_2 + 0.66082398024174 * H1x2_3 + 1.06065684801326 * H1x2_4 + -1.16933111622346 * H1x2_5 +
-0.91996717495653 * H1x2_6 ;
998050    +   H2x1_1  = H2x1_1  +     -0.6489804084947 * H1x3_1
998051    +          +    -0.44608682782132 * H1x3_2  +    -0.52631519220433 * H1x3_3
998052    +          +     0.05973897946073 * H1x3_4  +     0.44587517212447 * H1x3_5
998053    +          +     0.53167866343669 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -0.6489804084947 * H1x3_1 + -0.44608682782132 * H1x3_2
+ -0.52631519220433 * H1x3_3 + 0.05973897946073 * H1x3_4 + 0.44587517212447 * H1x3_5 +
0.53167866343669 * H1x3_6 ;
998054    +   H2x1_2  = H2x1_2  +     0.24566122981429 * H1x3_1
998055    +          +    -0.41402912962362 * H1x3_2  +      2.0594253556608 * H1x3_3
998056    +          +    -0.58320740989612 * H1x3_4  +    -2.08321797810741 * H1x3_5
998057    +          +     0.09325988094727 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + 0.24566122981429 * H1x3_1 + -0.41402912962362 * H1x3_2
+ 2.0594253556608 * H1x3_3 + -0.58320740989612 * H1x3_4 + -2.08321797810741 * H1x3_5 +
0.09325988094727 * H1x3_6 ;
998058    +   H2x1_3  = H2x1_3  +    -0.30386162033576 * H1x3_1
998059    +          +    -0.39149635061779 * H1x3_2  +    -1.24745656988432 * H1x3_3
998060    +          +    -0.74308961556897 * H1x3_4  +    -0.52424837897845 * H1x3_5
998061    +          +    -0.43722126116548 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + -0.30386162033576 * H1x3_1 + -0.39149635061779 *
H1x3_2 + -1.24745656988432 * H1x3_3 + -0.74308961556897 * H1x3_4 + -0.52424837897845 * H1x3_5
+ -0.43722126116548 * H1x3_6 ;
998062    +   H2x1_4  = H2x1_4  +    -1.17147905515311 * H1x3_1
998063    +          +     0.52572462392428 * H1x3_2  +     0.00378456310616 * H1x3_3
998064    +          +    -0.02141108534986 * H1x3_4  +     0.66609276044861 * H1x3_5
998065    +          +     1.49998370890459 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + -1.17147905515311 * H1x3_1 + 0.52572462392428 * H1x3_2
+ 0.00378456310616 * H1x3_3 + -0.02141108534986 * H1x3_4 + 0.66609276044861 * H1x3_5 +
1.49998370890459 * H1x3_6 ;
998066    +   H2x1_5  = H2x1_5  +     0.91101541301155 * H1x3_1
998067    +          +    -1.16594573895683 * H1x3_2  +     0.19997446137786 * H1x3_3
998068    +          +    -0.75943200735258 * H1x3_4  +    -1.58620169109633 * H1x3_5
998069    +          +    -0.30128378921356 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + 0.91101541301155 * H1x3_1 + -1.16594573895683 * H1x3_2
+ 0.19997446137786 * H1x3_3 + -0.75943200735258 * H1x3_4 + -1.58620169109633 * H1x3_5 +
-0.30128378921356 * H1x3_6 ;
998070    +   H2x1_6  = H2x1_6  +     1.75854843594447 * H1x3_1
998071    +          +     0.30319854862296 * H1x3_2  +    -0.73946432700618 * H1x3_3
998072    +          +     1.37468838558857 * H1x3_4  +    -0.00997395846467 * H1x3_5
998073    +          +    -0.19152232249307 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 + 1.75854843594447 * H1x3_1 + 0.30319854862296 * H1x3_2
+ -0.73946432700618 * H1x3_3 + 1.37468838558857 * H1x3_4 + -0.00997395846467 * H1x3_5 +
-0.19152232249307 * H1x3_6 ;
998074    +   H2x1_1  =     0.45481579395551 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 0.45481579395551 + H2x1_1 ;
998075    +   H2x1_2  =    -2.37666191889476 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -2.37666191889476 + H2x1_2 ;
998076    +   H2x1_3  =    -0.00303747786799 + H2x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -0.00303747786799 + H2x1_3 ;
998077    +   H2x1_4  =     0.00817665450619 + H2x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 0.00817665450619 + H2x1_4 ;
998078    +   H2x1_5  =    -0.26930716006201 + H2x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = -0.26930716006201 + H2x1_5 ;
998079    +   H2x1_6  =    -1.62147466604007 + H2x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = -1.62147466604007 + H2x1_6 ;
998080    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
998081    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
998082    +   H2x1_1  = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
998083    +   H2x1_2  = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
998084    +   H2x1_3  = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_3 = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
998085    +   H2x1_4  = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_4 = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
998086    +   H2x1_5  = 1.0 / (1.0 + EXP(MIN( - H2x1_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_5 = 1.0 / (1.0 + EXP(MIN( - H2x1_5 , _EXP_BAR)));
998087    +   H2x1_6  = 1.0 / (1.0 + EXP(MIN( - H2x1_6 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_6 = 1.0 / (1.0 + EXP(MIN( - H2x1_6 , _EXP_BAR)));
998088    +END;
MPRINT(EM_DIAGRAM):   END;
998089    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
998090    +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
998091    +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
998092    +   H2x1_3  = .;
MPRINT(EM_DIAGRAM):   H2x1_3 = .;
998093    +   H2x1_4  = .;
MPRINT(EM_DIAGRAM):   H2x1_4 = .;
998094    +   H2x1_5  = .;
MPRINT(EM_DIAGRAM):   H2x1_5 = .;
998095    +   H2x1_6  = .;
MPRINT(EM_DIAGRAM):   H2x1_6 = .;
998096    +END;
MPRINT(EM_DIAGRAM):   END;
998097    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
998098    +*** Writing the Node H2x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x2_ ;
998099    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
998100    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
998101    +   H2x2_1  =     0.00129497064463 * H1x1_1  +    -1.04968224667608 * H1x1_2
998102    +          +    -1.32377424983581 * H1x1_3  +    -0.11361581517247 * H1x1_4
998103    +          +    -0.37590426822975 * H1x1_5  +    -1.19299469136178 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = 0.00129497064463 * H1x1_1 + -1.04968224667608 * H1x1_2 +
-1.32377424983581 * H1x1_3 + -0.11361581517247 * H1x1_4 + -0.37590426822975 * H1x1_5 +
-1.19299469136178 * H1x1_6 ;
998104    +   H2x2_2  =    -1.54715956973408 * H1x1_1  +      0.1149804500896 * H1x1_2
998105    +          +    -0.31622478778172 * H1x1_3  +     0.19815372068281 * H1x1_4
998106    +          +     1.54570900690762 * H1x1_5  +    -0.23243316190231 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = -1.54715956973408 * H1x1_1 + 0.1149804500896 * H1x1_2 +
-0.31622478778172 * H1x1_3 + 0.19815372068281 * H1x1_4 + 1.54570900690762 * H1x1_5 +
-0.23243316190231 * H1x1_6 ;
998107    +   H2x2_3  =    -1.69410933303344 * H1x1_1  +    -0.10842772109927 * H1x1_2
998108    +          +     0.73648318250282 * H1x1_3  +     0.68553115685533 * H1x1_4
998109    +          +    -0.47234449931244 * H1x1_5  +     1.14739016222951 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = -1.69410933303344 * H1x1_1 + -0.10842772109927 * H1x1_2 +
0.73648318250282 * H1x1_3 + 0.68553115685533 * H1x1_4 + -0.47234449931244 * H1x1_5 +
1.14739016222951 * H1x1_6 ;
998110    +   H2x2_4  =     0.36443547307479 * H1x1_1  +     0.49919653848293 * H1x1_2
998111    +          +     1.98377926340404 * H1x1_3  +    -0.55638731785874 * H1x1_4
998112    +          +     0.51877040984242 * H1x1_5  +     0.69001883670374 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = 0.36443547307479 * H1x1_1 + 0.49919653848293 * H1x1_2 +
1.98377926340404 * H1x1_3 + -0.55638731785874 * H1x1_4 + 0.51877040984242 * H1x1_5 +
0.69001883670374 * H1x1_6 ;
998113    +   H2x2_5  =     0.15664903927836 * H1x1_1  +     0.89801997414549 * H1x1_2
998114    +          +     0.04506031069937 * H1x1_3  +      1.4896420490685 * H1x1_4
998115    +          +     0.98365163988804 * H1x1_5  +     1.62881757963203 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x2_5 = 0.15664903927836 * H1x1_1 + 0.89801997414549 * H1x1_2 +
0.04506031069937 * H1x1_3 + 1.4896420490685 * H1x1_4 + 0.98365163988804 * H1x1_5 +
1.62881757963203 * H1x1_6 ;
998116    +   H2x2_6  =    -0.88991913364633 * H1x1_1  +     1.86575129972351 * H1x1_2
998117    +          +     0.76328070558448 * H1x1_3  +     0.63606778895588 * H1x1_4
998118    +          +    -1.11359575595575 * H1x1_5  +     1.10728303240553 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x2_6 = -0.88991913364633 * H1x1_1 + 1.86575129972351 * H1x1_2 +
0.76328070558448 * H1x1_3 + 0.63606778895588 * H1x1_4 + -1.11359575595575 * H1x1_5 +
1.10728303240553 * H1x1_6 ;
998119    +   H2x2_1  = H2x2_1  +     -1.7548673730828 * H1x2_1
998120    +          +     1.87853034076717 * H1x2_2  +     0.85492889927862 * H1x2_3
998121    +          +     2.26726704170325 * H1x2_4  +       0.268534161133 * H1x2_5
998122    +          +     1.21824749182936 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + -1.7548673730828 * H1x2_1 + 1.87853034076717 * H1x2_2
+ 0.85492889927862 * H1x2_3 + 2.26726704170325 * H1x2_4 + 0.268534161133 * H1x2_5 +
1.21824749182936 * H1x2_6 ;
998123    +   H2x2_2  = H2x2_2  +    -0.17868178338793 * H1x2_1
998124    +          +     1.40599171642169 * H1x2_2  +      1.3483797762751 * H1x2_3
998125    +          +    -0.89621237430335 * H1x2_4  +     0.47933617934751 * H1x2_5
998126    +          +    -0.70127450180732 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 + -0.17868178338793 * H1x2_1 + 1.40599171642169 * H1x2_2
+ 1.3483797762751 * H1x2_3 + -0.89621237430335 * H1x2_4 + 0.47933617934751 * H1x2_5 +
-0.70127450180732 * H1x2_6 ;
998127    +   H2x2_3  = H2x2_3  +     0.42928211521549 * H1x2_1
998128    +          +     0.12704381906566 * H1x2_2  +    -0.80979451254833 * H1x2_3
998129    +          +     -0.6754098317508 * H1x2_4  +     1.10456495865489 * H1x2_5
998130    +          +      0.1757517587226 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = H2x2_3 + 0.42928211521549 * H1x2_1 + 0.12704381906566 * H1x2_2
+ -0.80979451254833 * H1x2_3 + -0.6754098317508 * H1x2_4 + 1.10456495865489 * H1x2_5 +
0.1757517587226 * H1x2_6 ;
998131    +   H2x2_4  = H2x2_4  +    -1.58081641854024 * H1x2_1
998132    +          +     0.41044457304901 * H1x2_2  +      0.1555052899648 * H1x2_3
998133    +          +     1.44452911239916 * H1x2_4  +     0.51745105090469 * H1x2_5
998134    +          +      0.8693099398328 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = H2x2_4 + -1.58081641854024 * H1x2_1 + 0.41044457304901 * H1x2_2
+ 0.1555052899648 * H1x2_3 + 1.44452911239916 * H1x2_4 + 0.51745105090469 * H1x2_5 +
0.8693099398328 * H1x2_6 ;
998135    +   H2x2_5  = H2x2_5  +     1.04509064360988 * H1x2_1
998136    +          +     0.85304412821506 * H1x2_2  +     0.02488996279683 * H1x2_3
998137    +          +     0.91802038137174 * H1x2_4  +    -1.81721580205502 * H1x2_5
998138    +          +     0.11240659705231 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x2_5 = H2x2_5 + 1.04509064360988 * H1x2_1 + 0.85304412821506 * H1x2_2
+ 0.02488996279683 * H1x2_3 + 0.91802038137174 * H1x2_4 + -1.81721580205502 * H1x2_5 +
0.11240659705231 * H1x2_6 ;
998139    +   H2x2_6  = H2x2_6  +     0.05653875399544 * H1x2_1
998140    +          +     1.39275186399065 * H1x2_2  +     0.15742585211841 * H1x2_3
998141    +          +    -0.88823005597082 * H1x2_4  +    -0.29404620644608 * H1x2_5
998142    +          +     0.67151326645383 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x2_6 = H2x2_6 + 0.05653875399544 * H1x2_1 + 1.39275186399065 * H1x2_2
+ 0.15742585211841 * H1x2_3 + -0.88823005597082 * H1x2_4 + -0.29404620644608 * H1x2_5 +
0.67151326645383 * H1x2_6 ;
998143    +   H2x2_1  = H2x2_1  +     -0.3030053902263 * H1x3_1
998144    +          +     2.78883241587523 * H1x3_2  +      0.2423564112649 * H1x3_3
998145    +          +      0.7361422570599 * H1x3_4  +     1.00815416571126 * H1x3_5
998146    +          +    -0.76522554014331 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + -0.3030053902263 * H1x3_1 + 2.78883241587523 * H1x3_2
+ 0.2423564112649 * H1x3_3 + 0.7361422570599 * H1x3_4 + 1.00815416571126 * H1x3_5 +
-0.76522554014331 * H1x3_6 ;
998147    +   H2x2_2  = H2x2_2  +     0.82248064405342 * H1x3_1
998148    +          +    -0.44213525858661 * H1x3_2  +    -0.00950377945068 * H1x3_3
998149    +          +    -0.26973050484517 * H1x3_4  +    -1.64864877093803 * H1x3_5
998150    +          +     1.79694481340011 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 + 0.82248064405342 * H1x3_1 + -0.44213525858661 * H1x3_2
+ -0.00950377945068 * H1x3_3 + -0.26973050484517 * H1x3_4 + -1.64864877093803 * H1x3_5 +
1.79694481340011 * H1x3_6 ;
998151    +   H2x2_3  = H2x2_3  +     0.58931676503392 * H1x3_1
998152    +          +     -0.3196648688702 * H1x3_2  +    -1.13832101252701 * H1x3_3
998153    +          +    -0.03125400478011 * H1x3_4  +    -1.43718277665665 * H1x3_5
998154    +          +     0.43346153474351 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = H2x2_3 + 0.58931676503392 * H1x3_1 + -0.3196648688702 * H1x3_2
+ -1.13832101252701 * H1x3_3 + -0.03125400478011 * H1x3_4 + -1.43718277665665 * H1x3_5 +
0.43346153474351 * H1x3_6 ;
998155    +   H2x2_4  = H2x2_4  +    -1.21075206873547 * H1x3_1
998156    +          +    -1.44059265356325 * H1x3_2  +    -0.70572923760085 * H1x3_3
998157    +          +    -0.50514975818712 * H1x3_4  +    -1.15362557643796 * H1x3_5
998158    +          +     0.11633831354046 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = H2x2_4 + -1.21075206873547 * H1x3_1 + -1.44059265356325 *
H1x3_2 + -0.70572923760085 * H1x3_3 + -0.50514975818712 * H1x3_4 + -1.15362557643796 * H1x3_5
+ 0.11633831354046 * H1x3_6 ;
998159    +   H2x2_5  = H2x2_5  +     1.62708810169671 * H1x3_1
998160    +          +     -0.1172779578507 * H1x3_2  +    -2.68535586251402 * H1x3_3
998161    +          +     0.70733149959662 * H1x3_4  +     0.37426620231353 * H1x3_5
998162    +          +    -0.51535580022884 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x2_5 = H2x2_5 + 1.62708810169671 * H1x3_1 + -0.1172779578507 * H1x3_2
+ -2.68535586251402 * H1x3_3 + 0.70733149959662 * H1x3_4 + 0.37426620231353 * H1x3_5 +
-0.51535580022884 * H1x3_6 ;
998163    +   H2x2_6  = H2x2_6  +     1.13688712518045 * H1x3_1
998164    +          +      0.5035299609214 * H1x3_2  +    -0.37315357246579 * H1x3_3
998165    +          +     2.28435302728227 * H1x3_4  +    -0.86692347925858 * H1x3_5
998166    +          +     1.02261478089015 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x2_6 = H2x2_6 + 1.13688712518045 * H1x3_1 + 0.5035299609214 * H1x3_2 +
-0.37315357246579 * H1x3_3 + 2.28435302728227 * H1x3_4 + -0.86692347925858 * H1x3_5 +
1.02261478089015 * H1x3_6 ;
998167    +   H2x2_1  =      2.1294351501339 + H2x2_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = 2.1294351501339 + H2x2_1 ;
998168    +   H2x2_2  =     1.02351873226689 + H2x2_2 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = 1.02351873226689 + H2x2_2 ;
998169    +   H2x2_3  =    -2.24013423062467 + H2x2_3 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = -2.24013423062467 + H2x2_3 ;
998170    +   H2x2_4  =    -0.75459686616452 + H2x2_4 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = -0.75459686616452 + H2x2_4 ;
998171    +   H2x2_5  =    -0.02288525069595 + H2x2_5 ;
MPRINT(EM_DIAGRAM):   H2x2_5 = -0.02288525069595 + H2x2_5 ;
998172    +   H2x2_6  =     0.85009535412356 + H2x2_6 ;
MPRINT(EM_DIAGRAM):   H2x2_6 = 0.85009535412356 + H2x2_6 ;
998173    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
998174    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
998175    +   H2x2_1  = 1.0 / (1.0 + EXP(MIN( - H2x2_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x2_1 = 1.0 / (1.0 + EXP(MIN( - H2x2_1 , _EXP_BAR)));
998176    +   H2x2_2  = 1.0 / (1.0 + EXP(MIN( - H2x2_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x2_2 = 1.0 / (1.0 + EXP(MIN( - H2x2_2 , _EXP_BAR)));
998177    +   H2x2_3  = 1.0 / (1.0 + EXP(MIN( - H2x2_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x2_3 = 1.0 / (1.0 + EXP(MIN( - H2x2_3 , _EXP_BAR)));
998178    +   H2x2_4  = 1.0 / (1.0 + EXP(MIN( - H2x2_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x2_4 = 1.0 / (1.0 + EXP(MIN( - H2x2_4 , _EXP_BAR)));
998179    +   H2x2_5  = 1.0 / (1.0 + EXP(MIN( - H2x2_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x2_5 = 1.0 / (1.0 + EXP(MIN( - H2x2_5 , _EXP_BAR)));
998180    +   H2x2_6  = 1.0 / (1.0 + EXP(MIN( - H2x2_6 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x2_6 = 1.0 / (1.0 + EXP(MIN( - H2x2_6 , _EXP_BAR)));
998181    +END;
MPRINT(EM_DIAGRAM):   END;
998182    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
998183    +   H2x2_1  = .;
MPRINT(EM_DIAGRAM):   H2x2_1 = .;
998184    +   H2x2_2  = .;
MPRINT(EM_DIAGRAM):   H2x2_2 = .;
998185    +   H2x2_3  = .;
MPRINT(EM_DIAGRAM):   H2x2_3 = .;
998186    +   H2x2_4  = .;
MPRINT(EM_DIAGRAM):   H2x2_4 = .;
998187    +   H2x2_5  = .;
MPRINT(EM_DIAGRAM):   H2x2_5 = .;
998188    +   H2x2_6  = .;
MPRINT(EM_DIAGRAM):   H2x2_6 = .;
998189    +END;
MPRINT(EM_DIAGRAM):   END;
998190    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
998191    +*** Writing the Node H3x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H3x1_ ;
998192    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
998193    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
998194    +   H3x1_1  =     0.47414908117619 * H2x1_1  +    -0.48225593618443 * H2x1_2
998195    +          +     -2.1415546083933 * H2x1_3  +      0.1865992678808 * H2x1_4
998196    +          +     0.00905592746992 * H2x1_5  +    -0.19906676643855 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = 0.47414908117619 * H2x1_1 + -0.48225593618443 * H2x1_2 +
-2.1415546083933 * H2x1_3 + 0.1865992678808 * H2x1_4 + 0.00905592746992 * H2x1_5 +
-0.19906676643855 * H2x1_6 ;
998197    +   H3x1_2  =    -1.49254004953978 * H2x1_1  +     0.31026207162707 * H2x1_2
998198    +          +     1.32646563211977 * H2x1_3  +    -1.28309969785351 * H2x1_4
998199    +          +     0.25756953254945 * H2x1_5  +    -0.76411205087595 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = -1.49254004953978 * H2x1_1 + 0.31026207162707 * H2x1_2 +
1.32646563211977 * H2x1_3 + -1.28309969785351 * H2x1_4 + 0.25756953254945 * H2x1_5 +
-0.76411205087595 * H2x1_6 ;
998200    +   H3x1_3  =    -1.92735673513935 * H2x1_1  +    -0.43375763993013 * H2x1_2
998201    +          +     0.43682333912422 * H2x1_3  +    -1.82129068789797 * H2x1_4
998202    +          +     0.29218264240002 * H2x1_5  +    -1.24122940235749 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = -1.92735673513935 * H2x1_1 + -0.43375763993013 * H2x1_2 +
0.43682333912422 * H2x1_3 + -1.82129068789797 * H2x1_4 + 0.29218264240002 * H2x1_5 +
-1.24122940235749 * H2x1_6 ;
998203    +   H3x1_4  =    -1.64752963128738 * H2x1_1  +     0.57434247193535 * H2x1_2
998204    +          +    -0.25025779129033 * H2x1_3  +     0.22582895723418 * H2x1_4
998205    +          +     1.06280616805567 * H2x1_5  +     1.46523065565448 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   H3x1_4 = -1.64752963128738 * H2x1_1 + 0.57434247193535 * H2x1_2 +
-0.25025779129033 * H2x1_3 + 0.22582895723418 * H2x1_4 + 1.06280616805567 * H2x1_5 +
1.46523065565448 * H2x1_6 ;
998206    +   H3x1_5  =     1.12463631894495 * H2x1_1  +     0.41116194812841 * H2x1_2
998207    +          +      0.7487833097767 * H2x1_3  +     1.30777439715556 * H2x1_4
998208    +          +    -2.30583381860923 * H2x1_5  +    -0.45051702468841 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   H3x1_5 = 1.12463631894495 * H2x1_1 + 0.41116194812841 * H2x1_2 +
0.7487833097767 * H2x1_3 + 1.30777439715556 * H2x1_4 + -2.30583381860923 * H2x1_5 +
-0.45051702468841 * H2x1_6 ;
998209    +   H3x1_6  =     0.83619385924948 * H2x1_1  +    -1.59549231556809 * H2x1_2
998210    +          +     1.90180728278943 * H2x1_3  +     1.56404469490888 * H2x1_4
998211    +          +    -0.13088910369985 * H2x1_5  +     0.29690402913896 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   H3x1_6 = 0.83619385924948 * H2x1_1 + -1.59549231556809 * H2x1_2 +
1.90180728278943 * H2x1_3 + 1.56404469490888 * H2x1_4 + -0.13088910369985 * H2x1_5 +
0.29690402913896 * H2x1_6 ;
998212    +   H3x1_1  = H3x1_1  +    -0.92346745353313 * H2x2_1
998213    +          +    -0.03076503207993 * H2x2_2  +    -0.80770265916018 * H2x2_3
998214    +          +     2.13033820393108 * H2x2_4  +     1.57799583499821 * H2x2_5
998215    +          +    -0.96381430690961 * H2x2_6 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = H3x1_1 + -0.92346745353313 * H2x2_1 + -0.03076503207993 *
H2x2_2 + -0.80770265916018 * H2x2_3 + 2.13033820393108 * H2x2_4 + 1.57799583499821 * H2x2_5 +
-0.96381430690961 * H2x2_6 ;
998216    +   H3x1_2  = H3x1_2  +     -2.8908441376485 * H2x2_1
998217    +          +    -0.73955819678817 * H2x2_2  +     0.25644336633912 * H2x2_3
998218    +          +    -0.21076687801122 * H2x2_4  +    -0.80525890625048 * H2x2_5
998219    +          +    -1.37757472119786 * H2x2_6 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = H3x1_2 + -2.8908441376485 * H2x2_1 + -0.73955819678817 * H2x2_2
+ 0.25644336633912 * H2x2_3 + -0.21076687801122 * H2x2_4 + -0.80525890625048 * H2x2_5 +
-1.37757472119786 * H2x2_6 ;
998220    +   H3x1_3  = H3x1_3  +     1.68560264985255 * H2x2_1
998221    +          +    -1.80659127572232 * H2x2_2  +    -0.40798847098834 * H2x2_3
998222    +          +    -0.09427467518365 * H2x2_4  +       1.932433481179 * H2x2_5
998223    +          +    -1.58203174336227 * H2x2_6 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = H3x1_3 + 1.68560264985255 * H2x2_1 + -1.80659127572232 * H2x2_2
+ -0.40798847098834 * H2x2_3 + -0.09427467518365 * H2x2_4 + 1.932433481179 * H2x2_5 +
-1.58203174336227 * H2x2_6 ;
998224    +   H3x1_4  = H3x1_4  +    -0.79131921613464 * H2x2_1
998225    +          +    -0.94708168667993 * H2x2_2  +     0.95842423067232 * H2x2_3
998226    +          +    -1.35896085667273 * H2x2_4  +      0.3130528184907 * H2x2_5
998227    +          +     1.21364725785316 * H2x2_6 ;
MPRINT(EM_DIAGRAM):   H3x1_4 = H3x1_4 + -0.79131921613464 * H2x2_1 + -0.94708168667993 *
H2x2_2 + 0.95842423067232 * H2x2_3 + -1.35896085667273 * H2x2_4 + 0.3130528184907 * H2x2_5 +
1.21364725785316 * H2x2_6 ;
998228    +   H3x1_5  = H3x1_5  +    -1.65282990431545 * H2x2_1
998229    +          +     0.41456756806825 * H2x2_2  +    -2.00212916702729 * H2x2_3
998230    +          +    -1.19874789923068 * H2x2_4  +     0.20234859862481 * H2x2_5
998231    +          +     0.95942799624748 * H2x2_6 ;
MPRINT(EM_DIAGRAM):   H3x1_5 = H3x1_5 + -1.65282990431545 * H2x2_1 + 0.41456756806825 * H2x2_2
+ -2.00212916702729 * H2x2_3 + -1.19874789923068 * H2x2_4 + 0.20234859862481 * H2x2_5 +
0.95942799624748 * H2x2_6 ;
998232    +   H3x1_6  = H3x1_6  +    -0.52526666332317 * H2x2_1
998233    +          +      0.3234256287518 * H2x2_2  +    -0.93766150263141 * H2x2_3
998234    +          +    -1.81398789003556 * H2x2_4  +    -0.15539533140563 * H2x2_5
998235    +          +     0.23144688198135 * H2x2_6 ;
MPRINT(EM_DIAGRAM):   H3x1_6 = H3x1_6 + -0.52526666332317 * H2x2_1 + 0.3234256287518 * H2x2_2
+ -0.93766150263141 * H2x2_3 + -1.81398789003556 * H2x2_4 + -0.15539533140563 * H2x2_5 +
0.23144688198135 * H2x2_6 ;
998236    +   H3x1_1  =     0.24609695545564 + H3x1_1 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = 0.24609695545564 + H3x1_1 ;
998237    +   H3x1_2  =    -0.92728333066333 + H3x1_2 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = -0.92728333066333 + H3x1_2 ;
998238    +   H3x1_3  =     1.63161482532776 + H3x1_3 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = 1.63161482532776 + H3x1_3 ;
998239    +   H3x1_4  =     0.39161062590357 + H3x1_4 ;
MPRINT(EM_DIAGRAM):   H3x1_4 = 0.39161062590357 + H3x1_4 ;
998240    +   H3x1_5  =     0.01171760508297 + H3x1_5 ;
MPRINT(EM_DIAGRAM):   H3x1_5 = 0.01171760508297 + H3x1_5 ;
998241    +   H3x1_6  =    -0.72522461279376 + H3x1_6 ;
MPRINT(EM_DIAGRAM):   H3x1_6 = -0.72522461279376 + H3x1_6 ;
998242    +   H3x1_1  = SIN(H3x1_1 );
MPRINT(EM_DIAGRAM):   H3x1_1 = SIN(H3x1_1 );
998243    +   H3x1_2  = SIN(H3x1_2 );
MPRINT(EM_DIAGRAM):   H3x1_2 = SIN(H3x1_2 );
998244    +   H3x1_3  = SIN(H3x1_3 );
MPRINT(EM_DIAGRAM):   H3x1_3 = SIN(H3x1_3 );
998245    +   H3x1_4  = SIN(H3x1_4 );
MPRINT(EM_DIAGRAM):   H3x1_4 = SIN(H3x1_4 );
998246    +   H3x1_5  = SIN(H3x1_5 );
MPRINT(EM_DIAGRAM):   H3x1_5 = SIN(H3x1_5 );
998247    +   H3x1_6  = SIN(H3x1_6 );
MPRINT(EM_DIAGRAM):   H3x1_6 = SIN(H3x1_6 );
998248    +END;
MPRINT(EM_DIAGRAM):   END;
998249    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
998250    +   H3x1_1  = .;
MPRINT(EM_DIAGRAM):   H3x1_1 = .;
998251    +   H3x1_2  = .;
MPRINT(EM_DIAGRAM):   H3x1_2 = .;
998252    +   H3x1_3  = .;
MPRINT(EM_DIAGRAM):   H3x1_3 = .;
998253    +   H3x1_4  = .;
MPRINT(EM_DIAGRAM):   H3x1_4 = .;
998254    +   H3x1_5  = .;
MPRINT(EM_DIAGRAM):   H3x1_5 = .;
998255    +   H3x1_6  = .;
MPRINT(EM_DIAGRAM):   H3x1_6 = .;
998256    +END;
MPRINT(EM_DIAGRAM):   END;
998257    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
998258    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
998259    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
998260    +
998261    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
998262    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
998263    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
998264    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
998265    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
998266    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
998267    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
998268    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
998269    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
998270    +end;
MPRINT(EM_DIAGRAM):   end;
998271    +else do;
MPRINT(EM_DIAGRAM):   else do;
998272    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
998273    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
998274    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
998275    +   end;
MPRINT(EM_DIAGRAM):   end;
998276    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
998277    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
998278    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
998279    +   end;
MPRINT(EM_DIAGRAM):   end;
998280    +   else do;
MPRINT(EM_DIAGRAM):   else do;
998281    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
998282    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
998283    +   end;
MPRINT(EM_DIAGRAM):   end;
998284    +end;
MPRINT(EM_DIAGRAM):   end;
998285    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
998286    +   P_DepVar1  =      0.9799962964316 * H3x1_1  +     1.34210953311734 * H3x1_2
998287    +          +      2.0189927751579 * H3x1_3  +      1.8409060954552 * H3x1_4
998288    +          +    -3.17705772371323 * H3x1_5  +    -2.12623562549552 * H3x1_6 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.9799962964316 * H3x1_1 + 1.34210953311734 * H3x1_2 +
2.0189927751579 * H3x1_3 + 1.8409060954552 * H3x1_4 + -3.17705772371323 * H3x1_5 +
-2.12623562549552 * H3x1_6 ;
998289    +   P_DepVar1  =     1.17636518592867 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 1.17636518592867 + P_DepVar1 ;
998290    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
998291    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
998292    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
998293    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
998294    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
998295    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
998296    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
998297    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
998298    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
998299    +END;
MPRINT(EM_DIAGRAM):   END;
998300    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
998301    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
998302    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
998303    +END;
MPRINT(EM_DIAGRAM):   END;
998304    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
998305    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
998306    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
998307    +END;
MPRINT(EM_DIAGRAM):   END;
998308    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
998309    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
998310    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
998311    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
998312    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
998313    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
998314    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
998315    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
998316    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
998317    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
998318    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
998319    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
998320    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
998321    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
998322    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
998323    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
998324    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
998325    +END;
MPRINT(EM_DIAGRAM):   END;
998326    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
998327    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
998328    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
998329    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
998330     run;
 
NOTE: DATA STEP view saved on file EMWS8.AUTONEURAL35_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.META3_VALIDATE.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
998331     quit;
998332     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
998333     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
998334     * AutoNeural35: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * AutoNeural35: Computing metadata for TRAIN data;
998335     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
 
NOTE: View EMWS8.AUTONEURAL35_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural35\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS8.AutoNeural35_TRAIN out=_tempAdvisor
noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS8.AutoNeural35_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS8.AutoNeural35_TRAIN out=WORK.M1T4IWE5
noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1T4IWE5;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20
INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M1T4IWE5(keep=name type length label format formatl
formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then format = strip(format)!!strip(put(formatl,
best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd,
best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then informat =
strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl,
best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1T4IWE5;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M1T4IWE5;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M1TRWTL5 NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1TRWTL5;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M1TRWTL5;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2T0MA3J(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M1TRWTL5;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1TRWTL5;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32
FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M1TRWTL5;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN"
"MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO"
"QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" "YEAR" "YYMMDD" "YYMON"
"YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD"
"EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" ))
formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype =
"DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" ))
formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT"
"NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB"
"SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType =
"DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then
level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA',
'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W',
'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_
('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL',
'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT',
'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1TRWTL5;
MPRINT(EMADVISECOLUMNS):   set WORK.M1TRWTL5;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL=
"Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY=
"Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower limit" UPPERLIMIT=
"Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL=
"Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Meta3_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Meta3_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural35_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT
LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "AutoNeural35";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("P_DEPVAR1") creator = "AutoNeural35";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR1") creator = "AutoNeural35";
MPRINT(EM_DIAGRAM):   when("P_DEPVAR0") creator = "AutoNeural35";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR0") creator = "AutoNeural35";
MPRINT(EM_DIAGRAM):   when("F_DEPVAR") creator = "AutoNeural35";
MPRINT(EM_DIAGRAM):   when("I_DEPVAR") creator = "AutoNeural35";
MPRINT(EM_DIAGRAM):   when("U_DEPVAR") creator = "AutoNeural35";
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "AutoNeural35";
MPRINT(EM_DIAGRAM):   when("DEPVAR") model = "AutoNeural35";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * AutoNeural35: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
998647     data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
998648     set EMWS8.AutoNeural35_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural35_EMINFO;
998649     where DATA='AutoNeural35' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='AutoNeural35' and KEY ^in('DECDATA', 'DECMETA',
'IMPORTANCE', 'MODEL');
998650     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.AUTONEURAL35_EMINFO.
      WHERE (DATA='AutoNeural35') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
998651     data EMWS8.AutoNeural35_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural35_EMINFO;
998652     length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
998653     input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
998654     cards;
MPRINT(EM_DIAGRAM):   cards;
 
NOTE: The data set EMWS8.AUTONEURAL35_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   run;
998658     run;
998659     data EMWS8.AutoNeural35_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural35_EMINFO;
998660     set EMWS8.AutoNeural35_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural35_EMINFO WORK.MODELTEMP_INFO;
998661     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set EMWS8.AUTONEURAL35_EMINFO.
NOTE: There were 0 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS8.AUTONEURAL35_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
998662     proc sort data = EMWS8.AutoNeural35_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.AutoNeural35_EMINFO NOTHREADS;
998663     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
998664     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set EMWS8.AUTONEURAL35_EMINFO.
NOTE: The data set EMWS8.AUTONEURAL35_EMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
998665     proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
998666     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
998667     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.FIMPORT_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 1 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
998668     proc sort data = EMWS8.AutoNeural35_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS8.AutoNeural35_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
998669     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
998670     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 3 observations read from the data set EMWS8.AUTONEURAL35_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
998671     data EMWS8.AutoNeural35_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural35_EMINFO;
998672     merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
998673     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
998674     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 3 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS8.AUTONEURAL35_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
998675     proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
998676     delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
998677     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
998678     quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
NOTE: View EMWS8.AUTONEURAL35_TRAIN.VIEW used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
NOTE: View EMWS8.AUTONEURAL35_VALIDATE.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "28. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "20.19 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Report Log
Date:                28. April 2016
Time:                20.19 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O0V4MZ5I
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural35\EMREPORT.out" encoding="UTF-8"
NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O0V4MZ5I new;
MPRINT(EM_DIAGRAM):   run;
998702     proc sort data=EMWS8.AutoNeural35_OUTFIT nodupkey;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS8.AutoNeural35_OUTFIT nodupkey;
998703     by _NAME_;
MPRINT(EM_DIAGRAM):   by _NAME_;
998704     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set EMWS8.AUTONEURAL35_OUTFIT.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set EMWS8.AUTONEURAL35_OUTFIT has 2 observations and 36 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
998705     data EMWS8.AutoNeural35_EMOUTFIT(rename=(_NAME_=TARGET));
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural35_EMOUTFIT(rename=(_NAME_=TARGET));
998706     set EMWS8.AutoNeural35_OUTFIT(where=(_NAME_ eq 'OVERALL'));
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural35_OUTFIT(where=(_NAME_ eq 'OVERALL'));
998707     label _NAME_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _NAME_ = "Target";
998708     if _NAME_='OVERALL' then _NAME_='DepVar';
MPRINT(EM_DIAGRAM):   if _NAME_='OVERALL' then _NAME_='DepVar';
998709     drop _ITER_;
MPRINT(EM_DIAGRAM):   drop _ITER_;
998710     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.AUTONEURAL35_OUTFIT.
      WHERE _NAME_='OVERALL';
NOTE: The data set EMWS8.AUTONEURAL35_EMOUTFIT has 1 observations and 35 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
998711     data EMWS8.AutoNeural35_EMOUTFIT;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural35_EMOUTFIT;
998712     set EMWS8.AutoNeural35_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural35_EMOUTFIT;
998713     length TargetLabel $200;
MPRINT(EM_DIAGRAM):   length TargetLabel $200;
998714     label targetLabel = "%sysfunc(sasmsg(sashelp.dmine, meta_targetlabel_vlabel,
998714   ! NOQUOTE))";
MPRINT(EM_DIAGRAM):   label targetLabel = "Target Label";
998715     if upcase(TARGET) eq "DEPVAR" then TargetLabel = 'DepVar';
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TargetLabel = 'DepVar';
998716     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.AUTONEURAL35_EMOUTFIT.
NOTE: The data set EMWS8.AUTONEURAL35_EMOUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
998717     proc sort data=EMWS8.AutoNeural35_EMREPORTFIT nothreads;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS8.AutoNeural35_EMREPORTFIT nothreads;
998718     by TARGET;
MPRINT(EM_DIAGRAM):   by TARGET;
998719     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 21 observations read from the data set EMWS8.AUTONEURAL35_EMREPORTFIT.
NOTE: The data set EMWS8.AUTONEURAL35_EMREPORTFIT has 21 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
998720     %let _EMwarndup = 0;
998721     %let _EMtargetdup =;
998722     %let _EMASEtargetdup =;
998723     data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
998724     set EMWS8.AutoNeural35_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural35_EMOUTFIT;
998725     if .<_ASE_<0.000001 then do;
MPRINT(EM_DIAGRAM):   if .<_ASE_<0.000001 then do;
998726     call symput('_EMwarndup', '1');
MPRINT(EM_DIAGRAM):   call symput('_EMwarndup', '1');
998727     call symput('_EMtargetdup', target);
MPRINT(EM_DIAGRAM):   call symput('_EMtargetdup', target);
998728     call symput('_EMASEtargetdup', put(_ASE_, best.));
MPRINT(EM_DIAGRAM):   call symput('_EMASEtargetdup', put(_ASE_, best.));
998729     end;
MPRINT(EM_DIAGRAM):   end;
998730     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.AUTONEURAL35_EMOUTFIT.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
998731     proc sort data=EMWS8.Meta3_CMeta_TRAIN out=WORK.SUBSETINMETA;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS8.Meta3_CMeta_TRAIN out=WORK.SUBSETINMETA;
998732     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
998733     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 36 observations read from the data set EMWS8.META3_CMETA_TRAIN.
NOTE: The data set WORK.SUBSETINMETA has 36 observations and 20 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
998734     proc sort data=EMWS8.AutoNeural35_VariableSet out=WORK.SUBSETVARSET(keep=NAME
998734   ! REPORT);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural35_VariableSet
out=WORK.SUBSETVARSET(keep=NAME REPORT);
998735     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
998736     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set EMWS8.AUTONEURAL35_VARIABLESET.
NOTE: The data set WORK.SUBSETVARSET has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
998737     data WORK.ASSESS_META;
MPRINT(EM_DIAGRAM):   data WORK.ASSESS_META;
998738     merge WORK.SUBSETINMETA WORK.SUBSETVARSET;
MPRINT(EM_DIAGRAM):   merge WORK.SUBSETINMETA WORK.SUBSETVARSET;
998739     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
998740     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 36 observations read from the data set WORK.SUBSETINMETA.
NOTE: There were 34 observations read from the data set WORK.SUBSETVARSET.
NOTE: The data set WORK.ASSESS_META has 36 observations and 20 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
998741     data EM_temp_assessMeta;
MPRINT(EM_DIAGRAM):    data EM_temp_assessMeta;
998742     set EMWS8.AutoNeural35_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural35_CMeta_TRAIN;
998743     where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION', 'ASSESS', 'COST')
998743   ! ;
MPRINT(EM_DIAGRAM):   where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION',
'ASSESS', 'COST');
998744     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set EMWS8.AUTONEURAL35_CMETA_TRAIN.
      WHERE role in ('ASSESS', 'CLASSIFICATION', 'COST', 'DECISION', 'PREDICT', 'RESIDUAL');
NOTE: The data set WORK.EM_TEMP_ASSESSMETA has 8 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
998745     data EM_temp_assessdata;
MPRINT(EM_DIAGRAM):    data EM_temp_assessdata;
998746     set EMWS8.AutoNeural35_TRAIN(keep=
998747     F_DepVar
998748     I_DepVar
998749     P_DepVar0
998750     P_DepVar1
998751     R_DepVar0
998752     R_DepVar1
998753     U_DepVar
998754     _WARN_
998755     DepVar
998756     );
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural35_TRAIN(keep= F_DepVar I_DepVar P_DepVar0 P_DepVar1
R_DepVar0 R_DepVar1 U_DepVar _WARN_ DepVar );
998757     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2374 observations read from the data set EMWS8.PART_TRAIN.
NOTE: View EMWS8.AUTONEURAL35_TRAIN.VIEW used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
 
NOTE: There were 2374 observations read from the data set EMWS8.META3_TRAIN.
NOTE: There were 2374 observations read from the data set EMWS8.AUTONEURAL35_TRAIN.
NOTE: The data set WORK.EM_TEMP_ASSESSDATA has 2374 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.07 seconds
      cpu time            0.07 seconds
 
 
MPRINT(EM_DIAGRAM):    proc freq data=EM_temp_assessdata noprint;
MPRINT(EM_DIAGRAM):   table I_DepVar*F_DepVar / out = WORK.AutoNeural35_0NXEG2K nocol norow
outpct;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.AutoNeural35_0NXEG2K;
MPRINT(EM_DIAGRAM):   length _TYPE_ $10 DATAROLE TARGET $32 TARGETLABEL $200 FROM INTO $32
CORRECTTEXT $40 ;
MPRINT(EM_DIAGRAM):   label _TYPE_ = "Outcome Type";
MPRINT(EM_DIAGRAM):   label DATAROLE = "Data Role";
MPRINT(EM_DIAGRAM):   label TARGET = "Target Variable";
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   label FROM = "Target";
MPRINT(EM_DIAGRAM):   label INTO = "Outcome";
MPRINT(EM_DIAGRAM):   label PCT_ROW = "Target Percentage";
MPRINT(EM_DIAGRAM):   label PCT_COL = "Outcome Percentage";
MPRINT(EM_DIAGRAM):   label COUNT = "Frequency Count";
MPRINT(EM_DIAGRAM):   label PERCENT = "Total Percentage";
MPRINT(EM_DIAGRAM):   label CORRECTTEXT = "Correct Text";
MPRINT(EM_DIAGRAM):   label CORRECT = "Correct";
MPRINT(EM_DIAGRAM):   set WORK.AutoNeural35_0NXEG2K(rename=(F_DepVar=FROM I_DepVar=INTO));
MPRINT(EM_DIAGRAM):   retain _TYPE_ 'PREDICTION' DATAROLE "TRAIN" TARGET "DepVar";
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TARGETLABEL = 'DepVar';
MPRINT(EM_DIAGRAM):   if FROM eq INTO then do;
MPRINT(EM_DIAGRAM):   CORRECT = 0;
MPRINT(EM_DIAGRAM):   CORRECTTEXT="Correct";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   CORRECT = 1;
MPRINT(EM_DIAGRAM):   CORRECTTEXT="Incorrect";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural35_EMCLASSIFICATION;
MPRINT(EM_DIAGRAM):   set WORK.AutoNeural35_0NXEG2K;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   set WORK.AutoNeural35_0NXEG2K;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.MISCREPORT(drop=INTO FROM _TYPE_);
MPRINT(EM_DIAGRAM):   set WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   length MISC $12;
MPRINT(EM_DIAGRAM):   if FROM='1' and INTO='1' then MISC='TRUEEVENT';
MPRINT(EM_DIAGRAM):   else if FROM='1' and INTO ne '1' then MISC='FALSENEVENT';
MPRINT(EM_DIAGRAM):   else if FROM ne '1' and INTO='1' then MISC='FALSEEVENT';
MPRINT(EM_DIAGRAM):   else if FROM ne'1' and INTO ne '1' then MISC='TRUENEVENT';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.MISCREPORT nothreads;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc summary data=WORK.MISCREPORT NWAY;
MPRINT(EM_DIAGRAM):   output out=WORK.MISCCOUNT(drop=_FREQ_ _TYPE_) SUM=COUNT;
MPRINT(EM_DIAGRAM):   CLASS MISC;
MPRINT(EM_DIAGRAM):   VAR COUNT;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc transpose data=WORK.MISCCOUNT out=WORK.MISCREPORT(drop=_NAME_
_LABEL_);
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   ID MISC;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural35_EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   length TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TARGETLABEL = 'DepVar';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data ASSESS_REPORTMETA;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural35_VariableSet;
MPRINT(EM_DIAGRAM):   where REPORT='Y';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename temp catalog 'sashelp.emassmt.em_assess.source';
MPRINT(EM_DIAGRAM):   filename temp;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural35_DepVar_DM;
MPRINT(EM_DIAGRAM):   where _TYPE_="TARGET";
MPRINT(EM_DIAGRAM):   call symput('ASSMT_EVENT', strip(event));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):
MPRINT(EM_ASSESS):   data _ea_tmpdata;
MPRINT(EM_ASSESS):   set EM_temp_assessdata;
MPRINT(EM_ASSESS):   _tmpfreqvar_=1;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_CHECKEMSETINIT):   DATA _NULL_;
MPRINT(EM_CHECKEMSETINIT):   EM_SETINIT = 'N';
MPRINT(EM_CHECKEMSETINIT):   IF SYSPROD('PRODNUM50') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM448') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM102') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM103') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   CALL SYMPUT('EM_SETINIT', EM_SETINIT);
MPRINT(EM_CHECKEMSETINIT):   RUN;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Reading in reporting data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET ASSESS_REPORTMETA END = EOF;
MPRINT(EM_ASSESS):   IF TYPE = "C" OR UPCASE (LEVEL) IN ("NOMINAL", "BINARY" , "ORDINAL") THEN
DO;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) NE UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   NUMCTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTC" || LEFT (PUT (NUMCTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "C");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF UPCASE(NAME) NE UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   NUMNTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTN" || LEFT (PUT (NUMNTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMNTOREPORT", NUMNTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMCTOREPORT", NUMCTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMTOREPORT", SUM (NUMNTOREPORT, NUMCTOREPORT));
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   PROC DMDB DATA = _ea_tmpdata VAROUT = VAROUT DMDBCAT = _D CLASSOUT =
_ASSMT_CLASSOUT;
MPRINT(EM_ASSESS):   CLASS F_DepVar ;
 
MPRINT(EM_ASSESS):   VAR P_DepVar1 _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_;
MPRINT(EM_ASSESS):   RUN ;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   PROC SORT DATA = _ASSMT_CLASSOUT;
MPRINT(EM_ASSESS):   BY NAME;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _auxeventname (keep = __event__) ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ...FLAG0_1 = ..... TARGET IS 0, 1 & EVENT = 1;
 
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   length __event__ $ 32;
MPRINT(EM_ASSESS):   RETAIN FLAG0_1 1 NUM1 . NUM0 . __event__ "_missing_" ;
 
MPRINT(EM_ASSESS):   SET _ASSMT_CLASSOUT END = EOF;
MPRINT(EM_ASSESS):   BY NAME;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ....... LEVEL = BINARY OR NOMINAL OR ORDINAL;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   IF UPCASE(NAME) = UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   CUMFREQ + FREQUENCY;
MPRINT(EM_ASSESS):   IF LEVEL NE "." THEN DO;
MPRINT(EM_ASSESS):   N1 + 1;
MPRINT(EM_ASSESS):   IF (NRAW NE 0 AND NRAW NE 1) OR TYPE NE "N" OR "" > " " THEN FLAG0_1 = 0;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ......................... IF EVENT NE BLANK;
MPRINT(EM_ASSESS):   * ....................LEVEL IS CHAR VAR ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   IF UPCASE("1") = UPCASE(LEVEL) THEN DO;
MPRINT(EM_ASSESS):   NUM1 = FREQUENCY;
MPRINT(EM_ASSESS):   IF TYPE = "C" THEN do;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("EVENTVALUERAW", CRAW );
MPRINT(EM_ASSESS):   __event__ = craw;
MPRINT(EM_ASSESS):   end;
MPRINT(EM_ASSESS):   ELSE do;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("EVENTVALUERAW", NRAW );
MPRINT(EM_ASSESS):   __event__ = nraw;
MPRINT(EM_ASSESS):   end;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF LAST.NAME THEN DO;
 
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * .............. IN NOMINAL CASE, NEED TO GROUP ALL '0' ;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   NUM0 = SUM (CUMFREQ, - NUM1);
MPRINT(EM_ASSESS):   IF NUM0 < 0 THEN NUM0 = 0;
MPRINT(EM_ASSESS):   IF NUM1 = . THEN NUM1 = 0;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUM0", NUM0 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUM1", NUM1);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PNUM1", NUM1 / CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PNUM0", (CUMFREQ - NUM1) / CUMFREQ);
MPRINT(EM_ASSESS):   IF TYPE = "C" THEN DO;
MPRINT(EM_ASSESS):   FLAG0_1 = 0;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "C" );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF "" = " " THEN DO;
MPRINT(EM_ASSESS):   IF "1" NE "1" THEN FLAG0_1 = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "N" );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ................... IF TYPE = N;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("FLAG0_1", FLAG0_1 );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..................IF LAST.NAME ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ...............IF LEVEL NE '.' ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * .............. IF NAME = TARGET;
MPRINT(EM_ASSESS):   ELSE IF "" > " " AND UPCASE(NAME) = UPCASE("") THEN DO;
MPRINT(EM_ASSESS):   NUMDECISIONS + 1;
MPRINT(EM_ASSESS):   LEVEL = TRANSLATE (LEVEL, "_", "'", "_", '"');
MPRINT(EM_ASSESS):   CALL SYMPUTX ("D_LABEL" || LEFT (PUT (NUMDECISIONS, 3.)), LEVEL );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..................... ELSE IF UPCASE;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   output _auxeventname;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMOBS", CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMDECISIONS", NUMDECISIONS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET VAROUT END = EOF;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) = UPCASE ("P_DepVar1") THEN DO;
MPRINT(EM_ASSESS):   IF N = 0 THEN DO;
MPRINT(EM_ASSESS):   PUT //// "          Warning: All posterior probabilities are missing
values ";
MPRINT(EM_ASSESS):   PUT ///;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("ALLMISS", 1);
MPRINT(EM_ASSESS):   STOP;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("ALLMISS", 0);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB", MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB", MAX);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("DIFF", MAX - MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NMISSPROB", NMISS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF UPCASE (NAME) = UPCASE ("_tmpfreqvar_") THEN DO;
MPRINT(EM_ASSESS):   AUXMIN = MIN - INT (MIN);
MPRINT(EM_ASSESS):   AUXMAX = MAX - INT (MAX);
MPRINT(EM_ASSESS):   IF AUXMIN > 0 OR AUXMAX > 0 THEN CALL SYMPUTX ("USEWEIGHT", "Y");
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("USEWEIGHT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _ANY0;
MPRINT(EM_ASSESS):   SET _ea_tmpdata (KEEP = F_DepVar P_DepVar1 _tmpfreqvar_ );
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................... No Formats;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF LEFT ( F_DepVar ) = "1" THEN NTARGET = 1;
MPRINT(EM_ASSESS):   ELSE NTARGET = 0;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .............. Before proc summary of binary case;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC SUMMARY DATA = _ANY0 (KEEP = P_DepVar1 NTARGET _tmpfreqvar_ WHERE =
(NTARGET > . )) NWAY MISSING;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   CLASS P_DepVar1 ;
MPRINT(EM_ASSESS):   VAR NTARGET ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   OUTPUT OUT = ANYSUM (DROP = _TYPE_) MEAN = _MEANTARGET _MEANFREQVAR ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... Main Data Set Processing, Binary case;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK (KEEP = BASECAPC BASECAP __EVENT__ BASEEVENTS
BASEGAIN BASELIFT BASERESP BASERESPC BESTCAP BESTCAPC BESTGAIN BESTLIFT BESTLIFTC
BESTNUMEVENTS BESTRESP BESTRESPC BIN CBASELIFT C_LIFT C_P_CAPT_RESP C_P_RESP GAIN LIFT MAXPROB
MINPROB MNPROB NUMNONRESP NUMOBS NUMRESP PERCENTILE P_CAPT_RESP P_RESP ) WORK._TEMPSCOREDIST
(KEEP = BIN LOWERPROB UPPERPROB EVENTVALUE SCR_NUMEVENTS MODELSCORE SCR_NUMNONEVENTS RANGE
NUMOBSINGROUP PERCOBSINGROUP C_PERCOBSINGROUP SCR_P_EVENTS SCR_CP_EVENTS SCR_P_NONEVENTS
SCR_CP_NONEVENTS SCR_MNPROB SCR_MINPROB SCR_MAXPROB ) ;
 
MPRINT(EM_ASSESS):   SET ANYSUM END = EOF;
 
MPRINT(EM_ASSESS):   IF _N_ = 1 THEN SET _AUXEVENTNAME;
 
MPRINT(EM_ASSESS):   RETAIN MINPROB1 - MINPROB20 1 MAXPROB1 - MAXPROB20 0 MNPROB1 - MNPROB20 0
NUMOBS1 - NUMOBS20 0 NUMRESP1 - NUMRESP20 0 TRUEPOS1 - TRUEPOS100 0 TRUENEG1 - TRUENEG100 0
FALSEPOS1 - FALSEPOS100 0 FALSENEG1 - FALSENEG100 0 EVENTS1 - EVENTS100 NONEVENTS1 -
NONEVENTS100 0 FIRSTIN1 - FIRSTIN100 . LASTIN1 - LASTIN100 . RESPRATE 0.151221567 _NEVENTS 359
_NNONEVENTS 2015 TARGET "NTARGET" ;
MPRINT(EM_ASSESS):   ARRAY MINPROBS (20) MINPROB1 - MINPROB20;
MPRINT(EM_ASSESS):   ARRAY MAXPROBS (20) MAXPROB1 - MAXPROB20;
MPRINT(EM_ASSESS):   ARRAY MNPROBS (20) MNPROB1 - MNPROB20;
MPRINT(EM_ASSESS):   ARRAY NUMOBSS (20) NUMOBS1 - NUMOBS20;
MPRINT(EM_ASSESS):   ARRAY NUMRESPS (20) NUMRESP1 - NUMRESP20;
MPRINT(EM_ASSESS):   ARRAY TRUEPOSX (100) TRUEPOS1 - TRUEPOS100;
MPRINT(EM_ASSESS):   ARRAY FALSEPOSX (100) FALSEPOS1 - FALSEPOS100;
MPRINT(EM_ASSESS):   ARRAY FALSENEGX (100) FALSENEG1 - FALSENEG100;
MPRINT(EM_ASSESS):   ARRAY TRUENEGX (100) TRUENEG1 - TRUENEG100;
MPRINT(EM_ASSESS):   ARRAY _EVENTS (100) EVENTS1 - EVENTS100;
MPRINT(EM_ASSESS):   ARRAY NONEVENTS (100) NONEVENTS1 - NONEVENTS100;
MPRINT(EM_ASSESS):   ARRAY FIRSTIN (100) FIRSTIN1 - FIRSTIN100;
MPRINT(EM_ASSESS):   ARRAY LASTIN (100) LASTIN1 - LASTIN100;
MPRINT(EM_ASSESS):   RETAIN SCR_MNPROB1 - SCR_MNPROB100 0 SCR_MINPROB1 - SCR_MINPROB100 1
SCR_MAXPROB1 - SCR_MAXPROB100 0;
MPRINT(EM_ASSESS):   ARRAY SCR_MNPROBS (100) SCR_MNPROB1 - SCR_MNPROB100;
MPRINT(EM_ASSESS):   ARRAY SCR_MINPROBS (100) SCR_MINPROB1 - SCR_MINPROB100;
MPRINT(EM_ASSESS):   ARRAY SCR_MAXPROBS (100) SCR_MAXPROB1 - SCR_MAXPROB100;
MPRINT(EM_ASSESS):   DROP SCR_MINPROB1 - SCR_MINPROB100 SCR_MAXPROB1 - SCR_MAXPROB100
SCR_MNPROB1 - SCR_MNPROB100 ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...... Area For 8 Financials ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF _MEANTARGET = . THEN _MEANTARGET = RESPRATE;
MPRINT(EM_ASSESS):   DROP N1 _K SUMWEIGHTS ;
MPRINT(EM_ASSESS):   SUMWEIGHTS = 1;
 
MPRINT(EM_ASSESS):   DO _K = 1 TO CEIL (_FREQ_);
MPRINT(EM_ASSESS):   IF _K = CEIL (_FREQ_) THEN DO;
MPRINT(EM_ASSESS):   IF _FREQ_ < CEIL (_FREQ_) THEN _WEIGHT = _FREQ_ - FLOOR (_FREQ_);
MPRINT(EM_ASSESS):   ELSE _WEIGHT = 1;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE _WEIGHT = 1;
MPRINT(EM_ASSESS):   N1 + _WEIGHT;
MPRINT(EM_ASSESS):   NTARGET = _MEANTARGET ;
MPRINT(EM_ASSESS):   DECILE = MIN (20, CEIL (N1 * 20 / 2374));
MPRINT(EM_ASSESS):   MINPROBS ( DECILE) = MIN (MINPROBS ( DECILE), P_DepVar1 );
MPRINT(EM_ASSESS):   MAXPROBS ( DECILE) = MAX (MAXPROBS ( DECILE), P_DepVar1 );
MPRINT(EM_ASSESS):   MNPROBS ( DECILE) = SUM (MNPROBS ( DECILE), P_DepVar1 * _WEIGHT);
MPRINT(EM_ASSESS):   NUMOBSS ( DECILE) = NUMOBSS ( DECILE) + _WEIGHT;
MPRINT(EM_ASSESS):   NUMRESPS ( DECILE) = NUMRESPS ( DECILE) + _MEANTARGET * _WEIGHT;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ outside of do loop, Area for final ROC;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   RANKDELTA = (ROUND ( _FREQ_ ) + 1) / 2;
MPRINT(EM_ASSESS):   RANK = UNTIEDRANK + RANKDELTA;
MPRINT(EM_ASSESS):   DROP RANK ;
MPRINT(EM_ASSESS):   SUMRANK1 + RANK * ROUND (_MEANTARGET * _FREQ_, .0000001);
MPRINT(EM_ASSESS):   UNTIEDRANK + ROUND (_FREQ_, .00000001);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Area For ROC Curve;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DO _K = 1 TO 100;
MPRINT(EM_ASSESS):   IF P_DepVar1 * 100 >= _K THEN DO;
MPRINT(EM_ASSESS):   TRUEPOSX ( _K ) + _FREQ_ * _MEANTARGET ;
MPRINT(EM_ASSESS):   FALSEPOSX ( _K ) + _FREQ_ * (1 - _MEANTARGET) ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   TRUENEGX ( _K ) + _FREQ_ * ( 1 - _MEANTARGET) ;
MPRINT(EM_ASSESS):   FALSENEGX ( _K ) + _FREQ_ * _MEANTARGET ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   SLOT = MIN (MAX (CEIL (P_DepVar1 * 100), 1), 100) ;
MPRINT(EM_ASSESS):   DROP SLOT;
MPRINT(EM_ASSESS):   FIRSTIN ( SLOT ) = MIN ( FIRSTIN ( SLOT ), P_DepVar1);
MPRINT(EM_ASSESS):   LASTIN ( SLOT ) = MAX ( LASTIN ( SLOT ), P_DepVar1);
MPRINT(EM_ASSESS):   _EVENTS ( SLOT) = _EVENTS ( SLOT) + _FREQ_ * _MEANTARGET;
MPRINT(EM_ASSESS):   NONEVENTS ( SLOT) = NONEVENTS ( SLOT) + _FREQ_ * (1 - _MEANTARGET);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ START OF OUTDIST IN BINARY CASE MAIN DATA STEP ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   SCR_MNPROBS ( SLOT ) = SUM (SCR_MNPROBS (SLOT), P_DepVar1 * _FREQ_ );
MPRINT(EM_ASSESS):   SCR_MINPROBS ( SLOT ) = MIN (SCR_MINPROBS (SLOT), P_DepVar1 );
MPRINT(EM_ASSESS):   SCR_MAXPROBS ( SLOT ) = MAX (SCR_MAXPROBS (SLOT), P_DepVar1 );
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ End of Outdist in Binary case main DATA STEP ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   PUT //;
MPRINT(EM_ASSESS):   DO K = 1 TO 20;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LENGTH EVENTVALUE $ 32;
MPRINT(EM_ASSESS):   RETAIN EVENTVALUE "1" ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ......... Start of EOF area of BINARY processing of main data set ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SUMRANK1", SUMRANK1);
MPRINT(EM_ASSESS):   LENGTH DATAROLE $ 10;
MPRINT(EM_ASSESS):   RETAIN DATAROLE "TRAIN" ;
MPRINT(EM_ASSESS):   RETAIN OVLMIN 0.0000633568 OVLMAX 0.9999836662 ;
MPRINT(EM_ASSESS):   DROP OVLMIN OVLMAX ;
MPRINT(EM_ASSESS):   C_NUMOBS = 0;
MPRINT(EM_ASSESS):   C_NUM_RESP = 0;
MPRINT(EM_ASSESS):   C_NUM_NONRESP = 0;
MPRINT(EM_ASSESS):   C_P_RESP = 0;
MPRINT(EM_ASSESS):   P_CAPT_RESP = 0;
MPRINT(EM_ASSESS):   C_P_CAPT_RESP = 0;
MPRINT(EM_ASSESS):   PREVIOUSPROFIT = 0;
MPRINT(EM_ASSESS):   MAXPROFIT = 0;
MPRINT(EM_ASSESS):   _KS_BIN_ = 0;
MPRINT(EM_ASSESS):   DROP _KS_BIN_;
MPRINT(EM_ASSESS):   AVGNUMRESP = _NEVENTS / 20;
MPRINT(EM_ASSESS):   BASERESP = 100 * RESPRATE;
MPRINT(EM_ASSESS):   BASERESPC = BASERESP;
MPRINT(EM_ASSESS):   BASECAP = 100 / 20;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................Start OF Gainschart = Outranks Area;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   _KS_BIN_PROB = 0;
MPRINT(EM_ASSESS):   DO GROUP = 20 TO 1 BY -1;
 
MPRINT(EM_ASSESS):   BASECAPC + BASECAP;
MPRINT(EM_ASSESS):   PERCENTILE = GROUP * (100 / 20);
MPRINT(EM_ASSESS):   MINPROB = MINPROBS ( GROUP);
MPRINT(EM_ASSESS):   MAXPROB = MAXPROBS ( GROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB" || LEFT ( PUT (GROUP, 3.)), MINPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB" || LEFT ( PUT (GROUP, 3.)), MAXPROB);
MPRINT(EM_ASSESS):   NUMOBS = NUMOBSS ( GROUP);
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN MNPROB = MNPROBS ( GROUP) / NUMOBS;
MPRINT(EM_ASSESS):   ELSE MNPROB = .;
MPRINT(EM_ASSESS):   C_NUMOBS = SUM (NUMOBS, C_NUMOBS);
MPRINT(EM_ASSESS):   NUMRESP = NUMRESPS ( GROUP);
MPRINT(EM_ASSESS):   NUMNONRESP = NUMOBS - NUMRESP;
MPRINT(EM_ASSESS):   C_AVGNUM_RESP + AVGNUMRESP;
MPRINT(EM_ASSESS):   IF C_NUMOBS <= _NEVENTS THEN DO;
MPRINT(EM_ASSESS):   BESTNUMEVENTS = NUMOBS;
MPRINT(EM_ASSESS):   BESTCAPC = C_NUMOBS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   BASEEVENTS = _NEVENTS / 20;
MPRINT(EM_ASSESS):   BASENONEVENTS = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   FLAG + 1;
MPRINT(EM_ASSESS):   DROP FLAG;
MPRINT(EM_ASSESS):   BESTNUMEVENTS = _NEVENTS - C_NUMOBS + NUMOBS;
MPRINT(EM_ASSESS):   IF FLAG > 1 THEN BESTNUMEVENTS = 0;
MPRINT(EM_ASSESS):   BESTCAPC = 100;
MPRINT(EM_ASSESS):   IF C_NUMOBS - _NEVENTS <= NUMOBS THEN DO;
MPRINT(EM_ASSESS):   BASEEVENTS = C_NUMOBS - _NEVENTS;
MPRINT(EM_ASSESS):   BASENONEVENTS = NUMOBS - C_NUMOBS + _NEVENTS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BASEEVENTS = 0;
MPRINT(EM_ASSESS):   BASENONEVENTS = NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   BESTCAP = BESTNUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   BESTLIFT = BESTNUMEVENTS / AVGNUMRESP;
MPRINT(EM_ASSESS):   C_BESTNUMEVENTS + BESTNUMEVENTS;
MPRINT(EM_ASSESS):   DROP C_BESTNUMEVENTS;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN BESTLIFTC = C_BESTNUMEVENTS / (_NEVENTS / 2374 *
C_NUMOBS);
MPRINT(EM_ASSESS):   ELSE BESTLIFTC = .;
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BESTRESP = BESTNUMEVENTS * 100 / NUMOBS;
MPRINT(EM_ASSESS):   P_RESP = NUMRESP * 100 / NUMOBS;
MPRINT(EM_ASSESS):   P_NONRESP = NUMNONRESP * 100 / NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTRESP = .;
MPRINT(EM_ASSESS):   P_RESP = .;
MPRINT(EM_ASSESS):   P_NONRESP = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BESTRESPC = C_BESTNUMEVENTS * 100 / C_NUMOBS;
MPRINT(EM_ASSESS):   BESTGAIN = MAX (0, ((C_BESTNUMEVENTS / C_NUMOBS ) / ( AVGNUMRESP /
NUMOBS) - 1) * 100);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTRESPC = .;
MPRINT(EM_ASSESS):   BESTGAIN = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF NUMNONRESP > 0 THEN ODDS = NUMRESP / NUMNONRESP;
MPRINT(EM_ASSESS):   ELSE ODDS = .;
MPRINT(EM_ASSESS):   C_NUM_RESP = SUM (C_NUM_RESP , NUMRESP );
MPRINT(EM_ASSESS):   C_NUM_NONRESP = SUM (C_NUM_NONRESP, NUMNONRESP );
MPRINT(EM_ASSESS):   IF C_NUM_NONRESP > 0 THEN C_ODDS = C_NUM_RESP / C_NUM_NONRESP;
MPRINT(EM_ASSESS):   ELSE C_ODDS = .;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   C_P_RESP = C_NUM_RESP * 100 / C_NUMOBS;
MPRINT(EM_ASSESS):   GAIN = ABS(100 * (((C_NUM_RESP / C_NUMOBS ) / (_NEVENTS / 2374)) - 1));
MPRINT(EM_ASSESS):   BASEGAIN = 100 * (( (C_AVGNUM_RESP / C_NUMOBS) / ( AVGNUMRESP / NUMOBS))
- 1);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   GAIN = .;
MPRINT(EM_ASSESS):   BASEGAIN = .;
MPRINT(EM_ASSESS):   C_P_RESP = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF BASEGAIN <= 0 THEN BASEGAIN = 0;
MPRINT(EM_ASSESS):   P_CAPT_RESP = NUMRESP * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   P_CAPT_NONRESP = NUMNONRESP * 100 / ( 2374 - _NEVENTS);
MPRINT(EM_ASSESS):   C_P_CAPT_RESP = C_NUM_RESP * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   C_P_CAPT_NONRESP = C_NUM_NONRESP * 100 / ( 2374 - _NEVENTS);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Area For Binned KS in Outranks area;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   _DIFFERENCE = C_P_CAPT_RESP - C_P_CAPT_NONRESP ;
MPRINT(EM_ASSESS):   IF _KS_BIN_ < _DIFFERENCE THEN DO;
MPRINT(EM_ASSESS):   _KS_BIN_ = _DIFFERENCE;
MPRINT(EM_ASSESS):   _KS_BIN_PROB = MINPROB + (MAXPROB - MINPROB) / 2 ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LIFT = P_RESP * .01 / RESPRATE ;
MPRINT(EM_ASSESS):   C_LIFT = C_P_RESP * .01 / RESPRATE;
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BASELIFT = AVGNUMRESP / ( RESPRATE * NUMOBS );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE BASELIFT = .;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN CBASELIFT = C_AVGNUM_RESP / (RESPRATE * C_NUMOBS);
MPRINT(EM_ASSESS):   ELSE CBASELIFT = .;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ WITHIN DO LOOP FOR OUTRANKS;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   BIN = 20 + 1 - GROUP;
MPRINT(EM_ASSESS):   PERCENTILE = BIN * (100 / 20);
MPRINT(EM_ASSESS):   B_C_P_RESP = PERCENTILE;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPRANK ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................ END OF GAINSCHART = OUTRANKS AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROFITGROUP" , MAXPROFITGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROFIT" , MAXPROFIT );
MPRINT(EM_ASSESS):   KS_ABSDIFF = 0 ;
MPRINT(EM_ASSESS):   MINPRECTPR = 9999;
MPRINT(EM_ASSESS):   Y0 = 1 - RESPRATE;
MPRINT(EM_ASSESS):   Y1 = RESPRATE;
MPRINT(EM_ASSESS):   MAXMUTUAL = 0;
MPRINT(EM_ASSESS):   DROP MAXMUTUAL KSPROB Y0 Y1 KS_ABSDIFF MINPRECTPR;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .....................About to start Processing Outroc ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................... Finished Processing Outroc ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .............. Outdist ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   BIN = 20 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS96 - EVENTS100 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS96 - NONEVENTS100);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB96 -
SCR_MNPROB100) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB96 - SCR_MINPROB100) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB96 - SCR_MAXPROB100) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 20;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 19 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS91 - EVENTS95 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS91 - NONEVENTS95);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB91 -
SCR_MNPROB95) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB91 - SCR_MINPROB95) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB91 - SCR_MAXPROB95) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 19;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 18 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS86 - EVENTS90 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS86 - NONEVENTS90);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB86 -
SCR_MNPROB90) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB86 - SCR_MINPROB90) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB86 - SCR_MAXPROB90) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 18;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 17 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS81 - EVENTS85 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS81 - NONEVENTS85);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB81 -
SCR_MNPROB85) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB81 - SCR_MINPROB85) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB81 - SCR_MAXPROB85) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 17;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 16 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS76 - EVENTS80 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS76 - NONEVENTS80);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB76 -
SCR_MNPROB80) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB76 - SCR_MINPROB80) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB76 - SCR_MAXPROB80) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 16;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 15 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS71 - EVENTS75 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS71 - NONEVENTS75);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB71 -
SCR_MNPROB75) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB71 - SCR_MINPROB75) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB71 - SCR_MAXPROB75) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 15;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 14 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS66 - EVENTS70 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS66 - NONEVENTS70);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB66 -
SCR_MNPROB70) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB66 - SCR_MINPROB70) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB66 - SCR_MAXPROB70) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 14;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 13 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS61 - EVENTS65 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS61 - NONEVENTS65);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB61 -
SCR_MNPROB65) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB61 - SCR_MINPROB65) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB61 - SCR_MAXPROB65) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 13;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 12 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS56 - EVENTS60 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS56 - NONEVENTS60);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB56 -
SCR_MNPROB60) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB56 - SCR_MINPROB60) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB56 - SCR_MAXPROB60) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 12;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 11 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS51 - EVENTS55 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS51 - NONEVENTS55);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB51 -
SCR_MNPROB55) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB51 - SCR_MINPROB55) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB51 - SCR_MAXPROB55) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 11;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 10 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS46 - EVENTS50 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS46 - NONEVENTS50);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB46 -
SCR_MNPROB50) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB46 - SCR_MINPROB50) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB46 - SCR_MAXPROB50) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 10;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 9 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS41 - EVENTS45 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS41 - NONEVENTS45);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB41 -
SCR_MNPROB45) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB41 - SCR_MINPROB45) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB41 - SCR_MAXPROB45) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 9;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 8 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS36 - EVENTS40 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS36 - NONEVENTS40);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB36 -
SCR_MNPROB40) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB36 - SCR_MINPROB40) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB36 - SCR_MAXPROB40) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 8;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 7 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS31 - EVENTS35 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS31 - NONEVENTS35);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB31 -
SCR_MNPROB35) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB31 - SCR_MINPROB35) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB31 - SCR_MAXPROB35) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 7;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 6 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS26 - EVENTS30 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS26 - NONEVENTS30);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB26 -
SCR_MNPROB30) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB26 - SCR_MINPROB30) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB26 - SCR_MAXPROB30) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 6;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 5 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS21 - EVENTS25 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS21 - NONEVENTS25);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB21 -
SCR_MNPROB25) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB21 - SCR_MINPROB25) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB21 - SCR_MAXPROB25) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 5;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 4 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS16 - EVENTS20 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS16 - NONEVENTS20);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB16 -
SCR_MNPROB20) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB16 - SCR_MINPROB20) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB16 - SCR_MAXPROB20) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 4;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 3 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS11 - EVENTS15 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS11 - NONEVENTS15);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB11 -
SCR_MNPROB15) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB11 - SCR_MINPROB15) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB11 - SCR_MAXPROB15) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 3;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 2 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS6 - EVENTS10 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS6 - NONEVENTS10);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB6 -
SCR_MNPROB10) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB6 - SCR_MINPROB10) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB6 - SCR_MAXPROB10) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 2;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 1 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS1 - EVENTS5 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS1 - NONEVENTS5);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB1 - SCR_MNPROB5)
/ NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB1 - SCR_MINPROB5) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB1 - SCR_MAXPROB5) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 1;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("KSPROB" , PUT (KSPROB, 5.3 ) );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("_KS_BIN_PROB" , _KS_BIN_PROB );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("_KS_BIN_" , _KS_BIN_ / 100 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("KSDIFF" , KS_ABSDIFF );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PRECTPR" , PRECTPR );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXMUTUALPROB" , MAXMUTUALPROB);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LABEL __EVENT__ = "Event" DECILE = "Depth" BIN = "Bin" NUMOBS = "Number
of Observations" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * RUN for large data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST;
MPRINT(EM_ASSESS):   DELETE _AUXEVENTNAME;
MPRINT(EM_ASSESS):   QUIT;
 
MPRINT(EM_ASSESS):   OPTION NOCENTER LS = 95;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Report Vars Area.;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start OF Outdist Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPSCOREDIST;
MPRINT(EM_ASSESS):   RENAME MODELSCORE = SCORE UPPERPROB = UPPOSTERIOR SCR_CP_EVENTS =
CUMULATIVEPERCENTAGEOFEVENTS SCR_CP_NONEVENTS = CUMULATIVEPERCENTAGEOFNONEVENTS EVENTVALUE =
EVENT LOWERPROB = LOWPOSTERIOR NUMOBSINGROUP = N PERCOBSINGROUP = PERCENTAGE SCR_MINPROB =
_MINP_ SCR_MAXPROB = _MAXP_ SCR_MNPROB = _MEANP_ RANGE = P_LABEL C_PERCOBSINGROUP =
CUMULATIVEPERCENTAGE SCR_NUMEVENTS = NUMBEROFEVENTS SCR_NUMNONEVENTS = NUMBEROFNONEVENTS
SCR_P_EVENTS = PERCENTAGEOFEVENTS SCR_P_NONEVENTS = PERCENTAGEOFNONEVENTS ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... OUTDIST MODIFICATION LABEL AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL BIN = "Bin" N = "Number of Observations" P_LABEL = "Posterior
Probability Range" EVENT = "Event" LOWPOSTERIOR = "Lower Bound Posterior Probability"
PERCENTAGEOFEVENTS = "Percentage of Events" CUMULATIVEPERCENTAGEOFNONEVENTS = "Cumulative
Percentage of Nonevents" CUMULATIVEPERCENTAGE = "Cumulative Percentage" PERCENTAGEOFEVENTS =
"Percentage of Events" PERCENTAGEOFNONEVENTS = "Percentage of Nonevents"
CUMULATIVEPERCENTAGEOFEVENTS = "Cumulative Percentage of Events" UPPOSTERIOR = "Upper Bound
Posterior Probability" NUMBEROFEVENTS = "Number of Events" PERCENTAGE = "Percentage"
NUMBEROFNONEVENTS = "Number of Nonevents" _MEANP_ = "Mean Posterior Probability" _MINP_ = "Min
Posterior Probability" _MAXP_ = "Max Posterior Probability" SCORE = "Model Score" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   SET WORK._TEMPSCOREDIST (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........... END OF OUTDIST MODIFICATION;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start of OUTRANKS Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPRANK;
MPRINT(EM_ASSESS):   RENAME __EVENT__ = EVENT P_RESP = RESP C_P_CAPT_RESP = CAPC P_CAPT_RESP =
CAP NUMNONRESP = NUMNEVENT NUMRESP = NUMEVENT BASEEVENTS = BASENUMBEROFEVENTS BESTNUMEVENTS =
BESTNUMBEROFEVENTS MAXPROB = _MAXP_ MINPROB = _MINP_ CBASELIFT = BASELIFTC C_LIFT = LIFTC
MNPROB = _MEANP_ PERCENTILE = DECILE NUMOBS = N NUMEVENT = NUMBEROFEVENTS C_P_RESP = RESPC ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................. OUTRANKS;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL _MAXP_ = "Max Posterior Probability" _MINP_ = "Min Posterior
Probability" _MEANP_ = "Mean Posterior Probability" BASECAP = "Baseline % Captured Response"
BASECAPC = "Baseline Cumulative % Captured Response" BASENUMBEROFEVENTS = "Baseline Number of
Events" BASEGAIN = "Baseline Gain" BASELIFT = "Baseline Lift" BASELIFTC = "Baseline Cumulative
Lift" BASERESP = "Baseline % Response" BASERESPC = "Baseline Cumulative % Response" BASELIFTC
= "Baseline Cumulative Lift" BESTCAP = "Best % Captured Response" BESTCAPC = "Best Cumulative
% Captured Response" BESTGAIN = "Best Gain" BESTRESP = "Best % Response" BESTRESPC = "Best
Cumulative % Response" BESTLIFT = "Best Lift" BESTLIFTC = "Best Cumulative Lift"
BESTNUMBEROFEVENTS = "Best Number of Events" CAP = "% Captured Response" CAPC = "Cumulative %
Captured Response" DECILE = "Depth" GAIN = "Gain" LIFT = "Lift" LIFTC = "Cumulative Lift"
NUMNEVENT = "Number of Nonevents" N = "Number of Observations" EVENT = "Event" RESPC =
"Cumulative % Response" NUMBEROFEVENTS = "Number of Events" RESP = "% Response" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK;
MPRINT(EM_ASSESS):   SET WORK._TEMPRANK (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   proc datasets lib=work nolist;
MPRINT(EM_ASSESS):   delete _ea_tmpdata;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_ASSESS):   quit;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   OPTION ERRORS = 20;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):    data WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   retain target "DepVar";
MPRINT(EM_DIAGRAM):   retain TARGETLABEL 'DepVar';
MPRINT(EM_DIAGRAM):   retain dataRole "TRAIN";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural35_EMRANK;
MPRINT(EM_DIAGRAM):   set WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   retain target "DepVar";
MPRINT(EM_DIAGRAM):   retain TARGETLABEL 'DepVar';
MPRINT(EM_DIAGRAM):   retain dataRole "TRAIN";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural35_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   set WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   run;
1003023    data EM_temp_assessMeta;
MPRINT(EM_DIAGRAM):    data EM_temp_assessMeta;
The SAS System
 
1003024    set EMWS8.AutoNeural35_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural35_CMeta_TRAIN;
1003025    where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION', 'ASSESS', 'COST')
1003025  ! ;
MPRINT(EM_DIAGRAM):   where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION',
'ASSESS', 'COST');
1003026    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set EMWS8.AUTONEURAL35_CMETA_TRAIN.
      WHERE role in ('ASSESS', 'CLASSIFICATION', 'COST', 'DECISION', 'PREDICT', 'RESIDUAL');
NOTE: The data set WORK.EM_TEMP_ASSESSMETA has 8 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1003027    data EM_temp_assessdata;
MPRINT(EM_DIAGRAM):    data EM_temp_assessdata;
1003028    set EMWS8.AutoNeural35_VALIDATE(keep=
1003029    F_DepVar
1003030    I_DepVar
1003031    P_DepVar0
1003032    P_DepVar1
1003033    R_DepVar0
1003034    R_DepVar1
1003035    U_DepVar
1003036    _WARN_
1003037    DepVar
1003038    );
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural35_VALIDATE(keep= F_DepVar I_DepVar P_DepVar0
P_DepVar1 R_DepVar0 R_DepVar1 U_DepVar _WARN_ DepVar );
1003039    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: View EMWS8.AUTONEURAL35_VALIDATE.VIEW used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
 
NOTE: There were 1018 observations read from the data set EMWS8.META3_VALIDATE.
NOTE: There were 1018 observations read from the data set EMWS8.AUTONEURAL35_VALIDATE.
NOTE: The data set WORK.EM_TEMP_ASSESSDATA has 1018 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.07 seconds
      cpu time            0.07 seconds
 
 
MPRINT(EM_DIAGRAM):    proc freq data=EM_temp_assessdata noprint;
MPRINT(EM_DIAGRAM):   table I_DepVar*F_DepVar / out = WORK.AutoNeural35_1F32S24 nocol norow
outpct;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.AutoNeural35_1F32S24;
MPRINT(EM_DIAGRAM):   length _TYPE_ $10 DATAROLE TARGET $32 TARGETLABEL $200 FROM INTO $32
CORRECTTEXT $40 ;
MPRINT(EM_DIAGRAM):   label _TYPE_ = "Outcome Type";
MPRINT(EM_DIAGRAM):   label DATAROLE = "Data Role";
MPRINT(EM_DIAGRAM):   label TARGET = "Target Variable";
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   label FROM = "Target";
MPRINT(EM_DIAGRAM):   label INTO = "Outcome";
MPRINT(EM_DIAGRAM):   label PCT_ROW = "Target Percentage";
MPRINT(EM_DIAGRAM):   label PCT_COL = "Outcome Percentage";
MPRINT(EM_DIAGRAM):   label COUNT = "Frequency Count";
MPRINT(EM_DIAGRAM):   label PERCENT = "Total Percentage";
MPRINT(EM_DIAGRAM):   label CORRECTTEXT = "Correct Text";
MPRINT(EM_DIAGRAM):   label CORRECT = "Correct";
MPRINT(EM_DIAGRAM):   set WORK.AutoNeural35_1F32S24(rename=(F_DepVar=FROM I_DepVar=INTO));
MPRINT(EM_DIAGRAM):   retain _TYPE_ 'PREDICTION' DATAROLE "VALIDATE" TARGET "DepVar";
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TARGETLABEL = 'DepVar';
MPRINT(EM_DIAGRAM):   if FROM eq INTO then do;
MPRINT(EM_DIAGRAM):   CORRECT = 0;
MPRINT(EM_DIAGRAM):   CORRECTTEXT="Correct";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   CORRECT = 1;
MPRINT(EM_DIAGRAM):   CORRECTTEXT="Incorrect";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural35_EMCLASSIFICATION;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural35_EMCLASSIFICATION WORK.AutoNeural35_1F32S24;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   set WORK.AutoNeural35_1F32S24;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.MISCREPORT(drop=INTO FROM _TYPE_);
MPRINT(EM_DIAGRAM):   set WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   length MISC $12;
MPRINT(EM_DIAGRAM):   if FROM='1' and INTO='1' then MISC='TRUEEVENT';
MPRINT(EM_DIAGRAM):   else if FROM='1' and INTO ne '1' then MISC='FALSENEVENT';
MPRINT(EM_DIAGRAM):   else if FROM ne '1' and INTO='1' then MISC='FALSEEVENT';
MPRINT(EM_DIAGRAM):   else if FROM ne'1' and INTO ne '1' then MISC='TRUENEVENT';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.MISCREPORT nothreads;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc summary data=WORK.MISCREPORT NWAY;
MPRINT(EM_DIAGRAM):   output out=WORK.MISCCOUNT(drop=_FREQ_ _TYPE_) SUM=COUNT;
MPRINT(EM_DIAGRAM):   CLASS MISC;
MPRINT(EM_DIAGRAM):   VAR COUNT;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc transpose data=WORK.MISCCOUNT out=WORK.MISCREPORT(drop=_NAME_
_LABEL_);
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   ID MISC;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural35_EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   length TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural35_EMEVENTREPORT WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TARGETLABEL = 'DepVar';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data ASSESS_REPORTMETA;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural35_VariableSet;
MPRINT(EM_DIAGRAM):   where REPORT='Y';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename temp catalog 'sashelp.emassmt.em_assess.source';
MPRINT(EM_DIAGRAM):   filename temp;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural35_DepVar_DM;
MPRINT(EM_DIAGRAM):   where _TYPE_="TARGET";
MPRINT(EM_DIAGRAM):   call symput('ASSMT_EVENT', strip(event));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):
MPRINT(EM_ASSESS):   data _ea_tmpdata;
MPRINT(EM_ASSESS):   set EM_temp_assessdata;
MPRINT(EM_ASSESS):   _tmpfreqvar_=1;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_CHECKEMSETINIT):   DATA _NULL_;
MPRINT(EM_CHECKEMSETINIT):   EM_SETINIT = 'N';
MPRINT(EM_CHECKEMSETINIT):   IF SYSPROD('PRODNUM50') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM448') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM102') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM103') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   CALL SYMPUT('EM_SETINIT', EM_SETINIT);
MPRINT(EM_CHECKEMSETINIT):   RUN;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Reading in reporting data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET ASSESS_REPORTMETA END = EOF;
MPRINT(EM_ASSESS):   IF TYPE = "C" OR UPCASE (LEVEL) IN ("NOMINAL", "BINARY" , "ORDINAL") THEN
DO;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) NE UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   NUMCTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTC" || LEFT (PUT (NUMCTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "C");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF UPCASE(NAME) NE UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   NUMNTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTN" || LEFT (PUT (NUMNTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMNTOREPORT", NUMNTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMCTOREPORT", NUMCTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMTOREPORT", SUM (NUMNTOREPORT, NUMCTOREPORT));
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   PROC DMDB DATA = _ea_tmpdata VAROUT = VAROUT DMDBCAT = _D CLASSOUT =
_ASSMT_CLASSOUT;
MPRINT(EM_ASSESS):   CLASS F_DepVar ;
 
MPRINT(EM_ASSESS):   VAR P_DepVar1 _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_;
MPRINT(EM_ASSESS):   RUN ;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   PROC SORT DATA = _ASSMT_CLASSOUT;
MPRINT(EM_ASSESS):   BY NAME;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _auxeventname (keep = __event__) ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ...FLAG0_1 = ..... TARGET IS 0, 1 & EVENT = 1;
 
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   length __event__ $ 32;
MPRINT(EM_ASSESS):   RETAIN FLAG0_1 1 NUM1 . NUM0 . __event__ "_missing_" ;
 
MPRINT(EM_ASSESS):   SET _ASSMT_CLASSOUT END = EOF;
MPRINT(EM_ASSESS):   BY NAME;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ....... LEVEL = BINARY OR NOMINAL OR ORDINAL;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   IF UPCASE(NAME) = UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   CUMFREQ + FREQUENCY;
MPRINT(EM_ASSESS):   IF LEVEL NE "." THEN DO;
MPRINT(EM_ASSESS):   N1 + 1;
MPRINT(EM_ASSESS):   IF (NRAW NE 0 AND NRAW NE 1) OR TYPE NE "N" OR "" > " " THEN FLAG0_1 = 0;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ......................... IF EVENT NE BLANK;
MPRINT(EM_ASSESS):   * ....................LEVEL IS CHAR VAR ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   IF UPCASE("1") = UPCASE(LEVEL) THEN DO;
MPRINT(EM_ASSESS):   NUM1 = FREQUENCY;
MPRINT(EM_ASSESS):   IF TYPE = "C" THEN do;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("EVENTVALUERAW", CRAW );
MPRINT(EM_ASSESS):   __event__ = craw;
MPRINT(EM_ASSESS):   end;
MPRINT(EM_ASSESS):   ELSE do;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("EVENTVALUERAW", NRAW );
MPRINT(EM_ASSESS):   __event__ = nraw;
MPRINT(EM_ASSESS):   end;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF LAST.NAME THEN DO;
 
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * .............. IN NOMINAL CASE, NEED TO GROUP ALL '0' ;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   NUM0 = SUM (CUMFREQ, - NUM1);
MPRINT(EM_ASSESS):   IF NUM0 < 0 THEN NUM0 = 0;
MPRINT(EM_ASSESS):   IF NUM1 = . THEN NUM1 = 0;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUM0", NUM0 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUM1", NUM1);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PNUM1", NUM1 / CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PNUM0", (CUMFREQ - NUM1) / CUMFREQ);
MPRINT(EM_ASSESS):   IF TYPE = "C" THEN DO;
MPRINT(EM_ASSESS):   FLAG0_1 = 0;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "C" );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF "" = " " THEN DO;
MPRINT(EM_ASSESS):   IF "1" NE "1" THEN FLAG0_1 = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "N" );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ................... IF TYPE = N;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("FLAG0_1", FLAG0_1 );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..................IF LAST.NAME ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ...............IF LEVEL NE '.' ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * .............. IF NAME = TARGET;
MPRINT(EM_ASSESS):   ELSE IF "" > " " AND UPCASE(NAME) = UPCASE("") THEN DO;
MPRINT(EM_ASSESS):   NUMDECISIONS + 1;
MPRINT(EM_ASSESS):   LEVEL = TRANSLATE (LEVEL, "_", "'", "_", '"');
MPRINT(EM_ASSESS):   CALL SYMPUTX ("D_LABEL" || LEFT (PUT (NUMDECISIONS, 3.)), LEVEL );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..................... ELSE IF UPCASE;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   output _auxeventname;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMOBS", CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMDECISIONS", NUMDECISIONS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET VAROUT END = EOF;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) = UPCASE ("P_DepVar1") THEN DO;
MPRINT(EM_ASSESS):   IF N = 0 THEN DO;
MPRINT(EM_ASSESS):   PUT //// "          Warning: All posterior probabilities are missing
values ";
MPRINT(EM_ASSESS):   PUT ///;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("ALLMISS", 1);
MPRINT(EM_ASSESS):   STOP;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("ALLMISS", 0);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB", MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB", MAX);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("DIFF", MAX - MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NMISSPROB", NMISS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF UPCASE (NAME) = UPCASE ("_tmpfreqvar_") THEN DO;
MPRINT(EM_ASSESS):   AUXMIN = MIN - INT (MIN);
MPRINT(EM_ASSESS):   AUXMAX = MAX - INT (MAX);
MPRINT(EM_ASSESS):   IF AUXMIN > 0 OR AUXMAX > 0 THEN CALL SYMPUTX ("USEWEIGHT", "Y");
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("USEWEIGHT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _ANY0;
MPRINT(EM_ASSESS):   SET _ea_tmpdata (KEEP = F_DepVar P_DepVar1 _tmpfreqvar_ );
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................... No Formats;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF LEFT ( F_DepVar ) = "1" THEN NTARGET = 1;
MPRINT(EM_ASSESS):   ELSE NTARGET = 0;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .............. Before proc summary of binary case;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC SUMMARY DATA = _ANY0 (KEEP = P_DepVar1 NTARGET _tmpfreqvar_ WHERE =
(NTARGET > . )) NWAY MISSING;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   CLASS P_DepVar1 ;
MPRINT(EM_ASSESS):   VAR NTARGET ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   OUTPUT OUT = ANYSUM (DROP = _TYPE_) MEAN = _MEANTARGET _MEANFREQVAR ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... Main Data Set Processing, Binary case;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK (KEEP = BASECAPC BASECAP __EVENT__ BASEEVENTS
BASEGAIN BASELIFT BASERESP BASERESPC BESTCAP BESTCAPC BESTGAIN BESTLIFT BESTLIFTC
BESTNUMEVENTS BESTRESP BESTRESPC BIN CBASELIFT C_LIFT C_P_CAPT_RESP C_P_RESP GAIN LIFT MAXPROB
MINPROB MNPROB NUMNONRESP NUMOBS NUMRESP PERCENTILE P_CAPT_RESP P_RESP ) WORK._TEMPSCOREDIST
(KEEP = BIN LOWERPROB UPPERPROB EVENTVALUE SCR_NUMEVENTS MODELSCORE SCR_NUMNONEVENTS RANGE
NUMOBSINGROUP PERCOBSINGROUP C_PERCOBSINGROUP SCR_P_EVENTS SCR_CP_EVENTS SCR_P_NONEVENTS
SCR_CP_NONEVENTS SCR_MNPROB SCR_MINPROB SCR_MAXPROB ) ;
 
MPRINT(EM_ASSESS):   SET ANYSUM END = EOF;
 
MPRINT(EM_ASSESS):   IF _N_ = 1 THEN SET _AUXEVENTNAME;
 
MPRINT(EM_ASSESS):   RETAIN MINPROB1 - MINPROB20 1 MAXPROB1 - MAXPROB20 0 MNPROB1 - MNPROB20 0
NUMOBS1 - NUMOBS20 0 NUMRESP1 - NUMRESP20 0 TRUEPOS1 - TRUEPOS100 0 TRUENEG1 - TRUENEG100 0
FALSEPOS1 - FALSEPOS100 0 FALSENEG1 - FALSENEG100 0 EVENTS1 - EVENTS100 NONEVENTS1 -
NONEVENTS100 0 FIRSTIN1 - FIRSTIN100 . LASTIN1 - LASTIN100 . RESPRATE 0.152259332 _NEVENTS 155
_NNONEVENTS 863 TARGET "NTARGET" ;
MPRINT(EM_ASSESS):   ARRAY MINPROBS (20) MINPROB1 - MINPROB20;
MPRINT(EM_ASSESS):   ARRAY MAXPROBS (20) MAXPROB1 - MAXPROB20;
MPRINT(EM_ASSESS):   ARRAY MNPROBS (20) MNPROB1 - MNPROB20;
MPRINT(EM_ASSESS):   ARRAY NUMOBSS (20) NUMOBS1 - NUMOBS20;
MPRINT(EM_ASSESS):   ARRAY NUMRESPS (20) NUMRESP1 - NUMRESP20;
MPRINT(EM_ASSESS):   ARRAY TRUEPOSX (100) TRUEPOS1 - TRUEPOS100;
MPRINT(EM_ASSESS):   ARRAY FALSEPOSX (100) FALSEPOS1 - FALSEPOS100;
MPRINT(EM_ASSESS):   ARRAY FALSENEGX (100) FALSENEG1 - FALSENEG100;
MPRINT(EM_ASSESS):   ARRAY TRUENEGX (100) TRUENEG1 - TRUENEG100;
MPRINT(EM_ASSESS):   ARRAY _EVENTS (100) EVENTS1 - EVENTS100;
MPRINT(EM_ASSESS):   ARRAY NONEVENTS (100) NONEVENTS1 - NONEVENTS100;
MPRINT(EM_ASSESS):   ARRAY FIRSTIN (100) FIRSTIN1 - FIRSTIN100;
MPRINT(EM_ASSESS):   ARRAY LASTIN (100) LASTIN1 - LASTIN100;
MPRINT(EM_ASSESS):   RETAIN SCR_MNPROB1 - SCR_MNPROB100 0 SCR_MINPROB1 - SCR_MINPROB100 1
SCR_MAXPROB1 - SCR_MAXPROB100 0;
MPRINT(EM_ASSESS):   ARRAY SCR_MNPROBS (100) SCR_MNPROB1 - SCR_MNPROB100;
MPRINT(EM_ASSESS):   ARRAY SCR_MINPROBS (100) SCR_MINPROB1 - SCR_MINPROB100;
MPRINT(EM_ASSESS):   ARRAY SCR_MAXPROBS (100) SCR_MAXPROB1 - SCR_MAXPROB100;
MPRINT(EM_ASSESS):   DROP SCR_MINPROB1 - SCR_MINPROB100 SCR_MAXPROB1 - SCR_MAXPROB100
SCR_MNPROB1 - SCR_MNPROB100 ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...... Area For 8 Financials ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF _MEANTARGET = . THEN _MEANTARGET = RESPRATE;
MPRINT(EM_ASSESS):   DROP N1 _K SUMWEIGHTS ;
MPRINT(EM_ASSESS):   SUMWEIGHTS = 1;
 
MPRINT(EM_ASSESS):   DO _K = 1 TO CEIL (_FREQ_);
MPRINT(EM_ASSESS):   IF _K = CEIL (_FREQ_) THEN DO;
MPRINT(EM_ASSESS):   IF _FREQ_ < CEIL (_FREQ_) THEN _WEIGHT = _FREQ_ - FLOOR (_FREQ_);
MPRINT(EM_ASSESS):   ELSE _WEIGHT = 1;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE _WEIGHT = 1;
MPRINT(EM_ASSESS):   N1 + _WEIGHT;
MPRINT(EM_ASSESS):   NTARGET = _MEANTARGET ;
MPRINT(EM_ASSESS):   DECILE = MIN (20, CEIL (N1 * 20 / 1018));
MPRINT(EM_ASSESS):   MINPROBS ( DECILE) = MIN (MINPROBS ( DECILE), P_DepVar1 );
MPRINT(EM_ASSESS):   MAXPROBS ( DECILE) = MAX (MAXPROBS ( DECILE), P_DepVar1 );
MPRINT(EM_ASSESS):   MNPROBS ( DECILE) = SUM (MNPROBS ( DECILE), P_DepVar1 * _WEIGHT);
MPRINT(EM_ASSESS):   NUMOBSS ( DECILE) = NUMOBSS ( DECILE) + _WEIGHT;
MPRINT(EM_ASSESS):   NUMRESPS ( DECILE) = NUMRESPS ( DECILE) + _MEANTARGET * _WEIGHT;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ outside of do loop, Area for final ROC;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   RANKDELTA = (ROUND ( _FREQ_ ) + 1) / 2;
MPRINT(EM_ASSESS):   RANK = UNTIEDRANK + RANKDELTA;
MPRINT(EM_ASSESS):   DROP RANK ;
MPRINT(EM_ASSESS):   SUMRANK1 + RANK * ROUND (_MEANTARGET * _FREQ_, .0000001);
MPRINT(EM_ASSESS):   UNTIEDRANK + ROUND (_FREQ_, .00000001);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Area For ROC Curve;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DO _K = 1 TO 100;
MPRINT(EM_ASSESS):   IF P_DepVar1 * 100 >= _K THEN DO;
MPRINT(EM_ASSESS):   TRUEPOSX ( _K ) + _FREQ_ * _MEANTARGET ;
MPRINT(EM_ASSESS):   FALSEPOSX ( _K ) + _FREQ_ * (1 - _MEANTARGET) ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   TRUENEGX ( _K ) + _FREQ_ * ( 1 - _MEANTARGET) ;
MPRINT(EM_ASSESS):   FALSENEGX ( _K ) + _FREQ_ * _MEANTARGET ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   SLOT = MIN (MAX (CEIL (P_DepVar1 * 100), 1), 100) ;
MPRINT(EM_ASSESS):   DROP SLOT;
MPRINT(EM_ASSESS):   FIRSTIN ( SLOT ) = MIN ( FIRSTIN ( SLOT ), P_DepVar1);
MPRINT(EM_ASSESS):   LASTIN ( SLOT ) = MAX ( LASTIN ( SLOT ), P_DepVar1);
MPRINT(EM_ASSESS):   _EVENTS ( SLOT) = _EVENTS ( SLOT) + _FREQ_ * _MEANTARGET;
MPRINT(EM_ASSESS):   NONEVENTS ( SLOT) = NONEVENTS ( SLOT) + _FREQ_ * (1 - _MEANTARGET);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ START OF OUTDIST IN BINARY CASE MAIN DATA STEP ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   SCR_MNPROBS ( SLOT ) = SUM (SCR_MNPROBS (SLOT), P_DepVar1 * _FREQ_ );
MPRINT(EM_ASSESS):   SCR_MINPROBS ( SLOT ) = MIN (SCR_MINPROBS (SLOT), P_DepVar1 );
MPRINT(EM_ASSESS):   SCR_MAXPROBS ( SLOT ) = MAX (SCR_MAXPROBS (SLOT), P_DepVar1 );
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ End of Outdist in Binary case main DATA STEP ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   PUT //;
MPRINT(EM_ASSESS):   DO K = 1 TO 20;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LENGTH EVENTVALUE $ 32;
MPRINT(EM_ASSESS):   RETAIN EVENTVALUE "1" ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ......... Start of EOF area of BINARY processing of main data set ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SUMRANK1", SUMRANK1);
MPRINT(EM_ASSESS):   LENGTH DATAROLE $ 10;
MPRINT(EM_ASSESS):   RETAIN DATAROLE "VALIDATE" ;
MPRINT(EM_ASSESS):   RETAIN OVLMIN 0.000062537 OVLMAX 0.9999870725 ;
MPRINT(EM_ASSESS):   DROP OVLMIN OVLMAX ;
MPRINT(EM_ASSESS):   C_NUMOBS = 0;
MPRINT(EM_ASSESS):   C_NUM_RESP = 0;
MPRINT(EM_ASSESS):   C_NUM_NONRESP = 0;
MPRINT(EM_ASSESS):   C_P_RESP = 0;
MPRINT(EM_ASSESS):   P_CAPT_RESP = 0;
MPRINT(EM_ASSESS):   C_P_CAPT_RESP = 0;
MPRINT(EM_ASSESS):   PREVIOUSPROFIT = 0;
MPRINT(EM_ASSESS):   MAXPROFIT = 0;
MPRINT(EM_ASSESS):   _KS_BIN_ = 0;
MPRINT(EM_ASSESS):   DROP _KS_BIN_;
MPRINT(EM_ASSESS):   AVGNUMRESP = _NEVENTS / 20;
MPRINT(EM_ASSESS):   BASERESP = 100 * RESPRATE;
MPRINT(EM_ASSESS):   BASERESPC = BASERESP;
MPRINT(EM_ASSESS):   BASECAP = 100 / 20;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................Start OF Gainschart = Outranks Area;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   _KS_BIN_PROB = 0;
MPRINT(EM_ASSESS):   DO GROUP = 20 TO 1 BY -1;
 
MPRINT(EM_ASSESS):   BASECAPC + BASECAP;
MPRINT(EM_ASSESS):   PERCENTILE = GROUP * (100 / 20);
MPRINT(EM_ASSESS):   MINPROB = MINPROBS ( GROUP);
MPRINT(EM_ASSESS):   MAXPROB = MAXPROBS ( GROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB" || LEFT ( PUT (GROUP, 3.)), MINPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB" || LEFT ( PUT (GROUP, 3.)), MAXPROB);
MPRINT(EM_ASSESS):   NUMOBS = NUMOBSS ( GROUP);
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN MNPROB = MNPROBS ( GROUP) / NUMOBS;
MPRINT(EM_ASSESS):   ELSE MNPROB = .;
MPRINT(EM_ASSESS):   C_NUMOBS = SUM (NUMOBS, C_NUMOBS);
MPRINT(EM_ASSESS):   NUMRESP = NUMRESPS ( GROUP);
MPRINT(EM_ASSESS):   NUMNONRESP = NUMOBS - NUMRESP;
MPRINT(EM_ASSESS):   C_AVGNUM_RESP + AVGNUMRESP;
MPRINT(EM_ASSESS):   IF C_NUMOBS <= _NEVENTS THEN DO;
MPRINT(EM_ASSESS):   BESTNUMEVENTS = NUMOBS;
MPRINT(EM_ASSESS):   BESTCAPC = C_NUMOBS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   BASEEVENTS = _NEVENTS / 20;
MPRINT(EM_ASSESS):   BASENONEVENTS = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   FLAG + 1;
MPRINT(EM_ASSESS):   DROP FLAG;
MPRINT(EM_ASSESS):   BESTNUMEVENTS = _NEVENTS - C_NUMOBS + NUMOBS;
MPRINT(EM_ASSESS):   IF FLAG > 1 THEN BESTNUMEVENTS = 0;
MPRINT(EM_ASSESS):   BESTCAPC = 100;
MPRINT(EM_ASSESS):   IF C_NUMOBS - _NEVENTS <= NUMOBS THEN DO;
MPRINT(EM_ASSESS):   BASEEVENTS = C_NUMOBS - _NEVENTS;
MPRINT(EM_ASSESS):   BASENONEVENTS = NUMOBS - C_NUMOBS + _NEVENTS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BASEEVENTS = 0;
MPRINT(EM_ASSESS):   BASENONEVENTS = NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   BESTCAP = BESTNUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   BESTLIFT = BESTNUMEVENTS / AVGNUMRESP;
MPRINT(EM_ASSESS):   C_BESTNUMEVENTS + BESTNUMEVENTS;
MPRINT(EM_ASSESS):   DROP C_BESTNUMEVENTS;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN BESTLIFTC = C_BESTNUMEVENTS / (_NEVENTS / 1018 *
C_NUMOBS);
MPRINT(EM_ASSESS):   ELSE BESTLIFTC = .;
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BESTRESP = BESTNUMEVENTS * 100 / NUMOBS;
MPRINT(EM_ASSESS):   P_RESP = NUMRESP * 100 / NUMOBS;
MPRINT(EM_ASSESS):   P_NONRESP = NUMNONRESP * 100 / NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTRESP = .;
MPRINT(EM_ASSESS):   P_RESP = .;
MPRINT(EM_ASSESS):   P_NONRESP = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BESTRESPC = C_BESTNUMEVENTS * 100 / C_NUMOBS;
MPRINT(EM_ASSESS):   BESTGAIN = MAX (0, ((C_BESTNUMEVENTS / C_NUMOBS ) / ( AVGNUMRESP /
NUMOBS) - 1) * 100);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTRESPC = .;
MPRINT(EM_ASSESS):   BESTGAIN = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF NUMNONRESP > 0 THEN ODDS = NUMRESP / NUMNONRESP;
MPRINT(EM_ASSESS):   ELSE ODDS = .;
MPRINT(EM_ASSESS):   C_NUM_RESP = SUM (C_NUM_RESP , NUMRESP );
MPRINT(EM_ASSESS):   C_NUM_NONRESP = SUM (C_NUM_NONRESP, NUMNONRESP );
MPRINT(EM_ASSESS):   IF C_NUM_NONRESP > 0 THEN C_ODDS = C_NUM_RESP / C_NUM_NONRESP;
MPRINT(EM_ASSESS):   ELSE C_ODDS = .;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   C_P_RESP = C_NUM_RESP * 100 / C_NUMOBS;
MPRINT(EM_ASSESS):   GAIN = ABS(100 * (((C_NUM_RESP / C_NUMOBS ) / (_NEVENTS / 1018)) - 1));
MPRINT(EM_ASSESS):   BASEGAIN = 100 * (( (C_AVGNUM_RESP / C_NUMOBS) / ( AVGNUMRESP / NUMOBS))
- 1);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   GAIN = .;
MPRINT(EM_ASSESS):   BASEGAIN = .;
MPRINT(EM_ASSESS):   C_P_RESP = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF BASEGAIN <= 0 THEN BASEGAIN = 0;
MPRINT(EM_ASSESS):   P_CAPT_RESP = NUMRESP * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   P_CAPT_NONRESP = NUMNONRESP * 100 / ( 1018 - _NEVENTS);
MPRINT(EM_ASSESS):   C_P_CAPT_RESP = C_NUM_RESP * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   C_P_CAPT_NONRESP = C_NUM_NONRESP * 100 / ( 1018 - _NEVENTS);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Area For Binned KS in Outranks area;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   _DIFFERENCE = C_P_CAPT_RESP - C_P_CAPT_NONRESP ;
MPRINT(EM_ASSESS):   IF _KS_BIN_ < _DIFFERENCE THEN DO;
MPRINT(EM_ASSESS):   _KS_BIN_ = _DIFFERENCE;
MPRINT(EM_ASSESS):   _KS_BIN_PROB = MINPROB + (MAXPROB - MINPROB) / 2 ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LIFT = P_RESP * .01 / RESPRATE ;
MPRINT(EM_ASSESS):   C_LIFT = C_P_RESP * .01 / RESPRATE;
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BASELIFT = AVGNUMRESP / ( RESPRATE * NUMOBS );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE BASELIFT = .;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN CBASELIFT = C_AVGNUM_RESP / (RESPRATE * C_NUMOBS);
MPRINT(EM_ASSESS):   ELSE CBASELIFT = .;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ WITHIN DO LOOP FOR OUTRANKS;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   BIN = 20 + 1 - GROUP;
MPRINT(EM_ASSESS):   PERCENTILE = BIN * (100 / 20);
MPRINT(EM_ASSESS):   B_C_P_RESP = PERCENTILE;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPRANK ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................ END OF GAINSCHART = OUTRANKS AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROFITGROUP" , MAXPROFITGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROFIT" , MAXPROFIT );
MPRINT(EM_ASSESS):   KS_ABSDIFF = 0 ;
MPRINT(EM_ASSESS):   MINPRECTPR = 9999;
MPRINT(EM_ASSESS):   Y0 = 1 - RESPRATE;
MPRINT(EM_ASSESS):   Y1 = RESPRATE;
MPRINT(EM_ASSESS):   MAXMUTUAL = 0;
MPRINT(EM_ASSESS):   DROP MAXMUTUAL KSPROB Y0 Y1 KS_ABSDIFF MINPRECTPR;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .....................About to start Processing Outroc ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................... Finished Processing Outroc ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .............. Outdist ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   BIN = 20 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS96 - EVENTS100 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS96 - NONEVENTS100);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB96 -
SCR_MNPROB100) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB96 - SCR_MINPROB100) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB96 - SCR_MAXPROB100) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 20;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 19 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS91 - EVENTS95 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS91 - NONEVENTS95);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB91 -
SCR_MNPROB95) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB91 - SCR_MINPROB95) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB91 - SCR_MAXPROB95) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 19;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 18 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS86 - EVENTS90 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS86 - NONEVENTS90);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB86 -
SCR_MNPROB90) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB86 - SCR_MINPROB90) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB86 - SCR_MAXPROB90) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 18;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 17 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS81 - EVENTS85 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS81 - NONEVENTS85);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB81 -
SCR_MNPROB85) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB81 - SCR_MINPROB85) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB81 - SCR_MAXPROB85) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 17;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 16 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS76 - EVENTS80 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS76 - NONEVENTS80);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB76 -
SCR_MNPROB80) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB76 - SCR_MINPROB80) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB76 - SCR_MAXPROB80) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 16;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 15 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS71 - EVENTS75 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS71 - NONEVENTS75);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB71 -
SCR_MNPROB75) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB71 - SCR_MINPROB75) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB71 - SCR_MAXPROB75) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 15;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 14 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS66 - EVENTS70 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS66 - NONEVENTS70);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB66 -
SCR_MNPROB70) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB66 - SCR_MINPROB70) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB66 - SCR_MAXPROB70) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 14;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 13 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS61 - EVENTS65 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS61 - NONEVENTS65);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB61 -
SCR_MNPROB65) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB61 - SCR_MINPROB65) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB61 - SCR_MAXPROB65) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 13;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 12 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS56 - EVENTS60 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS56 - NONEVENTS60);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB56 -
SCR_MNPROB60) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB56 - SCR_MINPROB60) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB56 - SCR_MAXPROB60) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 12;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 11 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS51 - EVENTS55 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS51 - NONEVENTS55);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB51 -
SCR_MNPROB55) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB51 - SCR_MINPROB55) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB51 - SCR_MAXPROB55) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 11;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 10 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS46 - EVENTS50 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS46 - NONEVENTS50);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB46 -
SCR_MNPROB50) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB46 - SCR_MINPROB50) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB46 - SCR_MAXPROB50) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 10;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 9 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS41 - EVENTS45 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS41 - NONEVENTS45);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB41 -
SCR_MNPROB45) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB41 - SCR_MINPROB45) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB41 - SCR_MAXPROB45) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 9;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 8 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS36 - EVENTS40 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS36 - NONEVENTS40);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB36 -
SCR_MNPROB40) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB36 - SCR_MINPROB40) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB36 - SCR_MAXPROB40) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 8;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 7 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS31 - EVENTS35 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS31 - NONEVENTS35);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB31 -
SCR_MNPROB35) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB31 - SCR_MINPROB35) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB31 - SCR_MAXPROB35) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 7;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 6 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS26 - EVENTS30 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS26 - NONEVENTS30);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB26 -
SCR_MNPROB30) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB26 - SCR_MINPROB30) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB26 - SCR_MAXPROB30) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 6;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 5 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS21 - EVENTS25 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS21 - NONEVENTS25);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB21 -
SCR_MNPROB25) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB21 - SCR_MINPROB25) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB21 - SCR_MAXPROB25) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 5;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 4 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS16 - EVENTS20 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS16 - NONEVENTS20);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB16 -
SCR_MNPROB20) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB16 - SCR_MINPROB20) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB16 - SCR_MAXPROB20) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 4;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 3 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS11 - EVENTS15 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS11 - NONEVENTS15);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB11 -
SCR_MNPROB15) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB11 - SCR_MINPROB15) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB11 - SCR_MAXPROB15) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 3;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 2 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS6 - EVENTS10 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS6 - NONEVENTS10);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB6 -
SCR_MNPROB10) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB6 - SCR_MINPROB10) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB6 - SCR_MAXPROB10) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 2;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 1 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS1 - EVENTS5 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS1 - NONEVENTS5);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB1 - SCR_MNPROB5)
/ NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB1 - SCR_MINPROB5) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB1 - SCR_MAXPROB5) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 1;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("KSPROB" , PUT (KSPROB, 5.3 ) );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("_KS_BIN_PROB" , _KS_BIN_PROB );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("_KS_BIN_" , _KS_BIN_ / 100 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("KSDIFF" , KS_ABSDIFF );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PRECTPR" , PRECTPR );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXMUTUALPROB" , MAXMUTUALPROB);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LABEL __EVENT__ = "Event" DECILE = "Depth" BIN = "Bin" NUMOBS = "Number
of Observations" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * RUN for large data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST;
MPRINT(EM_ASSESS):   DELETE _AUXEVENTNAME;
MPRINT(EM_ASSESS):   QUIT;
 
MPRINT(EM_ASSESS):   OPTION NOCENTER LS = 95;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Report Vars Area.;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start OF Outdist Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPSCOREDIST;
MPRINT(EM_ASSESS):   RENAME MODELSCORE = SCORE UPPERPROB = UPPOSTERIOR SCR_CP_EVENTS =
CUMULATIVEPERCENTAGEOFEVENTS SCR_CP_NONEVENTS = CUMULATIVEPERCENTAGEOFNONEVENTS EVENTVALUE =
EVENT LOWERPROB = LOWPOSTERIOR NUMOBSINGROUP = N PERCOBSINGROUP = PERCENTAGE SCR_MINPROB =
_MINP_ SCR_MAXPROB = _MAXP_ SCR_MNPROB = _MEANP_ RANGE = P_LABEL C_PERCOBSINGROUP =
CUMULATIVEPERCENTAGE SCR_NUMEVENTS = NUMBEROFEVENTS SCR_NUMNONEVENTS = NUMBEROFNONEVENTS
SCR_P_EVENTS = PERCENTAGEOFEVENTS SCR_P_NONEVENTS = PERCENTAGEOFNONEVENTS ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... OUTDIST MODIFICATION LABEL AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL BIN = "Bin" N = "Number of Observations" P_LABEL = "Posterior
Probability Range" EVENT = "Event" LOWPOSTERIOR = "Lower Bound Posterior Probability"
PERCENTAGEOFEVENTS = "Percentage of Events" CUMULATIVEPERCENTAGEOFNONEVENTS = "Cumulative
Percentage of Nonevents" CUMULATIVEPERCENTAGE = "Cumulative Percentage" PERCENTAGEOFEVENTS =
"Percentage of Events" PERCENTAGEOFNONEVENTS = "Percentage of Nonevents"
CUMULATIVEPERCENTAGEOFEVENTS = "Cumulative Percentage of Events" UPPOSTERIOR = "Upper Bound
Posterior Probability" NUMBEROFEVENTS = "Number of Events" PERCENTAGE = "Percentage"
NUMBEROFNONEVENTS = "Number of Nonevents" _MEANP_ = "Mean Posterior Probability" _MINP_ = "Min
Posterior Probability" _MAXP_ = "Max Posterior Probability" SCORE = "Model Score" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   SET WORK._TEMPSCOREDIST (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........... END OF OUTDIST MODIFICATION;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start of OUTRANKS Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPRANK;
MPRINT(EM_ASSESS):   RENAME __EVENT__ = EVENT P_RESP = RESP C_P_CAPT_RESP = CAPC P_CAPT_RESP =
CAP NUMNONRESP = NUMNEVENT NUMRESP = NUMEVENT BASEEVENTS = BASENUMBEROFEVENTS BESTNUMEVENTS =
BESTNUMBEROFEVENTS MAXPROB = _MAXP_ MINPROB = _MINP_ CBASELIFT = BASELIFTC C_LIFT = LIFTC
MNPROB = _MEANP_ PERCENTILE = DECILE NUMOBS = N NUMEVENT = NUMBEROFEVENTS C_P_RESP = RESPC ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................. OUTRANKS;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL _MAXP_ = "Max Posterior Probability" _MINP_ = "Min Posterior
Probability" _MEANP_ = "Mean Posterior Probability" BASECAP = "Baseline % Captured Response"
BASECAPC = "Baseline Cumulative % Captured Response" BASENUMBEROFEVENTS = "Baseline Number of
Events" BASEGAIN = "Baseline Gain" BASELIFT = "Baseline Lift" BASELIFTC = "Baseline Cumulative
Lift" BASERESP = "Baseline % Response" BASERESPC = "Baseline Cumulative % Response" BASELIFTC
= "Baseline Cumulative Lift" BESTCAP = "Best % Captured Response" BESTCAPC = "Best Cumulative
% Captured Response" BESTGAIN = "Best Gain" BESTRESP = "Best % Response" BESTRESPC = "Best
Cumulative % Response" BESTLIFT = "Best Lift" BESTLIFTC = "Best Cumulative Lift"
BESTNUMBEROFEVENTS = "Best Number of Events" CAP = "% Captured Response" CAPC = "Cumulative %
Captured Response" DECILE = "Depth" GAIN = "Gain" LIFT = "Lift" LIFTC = "Cumulative Lift"
NUMNEVENT = "Number of Nonevents" N = "Number of Observations" EVENT = "Event" RESPC =
"Cumulative % Response" NUMBEROFEVENTS = "Number of Events" RESP = "% Response" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK;
MPRINT(EM_ASSESS):   SET WORK._TEMPRANK (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   proc datasets lib=work nolist;
MPRINT(EM_ASSESS):   delete _ea_tmpdata;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_ASSESS):   quit;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   OPTION ERRORS = 20;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):    data WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   retain target "DepVar";
MPRINT(EM_DIAGRAM):   retain TARGETLABEL 'DepVar';
MPRINT(EM_DIAGRAM):   retain dataRole "VALIDATE";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural35_EMRANK;
MPRINT(EM_DIAGRAM):   length target $32;
MPRINT(EM_DIAGRAM):   length TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   length dataRole $20;
MPRINT(EM_DIAGRAM):   length EVENT $32;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural35_EMRANK WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   retain target "DepVar";
MPRINT(EM_DIAGRAM):   retain TARGETLABEL 'DepVar';
MPRINT(EM_DIAGRAM):   retain dataRole "VALIDATE";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural35_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   length target $32;
MPRINT(EM_DIAGRAM):   length TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   length dataRole $20;
MPRINT(EM_DIAGRAM):   length EVENT $32;
MPRINT(EM_DIAGRAM):   length P_LABEL $9;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural35_EMSCOREDIST WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   run;
1007314    %let _cn = %sysfunc(getoption(CENTER));
1007315    options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
1007316    proc print data=EMWS8.AutoNeural35_EMREPORTFIT noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural35_EMREPORTFIT noobs label;
1007317    var STAT LABEL TRAIN
1007318    VALIDATE
1007319    ;
MPRINT(EM_DIAGRAM):   var STAT LABEL TRAIN VALIDATE ;
1007320    by TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by TARGET TARGETLABEL;
1007321    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
1007322    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_fitstat_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Fit Statistics";
MPRINT(EM_DIAGRAM):   run;
1007323    run;
 
NOTE: There were 21 observations read from the data set EMWS8.AUTONEURAL35_EMREPORTFIT.
NOTE: The PROCEDURE PRINT printed page 994.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1007324    title10;
MPRINT(EM_DIAGRAM):   title10;
1007325    options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
1007326    proc sort data=EMWS8.AutoNeural35_EMCLASSIFICATION nothreads;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS8.AutoNeural35_EMCLASSIFICATION nothreads;
1007327    by DATAROLE TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET TARGETLABEL;
1007328    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set EMWS8.AUTONEURAL35_EMCLASSIFICATION.
NOTE: The data set EMWS8.AUTONEURAL35_EMCLASSIFICATION has 8 observations and 12 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1007329    %let _cn = %sysfunc(getoption(CENTER));
1007330    options nocenter;
MPRINT(EM_DIAGRAM):   options nocenter;
1007331    proc print data=EMWS8.AutoNeural35_EMCLASSIFICATION noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural35_EMCLASSIFICATION noobs label;
1007332    var from into pct_row pct_col count percent
1007333    ;
MPRINT(EM_DIAGRAM):   var from into pct_row pct_col count percent ;
1007334    by DATAROLE TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET TARGETLABEL;
1007335    label FROM = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel ,     NOQUOTE))";
MPRINT(EM_DIAGRAM):   label FROM = "Target";
1007336    label INTO = "%sysfunc(sasmsg(sashelp.dmine, rpt_outcome_vlabel ,    NOQUOTE))";
MPRINT(EM_DIAGRAM):   label INTO = "Outcome";
1007337    label PCT_ROW = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetpct_vlabel ,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PCT_ROW = "Target Percentage";
1007338    label PCT_COL = "%sysfunc(sasmsg(sashelp.dmine, rpt_outcomepct_vlabel , NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PCT_COL = "Outcome Percentage";
1007339    label COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel ,      NOQUOTE))";
MPRINT(EM_DIAGRAM):   label COUNT = "Frequency Count";
1007340    label PERCENT = "%sysfunc(sasmsg(sashelp.dmine, rpt_totalpct_vlabel ,   NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PERCENT = "Total Percentage";
1007341    where _TYPE_='PREDICTION';
MPRINT(EM_DIAGRAM):   where _TYPE_='PREDICTION';
1007342    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
1007343    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_classification_title    , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Classification Table";
MPRINT(EM_DIAGRAM):   run;
1007344    run;
 
NOTE: There were 8 observations read from the data set EMWS8.AUTONEURAL35_EMCLASSIFICATION.
      WHERE _TYPE_='PREDICTION';
NOTE: The PROCEDURE PRINT printed page 995.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1007345    title9;
MPRINT(EM_DIAGRAM):   title9;
1007346    title10;
MPRINT(EM_DIAGRAM):   title10;
1007347    options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
1007348    %let _cn = %sysfunc(getoption(CENTER));
1007349    options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
1007350    data EMWS8.AutoNeural35_EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural35_EMEVENTREPORT;
1007351    length DATAROLE TARGET $32 TARGETLABEL $200 FALSENEVENT TRUENEVENT FALSEEVENT
1007351  ! TRUEEVENT 8;
MPRINT(EM_DIAGRAM):   length DATAROLE TARGET $32 TARGETLABEL $200 FALSENEVENT TRUENEVENT
FALSEEVENT TRUEEVENT 8;
1007352    label DATAROLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))"
1007352  !  TARGET = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel ,      NOQUOTE))"
1007352  ! TARGETLABEL = "%sysfunc(sasmsg(sashelp.dmine, meta_targetlabel_vlabel, NOQUOTE))"
1007352  ! FALSEEVENT
1007353    = "%sysfunc(sasmsg(sashelp.dmine, rpt_falseevent_vlabel ,  NOQUOTE))" FALSENEVENT =
1007353  ! "%sysfunc(sasmsg(sashelp.dmine, rpt_falsenevent_vlabel , NOQUOTE))" TRUEEVENT =
1007353  ! "%sysfunc(sasmsg(sashelp.dmine, rpt_trueevent_vlabel ,   NOQUOTE))" TRUENEVENT =
1007354       "%sysfunc(sasmsg(sashelp.dmine, rpt_truenevent_vlabel ,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label DATAROLE = "Data Role" TARGET = "Target" TARGETLABEL = "Target
Label" FALSEEVENT = "False Positive" FALSENEVENT = "False Negative" TRUEEVENT = "True
Positive" TRUENEVENT = "True Negative";
1007355    FALSEEVENT=0;
MPRINT(EM_DIAGRAM):   FALSEEVENT=0;
1007356    FALSENEVENT=0;
MPRINT(EM_DIAGRAM):   FALSENEVENT=0;
1007357    TRUEEVENT=0;
MPRINT(EM_DIAGRAM):   TRUEEVENT=0;
1007358    TRUENEVENT=0;
MPRINT(EM_DIAGRAM):   TRUENEVENT=0;
1007359    set EMWS8.AutoNeural35_EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural35_EMEVENTREPORT;
1007360    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set EMWS8.AUTONEURAL35_EMEVENTREPORT.
NOTE: The data set EMWS8.AUTONEURAL35_EMEVENTREPORT has 2 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1007361    proc print data=EMWS8.AutoNeural35_EMEVENTREPORT noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural35_EMEVENTREPORT noobs label;
1007362    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
1007363    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_eventtable_title    , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Event Classification Table";
MPRINT(EM_DIAGRAM):   by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL;
MPRINT(EM_DIAGRAM):   run;
1007364    by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL;
1007365    run;
 
NOTE: There were 2 observations read from the data set EMWS8.AUTONEURAL35_EMEVENTREPORT.
NOTE: The PROCEDURE PRINT printed page 996.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1007366    title10;
MPRINT(EM_DIAGRAM):   title10;
1007367    options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
1007368    proc datasets library=EMWS8 nolist;
MPRINT(EM_DIAGRAM):    proc datasets library=EMWS8 nolist;
1007369    modify AutoNeural35_EMRANK;
MPRINT(EM_DIAGRAM):   modify AutoNeural35_EMRANK;
MPRINT(EM_DIAGRAM):   label target = "Target Variable";
1007370    label target = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetvar_vlabel ,   NOQUOTE))";
MPRINT(EM_DIAGRAM):   label datarole = "Data Role";
1007371    label datarole = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))"
1007371  ! ;
MPRINT(EM_DIAGRAM):   run;
1007372    run;
 
NOTE: MODIFY was successful for EMWS8.AUTONEURAL35_EMRANK.DATA.
1007373    quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.15 seconds
      cpu time            0.15 seconds
 
 
1007374    %let _cn = %sysfunc(getoption(CENTER));
1007375    options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
1007376    proc print data=EMWS8.AutoNeural35_EMRANK label noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural35_EMRANK label noobs;
1007377    var
1007378    decile gain lift liftc resp respc N _meanP_;
MPRINT(EM_DIAGRAM):   var decile gain lift liftc resp respc N _meanP_;
1007379    by
1007380    notsorted DATAROLE
1007381    notsorted TARGET
1007382    notsorted TARGETLABEL
1007383    ;
MPRINT(EM_DIAGRAM):   by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL ;
1007384    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
1007385    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_scoreranking_title , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Assessment Score Rankings";
MPRINT(EM_DIAGRAM):   run;
1007386    run;
 
NOTE: There were 40 observations read from the data set EMWS8.AUTONEURAL35_EMRANK.
NOTE: The PROCEDURE PRINT printed page 997.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1007387    title10;
MPRINT(EM_DIAGRAM):   title10;
1007388    options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
1007389    proc datasets library=EMWS8 nolist;
MPRINT(EM_DIAGRAM):    proc datasets library=EMWS8 nolist;
1007390    modify AutoNeural35_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   modify AutoNeural35_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   label target = "Target Variable";
1007391    label target = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetvar_vlabel ,
1007391  ! NOQUOTE))";
MPRINT(EM_DIAGRAM):   label datarole = "Data Role";
1007392    label datarole = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))"
1007392  ! ;
MPRINT(EM_DIAGRAM):   run;
1007393    run;
 
NOTE: MODIFY was successful for EMWS8.AUTONEURAL35_EMSCOREDIST.DATA.
1007394    quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.15 seconds
      cpu time            0.15 seconds
 
 
MPRINT(EM_DIAGRAM):    options nocenter;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural35_EMSCOREDIST label noobs;
MPRINT(EM_DIAGRAM):   var p_label numberOfEvents numberOfNonEvents _meanp_ percentage;
MPRINT(EM_DIAGRAM):   by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL ;
MPRINT(EM_DIAGRAM):   where TARGET in( "DepVar" );
MPRINT(EM_DIAGRAM):   title9 ' ';
MPRINT(EM_DIAGRAM):   title10 "Assessment Score Distribution";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   title10;
MPRINT(EM_DIAGRAM):   options NOCENTER;
MPRINT(EM_DIAGRAM):   proc printto;
MPRINT(EM_DIAGRAM):   run;
