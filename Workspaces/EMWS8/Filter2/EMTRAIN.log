MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "06 de Março de 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "16H42m" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Training Log
Date:                06 de Março de 2016
Time:                16H42m
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O0CP8D6G "E:\DataMining_EMProjects\Tugas\Workspaces\EMWS8\Filter2\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O0CP8D6G new;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOG "E:\DataMining_EMProjects\Tugas\Workspaces\EMWS8\Filter2\EMLOG.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "06 de Março de 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "16H42m" );
MPRINT(EM_DIAGRAM):   file _LOG;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                VM-SAS";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "Site:                70107571";
MPRINT(EM_DIAGRAM):   put "Platform:            X64_7PRO";
MPRINT(EM_DIAGRAM):   put "Maintenance Release: 9.03.01M2P081512";
MPRINT(EM_DIAGRAM):   put "EM Version:          12.1";
MPRINT(EM_DIAGRAM):   put "* ";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN "E:\DataMining_EMProjects\Tugas\Workspaces\EMWS8\Filter2\EMTRAIN.log" encoding="UTF-8" NOBOM;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _LOG MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_LOGIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _LOGIN "E:\DataMining_EMProjects\Tugas\Workspaces\EMWS8\Filter2\EMSCORE.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN "E:\DataMining_EMProjects\Tugas\Workspaces\EMWS8\Filter2\EMREPORT.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    filename _LOG;
MPRINT(EM_DIAGRAM):    filename _OUT "E:\DataMining_EMProjects\Tugas\Workspaces\EMWS8\Filter2\EMOUTPUT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "06 de Março de 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "16H42m" );
MPRINT(EM_DIAGRAM):   file _OUT;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                VM-SAS";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "E:\DataMining_EMProjects\Tugas\Workspaces\EMWS8\Filter2\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _OUT MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_OUTIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "E:\DataMining_EMProjects\Tugas\Workspaces\EMWS8\Filter2\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "E:\DataMining_EMProjects\Tugas\Workspaces\EMWS8\Filter2\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    filename _OUT;
MPRINT(EM_DIAGRAM):    filename _emtool_ 'E:\DataMining_EMProjects\Tugas\Workspaces\EMWS8\Filter2\EMRUNSTATUS.xml' encoding="UTF-8" NOBOM;
28136      proc freq data=EMWS8.Filter2_VariableSet noprint;
MPRINT(EM_DIAGRAM):    proc freq data=EMWS8.Filter2_VariableSet noprint;
28137      table ROLE*LEVEL/out=WORK.Filter2META;
MPRINT(EM_DIAGRAM):   table ROLE*LEVEL/out=WORK.Filter2META;
28138      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 21 observations read from the data set EMWS8.FILTER2_VARIABLESET.
NOTE: The data set WORK.FILTER2META has 5 observations and 4 variables.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.04 seconds
      cpu time            0.01 seconds
      

28139      proc print data=WORK.Filter2META label noobs;
MPRINT(EM_DIAGRAM):   proc print data=WORK.Filter2META label noobs;
28140      var ROLE LEVEL COUNT;
MPRINT(EM_DIAGRAM):   var ROLE LEVEL COUNT;
28141      label ROLE = "%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel, NOQUOTE))" LEVEL = "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label ROLE = "Role" LEVEL = "Measurement Level" COUNT = "Frequency Count";
28142      title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
28143      title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_varSummary_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Variable Summary";
MPRINT(EM_DIAGRAM):   run;
28144      run;

NOTE: There were 5 observations read from the data set WORK.FILTER2META.
NOTE: The PROCEDURE PRINT printed page 4.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

28145      title10;
MPRINT(EM_DIAGRAM):   title10;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Filter2: Preparing metadata for training;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   data WORK.M10X8T4F;
MPRINT(EM_DIAGRAM):   set WORK.M10X8T4F;
MPRINT(EM_DIAGRAM):   if CALCMETHOD eq 'DEFAULT' then do;
MPRINT(EM_DIAGRAM):   if ROLE ne 'INPUT' then CALCMETHOD='NONE';
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   if level='INTERVAL' then CALCMETHOD='NONE';
MPRINT(EM_DIAGRAM):   else CALCMETHOD='NONE';
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if KEEPMISSING eq 'D' then do;
MPRINT(EM_DIAGRAM):   if ROLE ne 'INPUT' then KEEPMISSING='Y';
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   if level='INTERVAL' then KEEPMISSING='Y';
MPRINT(EM_DIAGRAM):   else KEEPMISSING='Y';
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if CALCMETHOD='NONE' and KEEPMISSING='Y' then delete;
MPRINT(EM_DIAGRAM):   run;
28168      filename cdist catalog 'SASHELP.EMUTIL.EM_CLASSDIST.SOURCE';
MPRINT(EM_DIAGRAM):    filename cdist catalog 'SASHELP.EMUTIL.EM_CLASSDIST.SOURCE';
28169      %inc cdist;
NOTE: %INCLUDE (level 1) file CDIST is file SASHELP.EMUTIL.EM_CLASSDIST.SOURCE.
28170     +%macro class_profile(DATA=, OUTPUT=_CLASS, VARS=, METADATA=, WHERE=, STAT=_STAT, FREQ=);
28171     +   %if %INDEX(&EM_DEBUG, LOG SOURCE) %then %do;
28172     +       %put *** Statistics for Class variables ***;
28173     +       %put >>> DATA= &data  OUTPUT= &output;
28174     +       %put >>> VAR= &vars;
28175     +       %put >>> WHERE=  &where;
28176     +       %put >>> FREQ=  &freq;
28177     +   %end;
28179     +      /* Process metadata data set */
28180     +   filename _mac catalog 'WORK.MACROS.VARIABLES.SOURCE';
28181     +   %if %sysfunc(exist(&metadata))>0 and ("&metadata" ne "") %then %do;
28182     +       %let FREQ=;
28183     +       %let _nobs=0;
28184     +       data _null;
28185     +          set &metadata(where=(LEVEL ne 'INTERVAL' and ROLE ne 'FREQ')) end=eof;
28186     +          if eof then call symput('_nobs', put(_N_, best.));
28187     +       run;
28188     +       %if "&_nobs" ne "0" %then %do;
28189     +           data _null_;
28190     +              file _mac;
28191     +              length _VARS $80; retain _vars;
28192     +              if _n_ =1 then put '%macro _vars;';
28193     +              set &metadata end=eof;
28194     +              where LEVEL ne 'INTERVAL' or ROLE='FREQ';
28195     +              if ROLE='FREQ' then call symput('FREQ', NAME);
28196     +              else do;
28197     +                 if length(strip(_vars)) + length(strip(NAME)) + 1 <80  then
28198     +                    _vars = strip(_vars)!! ' ' !!strip(NAME);
28199     +                 else do;
28200     +                    put _Vars;
28201     +                    _vars = strip(NAME);
28202     +                 end;
28203     +              end;
28204     +              if eof then do;
28205     +                 put _Vars;
28206     +                 put '%mend _vars;';
28207     +              end;
28208     +           run;
28209     +       %end;
28210     +       %else %do;
28211     +           data _null_;
28212     +              file _mac;
28213     +              put '%macro _vars;';
28214     +              put '%mend _vars;';
28215     +           run;
28216     +       %end;
28217     +   %end;
28218     +   %else %do;
28219     +       data _null_;
28220     +          file _mac;
28221     +          put '%macro _vars;';
28222     +          put '%mend _vars;';
28223     +       run;
28224     +   %end;
28225     +   %inc _mac;
28226     +   filename _mac;
28228     +   %if "&VARS" eq "" and %_vars eq %then %goto doend;
28230     +   /* Check if FREQ variable is in the data set */
28231     +   %if &freq ne %then %do;
28232     +       data _null_;
28233     +          dsid = open("&data");
28234     +          if dsid>0 then do;
28235     +               if varnum(dsid, "&FREQ")<1 then
28236     +                  call symput('FREQ', '');
28237     +               dsid = close(dsid);
28238     +          end;
28239     +       run;
28240     +   %end;
28242     +   proc dmdb data=&DATA  nonorm classout=_tempclass(rename=(NAME=VARIABLE LEVEL=VALUE FREQUENCY=COUNT FREQPERCENT=PERCENT));
28243     +      class %_Vars &vars;
28244     +      %if &FREQ ne %then %do;
28245     +          freq &FREQ;
28246     +      %end;
28247     +      %if %bquote(&WHERE) ne %then %do;
28248     +            where &WHERE;
28249     +      %end;
28250     +   run;
28251     +   proc sort data=_tempclass;
28252     +      by VARIABLE;
28253     +   run;
28254     +   data &output;
28255     +      label VARIABLE     = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel, NOQUOTE))";
28256     +      label VALUE        = "%sysfunc(sasmsg(sashelp.dmine, rpt_value_vlabel,    NOQUOTE))";
28257     +      label COUNT        = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel,    NOQUOTE))";
28258     +      label PERCENT      = "%sysfunc(sasmsg(sashelp.dmine, rpt_percent_vlabel,  NOQUOTE))";
28259     +      set _tempclass;
28260     +      format COUNT;
28261     +      keep VARIABLE COUNT PERCENT VALUE;
28262     +   run;
28263     +   proc means data=&output noprint;
28264     +      class VARIABLE;
28265     +      var COUNT;
28266     +      output out=&STAT N=NUMCAT;
28267     +   run;
28268     +   data &STAT;
28269     +      set &STAT;
28270     +      where _TYPE_=1;
28271     +      KEEP VARIABLE NUMCAT;
28272     +      label NUMCAT   = "%sysfunc(sasmsg(sashelp.dmine, rpt_numcat_vlabel,   NOQUOTE))";
28273     +      format NUMCAT 8.;
28274     +   run;
28275     +   proc datasets lib=work nolist;
28276     +      delete _tempclass;
28277     +   run;
28278     +   quit;
28280     +   %doend:
28281     +%mend class_profile;
NOTE: %INCLUDE (level 1) ending.
28283      filename cdist;
MPRINT(EM_DIAGRAM):   filename cdist;
NOTE: Fileref CDIST has been deassigned.
28284      data work.tempSummaryClass;
MPRINT(EM_DIAGRAM):   data work.tempSummaryClass;
28285      set EMWS8.Filter2_CLASSDIST(drop=Count Percent);
MPRINT(EM_DIAGRAM):   set EMWS8.Filter2_CLASSDIST(drop=Count Percent);
28286      where Filter='Y';
MPRINT(EM_DIAGRAM):   where Filter='Y';
28287      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.FILTER2_CLASSDIST.
      WHERE Filter='Y';
NOTE: The data set WORK.TEMPSUMMARYCLASS has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

28288      proc sort data=work.tempSummaryClass;
MPRINT(EM_DIAGRAM):   proc sort data=work.tempSummaryClass;
28289      by variable value;
MPRINT(EM_DIAGRAM):   by variable value;
28290      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set WORK.TEMPSUMMARYCLASS.
NOTE: The data set WORK.TEMPSUMMARYCLASS has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

28291      %class_profile(DATA=EMWS8.FIMPORT_train, OUTPUT=EMWS8.Filter2_CLASSDIST, METADATA=EMWS8.Filter2_VariableSet, STAT=_STAT);
MPRINT(EM_DIAGRAM):   
MPRINT(CLASS_PROFILE):   filename _mac catalog 'WORK.MACROS.VARIABLES.SOURCE';
MPRINT(CLASS_PROFILE):   data _null;
MPRINT(CLASS_PROFILE):   set EMWS8.Filter2_VariableSet(where=(LEVEL ne 'INTERVAL' and ROLE ne 'FREQ')) end=eof;
MPRINT(CLASS_PROFILE):   if eof then call symput('_nobs', put(_N_, best.));
MPRINT(CLASS_PROFILE):   run;

NOTE: There were 5 observations read from the data set EMWS8.FILTER2_VARIABLESET.
      WHERE (LEVEL not = 'INTERVAL') and (ROLE not = 'FREQ');
NOTE: The data set WORK._NULL has 5 observations and 26 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(CLASS_PROFILE):   data _null_;
MPRINT(CLASS_PROFILE):   file _mac;
MPRINT(CLASS_PROFILE):   length _VARS $80;
MPRINT(CLASS_PROFILE):   retain _vars;
MPRINT(CLASS_PROFILE):   if _n_ =1 then put '%macro _vars;';
MPRINT(CLASS_PROFILE):   set EMWS8.Filter2_VariableSet end=eof;
MPRINT(CLASS_PROFILE):   where LEVEL ne 'INTERVAL' or ROLE='FREQ';
MPRINT(CLASS_PROFILE):   if ROLE='FREQ' then call symput('FREQ', NAME);
MPRINT(CLASS_PROFILE):   else do;
MPRINT(CLASS_PROFILE):   if length(strip(_vars)) + length(strip(NAME)) + 1 <80 then _vars = strip(_vars)!! ' ' !!strip(NAME);
MPRINT(CLASS_PROFILE):   else do;
MPRINT(CLASS_PROFILE):   put _Vars;
MPRINT(CLASS_PROFILE):   _vars = strip(NAME);
MPRINT(CLASS_PROFILE):   end;
MPRINT(CLASS_PROFILE):   end;
MPRINT(CLASS_PROFILE):   if eof then do;
MPRINT(CLASS_PROFILE):   put _Vars;
MPRINT(CLASS_PROFILE):   put '%mend _vars;';
MPRINT(CLASS_PROFILE):   end;
MPRINT(CLASS_PROFILE):   run;

NOTE: The file _MAC is:
      Catalog Name=WORK.MACROS.VARIABLES.SOURCE,
      Catalog Page Size=4096,
      Number of Catalog Pages=5,
      Created=Domingo, 06 de Março de 2016 16H41m,
      Last Modified=Domingo, 06 de Março de 2016 16H41m,
      Filename=C:\Users\VM-SAS\AppData\Local\Temp\SAS Temporary Files\_TD3916_VM-SAS-PC_\Prc2\macros.sas7bcat,
      Release Created=9.0301M2,Host Created=X64_7PRO

NOTE: 3 records were written to the file _MAC.
      The minimum record length was 12.
      The maximum record length was 49.
NOTE: There were 5 observations read from the data set EMWS8.FILTER2_VARIABLESET.
      WHERE (LEVEL not = 'INTERVAL') or (ROLE='FREQ');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

NOTE: %INCLUDE (level 1) file _MAC is file WORK.MACROS.VARIABLES.SOURCE.
28292     +%macro _vars;
28293     +DepVar Dependents Education Gender Marital_Status
28294     +%mend _vars;
NOTE: %INCLUDE (level 1) ending.
MPRINT(CLASS_PROFILE):   filename _mac;
NOTE: Fileref _MAC has been deassigned.
MPRINT(CLASS_PROFILE):   proc dmdb data=EMWS8.FIMPORT_train nonorm classout=_tempclass(rename=(NAME=VARIABLE LEVEL=VALUE FREQUENCY=COUNT FREQPERCENT=PERCENT));
MPRINT(CLASS_PROFILE):   class
MPRINT(_VARS):   DepVar Dependents Education Gender Marital_Status
MPRINT(CLASS_PROFILE):   ;
MPRINT(CLASS_PROFILE):   run;

NOTE: Records processed = 2500   Memory used = 511K.
NOTE: View EMWS8.FIMPORT_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      
NOTE: There were 2500 observations read from the data set EMWS8.FIMPORT_DATA.
NOTE: There were 2500 observations read from the data set EMWS8.FIMPORT_TRAIN.
NOTE: The data set WORK._TEMPCLASS has 21 observations and 9 variables.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      

MPRINT(CLASS_PROFILE):   proc sort data=_tempclass;
MPRINT(CLASS_PROFILE):   by VARIABLE;
MPRINT(CLASS_PROFILE):   run;

NOTE: There were 21 observations read from the data set WORK._TEMPCLASS.
NOTE: The data set WORK._TEMPCLASS has 21 observations and 9 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(CLASS_PROFILE):   data EMWS8.Filter2_CLASSDIST;
MPRINT(CLASS_PROFILE):   label VARIABLE = "Variable";
MPRINT(CLASS_PROFILE):   label VALUE = "Value";
MPRINT(CLASS_PROFILE):   label COUNT = "Frequency Count";
MPRINT(CLASS_PROFILE):   label PERCENT = "Percent";
MPRINT(CLASS_PROFILE):   set _tempclass;
MPRINT(CLASS_PROFILE):   format COUNT;
MPRINT(CLASS_PROFILE):   keep VARIABLE COUNT PERCENT VALUE;
MPRINT(CLASS_PROFILE):   run;

NOTE: There were 21 observations read from the data set WORK._TEMPCLASS.
NOTE: The data set EMWS8.FILTER2_CLASSDIST has 21 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      

MPRINT(CLASS_PROFILE):   proc means data=EMWS8.Filter2_CLASSDIST noprint;
MPRINT(CLASS_PROFILE):   class VARIABLE;
MPRINT(CLASS_PROFILE):   var COUNT;
MPRINT(CLASS_PROFILE):   output out=_STAT N=NUMCAT;
MPRINT(CLASS_PROFILE):   run;

NOTE: There were 21 observations read from the data set EMWS8.FILTER2_CLASSDIST.
NOTE: The data set WORK._STAT has 6 observations and 4 variables.
NOTE: PROCEDURE MEANS used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(CLASS_PROFILE):   data _STAT;
MPRINT(CLASS_PROFILE):   set _STAT;
MPRINT(CLASS_PROFILE):   where _TYPE_=1;
MPRINT(CLASS_PROFILE):   KEEP VARIABLE NUMCAT;
MPRINT(CLASS_PROFILE):   label NUMCAT = "Number of Levels";
MPRINT(CLASS_PROFILE):   format NUMCAT 8.;
MPRINT(CLASS_PROFILE):   run;

NOTE: There were 5 observations read from the data set WORK._STAT.
      WHERE _TYPE_=1;
NOTE: The data set WORK._STAT has 5 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(CLASS_PROFILE):   proc datasets lib=work nolist;
MPRINT(CLASS_PROFILE):   delete _tempclass;
MPRINT(CLASS_PROFILE):   run;

NOTE: Deleting WORK._TEMPCLASS (memtype=DATA).
MPRINT(CLASS_PROFILE):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):  ;

28295      data EMWS8.Filter2_CLASSDIST;
MPRINT(EM_DIAGRAM):    data EMWS8.Filter2_CLASSDIST;
28296      set EMWS8.Filter2_CLASSDIST;
MPRINT(EM_DIAGRAM):   set EMWS8.Filter2_CLASSDIST;
28297      length Filter $1;
MPRINT(EM_DIAGRAM):   length Filter $1;
28298      retain Filter 'N';
MPRINT(EM_DIAGRAM):   retain Filter 'N';
28299      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 21 observations read from the data set EMWS8.FILTER2_CLASSDIST.
NOTE: The data set EMWS8.FILTER2_CLASSDIST has 21 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.00 seconds
      

28300      proc sort data=EMWS8.Filter2_CLASSDIST;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter2_CLASSDIST;
28301      by variable value;
MPRINT(EM_DIAGRAM):   by variable value;
28302      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 21 observations read from the data set EMWS8.FILTER2_CLASSDIST.
NOTE: The data set EMWS8.FILTER2_CLASSDIST has 21 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.03 seconds
      cpu time            0.00 seconds
      

28303      data EMWS8.Filter2_CLASSDIST;
MPRINT(EM_DIAGRAM):    data EMWS8.Filter2_CLASSDIST;
28304      merge EMWS8.Filter2_CLASSDIST(in=_a) work.tempSummaryClass(in=_b);
MPRINT(EM_DIAGRAM):   merge EMWS8.Filter2_CLASSDIST(in=_a) work.tempSummaryClass(in=_b);
28305      by variable value;
MPRINT(EM_DIAGRAM):   by variable value;
28306      if _a then output;
MPRINT(EM_DIAGRAM):   if _a then output;
28307      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 21 observations read from the data set EMWS8.FILTER2_CLASSDIST.
NOTE: There were 3 observations read from the data set WORK.TEMPSUMMARYCLASS.
NOTE: The data set EMWS8.FILTER2_CLASSDIST has 21 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.00 seconds
      

28308      data EMWS8.Filter2_CLASSFILTER / view=EMWS8.Filter2_CLASSFILTER;
MPRINT(EM_DIAGRAM):    data EMWS8.Filter2_CLASSFILTER / view=EMWS8.Filter2_CLASSFILTER;
28309      set EMWS8.Filter2_CLASSDIST;
MPRINT(EM_DIAGRAM):   set EMWS8.Filter2_CLASSDIST;
28310      where Filter eq 'Y';
MPRINT(EM_DIAGRAM):   where Filter eq 'Y';
28311      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: DATA STEP view saved on file EMWS8.FILTER2_CLASSFILTER.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      

28312      %let EM_CODEBAR = *------------------------------------------------------------*;
28313      filename cdist catalog 'SASHELP.EMUTIL.EM_VARDIST.SOURCE';
MPRINT(EM_DIAGRAM):    filename cdist catalog 'SASHELP.EMUTIL.EM_VARDIST.SOURCE';
28314      %inc cdist;
NOTE: %INCLUDE (level 1) file CDIST is file SASHELP.EMUTIL.EM_VARDIST.SOURCE.
28315     +%macro var_profile(DATA=, OUTPUT=_INTERVAL, VARS=, METADATA=, COMPUTESTAT=Y, STAT=_STAT, PCTLSTAT=_PCTLSTAT, FREQ=,
28316     +                   BINDATA=, BIN=Y, NUMBARS=8, MINMAX=N);
28317     +   %let _em_nodeid = EM;
28318     +   %if %symexist(EM_NODEID) %then %do;
28319     +       %let _em_nodeid = &em_nodeid;
28320     +   %end;
28322     +   %let msgString = %sysfunc(sasmsg(sashelp.dmine, computingsummarystats_note, NOQUOTE, &_em_nodeid));
28323     +   %put &EM_CODEBAR;
28324     +   %put * &msgString;
28325     +   %put &EM_CODEBAR;
28327     +   /* Process metadata data set */
28328     +   filename _mac catalog 'WORK.MACROS.VARIABLES.SOURCE';
28329     +   %if %sysfunc(exist(&metadata))>0 and (&metadata ne ) %then %do;
28330     +       %let FREQ=;
28331     +       %let _nobs=0;
28332     +       data _null;
28333     +          set &metadata(where=(LEVEL = 'INTERVAL' and ROLE ne 'FREQ')) end=eof;
28334     +          if eof then call symput('_nobs', put(_N_, best.));
28335     +       run;
28336     +       %if "&_nobs" ne "0" %then %do;
28337     +           data _null_;
28338     +              file _mac;
28339     +              length _VARS $80; retain _vars;
28340     +              if _n_ =1 then put '%macro _vars;';
28341     +              set &metadata end=eof;
28342     +              where LEVEL = 'INTERVAL' or ROLE='FREQ';
28343     +              if ROLE='FREQ' then call symput('FREQ', trim(NAME));
28344     +              else do;
28345     +                 if length(strip(_vars)) + length(strip(NAME)) + 1 <80  then
28346     +                    _vars = strip(_vars)!! ' ' !!strip(NAME);
28347     +                 else do;
28348     +                    put _Vars;
28349     +                    _vars = strip(NAME);
28350     +                 end;
28351     +              end;
28353     +              if eof then do;
28354     +                 put _Vars;
28355     +                 put '%mend _vars;';
28356     +              end;
28357     +           run;
28358     +       %end;
28359     +       %else %do;
28360     +           data _null_;
28361     +              file _mac;
28362     +              put '%macro _vars;';
28363     +              put '%mend _vars;';
28364     +           run;
28365     +       %end;
28366     +   %end;
28367     +   %else %do;
28368     +       data _null_;
28369     +          file _mac;
28370     +          put '%macro _vars;';
28371     +          put '%mend _vars;';
28372     +       run;
28373     +   %end;
28374     +   %inc _mac;
28375     +   filename _mac;
28377     +   %if "&VARS" eq "" and %_vars eq %then %goto doend;
28379     +   /* Check if FREQ variable is in the data set */
28380     +   %if &freq ne %then %do;
28381     +       data _null_;
28382     +          dsid = open("&data");
28383     +          if dsid>0 then do;
28384     +               if varnum(dsid, "&FREQ")<1 then
28385     +                  call symput('FREQ', '');
28386     +               dsid = close(dsid);
28387     +          end;
28388     +       run;
28389     +   %end;
28391     +   %if &bindata eq %then %do;
28392     +       %let bindata = _BOUNDS;
28393     +       proc datasets lib=work nolist mt=(DATA VIEW);
28394     +          delete _BOUNDS;
28395     +       run;
28396     +   %end;
28398     +   %global _EM_VARDISTOBS_MAX;
28399     +   %let _EM_VARDISTOBS_MAX = 1000000;
28401     +   %if %symexist(EM_VARDISTOBS_MAX) %then %do;
28402     +       %let _EM_VARDISTOBS_MAX= %eval(&EM_VARDISTOBS_MAX);
28403     +   %end;
28405     +   %if &computeStat = Y %then %do;
28406     +       proc dmdb data=&DATA(obs=&_EM_VARDISTOBS_MAX) varout=&STAT(rename=(NAME=VARIABLE));
28407     +          var %_Vars &vars;
28408     +          %if &FREQ ne %then %do;
28409     +              freq &FREQ;
28410     +          %end;
28411     +       run;
28412     +       proc sort data=&stat;
28413     +          by VARIABLE;
28414     +       run;
28416     +       %if ^%sysfunc(indexc(&STAT, .)) %then %do;
28417     +           %let _library = WORK;
28418     +           %let _member  = &STAT;
28419     +      %end;
28420     +      %else %do;
28421     +          %let _library = %scan(&STAT, 1, .);
28422     +          %let _member  = %scan(&STAT, 2, .);
28423     +      %end;
28425     +      proc datasets library=&_library nolist;
28426     +         modify &_member;
28427     +         label NMISS    = "%sysfunc(sasmsg(sashelp.dmine, rpt_missing_vlabel, NOQUOTE))";
28428     +         label MIN      = "%sysfunc(sasmsg(sashelp.dmine, rpt_minimum_vlabel, NOQUOTE))";
28429     +         label MAX      = "%sysfunc(sasmsg(sashelp.dmine, rpt_maximum_vlabel, NOQUOTE))";
28430     +         label MEAN     = "%sysfunc(sasmsg(sashelp.dmine, rpt_mean_vlabel,    NOQUOTE))";
28431     +         label STD      = "%sysfunc(sasmsg(sashelp.dmine, rpt_std_vlabel,     NOQUOTE))";
28432     +         label SKEWNESS = "%sysfunc(sasmsg(sashelp.dmine, rpt_skewness_vlabel, NOQUOTE))";
28433     +         label KURTOSIS = "%sysfunc(sasmsg(sashelp.dmine, rpt_kurtosis_vlabel, NOQUOTE))";
28434     +      run;
28435     +      quit;
28436     +   %end;
28438     +   %if &BIN ne N %then %do;
28439     +       %if %sysfunc(exist(&bindata))<1 %then %do;
28440     +           %let msgString = %sysfunc(sasmsg(sashelp.dmine, computingmidpoints_note, NOQUOTE, &_em_nodeid));
28441     +           %put &EM_CODEBAR;
28442     +           %put * &msgString;
28443     +           %put &EM_CODEBAR;
28444     +           filename fref catalog 'work.em.profileformat.source';
28446     +            %let _maxlevel = %eval(&numbars + 1);
28447     +            proc dmdb data=&data(obs=&_EM_VARDISTOBS_MAX) classout=_CLASSOUT maxlevel=&_maxlevel;
28448     +               class %_vars &vars;
28449     +            run;
28450     +            proc freq data=_CLASSOUT ORDER=DATA noprint;
28451     +               table NAME / OUT = _COUNT(where=(COUNT<&_maxlevel));
28452     +            run;
28453     +           proc sort data=_COUNT(keep=NAME COUNT rename=(COUNT=_NUMCLASSBINS_));
28454     +              by NAME;
28455     +           run;
28456     +           proc sort data=_CLASSOUT;
28457     +              by NAME;
28458     +          run;
28459     +          proc transpose data=_CLASSOUT out=_DISCRETEMID(DROP=_NAME_ RENAME=(NAME=VARIABLE)) prefix=_MIDPOINT;
28460     +             var NRAW;
28461     +             by NAME;
28462     +          run;
28463     +          proc delete data=WORK._CLASSOUT;
28464     +          run;
28465     +          data _null_;
28466     +             dsid = open('_DISCRETEMID');
28467     +             if dsid then do;
28468     +                call symput('NUMCLASSBARS', left(trim(put(attrn(dsid, 'NVARS')-1, best12.))));
28469     +                dsid = close(dsid);
28470     +             end;
28471     +          run;
28472     +          data _DISCRETEMID;
28473     +             merge _DISCRETEMID _COUNT(in=_b rename=(NAME=VARIABLE));
28474     +             keep VARIABLE _MIDPOINT1--_MIDPOINT&numclassbars _NUMCLASSBINS_;
28475     +             by VARIABLE;
28476     +             if _b then output;
28477     +          run;
28479     +          data _EMVARDIST / view=_EMVARDIST;
28480     +             set &DATA(keep=%_VARS &vars &FREQ  obs=&_EM_VARDISTOBS_MAX);
28481     +          run;
28482     +          proc stdize data=_EMVARDIST outstat=&pctlstat  out=_null_ pctlpts=(0 5 25 50 75 95 100);
28483     +             var %_vars &vars;
28484     +             %if &FREQ ne %then %do;
28485     +                 freq &FREQ / notrunc;
28486     +             %end;
28487     +          run;
28488     +          proc datasets lib=WORK NOLIST;
28489     +             delete _EMVARDIST / mt=view;
28490     +          run;
28491     +          quit;
28492     +          %if %upcase(&minmax) = Y %then %do;
28493     +              proc transpose data=&pctlstat out=_MINMAXDATA(rename=(_NAME_=VARIABLE COL1=MIN COL2=MAX));
28494     +                 where  _type_ in('P0', 'P100');
28495     +              run;
28496     +              data _MINMAXDATA(keep=Variable Value Pos);
28497     +                 set _MINMAXDATA;
28498     +                 label VARIABLE  = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel, NOQUOTE))";
28499     +                 Value = min; Pos=1; output;
28500     +                 Value = max; Pos=3; output;
28501     +              run;
28502     +          %end;
28503     +          proc transpose data=&pctlstat out=&bindata(rename=(_NAME_=VARIABLE COL1=MIN COL2=P5
28504     +                                                             COL3=P95 COL4=MAX));
28505     +             where  _type_ in('P0', 'P5', 'P95', 'P100');
28506     +          run;
28507     +          proc sort data=&bindata;
28508     +             by VARIABLE;
28509     +          run;
28511     +          %let new_numbars=%eval(&NUMBARS+12);
28512     +          data &bindata;
28513     +             set &bindata;
28514     +             length Format $12;
28515     +             array _midpoint{&new_NUMBARS};
28516     +             array _bounds{&new_NUMBARS};
28517     +             if (max - min)>1e-10 then do;
28518     +                step = abs(P95-P5)/&NUMBARS;
28519     +                lstep = abs(p5- min)/5;
28520     +                ustep = abs(max-p95)/5;
28521     +                /* No outlying values */;
28522     +                if lstep<=step and ustep<=step then do;
28523     +                   step = abs(MIN-MAX)/&NUMBARS;
28524     +                   START=MIN;
28525     +                   do i=1 to &numbars;
28526     +                      _bounds(i)   = MIN + i*step;      if abs(_bounds{i})< 1e-10 then _bounds(i)= 0;
28527     +                      _midpoint(i) = MIN+ (i-0.5)*step; if abs(_midpoint{i})< 1e-10 then _midpoint(i)= 0;
28528     +                   end;
28529     +                   %let new_numbars = &numbars;
28530     +                end;
28531     +                else do;
28532     +                   if lstep<=step then do;
28533     +                      step = abs(MIN-P95)/&NUMBARS;
28534     +                      /* Start Histogram at MIN value */
28535     +                      do i=1 to &NUMBARS;
28536     +                         _bounds(i)   = MIN + i*step;       if abs(_bounds{i})< 1e-10 then _bounds(i)= 0;
28537     +                         _midpoint(i) = MIN+ (i-0.5)*step;  if abs(_midpoint{i})< 1e-10 then _midpoint(i)= 0;
28538     +                      end;
28539     +                      /* Make BINS with upper outliers width */
28540     +                      do i=1 to 5;
28541     +                         numbars = &numbars + i;
28542     +                         _bounds(numbars)   = P95 + i*ustep;  if abs(_bounds{numbars})< 1e-10 then _bounds(numbars)= 0;
28543     +                         _midpoint(numbars) = P95 + (i-0.5)*ustep + abs(ustep-step)/2;  if abs(_bounds{numbars})< 1e-10 then _bounds(numbars)= 0;
28544     +                      end;
28545     +                       %let new_numbars = %eval(&numbars+5);
28546     +                   end;
28547     +                   else do;
28548     +                      /* Make BINS with lower outliers width */
28549     +                      do i=1 to 5;
28550     +                         _bounds(i)   = P5 - (5-i)*lstep; if abs(_bounds{i})< 1e-10 then _bounds(i)= 0;
28551     +                         _midpoint(i) = P5 - (5 - i + 0.5)*lstep - abs(lstep-step)/2; if abs(_midpoint{i})< 1e-10 then _midpoint(i)= 0;
28552     +                      end;
28553     +                      if ustep<= step then do;
28554     +                         step = abs(P5-MAX)/&NUMBARS;
28555     +                         /* End Histogram at MAX value */
28556     +                         do i=1 to &NUMBARS;
28557     +                            numbars = i+5;
28558     +                            _bounds(numbars)   = P5 + i*step; if abs(_bounds{numbars})< 1e-10 then _bounds(numbars)= 0;
28559     +                            _midpoint(numbars) = P5 + (i-0.5)*step; if abs(_midpoint{numbars})< 1e-10 then _midpoint(numbars)= 0;
28560     +                         end;
28561     +                          %let new_numbars = %eval(&numbars+5);
28562     +                      end;
28563     +                      else do;
28564     +                         do i=1 to &NUMBARS;
28565     +                            numbars = i+5;
28566     +                            _bounds(numbars)  = P5 + i*step; if abs(_bounds{numbars})< 1e-10 then _bounds(numbars)= 0;
28567     +                            _midpoint(numbars) = P5 + (i-0.5)*step; if abs(_midpoint{numbars})< 1e-10 then _midpoint(numbars)= 0;
28568     +                         end;
28569     +                         /* Make BINS with upper outliers width */
28570     +                         do i=1 to 5;
28571     +                            numbars = &numbars+5+i;
28572     +                            _bounds(numbars)   = P95 + i*ustep; if abs(_bounds{numbars})< 1e-10 then _bounds(numbars)= 0;
28573     +                            _midpoint(numbars) = P95 + (i-0.5)*ustep + abs(ustep-step)/2;if abs(_midpoint{numbars})< 1e-10 then _midpoint(numbars)= 0;
28574     +                         end;
28575     +                         %let new_numbars = %eval(&numbars+10);
28576     +                      end;
28577     +                   end;
28578     +                end;
28579     +             end;
28580     +             else do;
28581     +                _bounds(1)   = MIN;
28582     +                _midpoint(1) = MIN;
28583     +             end;
28584     +             Format = 'F'!!trim(left(put(_n_,6.)))!!'_';
28585     +          run;
28586     +          %if %sysfunc(exist(_DISCRETEMID)) %then %do;
28587     +              data &bindata;
28588     +                 merge &bindata _DISCRETEMID(in = _b);
28589     +                 by VARIABLE;
28590     +                 if _b then _DISCRETE=1;
28591     +                 else _DISCRETE=0;
28592     +              run;
28593     +          %end;
28595     +          data _null_;
28596     +             file fref;
28597     +             set &bindata end=eof;
28598     +             array _bounds{&NEW_NUMBARS};
28599     +             array _midpoint{&NEW_NUMBARS};
28600     +             if _n_=1 then
28601     +                put 'proc format;';
28603     +             put 'value ' Format;
28604     +             if _DISCRETE then do;
28605     +                 do i=1 to &numbars;
28606     +                    _MID = _midpoint{i};
28607     +                    if _MID ne . and i<= _NUMCLASSBINS_ then
28608     +                       put _MID '="' _MID '"';
28609     +                 end;
28610     +                 put ';';
28611     +             end;
28612     +             else do;
28613     +                if min eq max then do;
28614     +                   put 'low - high ="' MIN '";';
28615     +                end;
28616     +                else do;
28617     +                   _LB  = MIN;
28618     +                   _MID = _midpoint{1};
28619     +                   _UB  = _bounds{1};
28620     +                   put 'LOW -' _UB '="' _MID '"';
28622     +                   do i=1 to &NEW_NUMBARS-1;
28623     +                      _LB  = _bounds{i};
28624     +                      j=i+1;
28625     +                      _MID = _midpoint{j};
28626     +                      _UB  = _bounds{j};
28627     +                      if (_UB ne .) and (_LB ne _UB) then do;
28628     +                         if _UB>=MAX then
28629     +                            put _LB '-HIGH="' _MID '"';
28630     +                         else
28631     +                            put _LB '-' _UB '="' _MID '"';
28632     +                      end;
28633     +                   end;
28634     +                end;
28635     +             end;
28636     +             put ';';
28637     +             if eof then put 'run;';
28638     +          run;
28640     +          %inc fref;
28642     +          filename fref;
28643     +      %end;
28645     +      data _binneddata / view=_binneddata;
28646     +         set &DATA(obs=&_EM_VARDISTOBS_MAX);
28648     +         %let dsid    =%sysfunc(open(&bindata));
28649     +         %let namenum = %sysfunc(varnum(&dsid, VARIABLE));
28650     +         %let fmtnum  = %sysfunc(varnum(&dsid, FORMAT));
28651     +         %let obs = %sysfunc(fetch(&dsid));
28653     +         %if (&obs=0) %then %do;
28654     +             format
28655     +         %end;
28657     +         %let _count = 0;
28658     +         %do %while(&obs=0);
28659     +             %let _count = %eval(&_count +1);
28660     +             %let _name = %sysfunc(getvarc(&dsid, &namenum));
28661     +             %let _fmtname = %sysfunc(getvarc(&dsid, &fmtnum));
28662     +             %do;
28663     +                &_name &_fmtname..
28664     +             %end;
28665     +             %let obs = %sysfunc(fetch(&dsid));
28666     +         %end;
28667     +         %let dsid=%sysfunc(close(&dsid));
28668     +         ;
28669     +      run;
28670     +   %end;
28672     +    %if &bin ne N %then %do;
28673     +        proc dmdb data=_binneddata(obs=&_EM_VARDISTOBS_MAX) classout=_temptab(rename=(NAME=VARIABLE FREQUENCY=COUNT FREQPERCENT=PERCENT));
28674     +    %end;
28675     +    %else %do;
28676     +        proc dmdb data = &data(obs=&_EM_VARDISTOBS_MAX) classout=_temptab(rename=(NAME=VARIABLE FREQUENCY=COUNT FREQPERCENT=PERCENT));
28677     +    %end;
28678     +      class %_vars &vars;
28679     +      %if &FREQ ne %then %do;
28680     +          freq &FREQ;
28681     +      %end;
28682     +   run;
28683     +   data &output;
28684     +      label VALUE        = "%sysfunc(sasmsg(sashelp.dmine, rpt_value_vlabel,    NOQUOTE))";
28685     +      label VARIABLE     = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel, NOQUOTE))";
28686     +      label COUNT        = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel,    NOQUOTE))";
28687     +      label PERCENT      = "%sysfunc(sasmsg(sashelp.dmine, rpt_percent_vlabel,  NOQUOTE))";
28688     +      set _temptab;
28689     +      format VALUE 12.3 count;
28690     +      value = inputn(level, 'best12.');
28691     +      keep VARIABLE COUNT PERCENT VALUE;
28692     +   run;
28693     +   %if &BIN ne N and %sysfunc(exist(_MINMAXDATA)) and &minmax=Y %then %do;
28694     +       data &output;
28695     +          set &output(in=_a) _MINMAXDATA;
28696     +          if _a then Pos=2;
28697     +       run;
28698     +       proc sort data=&output out=&output(drop=pos);
28699     +          by VARIABLE POS VALUE;
28700     +          where VALUE ne .;
28701     +       run;
28702     +   %end;
28703     +   proc datasets lib=work nolist mt=(DATA VIEW);
28704     +      delete _TEMPTAB _BINNEDDATA _MINMAXDATA;
28705     +   run;
28706     +   quit;
28708     +   %doend:
28709     +%mend var_profile;
NOTE: %INCLUDE (level 1) ending.
28710      filename cdist;
MPRINT(EM_DIAGRAM):   filename cdist;
NOTE: Fileref CDIST has been deassigned.
28711      %var_profile(DATA=EMWS8.FIMPORT_train, OUTPUT=EMWS8.Filter2_VARDIST, METADATA=EMWS8.Filter2_VariableSet, COMPUTESTAT=N, FREQ=, BIN=Y, NUMBARS= 16, minmax=Y);
*------------------------------------------------------------*
* Filter2: Computing Summary Statistics
*------------------------------------------------------------*
MPRINT(VAR_PROFILE):   filename _mac catalog 'WORK.MACROS.VARIABLES.SOURCE';
MPRINT(VAR_PROFILE):   data _null;
MPRINT(VAR_PROFILE):   set EMWS8.Filter2_VariableSet(where=(LEVEL = 'INTERVAL' and ROLE ne 'FREQ')) end=eof;
MPRINT(VAR_PROFILE):   if eof then call symput('_nobs', put(_N_, best.));
MPRINT(VAR_PROFILE):   run;

NOTE: There were 16 observations read from the data set EMWS8.FILTER2_VARIABLESET.
      WHERE (LEVEL='INTERVAL') and (ROLE not = 'FREQ');
NOTE: The data set WORK._NULL has 16 observations and 26 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(VAR_PROFILE):   data _null_;
MPRINT(VAR_PROFILE):   file _mac;
MPRINT(VAR_PROFILE):   length _VARS $80;
MPRINT(VAR_PROFILE):   retain _vars;
MPRINT(VAR_PROFILE):   if _n_ =1 then put '%macro _vars;';
MPRINT(VAR_PROFILE):   set EMWS8.Filter2_VariableSet end=eof;
MPRINT(VAR_PROFILE):   where LEVEL = 'INTERVAL' or ROLE='FREQ';
MPRINT(VAR_PROFILE):   if ROLE='FREQ' then call symput('FREQ', trim(NAME));
MPRINT(VAR_PROFILE):   else do;
MPRINT(VAR_PROFILE):   if length(strip(_vars)) + length(strip(NAME)) + 1 <80 then _vars = strip(_vars)!! ' ' !!strip(NAME);
MPRINT(VAR_PROFILE):   else do;
MPRINT(VAR_PROFILE):   put _Vars;
MPRINT(VAR_PROFILE):   _vars = strip(NAME);
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   if eof then do;
MPRINT(VAR_PROFILE):   put _Vars;
MPRINT(VAR_PROFILE):   put '%mend _vars;';
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   run;

NOTE: The file _MAC is:
      Catalog Name=WORK.MACROS.VARIABLES.SOURCE,
      Catalog Page Size=4096,
      Number of Catalog Pages=5,
      Created=Domingo, 06 de Março de 2016 16H41m,
      Last Modified=Domingo, 06 de Março de 2016 16H42m,
      Filename=C:\Users\VM-SAS\AppData\Local\Temp\SAS Temporary Files\_TD3916_VM-SAS-PC_\Prc2\macros.sas7bcat,
      Release Created=9.0301M2,Host Created=X64_7PRO

NOTE: 5 records were written to the file _MAC.
      The minimum record length was 10.
      The maximum record length was 79.
NOTE: There were 16 observations read from the data set EMWS8.FILTER2_VARIABLESET.
      WHERE (LEVEL='INTERVAL') or (ROLE='FREQ');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

NOTE: %INCLUDE (level 1) file _MAC is file WORK.MACROS.VARIABLES.SOURCE.
28712     +%macro _vars;
28713     +CatPurchase Clothes CostPerContact Dt_Customer Frq HouseKeeping Income Kitchen
28714     +Mnt NetPurchase Rcn Recomendation RevenuePerPositiveAnswer SmallAppliances Toys
28715     +Year_Birth
28716     +%mend _vars;
NOTE: %INCLUDE (level 1) ending.
MPRINT(VAR_PROFILE):   filename _mac;
NOTE: Fileref _MAC has been deassigned.
MPRINT(VAR_PROFILE):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(VAR_PROFILE):   delete _BOUNDS;
MPRINT(VAR_PROFILE):   run;

NOTE: The file WORK._BOUNDS (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
*------------------------------------------------------------*
* computingmidpoints_note
*------------------------------------------------------------*
MPRINT(VAR_PROFILE):   filename fref catalog 'work.em.profileformat.source';

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VAR_PROFILE):   proc dmdb data=EMWS8.FIMPORT_train(obs=1000000) classout=_CLASSOUT maxlevel=17;
MPRINT(VAR_PROFILE):   class
MPRINT(_VARS):   CatPurchase Clothes CostPerContact Dt_Customer Frq HouseKeeping Income Kitchen Mnt NetPurchase Rcn Recomendation RevenuePerPositiveAnswer SmallAppliances Toys Year_Birth
MPRINT(VAR_PROFILE):   ;
MPRINT(VAR_PROFILE):   run;

NOTE: Records processed = 2500   Memory used = 511K.
NOTE: View EMWS8.FIMPORT_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
NOTE: There were 2500 observations read from the data set EMWS8.FIMPORT_DATA.
NOTE: There were 2500 observations read from the data set EMWS8.FIMPORT_TRAIN.
NOTE: The data set WORK._CLASSOUT has 229 observations and 9 variables.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      

MPRINT(VAR_PROFILE):   proc freq data=_CLASSOUT ORDER=DATA noprint;
MPRINT(VAR_PROFILE):   table NAME / OUT = _COUNT(where=(COUNT<17));
MPRINT(VAR_PROFILE):   run;

NOTE: There were 229 observations read from the data set WORK._CLASSOUT.
NOTE: The data set WORK._COUNT has 3 observations and 3 variables.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VAR_PROFILE):   proc sort data=_COUNT(keep=NAME COUNT rename=(COUNT=_NUMCLASSBINS_));
MPRINT(VAR_PROFILE):   by NAME;
MPRINT(VAR_PROFILE):   run;

NOTE: There were 3 observations read from the data set WORK._COUNT.
NOTE: The data set WORK._COUNT has 3 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(VAR_PROFILE):   proc sort data=_CLASSOUT;
MPRINT(VAR_PROFILE):   by NAME;
MPRINT(VAR_PROFILE):   run;

NOTE: There were 229 observations read from the data set WORK._CLASSOUT.
NOTE: The data set WORK._CLASSOUT has 229 observations and 9 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VAR_PROFILE):   proc transpose data=_CLASSOUT out=_DISCRETEMID(DROP=_NAME_ RENAME=(NAME=VARIABLE)) prefix=_MIDPOINT;
MPRINT(VAR_PROFILE):   var NRAW;
MPRINT(VAR_PROFILE):   by NAME;
MPRINT(VAR_PROFILE):   run;

NOTE: There were 229 observations read from the data set WORK._CLASSOUT.
NOTE: The data set WORK._DISCRETEMID has 16 observations and 18 variables.
NOTE: PROCEDURE TRANSPOSE used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VAR_PROFILE):   proc delete data=WORK._CLASSOUT;
MPRINT(VAR_PROFILE):   run;

NOTE: Deleting WORK._CLASSOUT (memtype=DATA).
NOTE: PROCEDURE DELETE used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VAR_PROFILE):   data _null_;
MPRINT(VAR_PROFILE):   dsid = open('_DISCRETEMID');
MPRINT(VAR_PROFILE):   if dsid then do;
MPRINT(VAR_PROFILE):   call symput('NUMCLASSBARS', left(trim(put(attrn(dsid, 'NVARS')-1, best12.))));
MPRINT(VAR_PROFILE):   dsid = close(dsid);
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VAR_PROFILE):   data _DISCRETEMID;
MPRINT(VAR_PROFILE):   merge _DISCRETEMID _COUNT(in=_b rename=(NAME=VARIABLE));
MPRINT(VAR_PROFILE):   keep VARIABLE _MIDPOINT1--_MIDPOINT17 _NUMCLASSBINS_;
MPRINT(VAR_PROFILE):   by VARIABLE;
MPRINT(VAR_PROFILE):   if _b then output;
MPRINT(VAR_PROFILE):   run;

NOTE: There were 16 observations read from the data set WORK._DISCRETEMID.
NOTE: There were 3 observations read from the data set WORK._COUNT.
NOTE: The data set WORK._DISCRETEMID has 3 observations and 19 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VAR_PROFILE):   data _EMVARDIST / view=_EMVARDIST;
MPRINT(VAR_PROFILE):   set EMWS8.FIMPORT_train(keep
MPRINT(VAR_PROFILE):  =CatPurchase Clothes CostPerContact Dt_Customer Frq HouseKeeping Income Kitchen Mnt NetPurchase Rcn Recomendation RevenuePerPositiveAnswer SmallAppliances Toys Year_Birth obs=1000000);
MPRINT(VAR_PROFILE):   run;

NOTE: DATA STEP view saved on file WORK._EMVARDIST.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.FIMPORT_TRAIN.VIEW used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      

MPRINT(VAR_PROFILE):   proc stdize data=_EMVARDIST outstat=_PCTLSTAT out=_null_ pctlpts=(0 5 25 50 75 95 100);
MPRINT(VAR_PROFILE):   var
MPRINT(_VARS):   CatPurchase Clothes CostPerContact Dt_Customer Frq HouseKeeping Income Kitchen Mnt NetPurchase Rcn Recomendation RevenuePerPositiveAnswer SmallAppliances Toys Year_Birth
MPRINT(VAR_PROFILE):   ;
MPRINT(VAR_PROFILE):   run;

WARNING: The scale estimator for variable CostPerContact is less than or equal to 0. Variable CostPerContact will not be standardized and a missing value is assigned to its scale estimator.
WARNING: The scale estimator for variable RevenuePerPositiveAnswer is less than or equal to 0. Variable RevenuePerPositiveAnswer will not be standardized and a missing value is assigned to its scale estimator.
NOTE: There were 2500 observations read from the data set EMWS8.FIMPORT_DATA.
NOTE: View WORK._EMVARDIST.VIEW used (Total process time):
      real time           0.18 seconds
      cpu time            0.15 seconds
      
NOTE: There were 2500 observations read from the data set EMWS8.FIMPORT_TRAIN.
NOTE: There were 2500 observations read from the data set WORK._EMVARDIST.
NOTE: The data set WORK._PCTLSTAT has 15 observations and 17 variables.
NOTE: PROCEDURE STDIZE used (Total process time):
      real time           0.20 seconds
      cpu time            0.15 seconds
      

MPRINT(VAR_PROFILE):   proc datasets lib=WORK NOLIST;
MPRINT(VAR_PROFILE):   delete _EMVARDIST / mt=view;
MPRINT(VAR_PROFILE):   run;

NOTE: Deleting WORK._EMVARDIST (memtype=VIEW).
MPRINT(VAR_PROFILE):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VAR_PROFILE):   proc transpose data=_PCTLSTAT out=_MINMAXDATA(rename=(_NAME_=VARIABLE COL1=MIN COL2=MAX));
MPRINT(VAR_PROFILE):   where _type_ in('P0', 'P100');
MPRINT(VAR_PROFILE):   run;

NOTE: There were 2 observations read from the data set WORK._PCTLSTAT.
      WHERE _type_ in ('P0', 'P100');
NOTE: The data set WORK._MINMAXDATA has 16 observations and 4 variables.
NOTE: PROCEDURE TRANSPOSE used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VAR_PROFILE):   data _MINMAXDATA(keep=Variable Value Pos);
MPRINT(VAR_PROFILE):   set _MINMAXDATA;
MPRINT(VAR_PROFILE):   label VARIABLE = "Variable";
MPRINT(VAR_PROFILE):   Value = min;
MPRINT(VAR_PROFILE):   Pos=1;
MPRINT(VAR_PROFILE):   output;
MPRINT(VAR_PROFILE):   Value = max;
MPRINT(VAR_PROFILE):   Pos=3;
MPRINT(VAR_PROFILE):   output;
MPRINT(VAR_PROFILE):   run;

NOTE: There were 16 observations read from the data set WORK._MINMAXDATA.
NOTE: The data set WORK._MINMAXDATA has 32 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VAR_PROFILE):   proc transpose data=_PCTLSTAT out=_BOUNDS(rename=(_NAME_=VARIABLE COL1=MIN COL2=P5 COL3=P95 COL4=MAX));
MPRINT(VAR_PROFILE):   where _type_ in('P0', 'P5', 'P95', 'P100');
MPRINT(VAR_PROFILE):   run;

NOTE: There were 4 observations read from the data set WORK._PCTLSTAT.
      WHERE _type_ in ('P0', 'P100', 'P5', 'P95');
NOTE: The data set WORK._BOUNDS has 16 observations and 6 variables.
NOTE: PROCEDURE TRANSPOSE used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(VAR_PROFILE):   proc sort data=_BOUNDS;
MPRINT(VAR_PROFILE):   by VARIABLE;
MPRINT(VAR_PROFILE):   run;

NOTE: There were 16 observations read from the data set WORK._BOUNDS.
NOTE: The data set WORK._BOUNDS has 16 observations and 6 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VAR_PROFILE):   data _BOUNDS;
MPRINT(VAR_PROFILE):   set _BOUNDS;
MPRINT(VAR_PROFILE):   length Format $12;
MPRINT(VAR_PROFILE):   array _midpoint{28};
MPRINT(VAR_PROFILE):   array _bounds{28};
MPRINT(VAR_PROFILE):   if (max - min)>1e-10 then do;
MPRINT(VAR_PROFILE):   step = abs(P95-P5)/16;
MPRINT(VAR_PROFILE):   lstep = abs(p5- min)/5;
MPRINT(VAR_PROFILE):   ustep = abs(max-p95)/5;
MPRINT(VAR_PROFILE):   ;
MPRINT(VAR_PROFILE):   if lstep<=step and ustep<=step then do;
MPRINT(VAR_PROFILE):   step = abs(MIN-MAX)/16;
MPRINT(VAR_PROFILE):   START=MIN;
MPRINT(VAR_PROFILE):   do i=1 to 16;
MPRINT(VAR_PROFILE):   _bounds(i) = MIN + i*step;
MPRINT(VAR_PROFILE):   if abs(_bounds{i})< 1e-10 then _bounds(i)= 0;
MPRINT(VAR_PROFILE):   _midpoint(i) = MIN+ (i-0.5)*step;
MPRINT(VAR_PROFILE):   if abs(_midpoint{i})< 1e-10 then _midpoint(i)= 0;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   else do;
MPRINT(VAR_PROFILE):   if lstep<=step then do;
MPRINT(VAR_PROFILE):   step = abs(MIN-P95)/16;
MPRINT(VAR_PROFILE):   do i=1 to 16;
MPRINT(VAR_PROFILE):   _bounds(i) = MIN + i*step;
MPRINT(VAR_PROFILE):   if abs(_bounds{i})< 1e-10 then _bounds(i)= 0;
MPRINT(VAR_PROFILE):   _midpoint(i) = MIN+ (i-0.5)*step;
MPRINT(VAR_PROFILE):   if abs(_midpoint{i})< 1e-10 then _midpoint(i)= 0;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   do i=1 to 5;
MPRINT(VAR_PROFILE):   numbars = 16 + i;
MPRINT(VAR_PROFILE):   _bounds(numbars) = P95 + i*ustep;
MPRINT(VAR_PROFILE):   if abs(_bounds{numbars})< 1e-10 then _bounds(numbars)= 0;
MPRINT(VAR_PROFILE):   _midpoint(numbars) = P95 + (i-0.5)*ustep + abs(ustep-step)/2;
MPRINT(VAR_PROFILE):   if abs(_bounds{numbars})< 1e-10 then _bounds(numbars)= 0;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   else do;
MPRINT(VAR_PROFILE):   do i=1 to 5;
MPRINT(VAR_PROFILE):   _bounds(i) = P5 - (5-i)*lstep;
MPRINT(VAR_PROFILE):   if abs(_bounds{i})< 1e-10 then _bounds(i)= 0;
MPRINT(VAR_PROFILE):   _midpoint(i) = P5 - (5 - i + 0.5)*lstep - abs(lstep-step)/2;
MPRINT(VAR_PROFILE):   if abs(_midpoint{i})< 1e-10 then _midpoint(i)= 0;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   if ustep<= step then do;
MPRINT(VAR_PROFILE):   step = abs(P5-MAX)/16;
MPRINT(VAR_PROFILE):   do i=1 to 16;
MPRINT(VAR_PROFILE):   numbars = i+5;
MPRINT(VAR_PROFILE):   _bounds(numbars) = P5 + i*step;
MPRINT(VAR_PROFILE):   if abs(_bounds{numbars})< 1e-10 then _bounds(numbars)= 0;
MPRINT(VAR_PROFILE):   _midpoint(numbars) = P5 + (i-0.5)*step;
MPRINT(VAR_PROFILE):   if abs(_midpoint{numbars})< 1e-10 then _midpoint(numbars)= 0;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   else do;
MPRINT(VAR_PROFILE):   do i=1 to 16;
MPRINT(VAR_PROFILE):   numbars = i+5;
MPRINT(VAR_PROFILE):   _bounds(numbars) = P5 + i*step;
MPRINT(VAR_PROFILE):   if abs(_bounds{numbars})< 1e-10 then _bounds(numbars)= 0;
MPRINT(VAR_PROFILE):   _midpoint(numbars) = P5 + (i-0.5)*step;
MPRINT(VAR_PROFILE):   if abs(_midpoint{numbars})< 1e-10 then _midpoint(numbars)= 0;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   do i=1 to 5;
MPRINT(VAR_PROFILE):   numbars = 16+5+i;
MPRINT(VAR_PROFILE):   _bounds(numbars) = P95 + i*ustep;
MPRINT(VAR_PROFILE):   if abs(_bounds{numbars})< 1e-10 then _bounds(numbars)= 0;
MPRINT(VAR_PROFILE):   _midpoint(numbars) = P95 + (i-0.5)*ustep + abs(ustep-step)/2;
MPRINT(VAR_PROFILE):  if abs(_midpoint{numbars})< 1e-10 then _midpoint(numbars)= 0;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   else do;
MPRINT(VAR_PROFILE):   _bounds(1) = MIN;
MPRINT(VAR_PROFILE):   _midpoint(1) = MIN;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   Format = 'F'!!trim(left(put(_n_,6.)))!!'_';
MPRINT(VAR_PROFILE):   run;

NOTE: There were 16 observations read from the data set WORK._BOUNDS.
NOTE: The data set WORK._BOUNDS has 16 observations and 69 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VAR_PROFILE):   data _BOUNDS;
MPRINT(VAR_PROFILE):   merge _BOUNDS _DISCRETEMID(in = _b);
MPRINT(VAR_PROFILE):   by VARIABLE;
MPRINT(VAR_PROFILE):   if _b then _DISCRETE=1;
MPRINT(VAR_PROFILE):   else _DISCRETE=0;
MPRINT(VAR_PROFILE):   run;

WARNING: Multiple lengths were specified for the BY variable VARIABLE by input data sets. This may cause unexpected results.
NOTE: There were 16 observations read from the data set WORK._BOUNDS.
NOTE: There were 3 observations read from the data set WORK._DISCRETEMID.
NOTE: The data set WORK._BOUNDS has 16 observations and 71 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(VAR_PROFILE):   data _null_;
MPRINT(VAR_PROFILE):   file fref;
MPRINT(VAR_PROFILE):   set _BOUNDS end=eof;
MPRINT(VAR_PROFILE):   array _bounds{26};
MPRINT(VAR_PROFILE):   array _midpoint{26};
MPRINT(VAR_PROFILE):   if _n_=1 then put 'proc format;';
MPRINT(VAR_PROFILE):   put 'value ' Format;
MPRINT(VAR_PROFILE):   if _DISCRETE then do;
MPRINT(VAR_PROFILE):   do i=1 to 16;
MPRINT(VAR_PROFILE):   _MID = _midpoint{i};
MPRINT(VAR_PROFILE):   if _MID ne . and i<= _NUMCLASSBINS_ then put _MID '="' _MID '"';
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   put ';';
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   else do;
MPRINT(VAR_PROFILE):   if min eq max then do;
MPRINT(VAR_PROFILE):   put 'low - high ="' MIN '";';
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   else do;
MPRINT(VAR_PROFILE):   _LB = MIN;
MPRINT(VAR_PROFILE):   _MID = _midpoint{1};
MPRINT(VAR_PROFILE):   _UB = _bounds{1};
MPRINT(VAR_PROFILE):   put 'LOW -' _UB '="' _MID '"';
MPRINT(VAR_PROFILE):   do i=1 to 26-1;
MPRINT(VAR_PROFILE):   _LB = _bounds{i};
MPRINT(VAR_PROFILE):   j=i+1;
MPRINT(VAR_PROFILE):   _MID = _midpoint{j};
MPRINT(VAR_PROFILE):   _UB = _bounds{j};
MPRINT(VAR_PROFILE):   if (_UB ne .) and (_LB ne _UB) then do;
MPRINT(VAR_PROFILE):   if _UB>=MAX then put _LB '-HIGH="' _MID '"';
MPRINT(VAR_PROFILE):   else put _LB '-' _UB '="' _MID '"';
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   put ';';
MPRINT(VAR_PROFILE):   if eof then put 'run;';
MPRINT(VAR_PROFILE):   run;

NOTE: The file FREF is:
      Catalog Name=WORK.EM.PROFILEFORMAT.SOURCE,
      Catalog Page Size=4096,
      Number of Catalog Pages=4,
      Created=Domingo, 06 de Março de 2016 16H42m,
      Last Modified=Domingo, 06 de Março de 2016 16H42m,
      Filename=C:\Users\VM-SAS\AppData\Local\Temp\SAS Temporary Files\_TD3916_VM-SAS-PC_\Prc2\em.sas7bcat,
      Release Created=9.0301M2,Host Created=X64_7PRO

NOTE: 298 records were written to the file FREF.
      The minimum record length was 1.
      The maximum record length was 42.
NOTE: There were 16 observations read from the data set WORK._BOUNDS.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.00 seconds
      

NOTE: %INCLUDE (level 1) file FREF is file WORK.EM.PROFILEFORMAT.SOURCE.
28717     +proc format;
MPRINT(VAR_PROFILE):   proc format;
28718     +value F1_
28719     +LOW -16 ="13.75 "
28720     +16 -20 ="17.75 "
28721     +20 -24 ="21.75 "
28722     +24 -28 ="25.75 "
28723     +28 -32 ="29.75 "
28724     +32 -35.9375 ="33.96875 "
28725     +35.9375 -39.875 ="37.90625 "
28726     +39.875 -43.8125 ="41.84375 "
28727     +43.8125 -47.75 ="45.78125 "
28728     +47.75 -51.6875 ="49.71875 "
28729     +51.6875 -55.625 ="53.65625 "
28730     +55.625 -59.5625 ="57.59375 "
28731     +59.5625 -63.5 ="61.53125 "
28732     +63.5 -67.4375 ="65.46875 "
28733     +67.4375 -71.375 ="69.40625 "
28734     +71.375 -75.3125 ="73.34375 "
28735     +75.3125 -79.25 ="77.28125 "
28736     +79.25 -83.1875 ="81.21875 "
28737     +83.1875 -87.125 ="85.15625 "
28738     +87.125 -91.0625 ="89.09375 "
28739     +91.0625 -HIGH="93.03125 "
28740     +;
MPRINT(VAR_PROFILE):   value F1_ LOW -16 ="13.75 " 16 -20 ="17.75 " 20 -24 ="21.75 " 24 -28 ="25.75 " 28 -32 ="29.75 " 32 -35.9375 ="33.96875 " 35.9375 -39.875 ="37.90625 " 39.875 -43.8125 ="41.84375 " 43.8125 -47.75 ="45.78125 " 47.75 -51.6875 ="49.71875 
" 51.6875 -55.625 ="53.65625 " 55.625 -59.5625 ="57.59375 " 59.5625 -63.5 ="61.53125 " 63.5 -67.4375 ="65.46875 " 67.4375 -71.375 ="69.40625 " 71.375 -75.3125 ="73.34375 " 75.3125 -79.25 ="77.28125 " 79.25 -83.1875 ="81.21875 " 83.1875 -87.125 ="85.15625 
" 87.125 -91.0625 ="89.09375 " 91.0625 -HIGH="93.03125 " ;
NOTE: Format F1_ has been output.
28741     +value F2_
28742     +LOW -8 ="5 "
28743     +8 -14 ="11 "
28744     +14 -20 ="17 "
28745     +20 -26 ="23 "
28746     +26 -32 ="29 "
28747     +32 -38 ="35 "
28748     +38 -44 ="41 "
28749     +44 -50 ="47 "
28750     +50 -56 ="53 "
28751     +56 -62 ="59 "
28752     +62 -68 ="65 "
28753     +68 -74 ="71 "
28754     +74 -80 ="77 "
28755     +80 -86 ="83 "
28756     +86 -92 ="89 "
28757     +92 -HIGH="95 "
28758     +;
MPRINT(VAR_PROFILE):   value F2_ LOW -8 ="5 " 8 -14 ="11 " 14 -20 ="17 " 20 -26 ="23 " 26 -32 ="29 " 32 -38 ="35 " 38 -44 ="41 " 44 -50 ="47 " 50 -56 ="53 " 56 -62 ="59 " 62 -68 ="65 " 68 -74 ="71 " 74 -80 ="77 " 80 -86 ="83 " 86 -92 ="89 " 92 -HIGH="95 " 
;
NOTE: Format F2_ has been output.
28759     +value F3_
28760     +2 ="2 "
28761     +;
MPRINT(VAR_PROFILE):   value F3_ 2 ="2 " ;
NOTE: Format F3_ has been output.
MPRINT(VAR_PROFILE):   ;
28762     +;
28763     +value F4_
28764     +LOW -19246.75 ="19224.875 "
28765     +19246.75 -19290.5 ="19268.625 "
28766     +19290.5 -19334.25 ="19312.375 "
28767     +19334.25 -19378 ="19356.125 "
28768     +19378 -19421.75 ="19399.875 "
28769     +19421.75 -19465.5 ="19443.625 "
28770     +19465.5 -19509.25 ="19487.375 "
28771     +19509.25 -19553 ="19531.125 "
28772     +19553 -19596.75 ="19574.875 "
28773     +19596.75 -19640.5 ="19618.625 "
28774     +19640.5 -19684.25 ="19662.375 "
28775     +19684.25 -19728 ="19706.125 "
28776     +19728 -19771.75 ="19749.875 "
28777     +19771.75 -19815.5 ="19793.625 "
28778     +19815.5 -19859.25 ="19837.375 "
28779     +19859.25 -HIGH="19881.125 "
28780     +;
MPRINT(VAR_PROFILE):   value F4_ LOW -19246.75 ="19224.875 " 19246.75 -19290.5 ="19268.625 " 19290.5 -19334.25 ="19312.375 " 19334.25 -19378 ="19356.125 " 19378 -19421.75 ="19399.875 " 19421.75 -19465.5 ="19443.625 " 19465.5 -19509.25 ="19487.375 " 
19509.25 -19553 ="19531.125 " 19553 -19596.75 ="19574.875 " 19596.75 -19640.5 ="19618.625 " 19640.5 -19684.25 ="19662.375 " 19684.25 -19728 ="19706.125 " 19728 -19771.75 ="19749.875 " 19771.75 -19815.5 ="19793.625 " 19815.5 -19859.25 ="19837.375 " 
19859.25 -HIGH="19881.125 " ;
NOTE: Format F4_ has been output.
28781     +value F5_
28782     +LOW -5.375 ="4.1875 "
28783     +5.375 -7.75 ="6.5625 "
28784     +7.75 -10.125 ="8.9375 "
28785     +10.125 -12.5 ="11.3125 "
28786     +12.5 -14.875 ="13.6875 "
28787     +14.875 -17.25 ="16.0625 "
28788     +17.25 -19.625 ="18.4375 "
28789     +19.625 -22 ="20.8125 "
28790     +22 -24.375 ="23.1875 "
28791     +24.375 -26.75 ="25.5625 "
28792     +26.75 -29.125 ="27.9375 "
28793     +29.125 -31.5 ="30.3125 "
28794     +31.5 -33.875 ="32.6875 "
28795     +33.875 -36.25 ="35.0625 "
28796     +36.25 -38.625 ="37.4375 "
28797     +38.625 -41 ="39.8125 "
28798     +41 -44.4 ="43.2125 "
28799     +44.4 -47.8 ="46.6125 "
28800     +47.8 -51.2 ="50.0125 "
28801     +51.2 -54.6 ="53.4125 "
28802     +54.6 -HIGH="56.8125 "
28803     +;
MPRINT(VAR_PROFILE):   value F5_ LOW -5.375 ="4.1875 " 5.375 -7.75 ="6.5625 " 7.75 -10.125 ="8.9375 " 10.125 -12.5 ="11.3125 " 12.5 -14.875 ="13.6875 " 14.875 -17.25 ="16.0625 " 17.25 -19.625 ="18.4375 " 19.625 -22 ="20.8125 " 22 -24.375 ="23.1875 " 
24.375 -26.75 ="25.5625 " 26.75 -29.125 ="27.9375 " 29.125 -31.5 ="30.3125 " 31.5 -33.875 ="32.6875 " 33.875 -36.25 ="35.0625 " 36.25 -38.625 ="37.4375 " 38.625 -41 ="39.8125 " 41 -44.4 ="43.2125 " 44.4 -47.8 ="46.6125 " 47.8 -51.2 ="50.0125 " 51.2 -54.6 
="53.4125 " 54.6 -HIGH="56.8125 " ;
NOTE: Format F5_ has been output.
28804     +value F6_
28805     +LOW -1.4375 ="0.71875 "
28806     +1.4375 -2.875 ="2.15625 "
28807     +2.875 -4.3125 ="3.59375 "
28808     +4.3125 -5.75 ="5.03125 "
28809     +5.75 -7.1875 ="6.46875 "
28810     +7.1875 -8.625 ="7.90625 "
28811     +8.625 -10.0625 ="9.34375 "
28812     +10.0625 -11.5 ="10.78125 "
28813     +11.5 -12.9375 ="12.21875 "
28814     +12.9375 -14.375 ="13.65625 "
28815     +14.375 -15.8125 ="15.09375 "
28816     +15.8125 -17.25 ="16.53125 "
28817     +17.25 -18.6875 ="17.96875 "
28818     +18.6875 -20.125 ="19.40625 "
28819     +20.125 -21.5625 ="20.84375 "
28820     +21.5625 -23 ="22.28125 "
28821     +23 -29.2 ="28.48125 "
28822     +29.2 -35.4 ="34.68125 "
28823     +35.4 -41.6 ="40.88125 "
28824     +41.6 -47.8 ="47.08125 "
28825     +47.8 -HIGH="53.28125 "
28826     +;
MPRINT(VAR_PROFILE):   value F6_ LOW -1.4375 ="0.71875 " 1.4375 -2.875 ="2.15625 " 2.875 -4.3125 ="3.59375 " 4.3125 -5.75 ="5.03125 " 5.75 -7.1875 ="6.46875 " 7.1875 -8.625 ="7.90625 " 8.625 -10.0625 ="9.34375 " 10.0625 -11.5 ="10.78125 " 11.5 -12.9375 
="12.21875 " 12.9375 -14.375 ="13.65625 " 14.375 -15.8125 ="15.09375 " 15.8125 -17.25 ="16.53125 " 17.25 -18.6875 ="17.96875 " 18.6875 -20.125 ="19.40625 " 20.125 -21.5625 ="20.84375 " 21.5625 -23 ="22.28125 " 23 -29.2 ="28.48125 " 29.2 -35.4 ="34.68125 " 
35.4 -41.6 ="40.88125 " 41.6 -47.8 ="47.08125 " 47.8 -HIGH="53.28125 " ;
NOTE: Format F6_ has been output.
28827     +value F7_
28828     +LOW -18856.55625 ="14678.278125 "
28829     +18856.55625 -27213.1125 ="23034.834375 "
28830     +27213.1125 -35569.66875 ="31391.390625 "
28831     +35569.66875 -43926.225 ="39747.946875 "
28832     +43926.225 -52282.78125 ="48104.503125 "
28833     +52282.78125 -60639.3375 ="56461.059375 "
28834     +60639.3375 -68995.89375 ="64817.615625 "
28835     +68995.89375 -77352.45 ="73174.171875 "
28836     +77352.45 -85709.00625 ="81530.728125 "
28837     +85709.00625 -94065.5625 ="89887.284375 "
28838     +94065.5625 -102422.11875 ="98243.840625 "
28839     +102422.11875 -110778.675 ="106600.39688 "
28840     +110778.675 -119135.23125 ="114956.95313 "
28841     +119135.23125 -127491.7875 ="123313.50938 "
28842     +127491.7875 -135848.34375 ="131670.06563 "
28843     +135848.34375 -HIGH="140026.62188 "
28844     +;
MPRINT(VAR_PROFILE):   value F7_ LOW -18856.55625 ="14678.278125 " 18856.55625 -27213.1125 ="23034.834375 " 27213.1125 -35569.66875 ="31391.390625 " 35569.66875 -43926.225 ="39747.946875 " 43926.225 -52282.78125 ="48104.503125 " 52282.78125 -60639.3375 
="56461.059375 " 60639.3375 -68995.89375 ="64817.615625 " 68995.89375 -77352.45 ="73174.171875 " 77352.45 -85709.00625 ="81530.728125 " 85709.00625 -94065.5625 ="89887.284375 " 94065.5625 -102422.11875 ="98243.840625 " 102422.11875 -110778.675 
="106600.39688 " 110778.675 -119135.23125 ="114956.95313 " 119135.23125 -127491.7875 ="123313.50938 " 127491.7875 -135848.34375 ="131670.06563 " 135848.34375 -HIGH="140026.62188 " ;
NOTE: Format F7_ has been output.
28845     +value F8_
28846     +LOW -1.4375 ="0.71875 "
28847     +1.4375 -2.875 ="2.15625 "
28848     +2.875 -4.3125 ="3.59375 "
28849     +4.3125 -5.75 ="5.03125 "
28850     +5.75 -7.1875 ="6.46875 "
28851     +7.1875 -8.625 ="7.90625 "
28852     +8.625 -10.0625 ="9.34375 "
28853     +10.0625 -11.5 ="10.78125 "
28854     +11.5 -12.9375 ="12.21875 "
28855     +12.9375 -14.375 ="13.65625 "
28856     +14.375 -15.8125 ="15.09375 "
28857     +15.8125 -17.25 ="16.53125 "
28858     +17.25 -18.6875 ="17.96875 "
28859     +18.6875 -20.125 ="19.40625 "
28860     +20.125 -21.5625 ="20.84375 "
28861     +21.5625 -23 ="22.28125 "
28862     +23 -32 ="31.28125 "
28863     +32 -41 ="40.28125 "
28864     +41 -50 ="49.28125 "
28865     +50 -59 ="58.28125 "
28866     +59 -HIGH="67.28125 "
28867     +;
MPRINT(VAR_PROFILE):   value F8_ LOW -1.4375 ="0.71875 " 1.4375 -2.875 ="2.15625 " 2.875 -4.3125 ="3.59375 " 4.3125 -5.75 ="5.03125 " 5.75 -7.1875 ="6.46875 " 7.1875 -8.625 ="7.90625 " 8.625 -10.0625 ="9.34375 " 10.0625 -11.5 ="10.78125 " 11.5 -12.9375 
="12.21875 " 12.9375 -14.375 ="13.65625 " 14.375 -15.8125 ="15.09375 " 15.8125 -17.25 ="16.53125 " 17.25 -18.6875 ="17.96875 " 18.6875 -20.125 ="19.40625 " 20.125 -21.5625 ="20.84375 " 21.5625 -23 ="22.28125 " 23 -32 ="31.28125 " 32 -41 ="40.28125 " 41 
-50 ="49.28125 " 50 -59 ="58.28125 " 59 -HIGH="67.28125 " ;
NOTE: Format F8_ has been output.
28868     +value F9_
28869     +LOW -132.795 ="70.5575 "
28870     +132.795 -257.27 ="195.0325 "
28871     +257.27 -381.745 ="319.5075 "
28872     +381.745 -506.22 ="443.9825 "
28873     +506.22 -630.695 ="568.4575 "
28874     +630.695 -755.17 ="692.9325 "
28875     +755.17 -879.645 ="817.4075 "
28876     +879.645 -1004.12 ="941.8825 "
28877     +1004.12 -1128.595 ="1066.3575 "
28878     +1128.595 -1253.07 ="1190.8325 "
28879     +1253.07 -1377.545 ="1315.3075 "
28880     +1377.545 -1502.02 ="1439.7825 "
28881     +1502.02 -1626.495 ="1564.2575 "
28882     +1626.495 -1750.97 ="1688.7325 "
28883     +1750.97 -1875.445 ="1813.2075 "
28884     +1875.445 -1999.92 ="1937.6825 "
28885     +1999.92 -2211.04 ="2148.8025 "
28886     +2211.04 -2422.16 ="2359.9225 "
28887     +2422.16 -2633.28 ="2571.0425 "
28888     +2633.28 -2844.4 ="2782.1625 "
28889     +2844.4 -HIGH="2993.2825 "
28890     +;
MPRINT(VAR_PROFILE):   value F9_ LOW -132.795 ="70.5575 " 132.795 -257.27 ="195.0325 " 257.27 -381.745 ="319.5075 " 381.745 -506.22 ="443.9825 " 506.22 -630.695 ="568.4575 " 630.695 -755.17 ="692.9325 " 755.17 -879.645 ="817.4075 " 879.645 -1004.12 
="941.8825 " 1004.12 -1128.595 ="1066.3575 " 1128.595 -1253.07 ="1190.8325 " 1253.07 -1377.545 ="1315.3075 " 1377.545 -1502.02 ="1439.7825 " 1502.02 -1626.495 ="1564.2575 " 1626.495 -1750.97 ="1688.7325 " 1750.97 -1875.445 ="1813.2075 " 1875.445 -1999.92 
="1937.6825 " 1999.92 -2211.04 ="2148.8025 " 2211.04 -2422.16 ="2359.9225 " 2422.16 -2633.28 ="2571.0425 " 2633.28 -2844.4 ="2782.1625 " 2844.4 -HIGH="2993.2825 " ;
NOTE: Format F9_ has been output.
28891     +value F10_
28892     +LOW -8.9375 ="6.96875 "
28893     +8.9375 -12.875 ="10.90625 "
28894     +12.875 -16.8125 ="14.84375 "
28895     +16.8125 -20.75 ="18.78125 "
28896     +20.75 -24.6875 ="22.71875 "
28897     +24.6875 -28.625 ="26.65625 "
28898     +28.625 -32.5625 ="30.59375 "
28899     +32.5625 -36.5 ="34.53125 "
28900     +36.5 -40.4375 ="38.46875 "
28901     +40.4375 -44.375 ="42.40625 "
28902     +44.375 -48.3125 ="46.34375 "
28903     +48.3125 -52.25 ="50.28125 "
28904     +52.25 -56.1875 ="54.21875 "
28905     +56.1875 -60.125 ="58.15625 "
28906     +60.125 -64.0625 ="62.09375 "
28907     +64.0625 -68 ="66.03125 "
28908     +68 -72 ="70.03125 "
28909     +72 -76 ="74.03125 "
28910     +76 -80 ="78.03125 "
28911     +80 -84 ="82.03125 "
28912     +84 -HIGH="86.03125 "
28913     +;
MPRINT(VAR_PROFILE):   value F10_ LOW -8.9375 ="6.96875 " 8.9375 -12.875 ="10.90625 " 12.875 -16.8125 ="14.84375 " 16.8125 -20.75 ="18.78125 " 20.75 -24.6875 ="22.71875 " 24.6875 -28.625 ="26.65625 " 28.625 -32.5625 ="30.59375 " 32.5625 -36.5 ="34.53125 " 
36.5 -40.4375 ="38.46875 " 40.4375 -44.375 ="42.40625 " 44.375 -48.3125 ="46.34375 " 48.3125 -52.25 ="50.28125 " 52.25 -56.1875 ="54.21875 " 56.1875 -60.125 ="58.15625 " 60.125 -64.0625 ="62.09375 " 64.0625 -68 ="66.03125 " 68 -72 ="70.03125 " 72 -76 
="74.03125 " 76 -80 ="78.03125 " 80 -84 ="82.03125 " 84 -HIGH="86.03125 " ;
NOTE: Format F10_ has been output.
28914     +value F11_
28915     +LOW -6.25 ="3.125 "
28916     +6.25 -12.5 ="9.375 "
28917     +12.5 -18.75 ="15.625 "
28918     +18.75 -25 ="21.875 "
28919     +25 -31.25 ="28.125 "
28920     +31.25 -37.5 ="34.375 "
28921     +37.5 -43.75 ="40.625 "
28922     +43.75 -50 ="46.875 "
28923     +50 -56.25 ="53.125 "
28924     +56.25 -62.5 ="59.375 "
28925     +62.5 -68.75 ="65.625 "
28926     +68.75 -75 ="71.875 "
28927     +75 -81.25 ="78.125 "
28928     +81.25 -87.5 ="84.375 "
28929     +87.5 -93.75 ="90.625 "
28930     +93.75 -100 ="96.875 "
28931     +100 -189.8 ="186.675 "
28932     +189.8 -279.6 ="276.475 "
28933     +279.6 -369.4 ="366.275 "
28934     +369.4 -459.2 ="456.075 "
28935     +459.2 -HIGH="545.875 "
28936     +;
MPRINT(VAR_PROFILE):   value F11_ LOW -6.25 ="3.125 " 6.25 -12.5 ="9.375 " 12.5 -18.75 ="15.625 " 18.75 -25 ="21.875 " 25 -31.25 ="28.125 " 31.25 -37.5 ="34.375 " 37.5 -43.75 ="40.625 " 43.75 -50 ="46.875 " 50 -56.25 ="53.125 " 56.25 -62.5 ="59.375 " 62.5 
-68.75 ="65.625 " 68.75 -75 ="71.875 " 75 -81.25 ="78.125 " 81.25 -87.5 ="84.375 " 87.5 -93.75 ="90.625 " 93.75 -100 ="96.875 " 100 -189.8 ="186.675 " 189.8 -279.6 ="276.475 " 279.6 -369.4 ="366.275 " 369.4 -459.2 ="456.075 " 459.2 -HIGH="545.875 " ;
NOTE: Format F11_ has been output.
28937     +value F12_
28938     +1 ="1 "
28939     +2 ="2 "
28940     +3 ="3 "
28941     +4 ="4 "
28942     +5 ="5 "
28943     +6 ="6 "
28944     +;
MPRINT(VAR_PROFILE):   value F12_ 1 ="1 " 2 ="2 " 3 ="3 " 4 ="4 " 5 ="5 " 6 ="6 " ;
NOTE: Format F12_ has been output.
MPRINT(VAR_PROFILE):   ;
28945     +;
28946     +value F13_
28947     +15 ="15 "
28948     +;
MPRINT(VAR_PROFILE):   value F13_ 15 ="15 " ;
NOTE: Format F13_ has been output.
MPRINT(VAR_PROFILE):   ;
28949     +;
28950     +value F14_
28951     +LOW -5 ="3.5 "
28952     +5 -8 ="6.5 "
28953     +8 -11 ="9.5 "
28954     +11 -14 ="12.5 "
28955     +14 -17 ="15.5 "
28956     +17 -20 ="18.5 "
28957     +20 -23 ="21.5 "
28958     +23 -26 ="24.5 "
28959     +26 -29 ="27.5 "
28960     +29 -32 ="30.5 "
28961     +32 -35 ="33.5 "
28962     +35 -38 ="36.5 "
28963     +38 -41 ="39.5 "
28964     +41 -44 ="42.5 "
28965     +44 -47 ="45.5 "
28966     +47 -50 ="48.5 "
28967     +50 -53.8 ="52.3 "
28968     +53.8 -57.6 ="56.1 "
28969     +57.6 -61.4 ="59.9 "
28970     +61.4 -65.2 ="63.7 "
28971     +65.2 -HIGH="67.5 "
28972     +;
MPRINT(VAR_PROFILE):   value F14_ LOW -5 ="3.5 " 5 -8 ="6.5 " 8 -11 ="9.5 " 11 -14 ="12.5 " 14 -17 ="15.5 " 17 -20 ="18.5 " 20 -23 ="21.5 " 23 -26 ="24.5 " 26 -29 ="27.5 " 29 -32 ="30.5 " 32 -35 ="33.5 " 35 -38 ="36.5 " 38 -41 ="39.5 " 41 -44 ="42.5 " 44 
-47 ="45.5 " 47 -50 ="48.5 " 50 -53.8 ="52.3 " 53.8 -57.6 ="56.1 " 57.6 -61.4 ="59.9 " 61.4 -65.2 ="63.7 " 65.2 -HIGH="67.5 " ;
NOTE: Format F14_ has been output.
28973     +value F15_
28974     +LOW -1.40625 ="0.703125 "
28975     +1.40625 -2.8125 ="2.109375 "
28976     +2.8125 -4.21875 ="3.515625 "
28977     +4.21875 -5.625 ="4.921875 "
28978     +5.625 -7.03125 ="6.328125 "
28979     +7.03125 -8.4375 ="7.734375 "
28980     +8.4375 -9.84375 ="9.140625 "
28981     +9.84375 -11.25 ="10.546875 "
28982     +11.25 -12.65625 ="11.953125 "
28983     +12.65625 -14.0625 ="13.359375 "
28984     +14.0625 -15.46875 ="14.765625 "
28985     +15.46875 -16.875 ="16.171875 "
28986     +16.875 -18.28125 ="17.578125 "
28987     +18.28125 -19.6875 ="18.984375 "
28988     +19.6875 -21.09375 ="20.390625 "
28989     +21.09375 -22.5 ="21.796875 "
28990     +22.5 -33.4 ="32.696875 "
28991     +33.4 -44.3 ="43.596875 "
28992     +44.3 -55.2 ="54.496875 "
28993     +55.2 -66.1 ="65.396875 "
28994     +66.1 -HIGH="76.296875 "
28995     +;
MPRINT(VAR_PROFILE):   value F15_ LOW -1.40625 ="0.703125 " 1.40625 -2.8125 ="2.109375 " 2.8125 -4.21875 ="3.515625 " 4.21875 -5.625 ="4.921875 " 5.625 -7.03125 ="6.328125 " 7.03125 -8.4375 ="7.734375 " 8.4375 -9.84375 ="9.140625 " 9.84375 -11.25 
="10.546875 " 11.25 -12.65625 ="11.953125 " 12.65625 -14.0625 ="13.359375 " 14.0625 -15.46875 ="14.765625 " 15.46875 -16.875 ="16.171875 " 16.875 -18.28125 ="17.578125 " 18.28125 -19.6875 ="18.984375 " 19.6875 -21.09375 ="20.390625 " 21.09375 -22.5 
="21.796875 " 22.5 -33.4 ="32.696875 " 33.4 -44.3 ="43.596875 " 44.3 -55.2 ="54.496875 " 55.2 -66.1 ="65.396875 " 66.1 -HIGH="76.296875 " ;
NOTE: Format F15_ has been output.
28996     +value F16_
28997     +LOW -1940.75 ="1938.875 "
28998     +1940.75 -1944.5 ="1942.625 "
28999     +1944.5 -1948.25 ="1946.375 "
29000     +1948.25 -1952 ="1950.125 "
29001     +1952 -1955.75 ="1953.875 "
29002     +1955.75 -1959.5 ="1957.625 "
29003     +1959.5 -1963.25 ="1961.375 "
29004     +1963.25 -1967 ="1965.125 "
29005     +1967 -1970.75 ="1968.875 "
29006     +1970.75 -1974.5 ="1972.625 "
29007     +1974.5 -1978.25 ="1976.375 "
29008     +1978.25 -1982 ="1980.125 "
29009     +1982 -1985.75 ="1983.875 "
29010     +1985.75 -1989.5 ="1987.625 "
29011     +1989.5 -1993.25 ="1991.375 "
29012     +1993.25 -HIGH="1995.125 "
29013     +;
MPRINT(VAR_PROFILE):   value F16_ LOW -1940.75 ="1938.875 " 1940.75 -1944.5 ="1942.625 " 1944.5 -1948.25 ="1946.375 " 1948.25 -1952 ="1950.125 " 1952 -1955.75 ="1953.875 " 1955.75 -1959.5 ="1957.625 " 1959.5 -1963.25 ="1961.375 " 1963.25 -1967 ="1965.125 
" 1967 -1970.75 ="1968.875 " 1970.75 -1974.5 ="1972.625 " 1974.5 -1978.25 ="1976.375 " 1978.25 -1982 ="1980.125 " 1982 -1985.75 ="1983.875 " 1985.75 -1989.5 ="1987.625 " 1989.5 -1993.25 ="1991.375 " 1993.25 -HIGH="1995.125 " ;
NOTE: Format F16_ has been output.
MPRINT(VAR_PROFILE):   run;
29014     +run;

NOTE: PROCEDURE FORMAT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

NOTE: %INCLUDE (level 1) ending.
MPRINT(VAR_PROFILE):   filename fref;
NOTE: Fileref FREF has been deassigned.
MPRINT(VAR_PROFILE):   data _binneddata / view=_binneddata;
MPRINT(VAR_PROFILE):   set EMWS8.FIMPORT_train(obs=1000000);
MPRINT(VAR_PROFILE):   format CatPurchase F1_. Clothes F2_. CostPerContact F3_. Dt_Customer F4_. Frq F5_. HouseKeeping F6_. Income F7_. Kitchen F8_. Mnt F9_. NetPurchase F10_. Rcn F11_. Recomendation F12_. RevenuePerPositiveAnswer F13_. SmallAppliances 
F14_. Toys F15_. Year_Birth F16_. ;
MPRINT(VAR_PROFILE):   run;

NOTE: DATA STEP view saved on file WORK._BINNEDDATA.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.FIMPORT_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.06 seconds
      cpu time            0.04 seconds
      

MPRINT(VAR_PROFILE):   proc dmdb data=_binneddata(obs=1000000) classout=_temptab(rename=(NAME=VARIABLE FREQUENCY=COUNT FREQPERCENT=PERCENT));
MPRINT(VAR_PROFILE):   class
MPRINT(_VARS):   CatPurchase Clothes CostPerContact Dt_Customer Frq HouseKeeping Income Kitchen Mnt NetPurchase Rcn Recomendation RevenuePerPositiveAnswer SmallAppliances Toys Year_Birth
MPRINT(VAR_PROFILE):   ;
MPRINT(VAR_PROFILE):   run;

NOTE: Records processed = 2500   Memory used = 511K.
NOTE: There were 2500 observations read from the data set EMWS8.FIMPORT_DATA.
NOTE: View WORK._BINNEDDATA.VIEW used (Total process time):
      real time           0.07 seconds
      cpu time            0.04 seconds
      
NOTE: There were 2500 observations read from the data set EMWS8.FIMPORT_TRAIN.
NOTE: There were 2500 observations read from the data set WORK._BINNEDDATA.
NOTE: The data set WORK._TEMPTAB has 261 observations and 9 variables.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.12 seconds
      cpu time            0.07 seconds
      

MPRINT(VAR_PROFILE):   data EMWS8.Filter2_VARDIST;
MPRINT(VAR_PROFILE):   label VALUE = "Value";
MPRINT(VAR_PROFILE):   label VARIABLE = "Variable";
MPRINT(VAR_PROFILE):   label COUNT = "Frequency Count";
MPRINT(VAR_PROFILE):   label PERCENT = "Percent";
MPRINT(VAR_PROFILE):   set _temptab;
MPRINT(VAR_PROFILE):   format VALUE 12.3 count;
MPRINT(VAR_PROFILE):   value = inputn(level, 'best12.');
MPRINT(VAR_PROFILE):   keep VARIABLE COUNT PERCENT VALUE;
MPRINT(VAR_PROFILE):   run;

NOTE: There were 261 observations read from the data set WORK._TEMPTAB.
NOTE: The data set EMWS8.FILTER2_VARDIST has 261 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.00 seconds
      

MPRINT(VAR_PROFILE):   data EMWS8.Filter2_VARDIST;
MPRINT(VAR_PROFILE):   set EMWS8.Filter2_VARDIST(in=_a) _MINMAXDATA;
MPRINT(VAR_PROFILE):   if _a then Pos=2;
MPRINT(VAR_PROFILE):   run;

NOTE: There were 261 observations read from the data set EMWS8.FILTER2_VARDIST.
NOTE: There were 32 observations read from the data set WORK._MINMAXDATA.
NOTE: The data set EMWS8.FILTER2_VARDIST has 293 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.00 seconds
      

MPRINT(VAR_PROFILE):   proc sort data=EMWS8.Filter2_VARDIST out=EMWS8.Filter2_VARDIST(drop=pos);
MPRINT(VAR_PROFILE):   by VARIABLE POS VALUE;
MPRINT(VAR_PROFILE):   where VALUE ne .;
MPRINT(VAR_PROFILE):   run;

NOTE: There were 292 observations read from the data set EMWS8.FILTER2_VARDIST.
      WHERE VALUE not = .;
NOTE: The data set EMWS8.FILTER2_VARDIST has 292 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.04 seconds
      cpu time            0.00 seconds
      

MPRINT(VAR_PROFILE):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(VAR_PROFILE):   delete _TEMPTAB _BINNEDDATA _MINMAXDATA;
MPRINT(VAR_PROFILE):   run;

NOTE: Deleting WORK._TEMPTAB (memtype=DATA).
NOTE: Deleting WORK._BINNEDDATA (memtype=VIEW).
NOTE: Deleting WORK._MINMAXDATA (memtype=DATA).
MPRINT(VAR_PROFILE):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):  ;

MPRINT(EM_DIAGRAM):    data WORK.M3FQ8R2Q;
MPRINT(EM_DIAGRAM):   retain _MAXLEVEL 25;
MPRINT(EM_DIAGRAM):   set WORK.M3FQ8R2Q end=eof;
MPRINT(EM_DIAGRAM):   if ROLE ^in('TARGET', 'INPUT', 'FREQ') and CALCMETHOD ne 'NONE' then ROLE ='INPUT';
MPRINT(EM_DIAGRAM):   drop _MAXLEVEL;
MPRINT(EM_DIAGRAM):   if MAXVALUES = . then MAXVALUES =25;
MPRINT(EM_DIAGRAM):   if MAXVALUES>_MAXLEVEL then _MAXLEVEL=MAXVALUES;
MPRINT(EM_DIAGRAM):   if eof then call symput('_MAXLEVEL', strip(put(_MAXLEVEL, best.)));
MPRINT(EM_DIAGRAM):   run;
29025      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------* ;
29026      * Filter2: DMDBClass Macro ;
MPRINT(EM_DIAGRAM):   * Filter2: DMDBClass Macro ;
29027      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
29028      %macro DMDBClass;
29029          Education(ASC) Gender(ASC) Marital_Status(ASC)
29030      %mend DMDBClass;
29031      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
29032      * Filter2: DMDBVar Macro ;
MPRINT(EM_DIAGRAM):   * Filter2: DMDBVar Macro ;
29033      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
29034      %macro DMDBVar;
29035          HouseKeeping Kitchen Toys
29036      %mend DMDBVar;
29037      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
29038      * Filter2: Create DMDB;
MPRINT(EM_DIAGRAM):   * Filter2: Create DMDB;
29039      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
29040      proc dmdb batch data=EMWS8.FIMPORT_train
29041      classout=WORK._EMFILTERCLASS
29042      varout=WORK._EMFILTERVAR
29043      maxlevel = 26
29044      ;
MPRINT(EM_DIAGRAM):   proc dmdb batch data=EMWS8.FIMPORT_train classout=WORK._EMFILTERCLASS varout=WORK._EMFILTERVAR maxlevel = 26 ;
MPRINT(EM_DIAGRAM):   class
29045      class %DMDBClass;
MPRINT(DMDBCLASS):   Education(ASC) Gender(ASC) Marital_Status(ASC)
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   var
29046      var %DMDBVar;
MPRINT(DMDBVAR):   HouseKeeping Kitchen Toys
MPRINT(EM_DIAGRAM):  ;
29047      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Records processed = 2500   Memory used = 511K.
NOTE: View EMWS8.FIMPORT_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
NOTE: There were 2500 observations read from the data set EMWS8.FIMPORT_DATA.
NOTE: There were 2500 observations read from the data set EMWS8.FIMPORT_TRAIN.
NOTE: The data set WORK._EMFILTERCLASS has 17 observations and 9 variables.
NOTE: The data set WORK._EMFILTERVAR has 3 observations and 9 variables.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.07 seconds
      cpu time            0.06 seconds
      

MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):   *--- end code ---*;
29048      quit;
29049      *--- end code ---*;

29050      data WORK.M3FQ8R2Q;
MPRINT(EM_DIAGRAM):    data WORK.M3FQ8R2Q;
29051      set WORK.M3FQ8R2Q;
MPRINT(EM_DIAGRAM):   set WORK.M3FQ8R2Q;
29052      if ROLE ^in('TARGET', 'INPUT', 'FREQ') and CALCMETHOD ne 'NONE' then ROLE ='INPUT';
MPRINT(EM_DIAGRAM):   if ROLE ^in('TARGET', 'INPUT', 'FREQ') and CALCMETHOD ne 'NONE' then ROLE ='INPUT';
29053      if LEVEL ne 'INTERVAL' and KEEPMISSING='N';
MPRINT(EM_DIAGRAM):   if LEVEL ne 'INTERVAL' and KEEPMISSING='N';
29054      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 6 observations read from the data set WORK.M3FQ8R2Q.
NOTE: The data set WORK.M3FQ8R2Q has 0 observations and 26 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

29055      proc freq data=WORK._EMFILTERCLASS noprint;
MPRINT(EM_DIAGRAM):    proc freq data=WORK._EMFILTERCLASS noprint;
29056      table NAME / out=WORK._EMFILTERFREQ(keep=NAME COUNT rename=(COUNT=NUMLEVELS));
MPRINT(EM_DIAGRAM):   table NAME / out=WORK._EMFILTERFREQ(keep=NAME COUNT rename=(COUNT=NUMLEVELS));
29057      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 17 observations read from the data set WORK._EMFILTERCLASS.
NOTE: The data set WORK._EMFILTERFREQ has 3 observations and 2 variables.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

29058      data WORK._EMFILTERCLASS;
MPRINT(EM_DIAGRAM):   data WORK._EMFILTERCLASS;
29059      set WORK._EMFILTERCLASS (rename=(FREQUENCY=COUNT FREQPERCENT=PERCENT));
MPRINT(EM_DIAGRAM):   set WORK._EMFILTERCLASS (rename=(FREQUENCY=COUNT FREQPERCENT=PERCENT));
29060      _OBS_= _N_;
MPRINT(EM_DIAGRAM):   _OBS_= _N_;
29061      if (CRAW eq '' and NRAW eq .) then _OBS_=0;
MPRINT(EM_DIAGRAM):   if (CRAW eq '' and NRAW eq .) then _OBS_=0;
29062      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 17 observations read from the data set WORK._EMFILTERCLASS.
NOTE: The data set WORK._EMFILTERCLASS has 17 observations and 10 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

29063      proc sort data=WORK._EMFILTERCLASS nodupkey;
MPRINT(EM_DIAGRAM):    proc sort data=WORK._EMFILTERCLASS nodupkey;
29064      by NAME _OBS_;
MPRINT(EM_DIAGRAM):   by NAME _OBS_;
29065      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 17 observations read from the data set WORK._EMFILTERCLASS.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._EMFILTERCLASS has 17 observations and 10 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

29066      proc sort data=WORK._EMFILTERFREQ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK._EMFILTERFREQ;
29067      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
29068      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set WORK._EMFILTERFREQ.
NOTE: The data set WORK._EMFILTERFREQ has 3 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

29069      data WORK._EMFILTERCLASS;
MPRINT(EM_DIAGRAM):   data WORK._EMFILTERCLASS;
29070      merge WORK._EMFILTERCLASS WORK._EMFILTERFREQ;
MPRINT(EM_DIAGRAM):   merge WORK._EMFILTERCLASS WORK._EMFILTERFREQ;
29071      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
29072      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 17 observations read from the data set WORK._EMFILTERCLASS.
NOTE: There were 3 observations read from the data set WORK._EMFILTERFREQ.
NOTE: The data set WORK._EMFILTERCLASS has 17 observations and 11 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

29073      data work._FilterMinFreq;
MPRINT(EM_DIAGRAM):    data work._FilterMinFreq;
29074      set WORK.M10X8T4F;
MPRINT(EM_DIAGRAM):   set WORK.M10X8T4F;
29075      where level ne 'INTERVAL';
MPRINT(EM_DIAGRAM):   where level ne 'INTERVAL';
29076      if KEEPMISSING in('D', '') then
29077      KEEPMISSING = "Y";
MPRINT(EM_DIAGRAM):   if KEEPMISSING in('D', '') then KEEPMISSING = "Y";
29078      *if ROLE='REJECTED' and CALCMETHOD in('', 'DEFAULT') and KEEPMISSING="Y" then delete;
MPRINT(EM_DIAGRAM):   *if ROLE='REJECTED' and CALCMETHOD in('', 'DEFAULT') and KEEPMISSING="Y" then delete;
29079      if ROLE ^in('INPUT','TARGET') and CALCMETHOD in('', 'DEFAULT') and KEEPMISSING="Y" then delete;
MPRINT(EM_DIAGRAM):   if ROLE ^in('INPUT','TARGET') and CALCMETHOD in('', 'DEFAULT') and KEEPMISSING="Y" then delete;
29080      if CALCMETHOD in('', 'DEFAULT') then CALCMETHOD = "NONE";
MPRINT(EM_DIAGRAM):   if CALCMETHOD in('', 'DEFAULT') then CALCMETHOD = "NONE";
29081      if minfreq = . then minfreq=1;
MPRINT(EM_DIAGRAM):   if minfreq = . then minfreq=1;
29082      if MAXVALUES = . then MAXVALUES = 25;
MPRINT(EM_DIAGRAM):   if MAXVALUES = . then MAXVALUES = 25;
29083      minClassPct = 0.01;
MPRINT(EM_DIAGRAM):   minClassPct = 0.01;
29084      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set WORK.M10X8T4F.
      WHERE level not = 'INTERVAL';
NOTE: The data set WORK._FILTERMINFREQ has 3 observations and 27 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

29085      proc sort data=work._FilterMinFreq;
MPRINT(EM_DIAGRAM):   proc sort data=work._FilterMinFreq;
29086      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
29087      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set WORK._FILTERMINFREQ.
NOTE: The data set WORK._FILTERMINFREQ has 3 observations and 27 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

29088      proc sort data=WORK._EMFILTERCLASS;
MPRINT(EM_DIAGRAM):   proc sort data=WORK._EMFILTERCLASS;
29089      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
29090      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 17 observations read from the data set WORK._EMFILTERCLASS.
NOTE: The data set WORK._EMFILTERCLASS has 17 observations and 11 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

29091      data work._FilterMinFreq;
MPRINT(EM_DIAGRAM):   data work._FilterMinFreq;
29092      merge work._FilterMinFreq(drop=LEVEL in=_a) WORK._EMFILTERCLASS (in=_b);
MPRINT(EM_DIAGRAM):   merge work._FilterMinFreq(drop=LEVEL in=_a) WORK._EMFILTERCLASS (in=_b);
29093      if _a and _b then output;
MPRINT(EM_DIAGRAM):   if _a and _b then output;
29094      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
29095      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set WORK._FILTERMINFREQ.
NOTE: There were 17 observations read from the data set WORK._EMFILTERCLASS.
NOTE: The data set WORK._FILTERMINFREQ has 17 observations and 35 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

29096      data work._FilterExclude;
MPRINT(EM_DIAGRAM):    data work._FilterExclude;
29097      set work._FilterMinFreq;
MPRINT(EM_DIAGRAM):   set work._FilterMinFreq;
29098      where ( ((CALCMETHOD = 'MINFREQ' and (COUNT ne . and COUNT <= minfreq)) or (CALCMETHOD = 'MINPCT' and (NMISSPERCENT ne . and 0.01*NMISSPERCENT <=minClassPct))) and (NUMLEVELS <= MAXVALUES)) or (KEEPMISSING eq 'N' and NRAW=. and CRAW='');
MPRINT(EM_DIAGRAM):   where ( ((CALCMETHOD = 'MINFREQ' and (COUNT ne . and COUNT <= minfreq)) or (CALCMETHOD = 'MINPCT' and (NMISSPERCENT ne . and 0.01*NMISSPERCENT <=minClassPct))) and (NUMLEVELS <= MAXVALUES)) or (KEEPMISSING eq 'N' and NRAW=. and 
CRAW='');
29099      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._FILTERMINFREQ.
      WHERE ((((CALCMETHOD='MINFREQ') and (COUNT not = .) and (COUNT<=minfreq)) or ((CALCMETHOD='MINPCT') and (NMISSPERCENT not = .) and (minClassPct>=(0.01*NMISSPERCENT)))) and (NUMLEVELS<=MAXVALUES)) or ((KEEPMISSING='N') and (NRAW=.) and (CRAW=' '));
NOTE: The data set WORK._FILTEREXCLUDE has 0 observations and 35 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

29100      data work._ManualExclude;
MPRINT(EM_DIAGRAM):   data work._ManualExclude;
29101      set WORK.M10X8T4F;
MPRINT(EM_DIAGRAM):   set WORK.M10X8T4F;
29102      if CALCMETHOD in('', 'DEFAULT') then CALCMETHOD = "NONE";
MPRINT(EM_DIAGRAM):   if CALCMETHOD in('', 'DEFAULT') then CALCMETHOD = "NONE";
29103      if level ne 'INTERVAL' and calcmethod='MANUAL' then output;
MPRINT(EM_DIAGRAM):   if level ne 'INTERVAL' and calcmethod='MANUAL' then output;
29104      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 6 observations read from the data set WORK.M10X8T4F.
NOTE: The data set WORK._MANUALEXCLUDE has 3 observations and 26 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

29105      proc sort data=work._ManualExclude;
MPRINT(EM_DIAGRAM):   proc sort data=work._ManualExclude;
29106      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
29107      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set WORK._MANUALEXCLUDE.
NOTE: The data set WORK._MANUALEXCLUDE has 3 observations and 26 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

29108      proc sort data=EMWS8.Filter2_CLASSFILTER(rename=(VARIABLE=NAME VALUE=LEVEL)) out=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter2_CLASSFILTER(rename=(VARIABLE=NAME VALUE=LEVEL)) out=_temp;
29109      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
29110      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.FILTER2_CLASSFILTER.
NOTE: View EMWS8.FILTER2_CLASSFILTER.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
NOTE: There were 3 observations read from the data set EMWS8.FILTER2_CLASSDIST.
      WHERE Filter='Y';
NOTE: The data set WORK._TEMP has 3 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.06 seconds
      cpu time            0.04 seconds
      

29111      data work._ManualExclude;
MPRINT(EM_DIAGRAM):   data work._ManualExclude;
29112      merge work._ManualExclude(drop=LEVEL in=_a) _temp(in=_b);
MPRINT(EM_DIAGRAM):   merge work._ManualExclude(drop=LEVEL in=_a) _temp(in=_b);
29113      _OBS_=_N_;
MPRINT(EM_DIAGRAM):   _OBS_=_N_;
29114      if strip(Level) in('.', '') then _OBS_=0;
MPRINT(EM_DIAGRAM):   if strip(Level) in('.', '') then _OBS_=0;
29115      if _a and _b then output;
MPRINT(EM_DIAGRAM):   if _a and _b then output;
29116      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
29117      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set WORK._MANUALEXCLUDE.
NOTE: There were 3 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._MANUALEXCLUDE has 3 observations and 30 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

29118      data work._FilterExclude;
MPRINT(EM_DIAGRAM):   data work._FilterExclude;
29119      set work._ManualExclude work._FilterExclude;
MPRINT(EM_DIAGRAM):   set work._ManualExclude work._FilterExclude;
29120      if type = 'N' and format='' then level= strip(level);
MPRINT(EM_DIAGRAM):   if type = 'N' and format='' then level= strip(level);
29121      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set WORK._MANUALEXCLUDE.
NOTE: There were 0 observations read from the data set WORK._FILTEREXCLUDE.
NOTE: The data set WORK._FILTEREXCLUDE has 3 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

29122      proc sort data=work._FilterExclude nodupkey;
MPRINT(EM_DIAGRAM):    proc sort data=work._FilterExclude nodupkey;
29123      by NAME _OBS_;
MPRINT(EM_DIAGRAM):   by NAME _OBS_;
29124      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set WORK._FILTEREXCLUDE.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._FILTEREXCLUDE has 3 observations and 36 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

29125      %let _FilterClassNum= 0;
29126      data work._FilterExclude;
MPRINT(EM_DIAGRAM):   data work._FilterExclude;
29127      retain newvarindex 0;
MPRINT(EM_DIAGRAM):   retain newvarindex 0;
29128      length newvar normvar $32;
MPRINT(EM_DIAGRAM):   length newvar normvar $32;
29129      drop newvarindex string;
MPRINT(EM_DIAGRAM):   drop newvarindex string;
29130      set work._FilterExclude end=eof;
MPRINT(EM_DIAGRAM):   set work._FilterExclude end=eof;
29131      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
29132      if first.NAME then do;
MPRINT(EM_DIAGRAM):   if first.NAME then do;
29133      newvarindex + 1;
MPRINT(EM_DIAGRAM):   newvarindex + 1;
29134      if format ne '' then do;
MPRINT(EM_DIAGRAM):   if format ne '' then do;
29135      newvar = strip("_FILTERFMT")!!strip(put(newvarindex, best.));
MPRINT(EM_DIAGRAM):   newvar = strip("_FILTERFMT")!!strip(put(newvarindex, best.));
29136      end;
MPRINT(EM_DIAGRAM):   end;
29137      else newvar = name;
MPRINT(EM_DIAGRAM):   else newvar = name;
29138      if CALCMETHOD ne 'MANUAL' then do;
MPRINT(EM_DIAGRAM):   if CALCMETHOD ne 'MANUAL' then do;
29139      if format ne '' or type = 'C' then do;
MPRINT(EM_DIAGRAM):   if format ne '' or type = 'C' then do;
29140      normvar = strip("_FILTERNORM")!!strip(put(newvarindex, best.));
MPRINT(EM_DIAGRAM):   normvar = strip("_FILTERNORM")!!strip(put(newvarindex, best.));
29141      end;
MPRINT(EM_DIAGRAM):   end;
29142      end;
MPRINT(EM_DIAGRAM):   end;
29143      end;
MPRINT(EM_DIAGRAM):   end;
29144      if eof then call symput('_FilterClassNum', strip(put(_N_, best.)));
MPRINT(EM_DIAGRAM):   if eof then call symput('_FilterClassNum', strip(put(_N_, best.)));
29145      run;
MPRINT(EM_DIAGRAM):   run;

WARNING: The variable string in the DROP, KEEP, or RENAME list has never been referenced.
NOTE: There were 3 observations read from the data set WORK._FILTEREXCLUDE.
NOTE: The data set WORK._FILTEREXCLUDE has 3 observations and 38 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

29146      data EMWS8.Filter2_CLASS;
MPRINT(EM_DIAGRAM):    data EMWS8.Filter2_CLASS;
29147      label NAME = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel,     NOQUOTE))" ROLE = "%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel,        NOQUOTE))" VALUE = "%sysfunc(sasmsg(sashelp.dmine, rpt_value_vlabel,        NOQUOTE))" COUNT =
29148         "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel,        NOQUOTE))" PERCENT = "%sysfunc(sasmsg(sashelp.dmine, rpt_percent_vlabel,      NOQUOTE))" LABEL = "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel,       NOQUOTE))" CALCMETHOD =
29149         "%sysfunc(sasmsg(sashelp.dmine, rpt_filtermethod_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label NAME = "Variable" ROLE = "Role" VALUE = "Value" COUNT = "Frequency Count" PERCENT = "Percent" LABEL = "Label" CALCMETHOD = "Filter Method";
29150      length VALUE $12;
MPRINT(EM_DIAGRAM):   length VALUE $12;
29151      set work._FilterExclude;
MPRINT(EM_DIAGRAM):   set work._FilterExclude;
29152      keep NAME ROLE VALUE COUNT PERCENT LABEL CALCMETHOD;
MPRINT(EM_DIAGRAM):   keep NAME ROLE VALUE COUNT PERCENT LABEL CALCMETHOD;
29153      if COUNT = . then COUNT = 0;
MPRINT(EM_DIAGRAM):   if COUNT = . then COUNT = 0;
29154      if PERCENT = . then PERCENT = 0;
MPRINT(EM_DIAGRAM):   if PERCENT = . then PERCENT = 0;
29155      VALUE = LEVEL;
MPRINT(EM_DIAGRAM):   VALUE = LEVEL;
29156      if _OBS_ = 0 and KEEPMISSING='N' then do;
MPRINT(EM_DIAGRAM):   if _OBS_ = 0 and KEEPMISSING='N' then do;
29157      CALCMETHOD= '';
MPRINT(EM_DIAGRAM):   CALCMETHOD= '';
29158      KEEPMISSING = '';
MPRINT(EM_DIAGRAM):   KEEPMISSING = '';
29159      if VALUE = '' and type eq 'C' then VALUE = '_BLANK_';
MPRINT(EM_DIAGRAM):   if VALUE = '' and type eq 'C' then VALUE = '_BLANK_';
29160      if type eq 'N' then do;
MPRINT(EM_DIAGRAM):   if type eq 'N' then do;
29161      VALUE = strip(VALUE);
MPRINT(EM_DIAGRAM):   VALUE = strip(VALUE);
29162      if VALUE = '' then VALUE = '.';
MPRINT(EM_DIAGRAM):   if VALUE = '' then VALUE = '.';
29163      end;
MPRINT(EM_DIAGRAM):   end;
29164      end;
MPRINT(EM_DIAGRAM):   end;
29165      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set WORK._FILTEREXCLUDE.
NOTE: The data set EMWS8.FILTER2_CLASS has 3 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.01 seconds
      

29166      %let _FOBS=0;
29167      filename _X "C:\Users\VM-SAS\AppData\Local\Temp\SAS Temporary Files\_TD3916_VM-SAS-PC_\Prc2\NEWVAR.txt";
MPRINT(EM_DIAGRAM):    filename _X "C:\Users\VM-SAS\AppData\Local\Temp\SAS Temporary Files\_TD3916_VM-SAS-PC_\Prc2\NEWVAR.txt";
29168      data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
29169      length string $200;
MPRINT(EM_DIAGRAM):   length string $200;
29170      set work._FilterExclude end=eof;
MPRINT(EM_DIAGRAM):   set work._FilterExclude end=eof;
29171      file _X;
MPRINT(EM_DIAGRAM):   file _X;
29172      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
29173      if first.NAME then do;
MPRINT(EM_DIAGRAM):   if first.NAME then do;
29174      if format ne '' then do;
MPRINT(EM_DIAGRAM):   if format ne '' then do;
29175      put ' ';
MPRINT(EM_DIAGRAM):   put ' ';
29176      put ' ';
MPRINT(EM_DIAGRAM):   put ' ';
29177      put 'length ' newvar ' $200;';
MPRINT(EM_DIAGRAM):   put 'length ' newvar ' $200;';
29178      put 'drop ' newvar ';';
MPRINT(EM_DIAGRAM):   put 'drop ' newvar ';';
29179      string = strip(newvar)!!'= put('!!strip(NAME)!!','!!strip(format)!!');';
MPRINT(EM_DIAGRAM):   string = strip(newvar)!!'= put('!!strip(NAME)!!','!!strip(format)!!');';
29180      put string;
MPRINT(EM_DIAGRAM):   put string;
29181      end;
MPRINT(EM_DIAGRAM):   end;
29182      else newvar = name;
MPRINT(EM_DIAGRAM):   else newvar = name;
29183      if CALCMETHOD ne 'MANUAL' then do;
MPRINT(EM_DIAGRAM):   if CALCMETHOD ne 'MANUAL' then do;
29184      if format ne '' or type = 'C' then do;
MPRINT(EM_DIAGRAM):   if format ne '' or type = 'C' then do;
29185      if (newvar eq name) then do;
MPRINT(EM_DIAGRAM):   if (newvar eq name) then do;
29186      put ' ';
MPRINT(EM_DIAGRAM):   put ' ';
29187      end;
MPRINT(EM_DIAGRAM):   end;
29188      put 'length ' normvar " $%dmnorlen;";
MPRINT(EM_DIAGRAM):   put 'length ' normvar
MPRINT(EM_DIAGRAM):   " $32;";
29189      put 'drop ' normvar ';';
MPRINT(EM_DIAGRAM):   put 'drop ' normvar ';';
29190      string = '%dmnormcp('!!strip(newvar)!!','!!strip(normvar)!!');';
MPRINT(EM_DIAGRAM):   string = '%dmnormcp('!!strip(newvar)!!','!!strip(normvar)!!');';
29191      put string;
MPRINT(EM_DIAGRAM):   put string;
29192      end;
MPRINT(EM_DIAGRAM):   end;
29193      end;
MPRINT(EM_DIAGRAM):   end;
29194      end;
MPRINT(EM_DIAGRAM):   end;
29195      if eof then call symput('_FOBS', '1');
MPRINT(EM_DIAGRAM):   if eof then call symput('_FOBS', '1');
29196      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file _X is:
      Filename=C:\Users\VM-SAS\AppData\Local\Temp\SAS Temporary Files\_TD3916_VM-SAS-PC_\Prc2\NEWVAR.txt,
      RECFM=V,LRECL=256,File Size (bytes)=0,
      Last Modified=06 de Março de 2016 16H42m,
      Create Time=06 de Março de 2016 16H42m

NOTE: 15 records were written to the file _X.
      The minimum record length was 1.
      The maximum record length was 39.
NOTE: There were 3 observations read from the data set WORK._FILTEREXCLUDE.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

29197      %let _FOBS=0;
29198      filename _X "C:\Users\VM-SAS\AppData\Local\Temp\SAS Temporary Files\_TD3916_VM-SAS-PC_\Prc2\PUBLISHNEWVAR.txt";
MPRINT(EM_DIAGRAM):    filename _X "C:\Users\VM-SAS\AppData\Local\Temp\SAS Temporary Files\_TD3916_VM-SAS-PC_\Prc2\PUBLISHNEWVAR.txt";
29199      data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
29200      length string $200;
MPRINT(EM_DIAGRAM):   length string $200;
29201      set work._FilterExclude end=eof;
MPRINT(EM_DIAGRAM):   set work._FilterExclude end=eof;
29202      where ROLE ne 'TARGET';
MPRINT(EM_DIAGRAM):   where ROLE ne 'TARGET';
29203      file _X;
MPRINT(EM_DIAGRAM):   file _X;
29204      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
29205      if first.NAME then do;
MPRINT(EM_DIAGRAM):   if first.NAME then do;
29206      if format ne '' then do;
MPRINT(EM_DIAGRAM):   if format ne '' then do;
29207      put ' ';
MPRINT(EM_DIAGRAM):   put ' ';
29208      put ' ';
MPRINT(EM_DIAGRAM):   put ' ';
29209      put 'length ' newvar ' $200;';
MPRINT(EM_DIAGRAM):   put 'length ' newvar ' $200;';
29210      put 'drop ' newvar ';';
MPRINT(EM_DIAGRAM):   put 'drop ' newvar ';';
29211      string = strip(newvar)!!'= put('!!strip(NAME)!!','!!strip(format)!!');';
MPRINT(EM_DIAGRAM):   string = strip(newvar)!!'= put('!!strip(NAME)!!','!!strip(format)!!');';
29212      put string;
MPRINT(EM_DIAGRAM):   put string;
29213      end;
MPRINT(EM_DIAGRAM):   end;
29214      else newvar = name;
MPRINT(EM_DIAGRAM):   else newvar = name;
29215      if CALCMETHOD ne 'MANUAL' then do;
MPRINT(EM_DIAGRAM):   if CALCMETHOD ne 'MANUAL' then do;
29216      if format ne '' or type = 'C' then do;
MPRINT(EM_DIAGRAM):   if format ne '' or type = 'C' then do;
29217      if (newvar eq name) then do;
MPRINT(EM_DIAGRAM):   if (newvar eq name) then do;
29218      put ' ';
MPRINT(EM_DIAGRAM):   put ' ';
29219      end;
MPRINT(EM_DIAGRAM):   end;
29220      put 'length ' normvar " $%dmnorlen;";
MPRINT(EM_DIAGRAM):   put 'length ' normvar
MPRINT(EM_DIAGRAM):   " $32;";
29221      put 'drop ' normvar ';';
MPRINT(EM_DIAGRAM):   put 'drop ' normvar ';';
29222      string = '%dmnormcp('!!strip(newvar)!!','!!strip(normvar)!!');';
MPRINT(EM_DIAGRAM):   string = '%dmnormcp('!!strip(newvar)!!','!!strip(normvar)!!');';
29223      put string;
MPRINT(EM_DIAGRAM):   put string;
29224      end;
MPRINT(EM_DIAGRAM):   end;
29225      end;
MPRINT(EM_DIAGRAM):   end;
29226      end;
MPRINT(EM_DIAGRAM):   end;
29227      if eof then call symput('_FOBS', '1');
MPRINT(EM_DIAGRAM):   if eof then call symput('_FOBS', '1');
29228      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file _X is:
      Filename=C:\Users\VM-SAS\AppData\Local\Temp\SAS Temporary Files\_TD3916_VM-SAS-PC_\Prc2\PUBLISHNEWVAR.txt,
      RECFM=V,LRECL=256,File Size (bytes)=0,
      Last Modified=06 de Março de 2016 16H42m,
      Create Time=06 de Março de 2016 16H42m

NOTE: 15 records were written to the file _X.
      The minimum record length was 1.
      The maximum record length was 39.
NOTE: There were 3 observations read from the data set WORK._FILTEREXCLUDE.
      WHERE ROLE not = 'TARGET';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

29229      %let _FOBS=0;
29230      filename _X "C:\Users\VM-SAS\AppData\Local\Temp\SAS Temporary Files\_TD3916_VM-SAS-PC_\Prc2\CLASSFILTERCODE.txt";
MPRINT(EM_DIAGRAM):    filename _X "C:\Users\VM-SAS\AppData\Local\Temp\SAS Temporary Files\_TD3916_VM-SAS-PC_\Prc2\CLASSFILTERCODE.txt";
29231      data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
29232      length line string $200 _filtervar $32;
MPRINT(EM_DIAGRAM):   length line string $200 _filtervar $32;
29233      drop newvarindex string;
MPRINT(EM_DIAGRAM):   drop newvarindex string;
29234      retain line '';
MPRINT(EM_DIAGRAM):   retain line '';
29235      set work._FilterExclude end=eof;
MPRINT(EM_DIAGRAM):   set work._FilterExclude end=eof;
29236      file _X;
MPRINT(EM_DIAGRAM):   file _X;
29237      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
29238      if first.NAME then do;
MPRINT(EM_DIAGRAM):   if first.NAME then do;
29239      _filtervar = NAME;
MPRINT(EM_DIAGRAM):   _filtervar = NAME;
29240      if newvar ne '' then _filtervar = newvar;
MPRINT(EM_DIAGRAM):   if newvar ne '' then _filtervar = newvar;
29241      if normvar ne '' then _filtervar = normvar;
MPRINT(EM_DIAGRAM):   if normvar ne '' then _filtervar = normvar;
29242      if _N_ ne 1 then put ' and ';
MPRINT(EM_DIAGRAM):   if _N_ ne 1 then put ' and ';
29243      if format ne '' or type = 'C' then do;
MPRINT(EM_DIAGRAM):   if format ne '' or type = 'C' then do;
29244      line = strip(_filtervar)!!" not in ( '"!! tranwrd(trim(level), "'", "''")!!"'";
MPRINT(EM_DIAGRAM):   line = strip(_filtervar)!!" not in ( '"!! tranwrd(trim(level), "'", "''")!!"'";
29245      end;
MPRINT(EM_DIAGRAM):   end;
29246      else do;
MPRINT(EM_DIAGRAM):   else do;
29247      if CALCMETHOD = 'MANUAL' then line = '('!!strip(NAME)!!' ne '!!strip(LEVEL)!!')';
MPRINT(EM_DIAGRAM):   if CALCMETHOD = 'MANUAL' then line = '('!!strip(NAME)!!' ne '!!strip(LEVEL)!!')';
29248      else line = '('!!strip(NAME)!!' ne '!!strip(put(NRAW, best.))!!')';
MPRINT(EM_DIAGRAM):   else line = '('!!strip(NAME)!!' ne '!!strip(put(NRAW, best.))!!')';
29249      end;
MPRINT(EM_DIAGRAM):   end;
29250      end;
MPRINT(EM_DIAGRAM):   end;
29251      else do;
MPRINT(EM_DIAGRAM):   else do;
29252      if format ne '' or type = 'C' then do;
MPRINT(EM_DIAGRAM):   if format ne '' or type = 'C' then do;
29253      string = ", '"!! tranwrd(trim(level), "'", "''")!!"'";
MPRINT(EM_DIAGRAM):   string = ", '"!! tranwrd(trim(level), "'", "''")!!"'";
29254      end;
MPRINT(EM_DIAGRAM):   end;
29255      else do;
MPRINT(EM_DIAGRAM):   else do;
29256      if CALCMETHOD = 'MANUAL' then string = 'and ('!!strip(NAME)!!' ne '!!strip(LEVEL)!!')';
MPRINT(EM_DIAGRAM):   if CALCMETHOD = 'MANUAL' then string = 'and ('!!strip(NAME)!!' ne '!!strip(LEVEL)!!')';
29257      else string = 'and ('!!strip(NAME)!!' ne '!!strip(put(NRAW, best.))!!')';
MPRINT(EM_DIAGRAM):   else string = 'and ('!!strip(NAME)!!' ne '!!strip(put(NRAW, best.))!!')';
29258      end;
MPRINT(EM_DIAGRAM):   end;
29259      if length(strip(string)) + length(strip(line)) < 80 then do;
MPRINT(EM_DIAGRAM):   if length(strip(string)) + length(strip(line)) < 80 then do;
29260      line = strip(line)!!' '!!strip(string);
MPRINT(EM_DIAGRAM):   line = strip(line)!!' '!!strip(string);
29261      end;
MPRINT(EM_DIAGRAM):   end;
29262      else do;
MPRINT(EM_DIAGRAM):   else do;
29263      put line;
MPRINT(EM_DIAGRAM):   put line;
29264      line = string;
MPRINT(EM_DIAGRAM):   line = string;
29265      end;
MPRINT(EM_DIAGRAM):   end;
29266      end;
MPRINT(EM_DIAGRAM):   end;
29267      if last.name then do;
MPRINT(EM_DIAGRAM):   if last.name then do;
29268      if (format ne '' or type eq 'C') then do;
MPRINT(EM_DIAGRAM):   if (format ne '' or type eq 'C') then do;
29269      line = strip(line)!!')';
MPRINT(EM_DIAGRAM):   line = strip(line)!!')';
29270      end;
MPRINT(EM_DIAGRAM):   end;
29271      put line;
MPRINT(EM_DIAGRAM):   put line;
29272      end;
MPRINT(EM_DIAGRAM):   end;
29273      if eof then call symput('_FOBS', '1');
MPRINT(EM_DIAGRAM):   if eof then call symput('_FOBS', '1');
29274      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file _X is:
      Filename=C:\Users\VM-SAS\AppData\Local\Temp\SAS Temporary Files\_TD3916_VM-SAS-PC_\Prc2\CLASSFILTERCODE.txt,
      RECFM=V,LRECL=256,File Size (bytes)=0,
      Last Modified=06 de Março de 2016 16H42m,
      Create Time=06 de Março de 2016 16H42m

NOTE: 5 records were written to the file _X.
      The minimum record length was 5.
      The maximum record length was 36.
NOTE: There were 3 observations read from the data set WORK._FILTEREXCLUDE.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

29275      filename _X;
MPRINT(EM_DIAGRAM):   filename _X;
NOTE: Fileref _X has been deassigned.
29276      %let _FOBS=0;
29277      filename _X "C:\Users\VM-SAS\AppData\Local\Temp\SAS Temporary Files\_TD3916_VM-SAS-PC_\Prc2\CLASSPUBLISHFILTERCODE.txt";
MPRINT(EM_DIAGRAM):    filename _X "C:\Users\VM-SAS\AppData\Local\Temp\SAS Temporary Files\_TD3916_VM-SAS-PC_\Prc2\CLASSPUBLISHFILTERCODE.txt";
29278      data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
29279      length line string $200 _filtervar $32;
MPRINT(EM_DIAGRAM):   length line string $200 _filtervar $32;
29280      drop newvarindex string;
MPRINT(EM_DIAGRAM):   drop newvarindex string;
29281      retain line '';
MPRINT(EM_DIAGRAM):   retain line '';
29282      set work._FilterExclude end=eof;
MPRINT(EM_DIAGRAM):   set work._FilterExclude end=eof;
29283      where ROLE ne 'TARGET';
MPRINT(EM_DIAGRAM):   where ROLE ne 'TARGET';
29284      file _X;
MPRINT(EM_DIAGRAM):   file _X;
29285      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
29286      if first.NAME then do;
MPRINT(EM_DIAGRAM):   if first.NAME then do;
29287      _filtervar = NAME;
MPRINT(EM_DIAGRAM):   _filtervar = NAME;
29288      if newvar ne '' then _filtervar = newvar;
MPRINT(EM_DIAGRAM):   if newvar ne '' then _filtervar = newvar;
29289      if normvar ne '' then _filtervar = normvar;
MPRINT(EM_DIAGRAM):   if normvar ne '' then _filtervar = normvar;
29290      if _N_ ne 1 then put ' and ';
MPRINT(EM_DIAGRAM):   if _N_ ne 1 then put ' and ';
29291      if format ne '' or type = 'C' then do;
MPRINT(EM_DIAGRAM):   if format ne '' or type = 'C' then do;
29292      line = strip(_filtervar)!!" not in ( '"!! tranwrd(trim(level), "'", "''")!!"'";
MPRINT(EM_DIAGRAM):   line = strip(_filtervar)!!" not in ( '"!! tranwrd(trim(level), "'", "''")!!"'";
29293      end;
MPRINT(EM_DIAGRAM):   end;
29294      else do;
MPRINT(EM_DIAGRAM):   else do;
29295      if CALCMETHOD = 'MANUAL' then line = '('!!strip(NAME)!!' ne '!!strip(LEVEL)!!')';
MPRINT(EM_DIAGRAM):   if CALCMETHOD = 'MANUAL' then line = '('!!strip(NAME)!!' ne '!!strip(LEVEL)!!')';
29296      else line = '('!!strip(NAME)!!' ne '!!strip(put(NRAW, best.))!!')';
MPRINT(EM_DIAGRAM):   else line = '('!!strip(NAME)!!' ne '!!strip(put(NRAW, best.))!!')';
29297      end;
MPRINT(EM_DIAGRAM):   end;
29298      end;
MPRINT(EM_DIAGRAM):   end;
29299      else do;
MPRINT(EM_DIAGRAM):   else do;
29300      if format ne '' or type = 'C' then do;
MPRINT(EM_DIAGRAM):   if format ne '' or type = 'C' then do;
29301      string = ", '"!! tranwrd(trim(level), "'", "''")!!"'";
MPRINT(EM_DIAGRAM):   string = ", '"!! tranwrd(trim(level), "'", "''")!!"'";
29302      end;
MPRINT(EM_DIAGRAM):   end;
29303      else do;
MPRINT(EM_DIAGRAM):   else do;
29304      if CALCMETHOD = 'MANUAL' then string = 'and ('!!strip(NAME)!!' ne '!!strip(LEVEL)!!')';
MPRINT(EM_DIAGRAM):   if CALCMETHOD = 'MANUAL' then string = 'and ('!!strip(NAME)!!' ne '!!strip(LEVEL)!!')';
29305      else string = 'and ('!!strip(NAME)!!' ne '!!strip(put(NRAW, best.))!!')';
MPRINT(EM_DIAGRAM):   else string = 'and ('!!strip(NAME)!!' ne '!!strip(put(NRAW, best.))!!')';
29306      end;
MPRINT(EM_DIAGRAM):   end;
29307      if length(strip(string)) + length(strip(line)) < 80 then do;
MPRINT(EM_DIAGRAM):   if length(strip(string)) + length(strip(line)) < 80 then do;
29308      line = strip(line)!!' '!!strip(string);
MPRINT(EM_DIAGRAM):   line = strip(line)!!' '!!strip(string);
29309      end;
MPRINT(EM_DIAGRAM):   end;
29310      else do;
MPRINT(EM_DIAGRAM):   else do;
29311      put line;
MPRINT(EM_DIAGRAM):   put line;
29312      line = string;
MPRINT(EM_DIAGRAM):   line = string;
29313      end;
MPRINT(EM_DIAGRAM):   end;
29314      end;
MPRINT(EM_DIAGRAM):   end;
29315      if last.name then do;
MPRINT(EM_DIAGRAM):   if last.name then do;
29316      if (format ne '' or type eq 'C') then do;
MPRINT(EM_DIAGRAM):   if (format ne '' or type eq 'C') then do;
29317      line = strip(line)!!')';
MPRINT(EM_DIAGRAM):   line = strip(line)!!')';
29318      end;
MPRINT(EM_DIAGRAM):   end;
29319      put line;
MPRINT(EM_DIAGRAM):   put line;
29320      end;
MPRINT(EM_DIAGRAM):   end;
29321      if eof then call symput('_FOBS', '1');
MPRINT(EM_DIAGRAM):   if eof then call symput('_FOBS', '1');
29322      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file _X is:
      Filename=C:\Users\VM-SAS\AppData\Local\Temp\SAS Temporary Files\_TD3916_VM-SAS-PC_\Prc2\CLASSPUBLISHFILTERCODE.txt,
      RECFM=V,LRECL=256,File Size (bytes)=0,
      Last Modified=06 de Março de 2016 16H42m,
      Create Time=06 de Março de 2016 16H42m

NOTE: 5 records were written to the file _X.
      The minimum record length was 5.
      The maximum record length was 36.
NOTE: There were 3 observations read from the data set WORK._FILTEREXCLUDE.
      WHERE ROLE not = 'TARGET';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

29323      filename _X;
MPRINT(EM_DIAGRAM):   filename _X;
NOTE: Fileref _X has been deassigned.
29324      %let _FilterIntervalNum= 0;
29325      proc sort data=EMWS8.Filter2_INTERVAL;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS8.Filter2_INTERVAL;
29326      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
29327      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.FILTER2_INTERVAL.
NOTE: The data set EMWS8.FILTER2_INTERVAL has 3 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.04 seconds
      cpu time            0.00 seconds
      

29328      filename _X "C:\Users\VM-SAS\AppData\Local\Temp\SAS Temporary Files\_TD3916_VM-SAS-PC_\Prc2\INTERVALFILTERCODE.txt";
MPRINT(EM_DIAGRAM):   filename _X "C:\Users\VM-SAS\AppData\Local\Temp\SAS Temporary Files\_TD3916_VM-SAS-PC_\Prc2\INTERVALFILTERCODE.txt";
29329      data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
29330      length string $200;
MPRINT(EM_DIAGRAM):   length string $200;
29331      set EMWS8.Filter2_INTERVAL end=eof;
MPRINT(EM_DIAGRAM):   set EMWS8.Filter2_INTERVAL end=eof;
29332      file _X;
MPRINT(EM_DIAGRAM):   file _X;
29333      where (INTERVALMIN ne . or INTERVALMAX ne . or KEEPMISSING eq 'N')
29334      ;
MPRINT(EM_DIAGRAM):   where (INTERVALMIN ne . or INTERVALMAX ne . or KEEPMISSING eq 'N') ;
29335      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
29336      if _N_ = 1 then do;
MPRINT(EM_DIAGRAM):   if _N_ = 1 then do;
29337      string = ' (';
MPRINT(EM_DIAGRAM):   string = ' (';
29338      end;
MPRINT(EM_DIAGRAM):   end;
29339      else do;
MPRINT(EM_DIAGRAM):   else do;
29340      string = ' and (';
MPRINT(EM_DIAGRAM):   string = ' and (';
29341      end;
MPRINT(EM_DIAGRAM):   end;
29342      if INTERVALMIN ne . or INTERVALMAX ne . then do;
MPRINT(EM_DIAGRAM):   if INTERVALMIN ne . or INTERVALMAX ne . then do;
29343      if KEEPMISSING = 'N' then string = trim(string)!!' '!!strip(NAME)!!' ne . and ';
MPRINT(EM_DIAGRAM):   if KEEPMISSING = 'N' then string = trim(string)!!' '!!strip(NAME)!!' ne . and ';
29344      else string = trim(string)!!' '!!strip(NAME)!!' eq . or ';
MPRINT(EM_DIAGRAM):   else string = trim(string)!!' '!!strip(NAME)!!' eq . or ';
29345      if INTERVALMIN ne . and INTERVALMAX ne . then do;
MPRINT(EM_DIAGRAM):   if INTERVALMIN ne . and INTERVALMAX ne . then do;
29346      string = trim(string)!!' ('!!strip(put(INTERVALMIN, best12.))!!'<='!!strip(NAME)!!') and ('!!strip(NAME)!!'<='!!strip(put(INTERVALMAX, best12.))!!')';
MPRINT(EM_DIAGRAM):   string = trim(string)!!' ('!!strip(put(INTERVALMIN, best12.))!!'<='!!strip(NAME)!!') and ('!!strip(NAME)!!'<='!!strip(put(INTERVALMAX, best12.))!!')';
29347      end;
MPRINT(EM_DIAGRAM):   end;
29348      else if INTERVALMIN eq . and INTERVALMAX ne . then do;
MPRINT(EM_DIAGRAM):   else if INTERVALMIN eq . and INTERVALMAX ne . then do;
29349      string = trim(string)!!' ('!!strip(NAME)!!'<='!!strip(put(INTERVALMAX, best12.))!!')';
MPRINT(EM_DIAGRAM):   string = trim(string)!!' ('!!strip(NAME)!!'<='!!strip(put(INTERVALMAX, best12.))!!')';
29350      end;
MPRINT(EM_DIAGRAM):   end;
29351      else if INTERVALMIN ne . and INTERVALMAX eq . then do;
MPRINT(EM_DIAGRAM):   else if INTERVALMIN ne . and INTERVALMAX eq . then do;
29352      string = trim(string)!!' ('!!strip(put(INTERVALMIN, best12.)) || '<=' || NAME||')';
MPRINT(EM_DIAGRAM):   string = trim(string)!!' ('!!strip(put(INTERVALMIN, best12.)) || '<=' || NAME||')';
29353      end;
MPRINT(EM_DIAGRAM):   end;
29354      end;
MPRINT(EM_DIAGRAM):   end;
29355      else do;
MPRINT(EM_DIAGRAM):   else do;
29356      string = trim(string)!!' '!!strip(name)!!' ne .';
MPRINT(EM_DIAGRAM):   string = trim(string)!!' '!!strip(name)!!' ne .';
29357      end;
MPRINT(EM_DIAGRAM):   end;
29358      string = trim(string)!!')';
MPRINT(EM_DIAGRAM):   string = trim(string)!!')';
29359      put string;
MPRINT(EM_DIAGRAM):   put string;
29360      if eof then call symput('_FilterIntervalNum', strip(put(_N_, best.)));
MPRINT(EM_DIAGRAM):   if eof then call symput('_FilterIntervalNum', strip(put(_N_, best.)));
29361      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file _X is:
      Filename=C:\Users\VM-SAS\AppData\Local\Temp\SAS Temporary Files\_TD3916_VM-SAS-PC_\Prc2\INTERVALFILTERCODE.txt,
      RECFM=V,LRECL=256,File Size (bytes)=0,
      Last Modified=06 de Março de 2016 16H42m,
      Create Time=06 de Março de 2016 16H42m

NOTE: 3 records were written to the file _X.
      The minimum record length was 44.
      The maximum record length was 64.
NOTE: There were 3 observations read from the data set EMWS8.FILTER2_INTERVAL.
      WHERE (INTERVALMIN not = .) or (INTERVALMAX not = .) or (KEEPMISSING='N');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

29362      %let _FilterIntervalNum= 0;
29363      proc sort data=EMWS8.Filter2_INTERVAL;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS8.Filter2_INTERVAL;
29364      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
29365      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Input data set is already sorted, no sorting done.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

29366      filename _X "C:\Users\VM-SAS\AppData\Local\Temp\SAS Temporary Files\_TD3916_VM-SAS-PC_\Prc2\INTERVALPUBLISHFILTERCODE.txt";
MPRINT(EM_DIAGRAM):   filename _X "C:\Users\VM-SAS\AppData\Local\Temp\SAS Temporary Files\_TD3916_VM-SAS-PC_\Prc2\INTERVALPUBLISHFILTERCODE.txt";
29367      data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
29368      length string $200;
MPRINT(EM_DIAGRAM):   length string $200;
29369      set EMWS8.Filter2_INTERVAL end=eof;
MPRINT(EM_DIAGRAM):   set EMWS8.Filter2_INTERVAL end=eof;
29370      file _X;
MPRINT(EM_DIAGRAM):   file _X;
29371      where (INTERVALMIN ne . or INTERVALMAX ne . or KEEPMISSING eq 'N')
29372      and ROLE ne 'TARGET';
MPRINT(EM_DIAGRAM):   where (INTERVALMIN ne . or INTERVALMAX ne . or KEEPMISSING eq 'N') and ROLE ne 'TARGET';
29373      ;
MPRINT(EM_DIAGRAM):   ;
29374      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
29375      if _N_ = 1 then do;
MPRINT(EM_DIAGRAM):   if _N_ = 1 then do;
29376      string = ' (';
MPRINT(EM_DIAGRAM):   string = ' (';
29377      end;
MPRINT(EM_DIAGRAM):   end;
29378      else do;
MPRINT(EM_DIAGRAM):   else do;
29379      string = ' and (';
MPRINT(EM_DIAGRAM):   string = ' and (';
29380      end;
MPRINT(EM_DIAGRAM):   end;
29381      if INTERVALMIN ne . or INTERVALMAX ne . then do;
MPRINT(EM_DIAGRAM):   if INTERVALMIN ne . or INTERVALMAX ne . then do;
29382      if KEEPMISSING = 'N' then string = trim(string)!!' '!!strip(NAME)!!' ne . and ';
MPRINT(EM_DIAGRAM):   if KEEPMISSING = 'N' then string = trim(string)!!' '!!strip(NAME)!!' ne . and ';
29383      else string = trim(string)!!' '!!strip(NAME)!!' eq . or ';
MPRINT(EM_DIAGRAM):   else string = trim(string)!!' '!!strip(NAME)!!' eq . or ';
29384      if INTERVALMIN ne . and INTERVALMAX ne . then do;
MPRINT(EM_DIAGRAM):   if INTERVALMIN ne . and INTERVALMAX ne . then do;
29385      string = trim(string)!!' ('!!strip(put(INTERVALMIN, best12.))!!'<='!!strip(NAME)!!') and ('!!strip(NAME)!!'<='!!strip(put(INTERVALMAX, best12.))!!')';
MPRINT(EM_DIAGRAM):   string = trim(string)!!' ('!!strip(put(INTERVALMIN, best12.))!!'<='!!strip(NAME)!!') and ('!!strip(NAME)!!'<='!!strip(put(INTERVALMAX, best12.))!!')';
29386      end;
MPRINT(EM_DIAGRAM):   end;
29387      else if INTERVALMIN eq . and INTERVALMAX ne . then do;
MPRINT(EM_DIAGRAM):   else if INTERVALMIN eq . and INTERVALMAX ne . then do;
29388      string = trim(string)!!' ('!!strip(NAME)!!'<='!!strip(put(INTERVALMAX, best12.))!!')';
MPRINT(EM_DIAGRAM):   string = trim(string)!!' ('!!strip(NAME)!!'<='!!strip(put(INTERVALMAX, best12.))!!')';
29389      end;
MPRINT(EM_DIAGRAM):   end;
29390      else if INTERVALMIN ne . and INTERVALMAX eq . then do;
MPRINT(EM_DIAGRAM):   else if INTERVALMIN ne . and INTERVALMAX eq . then do;
29391      string = trim(string)!!' ('!!strip(put(INTERVALMIN, best12.)) || '<=' || NAME||')';
MPRINT(EM_DIAGRAM):   string = trim(string)!!' ('!!strip(put(INTERVALMIN, best12.)) || '<=' || NAME||')';
29392      end;
MPRINT(EM_DIAGRAM):   end;
29393      end;
MPRINT(EM_DIAGRAM):   end;
29394      else do;
MPRINT(EM_DIAGRAM):   else do;
29395      string = trim(string)!!' '!!strip(name)!!' ne .';
MPRINT(EM_DIAGRAM):   string = trim(string)!!' '!!strip(name)!!' ne .';
29396      end;
MPRINT(EM_DIAGRAM):   end;
29397      string = trim(string)!!')';
MPRINT(EM_DIAGRAM):   string = trim(string)!!')';
29398      put string;
MPRINT(EM_DIAGRAM):   put string;
29399      if eof then call symput('_FilterIntervalNum', strip(put(_N_, best.)));
MPRINT(EM_DIAGRAM):   if eof then call symput('_FilterIntervalNum', strip(put(_N_, best.)));
29400      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file _X is:
      Filename=C:\Users\VM-SAS\AppData\Local\Temp\SAS Temporary Files\_TD3916_VM-SAS-PC_\Prc2\INTERVALPUBLISHFILTERCODE.txt,
      RECFM=V,LRECL=256,File Size (bytes)=0,
      Last Modified=06 de Março de 2016 16H42m,
      Create Time=06 de Março de 2016 16H42m

NOTE: 3 records were written to the file _X.
      The minimum record length was 44.
      The maximum record length was 64.
NOTE: There were 3 observations read from the data set EMWS8.FILTER2_INTERVAL.
      WHERE ((INTERVALMIN not = .) or (INTERVALMAX not = .) or (KEEPMISSING='N')) and (ROLE not = 'TARGET');
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

NOTE: This SAS session is using a registry in WORK.  All changes will be lost at the end of this session.
29401      data EMWS8.Filter2_TRAIN / view=EMWS8.Filter2_TRAIN;
MPRINT(EM_DIAGRAM):    data EMWS8.Filter2_TRAIN / view=EMWS8.Filter2_TRAIN;
29402      set EMWS8.FIMPORT_train;
MPRINT(EM_DIAGRAM):   set EMWS8.FIMPORT_train;
29403      
29404      
29405      length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
29406      drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
29407      _FILTERFMT1= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(Education,$10.0);
29408      
29409      
29410      length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
29411      drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
29412      _FILTERFMT2= put(Gender,$1.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(Gender,$1.0);
29413      
29414      
29415      length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
29416      drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
29417      _FILTERFMT3= put(Marital_Status,$12.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(Marital_Status,$12.0);
29418      if
29419      not (
29420      _FILTERFMT1 not in ( 'OldSchool')
29421       and
29422      _FILTERFMT2 not in ( '?')
29423       and
29424      _FILTERFMT3 not in ( 'BigConfusion')
29425      and
29426      ( HouseKeeping eq . or (0<=HouseKeeping) and (HouseKeeping<=40))
29427      and ( Kitchen eq . or (0<=Kitchen) and (Kitchen<=40))
29428      and ( Toys eq . or (0<=Toys) and (Toys<=40))
29429      )
29430      ;
MPRINT(EM_DIAGRAM):   if not ( _FILTERFMT1 not in ( 'OldSchool') and _FILTERFMT2 not in ( '?') and _FILTERFMT3 not in ( 'BigConfusion') and ( HouseKeeping eq . or (0<=HouseKeeping) and (HouseKeeping<=40)) and ( Kitchen eq . or (0<=Kitchen) and 
(Kitchen<=40)) and ( Toys eq . or (0<=Toys) and (Toys<=40)) ) ;
29431      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: DATA STEP view saved on file EMWS8.FILTER2_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.FIMPORT_TRAIN.VIEW used (Total process time):
      real time           0.04 seconds
      cpu time            0.00 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.06 seconds
      cpu time            0.01 seconds
      

29432      data WORK.Filter2FILTERVAR;
MPRINT(EM_DIAGRAM):    data WORK.Filter2FILTERVAR;
29433      set
29434      EMWS8.Filter2_INTERVAL(where=(INTERVALMIN ne . or INTERVALMAX ne . or KEEPMISSING='N'))
29435      EMWS8.Filter2_CLASS(where=(CALCMETHOD ne 'NONE'))
29436      ;
MPRINT(EM_DIAGRAM):   set EMWS8.Filter2_INTERVAL(where=(INTERVALMIN ne . or INTERVALMAX ne . or KEEPMISSING='N')) EMWS8.Filter2_CLASS(where=(CALCMETHOD ne 'NONE')) ;
29437      keep NAME;
MPRINT(EM_DIAGRAM):   keep NAME;
29438      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.FILTER2_INTERVAL.
      WHERE (INTERVALMIN not = .) or (INTERVALMAX not = .) or (KEEPMISSING='N');
NOTE: There were 3 observations read from the data set EMWS8.FILTER2_CLASS.
      WHERE CALCMETHOD not = 'NONE';
NOTE: The data set WORK.FILTER2FILTERVAR has 6 observations and 1 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

29439      proc sort data= WORK.Filter2FILTERVAR nodupkey;
MPRINT(EM_DIAGRAM):   proc sort data= WORK.Filter2FILTERVAR nodupkey;
29440      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
29441      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 6 observations read from the data set WORK.FILTER2FILTERVAR.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK.FILTER2FILTERVAR has 6 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

29442      proc sort data=WORK.M1K5EIBZ;
MPRINT(EM_DIAGRAM):    proc sort data=WORK.M1K5EIBZ;
29443      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
29444      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 21 observations read from the data set WORK.M1K5EIBZ.
NOTE: The data set WORK.M1K5EIBZ has 21 observations and 26 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

29445      data WORK.Filter2DMDBC;
MPRINT(EM_DIAGRAM):   data WORK.Filter2DMDBC;
29446      merge WORK.M1K5EIBZ WORK.Filter2FILTERVAR(in=_b);
MPRINT(EM_DIAGRAM):   merge WORK.M1K5EIBZ WORK.Filter2FILTERVAR(in=_b);
29447      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
29448      if (REPORT = 'Y' or ROLE in('FREQ','TARGET') or _b) then output;
MPRINT(EM_DIAGRAM):   if (REPORT = 'Y' or ROLE in('FREQ','TARGET') or _b) then output;
29449      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 21 observations read from the data set WORK.M1K5EIBZ.
NOTE: There were 6 observations read from the data set WORK.FILTER2FILTERVAR.
NOTE: The data set WORK.FILTER2DMDBC has 7 observations and 26 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

29450      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------* ;
29451      * Filter2: DMDBClass Macro ;
MPRINT(EM_DIAGRAM):   * Filter2: DMDBClass Macro ;
29452      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
29453      %macro DMDBClass;
29454          DepVar(DESC) Education(ASC) Gender(ASC) Marital_Status(ASC)
29455      %mend DMDBClass;
29456      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
29457      * Filter2: DMDBVar Macro ;
MPRINT(EM_DIAGRAM):   * Filter2: DMDBVar Macro ;
29458      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
29459      %macro DMDBVar;
29460          HouseKeeping Kitchen Toys
29461      %mend DMDBVar;
29462      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
29463      * Filter2: Create DMDB;
MPRINT(EM_DIAGRAM):   * Filter2: Create DMDB;
29464      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
29465      proc dmdb batch data=EMWS8.FIMPORT_train
29466      dmdbcat=WORK.Filter2_DMDB
29467      varout=WORK.FILTER_VARSTATS
29468      maxlevel = 513
29469      ;
MPRINT(EM_DIAGRAM):   proc dmdb batch data=EMWS8.FIMPORT_train dmdbcat=WORK.Filter2_DMDB varout=WORK.FILTER_VARSTATS maxlevel = 513 ;
MPRINT(EM_DIAGRAM):   class
29470      class %DMDBClass;
MPRINT(DMDBCLASS):   DepVar(DESC) Education(ASC) Gender(ASC) Marital_Status(ASC)
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   var
29471      var %DMDBVar;
MPRINT(DMDBVAR):   HouseKeeping Kitchen Toys
MPRINT(EM_DIAGRAM):  ;
29472      target
29473      DepVar
29474      ;
MPRINT(EM_DIAGRAM):   target DepVar ;
29475      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Records processed = 2500   Memory used = 511K.
NOTE: View EMWS8.FIMPORT_TRAIN.VIEW used (Total process time):
      real time           0.06 seconds
      cpu time            0.04 seconds
      
NOTE: There were 2500 observations read from the data set EMWS8.FIMPORT_DATA.
NOTE: There were 2500 observations read from the data set EMWS8.FIMPORT_TRAIN.
NOTE: The data set WORK.FILTER_VARSTATS has 3 observations and 9 variables.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.07 seconds
      cpu time            0.04 seconds
      

MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):   *--- end code ---*;
29476      quit;
29477      *--- end code ---*;

29478      data WORK.FILTER_VARSTATS;
MPRINT(EM_DIAGRAM):    data WORK.FILTER_VARSTATS;
29479      length DATAROLE $10 TYPE $8 NAME $32;
MPRINT(EM_DIAGRAM):   length DATAROLE $10 TYPE $8 NAME $32;
29480      label DATAROLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label DATAROLE = "Data Role";
29481      label N = "%sysfunc(sasmsg(sashelp.dmine, rpt_nonMiss_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label N = "Non Missing";
29482      label NMISS = "%sysfunc(sasmsg(sashelp.dmine, rpt_missing_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label NMISS = "Missing";
29483      label MIN = "%sysfunc(sasmsg(sashelp.dmine, rpt_minimum_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label MIN = "Minimum";
29484      label MAX = "%sysfunc(sasmsg(sashelp.dmine, rpt_maximum_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label MAX = "Maximum";
29485      label MEAN = "%sysfunc(sasmsg(sashelp.dmine, rpt_mean_vlabel,    NOQUOTE))";
MPRINT(EM_DIAGRAM):   label MEAN = "Mean";
29486      label STD = "%sysfunc(sasmsg(sashelp.dmine, rpt_std_vlabel,     NOQUOTE))";
MPRINT(EM_DIAGRAM):   label STD = "Standard Deviation";
29487      label SKEWNESS = "%sysfunc(sasmsg(sashelp.dmine, rpt_skewness_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label SKEWNESS = "Skewness";
29488      label KURTOSIS = "%sysfunc(sasmsg(sashelp.dmine, rpt_kurtosis_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label KURTOSIS = "Kurtosis";
29489      label NUMCAT = "%sysfunc(sasmsg(sashelp.dmine, rpt_numcat_vlabel,   NOQUOTE))";
MPRINT(EM_DIAGRAM):   label NUMCAT = "Number of Levels";
29490      retain DATAROLE "TRAIN" type "ORIGINAL";
MPRINT(EM_DIAGRAM):   retain DATAROLE "TRAIN" type "ORIGINAL";
29491      set WORK.FILTER_VARSTATS;
MPRINT(EM_DIAGRAM):   set WORK.FILTER_VARSTATS;
29492      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Variable NUMCAT is uninitialized.
NOTE: There were 3 observations read from the data set WORK.FILTER_VARSTATS.
NOTE: The data set WORK.FILTER_VARSTATS has 3 observations and 11 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

29493      proc append base=EMWS8.Filter2_STATS data=WORK.FILTER_VARSTATS;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Filter2_STATS data=WORK.FILTER_VARSTATS;
29494      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK.FILTER_VARSTATS to EMWS8.FILTER2_STATS.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 3 observations read from the data set WORK.FILTER_VARSTATS.
NOTE: The data set EMWS8.FILTER2_STATS has 3 observations and 11 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.03 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
