MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "11. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "16.42 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Training Log
Date:                11. April 2016
Time:                16.42 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O3JHJPNX "C:\\predictive-models-project\Workspaces\EMWS8\Filter2\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O3JHJPNX new;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOG "C:\\predictive-models-project\Workspaces\EMWS8\Filter2\EMLOG.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "11. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "16.42 Uhr" );
MPRINT(EM_DIAGRAM):   file _LOG;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                Lukas Fahr";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "Site:                70107571";
MPRINT(EM_DIAGRAM):   put "Platform:            X64_7PRO";
MPRINT(EM_DIAGRAM):   put "Maintenance Release: 9.03.01M2P081512";
MPRINT(EM_DIAGRAM):   put "EM Version:          12.1";
MPRINT(EM_DIAGRAM):   put "* ";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN "C:\\predictive-models-project\Workspaces\EMWS8\Filter2\EMTRAIN.log" encoding="UTF-8" NOBOM;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _LOG MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_LOGIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _LOGIN "C:\\predictive-models-project\Workspaces\EMWS8\Filter2\EMSCORE.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN "C:\\predictive-models-project\Workspaces\EMWS8\Filter2\EMREPORT.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    filename _LOG;
MPRINT(EM_DIAGRAM):    filename _OUT "C:\\predictive-models-project\Workspaces\EMWS8\Filter2\EMOUTPUT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "11. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "16.42 Uhr" );
MPRINT(EM_DIAGRAM):   file _OUT;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                Lukas Fahr";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\\predictive-models-project\Workspaces\EMWS8\Filter2\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _OUT MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_OUTIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\\predictive-models-project\Workspaces\EMWS8\Filter2\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\\predictive-models-project\Workspaces\EMWS8\Filter2\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    filename _OUT;
MPRINT(EM_DIAGRAM):    filename _emtool_ 'C:\\predictive-models-project\Workspaces\EMWS8\Filter2\EMRUNSTATUS.xml' encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    filename _emtool_ 'C:\\predictive-models-project\Workspaces\EMWS8\Filter2\EMRUNSTATUS.xml' encoding="UTF-8" NOBOM;
20784      proc freq data=EMWS8.Filter2_VariableSet noprint;
MPRINT(EM_DIAGRAM):    proc freq data=EMWS8.Filter2_VariableSet noprint;
20785      table ROLE*LEVEL/out=WORK.Filter2META;
MPRINT(EM_DIAGRAM):   table ROLE*LEVEL/out=WORK.Filter2META;
20786      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.FILTER2_VARIABLESET.
NOTE: The data set WORK.FILTER2META has 6 observations and 4 variables.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

20787      proc print data=WORK.Filter2META label noobs;
MPRINT(EM_DIAGRAM):   proc print data=WORK.Filter2META label noobs;
20788      var ROLE LEVEL COUNT;
MPRINT(EM_DIAGRAM):   var ROLE LEVEL COUNT;
20789      label ROLE = "%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel, NOQUOTE))" LEVEL = "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label ROLE = "Role" LEVEL = "Measurement Level" COUNT = "Frequency Count";
20790      title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
20791      title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_varSummary_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Variable Summary";
MPRINT(EM_DIAGRAM):   run;
20792      run;

NOTE: There were 6 observations read from the data set WORK.FILTER2META.
NOTE: The PROCEDURE PRINT printed page 1.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

20793      title10;
MPRINT(EM_DIAGRAM):   title10;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Filter2: Preparing metadata for training;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   data WORK.M3H924EY;
MPRINT(EM_DIAGRAM):   set WORK.M3H924EY;
MPRINT(EM_DIAGRAM):   if CALCMETHOD eq 'DEFAULT' then do;
MPRINT(EM_DIAGRAM):   if ROLE ne 'INPUT' then CALCMETHOD='NONE';
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   if level='INTERVAL' then CALCMETHOD='NONE';
MPRINT(EM_DIAGRAM):   else CALCMETHOD='NONE';
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if KEEPMISSING eq 'D' then do;
MPRINT(EM_DIAGRAM):   if ROLE ne 'INPUT' then KEEPMISSING='Y';
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   if level='INTERVAL' then KEEPMISSING='Y';
MPRINT(EM_DIAGRAM):   else KEEPMISSING='Y';
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if CALCMETHOD='NONE' and KEEPMISSING='Y' then delete;
MPRINT(EM_DIAGRAM):   run;
20816      filename cdist catalog 'SASHELP.EMUTIL.EM_CLASSDIST.SOURCE';
MPRINT(EM_DIAGRAM):    filename cdist catalog 'SASHELP.EMUTIL.EM_CLASSDIST.SOURCE';
20817      %inc cdist;
NOTE: %INCLUDE (level 1) file CDIST is file SASHELP.EMUTIL.EM_CLASSDIST.SOURCE.
20818     +%macro class_profile(DATA=, OUTPUT=_CLASS, VARS=, METADATA=, WHERE=, STAT=_STAT, FREQ=);
20819     +   %if %INDEX(&EM_DEBUG, LOG SOURCE) %then %do;
20820     +       %put *** Statistics for Class variables ***;
20821     +       %put >>> DATA= &data  OUTPUT= &output;
20822     +       %put >>> VAR= &vars;
20823     +       %put >>> WHERE=  &where;
20824     +       %put >>> FREQ=  &freq;
20825     +   %end;
20827     +      /* Process metadata data set */
20828     +   filename _mac catalog 'WORK.MACROS.VARIABLES.SOURCE';
20829     +   %if %sysfunc(exist(&metadata))>0 and ("&metadata" ne "") %then %do;
20830     +       %let FREQ=;
20831     +       %let _nobs=0;
20832     +       data _null;
20833     +          set &metadata(where=(LEVEL ne 'INTERVAL' and ROLE ne 'FREQ')) end=eof;
20834     +          if eof then call symput('_nobs', put(_N_, best.));
20835     +       run;
20836     +       %if "&_nobs" ne "0" %then %do;
20837     +           data _null_;
20838     +              file _mac;
20839     +              length _VARS $80; retain _vars;
20840     +              if _n_ =1 then put '%macro _vars;';
20841     +              set &metadata end=eof;
20842     +              where LEVEL ne 'INTERVAL' or ROLE='FREQ';
20843     +              if ROLE='FREQ' then call symput('FREQ', NAME);
20844     +              else do;
20845     +                 if length(strip(_vars)) + length(strip(NAME)) + 1 <80  then
20846     +                    _vars = strip(_vars)!! ' ' !!strip(NAME);
20847     +                 else do;
20848     +                    put _Vars;
20849     +                    _vars = strip(NAME);
20850     +                 end;
20851     +              end;
20852     +              if eof then do;
20853     +                 put _Vars;
20854     +                 put '%mend _vars;';
20855     +              end;
20856     +           run;
20857     +       %end;
20858     +       %else %do;
20859     +           data _null_;
20860     +              file _mac;
20861     +              put '%macro _vars;';
20862     +              put '%mend _vars;';
20863     +           run;
20864     +       %end;
20865     +   %end;
20866     +   %else %do;
20867     +       data _null_;
20868     +          file _mac;
20869     +          put '%macro _vars;';
20870     +          put '%mend _vars;';
20871     +       run;
20872     +   %end;
20873     +   %inc _mac;
20874     +   filename _mac;
20876     +   %if "&VARS" eq "" and %_vars eq %then %goto doend;
20878     +   /* Check if FREQ variable is in the data set */
20879     +   %if &freq ne %then %do;
20880     +       data _null_;
20881     +          dsid = open("&data");
20882     +          if dsid>0 then do;
20883     +               if varnum(dsid, "&FREQ")<1 then
20884     +                  call symput('FREQ', '');
20885     +               dsid = close(dsid);
20886     +          end;
20887     +       run;
20888     +   %end;
20890     +   proc dmdb data=&DATA  nonorm classout=_tempclass(rename=(NAME=VARIABLE LEVEL=VALUE FREQUENCY=COUNT FREQPERCENT=PERCENT));
20891     +      class %_Vars &vars;
20892     +      %if &FREQ ne %then %do;
20893     +          freq &FREQ;
20894     +      %end;
20895     +      %if %bquote(&WHERE) ne %then %do;
20896     +            where &WHERE;
20897     +      %end;
20898     +   run;
20899     +   proc sort data=_tempclass;
20900     +      by VARIABLE;
20901     +   run;
20902     +   data &output;
20903     +      label VARIABLE     = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel, NOQUOTE))";
20904     +      label VALUE        = "%sysfunc(sasmsg(sashelp.dmine, rpt_value_vlabel,    NOQUOTE))";
20905     +      label COUNT        = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel,    NOQUOTE))";
20906     +      label PERCENT      = "%sysfunc(sasmsg(sashelp.dmine, rpt_percent_vlabel,  NOQUOTE))";
20907     +      set _tempclass;
20908     +      format COUNT;
20909     +      keep VARIABLE COUNT PERCENT VALUE;
20910     +   run;
20911     +   proc means data=&output noprint;
20912     +      class VARIABLE;
20913     +      var COUNT;
20914     +      output out=&STAT N=NUMCAT;
20915     +   run;
20916     +   data &STAT;
20917     +      set &STAT;
20918     +      where _TYPE_=1;
20919     +      KEEP VARIABLE NUMCAT;
20920     +      label NUMCAT   = "%sysfunc(sasmsg(sashelp.dmine, rpt_numcat_vlabel,   NOQUOTE))";
20921     +      format NUMCAT 8.;
20922     +   run;
20923     +   proc datasets lib=work nolist;
20924     +      delete _tempclass;
20925     +   run;
20926     +   quit;
20928     +   %doend:
20929     +%mend class_profile;
NOTE: %INCLUDE (level 1) ending.
20931      filename cdist;
MPRINT(EM_DIAGRAM):   filename cdist;
NOTE: Fileref CDIST has been deassigned.
20932      %class_profile(DATA=EMWS8.FIMPORT_train, OUTPUT=EMWS8.Filter2_CLASSDIST, METADATA=EMWS8.Filter2_VariableSet, STAT=_STAT);
MPRINT(CLASS_PROFILE):   filename _mac catalog 'WORK.MACROS.VARIABLES.SOURCE';
MPRINT(CLASS_PROFILE):   data _null;
MPRINT(CLASS_PROFILE):   set EMWS8.Filter2_VariableSet(where=(LEVEL ne 'INTERVAL' and ROLE ne 'FREQ')) end=eof;
MPRINT(CLASS_PROFILE):   if eof then call symput('_nobs', put(_N_, best.));
MPRINT(CLASS_PROFILE):   run;

NOTE: There were 11 observations read from the data set EMWS8.FILTER2_VARIABLESET.
      WHERE (LEVEL not = 'INTERVAL') and (ROLE not = 'FREQ');
NOTE: The data set WORK._NULL has 11 observations and 26 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(CLASS_PROFILE):   data _null_;
MPRINT(CLASS_PROFILE):   file _mac;
MPRINT(CLASS_PROFILE):   length _VARS $80;
MPRINT(CLASS_PROFILE):   retain _vars;
MPRINT(CLASS_PROFILE):   if _n_ =1 then put '%macro _vars;';
MPRINT(CLASS_PROFILE):   set EMWS8.Filter2_VariableSet end=eof;
MPRINT(CLASS_PROFILE):   where LEVEL ne 'INTERVAL' or ROLE='FREQ';
MPRINT(CLASS_PROFILE):   if ROLE='FREQ' then call symput('FREQ', NAME);
MPRINT(CLASS_PROFILE):   else do;
MPRINT(CLASS_PROFILE):   if length(strip(_vars)) + length(strip(NAME)) + 1 <80 then _vars = strip(_vars)!! ' ' !!strip(NAME);
MPRINT(CLASS_PROFILE):   else do;
MPRINT(CLASS_PROFILE):   put _Vars;
MPRINT(CLASS_PROFILE):   _vars = strip(NAME);
MPRINT(CLASS_PROFILE):   end;
MPRINT(CLASS_PROFILE):   end;
MPRINT(CLASS_PROFILE):   if eof then do;
MPRINT(CLASS_PROFILE):   put _Vars;
MPRINT(CLASS_PROFILE):   put '%mend _vars;';
MPRINT(CLASS_PROFILE):   end;
MPRINT(CLASS_PROFILE):   run;

NOTE: The file _MAC is:
      Catalog Name=WORK.MACROS.VARIABLES.SOURCE,
      Catalog Page Size=4096,
      Number of Catalog Pages=4,
      Created=Montag, 11. April 2016 16.42 Uhr,
      Last Modified=Montag, 11. April 2016 16.42 Uhr,
      Filename=C:\Users\LUKASF~1\AppData\Local\Temp\SAS Temporary Files\_TD12952_WN7LF-LEAVE_\Prc2\macros.sas7bcat,
      Release Created=9.0301M2,Host Created=X64_7PRO

NOTE: 4 records were written to the file _MAC.
      The minimum record length was 12.
      The maximum record length was 73.
NOTE: There were 11 observations read from the data set EMWS8.FILTER2_VARIABLESET.
      WHERE (LEVEL not = 'INTERVAL') or (ROLE='FREQ');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

NOTE: %INCLUDE (level 1) file _MAC is file WORK.MACROS.VARIABLES.SOURCE.
20933     +%macro _vars;
20934     +AcceptedCmp1 AcceptedCmp2 AcceptedCmp3 AcceptedCmp4 AcceptedCmp5 Complain
20935     +DepVar Education Element4 Group Marital_Status
20936     +%mend _vars;
NOTE: %INCLUDE (level 1) ending.
MPRINT(CLASS_PROFILE):   filename _mac;
NOTE: Fileref _MAC has been deassigned.
MPRINT(CLASS_PROFILE):   proc dmdb data=EMWS8.FIMPORT_train nonorm classout=_tempclass(rename=(NAME=VARIABLE LEVEL=VALUE FREQUENCY=COUNT FREQPERCENT=PERCENT));
MPRINT(CLASS_PROFILE):   class
MPRINT(_VARS):   AcceptedCmp1 AcceptedCmp2 AcceptedCmp3 AcceptedCmp4 AcceptedCmp5 Complain DepVar Education Element4 Group Marital_Status
MPRINT(CLASS_PROFILE):   ;
MPRINT(CLASS_PROFILE):   run;

NOTE: Records processed = 3500   Memory used = 511K.
NOTE: View EMWS8.FIMPORT_TRAIN.VIEW used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      
NOTE: There were 3500 observations read from the data set EMWS8.FIMPORT_DATA.
NOTE: There were 3500 observations read from the data set EMWS8.FIMPORT_TRAIN.
NOTE: The data set WORK._TEMPCLASS has 26 observations and 9 variables.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(CLASS_PROFILE):   proc sort data=_tempclass;
MPRINT(CLASS_PROFILE):   by VARIABLE;
MPRINT(CLASS_PROFILE):   run;

NOTE: There were 26 observations read from the data set WORK._TEMPCLASS.
NOTE: The data set WORK._TEMPCLASS has 26 observations and 9 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(CLASS_PROFILE):   data EMWS8.Filter2_CLASSDIST;
MPRINT(CLASS_PROFILE):   label VARIABLE = "Variable";
MPRINT(CLASS_PROFILE):   label VALUE = "Value";
MPRINT(CLASS_PROFILE):   label COUNT = "Frequency Count";
MPRINT(CLASS_PROFILE):   label PERCENT = "Percent";
MPRINT(CLASS_PROFILE):   set _tempclass;
MPRINT(CLASS_PROFILE):   format COUNT;
MPRINT(CLASS_PROFILE):   keep VARIABLE COUNT PERCENT VALUE;
MPRINT(CLASS_PROFILE):   run;

NOTE: There were 26 observations read from the data set WORK._TEMPCLASS.
NOTE: The data set EMWS8.FILTER2_CLASSDIST has 26 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(CLASS_PROFILE):   proc means data=EMWS8.Filter2_CLASSDIST noprint;
MPRINT(CLASS_PROFILE):   class VARIABLE;
MPRINT(CLASS_PROFILE):   var COUNT;
MPRINT(CLASS_PROFILE):   output out=_STAT N=NUMCAT;
MPRINT(CLASS_PROFILE):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER2_CLASSDIST.
NOTE: The data set WORK._STAT has 12 observations and 4 variables.
NOTE: PROCEDURE MEANS used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(CLASS_PROFILE):   data _STAT;
MPRINT(CLASS_PROFILE):   set _STAT;
MPRINT(CLASS_PROFILE):   where _TYPE_=1;
MPRINT(CLASS_PROFILE):   KEEP VARIABLE NUMCAT;
MPRINT(CLASS_PROFILE):   label NUMCAT = "Number of Levels";
MPRINT(CLASS_PROFILE):   format NUMCAT 8.;
MPRINT(CLASS_PROFILE):   run;

NOTE: There were 11 observations read from the data set WORK._STAT.
      WHERE _TYPE_=1;
NOTE: The data set WORK._STAT has 11 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(CLASS_PROFILE):   proc datasets lib=work nolist;
MPRINT(CLASS_PROFILE):   delete _tempclass;
MPRINT(CLASS_PROFILE):   run;

NOTE: Deleting WORK._TEMPCLASS (memtype=DATA).
MPRINT(CLASS_PROFILE):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):  ;

20937      data EMWS8.Filter2_CLASSDIST;
MPRINT(EM_DIAGRAM):    data EMWS8.Filter2_CLASSDIST;
20938      set EMWS8.Filter2_CLASSDIST;
MPRINT(EM_DIAGRAM):   set EMWS8.Filter2_CLASSDIST;
20939      length Filter $1;
MPRINT(EM_DIAGRAM):   length Filter $1;
20940      retain Filter 'N';
MPRINT(EM_DIAGRAM):   retain Filter 'N';
20941      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER2_CLASSDIST.
NOTE: The data set EMWS8.FILTER2_CLASSDIST has 26 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

20942      proc sort data=EMWS8.Filter2_CLASSDIST;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter2_CLASSDIST;
20943      by variable value;
MPRINT(EM_DIAGRAM):   by variable value;
20944      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER2_CLASSDIST.
NOTE: The data set EMWS8.FILTER2_CLASSDIST has 26 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

20945      data EMWS8.Filter2_CLASSFILTER / view=EMWS8.Filter2_CLASSFILTER;
MPRINT(EM_DIAGRAM):    data EMWS8.Filter2_CLASSFILTER / view=EMWS8.Filter2_CLASSFILTER;
20946      set EMWS8.Filter2_CLASSDIST;
MPRINT(EM_DIAGRAM):   set EMWS8.Filter2_CLASSDIST;
20947      where Filter eq 'Y';
MPRINT(EM_DIAGRAM):   where Filter eq 'Y';
20948      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: DATA STEP view saved on file EMWS8.FILTER2_CLASSFILTER.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

20949      %let EM_CODEBAR = *------------------------------------------------------------*;
20950      filename cdist catalog 'SASHELP.EMUTIL.EM_VARDIST.SOURCE';
MPRINT(EM_DIAGRAM):    filename cdist catalog 'SASHELP.EMUTIL.EM_VARDIST.SOURCE';
20951      %inc cdist;
NOTE: %INCLUDE (level 1) file CDIST is file SASHELP.EMUTIL.EM_VARDIST.SOURCE.
20952     +%macro var_profile(DATA=, OUTPUT=_INTERVAL, VARS=, METADATA=, COMPUTESTAT=Y, STAT=_STAT, PCTLSTAT=_PCTLSTAT, FREQ=,
20953     +                   BINDATA=, BIN=Y, NUMBARS=8, MINMAX=N);
20954     +   %let _em_nodeid = EM;
20955     +   %if %symexist(EM_NODEID) %then %do;
20956     +       %let _em_nodeid = &em_nodeid;
20957     +   %end;
20959     +   %let msgString = %sysfunc(sasmsg(sashelp.dmine, computingsummarystats_note, NOQUOTE, &_em_nodeid));
20960     +   %put &EM_CODEBAR;
20961     +   %put * &msgString;
20962     +   %put &EM_CODEBAR;
20964     +   /* Process metadata data set */
20965     +   filename _mac catalog 'WORK.MACROS.VARIABLES.SOURCE';
20966     +   %if %sysfunc(exist(&metadata))>0 and (&metadata ne ) %then %do;
20967     +       %let FREQ=;
20968     +       %let _nobs=0;
20969     +       data _null;
20970     +          set &metadata(where=(LEVEL = 'INTERVAL' and ROLE ne 'FREQ')) end=eof;
20971     +          if eof then call symput('_nobs', put(_N_, best.));
20972     +       run;
20973     +       %if "&_nobs" ne "0" %then %do;
20974     +           data _null_;
20975     +              file _mac;
20976     +              length _VARS $80; retain _vars;
20977     +              if _n_ =1 then put '%macro _vars;';
20978     +              set &metadata end=eof;
20979     +              where LEVEL = 'INTERVAL' or ROLE='FREQ';
20980     +              if ROLE='FREQ' then call symput('FREQ', trim(NAME));
20981     +              else do;
20982     +                 if length(strip(_vars)) + length(strip(NAME)) + 1 <80  then
20983     +                    _vars = strip(_vars)!! ' ' !!strip(NAME);
20984     +                 else do;
20985     +                    put _Vars;
20986     +                    _vars = strip(NAME);
20987     +                 end;
20988     +              end;
20990     +              if eof then do;
20991     +                 put _Vars;
20992     +                 put '%mend _vars;';
20993     +              end;
20994     +           run;
20995     +       %end;
20996     +       %else %do;
20997     +           data _null_;
20998     +              file _mac;
20999     +              put '%macro _vars;';
21000     +              put '%mend _vars;';
21001     +           run;
21002     +       %end;
21003     +   %end;
21004     +   %else %do;
21005     +       data _null_;
21006     +          file _mac;
21007     +          put '%macro _vars;';
21008     +          put '%mend _vars;';
21009     +       run;
21010     +   %end;
21011     +   %inc _mac;
21012     +   filename _mac;
21014     +   %if "&VARS" eq "" and %_vars eq %then %goto doend;
21016     +   /* Check if FREQ variable is in the data set */
21017     +   %if &freq ne %then %do;
21018     +       data _null_;
21019     +          dsid = open("&data");
21020     +          if dsid>0 then do;
21021     +               if varnum(dsid, "&FREQ")<1 then
21022     +                  call symput('FREQ', '');
21023     +               dsid = close(dsid);
21024     +          end;
21025     +       run;
21026     +   %end;
21028     +   %if &bindata eq %then %do;
21029     +       %let bindata = _BOUNDS;
21030     +       proc datasets lib=work nolist mt=(DATA VIEW);
21031     +          delete _BOUNDS;
21032     +       run;
21033     +   %end;
21035     +   %global _EM_VARDISTOBS_MAX;
21036     +   %let _EM_VARDISTOBS_MAX = 1000000;
21038     +   %if %symexist(EM_VARDISTOBS_MAX) %then %do;
21039     +       %let _EM_VARDISTOBS_MAX= %eval(&EM_VARDISTOBS_MAX);
21040     +   %end;
21042     +   %if &computeStat = Y %then %do;
21043     +       proc dmdb data=&DATA(obs=&_EM_VARDISTOBS_MAX) varout=&STAT(rename=(NAME=VARIABLE));
21044     +          var %_Vars &vars;
21045     +          %if &FREQ ne %then %do;
21046     +              freq &FREQ;
21047     +          %end;
21048     +       run;
21049     +       proc sort data=&stat;
21050     +          by VARIABLE;
21051     +       run;
21053     +       %if ^%sysfunc(indexc(&STAT, .)) %then %do;
21054     +           %let _library = WORK;
21055     +           %let _member  = &STAT;
21056     +      %end;
21057     +      %else %do;
21058     +          %let _library = %scan(&STAT, 1, .);
21059     +          %let _member  = %scan(&STAT, 2, .);
21060     +      %end;
21062     +      proc datasets library=&_library nolist;
21063     +         modify &_member;
21064     +         label NMISS    = "%sysfunc(sasmsg(sashelp.dmine, rpt_missing_vlabel, NOQUOTE))";
21065     +         label MIN      = "%sysfunc(sasmsg(sashelp.dmine, rpt_minimum_vlabel, NOQUOTE))";
21066     +         label MAX      = "%sysfunc(sasmsg(sashelp.dmine, rpt_maximum_vlabel, NOQUOTE))";
21067     +         label MEAN     = "%sysfunc(sasmsg(sashelp.dmine, rpt_mean_vlabel,    NOQUOTE))";
21068     +         label STD      = "%sysfunc(sasmsg(sashelp.dmine, rpt_std_vlabel,     NOQUOTE))";
21069     +         label SKEWNESS = "%sysfunc(sasmsg(sashelp.dmine, rpt_skewness_vlabel, NOQUOTE))";
21070     +         label KURTOSIS = "%sysfunc(sasmsg(sashelp.dmine, rpt_kurtosis_vlabel, NOQUOTE))";
21071     +      run;
21072     +      quit;
21073     +   %end;
21075     +   %if &BIN ne N %then %do;
21076     +       %if %sysfunc(exist(&bindata))<1 %then %do;
21077     +           %let msgString = %sysfunc(sasmsg(sashelp.dmine, computingmidpoints_note, NOQUOTE, &_em_nodeid));
21078     +           %put &EM_CODEBAR;
21079     +           %put * &msgString;
21080     +           %put &EM_CODEBAR;
21081     +           filename fref catalog 'work.em.profileformat.source';
21083     +            %let _maxlevel = %eval(&numbars + 1);
21084     +            proc dmdb data=&data(obs=&_EM_VARDISTOBS_MAX) classout=_CLASSOUT maxlevel=&_maxlevel;
21085     +               class %_vars &vars;
21086     +            run;
21087     +            proc freq data=_CLASSOUT ORDER=DATA noprint;
21088     +               table NAME / OUT = _COUNT(where=(COUNT<&_maxlevel));
21089     +            run;
21090     +           proc sort data=_COUNT(keep=NAME COUNT rename=(COUNT=_NUMCLASSBINS_));
21091     +              by NAME;
21092     +           run;
21093     +           proc sort data=_CLASSOUT;
21094     +              by NAME;
21095     +          run;
21096     +          proc transpose data=_CLASSOUT out=_DISCRETEMID(DROP=_NAME_ RENAME=(NAME=VARIABLE)) prefix=_MIDPOINT;
21097     +             var NRAW;
21098     +             by NAME;
21099     +          run;
21100     +          proc delete data=WORK._CLASSOUT;
21101     +          run;
21102     +          data _null_;
21103     +             dsid = open('_DISCRETEMID');
21104     +             if dsid then do;
21105     +                call symput('NUMCLASSBARS', left(trim(put(attrn(dsid, 'NVARS')-1, best12.))));
21106     +                dsid = close(dsid);
21107     +             end;
21108     +          run;
21109     +          data _DISCRETEMID;
21110     +             merge _DISCRETEMID _COUNT(in=_b rename=(NAME=VARIABLE));
21111     +             keep VARIABLE _MIDPOINT1--_MIDPOINT&numclassbars _NUMCLASSBINS_;
21112     +             by VARIABLE;
21113     +             if _b then output;
21114     +          run;
21116     +          data _EMVARDIST / view=_EMVARDIST;
21117     +             set &DATA(keep=%_VARS &vars &FREQ  obs=&_EM_VARDISTOBS_MAX);
21118     +          run;
21119     +          proc stdize data=_EMVARDIST outstat=&pctlstat  out=_null_ pctlpts=(0 5 25 50 75 95 100);
21120     +             var %_vars &vars;
21121     +             %if &FREQ ne %then %do;
21122     +                 freq &FREQ / notrunc;
21123     +             %end;
21124     +          run;
21125     +          proc datasets lib=WORK NOLIST;
21126     +             delete _EMVARDIST / mt=view;
21127     +          run;
21128     +          quit;
21129     +          %if %upcase(&minmax) = Y %then %do;
21130     +              proc transpose data=&pctlstat out=_MINMAXDATA(rename=(_NAME_=VARIABLE COL1=MIN COL2=MAX));
21131     +                 where  _type_ in('P0', 'P100');
21132     +              run;
21133     +              data _MINMAXDATA(keep=Variable Value Pos);
21134     +                 set _MINMAXDATA;
21135     +                 label VARIABLE  = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel, NOQUOTE))";
21136     +                 Value = min; Pos=1; output;
21137     +                 Value = max; Pos=3; output;
21138     +              run;
21139     +          %end;
21140     +          proc transpose data=&pctlstat out=&bindata(rename=(_NAME_=VARIABLE COL1=MIN COL2=P5
21141     +                                                             COL3=P95 COL4=MAX));
21142     +             where  _type_ in('P0', 'P5', 'P95', 'P100');
21143     +          run;
21144     +          proc sort data=&bindata;
21145     +             by VARIABLE;
21146     +          run;
21148     +          %let new_numbars=%eval(&NUMBARS+12);
21149     +          data &bindata;
21150     +             set &bindata;
21151     +             length Format $12;
21152     +             array _midpoint{&new_NUMBARS};
21153     +             array _bounds{&new_NUMBARS};
21154     +             if (max - min)>1e-10 then do;
21155     +                step = abs(P95-P5)/&NUMBARS;
21156     +                lstep = abs(p5- min)/5;
21157     +                ustep = abs(max-p95)/5;
21158     +                /* No outlying values */;
21159     +                if lstep<=step and ustep<=step then do;
21160     +                   step = abs(MIN-MAX)/&NUMBARS;
21161     +                   START=MIN;
21162     +                   do i=1 to &numbars;
21163     +                      _bounds(i)   = MIN + i*step;      if abs(_bounds{i})< 1e-10 then _bounds(i)= 0;
21164     +                      _midpoint(i) = MIN+ (i-0.5)*step; if abs(_midpoint{i})< 1e-10 then _midpoint(i)= 0;
21165     +                   end;
21166     +                   %let new_numbars = &numbars;
21167     +                end;
21168     +                else do;
21169     +                   if lstep<=step then do;
21170     +                      step = abs(MIN-P95)/&NUMBARS;
21171     +                      /* Start Histogram at MIN value */
21172     +                      do i=1 to &NUMBARS;
21173     +                         _bounds(i)   = MIN + i*step;       if abs(_bounds{i})< 1e-10 then _bounds(i)= 0;
21174     +                         _midpoint(i) = MIN+ (i-0.5)*step;  if abs(_midpoint{i})< 1e-10 then _midpoint(i)= 0;
21175     +                      end;
21176     +                      /* Make BINS with upper outliers width */
21177     +                      do i=1 to 5;
21178     +                         numbars = &numbars + i;
21179     +                         _bounds(numbars)   = P95 + i*ustep;  if abs(_bounds{numbars})< 1e-10 then _bounds(numbars)= 0;
21180     +                         _midpoint(numbars) = P95 + (i-0.5)*ustep + abs(ustep-step)/2;  if abs(_bounds{numbars})< 1e-10 then _bounds(numbars)= 0;
21181     +                      end;
21182     +                       %let new_numbars = %eval(&numbars+5);
21183     +                   end;
21184     +                   else do;
21185     +                      /* Make BINS with lower outliers width */
21186     +                      do i=1 to 5;
21187     +                         _bounds(i)   = P5 - (5-i)*lstep; if abs(_bounds{i})< 1e-10 then _bounds(i)= 0;
21188     +                         _midpoint(i) = P5 - (5 - i + 0.5)*lstep - abs(lstep-step)/2; if abs(_midpoint{i})< 1e-10 then _midpoint(i)= 0;
21189     +                      end;
21190     +                      if ustep<= step then do;
21191     +                         step = abs(P5-MAX)/&NUMBARS;
21192     +                         /* End Histogram at MAX value */
21193     +                         do i=1 to &NUMBARS;
21194     +                            numbars = i+5;
21195     +                            _bounds(numbars)   = P5 + i*step; if abs(_bounds{numbars})< 1e-10 then _bounds(numbars)= 0;
21196     +                            _midpoint(numbars) = P5 + (i-0.5)*step; if abs(_midpoint{numbars})< 1e-10 then _midpoint(numbars)= 0;
21197     +                         end;
21198     +                          %let new_numbars = %eval(&numbars+5);
21199     +                      end;
21200     +                      else do;
21201     +                         do i=1 to &NUMBARS;
21202     +                            numbars = i+5;
21203     +                            _bounds(numbars)  = P5 + i*step; if abs(_bounds{numbars})< 1e-10 then _bounds(numbars)= 0;
21204     +                            _midpoint(numbars) = P5 + (i-0.5)*step; if abs(_midpoint{numbars})< 1e-10 then _midpoint(numbars)= 0;
21205     +                         end;
21206     +                         /* Make BINS with upper outliers width */
21207     +                         do i=1 to 5;
21208     +                            numbars = &numbars+5+i;
21209     +                            _bounds(numbars)   = P95 + i*ustep; if abs(_bounds{numbars})< 1e-10 then _bounds(numbars)= 0;
21210     +                            _midpoint(numbars) = P95 + (i-0.5)*ustep + abs(ustep-step)/2;if abs(_midpoint{numbars})< 1e-10 then _midpoint(numbars)= 0;
21211     +                         end;
21212     +                         %let new_numbars = %eval(&numbars+10);
21213     +                      end;
21214     +                   end;
21215     +                end;
21216     +             end;
21217     +             else do;
21218     +                _bounds(1)   = MIN;
21219     +                _midpoint(1) = MIN;
21220     +             end;
21221     +             Format = 'F'!!trim(left(put(_n_,6.)))!!'_';
21222     +          run;
21223     +          %if %sysfunc(exist(_DISCRETEMID)) %then %do;
21224     +              data &bindata;
21225     +                 merge &bindata _DISCRETEMID(in = _b);
21226     +                 by VARIABLE;
21227     +                 if _b then _DISCRETE=1;
21228     +                 else _DISCRETE=0;
21229     +              run;
21230     +          %end;
21232     +          data _null_;
21233     +             file fref;
21234     +             set &bindata end=eof;
21235     +             array _bounds{&NEW_NUMBARS};
21236     +             array _midpoint{&NEW_NUMBARS};
21237     +             if _n_=1 then
21238     +                put 'proc format;';
21240     +             put 'value ' Format;
21241     +             if _DISCRETE then do;
21242     +                 do i=1 to &numbars;
21243     +                    _MID = _midpoint{i};
21244     +                    if _MID ne . and i<= _NUMCLASSBINS_ then
21245     +                       put _MID '="' _MID '"';
21246     +                 end;
21247     +                 put ';';
21248     +             end;
21249     +             else do;
21250     +                if min eq max then do;
21251     +                   put 'low - high ="' MIN '";';
21252     +                end;
21253     +                else do;
21254     +                   _LB  = MIN;
21255     +                   _MID = _midpoint{1};
21256     +                   _UB  = _bounds{1};
21257     +                   put 'LOW -' _UB '="' _MID '"';
21259     +                   do i=1 to &NEW_NUMBARS-1;
21260     +                      _LB  = _bounds{i};
21261     +                      j=i+1;
21262     +                      _MID = _midpoint{j};
21263     +                      _UB  = _bounds{j};
21264     +                      if (_UB ne .) and (_LB ne _UB) then do;
21265     +                         if _UB>=MAX then
21266     +                            put _LB '-HIGH="' _MID '"';
21267     +                         else
21268     +                            put _LB '-' _UB '="' _MID '"';
21269     +                      end;
21270     +                   end;
21271     +                end;
21272     +             end;
21273     +             put ';';
21274     +             if eof then put 'run;';
21275     +          run;
21277     +          %inc fref;
21279     +          filename fref;
21280     +      %end;
21282     +      data _binneddata / view=_binneddata;
21283     +         set &DATA(obs=&_EM_VARDISTOBS_MAX);
21285     +         %let dsid    =%sysfunc(open(&bindata));
21286     +         %let namenum = %sysfunc(varnum(&dsid, VARIABLE));
21287     +         %let fmtnum  = %sysfunc(varnum(&dsid, FORMAT));
21288     +         %let obs = %sysfunc(fetch(&dsid));
21290     +         %if (&obs=0) %then %do;
21291     +             format
21292     +         %end;
21294     +         %let _count = 0;
21295     +         %do %while(&obs=0);
21296     +             %let _count = %eval(&_count +1);
21297     +             %let _name = %sysfunc(getvarc(&dsid, &namenum));
21298     +             %let _fmtname = %sysfunc(getvarc(&dsid, &fmtnum));
21299     +             %do;
21300     +                &_name &_fmtname..
21301     +             %end;
21302     +             %let obs = %sysfunc(fetch(&dsid));
21303     +         %end;
21304     +         %let dsid=%sysfunc(close(&dsid));
21305     +         ;
21306     +      run;
21307     +   %end;
21309     +    %if &bin ne N %then %do;
21310     +        proc dmdb data=_binneddata(obs=&_EM_VARDISTOBS_MAX) classout=_temptab(rename=(NAME=VARIABLE FREQUENCY=COUNT FREQPERCENT=PERCENT));
21311     +    %end;
21312     +    %else %do;
21313     +        proc dmdb data = &data(obs=&_EM_VARDISTOBS_MAX) classout=_temptab(rename=(NAME=VARIABLE FREQUENCY=COUNT FREQPERCENT=PERCENT));
21314     +    %end;
21315     +      class %_vars &vars;
21316     +      %if &FREQ ne %then %do;
21317     +          freq &FREQ;
21318     +      %end;
21319     +   run;
21320     +   data &output;
21321     +      label VALUE        = "%sysfunc(sasmsg(sashelp.dmine, rpt_value_vlabel,    NOQUOTE))";
21322     +      label VARIABLE     = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel, NOQUOTE))";
21323     +      label COUNT        = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel,    NOQUOTE))";
21324     +      label PERCENT      = "%sysfunc(sasmsg(sashelp.dmine, rpt_percent_vlabel,  NOQUOTE))";
21325     +      set _temptab;
21326     +      format VALUE 12.3 count;
21327     +      value = inputn(level, 'best12.');
21328     +      keep VARIABLE COUNT PERCENT VALUE;
21329     +   run;
21330     +   %if &BIN ne N and %sysfunc(exist(_MINMAXDATA)) and &minmax=Y %then %do;
21331     +       data &output;
21332     +          set &output(in=_a) _MINMAXDATA;
21333     +          if _a then Pos=2;
21334     +       run;
21335     +       proc sort data=&output out=&output(drop=pos);
21336     +          by VARIABLE POS VALUE;
21337     +          where VALUE ne .;
21338     +       run;
21339     +   %end;
21340     +   proc datasets lib=work nolist mt=(DATA VIEW);
21341     +      delete _TEMPTAB _BINNEDDATA _MINMAXDATA;
21342     +   run;
21343     +   quit;
21345     +   %doend:
21346     +%mend var_profile;
NOTE: %INCLUDE (level 1) ending.
21347      filename cdist;
MPRINT(EM_DIAGRAM):   filename cdist;
NOTE: Fileref CDIST has been deassigned.
21348      %var_profile(DATA=EMWS8.FIMPORT_train, OUTPUT=EMWS8.Filter2_VARDIST, METADATA=EMWS8.Filter2_VariableSet, COMPUTESTAT=N, FREQ=, BIN=Y, NUMBARS= 16, minmax=Y);
*------------------------------------------------------------*
* Filter2: Computing Summary Statistics
*------------------------------------------------------------*
MPRINT(VAR_PROFILE):   filename _mac catalog 'WORK.MACROS.VARIABLES.SOURCE';
MPRINT(VAR_PROFILE):   data _null;
MPRINT(VAR_PROFILE):   set EMWS8.Filter2_VariableSet(where=(LEVEL = 'INTERVAL' and ROLE ne 'FREQ')) end=eof;
MPRINT(VAR_PROFILE):   if eof then call symput('_nobs', put(_N_, best.));
MPRINT(VAR_PROFILE):   run;

NOTE: There were 22 observations read from the data set EMWS8.FILTER2_VARIABLESET.
      WHERE (LEVEL='INTERVAL') and (ROLE not = 'FREQ');
NOTE: The data set WORK._NULL has 22 observations and 26 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VAR_PROFILE):   data _null_;
MPRINT(VAR_PROFILE):   file _mac;
MPRINT(VAR_PROFILE):   length _VARS $80;
MPRINT(VAR_PROFILE):   retain _vars;
MPRINT(VAR_PROFILE):   if _n_ =1 then put '%macro _vars;';
MPRINT(VAR_PROFILE):   set EMWS8.Filter2_VariableSet end=eof;
MPRINT(VAR_PROFILE):   where LEVEL = 'INTERVAL' or ROLE='FREQ';
MPRINT(VAR_PROFILE):   if ROLE='FREQ' then call symput('FREQ', trim(NAME));
MPRINT(VAR_PROFILE):   else do;
MPRINT(VAR_PROFILE):   if length(strip(_vars)) + length(strip(NAME)) + 1 <80 then _vars = strip(_vars)!! ' ' !!strip(NAME);
MPRINT(VAR_PROFILE):   else do;
MPRINT(VAR_PROFILE):   put _Vars;
MPRINT(VAR_PROFILE):   _vars = strip(NAME);
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   if eof then do;
MPRINT(VAR_PROFILE):   put _Vars;
MPRINT(VAR_PROFILE):   put '%mend _vars;';
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   run;

NOTE: The file _MAC is:
      Catalog Name=WORK.MACROS.VARIABLES.SOURCE,
      Catalog Page Size=4096,
      Number of Catalog Pages=5,
      Created=Montag, 11. April 2016 16.42 Uhr,
      Last Modified=Montag, 11. April 2016 16.42 Uhr,
      Filename=C:\Users\LUKASF~1\AppData\Local\Temp\SAS Temporary Files\_TD12952_WN7LF-LEAVE_\Prc2\macros.sas7bcat,
      Release Created=9.0301M2,Host Created=X64_7PRO

NOTE: 6 records were written to the file _MAC.
      The minimum record length was 12.
      The maximum record length was 79.
NOTE: There were 22 observations read from the data set EMWS8.FILTER2_VARIABLESET.
      WHERE (LEVEL='INTERVAL') or (ROLE='FREQ');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

NOTE: %INCLUDE (level 1) file _MAC is file WORK.MACROS.VARIABLES.SOURCE.
21349     +%macro _vars;
21350     +Dt_Customer Element1 Element2 Element3 Income Kidhome MntFishProducts MntFruits
21351     +MntGoldProds MntMeatProducts MntSweetProducts MntWines NumCatalogPurchases
21352     +NumDealsPurchases NumStorePurchases NumWebPurchases NumWebVisitsMonth Recency
21353     +Teenhome Year_Birth Z_CostContact Z_Revenue
21354     +%mend _vars;
NOTE: %INCLUDE (level 1) ending.
MPRINT(VAR_PROFILE):   filename _mac;
NOTE: Fileref _MAC has been deassigned.
MPRINT(VAR_PROFILE):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(VAR_PROFILE):   delete _BOUNDS;
MPRINT(VAR_PROFILE):   run;

NOTE: The file WORK._BOUNDS (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
*------------------------------------------------------------*
* computingmidpoints_note
*------------------------------------------------------------*
MPRINT(VAR_PROFILE):   filename fref catalog 'work.em.profileformat.source';

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VAR_PROFILE):   proc dmdb data=EMWS8.FIMPORT_train(obs=1000000) classout=_CLASSOUT maxlevel=17;
MPRINT(VAR_PROFILE):   class
MPRINT(_VARS):   Dt_Customer Element1 Element2 Element3 Income Kidhome MntFishProducts MntFruits MntGoldProds MntMeatProducts MntSweetProducts MntWines NumCatalogPurchases NumDealsPurchases NumStorePurchases NumWebPurchases NumWebVisitsMonth Recency 
Teenhome Year_Birth Z_CostContact Z_Revenue
MPRINT(VAR_PROFILE):   ;
MPRINT(VAR_PROFILE):   run;

NOTE: Records processed = 3500   Memory used = 511K.
NOTE: View EMWS8.FIMPORT_TRAIN.VIEW used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      
NOTE: There were 3500 observations read from the data set EMWS8.FIMPORT_DATA.
NOTE: There were 3500 observations read from the data set EMWS8.FIMPORT_TRAIN.
NOTE: The data set WORK._CLASSOUT has 251 observations and 9 variables.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
      

MPRINT(VAR_PROFILE):   proc freq data=_CLASSOUT ORDER=DATA noprint;
MPRINT(VAR_PROFILE):   table NAME / OUT = _COUNT(where=(COUNT<17));
MPRINT(VAR_PROFILE):   run;

NOTE: There were 251 observations read from the data set WORK._CLASSOUT.
NOTE: The data set WORK._COUNT has 11 observations and 3 variables.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VAR_PROFILE):   proc sort data=_COUNT(keep=NAME COUNT rename=(COUNT=_NUMCLASSBINS_));
MPRINT(VAR_PROFILE):   by NAME;
MPRINT(VAR_PROFILE):   run;

NOTE: There were 11 observations read from the data set WORK._COUNT.
NOTE: The data set WORK._COUNT has 11 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VAR_PROFILE):   proc sort data=_CLASSOUT;
MPRINT(VAR_PROFILE):   by NAME;
MPRINT(VAR_PROFILE):   run;

NOTE: There were 251 observations read from the data set WORK._CLASSOUT.
NOTE: The data set WORK._CLASSOUT has 251 observations and 9 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VAR_PROFILE):   proc transpose data=_CLASSOUT out=_DISCRETEMID(DROP=_NAME_ RENAME=(NAME=VARIABLE)) prefix=_MIDPOINT;
MPRINT(VAR_PROFILE):   var NRAW;
MPRINT(VAR_PROFILE):   by NAME;
MPRINT(VAR_PROFILE):   run;

NOTE: There were 251 observations read from the data set WORK._CLASSOUT.
NOTE: The data set WORK._DISCRETEMID has 22 observations and 18 variables.
NOTE: PROCEDURE TRANSPOSE used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VAR_PROFILE):   proc delete data=WORK._CLASSOUT;
MPRINT(VAR_PROFILE):   run;

NOTE: Deleting WORK._CLASSOUT (memtype=DATA).
NOTE: PROCEDURE DELETE used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VAR_PROFILE):   data _null_;
MPRINT(VAR_PROFILE):   dsid = open('_DISCRETEMID');
MPRINT(VAR_PROFILE):   if dsid then do;
MPRINT(VAR_PROFILE):   call symput('NUMCLASSBARS', left(trim(put(attrn(dsid, 'NVARS')-1, best12.))));
MPRINT(VAR_PROFILE):   dsid = close(dsid);
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VAR_PROFILE):   data _DISCRETEMID;
MPRINT(VAR_PROFILE):   merge _DISCRETEMID _COUNT(in=_b rename=(NAME=VARIABLE));
MPRINT(VAR_PROFILE):   keep VARIABLE _MIDPOINT1--_MIDPOINT17 _NUMCLASSBINS_;
MPRINT(VAR_PROFILE):   by VARIABLE;
MPRINT(VAR_PROFILE):   if _b then output;
MPRINT(VAR_PROFILE):   run;

NOTE: There were 22 observations read from the data set WORK._DISCRETEMID.
NOTE: There were 11 observations read from the data set WORK._COUNT.
NOTE: The data set WORK._DISCRETEMID has 11 observations and 19 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VAR_PROFILE):   data _EMVARDIST / view=_EMVARDIST;
MPRINT(VAR_PROFILE):   set EMWS8.FIMPORT_train(keep
MPRINT(VAR_PROFILE):  =Dt_Customer Element1 Element2 Element3 Income Kidhome MntFishProducts MntFruits MntGoldProds MntMeatProducts MntSweetProducts MntWines NumCatalogPurchases NumDealsPurchases NumStorePurchases NumWebPurchases NumWebVisitsMonth Recency 
Teenhome Year_Birth Z_CostContact Z_Revenue obs=1000000);
MPRINT(VAR_PROFILE):   run;

NOTE: DATA STEP view saved on file WORK._EMVARDIST.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.FIMPORT_TRAIN.VIEW used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

MPRINT(VAR_PROFILE):   proc stdize data=_EMVARDIST outstat=_PCTLSTAT out=_null_ pctlpts=(0 5 25 50 75 95 100);
MPRINT(VAR_PROFILE):   var
MPRINT(_VARS):   Dt_Customer Element1 Element2 Element3 Income Kidhome MntFishProducts MntFruits MntGoldProds MntMeatProducts MntSweetProducts MntWines NumCatalogPurchases NumDealsPurchases NumStorePurchases NumWebPurchases NumWebVisitsMonth Recency 
Teenhome Year_Birth Z_CostContact Z_Revenue
MPRINT(VAR_PROFILE):   ;
MPRINT(VAR_PROFILE):   run;

WARNING: The scale estimator for variable Element1 is less than or equal to 0. Variable Element1 will not be standardized and a missing value is assigned to its scale estimator.
WARNING: The scale estimator for variable Element2 is less than or equal to 0. Variable Element2 will not be standardized and a missing value is assigned to its scale estimator.
WARNING: The scale estimator for variable Element3 is less than or equal to 0. Variable Element3 will not be standardized and a missing value is assigned to its scale estimator.
WARNING: The scale estimator for variable Z_CostContact is less than or equal to 0. Variable Z_CostContact will not be standardized and a missing value is assigned to its scale estimator.
WARNING: The scale estimator for variable Z_Revenue is less than or equal to 0. Variable Z_Revenue will not be standardized and a missing value is assigned to its scale estimator.
NOTE: There were 3500 observations read from the data set EMWS8.FIMPORT_DATA.
NOTE: View WORK._EMVARDIST.VIEW used (Total process time):
      real time           0.17 seconds
      cpu time            0.18 seconds
      
NOTE: There were 3500 observations read from the data set EMWS8.FIMPORT_TRAIN.
NOTE: There were 3500 observations read from the data set WORK._EMVARDIST.
NOTE: The data set WORK._PCTLSTAT has 15 observations and 23 variables.
NOTE: PROCEDURE STDIZE used (Total process time):
      real time           0.18 seconds
      cpu time            0.18 seconds
      

MPRINT(VAR_PROFILE):   proc datasets lib=WORK NOLIST;
MPRINT(VAR_PROFILE):   delete _EMVARDIST / mt=view;
MPRINT(VAR_PROFILE):   run;

NOTE: Deleting WORK._EMVARDIST (memtype=VIEW).
MPRINT(VAR_PROFILE):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VAR_PROFILE):   proc transpose data=_PCTLSTAT out=_MINMAXDATA(rename=(_NAME_=VARIABLE COL1=MIN COL2=MAX));
MPRINT(VAR_PROFILE):   where _type_ in('P0', 'P100');
MPRINT(VAR_PROFILE):   run;

NOTE: There were 2 observations read from the data set WORK._PCTLSTAT.
      WHERE _type_ in ('P0', 'P100');
NOTE: The data set WORK._MINMAXDATA has 22 observations and 4 variables.
NOTE: PROCEDURE TRANSPOSE used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VAR_PROFILE):   data _MINMAXDATA(keep=Variable Value Pos);
MPRINT(VAR_PROFILE):   set _MINMAXDATA;
MPRINT(VAR_PROFILE):   label VARIABLE = "Variable";
MPRINT(VAR_PROFILE):   Value = min;
MPRINT(VAR_PROFILE):   Pos=1;
MPRINT(VAR_PROFILE):   output;
MPRINT(VAR_PROFILE):   Value = max;
MPRINT(VAR_PROFILE):   Pos=3;
MPRINT(VAR_PROFILE):   output;
MPRINT(VAR_PROFILE):   run;

NOTE: There were 22 observations read from the data set WORK._MINMAXDATA.
NOTE: The data set WORK._MINMAXDATA has 44 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VAR_PROFILE):   proc transpose data=_PCTLSTAT out=_BOUNDS(rename=(_NAME_=VARIABLE COL1=MIN COL2=P5 COL3=P95 COL4=MAX));
MPRINT(VAR_PROFILE):   where _type_ in('P0', 'P5', 'P95', 'P100');
MPRINT(VAR_PROFILE):   run;

NOTE: There were 4 observations read from the data set WORK._PCTLSTAT.
      WHERE _type_ in ('P0', 'P100', 'P5', 'P95');
NOTE: The data set WORK._BOUNDS has 22 observations and 6 variables.
NOTE: PROCEDURE TRANSPOSE used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VAR_PROFILE):   proc sort data=_BOUNDS;
MPRINT(VAR_PROFILE):   by VARIABLE;
MPRINT(VAR_PROFILE):   run;

NOTE: There were 22 observations read from the data set WORK._BOUNDS.
NOTE: The data set WORK._BOUNDS has 22 observations and 6 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VAR_PROFILE):   data _BOUNDS;
MPRINT(VAR_PROFILE):   set _BOUNDS;
MPRINT(VAR_PROFILE):   length Format $12;
MPRINT(VAR_PROFILE):   array _midpoint{28};
MPRINT(VAR_PROFILE):   array _bounds{28};
MPRINT(VAR_PROFILE):   if (max - min)>1e-10 then do;
MPRINT(VAR_PROFILE):   step = abs(P95-P5)/16;
MPRINT(VAR_PROFILE):   lstep = abs(p5- min)/5;
MPRINT(VAR_PROFILE):   ustep = abs(max-p95)/5;
MPRINT(VAR_PROFILE):   ;
MPRINT(VAR_PROFILE):   if lstep<=step and ustep<=step then do;
MPRINT(VAR_PROFILE):   step = abs(MIN-MAX)/16;
MPRINT(VAR_PROFILE):   START=MIN;
MPRINT(VAR_PROFILE):   do i=1 to 16;
MPRINT(VAR_PROFILE):   _bounds(i) = MIN + i*step;
MPRINT(VAR_PROFILE):   if abs(_bounds{i})< 1e-10 then _bounds(i)= 0;
MPRINT(VAR_PROFILE):   _midpoint(i) = MIN+ (i-0.5)*step;
MPRINT(VAR_PROFILE):   if abs(_midpoint{i})< 1e-10 then _midpoint(i)= 0;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   else do;
MPRINT(VAR_PROFILE):   if lstep<=step then do;
MPRINT(VAR_PROFILE):   step = abs(MIN-P95)/16;
MPRINT(VAR_PROFILE):   do i=1 to 16;
MPRINT(VAR_PROFILE):   _bounds(i) = MIN + i*step;
MPRINT(VAR_PROFILE):   if abs(_bounds{i})< 1e-10 then _bounds(i)= 0;
MPRINT(VAR_PROFILE):   _midpoint(i) = MIN+ (i-0.5)*step;
MPRINT(VAR_PROFILE):   if abs(_midpoint{i})< 1e-10 then _midpoint(i)= 0;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   do i=1 to 5;
MPRINT(VAR_PROFILE):   numbars = 16 + i;
MPRINT(VAR_PROFILE):   _bounds(numbars) = P95 + i*ustep;
MPRINT(VAR_PROFILE):   if abs(_bounds{numbars})< 1e-10 then _bounds(numbars)= 0;
MPRINT(VAR_PROFILE):   _midpoint(numbars) = P95 + (i-0.5)*ustep + abs(ustep-step)/2;
MPRINT(VAR_PROFILE):   if abs(_bounds{numbars})< 1e-10 then _bounds(numbars)= 0;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   else do;
MPRINT(VAR_PROFILE):   do i=1 to 5;
MPRINT(VAR_PROFILE):   _bounds(i) = P5 - (5-i)*lstep;
MPRINT(VAR_PROFILE):   if abs(_bounds{i})< 1e-10 then _bounds(i)= 0;
MPRINT(VAR_PROFILE):   _midpoint(i) = P5 - (5 - i + 0.5)*lstep - abs(lstep-step)/2;
MPRINT(VAR_PROFILE):   if abs(_midpoint{i})< 1e-10 then _midpoint(i)= 0;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   if ustep<= step then do;
MPRINT(VAR_PROFILE):   step = abs(P5-MAX)/16;
MPRINT(VAR_PROFILE):   do i=1 to 16;
MPRINT(VAR_PROFILE):   numbars = i+5;
MPRINT(VAR_PROFILE):   _bounds(numbars) = P5 + i*step;
MPRINT(VAR_PROFILE):   if abs(_bounds{numbars})< 1e-10 then _bounds(numbars)= 0;
MPRINT(VAR_PROFILE):   _midpoint(numbars) = P5 + (i-0.5)*step;
MPRINT(VAR_PROFILE):   if abs(_midpoint{numbars})< 1e-10 then _midpoint(numbars)= 0;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   else do;
MPRINT(VAR_PROFILE):   do i=1 to 16;
MPRINT(VAR_PROFILE):   numbars = i+5;
MPRINT(VAR_PROFILE):   _bounds(numbars) = P5 + i*step;
MPRINT(VAR_PROFILE):   if abs(_bounds{numbars})< 1e-10 then _bounds(numbars)= 0;
MPRINT(VAR_PROFILE):   _midpoint(numbars) = P5 + (i-0.5)*step;
MPRINT(VAR_PROFILE):   if abs(_midpoint{numbars})< 1e-10 then _midpoint(numbars)= 0;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   do i=1 to 5;
MPRINT(VAR_PROFILE):   numbars = 16+5+i;
MPRINT(VAR_PROFILE):   _bounds(numbars) = P95 + i*ustep;
MPRINT(VAR_PROFILE):   if abs(_bounds{numbars})< 1e-10 then _bounds(numbars)= 0;
MPRINT(VAR_PROFILE):   _midpoint(numbars) = P95 + (i-0.5)*ustep + abs(ustep-step)/2;
MPRINT(VAR_PROFILE):  if abs(_midpoint{numbars})< 1e-10 then _midpoint(numbars)= 0;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   else do;
MPRINT(VAR_PROFILE):   _bounds(1) = MIN;
MPRINT(VAR_PROFILE):   _midpoint(1) = MIN;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   Format = 'F'!!trim(left(put(_n_,6.)))!!'_';
MPRINT(VAR_PROFILE):   run;

NOTE: There were 22 observations read from the data set WORK._BOUNDS.
NOTE: The data set WORK._BOUNDS has 22 observations and 69 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VAR_PROFILE):   data _BOUNDS;
MPRINT(VAR_PROFILE):   merge _BOUNDS _DISCRETEMID(in = _b);
MPRINT(VAR_PROFILE):   by VARIABLE;
MPRINT(VAR_PROFILE):   if _b then _DISCRETE=1;
MPRINT(VAR_PROFILE):   else _DISCRETE=0;
MPRINT(VAR_PROFILE):   run;

WARNING: Multiple lengths were specified for the BY variable VARIABLE by input data sets. This may cause unexpected results.
NOTE: There were 22 observations read from the data set WORK._BOUNDS.
NOTE: There were 11 observations read from the data set WORK._DISCRETEMID.
NOTE: The data set WORK._BOUNDS has 22 observations and 71 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VAR_PROFILE):   data _null_;
MPRINT(VAR_PROFILE):   file fref;
MPRINT(VAR_PROFILE):   set _BOUNDS end=eof;
MPRINT(VAR_PROFILE):   array _bounds{26};
MPRINT(VAR_PROFILE):   array _midpoint{26};
MPRINT(VAR_PROFILE):   if _n_=1 then put 'proc format;';
MPRINT(VAR_PROFILE):   put 'value ' Format;
MPRINT(VAR_PROFILE):   if _DISCRETE then do;
MPRINT(VAR_PROFILE):   do i=1 to 16;
MPRINT(VAR_PROFILE):   _MID = _midpoint{i};
MPRINT(VAR_PROFILE):   if _MID ne . and i<= _NUMCLASSBINS_ then put _MID '="' _MID '"';
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   put ';';
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   else do;
MPRINT(VAR_PROFILE):   if min eq max then do;
MPRINT(VAR_PROFILE):   put 'low - high ="' MIN '";';
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   else do;
MPRINT(VAR_PROFILE):   _LB = MIN;
MPRINT(VAR_PROFILE):   _MID = _midpoint{1};
MPRINT(VAR_PROFILE):   _UB = _bounds{1};
MPRINT(VAR_PROFILE):   put 'LOW -' _UB '="' _MID '"';
MPRINT(VAR_PROFILE):   do i=1 to 26-1;
MPRINT(VAR_PROFILE):   _LB = _bounds{i};
MPRINT(VAR_PROFILE):   j=i+1;
MPRINT(VAR_PROFILE):   _MID = _midpoint{j};
MPRINT(VAR_PROFILE):   _UB = _bounds{j};
MPRINT(VAR_PROFILE):   if (_UB ne .) and (_LB ne _UB) then do;
MPRINT(VAR_PROFILE):   if _UB>=MAX then put _LB '-HIGH="' _MID '"';
MPRINT(VAR_PROFILE):   else put _LB '-' _UB '="' _MID '"';
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   put ';';
MPRINT(VAR_PROFILE):   if eof then put 'run;';
MPRINT(VAR_PROFILE):   run;

NOTE: The file FREF is:
      Catalog Name=WORK.EM.PROFILEFORMAT.SOURCE,
      Catalog Page Size=4096,
      Number of Catalog Pages=4,
      Created=Montag, 11. April 2016 16.42 Uhr,
      Last Modified=Montag, 11. April 2016 16.42 Uhr,
      Filename=C:\Users\LUKASF~1\AppData\Local\Temp\SAS Temporary Files\_TD12952_WN7LF-LEAVE_\Prc2\em.sas7bcat,
      Release Created=9.0301M2,Host Created=X64_7PRO

NOTE: 337 records were written to the file FREF.
      The minimum record length was 1.
      The maximum record length was 37.
NOTE: There were 22 observations read from the data set WORK._BOUNDS.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

NOTE: %INCLUDE (level 1) file FREF is file WORK.EM.PROFILEFORMAT.SOURCE.
21355     +proc format;
MPRINT(VAR_PROFILE):   proc format;
21356     +value F1_
21357     +LOW -19247.6875 ="19225.84375 "
21358     +19247.6875 -19291.375 ="19269.53125 "
21359     +19291.375 -19335.0625 ="19313.21875 "
21360     +19335.0625 -19378.75 ="19356.90625 "
21361     +19378.75 -19422.4375 ="19400.59375 "
21362     +19422.4375 -19466.125 ="19444.28125 "
21363     +19466.125 -19509.8125 ="19487.96875 "
21364     +19509.8125 -19553.5 ="19531.65625 "
21365     +19553.5 -19597.1875 ="19575.34375 "
21366     +19597.1875 -19640.875 ="19619.03125 "
21367     +19640.875 -19684.5625 ="19662.71875 "
21368     +19684.5625 -19728.25 ="19706.40625 "
21369     +19728.25 -19771.9375 ="19750.09375 "
21370     +19771.9375 -19815.625 ="19793.78125 "
21371     +19815.625 -19859.3125 ="19837.46875 "
21372     +19859.3125 -HIGH="19881.15625 "
21373     +;
MPRINT(VAR_PROFILE):   value F1_ LOW -19247.6875 ="19225.84375 " 19247.6875 -19291.375 ="19269.53125 " 19291.375 -19335.0625 ="19313.21875 " 19335.0625 -19378.75 ="19356.90625 " 19378.75 -19422.4375 ="19400.59375 " 19422.4375 -19466.125 ="19444.28125 " 
19466.125 -19509.8125 ="19487.96875 " 19509.8125 -19553.5 ="19531.65625 " 19553.5 -19597.1875 ="19575.34375 " 19597.1875 -19640.875 ="19619.03125 " 19640.875 -19684.5625 ="19662.71875 " 19684.5625 -19728.25 ="19706.40625 " 19728.25 -19771.9375 
="19750.09375 " 19771.9375 -19815.625 ="19793.78125 " 19815.625 -19859.3125 ="19837.46875 " 19859.3125 -HIGH="19881.15625 " ;
NOTE: Format F1_ has been output.
21374     +value F2_
21375     +2015024 ="2015024 "
21376     +;
MPRINT(VAR_PROFILE):   value F2_ 2015024 ="2015024 " ;
NOTE: Format F2_ has been output.
MPRINT(VAR_PROFILE):   ;
21377     +;
21378     +value F3_
21379     +2015027 ="2015027 "
21380     +;
MPRINT(VAR_PROFILE):   value F3_ 2015027 ="2015027 " ;
NOTE: Format F3_ has been output.
MPRINT(VAR_PROFILE):   ;
21381     +;
21382     +value F4_
21383     +2015001 ="2015001 "
21384     +;
MPRINT(VAR_PROFILE):   value F4_ 2015001 ="2015001 " ;
NOTE: Format F4_ has been output.
MPRINT(VAR_PROFILE):   ;
21385     +;
21386     +value F5_
21387     +LOW -7355.5625 ="4705.78125 "
21388     +7355.5625 -12655.125 ="10005.34375 "
21389     +12655.125 -17954.6875 ="15304.90625 "
21390     +17954.6875 -23254.25 ="20604.46875 "
21391     +23254.25 -28553.8125 ="25904.03125 "
21392     +28553.8125 -33853.375 ="31203.59375 "
21393     +33853.375 -39152.9375 ="36503.15625 "
21394     +39152.9375 -44452.5 ="41802.71875 "
21395     +44452.5 -49752.0625 ="47102.28125 "
21396     +49752.0625 -55051.625 ="52401.84375 "
21397     +55051.625 -60351.1875 ="57701.40625 "
21398     +60351.1875 -65650.75 ="63000.96875 "
21399     +65650.75 -70950.3125 ="68300.53125 "
21400     +70950.3125 -76249.875 ="73600.09375 "
21401     +76249.875 -81549.4375 ="78899.65625 "
21402     +81549.4375 -86849 ="84199.21875 "
21403     +86849 -101849.2 ="99199.41875 "
21404     +101849.2 -116849.4 ="114199.61875 "
21405     +116849.4 -131849.6 ="129199.81875 "
21406     +131849.6 -146849.8 ="144200.01875 "
21407     +146849.8 -HIGH="159200.21875 "
21408     +;
MPRINT(VAR_PROFILE):   value F5_ LOW -7355.5625 ="4705.78125 " 7355.5625 -12655.125 ="10005.34375 " 12655.125 -17954.6875 ="15304.90625 " 17954.6875 -23254.25 ="20604.46875 " 23254.25 -28553.8125 ="25904.03125 " 28553.8125 -33853.375 ="31203.59375 " 
33853.375 -39152.9375 ="36503.15625 " 39152.9375 -44452.5 ="41802.71875 " 44452.5 -49752.0625 ="47102.28125 " 49752.0625 -55051.625 ="52401.84375 " 55051.625 -60351.1875 ="57701.40625 " 60351.1875 -65650.75 ="63000.96875 " 65650.75 -70950.3125 
="68300.53125 " 70950.3125 -76249.875 ="73600.09375 " 76249.875 -81549.4375 ="78899.65625 " 81549.4375 -86849 ="84199.21875 " 86849 -101849.2 ="99199.41875 " 101849.2 -116849.4 ="114199.61875 " 116849.4 -131849.6 ="129199.81875 " 131849.6 -146849.8 
="144200.01875 " 146849.8 -HIGH="159200.21875 " ;
NOTE: Format F5_ has been output.
21409     +value F6_
21410     +0 ="0 "
21411     +1 ="1 "
21412     +2 ="2 "
21413     +;
MPRINT(VAR_PROFILE):   value F6_ 0 ="0 " 1 ="1 " 2 ="2 " ;
NOTE: Format F6_ has been output.
MPRINT(VAR_PROFILE):   ;
21414     +;
21415     +value F7_
21416     +LOW -9.4375 ="4.71875 "
21417     +9.4375 -18.875 ="14.15625 "
21418     +18.875 -28.3125 ="23.59375 "
21419     +28.3125 -37.75 ="33.03125 "
21420     +37.75 -47.1875 ="42.46875 "
21421     +47.1875 -56.625 ="51.90625 "
21422     +56.625 -66.0625 ="61.34375 "
21423     +66.0625 -75.5 ="70.78125 "
21424     +75.5 -84.9375 ="80.21875 "
21425     +84.9375 -94.375 ="89.65625 "
21426     +94.375 -103.8125 ="99.09375 "
21427     +103.8125 -113.25 ="108.53125 "
21428     +113.25 -122.6875 ="117.96875 "
21429     +122.6875 -132.125 ="127.40625 "
21430     +132.125 -141.5625 ="136.84375 "
21431     +141.5625 -151 ="146.28125 "
21432     +151 -172.6 ="167.88125 "
21433     +172.6 -194.2 ="189.48125 "
21434     +194.2 -215.8 ="211.08125 "
21435     +215.8 -237.4 ="232.68125 "
21436     +237.4 -HIGH="254.28125 "
21437     +;
MPRINT(VAR_PROFILE):   value F7_ LOW -9.4375 ="4.71875 " 9.4375 -18.875 ="14.15625 " 18.875 -28.3125 ="23.59375 " 28.3125 -37.75 ="33.03125 " 37.75 -47.1875 ="42.46875 " 47.1875 -56.625 ="51.90625 " 56.625 -66.0625 ="61.34375 " 66.0625 -75.5 ="70.78125 " 
75.5 -84.9375 ="80.21875 " 84.9375 -94.375 ="89.65625 " 94.375 -103.8125 ="99.09375 " 103.8125 -113.25 ="108.53125 " 113.25 -122.6875 ="117.96875 " 122.6875 -132.125 ="127.40625 " 132.125 -141.5625 ="136.84375 " 141.5625 -151 ="146.28125 " 151 -172.6 
="167.88125 " 172.6 -194.2 ="189.48125 " 194.2 -215.8 ="211.08125 " 215.8 -237.4 ="232.68125 " 237.4 -HIGH="254.28125 " ;
NOTE: Format F7_ has been output.
21438     +value F8_
21439     +LOW -7.6875 ="3.84375 "
21440     +7.6875 -15.375 ="11.53125 "
21441     +15.375 -23.0625 ="19.21875 "
21442     +23.0625 -30.75 ="26.90625 "
21443     +30.75 -38.4375 ="34.59375 "
21444     +38.4375 -46.125 ="42.28125 "
21445     +46.125 -53.8125 ="49.96875 "
21446     +53.8125 -61.5 ="57.65625 "
21447     +61.5 -69.1875 ="65.34375 "
21448     +69.1875 -76.875 ="73.03125 "
21449     +76.875 -84.5625 ="80.71875 "
21450     +84.5625 -92.25 ="88.40625 "
21451     +92.25 -99.9375 ="96.09375 "
21452     +99.9375 -107.625 ="103.78125 "
21453     +107.625 -115.3125 ="111.46875 "
21454     +115.3125 -123 ="119.15625 "
21455     +123 -138.2 ="134.35625 "
21456     +138.2 -153.4 ="149.55625 "
21457     +153.4 -168.6 ="164.75625 "
21458     +168.6 -183.8 ="179.95625 "
21459     +183.8 -HIGH="195.15625 "
21460     +;
MPRINT(VAR_PROFILE):   value F8_ LOW -7.6875 ="3.84375 " 7.6875 -15.375 ="11.53125 " 15.375 -23.0625 ="19.21875 " 23.0625 -30.75 ="26.90625 " 30.75 -38.4375 ="34.59375 " 38.4375 -46.125 ="42.28125 " 46.125 -53.8125 ="49.96875 " 53.8125 -61.5 ="57.65625 " 
61.5 -69.1875 ="65.34375 " 69.1875 -76.875 ="73.03125 " 76.875 -84.5625 ="80.71875 " 84.5625 -92.25 ="88.40625 " 92.25 -99.9375 ="96.09375 " 99.9375 -107.625 ="103.78125 " 107.625 -115.3125 ="111.46875 " 115.3125 -123 ="119.15625 " 123 -138.2 ="134.35625 
" 138.2 -153.4 ="149.55625 " 153.4 -168.6 ="164.75625 " 168.6 -183.8 ="179.95625 " 183.8 -HIGH="195.15625 " ;
NOTE: Format F8_ has been output.
21461     +value F9_
21462     +LOW -9.5625 ="4.78125 "
21463     +9.5625 -19.125 ="14.34375 "
21464     +19.125 -28.6875 ="23.90625 "
21465     +28.6875 -38.25 ="33.46875 "
21466     +38.25 -47.8125 ="43.03125 "
21467     +47.8125 -57.375 ="52.59375 "
21468     +57.375 -66.9375 ="62.15625 "
21469     +66.9375 -76.5 ="71.71875 "
21470     +76.5 -86.0625 ="81.28125 "
21471     +86.0625 -95.625 ="90.84375 "
21472     +95.625 -105.1875 ="100.40625 "
21473     +105.1875 -114.75 ="109.96875 "
21474     +114.75 -124.3125 ="119.53125 "
21475     +124.3125 -133.875 ="129.09375 "
21476     +133.875 -143.4375 ="138.65625 "
21477     +143.4375 -153 ="148.21875 "
21478     +153 -172.2 ="167.41875 "
21479     +172.2 -191.4 ="186.61875 "
21480     +191.4 -210.6 ="205.81875 "
21481     +210.6 -229.8 ="225.01875 "
21482     +229.8 -HIGH="244.21875 "
21483     +;
MPRINT(VAR_PROFILE):   value F9_ LOW -9.5625 ="4.78125 " 9.5625 -19.125 ="14.34375 " 19.125 -28.6875 ="23.90625 " 28.6875 -38.25 ="33.46875 " 38.25 -47.8125 ="43.03125 " 47.8125 -57.375 ="52.59375 " 57.375 -66.9375 ="62.15625 " 66.9375 -76.5 ="71.71875 " 
76.5 -86.0625 ="81.28125 " 86.0625 -95.625 ="90.84375 " 95.625 -105.1875 ="100.40625 " 105.1875 -114.75 ="109.96875 " 114.75 -124.3125 ="119.53125 " 124.3125 -133.875 ="129.09375 " 133.875 -143.4375 ="138.65625 " 143.4375 -153 ="148.21875 " 153 -172.2 
="167.41875 " 172.2 -191.4 ="186.61875 " 191.4 -210.6 ="205.81875 " 210.6 -229.8 ="225.01875 " 229.8 -HIGH="244.21875 " ;
NOTE: Format F9_ has been output.
21484     +value F10_
21485     +LOW -44.4375 ="22.21875 "
21486     +44.4375 -88.875 ="66.65625 "
21487     +88.875 -133.3125 ="111.09375 "
21488     +133.3125 -177.75 ="155.53125 "
21489     +177.75 -222.1875 ="199.96875 "
21490     +222.1875 -266.625 ="244.40625 "
21491     +266.625 -311.0625 ="288.84375 "
21492     +311.0625 -355.5 ="333.28125 "
21493     +355.5 -399.9375 ="377.71875 "
21494     +399.9375 -444.375 ="422.15625 "
21495     +444.375 -488.8125 ="466.59375 "
21496     +488.8125 -533.25 ="511.03125 "
21497     +533.25 -577.6875 ="555.46875 "
21498     +577.6875 -622.125 ="599.90625 "
21499     +622.125 -666.5625 ="644.34375 "
21500     +666.5625 -711 ="688.78125 "
21501     +711 -903.6 ="881.38125 "
21502     +903.6 -1096.2 ="1073.98125 "
21503     +1096.2 -1288.8 ="1266.58125 "
21504     +1288.8 -1481.4 ="1459.18125 "
21505     +1481.4 -HIGH="1651.78125 "
21506     +;
MPRINT(VAR_PROFILE):   value F10_ LOW -44.4375 ="22.21875 " 44.4375 -88.875 ="66.65625 " 88.875 -133.3125 ="111.09375 " 133.3125 -177.75 ="155.53125 " 177.75 -222.1875 ="199.96875 " 222.1875 -266.625 ="244.40625 " 266.625 -311.0625 ="288.84375 " 311.0625 
-355.5 ="333.28125 " 355.5 -399.9375 ="377.71875 " 399.9375 -444.375 ="422.15625 " 444.375 -488.8125 ="466.59375 " 488.8125 -533.25 ="511.03125 " 533.25 -577.6875 ="555.46875 " 577.6875 -622.125 ="599.90625 " 622.125 -666.5625 ="644.34375 " 666.5625 -711 
="688.78125 " 711 -903.6 ="881.38125 " 903.6 -1096.2 ="1073.98125 " 1096.2 -1288.8 ="1266.58125 " 1288.8 -1481.4 ="1459.18125 " 1481.4 -HIGH="1651.78125 " ;
NOTE: Format F10_ has been output.
21507     +value F11_
21508     +LOW -7.625 ="3.8125 "
21509     +7.625 -15.25 ="11.4375 "
21510     +15.25 -22.875 ="19.0625 "
21511     +22.875 -30.5 ="26.6875 "
21512     +30.5 -38.125 ="34.3125 "
21513     +38.125 -45.75 ="41.9375 "
21514     +45.75 -53.375 ="49.5625 "
21515     +53.375 -61 ="57.1875 "
21516     +61 -68.625 ="64.8125 "
21517     +68.625 -76.25 ="72.4375 "
21518     +76.25 -83.875 ="80.0625 "
21519     +83.875 -91.5 ="87.6875 "
21520     +91.5 -99.125 ="95.3125 "
21521     +99.125 -106.75 ="102.9375 "
21522     +106.75 -114.375 ="110.5625 "
21523     +114.375 -122 ="118.1875 "
21524     +122 -137.4 ="133.5875 "
21525     +137.4 -152.8 ="148.9875 "
21526     +152.8 -168.2 ="164.3875 "
21527     +168.2 -183.6 ="179.7875 "
21528     +183.6 -HIGH="195.1875 "
21529     +;
MPRINT(VAR_PROFILE):   value F11_ LOW -7.625 ="3.8125 " 7.625 -15.25 ="11.4375 " 15.25 -22.875 ="19.0625 " 22.875 -30.5 ="26.6875 " 30.5 -38.125 ="34.3125 " 38.125 -45.75 ="41.9375 " 45.75 -53.375 ="49.5625 " 53.375 -61 ="57.1875 " 61 -68.625 ="64.8125 " 
68.625 -76.25 ="72.4375 " 76.25 -83.875 ="80.0625 " 83.875 -91.5 ="87.6875 " 91.5 -99.125 ="95.3125 " 99.125 -106.75 ="102.9375 " 106.75 -114.375 ="110.5625 " 114.375 -122 ="118.1875 " 122 -137.4 ="133.5875 " 137.4 -152.8 ="148.9875 " 152.8 -168.2 
="164.3875 " 168.2 -183.6 ="179.7875 " 183.6 -HIGH="195.1875 " ;
NOTE: Format F11_ has been output.
21530     +value F12_
21531     +LOW -63.09375 ="31.546875 "
21532     +63.09375 -126.1875 ="94.640625 "
21533     +126.1875 -189.28125 ="157.734375 "
21534     +189.28125 -252.375 ="220.828125 "
21535     +252.375 -315.46875 ="283.921875 "
21536     +315.46875 -378.5625 ="347.015625 "
21537     +378.5625 -441.65625 ="410.109375 "
21538     +441.65625 -504.75 ="473.203125 "
21539     +504.75 -567.84375 ="536.296875 "
21540     +567.84375 -630.9375 ="599.390625 "
21541     +630.9375 -694.03125 ="662.484375 "
21542     +694.03125 -757.125 ="725.578125 "
21543     +757.125 -820.21875 ="788.671875 "
21544     +820.21875 -883.3125 ="851.765625 "
21545     +883.3125 -946.40625 ="914.859375 "
21546     +946.40625 -1009.5 ="977.953125 "
21547     +1009.5 -1107.2 ="1075.653125 "
21548     +1107.2 -1204.9 ="1173.353125 "
21549     +1204.9 -1302.6 ="1271.053125 "
21550     +1302.6 -1400.3 ="1368.753125 "
21551     +1400.3 -HIGH="1466.453125 "
21552     +;
MPRINT(VAR_PROFILE):   value F12_ LOW -63.09375 ="31.546875 " 63.09375 -126.1875 ="94.640625 " 126.1875 -189.28125 ="157.734375 " 189.28125 -252.375 ="220.828125 " 252.375 -315.46875 ="283.921875 " 315.46875 -378.5625 ="347.015625 " 378.5625 -441.65625 
="410.109375 " 441.65625 -504.75 ="473.203125 " 504.75 -567.84375 ="536.296875 " 567.84375 -630.9375 ="599.390625 " 630.9375 -694.03125 ="662.484375 " 694.03125 -757.125 ="725.578125 " 757.125 -820.21875 ="788.671875 " 820.21875 -883.3125 ="851.765625 " 
883.3125 -946.40625 ="914.859375 " 946.40625 -1009.5 ="977.953125 " 1009.5 -1107.2 ="1075.653125 " 1107.2 -1204.9 ="1173.353125 " 1204.9 -1302.6 ="1271.053125 " 1302.6 -1400.3 ="1368.753125 " 1400.3 -HIGH="1466.453125 " ;
NOTE: Format F12_ has been output.
21553     +value F13_
21554     +0 ="0 "
21555     +1 ="1 "
21556     +2 ="2 "
21557     +3 ="3 "
21558     +4 ="4 "
21559     +5 ="5 "
21560     +6 ="6 "
21561     +7 ="7 "
21562     +8 ="8 "
21563     +9 ="9 "
21564     +10 ="10 "
21565     +11 ="11 "
21566     +28 ="28 "
21567     +29 ="29 "
21568     +;
MPRINT(VAR_PROFILE):   value F13_ 0 ="0 " 1 ="1 " 2 ="2 " 3 ="3 " 4 ="4 " 5 ="5 " 6 ="6 " 7 ="7 " 8 ="8 " 9 ="9 " 10 ="10 " 11 ="11 " 28 ="28 " 29 ="29 " ;
NOTE: Format F13_ has been output.
MPRINT(VAR_PROFILE):   ;
21569     +;
21570     +value F14_
21571     +LOW -0.375 ="0.1875 "
21572     +0.375 -0.75 ="0.5625 "
21573     +0.75 -1.125 ="0.9375 "
21574     +1.125 -1.5 ="1.3125 "
21575     +1.5 -1.875 ="1.6875 "
21576     +1.875 -2.25 ="2.0625 "
21577     +2.25 -2.625 ="2.4375 "
21578     +2.625 -3 ="2.8125 "
21579     +3 -3.375 ="3.1875 "
21580     +3.375 -3.75 ="3.5625 "
21581     +3.75 -4.125 ="3.9375 "
21582     +4.125 -4.5 ="4.3125 "
21583     +4.5 -4.875 ="4.6875 "
21584     +4.875 -5.25 ="5.0625 "
21585     +5.25 -5.625 ="5.4375 "
21586     +5.625 -6 ="5.8125 "
21587     +6 -8 ="7.8125 "
21588     +8 -10 ="9.8125 "
21589     +10 -12 ="11.8125 "
21590     +12 -14 ="13.8125 "
21591     +14 -HIGH="15.8125 "
21592     +;
MPRINT(VAR_PROFILE):   value F14_ LOW -0.375 ="0.1875 " 0.375 -0.75 ="0.5625 " 0.75 -1.125 ="0.9375 " 1.125 -1.5 ="1.3125 " 1.5 -1.875 ="1.6875 " 1.875 -2.25 ="2.0625 " 2.25 -2.625 ="2.4375 " 2.625 -3 ="2.8125 " 3 -3.375 ="3.1875 " 3.375 -3.75 ="3.5625 " 
3.75 -4.125 ="3.9375 " 4.125 -4.5 ="4.3125 " 4.5 -4.875 ="4.6875 " 4.875 -5.25 ="5.0625 " 5.25 -5.625 ="5.4375 " 5.625 -6 ="5.8125 " 6 -8 ="7.8125 " 8 -10 ="9.8125 " 10 -12 ="11.8125 " 12 -14 ="13.8125 " 14 -HIGH="15.8125 " ;
NOTE: Format F14_ has been output.
21593     +value F15_
21594     +0 ="0 "
21595     +1 ="1 "
21596     +2 ="2 "
21597     +3 ="3 "
21598     +4 ="4 "
21599     +5 ="5 "
21600     +6 ="6 "
21601     +7 ="7 "
21602     +8 ="8 "
21603     +9 ="9 "
21604     +10 ="10 "
21605     +11 ="11 "
21606     +12 ="12 "
21607     +13 ="13 "
21608     +;
MPRINT(VAR_PROFILE):   value F15_ 0 ="0 " 1 ="1 " 2 ="2 " 3 ="3 " 4 ="4 " 5 ="5 " 6 ="6 " 7 ="7 " 8 ="8 " 9 ="9 " 10 ="10 " 11 ="11 " 12 ="12 " 13 ="13 " ;
NOTE: Format F15_ has been output.
MPRINT(VAR_PROFILE):   ;
21609     +;
21610     +value F16_
21611     +0 ="0 "
21612     +1 ="1 "
21613     +2 ="2 "
21614     +3 ="3 "
21615     +4 ="4 "
21616     +5 ="5 "
21617     +6 ="6 "
21618     +7 ="7 "
21619     +8 ="8 "
21620     +9 ="9 "
21621     +10 ="10 "
21622     +11 ="11 "
21623     +;
MPRINT(VAR_PROFILE):   value F16_ 0 ="0 " 1 ="1 " 2 ="2 " 3 ="3 " 4 ="4 " 5 ="5 " 6 ="6 " 7 ="7 " 8 ="8 " 9 ="9 " 10 ="10 " 11 ="11 " ;
NOTE: Format F16_ has been output.
MPRINT(VAR_PROFILE):   ;
21624     +;
21625     +value F17_
21626     +0 ="0 "
21627     +1 ="1 "
21628     +2 ="2 "
21629     +3 ="3 "
21630     +4 ="4 "
21631     +5 ="5 "
21632     +6 ="6 "
21633     +7 ="7 "
21634     +8 ="8 "
21635     +9 ="9 "
21636     +10 ="10 "
21637     +19 ="19 "
21638     +20 ="20 "
21639     +;
MPRINT(VAR_PROFILE):   value F17_ 0 ="0 " 1 ="1 " 2 ="2 " 3 ="3 " 4 ="4 " 5 ="5 " 6 ="6 " 7 ="7 " 8 ="8 " 9 ="9 " 10 ="10 " 19 ="19 " 20 ="20 " ;
NOTE: Format F17_ has been output.
MPRINT(VAR_PROFILE):   ;
21640     +;
21641     +value F18_
21642     +LOW -6.1875 ="3.09375 "
21643     +6.1875 -12.375 ="9.28125 "
21644     +12.375 -18.5625 ="15.46875 "
21645     +18.5625 -24.75 ="21.65625 "
21646     +24.75 -30.9375 ="27.84375 "
21647     +30.9375 -37.125 ="34.03125 "
21648     +37.125 -43.3125 ="40.21875 "
21649     +43.3125 -49.5 ="46.40625 "
21650     +49.5 -55.6875 ="52.59375 "
21651     +55.6875 -61.875 ="58.78125 "
21652     +61.875 -68.0625 ="64.96875 "
21653     +68.0625 -74.25 ="71.15625 "
21654     +74.25 -80.4375 ="77.34375 "
21655     +80.4375 -86.625 ="83.53125 "
21656     +86.625 -92.8125 ="89.71875 "
21657     +92.8125 -HIGH="95.90625 "
21658     +;
MPRINT(VAR_PROFILE):   value F18_ LOW -6.1875 ="3.09375 " 6.1875 -12.375 ="9.28125 " 12.375 -18.5625 ="15.46875 " 18.5625 -24.75 ="21.65625 " 24.75 -30.9375 ="27.84375 " 30.9375 -37.125 ="34.03125 " 37.125 -43.3125 ="40.21875 " 43.3125 -49.5 ="46.40625 " 
49.5 -55.6875 ="52.59375 " 55.6875 -61.875 ="58.78125 " 61.875 -68.0625 ="64.96875 " 68.0625 -74.25 ="71.15625 " 74.25 -80.4375 ="77.34375 " 80.4375 -86.625 ="83.53125 " 86.625 -92.8125 ="89.71875 " 92.8125 -HIGH="95.90625 " ;
NOTE: Format F18_ has been output.
21659     +value F19_
21660     +0 ="0 "
21661     +1 ="1 "
21662     +2 ="2 "
21663     +;
MPRINT(VAR_PROFILE):   value F19_ 0 ="0 " 1 ="1 " 2 ="2 " ;
NOTE: Format F19_ has been output.
MPRINT(VAR_PROFILE):   ;
21664     +;
21665     +value F20_
21666     +LOW -1943.5 ="1941.75 "
21667     +1943.5 -1947 ="1945.25 "
21668     +1947 -1950.5 ="1948.75 "
21669     +1950.5 -1954 ="1952.25 "
21670     +1954 -1957.5 ="1955.75 "
21671     +1957.5 -1961 ="1959.25 "
21672     +1961 -1964.5 ="1962.75 "
21673     +1964.5 -1968 ="1966.25 "
21674     +1968 -1971.5 ="1969.75 "
21675     +1971.5 -1975 ="1973.25 "
21676     +1975 -1978.5 ="1976.75 "
21677     +1978.5 -1982 ="1980.25 "
21678     +1982 -1985.5 ="1983.75 "
21679     +1985.5 -1989 ="1987.25 "
21680     +1989 -1992.5 ="1990.75 "
21681     +1992.5 -HIGH="1994.25 "
21682     +;
MPRINT(VAR_PROFILE):   value F20_ LOW -1943.5 ="1941.75 " 1943.5 -1947 ="1945.25 " 1947 -1950.5 ="1948.75 " 1950.5 -1954 ="1952.25 " 1954 -1957.5 ="1955.75 " 1957.5 -1961 ="1959.25 " 1961 -1964.5 ="1962.75 " 1964.5 -1968 ="1966.25 " 1968 -1971.5 ="1969.75 
" 1971.5 -1975 ="1973.25 " 1975 -1978.5 ="1976.75 " 1978.5 -1982 ="1980.25 " 1982 -1985.5 ="1983.75 " 1985.5 -1989 ="1987.25 " 1989 -1992.5 ="1990.75 " 1992.5 -HIGH="1994.25 " ;
NOTE: Format F20_ has been output.
21683     +value F21_
21684     +3 ="3 "
21685     +;
MPRINT(VAR_PROFILE):   value F21_ 3 ="3 " ;
NOTE: Format F21_ has been output.
MPRINT(VAR_PROFILE):   ;
21686     +;
21687     +value F22_
21688     +11 ="11 "
21689     +;
MPRINT(VAR_PROFILE):   value F22_ 11 ="11 " ;
NOTE: Format F22_ has been output.
MPRINT(VAR_PROFILE):   ;
MPRINT(VAR_PROFILE):   run;
21690     +;
21691     +run;

NOTE: PROCEDURE FORMAT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

NOTE: %INCLUDE (level 1) ending.
MPRINT(VAR_PROFILE):   filename fref;
NOTE: Fileref FREF has been deassigned.
MPRINT(VAR_PROFILE):   data _binneddata / view=_binneddata;
MPRINT(VAR_PROFILE):   set EMWS8.FIMPORT_train(obs=1000000);
MPRINT(VAR_PROFILE):   format Dt_Customer F1_. Element1 F2_. Element2 F3_. Element3 F4_. Income F5_. Kidhome F6_. MntFishProducts F7_. MntFruits F8_. MntGoldProds F9_. MntMeatProducts F10_. MntSweetProducts F11_. MntWines F12_. NumCatalogPurchases F13_. 
NumDealsPurchases F14_. NumStorePurchases F15_. NumWebPurchases F16_. NumWebVisitsMonth F17_. Recency F18_. Teenhome F19_. Year_Birth F20_. Z_CostContact F21_. Z_Revenue F22_. ;
MPRINT(VAR_PROFILE):   run;

NOTE: DATA STEP view saved on file WORK._BINNEDDATA.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.FIMPORT_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(VAR_PROFILE):   proc dmdb data=_binneddata(obs=1000000) classout=_temptab(rename=(NAME=VARIABLE FREQUENCY=COUNT FREQPERCENT=PERCENT));
MPRINT(VAR_PROFILE):   class
MPRINT(_VARS):   Dt_Customer Element1 Element2 Element3 Income Kidhome MntFishProducts MntFruits MntGoldProds MntMeatProducts MntSweetProducts MntWines NumCatalogPurchases NumDealsPurchases NumStorePurchases NumWebPurchases NumWebVisitsMonth Recency 
Teenhome Year_Birth Z_CostContact Z_Revenue
MPRINT(VAR_PROFILE):   ;
MPRINT(VAR_PROFILE):   run;

NOTE: Records processed = 3500   Memory used = 511K.
NOTE: There were 3500 observations read from the data set EMWS8.FIMPORT_DATA.
NOTE: View WORK._BINNEDDATA.VIEW used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
      
NOTE: There were 3500 observations read from the data set EMWS8.FIMPORT_TRAIN.
NOTE: There were 3500 observations read from the data set WORK._BINNEDDATA.
NOTE: The data set WORK._TEMPTAB has 267 observations and 9 variables.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
      

MPRINT(VAR_PROFILE):   data EMWS8.Filter2_VARDIST;
MPRINT(VAR_PROFILE):   label VALUE = "Value";
MPRINT(VAR_PROFILE):   label VARIABLE = "Variable";
MPRINT(VAR_PROFILE):   label COUNT = "Frequency Count";
MPRINT(VAR_PROFILE):   label PERCENT = "Percent";
MPRINT(VAR_PROFILE):   set _temptab;
MPRINT(VAR_PROFILE):   format VALUE 12.3 count;
MPRINT(VAR_PROFILE):   value = inputn(level, 'best12.');
MPRINT(VAR_PROFILE):   keep VARIABLE COUNT PERCENT VALUE;
MPRINT(VAR_PROFILE):   run;

NOTE: There were 267 observations read from the data set WORK._TEMPTAB.
NOTE: The data set EMWS8.FILTER2_VARDIST has 267 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VAR_PROFILE):   data EMWS8.Filter2_VARDIST;
MPRINT(VAR_PROFILE):   set EMWS8.Filter2_VARDIST(in=_a) _MINMAXDATA;
MPRINT(VAR_PROFILE):   if _a then Pos=2;
MPRINT(VAR_PROFILE):   run;

NOTE: There were 267 observations read from the data set EMWS8.FILTER2_VARDIST.
NOTE: There were 44 observations read from the data set WORK._MINMAXDATA.
NOTE: The data set EMWS8.FILTER2_VARDIST has 311 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VAR_PROFILE):   proc sort data=EMWS8.Filter2_VARDIST out=EMWS8.Filter2_VARDIST(drop=pos);
MPRINT(VAR_PROFILE):   by VARIABLE POS VALUE;
MPRINT(VAR_PROFILE):   where VALUE ne .;
MPRINT(VAR_PROFILE):   run;

NOTE: There were 311 observations read from the data set EMWS8.FILTER2_VARDIST.
      WHERE VALUE not = .;
NOTE: The data set EMWS8.FILTER2_VARDIST has 311 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VAR_PROFILE):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(VAR_PROFILE):   delete _TEMPTAB _BINNEDDATA _MINMAXDATA;
MPRINT(VAR_PROFILE):   run;

NOTE: Deleting WORK._TEMPTAB (memtype=DATA).
NOTE: Deleting WORK._BINNEDDATA (memtype=VIEW).
NOTE: Deleting WORK._MINMAXDATA (memtype=DATA).
MPRINT(VAR_PROFILE):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):  ;

MPRINT(EM_DIAGRAM):    data WORK.M1_JC1Y4;
MPRINT(EM_DIAGRAM):   retain _MAXLEVEL 25;
MPRINT(EM_DIAGRAM):   set WORK.M1_JC1Y4 end=eof;
MPRINT(EM_DIAGRAM):   if ROLE ^in('TARGET', 'INPUT', 'FREQ') and CALCMETHOD ne 'NONE' then ROLE ='INPUT';
MPRINT(EM_DIAGRAM):   drop _MAXLEVEL;
MPRINT(EM_DIAGRAM):   if MAXVALUES = . then MAXVALUES =25;
MPRINT(EM_DIAGRAM):   if MAXVALUES>_MAXLEVEL then _MAXLEVEL=MAXVALUES;
MPRINT(EM_DIAGRAM):   if eof then call symput('_MAXLEVEL', strip(put(_MAXLEVEL, best.)));
MPRINT(EM_DIAGRAM):   run;
21702      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------* ;
21703      * Filter2: DMDBClass Macro ;
MPRINT(EM_DIAGRAM):   * Filter2: DMDBClass Macro ;
21704      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
21705      %macro DMDBClass;
21706      
21707      %mend DMDBClass;
21708      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
21709      * Filter2: DMDBVar Macro ;
MPRINT(EM_DIAGRAM):   * Filter2: DMDBVar Macro ;
21710      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
21711      %macro DMDBVar;
21712          Income MntFishProducts MntFruits MntGoldProds MntMeatProducts MntSweetProducts
21713         MntWines NumCatalogPurchases NumDealsPurchases NumWebVisitsMonth
21714      %mend DMDBVar;
21715      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
21716      * Filter2: Create DMDB;
MPRINT(EM_DIAGRAM):   * Filter2: Create DMDB;
21717      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
21718      proc dmdb batch data=EMWS8.FIMPORT_train
21719      varout=WORK._EMFILTERVAR
21720      maxlevel = 26
21721      ;
MPRINT(EM_DIAGRAM):   proc dmdb batch data=EMWS8.FIMPORT_train varout=WORK._EMFILTERVAR maxlevel = 26 ;
MPRINT(EM_DIAGRAM):   var
21722      var %DMDBVar;
MPRINT(DMDBVAR):   Income MntFishProducts MntFruits MntGoldProds MntMeatProducts MntSweetProducts MntWines NumCatalogPurchases NumDealsPurchases NumWebVisitsMonth
MPRINT(EM_DIAGRAM):  ;
21723      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Records processed = 3500   Memory used = 511K.
NOTE: View EMWS8.FIMPORT_TRAIN.VIEW used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      
NOTE: There were 3500 observations read from the data set EMWS8.FIMPORT_DATA.
NOTE: There were 3500 observations read from the data set EMWS8.FIMPORT_TRAIN.
NOTE: The data set WORK._EMFILTERVAR has 10 observations and 9 variables.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.02 seconds
      cpu time            0.04 seconds
      

MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):   *--- end code ---*;
21724      quit;
21725      *--- end code ---*;

21726      data WORK.M1_JC1Y4;
MPRINT(EM_DIAGRAM):    data WORK.M1_JC1Y4;
21727      set WORK.M1_JC1Y4;
MPRINT(EM_DIAGRAM):   set WORK.M1_JC1Y4;
21728      if ROLE ^in('TARGET', 'INPUT', 'FREQ') and CALCMETHOD ne 'NONE' then ROLE ='INPUT';
MPRINT(EM_DIAGRAM):   if ROLE ^in('TARGET', 'INPUT', 'FREQ') and CALCMETHOD ne 'NONE' then ROLE ='INPUT';
21729      if LEVEL ne 'INTERVAL' and KEEPMISSING='N';
MPRINT(EM_DIAGRAM):   if LEVEL ne 'INTERVAL' and KEEPMISSING='N';
21730      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 10 observations read from the data set WORK.M1_JC1Y4.
NOTE: The data set WORK.M1_JC1Y4 has 0 observations and 26 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

21731      %let _FilterIntervalNum= 0;
21732      proc sort data=EMWS8.Filter2_INTERVAL;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS8.Filter2_INTERVAL;
21733      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
21734      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 10 observations read from the data set EMWS8.FILTER2_INTERVAL.
NOTE: The data set EMWS8.FILTER2_INTERVAL has 10 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

21735      filename _X "C:\Users\LUKASF~1\AppData\Local\Temp\SAS Temporary Files\_TD12952_WN7LF-LEAVE_\Prc2\INTERVALFILTERCODE.txt";
MPRINT(EM_DIAGRAM):   filename _X "C:\Users\LUKASF~1\AppData\Local\Temp\SAS Temporary Files\_TD12952_WN7LF-LEAVE_\Prc2\INTERVALFILTERCODE.txt";
21736      data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
21737      length string $200;
MPRINT(EM_DIAGRAM):   length string $200;
21738      set EMWS8.Filter2_INTERVAL end=eof;
MPRINT(EM_DIAGRAM):   set EMWS8.Filter2_INTERVAL end=eof;
21739      file _X;
MPRINT(EM_DIAGRAM):   file _X;
21740      where (INTERVALMIN ne . or INTERVALMAX ne . or KEEPMISSING eq 'N')
21741      ;
MPRINT(EM_DIAGRAM):   where (INTERVALMIN ne . or INTERVALMAX ne . or KEEPMISSING eq 'N') ;
21742      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
21743      if _N_ = 1 then do;
MPRINT(EM_DIAGRAM):   if _N_ = 1 then do;
21744      string = ' (';
MPRINT(EM_DIAGRAM):   string = ' (';
21745      end;
MPRINT(EM_DIAGRAM):   end;
21746      else do;
MPRINT(EM_DIAGRAM):   else do;
21747      string = ' and (';
MPRINT(EM_DIAGRAM):   string = ' and (';
21748      end;
MPRINT(EM_DIAGRAM):   end;
21749      if INTERVALMIN ne . or INTERVALMAX ne . then do;
MPRINT(EM_DIAGRAM):   if INTERVALMIN ne . or INTERVALMAX ne . then do;
21750      if KEEPMISSING = 'N' then string = trim(string)!!' '!!strip(NAME)!!' ne . and ';
MPRINT(EM_DIAGRAM):   if KEEPMISSING = 'N' then string = trim(string)!!' '!!strip(NAME)!!' ne . and ';
21751      else string = trim(string)!!' '!!strip(NAME)!!' eq . or ';
MPRINT(EM_DIAGRAM):   else string = trim(string)!!' '!!strip(NAME)!!' eq . or ';
21752      if INTERVALMIN ne . and INTERVALMAX ne . then do;
MPRINT(EM_DIAGRAM):   if INTERVALMIN ne . and INTERVALMAX ne . then do;
21753      string = trim(string)!!' ('!!strip(put(INTERVALMIN, best12.))!!'<='!!strip(NAME)!!') and ('!!strip(NAME)!!'<='!!strip(put(INTERVALMAX, best12.))!!')';
MPRINT(EM_DIAGRAM):   string = trim(string)!!' ('!!strip(put(INTERVALMIN, best12.))!!'<='!!strip(NAME)!!') and ('!!strip(NAME)!!'<='!!strip(put(INTERVALMAX, best12.))!!')';
21754      end;
MPRINT(EM_DIAGRAM):   end;
21755      else if INTERVALMIN eq . and INTERVALMAX ne . then do;
MPRINT(EM_DIAGRAM):   else if INTERVALMIN eq . and INTERVALMAX ne . then do;
21756      string = trim(string)!!' ('!!strip(NAME)!!'<='!!strip(put(INTERVALMAX, best12.))!!')';
MPRINT(EM_DIAGRAM):   string = trim(string)!!' ('!!strip(NAME)!!'<='!!strip(put(INTERVALMAX, best12.))!!')';
21757      end;
MPRINT(EM_DIAGRAM):   end;
21758      else if INTERVALMIN ne . and INTERVALMAX eq . then do;
MPRINT(EM_DIAGRAM):   else if INTERVALMIN ne . and INTERVALMAX eq . then do;
21759      string = trim(string)!!' ('!!strip(put(INTERVALMIN, best12.)) || '<=' || NAME||')';
MPRINT(EM_DIAGRAM):   string = trim(string)!!' ('!!strip(put(INTERVALMIN, best12.)) || '<=' || NAME||')';
21760      end;
MPRINT(EM_DIAGRAM):   end;
21761      end;
MPRINT(EM_DIAGRAM):   end;
21762      else do;
MPRINT(EM_DIAGRAM):   else do;
21763      string = trim(string)!!' '!!strip(name)!!' ne .';
MPRINT(EM_DIAGRAM):   string = trim(string)!!' '!!strip(name)!!' ne .';
21764      end;
MPRINT(EM_DIAGRAM):   end;
21765      string = trim(string)!!')';
MPRINT(EM_DIAGRAM):   string = trim(string)!!')';
21766      put string;
MPRINT(EM_DIAGRAM):   put string;
21767      if eof then call symput('_FilterIntervalNum', strip(put(_N_, best.)));
MPRINT(EM_DIAGRAM):   if eof then call symput('_FilterIntervalNum', strip(put(_N_, best.)));
21768      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file _X is:
      Filename=C:\Users\LUKASF~1\AppData\Local\Temp\SAS Temporary Files\_TD12952_WN7LF-LEAVE_\Prc2\INTERVALFILTERCODE.txt,
      RECFM=V,LRECL=256,File Size (bytes)=0,
      Last Modified=11. April 2016 16.42 Uhr,
      Create Time=11. April 2016 16.42 Uhr

NOTE: 10 records were written to the file _X.
      The minimum record length was 34.
      The maximum record length was 60.
NOTE: There were 10 observations read from the data set EMWS8.FILTER2_INTERVAL.
      WHERE (INTERVALMIN not = .) or (INTERVALMAX not = .) or (KEEPMISSING='N');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

21769      %let _FilterIntervalNum= 0;
21770      proc sort data=EMWS8.Filter2_INTERVAL;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS8.Filter2_INTERVAL;
21771      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
21772      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Input data set is already sorted, no sorting done.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

21773      filename _X "C:\Users\LUKASF~1\AppData\Local\Temp\SAS Temporary Files\_TD12952_WN7LF-LEAVE_\Prc2\INTERVALPUBLISHFILTERCODE.txt";
MPRINT(EM_DIAGRAM):   filename _X "C:\Users\LUKASF~1\AppData\Local\Temp\SAS Temporary Files\_TD12952_WN7LF-LEAVE_\Prc2\INTERVALPUBLISHFILTERCODE.txt";
21774      data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
21775      length string $200;
MPRINT(EM_DIAGRAM):   length string $200;
21776      set EMWS8.Filter2_INTERVAL end=eof;
MPRINT(EM_DIAGRAM):   set EMWS8.Filter2_INTERVAL end=eof;
21777      file _X;
MPRINT(EM_DIAGRAM):   file _X;
21778      where (INTERVALMIN ne . or INTERVALMAX ne . or KEEPMISSING eq 'N')
21779      and ROLE ne 'TARGET';
MPRINT(EM_DIAGRAM):   where (INTERVALMIN ne . or INTERVALMAX ne . or KEEPMISSING eq 'N') and ROLE ne 'TARGET';
21780      ;
MPRINT(EM_DIAGRAM):   ;
21781      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
21782      if _N_ = 1 then do;
MPRINT(EM_DIAGRAM):   if _N_ = 1 then do;
21783      string = ' (';
MPRINT(EM_DIAGRAM):   string = ' (';
21784      end;
MPRINT(EM_DIAGRAM):   end;
21785      else do;
MPRINT(EM_DIAGRAM):   else do;
21786      string = ' and (';
MPRINT(EM_DIAGRAM):   string = ' and (';
21787      end;
MPRINT(EM_DIAGRAM):   end;
21788      if INTERVALMIN ne . or INTERVALMAX ne . then do;
MPRINT(EM_DIAGRAM):   if INTERVALMIN ne . or INTERVALMAX ne . then do;
21789      if KEEPMISSING = 'N' then string = trim(string)!!' '!!strip(NAME)!!' ne . and ';
MPRINT(EM_DIAGRAM):   if KEEPMISSING = 'N' then string = trim(string)!!' '!!strip(NAME)!!' ne . and ';
21790      else string = trim(string)!!' '!!strip(NAME)!!' eq . or ';
MPRINT(EM_DIAGRAM):   else string = trim(string)!!' '!!strip(NAME)!!' eq . or ';
21791      if INTERVALMIN ne . and INTERVALMAX ne . then do;
MPRINT(EM_DIAGRAM):   if INTERVALMIN ne . and INTERVALMAX ne . then do;
21792      string = trim(string)!!' ('!!strip(put(INTERVALMIN, best12.))!!'<='!!strip(NAME)!!') and ('!!strip(NAME)!!'<='!!strip(put(INTERVALMAX, best12.))!!')';
MPRINT(EM_DIAGRAM):   string = trim(string)!!' ('!!strip(put(INTERVALMIN, best12.))!!'<='!!strip(NAME)!!') and ('!!strip(NAME)!!'<='!!strip(put(INTERVALMAX, best12.))!!')';
21793      end;
MPRINT(EM_DIAGRAM):   end;
21794      else if INTERVALMIN eq . and INTERVALMAX ne . then do;
MPRINT(EM_DIAGRAM):   else if INTERVALMIN eq . and INTERVALMAX ne . then do;
21795      string = trim(string)!!' ('!!strip(NAME)!!'<='!!strip(put(INTERVALMAX, best12.))!!')';
MPRINT(EM_DIAGRAM):   string = trim(string)!!' ('!!strip(NAME)!!'<='!!strip(put(INTERVALMAX, best12.))!!')';
21796      end;
MPRINT(EM_DIAGRAM):   end;
21797      else if INTERVALMIN ne . and INTERVALMAX eq . then do;
MPRINT(EM_DIAGRAM):   else if INTERVALMIN ne . and INTERVALMAX eq . then do;
21798      string = trim(string)!!' ('!!strip(put(INTERVALMIN, best12.)) || '<=' || NAME||')';
MPRINT(EM_DIAGRAM):   string = trim(string)!!' ('!!strip(put(INTERVALMIN, best12.)) || '<=' || NAME||')';
21799      end;
MPRINT(EM_DIAGRAM):   end;
21800      end;
MPRINT(EM_DIAGRAM):   end;
21801      else do;
MPRINT(EM_DIAGRAM):   else do;
21802      string = trim(string)!!' '!!strip(name)!!' ne .';
MPRINT(EM_DIAGRAM):   string = trim(string)!!' '!!strip(name)!!' ne .';
21803      end;
MPRINT(EM_DIAGRAM):   end;
21804      string = trim(string)!!')';
MPRINT(EM_DIAGRAM):   string = trim(string)!!')';
21805      put string;
MPRINT(EM_DIAGRAM):   put string;
21806      if eof then call symput('_FilterIntervalNum', strip(put(_N_, best.)));
MPRINT(EM_DIAGRAM):   if eof then call symput('_FilterIntervalNum', strip(put(_N_, best.)));
21807      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file _X is:
      Filename=C:\Users\LUKASF~1\AppData\Local\Temp\SAS Temporary Files\_TD12952_WN7LF-LEAVE_\Prc2\INTERVALPUBLISHFILTERCODE.txt,
      RECFM=V,LRECL=256,File Size (bytes)=0,
      Last Modified=11. April 2016 16.42 Uhr,
      Create Time=11. April 2016 16.42 Uhr

NOTE: 10 records were written to the file _X.
      The minimum record length was 34.
      The maximum record length was 60.
NOTE: There were 10 observations read from the data set EMWS8.FILTER2_INTERVAL.
      WHERE ((INTERVALMIN not = .) or (INTERVALMAX not = .) or (KEEPMISSING='N')) and (ROLE not = 'TARGET');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

NOTE: This SAS session is using a registry in WORK.  All changes will be lost at the end of this session.
21808      data EMWS8.Filter2_TRAIN / view=EMWS8.Filter2_TRAIN;
MPRINT(EM_DIAGRAM):    data EMWS8.Filter2_TRAIN / view=EMWS8.Filter2_TRAIN;
21809      set EMWS8.FIMPORT_train;
MPRINT(EM_DIAGRAM):   set EMWS8.FIMPORT_train;
21810      if
21811      not (
21812      ( Income eq . or (Income<=107000))
21813      and ( MntFishProducts eq . or (MntFishProducts<=200))
21814      and ( MntFruits eq . or (MntFruits<=157))
21815      and ( MntGoldProds eq . or (MntGoldProds<=196))
21816      and ( MntMeatProducts eq . or (MntMeatProducts<=964))
21817      and ( MntSweetProducts eq . or (MntSweetProducts<=143.2))
21818      and ( MntWines eq . or (MntWines<=1325))
21819      and ( NumCatalogPurchases eq . or (NumCatalogPurchases<=14))
21820      and ( NumDealsPurchases eq . or (NumDealsPurchases<=10.5))
21821      and ( NumWebVisitsMonth eq . or (NumWebVisitsMonth<=13.42))
21822      )
21823      ;
MPRINT(EM_DIAGRAM):   if not ( ( Income eq . or (Income<=107000)) and ( MntFishProducts eq . or (MntFishProducts<=200)) and ( MntFruits eq . or (MntFruits<=157)) and ( MntGoldProds eq . or (MntGoldProds<=196)) and ( MntMeatProducts eq . or 
(MntMeatProducts<=964)) and ( MntSweetProducts eq . or (MntSweetProducts<=143.2)) and ( MntWines eq . or (MntWines<=1325)) and ( NumCatalogPurchases eq . or (NumCatalogPurchases<=14)) and ( NumDealsPurchases eq . or (NumDealsPurchases<=10.5)) and ( 
NumWebVisitsMonth eq . or (NumWebVisitsMonth<=13.42)) ) ;
21824      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: DATA STEP view saved on file EMWS8.FILTER2_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.FIMPORT_TRAIN.VIEW used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

21825      data WORK.Filter2FILTERVAR;
MPRINT(EM_DIAGRAM):    data WORK.Filter2FILTERVAR;
21826      set
21827      EMWS8.Filter2_INTERVAL(where=(INTERVALMIN ne . or INTERVALMAX ne . or KEEPMISSING='N'))
21828      ;
MPRINT(EM_DIAGRAM):   set EMWS8.Filter2_INTERVAL(where=(INTERVALMIN ne . or INTERVALMAX ne . or KEEPMISSING='N')) ;
21829      keep NAME;
MPRINT(EM_DIAGRAM):   keep NAME;
21830      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 10 observations read from the data set EMWS8.FILTER2_INTERVAL.
      WHERE (INTERVALMIN not = .) or (INTERVALMAX not = .) or (KEEPMISSING='N');
NOTE: The data set WORK.FILTER2FILTERVAR has 10 observations and 1 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

21831      proc sort data= WORK.Filter2FILTERVAR nodupkey;
MPRINT(EM_DIAGRAM):   proc sort data= WORK.Filter2FILTERVAR nodupkey;
21832      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
21833      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 10 observations read from the data set WORK.FILTER2FILTERVAR.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK.FILTER2FILTERVAR has 10 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

21834      proc sort data=WORK.M018U50X;
MPRINT(EM_DIAGRAM):    proc sort data=WORK.M018U50X;
21835      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
21836      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK.M018U50X.
NOTE: The data set WORK.M018U50X has 33 observations and 26 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

21837      data WORK.Filter2DMDBC;
MPRINT(EM_DIAGRAM):   data WORK.Filter2DMDBC;
21838      merge WORK.M018U50X WORK.Filter2FILTERVAR(in=_b);
MPRINT(EM_DIAGRAM):   merge WORK.M018U50X WORK.Filter2FILTERVAR(in=_b);
21839      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
21840      if (REPORT = 'Y' or ROLE in('FREQ','TARGET') or _b) then output;
MPRINT(EM_DIAGRAM):   if (REPORT = 'Y' or ROLE in('FREQ','TARGET') or _b) then output;
21841      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK.M018U50X.
NOTE: There were 10 observations read from the data set WORK.FILTER2FILTERVAR.
NOTE: The data set WORK.FILTER2DMDBC has 11 observations and 26 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

21842      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------* ;
21843      * Filter2: DMDBClass Macro ;
MPRINT(EM_DIAGRAM):   * Filter2: DMDBClass Macro ;
21844      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
21845      %macro DMDBClass;
21846          DepVar(DESC)
21847      %mend DMDBClass;
21848      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
21849      * Filter2: DMDBVar Macro ;
MPRINT(EM_DIAGRAM):   * Filter2: DMDBVar Macro ;
21850      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
21851      %macro DMDBVar;
21852          Income MntFishProducts MntFruits MntGoldProds MntMeatProducts MntSweetProducts
21853         MntWines NumCatalogPurchases NumDealsPurchases NumWebVisitsMonth
21854      %mend DMDBVar;
21855      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
21856      * Filter2: Create DMDB;
MPRINT(EM_DIAGRAM):   * Filter2: Create DMDB;
21857      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
21858      proc dmdb batch data=EMWS8.FIMPORT_train
21859      dmdbcat=WORK.Filter2_DMDB
21860      varout=WORK.FILTER_VARSTATS
21861      maxlevel = 513
21862      ;
MPRINT(EM_DIAGRAM):   proc dmdb batch data=EMWS8.FIMPORT_train dmdbcat=WORK.Filter2_DMDB varout=WORK.FILTER_VARSTATS maxlevel = 513 ;
MPRINT(EM_DIAGRAM):   class
21863      class %DMDBClass;
MPRINT(DMDBCLASS):   DepVar(DESC)
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   var
21864      var %DMDBVar;
MPRINT(DMDBVAR):   Income MntFishProducts MntFruits MntGoldProds MntMeatProducts MntSweetProducts MntWines NumCatalogPurchases NumDealsPurchases NumWebVisitsMonth
MPRINT(EM_DIAGRAM):  ;
21865      target
21866      DepVar
21867      ;
MPRINT(EM_DIAGRAM):   target DepVar ;
21868      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Records processed = 3500   Memory used = 511K.
NOTE: View EMWS8.FIMPORT_TRAIN.VIEW used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      
NOTE: There were 3500 observations read from the data set EMWS8.FIMPORT_DATA.
NOTE: There were 3500 observations read from the data set EMWS8.FIMPORT_TRAIN.
NOTE: The data set WORK.FILTER_VARSTATS has 10 observations and 9 variables.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):   *--- end code ---*;
21869      quit;
21870      *--- end code ---*;

21871      data WORK.FILTER_VARSTATS;
MPRINT(EM_DIAGRAM):    data WORK.FILTER_VARSTATS;
21872      length DATAROLE $10 TYPE $8 NAME $32;
MPRINT(EM_DIAGRAM):   length DATAROLE $10 TYPE $8 NAME $32;
21873      label DATAROLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label DATAROLE = "Data Role";
21874      label N = "%sysfunc(sasmsg(sashelp.dmine, rpt_nonMiss_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label N = "Non Missing";
21875      label NMISS = "%sysfunc(sasmsg(sashelp.dmine, rpt_missing_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label NMISS = "Missing";
21876      label MIN = "%sysfunc(sasmsg(sashelp.dmine, rpt_minimum_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label MIN = "Minimum";
21877      label MAX = "%sysfunc(sasmsg(sashelp.dmine, rpt_maximum_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label MAX = "Maximum";
21878      label MEAN = "%sysfunc(sasmsg(sashelp.dmine, rpt_mean_vlabel,    NOQUOTE))";
MPRINT(EM_DIAGRAM):   label MEAN = "Mean";
21879      label STD = "%sysfunc(sasmsg(sashelp.dmine, rpt_std_vlabel,     NOQUOTE))";
MPRINT(EM_DIAGRAM):   label STD = "Standard Deviation";
21880      label SKEWNESS = "%sysfunc(sasmsg(sashelp.dmine, rpt_skewness_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label SKEWNESS = "Skewness";
21881      label KURTOSIS = "%sysfunc(sasmsg(sashelp.dmine, rpt_kurtosis_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label KURTOSIS = "Kurtosis";
21882      label NUMCAT = "%sysfunc(sasmsg(sashelp.dmine, rpt_numcat_vlabel,   NOQUOTE))";
MPRINT(EM_DIAGRAM):   label NUMCAT = "Number of Levels";
21883      retain DATAROLE "TRAIN" type "ORIGINAL";
MPRINT(EM_DIAGRAM):   retain DATAROLE "TRAIN" type "ORIGINAL";
21884      set WORK.FILTER_VARSTATS;
MPRINT(EM_DIAGRAM):   set WORK.FILTER_VARSTATS;
21885      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Variable NUMCAT is uninitialized.
NOTE: There were 10 observations read from the data set WORK.FILTER_VARSTATS.
NOTE: The data set WORK.FILTER_VARSTATS has 10 observations and 11 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

21886      proc append base=EMWS8.Filter2_STATS data=WORK.FILTER_VARSTATS;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Filter2_STATS data=WORK.FILTER_VARSTATS;
21887      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK.FILTER_VARSTATS to EMWS8.FILTER2_STATS.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 10 observations read from the data set WORK.FILTER_VARSTATS.
NOTE: The data set EMWS8.FILTER2_STATS has 10 observations and 11 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
