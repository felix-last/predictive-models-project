MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "19. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "17.24 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                19. April 2016
Time:                17.24 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O2KBT2EA 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural30\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O2KBT2EA new;
MPRINT(EM_DIAGRAM):   run;
411923     data work.outkey;
MPRINT(EM_DIAGRAM):    data work.outkey;
411924     set EMWS8.Neural30_OUTKEY;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural30_OUTKEY;
411925     if upcase(ROLE) = 'HIDDEN';
MPRINT(EM_DIAGRAM):   if upcase(ROLE) = 'HIDDEN';
411926     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 48 observations read from the data set EMWS8.NEURAL30_OUTKEY.
NOTE: The data set WORK.OUTKEY has 7 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

411927     filename emflow
411927   ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural30\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural30\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural30: Scoring DATA data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
411928     *------------------------------------------------------------*;
411929     * Neural30: Scoring DATA data;
411930     *------------------------------------------------------------*;
411931     data EMWS8.Neural30_TRAIN
411932     / view=EMWS8.Neural30_TRAIN
411933     ;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural30_TRAIN / view=EMWS8.Neural30_TRAIN ;
411934     set EMWS8.Meta2_TRAIN
411935     ;
MPRINT(EM_DIAGRAM):   set EMWS8.Meta2_TRAIN ;
411936     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Neural30\EMFLOWSCORE.sas.
411937    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
411938    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
411939    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
411940    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
411941    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
411942    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
411943    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
411944    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
411945    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
411946    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
411947    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
411948    +LENGTH _WARN_ $4
411949    +      F_DepVar  $ 12
411950    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
411951    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
411952    +
411953    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
411954    +
411955    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
411956    +
411957    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
411958    +
411959    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
411960    +
411961    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
411962    +
411963    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
411964    +
411965    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
411966    +
411967    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
411968    +
411969    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
411970    +
411971    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
411972    +
411973    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
411974    +
411975    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
411976    +
411977    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
411978    +
411979    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
411980    +
411981    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
411982    +
411983    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
411984    +
411985    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
411986    +
411987    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
411988    +
411989    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
411990    +
411991    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
411992    +
411993    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
411994    +
411995    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
411996    +
411997    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
411998    +
411999    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
412000    +
412001    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
412002    +
412003    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
412004    +
412005    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
412006    +
412007    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
412008    +
412009    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
412010    +
412011    +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
412012    +
412013    +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
412014    +
412015    +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
412016    +
412017    +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
412018    +
412019    +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
412020    +
412021    +      label H17 = 'Hidden: H1=7' ;
MPRINT(EM_DIAGRAM):   label H17 = 'Hidden: H1=7' ;
412022    +
412023    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
412024    +
412025    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
412026    +
412027    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
412028    +
412029    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
412030    +
412031    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
412032    +
412033    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
412034    +
412035    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
412036    +
412037    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
412038    +
412039    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
412040    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
412041    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
412042    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
412043    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
412044    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
412045    +end;
MPRINT(EM_DIAGRAM):   end;
412046    +else do;
MPRINT(EM_DIAGRAM):   else do;
412047    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
412048    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
412049    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
412050    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
412051    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
412052    +   end;
MPRINT(EM_DIAGRAM):   end;
412053    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
412054    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
412055    +   end;
MPRINT(EM_DIAGRAM):   end;
412056    +   else do;
MPRINT(EM_DIAGRAM):   else do;
412057    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
412058    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
412059    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
412060    +   end;
MPRINT(EM_DIAGRAM):   end;
412061    +end;
MPRINT(EM_DIAGRAM):   end;
412062    +
412063    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
412064    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
412065    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
412066    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
412067    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
412068    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
412069    +end;
MPRINT(EM_DIAGRAM):   end;
412070    +else do;
MPRINT(EM_DIAGRAM):   else do;
412071    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
412072    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
412073    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
412074    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
412075    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
412076    +   end;
MPRINT(EM_DIAGRAM):   end;
412077    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
412078    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
412079    +   end;
MPRINT(EM_DIAGRAM):   end;
412080    +   else do;
MPRINT(EM_DIAGRAM):   else do;
412081    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
412082    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
412083    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
412084    +   end;
MPRINT(EM_DIAGRAM):   end;
412085    +end;
MPRINT(EM_DIAGRAM):   end;
412086    +
412087    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
412088    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
412089    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
412090    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
412091    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
412092    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
412093    +end;
MPRINT(EM_DIAGRAM):   end;
412094    +else do;
MPRINT(EM_DIAGRAM):   else do;
412095    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
412096    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
412097    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
412098    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
412099    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
412100    +   end;
MPRINT(EM_DIAGRAM):   end;
412101    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
412102    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
412103    +   end;
MPRINT(EM_DIAGRAM):   end;
412104    +   else do;
MPRINT(EM_DIAGRAM):   else do;
412105    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
412106    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
412107    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
412108    +   end;
MPRINT(EM_DIAGRAM):   end;
412109    +end;
MPRINT(EM_DIAGRAM):   end;
412110    +
412111    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
412112    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
412113    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
412114    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
412115    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
412116    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
412117    +end;
MPRINT(EM_DIAGRAM):   end;
412118    +else do;
MPRINT(EM_DIAGRAM):   else do;
412119    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
412120    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
412121    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
412122    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
412123    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
412124    +   end;
MPRINT(EM_DIAGRAM):   end;
412125    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
412126    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
412127    +   end;
MPRINT(EM_DIAGRAM):   end;
412128    +   else do;
MPRINT(EM_DIAGRAM):   else do;
412129    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
412130    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
412131    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
412132    +   end;
MPRINT(EM_DIAGRAM):   end;
412133    +end;
MPRINT(EM_DIAGRAM):   end;
412134    +
412135    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
412136    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
412137    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
412138    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
412139    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
412140    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
412141    +end;
MPRINT(EM_DIAGRAM):   end;
412142    +else do;
MPRINT(EM_DIAGRAM):   else do;
412143    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
412144    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
412145    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
412146    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
412147    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
412148    +   end;
MPRINT(EM_DIAGRAM):   end;
412149    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
412150    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
412151    +   end;
MPRINT(EM_DIAGRAM):   end;
412152    +   else do;
MPRINT(EM_DIAGRAM):   else do;
412153    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
412154    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
412155    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
412156    +   end;
MPRINT(EM_DIAGRAM):   end;
412157    +end;
MPRINT(EM_DIAGRAM):   end;
412158    +
412159    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
412160    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
412161    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
412162    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
412163    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
412164    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
412165    +end;
MPRINT(EM_DIAGRAM):   end;
412166    +else do;
MPRINT(EM_DIAGRAM):   else do;
412167    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
412168    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
412169    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
412170    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
412171    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
412172    +   end;
MPRINT(EM_DIAGRAM):   end;
412173    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
412174    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
412175    +   end;
MPRINT(EM_DIAGRAM):   end;
412176    +   else do;
MPRINT(EM_DIAGRAM):   else do;
412177    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
412178    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
412179    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
412180    +   end;
MPRINT(EM_DIAGRAM):   end;
412181    +end;
MPRINT(EM_DIAGRAM):   end;
412182    +
412183    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
412184    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
412185    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
412186    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
412187    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
412188    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
412189    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
412190    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
412191    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
412192    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
412193    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
412194    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
412195    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
412196    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
412197    +end;
MPRINT(EM_DIAGRAM):   end;
412198    +else do;
MPRINT(EM_DIAGRAM):   else do;
412199    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
412200    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
412201    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
412202    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
412203    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
412204    +   end;
MPRINT(EM_DIAGRAM):   end;
412205    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
412206    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
412207    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
412208    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
412209    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
412210    +   end;
MPRINT(EM_DIAGRAM):   end;
412211    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
412212    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
412213    +   end;
MPRINT(EM_DIAGRAM):   end;
412214    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
412215    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
412216    +   end;
MPRINT(EM_DIAGRAM):   end;
412217    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
412218    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
412219    +   end;
MPRINT(EM_DIAGRAM):   end;
412220    +   else do;
MPRINT(EM_DIAGRAM):   else do;
412221    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
412222    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
412223    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
412224    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
412225    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
412226    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
412227    +   end;
MPRINT(EM_DIAGRAM):   end;
412228    +end;
MPRINT(EM_DIAGRAM):   end;
412229    +
412230    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
412231    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
412232    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
412233    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
412234    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
412235    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
412236    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
412237    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
412238    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
412239    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
412240    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
412241    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
412242    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
412243    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
412244    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
412245    +end;
MPRINT(EM_DIAGRAM):   end;
412246    +else do;
MPRINT(EM_DIAGRAM):   else do;
412247    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
412248    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
412249    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
412250    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
412251    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
412252    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
412253    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
412254    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
412255    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
412256    +         end;
MPRINT(EM_DIAGRAM):   end;
412257    +         else do;
MPRINT(EM_DIAGRAM):   else do;
412258    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
412259    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
412260    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
412261    +            end;
MPRINT(EM_DIAGRAM):   end;
412262    +         end;
MPRINT(EM_DIAGRAM):   end;
412263    +      end;
MPRINT(EM_DIAGRAM):   end;
412264    +      else do;
MPRINT(EM_DIAGRAM):   else do;
412265    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
412266    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
412267    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
412268    +         end;
MPRINT(EM_DIAGRAM):   end;
412269    +      end;
MPRINT(EM_DIAGRAM):   end;
412270    +   end;
MPRINT(EM_DIAGRAM):   end;
412271    +   else do;
MPRINT(EM_DIAGRAM):   else do;
412272    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
412273    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
412274    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
412275    +      end;
MPRINT(EM_DIAGRAM):   end;
412276    +      else do;
MPRINT(EM_DIAGRAM):   else do;
412277    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
412278    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
412279    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
412280    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
412281    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
412282    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
412283    +         end;
MPRINT(EM_DIAGRAM):   end;
412284    +      end;
MPRINT(EM_DIAGRAM):   end;
412285    +   end;
MPRINT(EM_DIAGRAM):   end;
412286    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
412287    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
412288    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
412289    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
412290    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
412291    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
412292    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
412293    +   end;
MPRINT(EM_DIAGRAM):   end;
412294    +end;
MPRINT(EM_DIAGRAM):   end;
412295    +
412296    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
412297    +*** Checking missing input Interval
412298    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
412299    +
412300    +IF NMISS(
412301    +   Income ,
412302    +   Kidhome ,
412303    +   MntFishProducts ,
412304    +   MntFruits ,
412305    +   MntGoldProds ,
412306    +   MntMeatProducts ,
412307    +   MntSweetProducts ,
412308    +   MntWines ,
412309    +   NumCatalogPurchases ,
412310    +   NumDealsPurchases ,
412311    +   NumStorePurchases ,
412312    +   NumWebPurchases ,
412313    +   NumWebVisitsMonth ,
412314    +   Recency ,
412315    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Income , Kidhome , MntFishProducts , MntFruits , MntGoldProds 
, MntMeatProducts , MntSweetProducts , MntWines , NumCatalogPurchases , NumDealsPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , Recency , Teenhome ) THEN DO;
412316    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
412317    +
412318    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
412319    +END;
MPRINT(EM_DIAGRAM):   END;
412320    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
412321    +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
412322    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
412323    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
412324    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
412325    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
412326    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
412327    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
412328    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
412329    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
412330    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
412331    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
412332    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
412333    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
412334    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
412335    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
412336    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
412337    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
412338    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
412339    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
412340    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
412341    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
412342    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
412343    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
412344    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
412345    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
412346    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
412347    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
412348    +END;
MPRINT(EM_DIAGRAM):   END;
412349    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
412350    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
412351    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
412352    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
412353    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
412354    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
412355    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
412356    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
412357    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
412358    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
412359    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
412360    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
412361    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
412362    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
412363    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
412364    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
412365    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
412366    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
412367    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
412368    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
412369    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
412370    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
412371    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
412372    +   ELSE S_NumCatalogPurchases
412373    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
412374    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
412375    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
412376    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
412377    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
412378    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
412379    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
412380    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
412381    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
412382    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
412383    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
412384    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
412385    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
412386    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
412387    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
412388    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
412389    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
412390    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
412391    +END;
MPRINT(EM_DIAGRAM):   END;
412392    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
412393    +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
412394    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
412395    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
412396    +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
412397    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
412398    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
412399    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
412400    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
412401    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
412402    +   H11  =    -0.59781928082243 * S_Income  +     0.49830142312288 * S_Kidhome
412403    +          +    -0.00045024466632 * S_MntFishProducts
412404    +          +    -0.22421712710333 * S_MntFruits  +    -0.19010144853469 *
412405    +        S_MntGoldProds  +    -0.53373773623953 * S_MntMeatProducts
412406    +          +     0.17506402203495 * S_MntSweetProducts
412407    +          +    -0.28551398649672 * S_MntWines  +       0.019870944777 *
412408    +        S_NumCatalogPurchases  +     0.03537776181533 * S_NumDealsPurchases
412409    +          +     0.05580468715403 * S_NumStorePurchases
412410    +          +    -0.29131611132704 * S_NumWebPurchases
412411    +          +    -0.40690084025802 * S_NumWebVisitsMonth
412412    +          +     0.48640195058901 * S_Recency  +     0.31820890239661 *
412413    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = -0.59781928082243 * S_Income + 0.49830142312288 * S_Kidhome + 
-0.00045024466632 * S_MntFishProducts + -0.22421712710333 * S_MntFruits + -0.19010144853469 * 
S_MntGoldProds + -0.53373773623953 * S_MntMeatProducts + 0.17506402203495 * S_MntSweetProducts 
+ -0.28551398649672 * S_MntWines + 0.019870944777 * S_NumCatalogPurchases + 0.03537776181533 * 
S_NumDealsPurchases + 0.05580468715403 * S_NumStorePurchases + -0.29131611132704 * 
S_NumWebPurchases + -0.40690084025802 * S_NumWebVisitsMonth + 0.48640195058901 * S_Recency + 
0.31820890239661 * S_Teenhome ;
412414    +   H12  =    -0.41871753512335 * S_Income  +      0.6025072461821 * S_Kidhome
412415    +          +    -0.03132724937716 * S_MntFishProducts
412416    +          +     0.19114182835046 * S_MntFruits  +     0.13483463809539 *
412417    +        S_MntGoldProds  +    -0.63593603749443 * S_MntMeatProducts
412418    +          +    -0.07569302401223 * S_MntSweetProducts
412419    +          +     0.67050112032753 * S_MntWines  +    -0.23159243932208 *
412420    +        S_NumCatalogPurchases  +    -0.07183698407409 * S_NumDealsPurchases
412421    +          +     0.54619681114623 * S_NumStorePurchases
412422    +          +     0.44325129671249 * S_NumWebPurchases
412423    +          +    -1.25054401670605 * S_NumWebVisitsMonth
412424    +          +      1.2376290916151 * S_Recency  +     0.43747371517287 *
412425    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -0.41871753512335 * S_Income + 0.6025072461821 * S_Kidhome + 
-0.03132724937716 * S_MntFishProducts + 0.19114182835046 * S_MntFruits + 0.13483463809539 * 
S_MntGoldProds + -0.63593603749443 * S_MntMeatProducts + -0.07569302401223 * 
S_MntSweetProducts + 0.67050112032753 * S_MntWines + -0.23159243932208 * S_NumCatalogPurchases 
+ -0.07183698407409 * S_NumDealsPurchases + 0.54619681114623 * S_NumStorePurchases + 
0.44325129671249 * S_NumWebPurchases + -1.25054401670605 * S_NumWebVisitsMonth + 
1.2376290916151 * S_Recency + 0.43747371517287 * S_Teenhome ;
412426    +   H13  =      0.0713579189325 * S_Income  +    -0.05759612462349 * S_Kidhome
412427    +          +     0.07631777381832 * S_MntFishProducts
412428    +          +    -0.00387785552441 * S_MntFruits  +    -0.21868916314192 *
412429    +        S_MntGoldProds  +       0.072623883197 * S_MntMeatProducts
412430    +          +     0.12637946833766 * S_MntSweetProducts
412431    +          +    -0.37981663841124 * S_MntWines  +    -0.89958525403162 *
412432    +        S_NumCatalogPurchases  +    -0.17471885937598 * S_NumDealsPurchases
412433    +          +     0.15845618359126 * S_NumStorePurchases
412434    +          +    -0.33296932705082 * S_NumWebPurchases
412435    +          +      0.0260072296349 * S_NumWebVisitsMonth
412436    +          +     0.02544749712977 * S_Recency  +    -0.17381561661022 *
412437    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = 0.0713579189325 * S_Income + -0.05759612462349 * S_Kidhome + 
0.07631777381832 * S_MntFishProducts + -0.00387785552441 * S_MntFruits + -0.21868916314192 * 
S_MntGoldProds + 0.072623883197 * S_MntMeatProducts + 0.12637946833766 * S_MntSweetProducts + 
-0.37981663841124 * S_MntWines + -0.89958525403162 * S_NumCatalogPurchases + -0.17471885937598 
* S_NumDealsPurchases + 0.15845618359126 * S_NumStorePurchases + -0.33296932705082 * 
S_NumWebPurchases + 0.0260072296349 * S_NumWebVisitsMonth + 0.02544749712977 * S_Recency + 
-0.17381561661022 * S_Teenhome ;
412438    +   H14  =    -0.47498613710851 * S_Income  +     0.09339198401437 * S_Kidhome
412439    +          +    -0.13642352619174 * S_MntFishProducts
412440    +          +     0.27167245582117 * S_MntFruits  +    -0.00579747559996 *
412441    +        S_MntGoldProds  +     0.31591387319577 * S_MntMeatProducts
412442    +          +     0.14125815807238 * S_MntSweetProducts
412443    +          +     0.07862916790983 * S_MntWines  +    -0.58905358997534 *
412444    +        S_NumCatalogPurchases  +     -0.5574069633995 * S_NumDealsPurchases
412445    +          +     0.19718828261526 * S_NumStorePurchases
412446    +          +    -0.24156925391919 * S_NumWebPurchases
412447    +          +    -0.25711078938749 * S_NumWebVisitsMonth
412448    +          +     0.38883063223812 * S_Recency  +     -0.2396731334184 *
412449    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = -0.47498613710851 * S_Income + 0.09339198401437 * S_Kidhome + 
-0.13642352619174 * S_MntFishProducts + 0.27167245582117 * S_MntFruits + -0.00579747559996 * 
S_MntGoldProds + 0.31591387319577 * S_MntMeatProducts + 0.14125815807238 * S_MntSweetProducts 
+ 0.07862916790983 * S_MntWines + -0.58905358997534 * S_NumCatalogPurchases + -0.5574069633995 
* S_NumDealsPurchases + 0.19718828261526 * S_NumStorePurchases + -0.24156925391919 * 
S_NumWebPurchases + -0.25711078938749 * S_NumWebVisitsMonth + 0.38883063223812 * S_Recency + 
-0.2396731334184 * S_Teenhome ;
412450    +   H15  =     0.24624924979609 * S_Income  +    -0.37052106312109 * S_Kidhome
412451    +          +     0.13579628643404 * S_MntFishProducts
412452    +          +    -0.05263868911164 * S_MntFruits  +    -0.01504675049991 *
412453    +        S_MntGoldProds  +     -0.4202277804998 * S_MntMeatProducts
412454    +          +    -0.01039299374426 * S_MntSweetProducts
412455    +          +     0.71197420459135 * S_MntWines  +    -0.35973505575029 *
412456    +        S_NumCatalogPurchases  +     -0.4415445481482 * S_NumDealsPurchases
412457    +          +     0.58897740652611 * S_NumStorePurchases
412458    +          +     0.24564485851062 * S_NumWebPurchases
412459    +          +    -0.13976320243555 * S_NumWebVisitsMonth
412460    +          +      0.1199367613063 * S_Recency  +    -0.15283161418313 *
412461    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H15 = 0.24624924979609 * S_Income + -0.37052106312109 * S_Kidhome + 
0.13579628643404 * S_MntFishProducts + -0.05263868911164 * S_MntFruits + -0.01504675049991 * 
S_MntGoldProds + -0.4202277804998 * S_MntMeatProducts + -0.01039299374426 * S_MntSweetProducts 
+ 0.71197420459135 * S_MntWines + -0.35973505575029 * S_NumCatalogPurchases + -0.4415445481482 
* S_NumDealsPurchases + 0.58897740652611 * S_NumStorePurchases + 0.24564485851062 * 
S_NumWebPurchases + -0.13976320243555 * S_NumWebVisitsMonth + 0.1199367613063 * S_Recency + 
-0.15283161418313 * S_Teenhome ;
412462    +   H16  =     0.23493799758749 * S_Income  +     0.07038278079069 * S_Kidhome
412463    +          +    -0.45448768538367 * S_MntFishProducts
412464    +          +     0.02622380709004 * S_MntFruits  +     0.14726698184115 *
412465    +        S_MntGoldProds  +     0.65760183569767 * S_MntMeatProducts
412466    +          +    -0.16936256277023 * S_MntSweetProducts
412467    +          +    -0.40647066866305 * S_MntWines  +     0.99645493491726 *
412468    +        S_NumCatalogPurchases  +     0.65587239961358 * S_NumDealsPurchases
412469    +          +    -0.22309716855774 * S_NumStorePurchases
412470    +          +    -0.61204529910842 * S_NumWebPurchases
412471    +          +     0.43742228867615 * S_NumWebVisitsMonth
412472    +          +    -0.56099034256092 * S_Recency  +     -0.2445351671148 *
412473    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H16 = 0.23493799758749 * S_Income + 0.07038278079069 * S_Kidhome + 
-0.45448768538367 * S_MntFishProducts + 0.02622380709004 * S_MntFruits + 0.14726698184115 * 
S_MntGoldProds + 0.65760183569767 * S_MntMeatProducts + -0.16936256277023 * S_MntSweetProducts 
+ -0.40647066866305 * S_MntWines + 0.99645493491726 * S_NumCatalogPurchases + 0.65587239961358 
* S_NumDealsPurchases + -0.22309716855774 * S_NumStorePurchases + -0.61204529910842 * 
S_NumWebPurchases + 0.43742228867615 * S_NumWebVisitsMonth + -0.56099034256092 * S_Recency + 
-0.2445351671148 * S_Teenhome ;
412474    +   H17  =    -0.00107702057163 * S_Income  +     0.25116135719972 * S_Kidhome
412475    +          +    -0.04540308470858 * S_MntFishProducts
412476    +          +        0.21487241577 * S_MntFruits  +    -0.12914913547414 *
412477    +        S_MntGoldProds  +    -0.04149021191395 * S_MntMeatProducts
412478    +          +     0.02853521979141 * S_MntSweetProducts
412479    +          +     -0.2435805887418 * S_MntWines  +    -0.04509621661407 *
412480    +        S_NumCatalogPurchases  +    -0.26492036720429 * S_NumDealsPurchases
412481    +          +     -0.3299561248944 * S_NumStorePurchases
412482    +          +    -0.09806597448224 * S_NumWebPurchases
412483    +          +      0.0427056351245 * S_NumWebVisitsMonth
412484    +          +     0.03953235628202 * S_Recency  +    -0.11317308767713 *
412485    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H17 = -0.00107702057163 * S_Income + 0.25116135719972 * S_Kidhome + 
-0.04540308470858 * S_MntFishProducts + 0.21487241577 * S_MntFruits + -0.12914913547414 * 
S_MntGoldProds + -0.04149021191395 * S_MntMeatProducts + 0.02853521979141 * S_MntSweetProducts 
+ -0.2435805887418 * S_MntWines + -0.04509621661407 * S_NumCatalogPurchases + 
-0.26492036720429 * S_NumDealsPurchases + -0.3299561248944 * S_NumStorePurchases + 
-0.09806597448224 * S_NumWebPurchases + 0.0427056351245 * S_NumWebVisitsMonth + 
0.03953235628202 * S_Recency + -0.11317308767713 * S_Teenhome ;
412486    +   H11  = H11  +     0.50033674561531 * AcceptedCmp10
412487    +          +    -0.02275693117286 * AcceptedCmp20  +     0.31338891533156 *
412488    +        AcceptedCmp30  +      0.3901248845706 * AcceptedCmp40
412489    +          +     0.44314358358111 * AcceptedCmp50  +    -0.20444060864498 *
412490    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.50033674561531 * AcceptedCmp10 + -0.02275693117286 * 
AcceptedCmp20 + 0.31338891533156 * AcceptedCmp30 + 0.3901248845706 * AcceptedCmp40 + 
0.44314358358111 * AcceptedCmp50 + -0.20444060864498 * Complain0 ;
412491    +   H12  = H12  +     0.30103938822692 * AcceptedCmp10
412492    +          +     0.54298746723422 * AcceptedCmp20  +     0.50401040035525 *
412493    +        AcceptedCmp30  +     0.43447710825306 * AcceptedCmp40
412494    +          +     0.60794421030027 * AcceptedCmp50  +    -0.28114274461319 *
412495    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.30103938822692 * AcceptedCmp10 + 0.54298746723422 * 
AcceptedCmp20 + 0.50401040035525 * AcceptedCmp30 + 0.43447710825306 * AcceptedCmp40 + 
0.60794421030027 * AcceptedCmp50 + -0.28114274461319 * Complain0 ;
412496    +   H13  = H13  +     -0.1890212967757 * AcceptedCmp10
412497    +          +    -0.11487406996391 * AcceptedCmp20  +    -0.22740618754863 *
412498    +        AcceptedCmp30  +      0.2354510231918 * AcceptedCmp40
412499    +          +    -0.14327434649067 * AcceptedCmp50  +    -0.17839080850556 *
412500    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.1890212967757 * AcceptedCmp10 + -0.11487406996391 * 
AcceptedCmp20 + -0.22740618754863 * AcceptedCmp30 + 0.2354510231918 * AcceptedCmp40 + 
-0.14327434649067 * AcceptedCmp50 + -0.17839080850556 * Complain0 ;
412501    +   H14  = H14  +    -0.28194187416219 * AcceptedCmp10
412502    +          +     0.11732089254624 * AcceptedCmp20  +     0.34964075536156 *
412503    +        AcceptedCmp30  +     0.05772396286169 * AcceptedCmp40
412504    +          +    -0.08671748651826 * AcceptedCmp50  +      0.0629540108407 *
412505    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.28194187416219 * AcceptedCmp10 + 0.11732089254624 * 
AcceptedCmp20 + 0.34964075536156 * AcceptedCmp30 + 0.05772396286169 * AcceptedCmp40 + 
-0.08671748651826 * AcceptedCmp50 + 0.0629540108407 * Complain0 ;
412506    +   H15  = H15  +    -0.01058257322803 * AcceptedCmp10
412507    +          +     0.26755355732587 * AcceptedCmp20  +     0.40856661734724 *
412508    +        AcceptedCmp30  +     0.02977117354989 * AcceptedCmp40
412509    +          +       0.073655049734 * AcceptedCmp50  +     0.25562048226555 *
412510    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + -0.01058257322803 * AcceptedCmp10 + 0.26755355732587 * 
AcceptedCmp20 + 0.40856661734724 * AcceptedCmp30 + 0.02977117354989 * AcceptedCmp40 + 
0.073655049734 * AcceptedCmp50 + 0.25562048226555 * Complain0 ;
412511    +   H16  = H16  +    -0.65590117532084 * AcceptedCmp10
412512    +          +    -0.31314161223579 * AcceptedCmp20  +    -0.18863165264573 *
412513    +        AcceptedCmp30  +    -0.18832338914237 * AcceptedCmp40
412514    +          +    -0.53765749471786 * AcceptedCmp50  +     0.17409401877513 *
412515    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H16 = H16 + -0.65590117532084 * AcceptedCmp10 + -0.31314161223579 * 
AcceptedCmp20 + -0.18863165264573 * AcceptedCmp30 + -0.18832338914237 * AcceptedCmp40 + 
-0.53765749471786 * AcceptedCmp50 + 0.17409401877513 * Complain0 ;
412516    +   H17  = H17  +    -0.42253231673718 * AcceptedCmp10
412517    +          +    -0.40954345229557 * AcceptedCmp20  +    -0.30577523080786 *
412518    +        AcceptedCmp30  +    -0.22396670899437 * AcceptedCmp40
412519    +          +     0.05757251451004 * AcceptedCmp50  +     0.07813950542487 *
412520    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H17 = H17 + -0.42253231673718 * AcceptedCmp10 + -0.40954345229557 * 
AcceptedCmp20 + -0.30577523080786 * AcceptedCmp30 + -0.22396670899437 * AcceptedCmp40 + 
0.05757251451004 * AcceptedCmp50 + 0.07813950542487 * Complain0 ;
412521    +   H11  = H11  +    -0.14483542022901 * Education2n_Cycle
412522    +          +     0.32176647745332 * EducationBasic  +     0.00900796305072 *
412523    +        EducationGraduation  +    -0.00243484910123 * EducationMaster
412524    +          +    -0.22074132229211 * Marital_StatusDivorced
412525    +          +     0.70282742634901 * Marital_StatusMarried
412526    +          +     -0.5926244797961 * Marital_StatusSingle
412527    +          +     0.21342221410999 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.14483542022901 * Education2n_Cycle + 0.32176647745332 * 
EducationBasic + 0.00900796305072 * EducationGraduation + -0.00243484910123 * EducationMaster 
+ -0.22074132229211 * Marital_StatusDivorced + 0.70282742634901 * Marital_StatusMarried + 
-0.5926244797961 * Marital_StatusSingle + 0.21342221410999 * Marital_StatusTogether ;
412528    +   H12  = H12  +    -0.10242932200247 * Education2n_Cycle
412529    +          +     0.34937926721317 * EducationBasic  +    -0.20395479511872 *
412530    +        EducationGraduation  +     0.31210327899339 * EducationMaster
412531    +          +    -0.46376392175295 * Marital_StatusDivorced
412532    +          +       0.589453579718 * Marital_StatusMarried
412533    +          +    -0.45342174978481 * Marital_StatusSingle
412534    +          +     0.70517120763557 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.10242932200247 * Education2n_Cycle + 0.34937926721317 * 
EducationBasic + -0.20395479511872 * EducationGraduation + 0.31210327899339 * EducationMaster 
+ -0.46376392175295 * Marital_StatusDivorced + 0.589453579718 * Marital_StatusMarried + 
-0.45342174978481 * Marital_StatusSingle + 0.70517120763557 * Marital_StatusTogether ;
412535    +   H13  = H13  +     0.24858755570324 * Education2n_Cycle
412536    +          +     0.07360039359386 * EducationBasic  +    -0.42563056620078 *
412537    +        EducationGraduation  +    -0.25970840250323 * EducationMaster
412538    +          +     0.26981972015482 * Marital_StatusDivorced
412539    +          +    -0.01707364864139 * Marital_StatusMarried
412540    +          +     0.38646060840009 * Marital_StatusSingle
412541    +          +     0.19694047086013 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.24858755570324 * Education2n_Cycle + 0.07360039359386 * 
EducationBasic + -0.42563056620078 * EducationGraduation + -0.25970840250323 * EducationMaster 
+ 0.26981972015482 * Marital_StatusDivorced + -0.01707364864139 * Marital_StatusMarried + 
0.38646060840009 * Marital_StatusSingle + 0.19694047086013 * Marital_StatusTogether ;
412542    +   H14  = H14  +     0.22577522124265 * Education2n_Cycle
412543    +          +     0.04183136697557 * EducationBasic  +    -0.27725331198825 *
412544    +        EducationGraduation  +     0.15709188532123 * EducationMaster
412545    +          +    -0.01933675094701 * Marital_StatusDivorced
412546    +          +     0.52969577969434 * Marital_StatusMarried
412547    +          +      -0.348697714569 * Marital_StatusSingle
412548    +          +      0.5020342481888 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.22577522124265 * Education2n_Cycle + 0.04183136697557 * 
EducationBasic + -0.27725331198825 * EducationGraduation + 0.15709188532123 * EducationMaster 
+ -0.01933675094701 * Marital_StatusDivorced + 0.52969577969434 * Marital_StatusMarried + 
-0.348697714569 * Marital_StatusSingle + 0.5020342481888 * Marital_StatusTogether ;
412549    +   H15  = H15  +     0.04488332711225 * Education2n_Cycle
412550    +          +     0.01911097443907 * EducationBasic  +    -0.11699443624996 *
412551    +        EducationGraduation  +    -0.07291393566738 * EducationMaster
412552    +          +    -0.04665146013984 * Marital_StatusDivorced
412553    +          +      -0.586219175167 * Marital_StatusMarried
412554    +          +     0.55713543417712 * Marital_StatusSingle
412555    +          +    -0.42208959885332 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.04488332711225 * Education2n_Cycle + 0.01911097443907 * 
EducationBasic + -0.11699443624996 * EducationGraduation + -0.07291393566738 * EducationMaster 
+ -0.04665146013984 * Marital_StatusDivorced + -0.586219175167 * Marital_StatusMarried + 
0.55713543417712 * Marital_StatusSingle + -0.42208959885332 * Marital_StatusTogether ;
412556    +   H16  = H16  +     0.09174117861154 * Education2n_Cycle
412557    +          +     -0.1378945860659 * EducationBasic  +     -0.0728635369665 *
412558    +        EducationGraduation  +     0.29860714824438 * EducationMaster
412559    +          +    -0.05632171154347 * Marital_StatusDivorced
412560    +          +     0.03215547861665 * Marital_StatusMarried
412561    +          +     0.16870781172538 * Marital_StatusSingle
412562    +          +    -0.04883314322676 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.09174117861154 * Education2n_Cycle + -0.1378945860659 * 
EducationBasic + -0.0728635369665 * EducationGraduation + 0.29860714824438 * EducationMaster + 
-0.05632171154347 * Marital_StatusDivorced + 0.03215547861665 * Marital_StatusMarried + 
0.16870781172538 * Marital_StatusSingle + -0.04883314322676 * Marital_StatusTogether ;
412563    +   H17  = H17  +    -0.00343694558117 * Education2n_Cycle
412564    +          +     0.32636427598227 * EducationBasic  +     0.16259654486833 *
412565    +        EducationGraduation  +    -0.00424229454859 * EducationMaster
412566    +          +    -0.21765415159355 * Marital_StatusDivorced
412567    +          +     -0.0542857922075 * Marital_StatusMarried
412568    +          +     0.20679907454933 * Marital_StatusSingle
412569    +          +     0.14976519710725 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H17 = H17 + -0.00343694558117 * Education2n_Cycle + 0.32636427598227 * 
EducationBasic + 0.16259654486833 * EducationGraduation + -0.00424229454859 * EducationMaster 
+ -0.21765415159355 * Marital_StatusDivorced + -0.0542857922075 * Marital_StatusMarried + 
0.20679907454933 * Marital_StatusSingle + 0.14976519710725 * Marital_StatusTogether ;
412570    +   H11  =     0.92977078759503 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 0.92977078759503 + H11 ;
412571    +   H12  =    -0.97970409253156 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -0.97970409253156 + H12 ;
412572    +   H13  =     -0.5001144792196 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.5001144792196 + H13 ;
412573    +   H14  =    -0.90715840862541 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = -0.90715840862541 + H14 ;
412574    +   H15  =     0.87046153389036 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = 0.87046153389036 + H15 ;
412575    +   H16  =     0.49066122767086 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = 0.49066122767086 + H16 ;
412576    +   H17  =    -1.05949763460293 + H17 ;
MPRINT(EM_DIAGRAM):   H17 = -1.05949763460293 + H17 ;
412577    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
412578    +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
412579    +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
412580    +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
412581    +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
412582    +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
412583    +   H17  = TANH(H17 );
MPRINT(EM_DIAGRAM):   H17 = TANH(H17 );
412584    +END;
MPRINT(EM_DIAGRAM):   END;
412585    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
412586    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
412587    +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
412588    +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
412589    +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
412590    +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
412591    +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
412592    +   H17  = .;
MPRINT(EM_DIAGRAM):   H17 = .;
412593    +END;
MPRINT(EM_DIAGRAM):   END;
412594    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
412595    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
412596    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
412597    +
412598    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
412599    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
412600    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
412601    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
412602    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
412603    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
412604    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
412605    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
412606    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
412607    +end;
MPRINT(EM_DIAGRAM):   end;
412608    +else do;
MPRINT(EM_DIAGRAM):   else do;
412609    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
412610    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
412611    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
412612    +   end;
MPRINT(EM_DIAGRAM):   end;
412613    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
412614    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
412615    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
412616    +   end;
MPRINT(EM_DIAGRAM):   end;
412617    +   else do;
MPRINT(EM_DIAGRAM):   else do;
412618    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
412619    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
412620    +   end;
MPRINT(EM_DIAGRAM):   end;
412621    +end;
MPRINT(EM_DIAGRAM):   end;
412622    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
412623    +   P_DepVar1  =    -2.32998401250848 * H11  +     -3.2074078511991 * H12
412624    +          +    -0.69549988605443 * H13  +    -1.74950789108762 * H14
412625    +          +    -1.74013772071344 * H15  +     2.65306089869015 * H16
412626    +          +     0.03700459000906 * H17 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.32998401250848 * H11 + -3.2074078511991 * H12 + 
-0.69549988605443 * H13 + -1.74950789108762 * H14 + -1.74013772071344 * H15 + 2.65306089869015 
* H16 + 0.03700459000906 * H17 ;
412627    +   P_DepVar1  =    -1.51229898726716 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.51229898726716 + P_DepVar1 ;
412628    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
412629    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
412630    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
412631    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
412632    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
412633    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
412634    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
412635    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
412636    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
412637    +END;
MPRINT(EM_DIAGRAM):   END;
412638    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
412639    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
412640    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
412641    +END;
MPRINT(EM_DIAGRAM):   END;
412642    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
412643    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
412644    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
412645    +END;
MPRINT(EM_DIAGRAM):   END;
412646    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
412647    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
412648    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
412649    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
412650    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
412651    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
412652    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
412653    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
412654    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
412655    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
412656    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
412657    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
412658    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
412659    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
412660    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
412661    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
412662    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
412663    +END;
MPRINT(EM_DIAGRAM):   END;
412664    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
412665    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
412666    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
412667    +drop
412668    +H11
412669    +H12
412670    +H13
412671    +H14
412672    +H15
412673    +H16
412674    +H17
412675    +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 H17 ;
412676    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
412677     run;

NOTE: DATA STEP view saved on file EMWS8.NEURAL30_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.META2_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
412678     quit;
412679     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
412680     filename emflow
412680   ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural30\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural30\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural30: Scoring VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
412681     *------------------------------------------------------------*;
412682     * Neural30: Scoring VALIDATE data;
412683     *------------------------------------------------------------*;
412684     data EMWS8.Neural30_VALIDATE
412685     / view=EMWS8.Neural30_VALIDATE
412686     ;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural30_VALIDATE / view=EMWS8.Neural30_VALIDATE ;
412687     set EMWS8.Meta2_VALIDATE
412688     ;
MPRINT(EM_DIAGRAM):   set EMWS8.Meta2_VALIDATE ;
412689     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Neural30\EMFLOWSCORE.sas.
412690    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
412691    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
412692    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
412693    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
412694    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
412695    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
412696    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
412697    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
412698    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
412699    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
412700    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
412701    +LENGTH _WARN_ $4
412702    +      F_DepVar  $ 12
412703    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
412704    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
412705    +
412706    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
412707    +
412708    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
412709    +
412710    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
412711    +
412712    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
412713    +
412714    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
412715    +
412716    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
412717    +
412718    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
412719    +
412720    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
412721    +
412722    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
412723    +
412724    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
412725    +
412726    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
412727    +
412728    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
412729    +
412730    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
412731    +
412732    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
412733    +
412734    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
412735    +
412736    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
412737    +
412738    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
412739    +
412740    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
412741    +
412742    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
412743    +
412744    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
412745    +
412746    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
412747    +
412748    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
412749    +
412750    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
412751    +
412752    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
412753    +
412754    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
412755    +
412756    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
412757    +
412758    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
412759    +
412760    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
412761    +
412762    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
412763    +
412764    +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
412765    +
412766    +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
412767    +
412768    +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
412769    +
412770    +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
412771    +
412772    +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
412773    +
412774    +      label H17 = 'Hidden: H1=7' ;
MPRINT(EM_DIAGRAM):   label H17 = 'Hidden: H1=7' ;
412775    +
412776    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
412777    +
412778    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
412779    +
412780    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
412781    +
412782    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
412783    +
412784    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
412785    +
412786    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
412787    +
412788    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
412789    +
412790    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
412791    +
412792    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
412793    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
412794    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
412795    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
412796    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
412797    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
412798    +end;
MPRINT(EM_DIAGRAM):   end;
412799    +else do;
MPRINT(EM_DIAGRAM):   else do;
412800    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
412801    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
412802    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
412803    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
412804    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
412805    +   end;
MPRINT(EM_DIAGRAM):   end;
412806    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
412807    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
412808    +   end;
MPRINT(EM_DIAGRAM):   end;
412809    +   else do;
MPRINT(EM_DIAGRAM):   else do;
412810    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
412811    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
412812    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
412813    +   end;
MPRINT(EM_DIAGRAM):   end;
412814    +end;
MPRINT(EM_DIAGRAM):   end;
412815    +
412816    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
412817    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
412818    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
412819    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
412820    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
412821    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
412822    +end;
MPRINT(EM_DIAGRAM):   end;
412823    +else do;
MPRINT(EM_DIAGRAM):   else do;
412824    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
412825    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
412826    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
412827    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
412828    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
412829    +   end;
MPRINT(EM_DIAGRAM):   end;
412830    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
412831    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
412832    +   end;
MPRINT(EM_DIAGRAM):   end;
412833    +   else do;
MPRINT(EM_DIAGRAM):   else do;
412834    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
412835    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
412836    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
412837    +   end;
MPRINT(EM_DIAGRAM):   end;
412838    +end;
MPRINT(EM_DIAGRAM):   end;
412839    +
412840    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
412841    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
412842    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
412843    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
412844    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
412845    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
412846    +end;
MPRINT(EM_DIAGRAM):   end;
412847    +else do;
MPRINT(EM_DIAGRAM):   else do;
412848    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
412849    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
412850    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
412851    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
412852    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
412853    +   end;
MPRINT(EM_DIAGRAM):   end;
412854    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
412855    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
412856    +   end;
MPRINT(EM_DIAGRAM):   end;
412857    +   else do;
MPRINT(EM_DIAGRAM):   else do;
412858    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
412859    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
412860    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
412861    +   end;
MPRINT(EM_DIAGRAM):   end;
412862    +end;
MPRINT(EM_DIAGRAM):   end;
412863    +
412864    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
412865    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
412866    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
412867    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
412868    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
412869    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
412870    +end;
MPRINT(EM_DIAGRAM):   end;
412871    +else do;
MPRINT(EM_DIAGRAM):   else do;
412872    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
412873    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
412874    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
412875    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
412876    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
412877    +   end;
MPRINT(EM_DIAGRAM):   end;
412878    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
412879    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
412880    +   end;
MPRINT(EM_DIAGRAM):   end;
412881    +   else do;
MPRINT(EM_DIAGRAM):   else do;
412882    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
412883    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
412884    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
412885    +   end;
MPRINT(EM_DIAGRAM):   end;
412886    +end;
MPRINT(EM_DIAGRAM):   end;
412887    +
412888    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
412889    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
412890    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
412891    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
412892    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
412893    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
412894    +end;
MPRINT(EM_DIAGRAM):   end;
412895    +else do;
MPRINT(EM_DIAGRAM):   else do;
412896    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
412897    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
412898    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
412899    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
412900    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
412901    +   end;
MPRINT(EM_DIAGRAM):   end;
412902    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
412903    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
412904    +   end;
MPRINT(EM_DIAGRAM):   end;
412905    +   else do;
MPRINT(EM_DIAGRAM):   else do;
412906    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
412907    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
412908    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
412909    +   end;
MPRINT(EM_DIAGRAM):   end;
412910    +end;
MPRINT(EM_DIAGRAM):   end;
412911    +
412912    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
412913    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
412914    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
412915    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
412916    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
412917    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
412918    +end;
MPRINT(EM_DIAGRAM):   end;
412919    +else do;
MPRINT(EM_DIAGRAM):   else do;
412920    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
412921    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
412922    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
412923    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
412924    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
412925    +   end;
MPRINT(EM_DIAGRAM):   end;
412926    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
412927    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
412928    +   end;
MPRINT(EM_DIAGRAM):   end;
412929    +   else do;
MPRINT(EM_DIAGRAM):   else do;
412930    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
412931    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
412932    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
412933    +   end;
MPRINT(EM_DIAGRAM):   end;
412934    +end;
MPRINT(EM_DIAGRAM):   end;
412935    +
412936    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
412937    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
412938    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
412939    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
412940    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
412941    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
412942    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
412943    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
412944    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
412945    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
412946    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
412947    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
412948    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
412949    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
412950    +end;
MPRINT(EM_DIAGRAM):   end;
412951    +else do;
MPRINT(EM_DIAGRAM):   else do;
412952    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
412953    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
412954    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
412955    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
412956    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
412957    +   end;
MPRINT(EM_DIAGRAM):   end;
412958    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
412959    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
412960    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
412961    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
412962    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
412963    +   end;
MPRINT(EM_DIAGRAM):   end;
412964    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
412965    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
412966    +   end;
MPRINT(EM_DIAGRAM):   end;
412967    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
412968    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
412969    +   end;
MPRINT(EM_DIAGRAM):   end;
412970    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
412971    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
412972    +   end;
MPRINT(EM_DIAGRAM):   end;
412973    +   else do;
MPRINT(EM_DIAGRAM):   else do;
412974    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
412975    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
412976    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
412977    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
412978    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
412979    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
412980    +   end;
MPRINT(EM_DIAGRAM):   end;
412981    +end;
MPRINT(EM_DIAGRAM):   end;
412982    +
412983    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
412984    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
412985    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
412986    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
412987    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
412988    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
412989    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
412990    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
412991    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
412992    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
412993    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
412994    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
412995    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
412996    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
412997    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
412998    +end;
MPRINT(EM_DIAGRAM):   end;
412999    +else do;
MPRINT(EM_DIAGRAM):   else do;
413000    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
413001    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
413002    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
413003    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
413004    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
413005    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
413006    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
413007    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
413008    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
413009    +         end;
MPRINT(EM_DIAGRAM):   end;
413010    +         else do;
MPRINT(EM_DIAGRAM):   else do;
413011    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
413012    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
413013    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
413014    +            end;
MPRINT(EM_DIAGRAM):   end;
413015    +         end;
MPRINT(EM_DIAGRAM):   end;
413016    +      end;
MPRINT(EM_DIAGRAM):   end;
413017    +      else do;
MPRINT(EM_DIAGRAM):   else do;
413018    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
413019    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
413020    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
413021    +         end;
MPRINT(EM_DIAGRAM):   end;
413022    +      end;
MPRINT(EM_DIAGRAM):   end;
413023    +   end;
MPRINT(EM_DIAGRAM):   end;
413024    +   else do;
MPRINT(EM_DIAGRAM):   else do;
413025    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
413026    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
413027    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
413028    +      end;
MPRINT(EM_DIAGRAM):   end;
413029    +      else do;
MPRINT(EM_DIAGRAM):   else do;
413030    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
413031    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
413032    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
413033    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
413034    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
413035    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
413036    +         end;
MPRINT(EM_DIAGRAM):   end;
413037    +      end;
MPRINT(EM_DIAGRAM):   end;
413038    +   end;
MPRINT(EM_DIAGRAM):   end;
413039    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
413040    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
413041    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
413042    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
413043    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
413044    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
413045    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
413046    +   end;
MPRINT(EM_DIAGRAM):   end;
413047    +end;
MPRINT(EM_DIAGRAM):   end;
413048    +
413049    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
413050    +*** Checking missing input Interval
413051    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
413052    +
413053    +IF NMISS(
413054    +   Income ,
413055    +   Kidhome ,
413056    +   MntFishProducts ,
413057    +   MntFruits ,
413058    +   MntGoldProds ,
413059    +   MntMeatProducts ,
413060    +   MntSweetProducts ,
413061    +   MntWines ,
413062    +   NumCatalogPurchases ,
413063    +   NumDealsPurchases ,
413064    +   NumStorePurchases ,
413065    +   NumWebPurchases ,
413066    +   NumWebVisitsMonth ,
413067    +   Recency ,
413068    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Income , Kidhome , MntFishProducts , MntFruits , MntGoldProds 
, MntMeatProducts , MntSweetProducts , MntWines , NumCatalogPurchases , NumDealsPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , Recency , Teenhome ) THEN DO;
413069    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
413070    +
413071    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
413072    +END;
MPRINT(EM_DIAGRAM):   END;
413073    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
413074    +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
413075    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
413076    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
413077    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
413078    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
413079    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
413080    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
413081    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
413082    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
413083    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
413084    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
413085    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
413086    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
413087    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
413088    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
413089    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
413090    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
413091    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
413092    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
413093    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
413094    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
413095    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
413096    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
413097    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
413098    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
413099    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
413100    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
413101    +END;
MPRINT(EM_DIAGRAM):   END;
413102    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
413103    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
413104    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
413105    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
413106    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
413107    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
413108    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
413109    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
413110    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
413111    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
413112    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
413113    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
413114    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
413115    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
413116    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
413117    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
413118    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
413119    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
413120    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
413121    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
413122    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
413123    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
413124    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
413125    +   ELSE S_NumCatalogPurchases
413126    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
413127    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
413128    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
413129    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
413130    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
413131    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
413132    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
413133    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
413134    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
413135    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
413136    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
413137    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
413138    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
413139    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
413140    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
413141    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
413142    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
413143    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
413144    +END;
MPRINT(EM_DIAGRAM):   END;
413145    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
413146    +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
413147    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
413148    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
413149    +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
413150    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
413151    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
413152    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
413153    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
413154    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
413155    +   H11  =    -0.59781928082243 * S_Income  +     0.49830142312288 * S_Kidhome
413156    +          +    -0.00045024466632 * S_MntFishProducts
413157    +          +    -0.22421712710333 * S_MntFruits  +    -0.19010144853469 *
413158    +        S_MntGoldProds  +    -0.53373773623953 * S_MntMeatProducts
413159    +          +     0.17506402203495 * S_MntSweetProducts
413160    +          +    -0.28551398649672 * S_MntWines  +       0.019870944777 *
413161    +        S_NumCatalogPurchases  +     0.03537776181533 * S_NumDealsPurchases
413162    +          +     0.05580468715403 * S_NumStorePurchases
413163    +          +    -0.29131611132704 * S_NumWebPurchases
413164    +          +    -0.40690084025802 * S_NumWebVisitsMonth
413165    +          +     0.48640195058901 * S_Recency  +     0.31820890239661 *
413166    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = -0.59781928082243 * S_Income + 0.49830142312288 * S_Kidhome + 
-0.00045024466632 * S_MntFishProducts + -0.22421712710333 * S_MntFruits + -0.19010144853469 * 
S_MntGoldProds + -0.53373773623953 * S_MntMeatProducts + 0.17506402203495 * S_MntSweetProducts 
+ -0.28551398649672 * S_MntWines + 0.019870944777 * S_NumCatalogPurchases + 0.03537776181533 * 
S_NumDealsPurchases + 0.05580468715403 * S_NumStorePurchases + -0.29131611132704 * 
S_NumWebPurchases + -0.40690084025802 * S_NumWebVisitsMonth + 0.48640195058901 * S_Recency + 
0.31820890239661 * S_Teenhome ;
413167    +   H12  =    -0.41871753512335 * S_Income  +      0.6025072461821 * S_Kidhome
413168    +          +    -0.03132724937716 * S_MntFishProducts
413169    +          +     0.19114182835046 * S_MntFruits  +     0.13483463809539 *
413170    +        S_MntGoldProds  +    -0.63593603749443 * S_MntMeatProducts
413171    +          +    -0.07569302401223 * S_MntSweetProducts
413172    +          +     0.67050112032753 * S_MntWines  +    -0.23159243932208 *
413173    +        S_NumCatalogPurchases  +    -0.07183698407409 * S_NumDealsPurchases
413174    +          +     0.54619681114623 * S_NumStorePurchases
413175    +          +     0.44325129671249 * S_NumWebPurchases
413176    +          +    -1.25054401670605 * S_NumWebVisitsMonth
413177    +          +      1.2376290916151 * S_Recency  +     0.43747371517287 *
413178    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -0.41871753512335 * S_Income + 0.6025072461821 * S_Kidhome + 
-0.03132724937716 * S_MntFishProducts + 0.19114182835046 * S_MntFruits + 0.13483463809539 * 
S_MntGoldProds + -0.63593603749443 * S_MntMeatProducts + -0.07569302401223 * 
S_MntSweetProducts + 0.67050112032753 * S_MntWines + -0.23159243932208 * S_NumCatalogPurchases 
+ -0.07183698407409 * S_NumDealsPurchases + 0.54619681114623 * S_NumStorePurchases + 
0.44325129671249 * S_NumWebPurchases + -1.25054401670605 * S_NumWebVisitsMonth + 
1.2376290916151 * S_Recency + 0.43747371517287 * S_Teenhome ;
413179    +   H13  =      0.0713579189325 * S_Income  +    -0.05759612462349 * S_Kidhome
413180    +          +     0.07631777381832 * S_MntFishProducts
413181    +          +    -0.00387785552441 * S_MntFruits  +    -0.21868916314192 *
413182    +        S_MntGoldProds  +       0.072623883197 * S_MntMeatProducts
413183    +          +     0.12637946833766 * S_MntSweetProducts
413184    +          +    -0.37981663841124 * S_MntWines  +    -0.89958525403162 *
413185    +        S_NumCatalogPurchases  +    -0.17471885937598 * S_NumDealsPurchases
413186    +          +     0.15845618359126 * S_NumStorePurchases
413187    +          +    -0.33296932705082 * S_NumWebPurchases
413188    +          +      0.0260072296349 * S_NumWebVisitsMonth
413189    +          +     0.02544749712977 * S_Recency  +    -0.17381561661022 *
413190    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = 0.0713579189325 * S_Income + -0.05759612462349 * S_Kidhome + 
0.07631777381832 * S_MntFishProducts + -0.00387785552441 * S_MntFruits + -0.21868916314192 * 
S_MntGoldProds + 0.072623883197 * S_MntMeatProducts + 0.12637946833766 * S_MntSweetProducts + 
-0.37981663841124 * S_MntWines + -0.89958525403162 * S_NumCatalogPurchases + -0.17471885937598 
* S_NumDealsPurchases + 0.15845618359126 * S_NumStorePurchases + -0.33296932705082 * 
S_NumWebPurchases + 0.0260072296349 * S_NumWebVisitsMonth + 0.02544749712977 * S_Recency + 
-0.17381561661022 * S_Teenhome ;
413191    +   H14  =    -0.47498613710851 * S_Income  +     0.09339198401437 * S_Kidhome
413192    +          +    -0.13642352619174 * S_MntFishProducts
413193    +          +     0.27167245582117 * S_MntFruits  +    -0.00579747559996 *
413194    +        S_MntGoldProds  +     0.31591387319577 * S_MntMeatProducts
413195    +          +     0.14125815807238 * S_MntSweetProducts
413196    +          +     0.07862916790983 * S_MntWines  +    -0.58905358997534 *
413197    +        S_NumCatalogPurchases  +     -0.5574069633995 * S_NumDealsPurchases
413198    +          +     0.19718828261526 * S_NumStorePurchases
413199    +          +    -0.24156925391919 * S_NumWebPurchases
413200    +          +    -0.25711078938749 * S_NumWebVisitsMonth
413201    +          +     0.38883063223812 * S_Recency  +     -0.2396731334184 *
413202    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = -0.47498613710851 * S_Income + 0.09339198401437 * S_Kidhome + 
-0.13642352619174 * S_MntFishProducts + 0.27167245582117 * S_MntFruits + -0.00579747559996 * 
S_MntGoldProds + 0.31591387319577 * S_MntMeatProducts + 0.14125815807238 * S_MntSweetProducts 
+ 0.07862916790983 * S_MntWines + -0.58905358997534 * S_NumCatalogPurchases + -0.5574069633995 
* S_NumDealsPurchases + 0.19718828261526 * S_NumStorePurchases + -0.24156925391919 * 
S_NumWebPurchases + -0.25711078938749 * S_NumWebVisitsMonth + 0.38883063223812 * S_Recency + 
-0.2396731334184 * S_Teenhome ;
413203    +   H15  =     0.24624924979609 * S_Income  +    -0.37052106312109 * S_Kidhome
413204    +          +     0.13579628643404 * S_MntFishProducts
413205    +          +    -0.05263868911164 * S_MntFruits  +    -0.01504675049991 *
413206    +        S_MntGoldProds  +     -0.4202277804998 * S_MntMeatProducts
413207    +          +    -0.01039299374426 * S_MntSweetProducts
413208    +          +     0.71197420459135 * S_MntWines  +    -0.35973505575029 *
413209    +        S_NumCatalogPurchases  +     -0.4415445481482 * S_NumDealsPurchases
413210    +          +     0.58897740652611 * S_NumStorePurchases
413211    +          +     0.24564485851062 * S_NumWebPurchases
413212    +          +    -0.13976320243555 * S_NumWebVisitsMonth
413213    +          +      0.1199367613063 * S_Recency  +    -0.15283161418313 *
413214    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H15 = 0.24624924979609 * S_Income + -0.37052106312109 * S_Kidhome + 
0.13579628643404 * S_MntFishProducts + -0.05263868911164 * S_MntFruits + -0.01504675049991 * 
S_MntGoldProds + -0.4202277804998 * S_MntMeatProducts + -0.01039299374426 * S_MntSweetProducts 
+ 0.71197420459135 * S_MntWines + -0.35973505575029 * S_NumCatalogPurchases + -0.4415445481482 
* S_NumDealsPurchases + 0.58897740652611 * S_NumStorePurchases + 0.24564485851062 * 
S_NumWebPurchases + -0.13976320243555 * S_NumWebVisitsMonth + 0.1199367613063 * S_Recency + 
-0.15283161418313 * S_Teenhome ;
413215    +   H16  =     0.23493799758749 * S_Income  +     0.07038278079069 * S_Kidhome
413216    +          +    -0.45448768538367 * S_MntFishProducts
413217    +          +     0.02622380709004 * S_MntFruits  +     0.14726698184115 *
413218    +        S_MntGoldProds  +     0.65760183569767 * S_MntMeatProducts
413219    +          +    -0.16936256277023 * S_MntSweetProducts
413220    +          +    -0.40647066866305 * S_MntWines  +     0.99645493491726 *
413221    +        S_NumCatalogPurchases  +     0.65587239961358 * S_NumDealsPurchases
413222    +          +    -0.22309716855774 * S_NumStorePurchases
413223    +          +    -0.61204529910842 * S_NumWebPurchases
413224    +          +     0.43742228867615 * S_NumWebVisitsMonth
413225    +          +    -0.56099034256092 * S_Recency  +     -0.2445351671148 *
413226    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H16 = 0.23493799758749 * S_Income + 0.07038278079069 * S_Kidhome + 
-0.45448768538367 * S_MntFishProducts + 0.02622380709004 * S_MntFruits + 0.14726698184115 * 
S_MntGoldProds + 0.65760183569767 * S_MntMeatProducts + -0.16936256277023 * S_MntSweetProducts 
+ -0.40647066866305 * S_MntWines + 0.99645493491726 * S_NumCatalogPurchases + 0.65587239961358 
* S_NumDealsPurchases + -0.22309716855774 * S_NumStorePurchases + -0.61204529910842 * 
S_NumWebPurchases + 0.43742228867615 * S_NumWebVisitsMonth + -0.56099034256092 * S_Recency + 
-0.2445351671148 * S_Teenhome ;
413227    +   H17  =    -0.00107702057163 * S_Income  +     0.25116135719972 * S_Kidhome
413228    +          +    -0.04540308470858 * S_MntFishProducts
413229    +          +        0.21487241577 * S_MntFruits  +    -0.12914913547414 *
413230    +        S_MntGoldProds  +    -0.04149021191395 * S_MntMeatProducts
413231    +          +     0.02853521979141 * S_MntSweetProducts
413232    +          +     -0.2435805887418 * S_MntWines  +    -0.04509621661407 *
413233    +        S_NumCatalogPurchases  +    -0.26492036720429 * S_NumDealsPurchases
413234    +          +     -0.3299561248944 * S_NumStorePurchases
413235    +          +    -0.09806597448224 * S_NumWebPurchases
413236    +          +      0.0427056351245 * S_NumWebVisitsMonth
413237    +          +     0.03953235628202 * S_Recency  +    -0.11317308767713 *
413238    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H17 = -0.00107702057163 * S_Income + 0.25116135719972 * S_Kidhome + 
-0.04540308470858 * S_MntFishProducts + 0.21487241577 * S_MntFruits + -0.12914913547414 * 
S_MntGoldProds + -0.04149021191395 * S_MntMeatProducts + 0.02853521979141 * S_MntSweetProducts 
+ -0.2435805887418 * S_MntWines + -0.04509621661407 * S_NumCatalogPurchases + 
-0.26492036720429 * S_NumDealsPurchases + -0.3299561248944 * S_NumStorePurchases + 
-0.09806597448224 * S_NumWebPurchases + 0.0427056351245 * S_NumWebVisitsMonth + 
0.03953235628202 * S_Recency + -0.11317308767713 * S_Teenhome ;
413239    +   H11  = H11  +     0.50033674561531 * AcceptedCmp10
413240    +          +    -0.02275693117286 * AcceptedCmp20  +     0.31338891533156 *
413241    +        AcceptedCmp30  +      0.3901248845706 * AcceptedCmp40
413242    +          +     0.44314358358111 * AcceptedCmp50  +    -0.20444060864498 *
413243    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.50033674561531 * AcceptedCmp10 + -0.02275693117286 * 
AcceptedCmp20 + 0.31338891533156 * AcceptedCmp30 + 0.3901248845706 * AcceptedCmp40 + 
0.44314358358111 * AcceptedCmp50 + -0.20444060864498 * Complain0 ;
413244    +   H12  = H12  +     0.30103938822692 * AcceptedCmp10
413245    +          +     0.54298746723422 * AcceptedCmp20  +     0.50401040035525 *
413246    +        AcceptedCmp30  +     0.43447710825306 * AcceptedCmp40
413247    +          +     0.60794421030027 * AcceptedCmp50  +    -0.28114274461319 *
413248    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.30103938822692 * AcceptedCmp10 + 0.54298746723422 * 
AcceptedCmp20 + 0.50401040035525 * AcceptedCmp30 + 0.43447710825306 * AcceptedCmp40 + 
0.60794421030027 * AcceptedCmp50 + -0.28114274461319 * Complain0 ;
413249    +   H13  = H13  +     -0.1890212967757 * AcceptedCmp10
413250    +          +    -0.11487406996391 * AcceptedCmp20  +    -0.22740618754863 *
413251    +        AcceptedCmp30  +      0.2354510231918 * AcceptedCmp40
413252    +          +    -0.14327434649067 * AcceptedCmp50  +    -0.17839080850556 *
413253    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.1890212967757 * AcceptedCmp10 + -0.11487406996391 * 
AcceptedCmp20 + -0.22740618754863 * AcceptedCmp30 + 0.2354510231918 * AcceptedCmp40 + 
-0.14327434649067 * AcceptedCmp50 + -0.17839080850556 * Complain0 ;
413254    +   H14  = H14  +    -0.28194187416219 * AcceptedCmp10
413255    +          +     0.11732089254624 * AcceptedCmp20  +     0.34964075536156 *
413256    +        AcceptedCmp30  +     0.05772396286169 * AcceptedCmp40
413257    +          +    -0.08671748651826 * AcceptedCmp50  +      0.0629540108407 *
413258    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.28194187416219 * AcceptedCmp10 + 0.11732089254624 * 
AcceptedCmp20 + 0.34964075536156 * AcceptedCmp30 + 0.05772396286169 * AcceptedCmp40 + 
-0.08671748651826 * AcceptedCmp50 + 0.0629540108407 * Complain0 ;
413259    +   H15  = H15  +    -0.01058257322803 * AcceptedCmp10
413260    +          +     0.26755355732587 * AcceptedCmp20  +     0.40856661734724 *
413261    +        AcceptedCmp30  +     0.02977117354989 * AcceptedCmp40
413262    +          +       0.073655049734 * AcceptedCmp50  +     0.25562048226555 *
413263    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + -0.01058257322803 * AcceptedCmp10 + 0.26755355732587 * 
AcceptedCmp20 + 0.40856661734724 * AcceptedCmp30 + 0.02977117354989 * AcceptedCmp40 + 
0.073655049734 * AcceptedCmp50 + 0.25562048226555 * Complain0 ;
413264    +   H16  = H16  +    -0.65590117532084 * AcceptedCmp10
413265    +          +    -0.31314161223579 * AcceptedCmp20  +    -0.18863165264573 *
413266    +        AcceptedCmp30  +    -0.18832338914237 * AcceptedCmp40
413267    +          +    -0.53765749471786 * AcceptedCmp50  +     0.17409401877513 *
413268    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H16 = H16 + -0.65590117532084 * AcceptedCmp10 + -0.31314161223579 * 
AcceptedCmp20 + -0.18863165264573 * AcceptedCmp30 + -0.18832338914237 * AcceptedCmp40 + 
-0.53765749471786 * AcceptedCmp50 + 0.17409401877513 * Complain0 ;
413269    +   H17  = H17  +    -0.42253231673718 * AcceptedCmp10
413270    +          +    -0.40954345229557 * AcceptedCmp20  +    -0.30577523080786 *
413271    +        AcceptedCmp30  +    -0.22396670899437 * AcceptedCmp40
413272    +          +     0.05757251451004 * AcceptedCmp50  +     0.07813950542487 *
413273    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H17 = H17 + -0.42253231673718 * AcceptedCmp10 + -0.40954345229557 * 
AcceptedCmp20 + -0.30577523080786 * AcceptedCmp30 + -0.22396670899437 * AcceptedCmp40 + 
0.05757251451004 * AcceptedCmp50 + 0.07813950542487 * Complain0 ;
413274    +   H11  = H11  +    -0.14483542022901 * Education2n_Cycle
413275    +          +     0.32176647745332 * EducationBasic  +     0.00900796305072 *
413276    +        EducationGraduation  +    -0.00243484910123 * EducationMaster
413277    +          +    -0.22074132229211 * Marital_StatusDivorced
413278    +          +     0.70282742634901 * Marital_StatusMarried
413279    +          +     -0.5926244797961 * Marital_StatusSingle
413280    +          +     0.21342221410999 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.14483542022901 * Education2n_Cycle + 0.32176647745332 * 
EducationBasic + 0.00900796305072 * EducationGraduation + -0.00243484910123 * EducationMaster 
+ -0.22074132229211 * Marital_StatusDivorced + 0.70282742634901 * Marital_StatusMarried + 
-0.5926244797961 * Marital_StatusSingle + 0.21342221410999 * Marital_StatusTogether ;
413281    +   H12  = H12  +    -0.10242932200247 * Education2n_Cycle
413282    +          +     0.34937926721317 * EducationBasic  +    -0.20395479511872 *
413283    +        EducationGraduation  +     0.31210327899339 * EducationMaster
413284    +          +    -0.46376392175295 * Marital_StatusDivorced
413285    +          +       0.589453579718 * Marital_StatusMarried
413286    +          +    -0.45342174978481 * Marital_StatusSingle
413287    +          +     0.70517120763557 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.10242932200247 * Education2n_Cycle + 0.34937926721317 * 
EducationBasic + -0.20395479511872 * EducationGraduation + 0.31210327899339 * EducationMaster 
+ -0.46376392175295 * Marital_StatusDivorced + 0.589453579718 * Marital_StatusMarried + 
-0.45342174978481 * Marital_StatusSingle + 0.70517120763557 * Marital_StatusTogether ;
413288    +   H13  = H13  +     0.24858755570324 * Education2n_Cycle
413289    +          +     0.07360039359386 * EducationBasic  +    -0.42563056620078 *
413290    +        EducationGraduation  +    -0.25970840250323 * EducationMaster
413291    +          +     0.26981972015482 * Marital_StatusDivorced
413292    +          +    -0.01707364864139 * Marital_StatusMarried
413293    +          +     0.38646060840009 * Marital_StatusSingle
413294    +          +     0.19694047086013 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.24858755570324 * Education2n_Cycle + 0.07360039359386 * 
EducationBasic + -0.42563056620078 * EducationGraduation + -0.25970840250323 * EducationMaster 
+ 0.26981972015482 * Marital_StatusDivorced + -0.01707364864139 * Marital_StatusMarried + 
0.38646060840009 * Marital_StatusSingle + 0.19694047086013 * Marital_StatusTogether ;
413295    +   H14  = H14  +     0.22577522124265 * Education2n_Cycle
413296    +          +     0.04183136697557 * EducationBasic  +    -0.27725331198825 *
413297    +        EducationGraduation  +     0.15709188532123 * EducationMaster
413298    +          +    -0.01933675094701 * Marital_StatusDivorced
413299    +          +     0.52969577969434 * Marital_StatusMarried
413300    +          +      -0.348697714569 * Marital_StatusSingle
413301    +          +      0.5020342481888 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.22577522124265 * Education2n_Cycle + 0.04183136697557 * 
EducationBasic + -0.27725331198825 * EducationGraduation + 0.15709188532123 * EducationMaster 
+ -0.01933675094701 * Marital_StatusDivorced + 0.52969577969434 * Marital_StatusMarried + 
-0.348697714569 * Marital_StatusSingle + 0.5020342481888 * Marital_StatusTogether ;
413302    +   H15  = H15  +     0.04488332711225 * Education2n_Cycle
413303    +          +     0.01911097443907 * EducationBasic  +    -0.11699443624996 *
413304    +        EducationGraduation  +    -0.07291393566738 * EducationMaster
413305    +          +    -0.04665146013984 * Marital_StatusDivorced
413306    +          +      -0.586219175167 * Marital_StatusMarried
413307    +          +     0.55713543417712 * Marital_StatusSingle
413308    +          +    -0.42208959885332 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.04488332711225 * Education2n_Cycle + 0.01911097443907 * 
EducationBasic + -0.11699443624996 * EducationGraduation + -0.07291393566738 * EducationMaster 
+ -0.04665146013984 * Marital_StatusDivorced + -0.586219175167 * Marital_StatusMarried + 
0.55713543417712 * Marital_StatusSingle + -0.42208959885332 * Marital_StatusTogether ;
413309    +   H16  = H16  +     0.09174117861154 * Education2n_Cycle
413310    +          +     -0.1378945860659 * EducationBasic  +     -0.0728635369665 *
413311    +        EducationGraduation  +     0.29860714824438 * EducationMaster
413312    +          +    -0.05632171154347 * Marital_StatusDivorced
413313    +          +     0.03215547861665 * Marital_StatusMarried
413314    +          +     0.16870781172538 * Marital_StatusSingle
413315    +          +    -0.04883314322676 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.09174117861154 * Education2n_Cycle + -0.1378945860659 * 
EducationBasic + -0.0728635369665 * EducationGraduation + 0.29860714824438 * EducationMaster + 
-0.05632171154347 * Marital_StatusDivorced + 0.03215547861665 * Marital_StatusMarried + 
0.16870781172538 * Marital_StatusSingle + -0.04883314322676 * Marital_StatusTogether ;
413316    +   H17  = H17  +    -0.00343694558117 * Education2n_Cycle
413317    +          +     0.32636427598227 * EducationBasic  +     0.16259654486833 *
413318    +        EducationGraduation  +    -0.00424229454859 * EducationMaster
413319    +          +    -0.21765415159355 * Marital_StatusDivorced
413320    +          +     -0.0542857922075 * Marital_StatusMarried
413321    +          +     0.20679907454933 * Marital_StatusSingle
413322    +          +     0.14976519710725 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H17 = H17 + -0.00343694558117 * Education2n_Cycle + 0.32636427598227 * 
EducationBasic + 0.16259654486833 * EducationGraduation + -0.00424229454859 * EducationMaster 
+ -0.21765415159355 * Marital_StatusDivorced + -0.0542857922075 * Marital_StatusMarried + 
0.20679907454933 * Marital_StatusSingle + 0.14976519710725 * Marital_StatusTogether ;
413323    +   H11  =     0.92977078759503 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 0.92977078759503 + H11 ;
413324    +   H12  =    -0.97970409253156 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -0.97970409253156 + H12 ;
413325    +   H13  =     -0.5001144792196 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.5001144792196 + H13 ;
413326    +   H14  =    -0.90715840862541 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = -0.90715840862541 + H14 ;
413327    +   H15  =     0.87046153389036 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = 0.87046153389036 + H15 ;
413328    +   H16  =     0.49066122767086 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = 0.49066122767086 + H16 ;
413329    +   H17  =    -1.05949763460293 + H17 ;
MPRINT(EM_DIAGRAM):   H17 = -1.05949763460293 + H17 ;
413330    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
413331    +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
413332    +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
413333    +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
413334    +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
413335    +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
413336    +   H17  = TANH(H17 );
MPRINT(EM_DIAGRAM):   H17 = TANH(H17 );
413337    +END;
MPRINT(EM_DIAGRAM):   END;
413338    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
413339    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
413340    +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
413341    +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
413342    +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
413343    +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
413344    +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
413345    +   H17  = .;
MPRINT(EM_DIAGRAM):   H17 = .;
413346    +END;
MPRINT(EM_DIAGRAM):   END;
413347    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
413348    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
413349    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
413350    +
413351    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
413352    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
413353    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
413354    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
413355    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
413356    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
413357    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
413358    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
413359    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
413360    +end;
MPRINT(EM_DIAGRAM):   end;
413361    +else do;
MPRINT(EM_DIAGRAM):   else do;
413362    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
413363    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
413364    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
413365    +   end;
MPRINT(EM_DIAGRAM):   end;
413366    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
413367    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
413368    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
413369    +   end;
MPRINT(EM_DIAGRAM):   end;
413370    +   else do;
MPRINT(EM_DIAGRAM):   else do;
413371    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
413372    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
413373    +   end;
MPRINT(EM_DIAGRAM):   end;
413374    +end;
MPRINT(EM_DIAGRAM):   end;
413375    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
413376    +   P_DepVar1  =    -2.32998401250848 * H11  +     -3.2074078511991 * H12
413377    +          +    -0.69549988605443 * H13  +    -1.74950789108762 * H14
413378    +          +    -1.74013772071344 * H15  +     2.65306089869015 * H16
413379    +          +     0.03700459000906 * H17 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.32998401250848 * H11 + -3.2074078511991 * H12 + 
-0.69549988605443 * H13 + -1.74950789108762 * H14 + -1.74013772071344 * H15 + 2.65306089869015 
* H16 + 0.03700459000906 * H17 ;
413380    +   P_DepVar1  =    -1.51229898726716 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.51229898726716 + P_DepVar1 ;
413381    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
413382    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
413383    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
413384    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
413385    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
413386    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
413387    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
413388    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
413389    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
413390    +END;
MPRINT(EM_DIAGRAM):   END;
413391    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
413392    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
413393    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
413394    +END;
MPRINT(EM_DIAGRAM):   END;
413395    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
413396    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
413397    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
413398    +END;
MPRINT(EM_DIAGRAM):   END;
413399    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
413400    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
413401    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
413402    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
413403    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
413404    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
413405    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
413406    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
413407    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
413408    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
413409    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
413410    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
413411    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
413412    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
413413    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
413414    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
413415    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
413416    +END;
MPRINT(EM_DIAGRAM):   END;
413417    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
413418    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
413419    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
413420    +drop
413421    +H11
413422    +H12
413423    +H13
413424    +H14
413425    +H15
413426    +H16
413427    +H17
413428    +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 H17 ;
413429    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
413430     run;

NOTE: DATA STEP view saved on file EMWS8.NEURAL30_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.META2_VALIDATE.VIEW used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
413431     quit;
413432     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
413433     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
413434     * Neural30: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * Neural30: Computing metadata for TRAIN data;
413435     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;

NOTE: View EMWS8.NEURAL30_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural30\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS8.Neural30_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS8.Neural30_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS8.Neural30_TRAIN out=WORK.M3UFOPFP noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3UFOPFP;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20 
INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M3UFOPFP(keep=name type length label format formatl 
formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then format = strip(format)!!strip(put(formatl, 
best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, 
best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then informat = 
strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, 
best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3UFOPFP;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M3UFOPFP;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M3IFGCTV NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3IFGCTV;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M3IFGCTV;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0BPLXPH(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M3IFGCTV;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3IFGCTV;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 
FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M3IFGCTV;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" 
"MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" 
"QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" "YEAR" "YYMMDD" "YYMON" 
"YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" 
"EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) 
formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = 
"DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) 
formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" 
"NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" 
"SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = 
"DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then 
level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 
'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 
'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ 
('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 
'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 
'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3IFGCTV;
MPRINT(EMADVISECOLUMNS):   set WORK.M3IFGCTV;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= 
"Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= 
"Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower limit" UPPERLIMIT= 
"Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= 
"Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Meta2_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Meta2_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural30_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT 
LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "Neural30";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("P_DEPVAR1") creator = "Neural30";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR1") creator = "Neural30";
MPRINT(EM_DIAGRAM):   when("P_DEPVAR0") creator = "Neural30";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR0") creator = "Neural30";
MPRINT(EM_DIAGRAM):   when("F_DEPVAR") creator = "Neural30";
MPRINT(EM_DIAGRAM):   when("I_DEPVAR") creator = "Neural30";
MPRINT(EM_DIAGRAM):   when("U_DEPVAR") creator = "Neural30";
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "Neural30";
MPRINT(EM_DIAGRAM):   when("DEPVAR") model = "Neural30";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural30: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
413747     data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
413748     set EMWS8.Neural30_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural30_EMINFO;
413749     where DATA='Neural30' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='Neural30' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 
'MODEL');
413750     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.NEURAL30_EMINFO.
      WHERE (DATA='Neural30') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

413751     data EMWS8.Neural30_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS8.Neural30_EMINFO;
413752     length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
413753     input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
413754     cards;
MPRINT(EM_DIAGRAM):   cards;

NOTE: The data set EMWS8.NEURAL30_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   run;
413758     run;
413759     data EMWS8.Neural30_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural30_EMINFO;
413760     set EMWS8.Neural30_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural30_EMINFO WORK.MODELTEMP_INFO;
413761     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.NEURAL30_EMINFO.
NOTE: There were 0 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS8.NEURAL30_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

413762     proc sort data = EMWS8.Neural30_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.Neural30_EMINFO NOTHREADS;
413763     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
413764     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.NEURAL30_EMINFO.
NOTE: The data set EMWS8.NEURAL30_EMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

413765     proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
413766     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
413767     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set EMWS8.FIMPORT_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 1 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

413768     proc sort data = EMWS8.Neural30_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS8.Neural30_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
413769     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
413770     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 3 observations read from the data set EMWS8.NEURAL30_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

413771     data EMWS8.Neural30_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural30_EMINFO;
413772     merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
413773     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
413774     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 3 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS8.NEURAL30_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

413775     proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
413776     delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
413777     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
413778     quit;
MPRINT(EM_DIAGRAM):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

NOTE: View EMWS8.NEURAL30_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
NOTE: View EMWS8.NEURAL30_VALIDATE.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
