MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "19. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "12.28 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                19. April 2016
Time:                12.28 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O3EL02XU 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural30\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O3EL02XU new;
MPRINT(EM_DIAGRAM):   run;
348782     data work.outkey;
MPRINT(EM_DIAGRAM):    data work.outkey;
348783     set EMWS8.Neural30_OUTKEY;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural30_OUTKEY;
348784     if upcase(ROLE) = 'HIDDEN';
MPRINT(EM_DIAGRAM):   if upcase(ROLE) = 'HIDDEN';
348785     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 48 observations read from the data set EMWS8.NEURAL30_OUTKEY.
NOTE: The data set WORK.OUTKEY has 7 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

348786     filename emflow
348786   ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural30\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural30\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural30: Scoring DATA data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
348787     *------------------------------------------------------------*;
348788     * Neural30: Scoring DATA data;
348789     *------------------------------------------------------------*;
348790     data EMWS8.Neural30_TRAIN
348791     / view=EMWS8.Neural30_TRAIN
348792     ;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural30_TRAIN / view=EMWS8.Neural30_TRAIN ;
348793     set EMWS8.Meta2_TRAIN
348794     ;
MPRINT(EM_DIAGRAM):   set EMWS8.Meta2_TRAIN ;
348795     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Neural30\EMFLOWSCORE.sas.
348796    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
348797    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
348798    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
348799    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
348800    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
348801    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
348802    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
348803    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
348804    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
348805    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
348806    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
348807    +LENGTH _WARN_ $4
348808    +      F_DepVar  $ 12
348809    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
348810    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
348811    +
348812    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
348813    +
348814    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
348815    +
348816    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
348817    +
348818    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
348819    +
348820    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
348821    +
348822    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
348823    +
348824    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
348825    +
348826    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
348827    +
348828    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
348829    +
348830    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
348831    +
348832    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
348833    +
348834    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
348835    +
348836    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
348837    +
348838    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
348839    +
348840    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
348841    +
348842    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
348843    +
348844    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
348845    +
348846    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
348847    +
348848    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
348849    +
348850    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
348851    +
348852    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
348853    +
348854    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
348855    +
348856    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
348857    +
348858    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
348859    +
348860    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
348861    +
348862    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
348863    +
348864    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
348865    +
348866    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
348867    +
348868    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
348869    +
348870    +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
348871    +
348872    +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
348873    +
348874    +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
348875    +
348876    +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
348877    +
348878    +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
348879    +
348880    +      label H17 = 'Hidden: H1=7' ;
MPRINT(EM_DIAGRAM):   label H17 = 'Hidden: H1=7' ;
348881    +
348882    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
348883    +
348884    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
348885    +
348886    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
348887    +
348888    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
348889    +
348890    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
348891    +
348892    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
348893    +
348894    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
348895    +
348896    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
348897    +
348898    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
348899    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
348900    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
348901    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
348902    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
348903    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
348904    +end;
MPRINT(EM_DIAGRAM):   end;
348905    +else do;
MPRINT(EM_DIAGRAM):   else do;
348906    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
348907    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
348908    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
348909    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
348910    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
348911    +   end;
MPRINT(EM_DIAGRAM):   end;
348912    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
348913    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
348914    +   end;
MPRINT(EM_DIAGRAM):   end;
348915    +   else do;
MPRINT(EM_DIAGRAM):   else do;
348916    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
348917    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
348918    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
348919    +   end;
MPRINT(EM_DIAGRAM):   end;
348920    +end;
MPRINT(EM_DIAGRAM):   end;
348921    +
348922    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
348923    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
348924    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
348925    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
348926    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
348927    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
348928    +end;
MPRINT(EM_DIAGRAM):   end;
348929    +else do;
MPRINT(EM_DIAGRAM):   else do;
348930    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
348931    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
348932    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
348933    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
348934    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
348935    +   end;
MPRINT(EM_DIAGRAM):   end;
348936    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
348937    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
348938    +   end;
MPRINT(EM_DIAGRAM):   end;
348939    +   else do;
MPRINT(EM_DIAGRAM):   else do;
348940    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
348941    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
348942    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
348943    +   end;
MPRINT(EM_DIAGRAM):   end;
348944    +end;
MPRINT(EM_DIAGRAM):   end;
348945    +
348946    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
348947    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
348948    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
348949    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
348950    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
348951    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
348952    +end;
MPRINT(EM_DIAGRAM):   end;
348953    +else do;
MPRINT(EM_DIAGRAM):   else do;
348954    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
348955    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
348956    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
348957    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
348958    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
348959    +   end;
MPRINT(EM_DIAGRAM):   end;
348960    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
348961    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
348962    +   end;
MPRINT(EM_DIAGRAM):   end;
348963    +   else do;
MPRINT(EM_DIAGRAM):   else do;
348964    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
348965    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
348966    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
348967    +   end;
MPRINT(EM_DIAGRAM):   end;
348968    +end;
MPRINT(EM_DIAGRAM):   end;
348969    +
348970    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
348971    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
348972    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
348973    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
348974    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
348975    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
348976    +end;
MPRINT(EM_DIAGRAM):   end;
348977    +else do;
MPRINT(EM_DIAGRAM):   else do;
348978    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
348979    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
348980    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
348981    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
348982    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
348983    +   end;
MPRINT(EM_DIAGRAM):   end;
348984    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
348985    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
348986    +   end;
MPRINT(EM_DIAGRAM):   end;
348987    +   else do;
MPRINT(EM_DIAGRAM):   else do;
348988    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
348989    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
348990    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
348991    +   end;
MPRINT(EM_DIAGRAM):   end;
348992    +end;
MPRINT(EM_DIAGRAM):   end;
348993    +
348994    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
348995    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
348996    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
348997    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
348998    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
348999    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
349000    +end;
MPRINT(EM_DIAGRAM):   end;
349001    +else do;
MPRINT(EM_DIAGRAM):   else do;
349002    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
349003    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
349004    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
349005    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
349006    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
349007    +   end;
MPRINT(EM_DIAGRAM):   end;
349008    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
349009    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
349010    +   end;
MPRINT(EM_DIAGRAM):   end;
349011    +   else do;
MPRINT(EM_DIAGRAM):   else do;
349012    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
349013    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
349014    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
349015    +   end;
MPRINT(EM_DIAGRAM):   end;
349016    +end;
MPRINT(EM_DIAGRAM):   end;
349017    +
349018    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
349019    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
349020    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
349021    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
349022    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
349023    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
349024    +end;
MPRINT(EM_DIAGRAM):   end;
349025    +else do;
MPRINT(EM_DIAGRAM):   else do;
349026    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
349027    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
349028    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
349029    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
349030    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
349031    +   end;
MPRINT(EM_DIAGRAM):   end;
349032    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
349033    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
349034    +   end;
MPRINT(EM_DIAGRAM):   end;
349035    +   else do;
MPRINT(EM_DIAGRAM):   else do;
349036    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
349037    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
349038    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
349039    +   end;
MPRINT(EM_DIAGRAM):   end;
349040    +end;
MPRINT(EM_DIAGRAM):   end;
349041    +
349042    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
349043    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
349044    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
349045    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
349046    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
349047    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
349048    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
349049    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
349050    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
349051    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
349052    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
349053    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
349054    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
349055    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
349056    +end;
MPRINT(EM_DIAGRAM):   end;
349057    +else do;
MPRINT(EM_DIAGRAM):   else do;
349058    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
349059    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
349060    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
349061    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
349062    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
349063    +   end;
MPRINT(EM_DIAGRAM):   end;
349064    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
349065    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
349066    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
349067    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
349068    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
349069    +   end;
MPRINT(EM_DIAGRAM):   end;
349070    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
349071    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
349072    +   end;
MPRINT(EM_DIAGRAM):   end;
349073    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
349074    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
349075    +   end;
MPRINT(EM_DIAGRAM):   end;
349076    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
349077    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
349078    +   end;
MPRINT(EM_DIAGRAM):   end;
349079    +   else do;
MPRINT(EM_DIAGRAM):   else do;
349080    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
349081    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
349082    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
349083    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
349084    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
349085    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
349086    +   end;
MPRINT(EM_DIAGRAM):   end;
349087    +end;
MPRINT(EM_DIAGRAM):   end;
349088    +
349089    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
349090    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
349091    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
349092    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
349093    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
349094    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
349095    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
349096    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
349097    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
349098    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
349099    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
349100    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
349101    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
349102    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
349103    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
349104    +end;
MPRINT(EM_DIAGRAM):   end;
349105    +else do;
MPRINT(EM_DIAGRAM):   else do;
349106    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
349107    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
349108    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
349109    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
349110    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
349111    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
349112    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
349113    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
349114    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
349115    +         end;
MPRINT(EM_DIAGRAM):   end;
349116    +         else do;
MPRINT(EM_DIAGRAM):   else do;
349117    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
349118    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
349119    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
349120    +            end;
MPRINT(EM_DIAGRAM):   end;
349121    +         end;
MPRINT(EM_DIAGRAM):   end;
349122    +      end;
MPRINT(EM_DIAGRAM):   end;
349123    +      else do;
MPRINT(EM_DIAGRAM):   else do;
349124    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
349125    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
349126    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
349127    +         end;
MPRINT(EM_DIAGRAM):   end;
349128    +      end;
MPRINT(EM_DIAGRAM):   end;
349129    +   end;
MPRINT(EM_DIAGRAM):   end;
349130    +   else do;
MPRINT(EM_DIAGRAM):   else do;
349131    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
349132    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
349133    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
349134    +      end;
MPRINT(EM_DIAGRAM):   end;
349135    +      else do;
MPRINT(EM_DIAGRAM):   else do;
349136    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
349137    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
349138    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
349139    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
349140    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
349141    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
349142    +         end;
MPRINT(EM_DIAGRAM):   end;
349143    +      end;
MPRINT(EM_DIAGRAM):   end;
349144    +   end;
MPRINT(EM_DIAGRAM):   end;
349145    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
349146    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
349147    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
349148    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
349149    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
349150    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
349151    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
349152    +   end;
MPRINT(EM_DIAGRAM):   end;
349153    +end;
MPRINT(EM_DIAGRAM):   end;
349154    +
349155    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
349156    +*** Checking missing input Interval
349157    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
349158    +
349159    +IF NMISS(
349160    +   Income ,
349161    +   Kidhome ,
349162    +   MntFishProducts ,
349163    +   MntFruits ,
349164    +   MntGoldProds ,
349165    +   MntMeatProducts ,
349166    +   MntSweetProducts ,
349167    +   MntWines ,
349168    +   NumCatalogPurchases ,
349169    +   NumDealsPurchases ,
349170    +   NumStorePurchases ,
349171    +   NumWebPurchases ,
349172    +   NumWebVisitsMonth ,
349173    +   Recency ,
349174    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Income , Kidhome , MntFishProducts , MntFruits , MntGoldProds 
, MntMeatProducts , MntSweetProducts , MntWines , NumCatalogPurchases , NumDealsPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , Recency , Teenhome ) THEN DO;
349175    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
349176    +
349177    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
349178    +END;
MPRINT(EM_DIAGRAM):   END;
349179    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
349180    +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
349181    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
349182    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
349183    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
349184    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
349185    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
349186    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
349187    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
349188    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
349189    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
349190    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
349191    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
349192    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
349193    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
349194    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
349195    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
349196    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
349197    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
349198    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
349199    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
349200    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
349201    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
349202    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
349203    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
349204    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
349205    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
349206    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
349207    +END;
MPRINT(EM_DIAGRAM):   END;
349208    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
349209    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
349210    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
349211    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
349212    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
349213    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
349214    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
349215    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
349216    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
349217    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
349218    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
349219    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
349220    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
349221    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
349222    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
349223    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
349224    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
349225    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
349226    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
349227    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
349228    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
349229    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
349230    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
349231    +   ELSE S_NumCatalogPurchases
349232    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
349233    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
349234    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
349235    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
349236    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
349237    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
349238    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
349239    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
349240    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
349241    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
349242    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
349243    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
349244    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
349245    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
349246    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
349247    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
349248    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
349249    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
349250    +END;
MPRINT(EM_DIAGRAM):   END;
349251    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
349252    +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
349253    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
349254    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
349255    +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
349256    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
349257    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
349258    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
349259    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
349260    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
349261    +   H11  =    -0.59781928082243 * S_Income  +     0.49830142312288 * S_Kidhome
349262    +          +    -0.00045024466632 * S_MntFishProducts
349263    +          +    -0.22421712710333 * S_MntFruits  +    -0.19010144853469 *
349264    +        S_MntGoldProds  +    -0.53373773623953 * S_MntMeatProducts
349265    +          +     0.17506402203495 * S_MntSweetProducts
349266    +          +    -0.28551398649672 * S_MntWines  +       0.019870944777 *
349267    +        S_NumCatalogPurchases  +     0.03537776181533 * S_NumDealsPurchases
349268    +          +     0.05580468715403 * S_NumStorePurchases
349269    +          +    -0.29131611132704 * S_NumWebPurchases
349270    +          +    -0.40690084025802 * S_NumWebVisitsMonth
349271    +          +     0.48640195058901 * S_Recency  +     0.31820890239661 *
349272    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = -0.59781928082243 * S_Income + 0.49830142312288 * S_Kidhome + 
-0.00045024466632 * S_MntFishProducts + -0.22421712710333 * S_MntFruits + -0.19010144853469 * 
S_MntGoldProds + -0.53373773623953 * S_MntMeatProducts + 0.17506402203495 * S_MntSweetProducts 
+ -0.28551398649672 * S_MntWines + 0.019870944777 * S_NumCatalogPurchases + 0.03537776181533 * 
S_NumDealsPurchases + 0.05580468715403 * S_NumStorePurchases + -0.29131611132704 * 
S_NumWebPurchases + -0.40690084025802 * S_NumWebVisitsMonth + 0.48640195058901 * S_Recency + 
0.31820890239661 * S_Teenhome ;
349273    +   H12  =    -0.41871753512335 * S_Income  +      0.6025072461821 * S_Kidhome
349274    +          +    -0.03132724937716 * S_MntFishProducts
349275    +          +     0.19114182835046 * S_MntFruits  +     0.13483463809539 *
349276    +        S_MntGoldProds  +    -0.63593603749443 * S_MntMeatProducts
349277    +          +    -0.07569302401223 * S_MntSweetProducts
349278    +          +     0.67050112032753 * S_MntWines  +    -0.23159243932208 *
349279    +        S_NumCatalogPurchases  +    -0.07183698407409 * S_NumDealsPurchases
349280    +          +     0.54619681114623 * S_NumStorePurchases
349281    +          +     0.44325129671249 * S_NumWebPurchases
349282    +          +    -1.25054401670605 * S_NumWebVisitsMonth
349283    +          +      1.2376290916151 * S_Recency  +     0.43747371517287 *
349284    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -0.41871753512335 * S_Income + 0.6025072461821 * S_Kidhome + 
-0.03132724937716 * S_MntFishProducts + 0.19114182835046 * S_MntFruits + 0.13483463809539 * 
S_MntGoldProds + -0.63593603749443 * S_MntMeatProducts + -0.07569302401223 * 
S_MntSweetProducts + 0.67050112032753 * S_MntWines + -0.23159243932208 * S_NumCatalogPurchases 
+ -0.07183698407409 * S_NumDealsPurchases + 0.54619681114623 * S_NumStorePurchases + 
0.44325129671249 * S_NumWebPurchases + -1.25054401670605 * S_NumWebVisitsMonth + 
1.2376290916151 * S_Recency + 0.43747371517287 * S_Teenhome ;
349285    +   H13  =      0.0713579189325 * S_Income  +    -0.05759612462349 * S_Kidhome
349286    +          +     0.07631777381832 * S_MntFishProducts
349287    +          +    -0.00387785552441 * S_MntFruits  +    -0.21868916314192 *
349288    +        S_MntGoldProds  +       0.072623883197 * S_MntMeatProducts
349289    +          +     0.12637946833766 * S_MntSweetProducts
349290    +          +    -0.37981663841124 * S_MntWines  +    -0.89958525403162 *
349291    +        S_NumCatalogPurchases  +    -0.17471885937598 * S_NumDealsPurchases
349292    +          +     0.15845618359126 * S_NumStorePurchases
349293    +          +    -0.33296932705082 * S_NumWebPurchases
349294    +          +      0.0260072296349 * S_NumWebVisitsMonth
349295    +          +     0.02544749712977 * S_Recency  +    -0.17381561661022 *
349296    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = 0.0713579189325 * S_Income + -0.05759612462349 * S_Kidhome + 
0.07631777381832 * S_MntFishProducts + -0.00387785552441 * S_MntFruits + -0.21868916314192 * 
S_MntGoldProds + 0.072623883197 * S_MntMeatProducts + 0.12637946833766 * S_MntSweetProducts + 
-0.37981663841124 * S_MntWines + -0.89958525403162 * S_NumCatalogPurchases + -0.17471885937598 
* S_NumDealsPurchases + 0.15845618359126 * S_NumStorePurchases + -0.33296932705082 * 
S_NumWebPurchases + 0.0260072296349 * S_NumWebVisitsMonth + 0.02544749712977 * S_Recency + 
-0.17381561661022 * S_Teenhome ;
349297    +   H14  =    -0.47498613710851 * S_Income  +     0.09339198401437 * S_Kidhome
349298    +          +    -0.13642352619174 * S_MntFishProducts
349299    +          +     0.27167245582117 * S_MntFruits  +    -0.00579747559996 *
349300    +        S_MntGoldProds  +     0.31591387319577 * S_MntMeatProducts
349301    +          +     0.14125815807238 * S_MntSweetProducts
349302    +          +     0.07862916790983 * S_MntWines  +    -0.58905358997534 *
349303    +        S_NumCatalogPurchases  +     -0.5574069633995 * S_NumDealsPurchases
349304    +          +     0.19718828261526 * S_NumStorePurchases
349305    +          +    -0.24156925391919 * S_NumWebPurchases
349306    +          +    -0.25711078938749 * S_NumWebVisitsMonth
349307    +          +     0.38883063223812 * S_Recency  +     -0.2396731334184 *
349308    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = -0.47498613710851 * S_Income + 0.09339198401437 * S_Kidhome + 
-0.13642352619174 * S_MntFishProducts + 0.27167245582117 * S_MntFruits + -0.00579747559996 * 
S_MntGoldProds + 0.31591387319577 * S_MntMeatProducts + 0.14125815807238 * S_MntSweetProducts 
+ 0.07862916790983 * S_MntWines + -0.58905358997534 * S_NumCatalogPurchases + -0.5574069633995 
* S_NumDealsPurchases + 0.19718828261526 * S_NumStorePurchases + -0.24156925391919 * 
S_NumWebPurchases + -0.25711078938749 * S_NumWebVisitsMonth + 0.38883063223812 * S_Recency + 
-0.2396731334184 * S_Teenhome ;
349309    +   H15  =     0.24624924979609 * S_Income  +    -0.37052106312109 * S_Kidhome
349310    +          +     0.13579628643404 * S_MntFishProducts
349311    +          +    -0.05263868911164 * S_MntFruits  +    -0.01504675049991 *
349312    +        S_MntGoldProds  +     -0.4202277804998 * S_MntMeatProducts
349313    +          +    -0.01039299374426 * S_MntSweetProducts
349314    +          +     0.71197420459135 * S_MntWines  +    -0.35973505575029 *
349315    +        S_NumCatalogPurchases  +     -0.4415445481482 * S_NumDealsPurchases
349316    +          +     0.58897740652611 * S_NumStorePurchases
349317    +          +     0.24564485851062 * S_NumWebPurchases
349318    +          +    -0.13976320243555 * S_NumWebVisitsMonth
349319    +          +      0.1199367613063 * S_Recency  +    -0.15283161418313 *
349320    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H15 = 0.24624924979609 * S_Income + -0.37052106312109 * S_Kidhome + 
0.13579628643404 * S_MntFishProducts + -0.05263868911164 * S_MntFruits + -0.01504675049991 * 
S_MntGoldProds + -0.4202277804998 * S_MntMeatProducts + -0.01039299374426 * S_MntSweetProducts 
+ 0.71197420459135 * S_MntWines + -0.35973505575029 * S_NumCatalogPurchases + -0.4415445481482 
* S_NumDealsPurchases + 0.58897740652611 * S_NumStorePurchases + 0.24564485851062 * 
S_NumWebPurchases + -0.13976320243555 * S_NumWebVisitsMonth + 0.1199367613063 * S_Recency + 
-0.15283161418313 * S_Teenhome ;
349321    +   H16  =     0.23493799758749 * S_Income  +     0.07038278079069 * S_Kidhome
349322    +          +    -0.45448768538367 * S_MntFishProducts
349323    +          +     0.02622380709004 * S_MntFruits  +     0.14726698184115 *
349324    +        S_MntGoldProds  +     0.65760183569767 * S_MntMeatProducts
349325    +          +    -0.16936256277023 * S_MntSweetProducts
349326    +          +    -0.40647066866305 * S_MntWines  +     0.99645493491726 *
349327    +        S_NumCatalogPurchases  +     0.65587239961358 * S_NumDealsPurchases
349328    +          +    -0.22309716855774 * S_NumStorePurchases
349329    +          +    -0.61204529910842 * S_NumWebPurchases
349330    +          +     0.43742228867615 * S_NumWebVisitsMonth
349331    +          +    -0.56099034256092 * S_Recency  +     -0.2445351671148 *
349332    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H16 = 0.23493799758749 * S_Income + 0.07038278079069 * S_Kidhome + 
-0.45448768538367 * S_MntFishProducts + 0.02622380709004 * S_MntFruits + 0.14726698184115 * 
S_MntGoldProds + 0.65760183569767 * S_MntMeatProducts + -0.16936256277023 * S_MntSweetProducts 
+ -0.40647066866305 * S_MntWines + 0.99645493491726 * S_NumCatalogPurchases + 0.65587239961358 
* S_NumDealsPurchases + -0.22309716855774 * S_NumStorePurchases + -0.61204529910842 * 
S_NumWebPurchases + 0.43742228867615 * S_NumWebVisitsMonth + -0.56099034256092 * S_Recency + 
-0.2445351671148 * S_Teenhome ;
349333    +   H17  =    -0.00107702057163 * S_Income  +     0.25116135719972 * S_Kidhome
349334    +          +    -0.04540308470858 * S_MntFishProducts
349335    +          +        0.21487241577 * S_MntFruits  +    -0.12914913547414 *
349336    +        S_MntGoldProds  +    -0.04149021191395 * S_MntMeatProducts
349337    +          +     0.02853521979141 * S_MntSweetProducts
349338    +          +     -0.2435805887418 * S_MntWines  +    -0.04509621661407 *
349339    +        S_NumCatalogPurchases  +    -0.26492036720429 * S_NumDealsPurchases
349340    +          +     -0.3299561248944 * S_NumStorePurchases
349341    +          +    -0.09806597448224 * S_NumWebPurchases
349342    +          +      0.0427056351245 * S_NumWebVisitsMonth
349343    +          +     0.03953235628202 * S_Recency  +    -0.11317308767713 *
349344    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H17 = -0.00107702057163 * S_Income + 0.25116135719972 * S_Kidhome + 
-0.04540308470858 * S_MntFishProducts + 0.21487241577 * S_MntFruits + -0.12914913547414 * 
S_MntGoldProds + -0.04149021191395 * S_MntMeatProducts + 0.02853521979141 * S_MntSweetProducts 
+ -0.2435805887418 * S_MntWines + -0.04509621661407 * S_NumCatalogPurchases + 
-0.26492036720429 * S_NumDealsPurchases + -0.3299561248944 * S_NumStorePurchases + 
-0.09806597448224 * S_NumWebPurchases + 0.0427056351245 * S_NumWebVisitsMonth + 
0.03953235628202 * S_Recency + -0.11317308767713 * S_Teenhome ;
349345    +   H11  = H11  +     0.50033674561531 * AcceptedCmp10
349346    +          +    -0.02275693117286 * AcceptedCmp20  +     0.31338891533156 *
349347    +        AcceptedCmp30  +      0.3901248845706 * AcceptedCmp40
349348    +          +     0.44314358358111 * AcceptedCmp50  +    -0.20444060864498 *
349349    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.50033674561531 * AcceptedCmp10 + -0.02275693117286 * 
AcceptedCmp20 + 0.31338891533156 * AcceptedCmp30 + 0.3901248845706 * AcceptedCmp40 + 
0.44314358358111 * AcceptedCmp50 + -0.20444060864498 * Complain0 ;
349350    +   H12  = H12  +     0.30103938822692 * AcceptedCmp10
349351    +          +     0.54298746723422 * AcceptedCmp20  +     0.50401040035525 *
349352    +        AcceptedCmp30  +     0.43447710825306 * AcceptedCmp40
349353    +          +     0.60794421030027 * AcceptedCmp50  +    -0.28114274461319 *
349354    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.30103938822692 * AcceptedCmp10 + 0.54298746723422 * 
AcceptedCmp20 + 0.50401040035525 * AcceptedCmp30 + 0.43447710825306 * AcceptedCmp40 + 
0.60794421030027 * AcceptedCmp50 + -0.28114274461319 * Complain0 ;
349355    +   H13  = H13  +     -0.1890212967757 * AcceptedCmp10
349356    +          +    -0.11487406996391 * AcceptedCmp20  +    -0.22740618754863 *
349357    +        AcceptedCmp30  +      0.2354510231918 * AcceptedCmp40
349358    +          +    -0.14327434649067 * AcceptedCmp50  +    -0.17839080850556 *
349359    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.1890212967757 * AcceptedCmp10 + -0.11487406996391 * 
AcceptedCmp20 + -0.22740618754863 * AcceptedCmp30 + 0.2354510231918 * AcceptedCmp40 + 
-0.14327434649067 * AcceptedCmp50 + -0.17839080850556 * Complain0 ;
349360    +   H14  = H14  +    -0.28194187416219 * AcceptedCmp10
349361    +          +     0.11732089254624 * AcceptedCmp20  +     0.34964075536156 *
349362    +        AcceptedCmp30  +     0.05772396286169 * AcceptedCmp40
349363    +          +    -0.08671748651826 * AcceptedCmp50  +      0.0629540108407 *
349364    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.28194187416219 * AcceptedCmp10 + 0.11732089254624 * 
AcceptedCmp20 + 0.34964075536156 * AcceptedCmp30 + 0.05772396286169 * AcceptedCmp40 + 
-0.08671748651826 * AcceptedCmp50 + 0.0629540108407 * Complain0 ;
349365    +   H15  = H15  +    -0.01058257322803 * AcceptedCmp10
349366    +          +     0.26755355732587 * AcceptedCmp20  +     0.40856661734724 *
349367    +        AcceptedCmp30  +     0.02977117354989 * AcceptedCmp40
349368    +          +       0.073655049734 * AcceptedCmp50  +     0.25562048226555 *
349369    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + -0.01058257322803 * AcceptedCmp10 + 0.26755355732587 * 
AcceptedCmp20 + 0.40856661734724 * AcceptedCmp30 + 0.02977117354989 * AcceptedCmp40 + 
0.073655049734 * AcceptedCmp50 + 0.25562048226555 * Complain0 ;
349370    +   H16  = H16  +    -0.65590117532084 * AcceptedCmp10
349371    +          +    -0.31314161223579 * AcceptedCmp20  +    -0.18863165264573 *
349372    +        AcceptedCmp30  +    -0.18832338914237 * AcceptedCmp40
349373    +          +    -0.53765749471786 * AcceptedCmp50  +     0.17409401877513 *
349374    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H16 = H16 + -0.65590117532084 * AcceptedCmp10 + -0.31314161223579 * 
AcceptedCmp20 + -0.18863165264573 * AcceptedCmp30 + -0.18832338914237 * AcceptedCmp40 + 
-0.53765749471786 * AcceptedCmp50 + 0.17409401877513 * Complain0 ;
349375    +   H17  = H17  +    -0.42253231673718 * AcceptedCmp10
349376    +          +    -0.40954345229557 * AcceptedCmp20  +    -0.30577523080786 *
349377    +        AcceptedCmp30  +    -0.22396670899437 * AcceptedCmp40
349378    +          +     0.05757251451004 * AcceptedCmp50  +     0.07813950542487 *
349379    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H17 = H17 + -0.42253231673718 * AcceptedCmp10 + -0.40954345229557 * 
AcceptedCmp20 + -0.30577523080786 * AcceptedCmp30 + -0.22396670899437 * AcceptedCmp40 + 
0.05757251451004 * AcceptedCmp50 + 0.07813950542487 * Complain0 ;
349380    +   H11  = H11  +    -0.14483542022901 * Education2n_Cycle
349381    +          +     0.32176647745332 * EducationBasic  +     0.00900796305072 *
349382    +        EducationGraduation  +    -0.00243484910123 * EducationMaster
349383    +          +    -0.22074132229211 * Marital_StatusDivorced
349384    +          +     0.70282742634901 * Marital_StatusMarried
349385    +          +     -0.5926244797961 * Marital_StatusSingle
349386    +          +     0.21342221410999 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.14483542022901 * Education2n_Cycle + 0.32176647745332 * 
EducationBasic + 0.00900796305072 * EducationGraduation + -0.00243484910123 * EducationMaster 
+ -0.22074132229211 * Marital_StatusDivorced + 0.70282742634901 * Marital_StatusMarried + 
-0.5926244797961 * Marital_StatusSingle + 0.21342221410999 * Marital_StatusTogether ;
349387    +   H12  = H12  +    -0.10242932200247 * Education2n_Cycle
349388    +          +     0.34937926721317 * EducationBasic  +    -0.20395479511872 *
349389    +        EducationGraduation  +     0.31210327899339 * EducationMaster
349390    +          +    -0.46376392175295 * Marital_StatusDivorced
349391    +          +       0.589453579718 * Marital_StatusMarried
349392    +          +    -0.45342174978481 * Marital_StatusSingle
349393    +          +     0.70517120763557 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.10242932200247 * Education2n_Cycle + 0.34937926721317 * 
EducationBasic + -0.20395479511872 * EducationGraduation + 0.31210327899339 * EducationMaster 
+ -0.46376392175295 * Marital_StatusDivorced + 0.589453579718 * Marital_StatusMarried + 
-0.45342174978481 * Marital_StatusSingle + 0.70517120763557 * Marital_StatusTogether ;
349394    +   H13  = H13  +     0.24858755570324 * Education2n_Cycle
349395    +          +     0.07360039359386 * EducationBasic  +    -0.42563056620078 *
349396    +        EducationGraduation  +    -0.25970840250323 * EducationMaster
349397    +          +     0.26981972015482 * Marital_StatusDivorced
349398    +          +    -0.01707364864139 * Marital_StatusMarried
349399    +          +     0.38646060840009 * Marital_StatusSingle
349400    +          +     0.19694047086013 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.24858755570324 * Education2n_Cycle + 0.07360039359386 * 
EducationBasic + -0.42563056620078 * EducationGraduation + -0.25970840250323 * EducationMaster 
+ 0.26981972015482 * Marital_StatusDivorced + -0.01707364864139 * Marital_StatusMarried + 
0.38646060840009 * Marital_StatusSingle + 0.19694047086013 * Marital_StatusTogether ;
349401    +   H14  = H14  +     0.22577522124265 * Education2n_Cycle
349402    +          +     0.04183136697557 * EducationBasic  +    -0.27725331198825 *
349403    +        EducationGraduation  +     0.15709188532123 * EducationMaster
349404    +          +    -0.01933675094701 * Marital_StatusDivorced
349405    +          +     0.52969577969434 * Marital_StatusMarried
349406    +          +      -0.348697714569 * Marital_StatusSingle
349407    +          +      0.5020342481888 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.22577522124265 * Education2n_Cycle + 0.04183136697557 * 
EducationBasic + -0.27725331198825 * EducationGraduation + 0.15709188532123 * EducationMaster 
+ -0.01933675094701 * Marital_StatusDivorced + 0.52969577969434 * Marital_StatusMarried + 
-0.348697714569 * Marital_StatusSingle + 0.5020342481888 * Marital_StatusTogether ;
349408    +   H15  = H15  +     0.04488332711225 * Education2n_Cycle
349409    +          +     0.01911097443907 * EducationBasic  +    -0.11699443624996 *
349410    +        EducationGraduation  +    -0.07291393566738 * EducationMaster
349411    +          +    -0.04665146013984 * Marital_StatusDivorced
349412    +          +      -0.586219175167 * Marital_StatusMarried
349413    +          +     0.55713543417712 * Marital_StatusSingle
349414    +          +    -0.42208959885332 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.04488332711225 * Education2n_Cycle + 0.01911097443907 * 
EducationBasic + -0.11699443624996 * EducationGraduation + -0.07291393566738 * EducationMaster 
+ -0.04665146013984 * Marital_StatusDivorced + -0.586219175167 * Marital_StatusMarried + 
0.55713543417712 * Marital_StatusSingle + -0.42208959885332 * Marital_StatusTogether ;
349415    +   H16  = H16  +     0.09174117861154 * Education2n_Cycle
349416    +          +     -0.1378945860659 * EducationBasic  +     -0.0728635369665 *
349417    +        EducationGraduation  +     0.29860714824438 * EducationMaster
349418    +          +    -0.05632171154347 * Marital_StatusDivorced
349419    +          +     0.03215547861665 * Marital_StatusMarried
349420    +          +     0.16870781172538 * Marital_StatusSingle
349421    +          +    -0.04883314322676 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.09174117861154 * Education2n_Cycle + -0.1378945860659 * 
EducationBasic + -0.0728635369665 * EducationGraduation + 0.29860714824438 * EducationMaster + 
-0.05632171154347 * Marital_StatusDivorced + 0.03215547861665 * Marital_StatusMarried + 
0.16870781172538 * Marital_StatusSingle + -0.04883314322676 * Marital_StatusTogether ;
349422    +   H17  = H17  +    -0.00343694558117 * Education2n_Cycle
349423    +          +     0.32636427598227 * EducationBasic  +     0.16259654486833 *
349424    +        EducationGraduation  +    -0.00424229454859 * EducationMaster
349425    +          +    -0.21765415159355 * Marital_StatusDivorced
349426    +          +     -0.0542857922075 * Marital_StatusMarried
349427    +          +     0.20679907454933 * Marital_StatusSingle
349428    +          +     0.14976519710725 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H17 = H17 + -0.00343694558117 * Education2n_Cycle + 0.32636427598227 * 
EducationBasic + 0.16259654486833 * EducationGraduation + -0.00424229454859 * EducationMaster 
+ -0.21765415159355 * Marital_StatusDivorced + -0.0542857922075 * Marital_StatusMarried + 
0.20679907454933 * Marital_StatusSingle + 0.14976519710725 * Marital_StatusTogether ;
349429    +   H11  =     0.92977078759503 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 0.92977078759503 + H11 ;
349430    +   H12  =    -0.97970409253156 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -0.97970409253156 + H12 ;
349431    +   H13  =     -0.5001144792196 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.5001144792196 + H13 ;
349432    +   H14  =    -0.90715840862541 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = -0.90715840862541 + H14 ;
349433    +   H15  =     0.87046153389036 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = 0.87046153389036 + H15 ;
349434    +   H16  =     0.49066122767086 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = 0.49066122767086 + H16 ;
349435    +   H17  =    -1.05949763460293 + H17 ;
MPRINT(EM_DIAGRAM):   H17 = -1.05949763460293 + H17 ;
349436    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
349437    +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
349438    +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
349439    +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
349440    +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
349441    +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
349442    +   H17  = TANH(H17 );
MPRINT(EM_DIAGRAM):   H17 = TANH(H17 );
349443    +END;
MPRINT(EM_DIAGRAM):   END;
349444    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
349445    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
349446    +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
349447    +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
349448    +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
349449    +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
349450    +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
349451    +   H17  = .;
MPRINT(EM_DIAGRAM):   H17 = .;
349452    +END;
MPRINT(EM_DIAGRAM):   END;
349453    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
349454    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
349455    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
349456    +
349457    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
349458    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
349459    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
349460    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
349461    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
349462    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
349463    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
349464    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
349465    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
349466    +end;
MPRINT(EM_DIAGRAM):   end;
349467    +else do;
MPRINT(EM_DIAGRAM):   else do;
349468    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
349469    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
349470    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
349471    +   end;
MPRINT(EM_DIAGRAM):   end;
349472    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
349473    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
349474    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
349475    +   end;
MPRINT(EM_DIAGRAM):   end;
349476    +   else do;
MPRINT(EM_DIAGRAM):   else do;
349477    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
349478    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
349479    +   end;
MPRINT(EM_DIAGRAM):   end;
349480    +end;
MPRINT(EM_DIAGRAM):   end;
349481    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
349482    +   P_DepVar1  =    -2.32998401250848 * H11  +     -3.2074078511991 * H12
349483    +          +    -0.69549988605443 * H13  +    -1.74950789108762 * H14
349484    +          +    -1.74013772071344 * H15  +     2.65306089869015 * H16
349485    +          +     0.03700459000906 * H17 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.32998401250848 * H11 + -3.2074078511991 * H12 + 
-0.69549988605443 * H13 + -1.74950789108762 * H14 + -1.74013772071344 * H15 + 2.65306089869015 
* H16 + 0.03700459000906 * H17 ;
349486    +   P_DepVar1  =    -1.51229898726716 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.51229898726716 + P_DepVar1 ;
349487    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
349488    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
349489    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
349490    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
349491    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
349492    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
349493    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
349494    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
349495    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
349496    +END;
MPRINT(EM_DIAGRAM):   END;
349497    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
349498    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
349499    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
349500    +END;
MPRINT(EM_DIAGRAM):   END;
349501    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
349502    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
349503    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
349504    +END;
MPRINT(EM_DIAGRAM):   END;
349505    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
349506    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
349507    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
349508    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
349509    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
349510    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
349511    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
349512    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
349513    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
349514    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
349515    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
349516    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
349517    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
349518    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
349519    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
349520    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
349521    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
349522    +END;
MPRINT(EM_DIAGRAM):   END;
349523    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
349524    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
349525    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
349526    +drop
349527    +H11
349528    +H12
349529    +H13
349530    +H14
349531    +H15
349532    +H16
349533    +H17
349534    +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 H17 ;
349535    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
349536     run;

NOTE: DATA STEP view saved on file EMWS8.NEURAL30_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.META2_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(EM_DIAGRAM):   quit;
349537     quit;
349538     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
349539     filename emflow
349539   ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural30\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural30\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural30: Scoring VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
349540     *------------------------------------------------------------*;
349541     * Neural30: Scoring VALIDATE data;
349542     *------------------------------------------------------------*;
349543     data EMWS8.Neural30_VALIDATE
349544     / view=EMWS8.Neural30_VALIDATE
349545     ;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural30_VALIDATE / view=EMWS8.Neural30_VALIDATE ;
349546     set EMWS8.Meta2_VALIDATE
349547     ;
MPRINT(EM_DIAGRAM):   set EMWS8.Meta2_VALIDATE ;
349548     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Neural30\EMFLOWSCORE.sas.
349549    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
349550    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
349551    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
349552    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
349553    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
349554    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
349555    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
349556    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
349557    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
349558    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
349559    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
349560    +LENGTH _WARN_ $4
349561    +      F_DepVar  $ 12
349562    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
349563    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
349564    +
349565    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
349566    +
349567    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
349568    +
349569    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
349570    +
349571    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
349572    +
349573    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
349574    +
349575    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
349576    +
349577    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
349578    +
349579    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
349580    +
349581    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
349582    +
349583    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
349584    +
349585    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
349586    +
349587    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
349588    +
349589    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
349590    +
349591    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
349592    +
349593    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
349594    +
349595    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
349596    +
349597    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
349598    +
349599    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
349600    +
349601    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
349602    +
349603    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
349604    +
349605    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
349606    +
349607    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
349608    +
349609    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
349610    +
349611    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
349612    +
349613    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
349614    +
349615    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
349616    +
349617    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
349618    +
349619    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
349620    +
349621    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
349622    +
349623    +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
349624    +
349625    +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
349626    +
349627    +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
349628    +
349629    +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
349630    +
349631    +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
349632    +
349633    +      label H17 = 'Hidden: H1=7' ;
MPRINT(EM_DIAGRAM):   label H17 = 'Hidden: H1=7' ;
349634    +
349635    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
349636    +
349637    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
349638    +
349639    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
349640    +
349641    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
349642    +
349643    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
349644    +
349645    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
349646    +
349647    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
349648    +
349649    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
349650    +
349651    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
349652    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
349653    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
349654    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
349655    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
349656    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
349657    +end;
MPRINT(EM_DIAGRAM):   end;
349658    +else do;
MPRINT(EM_DIAGRAM):   else do;
349659    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
349660    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
349661    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
349662    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
349663    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
349664    +   end;
MPRINT(EM_DIAGRAM):   end;
349665    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
349666    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
349667    +   end;
MPRINT(EM_DIAGRAM):   end;
349668    +   else do;
MPRINT(EM_DIAGRAM):   else do;
349669    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
349670    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
349671    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
349672    +   end;
MPRINT(EM_DIAGRAM):   end;
349673    +end;
MPRINT(EM_DIAGRAM):   end;
349674    +
349675    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
349676    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
349677    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
349678    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
349679    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
349680    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
349681    +end;
MPRINT(EM_DIAGRAM):   end;
349682    +else do;
MPRINT(EM_DIAGRAM):   else do;
349683    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
349684    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
349685    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
349686    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
349687    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
349688    +   end;
MPRINT(EM_DIAGRAM):   end;
349689    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
349690    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
349691    +   end;
MPRINT(EM_DIAGRAM):   end;
349692    +   else do;
MPRINT(EM_DIAGRAM):   else do;
349693    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
349694    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
349695    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
349696    +   end;
MPRINT(EM_DIAGRAM):   end;
349697    +end;
MPRINT(EM_DIAGRAM):   end;
349698    +
349699    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
349700    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
349701    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
349702    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
349703    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
349704    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
349705    +end;
MPRINT(EM_DIAGRAM):   end;
349706    +else do;
MPRINT(EM_DIAGRAM):   else do;
349707    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
349708    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
349709    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
349710    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
349711    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
349712    +   end;
MPRINT(EM_DIAGRAM):   end;
349713    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
349714    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
349715    +   end;
MPRINT(EM_DIAGRAM):   end;
349716    +   else do;
MPRINT(EM_DIAGRAM):   else do;
349717    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
349718    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
349719    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
349720    +   end;
MPRINT(EM_DIAGRAM):   end;
349721    +end;
MPRINT(EM_DIAGRAM):   end;
349722    +
349723    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
349724    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
349725    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
349726    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
349727    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
349728    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
349729    +end;
MPRINT(EM_DIAGRAM):   end;
349730    +else do;
MPRINT(EM_DIAGRAM):   else do;
349731    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
349732    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
349733    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
349734    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
349735    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
349736    +   end;
MPRINT(EM_DIAGRAM):   end;
349737    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
349738    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
349739    +   end;
MPRINT(EM_DIAGRAM):   end;
349740    +   else do;
MPRINT(EM_DIAGRAM):   else do;
349741    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
349742    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
349743    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
349744    +   end;
MPRINT(EM_DIAGRAM):   end;
349745    +end;
MPRINT(EM_DIAGRAM):   end;
349746    +
349747    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
349748    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
349749    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
349750    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
349751    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
349752    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
349753    +end;
MPRINT(EM_DIAGRAM):   end;
349754    +else do;
MPRINT(EM_DIAGRAM):   else do;
349755    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
349756    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
349757    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
349758    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
349759    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
349760    +   end;
MPRINT(EM_DIAGRAM):   end;
349761    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
349762    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
349763    +   end;
MPRINT(EM_DIAGRAM):   end;
349764    +   else do;
MPRINT(EM_DIAGRAM):   else do;
349765    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
349766    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
349767    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
349768    +   end;
MPRINT(EM_DIAGRAM):   end;
349769    +end;
MPRINT(EM_DIAGRAM):   end;
349770    +
349771    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
349772    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
349773    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
349774    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
349775    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
349776    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
349777    +end;
MPRINT(EM_DIAGRAM):   end;
349778    +else do;
MPRINT(EM_DIAGRAM):   else do;
349779    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
349780    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
349781    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
349782    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
349783    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
349784    +   end;
MPRINT(EM_DIAGRAM):   end;
349785    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
349786    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
349787    +   end;
MPRINT(EM_DIAGRAM):   end;
349788    +   else do;
MPRINT(EM_DIAGRAM):   else do;
349789    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
349790    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
349791    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
349792    +   end;
MPRINT(EM_DIAGRAM):   end;
349793    +end;
MPRINT(EM_DIAGRAM):   end;
349794    +
349795    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
349796    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
349797    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
349798    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
349799    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
349800    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
349801    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
349802    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
349803    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
349804    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
349805    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
349806    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
349807    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
349808    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
349809    +end;
MPRINT(EM_DIAGRAM):   end;
349810    +else do;
MPRINT(EM_DIAGRAM):   else do;
349811    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
349812    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
349813    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
349814    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
349815    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
349816    +   end;
MPRINT(EM_DIAGRAM):   end;
349817    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
349818    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
349819    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
349820    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
349821    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
349822    +   end;
MPRINT(EM_DIAGRAM):   end;
349823    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
349824    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
349825    +   end;
MPRINT(EM_DIAGRAM):   end;
349826    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
349827    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
349828    +   end;
MPRINT(EM_DIAGRAM):   end;
349829    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
349830    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
349831    +   end;
MPRINT(EM_DIAGRAM):   end;
349832    +   else do;
MPRINT(EM_DIAGRAM):   else do;
349833    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
349834    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
349835    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
349836    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
349837    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
349838    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
349839    +   end;
MPRINT(EM_DIAGRAM):   end;
349840    +end;
MPRINT(EM_DIAGRAM):   end;
349841    +
349842    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
349843    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
349844    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
349845    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
349846    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
349847    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
349848    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
349849    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
349850    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
349851    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
349852    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
349853    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
349854    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
349855    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
349856    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
349857    +end;
MPRINT(EM_DIAGRAM):   end;
349858    +else do;
MPRINT(EM_DIAGRAM):   else do;
349859    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
349860    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
349861    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
349862    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
349863    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
349864    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
349865    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
349866    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
349867    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
349868    +         end;
MPRINT(EM_DIAGRAM):   end;
349869    +         else do;
MPRINT(EM_DIAGRAM):   else do;
349870    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
349871    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
349872    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
349873    +            end;
MPRINT(EM_DIAGRAM):   end;
349874    +         end;
MPRINT(EM_DIAGRAM):   end;
349875    +      end;
MPRINT(EM_DIAGRAM):   end;
349876    +      else do;
MPRINT(EM_DIAGRAM):   else do;
349877    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
349878    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
349879    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
349880    +         end;
MPRINT(EM_DIAGRAM):   end;
349881    +      end;
MPRINT(EM_DIAGRAM):   end;
349882    +   end;
MPRINT(EM_DIAGRAM):   end;
349883    +   else do;
MPRINT(EM_DIAGRAM):   else do;
349884    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
349885    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
349886    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
349887    +      end;
MPRINT(EM_DIAGRAM):   end;
349888    +      else do;
MPRINT(EM_DIAGRAM):   else do;
349889    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
349890    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
349891    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
349892    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
349893    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
349894    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
349895    +         end;
MPRINT(EM_DIAGRAM):   end;
349896    +      end;
MPRINT(EM_DIAGRAM):   end;
349897    +   end;
MPRINT(EM_DIAGRAM):   end;
349898    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
349899    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
349900    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
349901    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
349902    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
349903    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
349904    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
349905    +   end;
MPRINT(EM_DIAGRAM):   end;
349906    +end;
MPRINT(EM_DIAGRAM):   end;
349907    +
349908    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
349909    +*** Checking missing input Interval
349910    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
349911    +
349912    +IF NMISS(
349913    +   Income ,
349914    +   Kidhome ,
349915    +   MntFishProducts ,
349916    +   MntFruits ,
349917    +   MntGoldProds ,
349918    +   MntMeatProducts ,
349919    +   MntSweetProducts ,
349920    +   MntWines ,
349921    +   NumCatalogPurchases ,
349922    +   NumDealsPurchases ,
349923    +   NumStorePurchases ,
349924    +   NumWebPurchases ,
349925    +   NumWebVisitsMonth ,
349926    +   Recency ,
349927    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Income , Kidhome , MntFishProducts , MntFruits , MntGoldProds 
, MntMeatProducts , MntSweetProducts , MntWines , NumCatalogPurchases , NumDealsPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , Recency , Teenhome ) THEN DO;
349928    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
349929    +
349930    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
349931    +END;
MPRINT(EM_DIAGRAM):   END;
349932    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
349933    +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
349934    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
349935    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
349936    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
349937    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
349938    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
349939    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
349940    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
349941    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
349942    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
349943    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
349944    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
349945    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
349946    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
349947    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
349948    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
349949    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
349950    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
349951    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
349952    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
349953    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
349954    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
349955    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
349956    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
349957    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
349958    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
349959    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
349960    +END;
MPRINT(EM_DIAGRAM):   END;
349961    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
349962    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
349963    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
349964    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
349965    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
349966    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
349967    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
349968    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
349969    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
349970    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
349971    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
349972    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
349973    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
349974    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
349975    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
349976    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
349977    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
349978    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
349979    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
349980    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
349981    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
349982    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
349983    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
349984    +   ELSE S_NumCatalogPurchases
349985    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
349986    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
349987    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
349988    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
349989    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
349990    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
349991    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
349992    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
349993    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
349994    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
349995    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
349996    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
349997    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
349998    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
349999    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
350000    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
350001    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
350002    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
350003    +END;
MPRINT(EM_DIAGRAM):   END;
350004    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
350005    +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
350006    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
350007    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
350008    +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
350009    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
350010    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
350011    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
350012    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
350013    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
350014    +   H11  =    -0.59781928082243 * S_Income  +     0.49830142312288 * S_Kidhome
350015    +          +    -0.00045024466632 * S_MntFishProducts
350016    +          +    -0.22421712710333 * S_MntFruits  +    -0.19010144853469 *
350017    +        S_MntGoldProds  +    -0.53373773623953 * S_MntMeatProducts
350018    +          +     0.17506402203495 * S_MntSweetProducts
350019    +          +    -0.28551398649672 * S_MntWines  +       0.019870944777 *
350020    +        S_NumCatalogPurchases  +     0.03537776181533 * S_NumDealsPurchases
350021    +          +     0.05580468715403 * S_NumStorePurchases
350022    +          +    -0.29131611132704 * S_NumWebPurchases
350023    +          +    -0.40690084025802 * S_NumWebVisitsMonth
350024    +          +     0.48640195058901 * S_Recency  +     0.31820890239661 *
350025    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = -0.59781928082243 * S_Income + 0.49830142312288 * S_Kidhome + 
-0.00045024466632 * S_MntFishProducts + -0.22421712710333 * S_MntFruits + -0.19010144853469 * 
S_MntGoldProds + -0.53373773623953 * S_MntMeatProducts + 0.17506402203495 * S_MntSweetProducts 
+ -0.28551398649672 * S_MntWines + 0.019870944777 * S_NumCatalogPurchases + 0.03537776181533 * 
S_NumDealsPurchases + 0.05580468715403 * S_NumStorePurchases + -0.29131611132704 * 
S_NumWebPurchases + -0.40690084025802 * S_NumWebVisitsMonth + 0.48640195058901 * S_Recency + 
0.31820890239661 * S_Teenhome ;
350026    +   H12  =    -0.41871753512335 * S_Income  +      0.6025072461821 * S_Kidhome
350027    +          +    -0.03132724937716 * S_MntFishProducts
350028    +          +     0.19114182835046 * S_MntFruits  +     0.13483463809539 *
350029    +        S_MntGoldProds  +    -0.63593603749443 * S_MntMeatProducts
350030    +          +    -0.07569302401223 * S_MntSweetProducts
350031    +          +     0.67050112032753 * S_MntWines  +    -0.23159243932208 *
350032    +        S_NumCatalogPurchases  +    -0.07183698407409 * S_NumDealsPurchases
350033    +          +     0.54619681114623 * S_NumStorePurchases
350034    +          +     0.44325129671249 * S_NumWebPurchases
350035    +          +    -1.25054401670605 * S_NumWebVisitsMonth
350036    +          +      1.2376290916151 * S_Recency  +     0.43747371517287 *
350037    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -0.41871753512335 * S_Income + 0.6025072461821 * S_Kidhome + 
-0.03132724937716 * S_MntFishProducts + 0.19114182835046 * S_MntFruits + 0.13483463809539 * 
S_MntGoldProds + -0.63593603749443 * S_MntMeatProducts + -0.07569302401223 * 
S_MntSweetProducts + 0.67050112032753 * S_MntWines + -0.23159243932208 * S_NumCatalogPurchases 
+ -0.07183698407409 * S_NumDealsPurchases + 0.54619681114623 * S_NumStorePurchases + 
0.44325129671249 * S_NumWebPurchases + -1.25054401670605 * S_NumWebVisitsMonth + 
1.2376290916151 * S_Recency + 0.43747371517287 * S_Teenhome ;
350038    +   H13  =      0.0713579189325 * S_Income  +    -0.05759612462349 * S_Kidhome
350039    +          +     0.07631777381832 * S_MntFishProducts
350040    +          +    -0.00387785552441 * S_MntFruits  +    -0.21868916314192 *
350041    +        S_MntGoldProds  +       0.072623883197 * S_MntMeatProducts
350042    +          +     0.12637946833766 * S_MntSweetProducts
350043    +          +    -0.37981663841124 * S_MntWines  +    -0.89958525403162 *
350044    +        S_NumCatalogPurchases  +    -0.17471885937598 * S_NumDealsPurchases
350045    +          +     0.15845618359126 * S_NumStorePurchases
350046    +          +    -0.33296932705082 * S_NumWebPurchases
350047    +          +      0.0260072296349 * S_NumWebVisitsMonth
350048    +          +     0.02544749712977 * S_Recency  +    -0.17381561661022 *
350049    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = 0.0713579189325 * S_Income + -0.05759612462349 * S_Kidhome + 
0.07631777381832 * S_MntFishProducts + -0.00387785552441 * S_MntFruits + -0.21868916314192 * 
S_MntGoldProds + 0.072623883197 * S_MntMeatProducts + 0.12637946833766 * S_MntSweetProducts + 
-0.37981663841124 * S_MntWines + -0.89958525403162 * S_NumCatalogPurchases + -0.17471885937598 
* S_NumDealsPurchases + 0.15845618359126 * S_NumStorePurchases + -0.33296932705082 * 
S_NumWebPurchases + 0.0260072296349 * S_NumWebVisitsMonth + 0.02544749712977 * S_Recency + 
-0.17381561661022 * S_Teenhome ;
350050    +   H14  =    -0.47498613710851 * S_Income  +     0.09339198401437 * S_Kidhome
350051    +          +    -0.13642352619174 * S_MntFishProducts
350052    +          +     0.27167245582117 * S_MntFruits  +    -0.00579747559996 *
350053    +        S_MntGoldProds  +     0.31591387319577 * S_MntMeatProducts
350054    +          +     0.14125815807238 * S_MntSweetProducts
350055    +          +     0.07862916790983 * S_MntWines  +    -0.58905358997534 *
350056    +        S_NumCatalogPurchases  +     -0.5574069633995 * S_NumDealsPurchases
350057    +          +     0.19718828261526 * S_NumStorePurchases
350058    +          +    -0.24156925391919 * S_NumWebPurchases
350059    +          +    -0.25711078938749 * S_NumWebVisitsMonth
350060    +          +     0.38883063223812 * S_Recency  +     -0.2396731334184 *
350061    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = -0.47498613710851 * S_Income + 0.09339198401437 * S_Kidhome + 
-0.13642352619174 * S_MntFishProducts + 0.27167245582117 * S_MntFruits + -0.00579747559996 * 
S_MntGoldProds + 0.31591387319577 * S_MntMeatProducts + 0.14125815807238 * S_MntSweetProducts 
+ 0.07862916790983 * S_MntWines + -0.58905358997534 * S_NumCatalogPurchases + -0.5574069633995 
* S_NumDealsPurchases + 0.19718828261526 * S_NumStorePurchases + -0.24156925391919 * 
S_NumWebPurchases + -0.25711078938749 * S_NumWebVisitsMonth + 0.38883063223812 * S_Recency + 
-0.2396731334184 * S_Teenhome ;
350062    +   H15  =     0.24624924979609 * S_Income  +    -0.37052106312109 * S_Kidhome
350063    +          +     0.13579628643404 * S_MntFishProducts
350064    +          +    -0.05263868911164 * S_MntFruits  +    -0.01504675049991 *
350065    +        S_MntGoldProds  +     -0.4202277804998 * S_MntMeatProducts
350066    +          +    -0.01039299374426 * S_MntSweetProducts
350067    +          +     0.71197420459135 * S_MntWines  +    -0.35973505575029 *
350068    +        S_NumCatalogPurchases  +     -0.4415445481482 * S_NumDealsPurchases
350069    +          +     0.58897740652611 * S_NumStorePurchases
350070    +          +     0.24564485851062 * S_NumWebPurchases
350071    +          +    -0.13976320243555 * S_NumWebVisitsMonth
350072    +          +      0.1199367613063 * S_Recency  +    -0.15283161418313 *
350073    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H15 = 0.24624924979609 * S_Income + -0.37052106312109 * S_Kidhome + 
0.13579628643404 * S_MntFishProducts + -0.05263868911164 * S_MntFruits + -0.01504675049991 * 
S_MntGoldProds + -0.4202277804998 * S_MntMeatProducts + -0.01039299374426 * S_MntSweetProducts 
+ 0.71197420459135 * S_MntWines + -0.35973505575029 * S_NumCatalogPurchases + -0.4415445481482 
* S_NumDealsPurchases + 0.58897740652611 * S_NumStorePurchases + 0.24564485851062 * 
S_NumWebPurchases + -0.13976320243555 * S_NumWebVisitsMonth + 0.1199367613063 * S_Recency + 
-0.15283161418313 * S_Teenhome ;
350074    +   H16  =     0.23493799758749 * S_Income  +     0.07038278079069 * S_Kidhome
350075    +          +    -0.45448768538367 * S_MntFishProducts
350076    +          +     0.02622380709004 * S_MntFruits  +     0.14726698184115 *
350077    +        S_MntGoldProds  +     0.65760183569767 * S_MntMeatProducts
350078    +          +    -0.16936256277023 * S_MntSweetProducts
350079    +          +    -0.40647066866305 * S_MntWines  +     0.99645493491726 *
350080    +        S_NumCatalogPurchases  +     0.65587239961358 * S_NumDealsPurchases
350081    +          +    -0.22309716855774 * S_NumStorePurchases
350082    +          +    -0.61204529910842 * S_NumWebPurchases
350083    +          +     0.43742228867615 * S_NumWebVisitsMonth
350084    +          +    -0.56099034256092 * S_Recency  +     -0.2445351671148 *
350085    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H16 = 0.23493799758749 * S_Income + 0.07038278079069 * S_Kidhome + 
-0.45448768538367 * S_MntFishProducts + 0.02622380709004 * S_MntFruits + 0.14726698184115 * 
S_MntGoldProds + 0.65760183569767 * S_MntMeatProducts + -0.16936256277023 * S_MntSweetProducts 
+ -0.40647066866305 * S_MntWines + 0.99645493491726 * S_NumCatalogPurchases + 0.65587239961358 
* S_NumDealsPurchases + -0.22309716855774 * S_NumStorePurchases + -0.61204529910842 * 
S_NumWebPurchases + 0.43742228867615 * S_NumWebVisitsMonth + -0.56099034256092 * S_Recency + 
-0.2445351671148 * S_Teenhome ;
350086    +   H17  =    -0.00107702057163 * S_Income  +     0.25116135719972 * S_Kidhome
350087    +          +    -0.04540308470858 * S_MntFishProducts
350088    +          +        0.21487241577 * S_MntFruits  +    -0.12914913547414 *
350089    +        S_MntGoldProds  +    -0.04149021191395 * S_MntMeatProducts
350090    +          +     0.02853521979141 * S_MntSweetProducts
350091    +          +     -0.2435805887418 * S_MntWines  +    -0.04509621661407 *
350092    +        S_NumCatalogPurchases  +    -0.26492036720429 * S_NumDealsPurchases
350093    +          +     -0.3299561248944 * S_NumStorePurchases
350094    +          +    -0.09806597448224 * S_NumWebPurchases
350095    +          +      0.0427056351245 * S_NumWebVisitsMonth
350096    +          +     0.03953235628202 * S_Recency  +    -0.11317308767713 *
350097    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H17 = -0.00107702057163 * S_Income + 0.25116135719972 * S_Kidhome + 
-0.04540308470858 * S_MntFishProducts + 0.21487241577 * S_MntFruits + -0.12914913547414 * 
S_MntGoldProds + -0.04149021191395 * S_MntMeatProducts + 0.02853521979141 * S_MntSweetProducts 
+ -0.2435805887418 * S_MntWines + -0.04509621661407 * S_NumCatalogPurchases + 
-0.26492036720429 * S_NumDealsPurchases + -0.3299561248944 * S_NumStorePurchases + 
-0.09806597448224 * S_NumWebPurchases + 0.0427056351245 * S_NumWebVisitsMonth + 
0.03953235628202 * S_Recency + -0.11317308767713 * S_Teenhome ;
350098    +   H11  = H11  +     0.50033674561531 * AcceptedCmp10
350099    +          +    -0.02275693117286 * AcceptedCmp20  +     0.31338891533156 *
350100    +        AcceptedCmp30  +      0.3901248845706 * AcceptedCmp40
350101    +          +     0.44314358358111 * AcceptedCmp50  +    -0.20444060864498 *
350102    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.50033674561531 * AcceptedCmp10 + -0.02275693117286 * 
AcceptedCmp20 + 0.31338891533156 * AcceptedCmp30 + 0.3901248845706 * AcceptedCmp40 + 
0.44314358358111 * AcceptedCmp50 + -0.20444060864498 * Complain0 ;
350103    +   H12  = H12  +     0.30103938822692 * AcceptedCmp10
350104    +          +     0.54298746723422 * AcceptedCmp20  +     0.50401040035525 *
350105    +        AcceptedCmp30  +     0.43447710825306 * AcceptedCmp40
350106    +          +     0.60794421030027 * AcceptedCmp50  +    -0.28114274461319 *
350107    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.30103938822692 * AcceptedCmp10 + 0.54298746723422 * 
AcceptedCmp20 + 0.50401040035525 * AcceptedCmp30 + 0.43447710825306 * AcceptedCmp40 + 
0.60794421030027 * AcceptedCmp50 + -0.28114274461319 * Complain0 ;
350108    +   H13  = H13  +     -0.1890212967757 * AcceptedCmp10
350109    +          +    -0.11487406996391 * AcceptedCmp20  +    -0.22740618754863 *
350110    +        AcceptedCmp30  +      0.2354510231918 * AcceptedCmp40
350111    +          +    -0.14327434649067 * AcceptedCmp50  +    -0.17839080850556 *
350112    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.1890212967757 * AcceptedCmp10 + -0.11487406996391 * 
AcceptedCmp20 + -0.22740618754863 * AcceptedCmp30 + 0.2354510231918 * AcceptedCmp40 + 
-0.14327434649067 * AcceptedCmp50 + -0.17839080850556 * Complain0 ;
350113    +   H14  = H14  +    -0.28194187416219 * AcceptedCmp10
350114    +          +     0.11732089254624 * AcceptedCmp20  +     0.34964075536156 *
350115    +        AcceptedCmp30  +     0.05772396286169 * AcceptedCmp40
350116    +          +    -0.08671748651826 * AcceptedCmp50  +      0.0629540108407 *
350117    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.28194187416219 * AcceptedCmp10 + 0.11732089254624 * 
AcceptedCmp20 + 0.34964075536156 * AcceptedCmp30 + 0.05772396286169 * AcceptedCmp40 + 
-0.08671748651826 * AcceptedCmp50 + 0.0629540108407 * Complain0 ;
350118    +   H15  = H15  +    -0.01058257322803 * AcceptedCmp10
350119    +          +     0.26755355732587 * AcceptedCmp20  +     0.40856661734724 *
350120    +        AcceptedCmp30  +     0.02977117354989 * AcceptedCmp40
350121    +          +       0.073655049734 * AcceptedCmp50  +     0.25562048226555 *
350122    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + -0.01058257322803 * AcceptedCmp10 + 0.26755355732587 * 
AcceptedCmp20 + 0.40856661734724 * AcceptedCmp30 + 0.02977117354989 * AcceptedCmp40 + 
0.073655049734 * AcceptedCmp50 + 0.25562048226555 * Complain0 ;
350123    +   H16  = H16  +    -0.65590117532084 * AcceptedCmp10
350124    +          +    -0.31314161223579 * AcceptedCmp20  +    -0.18863165264573 *
350125    +        AcceptedCmp30  +    -0.18832338914237 * AcceptedCmp40
350126    +          +    -0.53765749471786 * AcceptedCmp50  +     0.17409401877513 *
350127    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H16 = H16 + -0.65590117532084 * AcceptedCmp10 + -0.31314161223579 * 
AcceptedCmp20 + -0.18863165264573 * AcceptedCmp30 + -0.18832338914237 * AcceptedCmp40 + 
-0.53765749471786 * AcceptedCmp50 + 0.17409401877513 * Complain0 ;
350128    +   H17  = H17  +    -0.42253231673718 * AcceptedCmp10
350129    +          +    -0.40954345229557 * AcceptedCmp20  +    -0.30577523080786 *
350130    +        AcceptedCmp30  +    -0.22396670899437 * AcceptedCmp40
350131    +          +     0.05757251451004 * AcceptedCmp50  +     0.07813950542487 *
350132    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H17 = H17 + -0.42253231673718 * AcceptedCmp10 + -0.40954345229557 * 
AcceptedCmp20 + -0.30577523080786 * AcceptedCmp30 + -0.22396670899437 * AcceptedCmp40 + 
0.05757251451004 * AcceptedCmp50 + 0.07813950542487 * Complain0 ;
350133    +   H11  = H11  +    -0.14483542022901 * Education2n_Cycle
350134    +          +     0.32176647745332 * EducationBasic  +     0.00900796305072 *
350135    +        EducationGraduation  +    -0.00243484910123 * EducationMaster
350136    +          +    -0.22074132229211 * Marital_StatusDivorced
350137    +          +     0.70282742634901 * Marital_StatusMarried
350138    +          +     -0.5926244797961 * Marital_StatusSingle
350139    +          +     0.21342221410999 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.14483542022901 * Education2n_Cycle + 0.32176647745332 * 
EducationBasic + 0.00900796305072 * EducationGraduation + -0.00243484910123 * EducationMaster 
+ -0.22074132229211 * Marital_StatusDivorced + 0.70282742634901 * Marital_StatusMarried + 
-0.5926244797961 * Marital_StatusSingle + 0.21342221410999 * Marital_StatusTogether ;
350140    +   H12  = H12  +    -0.10242932200247 * Education2n_Cycle
350141    +          +     0.34937926721317 * EducationBasic  +    -0.20395479511872 *
350142    +        EducationGraduation  +     0.31210327899339 * EducationMaster
350143    +          +    -0.46376392175295 * Marital_StatusDivorced
350144    +          +       0.589453579718 * Marital_StatusMarried
350145    +          +    -0.45342174978481 * Marital_StatusSingle
350146    +          +     0.70517120763557 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.10242932200247 * Education2n_Cycle + 0.34937926721317 * 
EducationBasic + -0.20395479511872 * EducationGraduation + 0.31210327899339 * EducationMaster 
+ -0.46376392175295 * Marital_StatusDivorced + 0.589453579718 * Marital_StatusMarried + 
-0.45342174978481 * Marital_StatusSingle + 0.70517120763557 * Marital_StatusTogether ;
350147    +   H13  = H13  +     0.24858755570324 * Education2n_Cycle
350148    +          +     0.07360039359386 * EducationBasic  +    -0.42563056620078 *
350149    +        EducationGraduation  +    -0.25970840250323 * EducationMaster
350150    +          +     0.26981972015482 * Marital_StatusDivorced
350151    +          +    -0.01707364864139 * Marital_StatusMarried
350152    +          +     0.38646060840009 * Marital_StatusSingle
350153    +          +     0.19694047086013 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.24858755570324 * Education2n_Cycle + 0.07360039359386 * 
EducationBasic + -0.42563056620078 * EducationGraduation + -0.25970840250323 * EducationMaster 
+ 0.26981972015482 * Marital_StatusDivorced + -0.01707364864139 * Marital_StatusMarried + 
0.38646060840009 * Marital_StatusSingle + 0.19694047086013 * Marital_StatusTogether ;
350154    +   H14  = H14  +     0.22577522124265 * Education2n_Cycle
350155    +          +     0.04183136697557 * EducationBasic  +    -0.27725331198825 *
350156    +        EducationGraduation  +     0.15709188532123 * EducationMaster
350157    +          +    -0.01933675094701 * Marital_StatusDivorced
350158    +          +     0.52969577969434 * Marital_StatusMarried
350159    +          +      -0.348697714569 * Marital_StatusSingle
350160    +          +      0.5020342481888 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.22577522124265 * Education2n_Cycle + 0.04183136697557 * 
EducationBasic + -0.27725331198825 * EducationGraduation + 0.15709188532123 * EducationMaster 
+ -0.01933675094701 * Marital_StatusDivorced + 0.52969577969434 * Marital_StatusMarried + 
-0.348697714569 * Marital_StatusSingle + 0.5020342481888 * Marital_StatusTogether ;
350161    +   H15  = H15  +     0.04488332711225 * Education2n_Cycle
350162    +          +     0.01911097443907 * EducationBasic  +    -0.11699443624996 *
350163    +        EducationGraduation  +    -0.07291393566738 * EducationMaster
350164    +          +    -0.04665146013984 * Marital_StatusDivorced
350165    +          +      -0.586219175167 * Marital_StatusMarried
350166    +          +     0.55713543417712 * Marital_StatusSingle
350167    +          +    -0.42208959885332 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.04488332711225 * Education2n_Cycle + 0.01911097443907 * 
EducationBasic + -0.11699443624996 * EducationGraduation + -0.07291393566738 * EducationMaster 
+ -0.04665146013984 * Marital_StatusDivorced + -0.586219175167 * Marital_StatusMarried + 
0.55713543417712 * Marital_StatusSingle + -0.42208959885332 * Marital_StatusTogether ;
350168    +   H16  = H16  +     0.09174117861154 * Education2n_Cycle
350169    +          +     -0.1378945860659 * EducationBasic  +     -0.0728635369665 *
350170    +        EducationGraduation  +     0.29860714824438 * EducationMaster
350171    +          +    -0.05632171154347 * Marital_StatusDivorced
350172    +          +     0.03215547861665 * Marital_StatusMarried
350173    +          +     0.16870781172538 * Marital_StatusSingle
350174    +          +    -0.04883314322676 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.09174117861154 * Education2n_Cycle + -0.1378945860659 * 
EducationBasic + -0.0728635369665 * EducationGraduation + 0.29860714824438 * EducationMaster + 
-0.05632171154347 * Marital_StatusDivorced + 0.03215547861665 * Marital_StatusMarried + 
0.16870781172538 * Marital_StatusSingle + -0.04883314322676 * Marital_StatusTogether ;
350175    +   H17  = H17  +    -0.00343694558117 * Education2n_Cycle
350176    +          +     0.32636427598227 * EducationBasic  +     0.16259654486833 *
350177    +        EducationGraduation  +    -0.00424229454859 * EducationMaster
350178    +          +    -0.21765415159355 * Marital_StatusDivorced
350179    +          +     -0.0542857922075 * Marital_StatusMarried
350180    +          +     0.20679907454933 * Marital_StatusSingle
350181    +          +     0.14976519710725 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H17 = H17 + -0.00343694558117 * Education2n_Cycle + 0.32636427598227 * 
EducationBasic + 0.16259654486833 * EducationGraduation + -0.00424229454859 * EducationMaster 
+ -0.21765415159355 * Marital_StatusDivorced + -0.0542857922075 * Marital_StatusMarried + 
0.20679907454933 * Marital_StatusSingle + 0.14976519710725 * Marital_StatusTogether ;
350182    +   H11  =     0.92977078759503 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 0.92977078759503 + H11 ;
350183    +   H12  =    -0.97970409253156 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -0.97970409253156 + H12 ;
350184    +   H13  =     -0.5001144792196 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.5001144792196 + H13 ;
350185    +   H14  =    -0.90715840862541 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = -0.90715840862541 + H14 ;
350186    +   H15  =     0.87046153389036 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = 0.87046153389036 + H15 ;
350187    +   H16  =     0.49066122767086 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = 0.49066122767086 + H16 ;
350188    +   H17  =    -1.05949763460293 + H17 ;
MPRINT(EM_DIAGRAM):   H17 = -1.05949763460293 + H17 ;
350189    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
350190    +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
350191    +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
350192    +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
350193    +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
350194    +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
350195    +   H17  = TANH(H17 );
MPRINT(EM_DIAGRAM):   H17 = TANH(H17 );
350196    +END;
MPRINT(EM_DIAGRAM):   END;
350197    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
350198    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
350199    +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
350200    +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
350201    +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
350202    +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
350203    +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
350204    +   H17  = .;
MPRINT(EM_DIAGRAM):   H17 = .;
350205    +END;
MPRINT(EM_DIAGRAM):   END;
350206    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
350207    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
350208    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
350209    +
350210    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
350211    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
350212    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
350213    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
350214    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
350215    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
350216    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
350217    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
350218    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
350219    +end;
MPRINT(EM_DIAGRAM):   end;
350220    +else do;
MPRINT(EM_DIAGRAM):   else do;
350221    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
350222    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
350223    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
350224    +   end;
MPRINT(EM_DIAGRAM):   end;
350225    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
350226    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
350227    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
350228    +   end;
MPRINT(EM_DIAGRAM):   end;
350229    +   else do;
MPRINT(EM_DIAGRAM):   else do;
350230    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
350231    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
350232    +   end;
MPRINT(EM_DIAGRAM):   end;
350233    +end;
MPRINT(EM_DIAGRAM):   end;
350234    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
350235    +   P_DepVar1  =    -2.32998401250848 * H11  +     -3.2074078511991 * H12
350236    +          +    -0.69549988605443 * H13  +    -1.74950789108762 * H14
350237    +          +    -1.74013772071344 * H15  +     2.65306089869015 * H16
350238    +          +     0.03700459000906 * H17 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.32998401250848 * H11 + -3.2074078511991 * H12 + 
-0.69549988605443 * H13 + -1.74950789108762 * H14 + -1.74013772071344 * H15 + 2.65306089869015 
* H16 + 0.03700459000906 * H17 ;
350239    +   P_DepVar1  =    -1.51229898726716 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.51229898726716 + P_DepVar1 ;
350240    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
350241    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
350242    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
350243    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
350244    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
350245    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
350246    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
350247    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
350248    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
350249    +END;
MPRINT(EM_DIAGRAM):   END;
350250    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
350251    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
350252    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
350253    +END;
MPRINT(EM_DIAGRAM):   END;
350254    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
350255    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
350256    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
350257    +END;
MPRINT(EM_DIAGRAM):   END;
350258    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
350259    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
350260    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
350261    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
350262    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
350263    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
350264    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
350265    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
350266    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
350267    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
350268    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
350269    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
350270    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
350271    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
350272    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
350273    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
350274    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
350275    +END;
MPRINT(EM_DIAGRAM):   END;
350276    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
350277    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
350278    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
350279    +drop
350280    +H11
350281    +H12
350282    +H13
350283    +H14
350284    +H15
350285    +H16
350286    +H17
350287    +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 H17 ;
350288    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
350289     run;

NOTE: DATA STEP view saved on file EMWS8.NEURAL30_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.META2_VALIDATE.VIEW used (Total process time):
      real time           0.47 seconds
      cpu time            0.04 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.47 seconds
      cpu time            0.06 seconds
      

MPRINT(EM_DIAGRAM):   quit;
350290     quit;
350291     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
350292     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
350293     * Neural30: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * Neural30: Computing metadata for TRAIN data;
350294     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;

NOTE: View EMWS8.NEURAL30_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural30\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS8.Neural30_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS8.Neural30_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS8.Neural30_TRAIN out=WORK.M0QR52MN noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0QR52MN;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20 
INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M0QR52MN(keep=name type length label format formatl 
formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then format = strip(format)!!strip(put(formatl, 
best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, 
best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then informat = 
strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, 
best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0QR52MN;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M0QR52MN;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M1F52HWK NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1F52HWK;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M1F52HWK;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0NU1RXG(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M1F52HWK;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1F52HWK;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 
FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M1F52HWK;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" 
"MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" 
"QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" "YEAR" "YYMMDD" "YYMON" 
"YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" 
"EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) 
formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = 
"DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) 
formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" 
"NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" 
"SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = 
"DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then 
level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 
'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 
'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ 
('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 
'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 
'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1F52HWK;
MPRINT(EMADVISECOLUMNS):   set WORK.M1F52HWK;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= 
"Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= 
"Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower limit" UPPERLIMIT= 
"Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= 
"Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Meta2_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Meta2_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural30_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT 
LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "Neural30";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("P_DEPVAR1") creator = "Neural30";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR1") creator = "Neural30";
MPRINT(EM_DIAGRAM):   when("P_DEPVAR0") creator = "Neural30";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR0") creator = "Neural30";
MPRINT(EM_DIAGRAM):   when("F_DEPVAR") creator = "Neural30";
MPRINT(EM_DIAGRAM):   when("I_DEPVAR") creator = "Neural30";
MPRINT(EM_DIAGRAM):   when("U_DEPVAR") creator = "Neural30";
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "Neural30";
MPRINT(EM_DIAGRAM):   when("DEPVAR") model = "Neural30";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural30: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
350606     data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
350607     set EMWS8.Neural30_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural30_EMINFO;
350608     where DATA='Neural30' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='Neural30' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 
'MODEL');
350609     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.NEURAL30_EMINFO.
      WHERE (DATA='Neural30') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

350610     data EMWS8.Neural30_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS8.Neural30_EMINFO;
350611     length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
350612     input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
350613     cards;
MPRINT(EM_DIAGRAM):   cards;

NOTE: The data set EMWS8.NEURAL30_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   run;
350617     run;
350618     data EMWS8.Neural30_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural30_EMINFO;
350619     set EMWS8.Neural30_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural30_EMINFO WORK.MODELTEMP_INFO;
350620     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.NEURAL30_EMINFO.
NOTE: There were 0 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS8.NEURAL30_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

350621     proc sort data = EMWS8.Neural30_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.Neural30_EMINFO NOTHREADS;
350622     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
350623     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.NEURAL30_EMINFO.
NOTE: The data set EMWS8.NEURAL30_EMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

350624     proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
350625     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
350626     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set EMWS8.FIMPORT_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 1 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

350627     proc sort data = EMWS8.Neural30_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS8.Neural30_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
350628     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
350629     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 3 observations read from the data set EMWS8.NEURAL30_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

350630     data EMWS8.Neural30_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural30_EMINFO;
350631     merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
350632     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
350633     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 3 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS8.NEURAL30_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

350634     proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
350635     delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
350636     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
350637     quit;
MPRINT(EM_DIAGRAM):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

NOTE: View EMWS8.NEURAL30_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
NOTE: View EMWS8.NEURAL30_VALIDATE.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
