MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "28. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "10.44 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                28. April 2016
Time:                10.44 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O0YMLZ8F 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural30\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O0YMLZ8F new;
MPRINT(EM_DIAGRAM):   run;
2648296    data work.outkey;
MPRINT(EM_DIAGRAM):    data work.outkey;
2648297    set EMWS8.Neural30_OUTKEY;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural30_OUTKEY;
2648298    if upcase(ROLE) = 'HIDDEN';
MPRINT(EM_DIAGRAM):   if upcase(ROLE) = 'HIDDEN';
2648299    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 48 observations read from the data set EMWS8.NEURAL30_OUTKEY.
NOTE: The data set WORK.OUTKEY has 7 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2648300    filename emflow
2648300  ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural30\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural30\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural30: Scoring DATA data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2648301    *------------------------------------------------------------*;
2648302    * Neural30: Scoring DATA data;
2648303    *------------------------------------------------------------*;
2648304    data EMWS8.Neural30_TRAIN
2648305    / view=EMWS8.Neural30_TRAIN
2648306    ;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural30_TRAIN / view=EMWS8.Neural30_TRAIN ;
2648307    set EMWS8.Meta2_TRAIN
2648308    ;
MPRINT(EM_DIAGRAM):   set EMWS8.Meta2_TRAIN ;
2648309    %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Neural30\EMFLOWSCORE.sas.
2648310   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2648311   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2648312   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2648313   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2648314   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2648315   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2648316   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2648317   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2648318   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2648319   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2648320   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2648321   +LENGTH _WARN_ $4
2648322   +      F_DepVar  $ 12
2648323   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
2648324   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2648325   +
2648326   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2648327   +
2648328   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2648329   +
2648330   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2648331   +
2648332   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2648333   +
2648334   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2648335   +
2648336   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2648337   +
2648338   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2648339   +
2648340   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2648341   +
2648342   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2648343   +
2648344   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2648345   +
2648346   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2648347   +
2648348   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2648349   +
2648350   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2648351   +
2648352   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2648353   +
2648354   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2648355   +
2648356   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2648357   +
2648358   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2648359   +
2648360   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2648361   +
2648362   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2648363   +
2648364   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2648365   +
2648366   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2648367   +
2648368   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2648369   +
2648370   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2648371   +
2648372   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2648373   +
2648374   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2648375   +
2648376   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2648377   +
2648378   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2648379   +
2648380   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2648381   +
2648382   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
2648383   +
2648384   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
2648385   +
2648386   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
2648387   +
2648388   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
2648389   +
2648390   +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
2648391   +
2648392   +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
2648393   +
2648394   +      label H17 = 'Hidden: H1=7' ;
MPRINT(EM_DIAGRAM):   label H17 = 'Hidden: H1=7' ;
2648395   +
2648396   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2648397   +
2648398   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2648399   +
2648400   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2648401   +
2648402   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2648403   +
2648404   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
2648405   +
2648406   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2648407   +
2648408   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
2648409   +
2648410   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2648411   +
2648412   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2648413   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2648414   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2648415   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2648416   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2648417   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2648418   +end;
MPRINT(EM_DIAGRAM):   end;
2648419   +else do;
MPRINT(EM_DIAGRAM):   else do;
2648420   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2648421   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2648422   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2648423   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2648424   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2648425   +   end;
MPRINT(EM_DIAGRAM):   end;
2648426   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2648427   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2648428   +   end;
MPRINT(EM_DIAGRAM):   end;
2648429   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2648430   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2648431   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2648432   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2648433   +   end;
MPRINT(EM_DIAGRAM):   end;
2648434   +end;
MPRINT(EM_DIAGRAM):   end;
2648435   +
2648436   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2648437   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2648438   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2648439   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2648440   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2648441   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2648442   +end;
MPRINT(EM_DIAGRAM):   end;
2648443   +else do;
MPRINT(EM_DIAGRAM):   else do;
2648444   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2648445   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2648446   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2648447   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2648448   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2648449   +   end;
MPRINT(EM_DIAGRAM):   end;
2648450   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2648451   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2648452   +   end;
MPRINT(EM_DIAGRAM):   end;
2648453   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2648454   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2648455   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2648456   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2648457   +   end;
MPRINT(EM_DIAGRAM):   end;
2648458   +end;
MPRINT(EM_DIAGRAM):   end;
2648459   +
2648460   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2648461   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2648462   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2648463   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2648464   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2648465   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2648466   +end;
MPRINT(EM_DIAGRAM):   end;
2648467   +else do;
MPRINT(EM_DIAGRAM):   else do;
2648468   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2648469   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2648470   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2648471   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2648472   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2648473   +   end;
MPRINT(EM_DIAGRAM):   end;
2648474   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2648475   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2648476   +   end;
MPRINT(EM_DIAGRAM):   end;
2648477   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2648478   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2648479   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2648480   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2648481   +   end;
MPRINT(EM_DIAGRAM):   end;
2648482   +end;
MPRINT(EM_DIAGRAM):   end;
2648483   +
2648484   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2648485   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2648486   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2648487   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2648488   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2648489   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2648490   +end;
MPRINT(EM_DIAGRAM):   end;
2648491   +else do;
MPRINT(EM_DIAGRAM):   else do;
2648492   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2648493   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2648494   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2648495   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2648496   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2648497   +   end;
MPRINT(EM_DIAGRAM):   end;
2648498   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2648499   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2648500   +   end;
MPRINT(EM_DIAGRAM):   end;
2648501   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2648502   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2648503   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2648504   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2648505   +   end;
MPRINT(EM_DIAGRAM):   end;
2648506   +end;
MPRINT(EM_DIAGRAM):   end;
2648507   +
2648508   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2648509   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2648510   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2648511   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2648512   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2648513   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2648514   +end;
MPRINT(EM_DIAGRAM):   end;
2648515   +else do;
MPRINT(EM_DIAGRAM):   else do;
2648516   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2648517   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2648518   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2648519   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2648520   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2648521   +   end;
MPRINT(EM_DIAGRAM):   end;
2648522   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2648523   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2648524   +   end;
MPRINT(EM_DIAGRAM):   end;
2648525   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2648526   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2648527   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2648528   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2648529   +   end;
MPRINT(EM_DIAGRAM):   end;
2648530   +end;
MPRINT(EM_DIAGRAM):   end;
2648531   +
2648532   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2648533   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2648534   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2648535   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2648536   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2648537   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2648538   +end;
MPRINT(EM_DIAGRAM):   end;
2648539   +else do;
MPRINT(EM_DIAGRAM):   else do;
2648540   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2648541   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2648542   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2648543   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2648544   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2648545   +   end;
MPRINT(EM_DIAGRAM):   end;
2648546   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2648547   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2648548   +   end;
MPRINT(EM_DIAGRAM):   end;
2648549   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2648550   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2648551   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2648552   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2648553   +   end;
MPRINT(EM_DIAGRAM):   end;
2648554   +end;
MPRINT(EM_DIAGRAM):   end;
2648555   +
2648556   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2648557   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
2648558   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2648559   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2648560   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2648561   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2648562   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2648563   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2648564   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2648565   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2648566   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2648567   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2648568   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2648569   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2648570   +end;
MPRINT(EM_DIAGRAM):   end;
2648571   +else do;
MPRINT(EM_DIAGRAM):   else do;
2648572   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2648573   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2648574   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2648575   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2648576   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2648577   +   end;
MPRINT(EM_DIAGRAM):   end;
2648578   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2648579   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2648580   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2648581   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2648582   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2648583   +   end;
MPRINT(EM_DIAGRAM):   end;
2648584   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2648585   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2648586   +   end;
MPRINT(EM_DIAGRAM):   end;
2648587   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2648588   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2648589   +   end;
MPRINT(EM_DIAGRAM):   end;
2648590   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2648591   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2648592   +   end;
MPRINT(EM_DIAGRAM):   end;
2648593   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2648594   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2648595   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2648596   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2648597   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2648598   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2648599   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2648600   +   end;
MPRINT(EM_DIAGRAM):   end;
2648601   +end;
MPRINT(EM_DIAGRAM):   end;
2648602   +
2648603   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2648604   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2648605   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
2648606   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2648607   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2648608   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2648609   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2648610   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2648611   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2648612   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2648613   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2648614   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2648615   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2648616   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2648617   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2648618   +end;
MPRINT(EM_DIAGRAM):   end;
2648619   +else do;
MPRINT(EM_DIAGRAM):   else do;
2648620   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2648621   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2648622   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2648623   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2648624   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2648625   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2648626   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2648627   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2648628   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2648629   +         end;
MPRINT(EM_DIAGRAM):   end;
2648630   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2648631   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2648632   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2648633   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2648634   +            end;
MPRINT(EM_DIAGRAM):   end;
2648635   +         end;
MPRINT(EM_DIAGRAM):   end;
2648636   +      end;
MPRINT(EM_DIAGRAM):   end;
2648637   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2648638   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2648639   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2648640   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2648641   +         end;
MPRINT(EM_DIAGRAM):   end;
2648642   +      end;
MPRINT(EM_DIAGRAM):   end;
2648643   +   end;
MPRINT(EM_DIAGRAM):   end;
2648644   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2648645   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2648646   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2648647   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2648648   +      end;
MPRINT(EM_DIAGRAM):   end;
2648649   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2648650   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2648651   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2648652   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2648653   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2648654   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2648655   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2648656   +         end;
MPRINT(EM_DIAGRAM):   end;
2648657   +      end;
MPRINT(EM_DIAGRAM):   end;
2648658   +   end;
MPRINT(EM_DIAGRAM):   end;
2648659   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2648660   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2648661   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2648662   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2648663   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2648664   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2648665   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2648666   +   end;
MPRINT(EM_DIAGRAM):   end;
2648667   +end;
MPRINT(EM_DIAGRAM):   end;
2648668   +
2648669   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2648670   +*** Checking missing input Interval
2648671   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2648672   +
2648673   +IF NMISS(
2648674   +   Income ,
2648675   +   Kidhome ,
2648676   +   MntFishProducts ,
2648677   +   MntFruits ,
2648678   +   MntGoldProds ,
2648679   +   MntMeatProducts ,
2648680   +   MntSweetProducts ,
2648681   +   MntWines ,
2648682   +   NumCatalogPurchases ,
2648683   +   NumDealsPurchases ,
2648684   +   NumStorePurchases ,
2648685   +   NumWebPurchases ,
2648686   +   NumWebVisitsMonth ,
2648687   +   Recency ,
2648688   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Income , Kidhome , MntFishProducts , MntFruits , MntGoldProds 
, MntMeatProducts , MntSweetProducts , MntWines , NumCatalogPurchases , NumDealsPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , Recency , Teenhome ) THEN DO;
2648689   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2648690   +
2648691   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2648692   +END;
MPRINT(EM_DIAGRAM):   END;
2648693   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2648694   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
2648695   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2648696   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2648697   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2648698   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2648699   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2648700   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2648701   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2648702   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2648703   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2648704   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2648705   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2648706   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2648707   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2648708   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2648709   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2648710   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2648711   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2648712   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2648713   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2648714   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2648715   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2648716   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2648717   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2648718   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2648719   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2648720   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2648721   +END;
MPRINT(EM_DIAGRAM):   END;
2648722   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2648723   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2648724   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2648725   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2648726   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2648727   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2648728   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2648729   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2648730   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2648731   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2648732   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2648733   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2648734   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2648735   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
2648736   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2648737   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2648738   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2648739   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2648740   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2648741   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2648742   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2648743   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2648744   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2648745   +   ELSE S_NumCatalogPurchases
2648746   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2648747   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2648748   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2648749   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2648750   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2648751   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2648752   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2648753   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2648754   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2648755   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2648756   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2648757   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2648758   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2648759   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2648760   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2648761   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2648762   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2648763   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2648764   +END;
MPRINT(EM_DIAGRAM):   END;
2648765   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2648766   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
2648767   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2648768   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2648769   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
2648770   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2648771   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2648772   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
2648773   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2648774   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2648775   +   H11  =    -0.59781928082243 * S_Income  +     0.49830142312288 * S_Kidhome
2648776   +          +    -0.00045024466632 * S_MntFishProducts
2648777   +          +    -0.22421712710333 * S_MntFruits  +    -0.19010144853469 *
2648778   +        S_MntGoldProds  +    -0.53373773623953 * S_MntMeatProducts
2648779   +          +     0.17506402203495 * S_MntSweetProducts
2648780   +          +    -0.28551398649672 * S_MntWines  +       0.019870944777 *
2648781   +        S_NumCatalogPurchases  +     0.03537776181533 * S_NumDealsPurchases
2648782   +          +     0.05580468715403 * S_NumStorePurchases
2648783   +          +    -0.29131611132704 * S_NumWebPurchases
2648784   +          +    -0.40690084025802 * S_NumWebVisitsMonth
2648785   +          +     0.48640195058901 * S_Recency  +     0.31820890239661 *
2648786   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = -0.59781928082243 * S_Income + 0.49830142312288 * S_Kidhome + 
-0.00045024466632 * S_MntFishProducts + -0.22421712710333 * S_MntFruits + -0.19010144853469 * 
S_MntGoldProds + -0.53373773623953 * S_MntMeatProducts + 0.17506402203495 * S_MntSweetProducts 
+ -0.28551398649672 * S_MntWines + 0.019870944777 * S_NumCatalogPurchases + 0.03537776181533 * 
S_NumDealsPurchases + 0.05580468715403 * S_NumStorePurchases + -0.29131611132704 * 
S_NumWebPurchases + -0.40690084025802 * S_NumWebVisitsMonth + 0.48640195058901 * S_Recency + 
0.31820890239661 * S_Teenhome ;
2648787   +   H12  =    -0.41871753512335 * S_Income  +      0.6025072461821 * S_Kidhome
2648788   +          +    -0.03132724937716 * S_MntFishProducts
2648789   +          +     0.19114182835046 * S_MntFruits  +     0.13483463809539 *
2648790   +        S_MntGoldProds  +    -0.63593603749443 * S_MntMeatProducts
2648791   +          +    -0.07569302401223 * S_MntSweetProducts
2648792   +          +     0.67050112032753 * S_MntWines  +    -0.23159243932208 *
2648793   +        S_NumCatalogPurchases  +    -0.07183698407409 * S_NumDealsPurchases
2648794   +          +     0.54619681114623 * S_NumStorePurchases
2648795   +          +     0.44325129671249 * S_NumWebPurchases
2648796   +          +    -1.25054401670605 * S_NumWebVisitsMonth
2648797   +          +      1.2376290916151 * S_Recency  +     0.43747371517287 *
2648798   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -0.41871753512335 * S_Income + 0.6025072461821 * S_Kidhome + 
-0.03132724937716 * S_MntFishProducts + 0.19114182835046 * S_MntFruits + 0.13483463809539 * 
S_MntGoldProds + -0.63593603749443 * S_MntMeatProducts + -0.07569302401223 * 
S_MntSweetProducts + 0.67050112032753 * S_MntWines + -0.23159243932208 * S_NumCatalogPurchases 
+ -0.07183698407409 * S_NumDealsPurchases + 0.54619681114623 * S_NumStorePurchases + 
0.44325129671249 * S_NumWebPurchases + -1.25054401670605 * S_NumWebVisitsMonth + 
1.2376290916151 * S_Recency + 0.43747371517287 * S_Teenhome ;
2648799   +   H13  =      0.0713579189325 * S_Income  +    -0.05759612462349 * S_Kidhome
2648800   +          +     0.07631777381832 * S_MntFishProducts
2648801   +          +    -0.00387785552441 * S_MntFruits  +    -0.21868916314192 *
2648802   +        S_MntGoldProds  +       0.072623883197 * S_MntMeatProducts
2648803   +          +     0.12637946833766 * S_MntSweetProducts
2648804   +          +    -0.37981663841124 * S_MntWines  +    -0.89958525403162 *
2648805   +        S_NumCatalogPurchases  +    -0.17471885937598 * S_NumDealsPurchases
2648806   +          +     0.15845618359126 * S_NumStorePurchases
2648807   +          +    -0.33296932705082 * S_NumWebPurchases
2648808   +          +      0.0260072296349 * S_NumWebVisitsMonth
2648809   +          +     0.02544749712977 * S_Recency  +    -0.17381561661022 *
2648810   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = 0.0713579189325 * S_Income + -0.05759612462349 * S_Kidhome + 
0.07631777381832 * S_MntFishProducts + -0.00387785552441 * S_MntFruits + -0.21868916314192 * 
S_MntGoldProds + 0.072623883197 * S_MntMeatProducts + 0.12637946833766 * S_MntSweetProducts + 
-0.37981663841124 * S_MntWines + -0.89958525403162 * S_NumCatalogPurchases + -0.17471885937598 
* S_NumDealsPurchases + 0.15845618359126 * S_NumStorePurchases + -0.33296932705082 * 
S_NumWebPurchases + 0.0260072296349 * S_NumWebVisitsMonth + 0.02544749712977 * S_Recency + 
-0.17381561661022 * S_Teenhome ;
2648811   +   H14  =    -0.47498613710851 * S_Income  +     0.09339198401437 * S_Kidhome
2648812   +          +    -0.13642352619174 * S_MntFishProducts
2648813   +          +     0.27167245582117 * S_MntFruits  +    -0.00579747559996 *
2648814   +        S_MntGoldProds  +     0.31591387319577 * S_MntMeatProducts
2648815   +          +     0.14125815807238 * S_MntSweetProducts
2648816   +          +     0.07862916790983 * S_MntWines  +    -0.58905358997534 *
2648817   +        S_NumCatalogPurchases  +     -0.5574069633995 * S_NumDealsPurchases
2648818   +          +     0.19718828261526 * S_NumStorePurchases
2648819   +          +    -0.24156925391919 * S_NumWebPurchases
2648820   +          +    -0.25711078938749 * S_NumWebVisitsMonth
2648821   +          +     0.38883063223812 * S_Recency  +     -0.2396731334184 *
2648822   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = -0.47498613710851 * S_Income + 0.09339198401437 * S_Kidhome + 
-0.13642352619174 * S_MntFishProducts + 0.27167245582117 * S_MntFruits + -0.00579747559996 * 
S_MntGoldProds + 0.31591387319577 * S_MntMeatProducts + 0.14125815807238 * S_MntSweetProducts 
+ 0.07862916790983 * S_MntWines + -0.58905358997534 * S_NumCatalogPurchases + -0.5574069633995 
* S_NumDealsPurchases + 0.19718828261526 * S_NumStorePurchases + -0.24156925391919 * 
S_NumWebPurchases + -0.25711078938749 * S_NumWebVisitsMonth + 0.38883063223812 * S_Recency + 
-0.2396731334184 * S_Teenhome ;
2648823   +   H15  =     0.24624924979609 * S_Income  +    -0.37052106312109 * S_Kidhome
2648824   +          +     0.13579628643404 * S_MntFishProducts
2648825   +          +    -0.05263868911164 * S_MntFruits  +    -0.01504675049991 *
2648826   +        S_MntGoldProds  +     -0.4202277804998 * S_MntMeatProducts
2648827   +          +    -0.01039299374426 * S_MntSweetProducts
2648828   +          +     0.71197420459135 * S_MntWines  +    -0.35973505575029 *
2648829   +        S_NumCatalogPurchases  +     -0.4415445481482 * S_NumDealsPurchases
2648830   +          +     0.58897740652611 * S_NumStorePurchases
2648831   +          +     0.24564485851062 * S_NumWebPurchases
2648832   +          +    -0.13976320243555 * S_NumWebVisitsMonth
2648833   +          +      0.1199367613063 * S_Recency  +    -0.15283161418313 *
2648834   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H15 = 0.24624924979609 * S_Income + -0.37052106312109 * S_Kidhome + 
0.13579628643404 * S_MntFishProducts + -0.05263868911164 * S_MntFruits + -0.01504675049991 * 
S_MntGoldProds + -0.4202277804998 * S_MntMeatProducts + -0.01039299374426 * S_MntSweetProducts 
+ 0.71197420459135 * S_MntWines + -0.35973505575029 * S_NumCatalogPurchases + -0.4415445481482 
* S_NumDealsPurchases + 0.58897740652611 * S_NumStorePurchases + 0.24564485851062 * 
S_NumWebPurchases + -0.13976320243555 * S_NumWebVisitsMonth + 0.1199367613063 * S_Recency + 
-0.15283161418313 * S_Teenhome ;
2648835   +   H16  =     0.23493799758749 * S_Income  +     0.07038278079069 * S_Kidhome
2648836   +          +    -0.45448768538367 * S_MntFishProducts
2648837   +          +     0.02622380709004 * S_MntFruits  +     0.14726698184115 *
2648838   +        S_MntGoldProds  +     0.65760183569767 * S_MntMeatProducts
2648839   +          +    -0.16936256277023 * S_MntSweetProducts
2648840   +          +    -0.40647066866305 * S_MntWines  +     0.99645493491726 *
2648841   +        S_NumCatalogPurchases  +     0.65587239961358 * S_NumDealsPurchases
2648842   +          +    -0.22309716855774 * S_NumStorePurchases
2648843   +          +    -0.61204529910842 * S_NumWebPurchases
2648844   +          +     0.43742228867615 * S_NumWebVisitsMonth
2648845   +          +    -0.56099034256092 * S_Recency  +     -0.2445351671148 *
2648846   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H16 = 0.23493799758749 * S_Income + 0.07038278079069 * S_Kidhome + 
-0.45448768538367 * S_MntFishProducts + 0.02622380709004 * S_MntFruits + 0.14726698184115 * 
S_MntGoldProds + 0.65760183569767 * S_MntMeatProducts + -0.16936256277023 * S_MntSweetProducts 
+ -0.40647066866305 * S_MntWines + 0.99645493491726 * S_NumCatalogPurchases + 0.65587239961358 
* S_NumDealsPurchases + -0.22309716855774 * S_NumStorePurchases + -0.61204529910842 * 
S_NumWebPurchases + 0.43742228867615 * S_NumWebVisitsMonth + -0.56099034256092 * S_Recency + 
-0.2445351671148 * S_Teenhome ;
2648847   +   H17  =    -0.00107702057163 * S_Income  +     0.25116135719972 * S_Kidhome
2648848   +          +    -0.04540308470858 * S_MntFishProducts
2648849   +          +        0.21487241577 * S_MntFruits  +    -0.12914913547414 *
2648850   +        S_MntGoldProds  +    -0.04149021191395 * S_MntMeatProducts
2648851   +          +     0.02853521979141 * S_MntSweetProducts
2648852   +          +     -0.2435805887418 * S_MntWines  +    -0.04509621661407 *
2648853   +        S_NumCatalogPurchases  +    -0.26492036720429 * S_NumDealsPurchases
2648854   +          +     -0.3299561248944 * S_NumStorePurchases
2648855   +          +    -0.09806597448224 * S_NumWebPurchases
2648856   +          +      0.0427056351245 * S_NumWebVisitsMonth
2648857   +          +     0.03953235628202 * S_Recency  +    -0.11317308767713 *
2648858   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H17 = -0.00107702057163 * S_Income + 0.25116135719972 * S_Kidhome + 
-0.04540308470858 * S_MntFishProducts + 0.21487241577 * S_MntFruits + -0.12914913547414 * 
S_MntGoldProds + -0.04149021191395 * S_MntMeatProducts + 0.02853521979141 * S_MntSweetProducts 
+ -0.2435805887418 * S_MntWines + -0.04509621661407 * S_NumCatalogPurchases + 
-0.26492036720429 * S_NumDealsPurchases + -0.3299561248944 * S_NumStorePurchases + 
-0.09806597448224 * S_NumWebPurchases + 0.0427056351245 * S_NumWebVisitsMonth + 
0.03953235628202 * S_Recency + -0.11317308767713 * S_Teenhome ;
2648859   +   H11  = H11  +     0.50033674561531 * AcceptedCmp10
2648860   +          +    -0.02275693117286 * AcceptedCmp20  +     0.31338891533156 *
2648861   +        AcceptedCmp30  +      0.3901248845706 * AcceptedCmp40
2648862   +          +     0.44314358358111 * AcceptedCmp50  +    -0.20444060864498 *
2648863   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.50033674561531 * AcceptedCmp10 + -0.02275693117286 * 
AcceptedCmp20 + 0.31338891533156 * AcceptedCmp30 + 0.3901248845706 * AcceptedCmp40 + 
0.44314358358111 * AcceptedCmp50 + -0.20444060864498 * Complain0 ;
2648864   +   H12  = H12  +     0.30103938822692 * AcceptedCmp10
2648865   +          +     0.54298746723422 * AcceptedCmp20  +     0.50401040035525 *
2648866   +        AcceptedCmp30  +     0.43447710825306 * AcceptedCmp40
2648867   +          +     0.60794421030027 * AcceptedCmp50  +    -0.28114274461319 *
2648868   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.30103938822692 * AcceptedCmp10 + 0.54298746723422 * 
AcceptedCmp20 + 0.50401040035525 * AcceptedCmp30 + 0.43447710825306 * AcceptedCmp40 + 
0.60794421030027 * AcceptedCmp50 + -0.28114274461319 * Complain0 ;
2648869   +   H13  = H13  +     -0.1890212967757 * AcceptedCmp10
2648870   +          +    -0.11487406996391 * AcceptedCmp20  +    -0.22740618754863 *
2648871   +        AcceptedCmp30  +      0.2354510231918 * AcceptedCmp40
2648872   +          +    -0.14327434649067 * AcceptedCmp50  +    -0.17839080850556 *
2648873   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.1890212967757 * AcceptedCmp10 + -0.11487406996391 * 
AcceptedCmp20 + -0.22740618754863 * AcceptedCmp30 + 0.2354510231918 * AcceptedCmp40 + 
-0.14327434649067 * AcceptedCmp50 + -0.17839080850556 * Complain0 ;
2648874   +   H14  = H14  +    -0.28194187416219 * AcceptedCmp10
2648875   +          +     0.11732089254624 * AcceptedCmp20  +     0.34964075536156 *
2648876   +        AcceptedCmp30  +     0.05772396286169 * AcceptedCmp40
2648877   +          +    -0.08671748651826 * AcceptedCmp50  +      0.0629540108407 *
2648878   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.28194187416219 * AcceptedCmp10 + 0.11732089254624 * 
AcceptedCmp20 + 0.34964075536156 * AcceptedCmp30 + 0.05772396286169 * AcceptedCmp40 + 
-0.08671748651826 * AcceptedCmp50 + 0.0629540108407 * Complain0 ;
2648879   +   H15  = H15  +    -0.01058257322803 * AcceptedCmp10
2648880   +          +     0.26755355732587 * AcceptedCmp20  +     0.40856661734724 *
2648881   +        AcceptedCmp30  +     0.02977117354989 * AcceptedCmp40
2648882   +          +       0.073655049734 * AcceptedCmp50  +     0.25562048226555 *
2648883   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + -0.01058257322803 * AcceptedCmp10 + 0.26755355732587 * 
AcceptedCmp20 + 0.40856661734724 * AcceptedCmp30 + 0.02977117354989 * AcceptedCmp40 + 
0.073655049734 * AcceptedCmp50 + 0.25562048226555 * Complain0 ;
2648884   +   H16  = H16  +    -0.65590117532084 * AcceptedCmp10
2648885   +          +    -0.31314161223579 * AcceptedCmp20  +    -0.18863165264573 *
2648886   +        AcceptedCmp30  +    -0.18832338914237 * AcceptedCmp40
2648887   +          +    -0.53765749471786 * AcceptedCmp50  +     0.17409401877513 *
2648888   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H16 = H16 + -0.65590117532084 * AcceptedCmp10 + -0.31314161223579 * 
AcceptedCmp20 + -0.18863165264573 * AcceptedCmp30 + -0.18832338914237 * AcceptedCmp40 + 
-0.53765749471786 * AcceptedCmp50 + 0.17409401877513 * Complain0 ;
2648889   +   H17  = H17  +    -0.42253231673718 * AcceptedCmp10
2648890   +          +    -0.40954345229557 * AcceptedCmp20  +    -0.30577523080786 *
2648891   +        AcceptedCmp30  +    -0.22396670899437 * AcceptedCmp40
2648892   +          +     0.05757251451004 * AcceptedCmp50  +     0.07813950542487 *
2648893   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H17 = H17 + -0.42253231673718 * AcceptedCmp10 + -0.40954345229557 * 
AcceptedCmp20 + -0.30577523080786 * AcceptedCmp30 + -0.22396670899437 * AcceptedCmp40 + 
0.05757251451004 * AcceptedCmp50 + 0.07813950542487 * Complain0 ;
2648894   +   H11  = H11  +    -0.14483542022901 * Education2n_Cycle
2648895   +          +     0.32176647745332 * EducationBasic  +     0.00900796305072 *
2648896   +        EducationGraduation  +    -0.00243484910123 * EducationMaster
2648897   +          +    -0.22074132229211 * Marital_StatusDivorced
2648898   +          +     0.70282742634901 * Marital_StatusMarried
2648899   +          +     -0.5926244797961 * Marital_StatusSingle
2648900   +          +     0.21342221410999 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.14483542022901 * Education2n_Cycle + 0.32176647745332 * 
EducationBasic + 0.00900796305072 * EducationGraduation + -0.00243484910123 * EducationMaster 
+ -0.22074132229211 * Marital_StatusDivorced + 0.70282742634901 * Marital_StatusMarried + 
-0.5926244797961 * Marital_StatusSingle + 0.21342221410999 * Marital_StatusTogether ;
2648901   +   H12  = H12  +    -0.10242932200247 * Education2n_Cycle
2648902   +          +     0.34937926721317 * EducationBasic  +    -0.20395479511872 *
2648903   +        EducationGraduation  +     0.31210327899339 * EducationMaster
2648904   +          +    -0.46376392175295 * Marital_StatusDivorced
2648905   +          +       0.589453579718 * Marital_StatusMarried
2648906   +          +    -0.45342174978481 * Marital_StatusSingle
2648907   +          +     0.70517120763557 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.10242932200247 * Education2n_Cycle + 0.34937926721317 * 
EducationBasic + -0.20395479511872 * EducationGraduation + 0.31210327899339 * EducationMaster 
+ -0.46376392175295 * Marital_StatusDivorced + 0.589453579718 * Marital_StatusMarried + 
-0.45342174978481 * Marital_StatusSingle + 0.70517120763557 * Marital_StatusTogether ;
2648908   +   H13  = H13  +     0.24858755570324 * Education2n_Cycle
2648909   +          +     0.07360039359386 * EducationBasic  +    -0.42563056620078 *
2648910   +        EducationGraduation  +    -0.25970840250323 * EducationMaster
2648911   +          +     0.26981972015482 * Marital_StatusDivorced
2648912   +          +    -0.01707364864139 * Marital_StatusMarried
2648913   +          +     0.38646060840009 * Marital_StatusSingle
2648914   +          +     0.19694047086013 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.24858755570324 * Education2n_Cycle + 0.07360039359386 * 
EducationBasic + -0.42563056620078 * EducationGraduation + -0.25970840250323 * EducationMaster 
+ 0.26981972015482 * Marital_StatusDivorced + -0.01707364864139 * Marital_StatusMarried + 
0.38646060840009 * Marital_StatusSingle + 0.19694047086013 * Marital_StatusTogether ;
2648915   +   H14  = H14  +     0.22577522124265 * Education2n_Cycle
2648916   +          +     0.04183136697557 * EducationBasic  +    -0.27725331198825 *
2648917   +        EducationGraduation  +     0.15709188532123 * EducationMaster
2648918   +          +    -0.01933675094701 * Marital_StatusDivorced
2648919   +          +     0.52969577969434 * Marital_StatusMarried
2648920   +          +      -0.348697714569 * Marital_StatusSingle
2648921   +          +      0.5020342481888 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.22577522124265 * Education2n_Cycle + 0.04183136697557 * 
EducationBasic + -0.27725331198825 * EducationGraduation + 0.15709188532123 * EducationMaster 
+ -0.01933675094701 * Marital_StatusDivorced + 0.52969577969434 * Marital_StatusMarried + 
-0.348697714569 * Marital_StatusSingle + 0.5020342481888 * Marital_StatusTogether ;
2648922   +   H15  = H15  +     0.04488332711225 * Education2n_Cycle
2648923   +          +     0.01911097443907 * EducationBasic  +    -0.11699443624996 *
2648924   +        EducationGraduation  +    -0.07291393566738 * EducationMaster
2648925   +          +    -0.04665146013984 * Marital_StatusDivorced
2648926   +          +      -0.586219175167 * Marital_StatusMarried
2648927   +          +     0.55713543417712 * Marital_StatusSingle
2648928   +          +    -0.42208959885332 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.04488332711225 * Education2n_Cycle + 0.01911097443907 * 
EducationBasic + -0.11699443624996 * EducationGraduation + -0.07291393566738 * EducationMaster 
+ -0.04665146013984 * Marital_StatusDivorced + -0.586219175167 * Marital_StatusMarried + 
0.55713543417712 * Marital_StatusSingle + -0.42208959885332 * Marital_StatusTogether ;
2648929   +   H16  = H16  +     0.09174117861154 * Education2n_Cycle
2648930   +          +     -0.1378945860659 * EducationBasic  +     -0.0728635369665 *
2648931   +        EducationGraduation  +     0.29860714824438 * EducationMaster
2648932   +          +    -0.05632171154347 * Marital_StatusDivorced
2648933   +          +     0.03215547861665 * Marital_StatusMarried
2648934   +          +     0.16870781172538 * Marital_StatusSingle
2648935   +          +    -0.04883314322676 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.09174117861154 * Education2n_Cycle + -0.1378945860659 * 
EducationBasic + -0.0728635369665 * EducationGraduation + 0.29860714824438 * EducationMaster + 
-0.05632171154347 * Marital_StatusDivorced + 0.03215547861665 * Marital_StatusMarried + 
0.16870781172538 * Marital_StatusSingle + -0.04883314322676 * Marital_StatusTogether ;
2648936   +   H17  = H17  +    -0.00343694558117 * Education2n_Cycle
2648937   +          +     0.32636427598227 * EducationBasic  +     0.16259654486833 *
2648938   +        EducationGraduation  +    -0.00424229454859 * EducationMaster
2648939   +          +    -0.21765415159355 * Marital_StatusDivorced
2648940   +          +     -0.0542857922075 * Marital_StatusMarried
2648941   +          +     0.20679907454933 * Marital_StatusSingle
2648942   +          +     0.14976519710725 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H17 = H17 + -0.00343694558117 * Education2n_Cycle + 0.32636427598227 * 
EducationBasic + 0.16259654486833 * EducationGraduation + -0.00424229454859 * EducationMaster 
+ -0.21765415159355 * Marital_StatusDivorced + -0.0542857922075 * Marital_StatusMarried + 
0.20679907454933 * Marital_StatusSingle + 0.14976519710725 * Marital_StatusTogether ;
2648943   +   H11  =     0.92977078759503 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 0.92977078759503 + H11 ;
2648944   +   H12  =    -0.97970409253156 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -0.97970409253156 + H12 ;
2648945   +   H13  =     -0.5001144792196 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.5001144792196 + H13 ;
2648946   +   H14  =    -0.90715840862541 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = -0.90715840862541 + H14 ;
2648947   +   H15  =     0.87046153389036 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = 0.87046153389036 + H15 ;
2648948   +   H16  =     0.49066122767086 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = 0.49066122767086 + H16 ;
2648949   +   H17  =    -1.05949763460293 + H17 ;
MPRINT(EM_DIAGRAM):   H17 = -1.05949763460293 + H17 ;
2648950   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
2648951   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
2648952   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
2648953   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
2648954   +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
2648955   +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
2648956   +   H17  = TANH(H17 );
MPRINT(EM_DIAGRAM):   H17 = TANH(H17 );
2648957   +END;
MPRINT(EM_DIAGRAM):   END;
2648958   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2648959   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
2648960   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
2648961   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
2648962   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
2648963   +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
2648964   +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
2648965   +   H17  = .;
MPRINT(EM_DIAGRAM):   H17 = .;
2648966   +END;
MPRINT(EM_DIAGRAM):   END;
2648967   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2648968   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2648969   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2648970   +
2648971   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
2648972   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
2648973   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2648974   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
2648975   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
2648976   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2648977   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
2648978   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2648979   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2648980   +end;
MPRINT(EM_DIAGRAM):   end;
2648981   +else do;
MPRINT(EM_DIAGRAM):   else do;
2648982   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
2648983   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
2648984   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
2648985   +   end;
MPRINT(EM_DIAGRAM):   end;
2648986   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
2648987   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
2648988   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
2648989   +   end;
MPRINT(EM_DIAGRAM):   end;
2648990   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2648991   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2648992   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2648993   +   end;
MPRINT(EM_DIAGRAM):   end;
2648994   +end;
MPRINT(EM_DIAGRAM):   end;
2648995   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2648996   +   P_DepVar1  =    -2.32998401250848 * H11  +     -3.2074078511991 * H12
2648997   +          +    -0.69549988605443 * H13  +    -1.74950789108762 * H14
2648998   +          +    -1.74013772071344 * H15  +     2.65306089869015 * H16
2648999   +          +     0.03700459000906 * H17 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.32998401250848 * H11 + -3.2074078511991 * H12 + 
-0.69549988605443 * H13 + -1.74950789108762 * H14 + -1.74013772071344 * H15 + 2.65306089869015 
* H16 + 0.03700459000906 * H17 ;
2649000   +   P_DepVar1  =    -1.51229898726716 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.51229898726716 + P_DepVar1 ;
2649001   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2649002   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2649003   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2649004   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2649005   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2649006   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2649007   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2649008   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2649009   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2649010   +END;
MPRINT(EM_DIAGRAM):   END;
2649011   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2649012   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2649013   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2649014   +END;
MPRINT(EM_DIAGRAM):   END;
2649015   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2649016   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2649017   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2649018   +END;
MPRINT(EM_DIAGRAM):   END;
2649019   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
2649020   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
2649021   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
2649022   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
2649023   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
2649024   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
2649025   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
2649026   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2649027   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2649028   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2649029   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2649030   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2649031   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2649032   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2649033   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2649034   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2649035   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2649036   +END;
MPRINT(EM_DIAGRAM):   END;
2649037   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2649038   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2649039   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2649040   +drop
2649041   +H11
2649042   +H12
2649043   +H13
2649044   +H14
2649045   +H15
2649046   +H16
2649047   +H17
2649048   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 H17 ;
2649049   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2649050    run;

NOTE: DATA STEP view saved on file EMWS8.NEURAL30_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.META2_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2649051    quit;
2649052    filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
2649053    filename emflow
2649053  ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural30\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural30\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural30: Scoring VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2649054    *------------------------------------------------------------*;
2649055    * Neural30: Scoring VALIDATE data;
2649056    *------------------------------------------------------------*;
2649057    data EMWS8.Neural30_VALIDATE
2649058    / view=EMWS8.Neural30_VALIDATE
2649059    ;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural30_VALIDATE / view=EMWS8.Neural30_VALIDATE ;
2649060    set EMWS8.Meta2_VALIDATE
2649061    ;
MPRINT(EM_DIAGRAM):   set EMWS8.Meta2_VALIDATE ;
2649062    %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Neural30\EMFLOWSCORE.sas.
2649063   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2649064   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2649065   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2649066   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2649067   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2649068   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2649069   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2649070   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2649071   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2649072   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2649073   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2649074   +LENGTH _WARN_ $4
2649075   +      F_DepVar  $ 12
2649076   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
2649077   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2649078   +
2649079   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2649080   +
2649081   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2649082   +
2649083   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2649084   +
2649085   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2649086   +
2649087   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2649088   +
2649089   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2649090   +
2649091   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2649092   +
2649093   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2649094   +
2649095   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2649096   +
2649097   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2649098   +
2649099   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2649100   +
2649101   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2649102   +
2649103   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2649104   +
2649105   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2649106   +
2649107   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2649108   +
2649109   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2649110   +
2649111   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2649112   +
2649113   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2649114   +
2649115   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2649116   +
2649117   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2649118   +
2649119   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2649120   +
2649121   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2649122   +
2649123   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2649124   +
2649125   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2649126   +
2649127   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2649128   +
2649129   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2649130   +
2649131   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2649132   +
2649133   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2649134   +
2649135   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
2649136   +
2649137   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
2649138   +
2649139   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
2649140   +
2649141   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
2649142   +
2649143   +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
2649144   +
2649145   +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
2649146   +
2649147   +      label H17 = 'Hidden: H1=7' ;
MPRINT(EM_DIAGRAM):   label H17 = 'Hidden: H1=7' ;
2649148   +
2649149   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2649150   +
2649151   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2649152   +
2649153   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2649154   +
2649155   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2649156   +
2649157   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
2649158   +
2649159   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2649160   +
2649161   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
2649162   +
2649163   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2649164   +
2649165   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2649166   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2649167   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2649168   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2649169   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2649170   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2649171   +end;
MPRINT(EM_DIAGRAM):   end;
2649172   +else do;
MPRINT(EM_DIAGRAM):   else do;
2649173   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2649174   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2649175   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2649176   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2649177   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2649178   +   end;
MPRINT(EM_DIAGRAM):   end;
2649179   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2649180   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2649181   +   end;
MPRINT(EM_DIAGRAM):   end;
2649182   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2649183   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2649184   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2649185   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2649186   +   end;
MPRINT(EM_DIAGRAM):   end;
2649187   +end;
MPRINT(EM_DIAGRAM):   end;
2649188   +
2649189   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2649190   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2649191   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2649192   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2649193   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2649194   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2649195   +end;
MPRINT(EM_DIAGRAM):   end;
2649196   +else do;
MPRINT(EM_DIAGRAM):   else do;
2649197   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2649198   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2649199   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2649200   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2649201   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2649202   +   end;
MPRINT(EM_DIAGRAM):   end;
2649203   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2649204   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2649205   +   end;
MPRINT(EM_DIAGRAM):   end;
2649206   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2649207   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2649208   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2649209   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2649210   +   end;
MPRINT(EM_DIAGRAM):   end;
2649211   +end;
MPRINT(EM_DIAGRAM):   end;
2649212   +
2649213   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2649214   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2649215   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2649216   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2649217   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2649218   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2649219   +end;
MPRINT(EM_DIAGRAM):   end;
2649220   +else do;
MPRINT(EM_DIAGRAM):   else do;
2649221   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2649222   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2649223   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2649224   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2649225   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2649226   +   end;
MPRINT(EM_DIAGRAM):   end;
2649227   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2649228   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2649229   +   end;
MPRINT(EM_DIAGRAM):   end;
2649230   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2649231   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2649232   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2649233   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2649234   +   end;
MPRINT(EM_DIAGRAM):   end;
2649235   +end;
MPRINT(EM_DIAGRAM):   end;
2649236   +
2649237   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2649238   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2649239   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2649240   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2649241   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2649242   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2649243   +end;
MPRINT(EM_DIAGRAM):   end;
2649244   +else do;
MPRINT(EM_DIAGRAM):   else do;
2649245   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2649246   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2649247   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2649248   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2649249   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2649250   +   end;
MPRINT(EM_DIAGRAM):   end;
2649251   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2649252   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2649253   +   end;
MPRINT(EM_DIAGRAM):   end;
2649254   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2649255   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2649256   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2649257   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2649258   +   end;
MPRINT(EM_DIAGRAM):   end;
2649259   +end;
MPRINT(EM_DIAGRAM):   end;
2649260   +
2649261   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2649262   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2649263   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2649264   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2649265   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2649266   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2649267   +end;
MPRINT(EM_DIAGRAM):   end;
2649268   +else do;
MPRINT(EM_DIAGRAM):   else do;
2649269   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2649270   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2649271   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2649272   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2649273   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2649274   +   end;
MPRINT(EM_DIAGRAM):   end;
2649275   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2649276   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2649277   +   end;
MPRINT(EM_DIAGRAM):   end;
2649278   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2649279   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2649280   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2649281   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2649282   +   end;
MPRINT(EM_DIAGRAM):   end;
2649283   +end;
MPRINT(EM_DIAGRAM):   end;
2649284   +
2649285   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2649286   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2649287   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2649288   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2649289   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2649290   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2649291   +end;
MPRINT(EM_DIAGRAM):   end;
2649292   +else do;
MPRINT(EM_DIAGRAM):   else do;
2649293   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2649294   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2649295   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2649296   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2649297   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2649298   +   end;
MPRINT(EM_DIAGRAM):   end;
2649299   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2649300   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2649301   +   end;
MPRINT(EM_DIAGRAM):   end;
2649302   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2649303   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2649304   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2649305   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2649306   +   end;
MPRINT(EM_DIAGRAM):   end;
2649307   +end;
MPRINT(EM_DIAGRAM):   end;
2649308   +
2649309   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2649310   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
2649311   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2649312   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2649313   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2649314   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2649315   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2649316   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2649317   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2649318   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2649319   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2649320   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2649321   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2649322   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2649323   +end;
MPRINT(EM_DIAGRAM):   end;
2649324   +else do;
MPRINT(EM_DIAGRAM):   else do;
2649325   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2649326   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2649327   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2649328   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2649329   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2649330   +   end;
MPRINT(EM_DIAGRAM):   end;
2649331   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2649332   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2649333   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2649334   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2649335   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2649336   +   end;
MPRINT(EM_DIAGRAM):   end;
2649337   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2649338   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2649339   +   end;
MPRINT(EM_DIAGRAM):   end;
2649340   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2649341   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2649342   +   end;
MPRINT(EM_DIAGRAM):   end;
2649343   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2649344   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2649345   +   end;
MPRINT(EM_DIAGRAM):   end;
2649346   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2649347   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2649348   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2649349   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2649350   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2649351   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2649352   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2649353   +   end;
MPRINT(EM_DIAGRAM):   end;
2649354   +end;
MPRINT(EM_DIAGRAM):   end;
2649355   +
2649356   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2649357   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2649358   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
2649359   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2649360   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2649361   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2649362   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2649363   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2649364   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2649365   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2649366   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2649367   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2649368   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2649369   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2649370   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2649371   +end;
MPRINT(EM_DIAGRAM):   end;
2649372   +else do;
MPRINT(EM_DIAGRAM):   else do;
2649373   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2649374   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2649375   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2649376   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2649377   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2649378   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2649379   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2649380   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2649381   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2649382   +         end;
MPRINT(EM_DIAGRAM):   end;
2649383   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2649384   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2649385   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2649386   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2649387   +            end;
MPRINT(EM_DIAGRAM):   end;
2649388   +         end;
MPRINT(EM_DIAGRAM):   end;
2649389   +      end;
MPRINT(EM_DIAGRAM):   end;
2649390   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2649391   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2649392   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2649393   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2649394   +         end;
MPRINT(EM_DIAGRAM):   end;
2649395   +      end;
MPRINT(EM_DIAGRAM):   end;
2649396   +   end;
MPRINT(EM_DIAGRAM):   end;
2649397   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2649398   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2649399   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2649400   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2649401   +      end;
MPRINT(EM_DIAGRAM):   end;
2649402   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2649403   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2649404   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2649405   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2649406   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2649407   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2649408   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2649409   +         end;
MPRINT(EM_DIAGRAM):   end;
2649410   +      end;
MPRINT(EM_DIAGRAM):   end;
2649411   +   end;
MPRINT(EM_DIAGRAM):   end;
2649412   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2649413   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2649414   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2649415   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2649416   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2649417   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2649418   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2649419   +   end;
MPRINT(EM_DIAGRAM):   end;
2649420   +end;
MPRINT(EM_DIAGRAM):   end;
2649421   +
2649422   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2649423   +*** Checking missing input Interval
2649424   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2649425   +
2649426   +IF NMISS(
2649427   +   Income ,
2649428   +   Kidhome ,
2649429   +   MntFishProducts ,
2649430   +   MntFruits ,
2649431   +   MntGoldProds ,
2649432   +   MntMeatProducts ,
2649433   +   MntSweetProducts ,
2649434   +   MntWines ,
2649435   +   NumCatalogPurchases ,
2649436   +   NumDealsPurchases ,
2649437   +   NumStorePurchases ,
2649438   +   NumWebPurchases ,
2649439   +   NumWebVisitsMonth ,
2649440   +   Recency ,
2649441   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Income , Kidhome , MntFishProducts , MntFruits , MntGoldProds 
, MntMeatProducts , MntSweetProducts , MntWines , NumCatalogPurchases , NumDealsPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , Recency , Teenhome ) THEN DO;
2649442   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2649443   +
2649444   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2649445   +END;
MPRINT(EM_DIAGRAM):   END;
2649446   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2649447   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
2649448   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2649449   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2649450   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2649451   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2649452   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2649453   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2649454   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2649455   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2649456   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2649457   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2649458   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2649459   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2649460   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2649461   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2649462   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2649463   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2649464   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2649465   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2649466   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2649467   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2649468   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2649469   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2649470   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2649471   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2649472   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2649473   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2649474   +END;
MPRINT(EM_DIAGRAM):   END;
2649475   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2649476   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2649477   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2649478   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2649479   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2649480   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2649481   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2649482   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2649483   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2649484   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2649485   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2649486   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2649487   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2649488   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
2649489   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2649490   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2649491   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2649492   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2649493   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2649494   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2649495   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2649496   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2649497   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2649498   +   ELSE S_NumCatalogPurchases
2649499   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2649500   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2649501   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2649502   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2649503   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2649504   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2649505   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2649506   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2649507   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2649508   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2649509   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2649510   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2649511   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2649512   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2649513   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2649514   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2649515   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2649516   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2649517   +END;
MPRINT(EM_DIAGRAM):   END;
2649518   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2649519   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
2649520   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2649521   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2649522   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
2649523   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2649524   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2649525   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
2649526   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2649527   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2649528   +   H11  =    -0.59781928082243 * S_Income  +     0.49830142312288 * S_Kidhome
2649529   +          +    -0.00045024466632 * S_MntFishProducts
2649530   +          +    -0.22421712710333 * S_MntFruits  +    -0.19010144853469 *
2649531   +        S_MntGoldProds  +    -0.53373773623953 * S_MntMeatProducts
2649532   +          +     0.17506402203495 * S_MntSweetProducts
2649533   +          +    -0.28551398649672 * S_MntWines  +       0.019870944777 *
2649534   +        S_NumCatalogPurchases  +     0.03537776181533 * S_NumDealsPurchases
2649535   +          +     0.05580468715403 * S_NumStorePurchases
2649536   +          +    -0.29131611132704 * S_NumWebPurchases
2649537   +          +    -0.40690084025802 * S_NumWebVisitsMonth
2649538   +          +     0.48640195058901 * S_Recency  +     0.31820890239661 *
2649539   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = -0.59781928082243 * S_Income + 0.49830142312288 * S_Kidhome + 
-0.00045024466632 * S_MntFishProducts + -0.22421712710333 * S_MntFruits + -0.19010144853469 * 
S_MntGoldProds + -0.53373773623953 * S_MntMeatProducts + 0.17506402203495 * S_MntSweetProducts 
+ -0.28551398649672 * S_MntWines + 0.019870944777 * S_NumCatalogPurchases + 0.03537776181533 * 
S_NumDealsPurchases + 0.05580468715403 * S_NumStorePurchases + -0.29131611132704 * 
S_NumWebPurchases + -0.40690084025802 * S_NumWebVisitsMonth + 0.48640195058901 * S_Recency + 
0.31820890239661 * S_Teenhome ;
2649540   +   H12  =    -0.41871753512335 * S_Income  +      0.6025072461821 * S_Kidhome
2649541   +          +    -0.03132724937716 * S_MntFishProducts
2649542   +          +     0.19114182835046 * S_MntFruits  +     0.13483463809539 *
2649543   +        S_MntGoldProds  +    -0.63593603749443 * S_MntMeatProducts
2649544   +          +    -0.07569302401223 * S_MntSweetProducts
2649545   +          +     0.67050112032753 * S_MntWines  +    -0.23159243932208 *
2649546   +        S_NumCatalogPurchases  +    -0.07183698407409 * S_NumDealsPurchases
2649547   +          +     0.54619681114623 * S_NumStorePurchases
2649548   +          +     0.44325129671249 * S_NumWebPurchases
2649549   +          +    -1.25054401670605 * S_NumWebVisitsMonth
2649550   +          +      1.2376290916151 * S_Recency  +     0.43747371517287 *
2649551   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -0.41871753512335 * S_Income + 0.6025072461821 * S_Kidhome + 
-0.03132724937716 * S_MntFishProducts + 0.19114182835046 * S_MntFruits + 0.13483463809539 * 
S_MntGoldProds + -0.63593603749443 * S_MntMeatProducts + -0.07569302401223 * 
S_MntSweetProducts + 0.67050112032753 * S_MntWines + -0.23159243932208 * S_NumCatalogPurchases 
+ -0.07183698407409 * S_NumDealsPurchases + 0.54619681114623 * S_NumStorePurchases + 
0.44325129671249 * S_NumWebPurchases + -1.25054401670605 * S_NumWebVisitsMonth + 
1.2376290916151 * S_Recency + 0.43747371517287 * S_Teenhome ;
2649552   +   H13  =      0.0713579189325 * S_Income  +    -0.05759612462349 * S_Kidhome
2649553   +          +     0.07631777381832 * S_MntFishProducts
2649554   +          +    -0.00387785552441 * S_MntFruits  +    -0.21868916314192 *
2649555   +        S_MntGoldProds  +       0.072623883197 * S_MntMeatProducts
2649556   +          +     0.12637946833766 * S_MntSweetProducts
2649557   +          +    -0.37981663841124 * S_MntWines  +    -0.89958525403162 *
2649558   +        S_NumCatalogPurchases  +    -0.17471885937598 * S_NumDealsPurchases
2649559   +          +     0.15845618359126 * S_NumStorePurchases
2649560   +          +    -0.33296932705082 * S_NumWebPurchases
2649561   +          +      0.0260072296349 * S_NumWebVisitsMonth
2649562   +          +     0.02544749712977 * S_Recency  +    -0.17381561661022 *
2649563   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = 0.0713579189325 * S_Income + -0.05759612462349 * S_Kidhome + 
0.07631777381832 * S_MntFishProducts + -0.00387785552441 * S_MntFruits + -0.21868916314192 * 
S_MntGoldProds + 0.072623883197 * S_MntMeatProducts + 0.12637946833766 * S_MntSweetProducts + 
-0.37981663841124 * S_MntWines + -0.89958525403162 * S_NumCatalogPurchases + -0.17471885937598 
* S_NumDealsPurchases + 0.15845618359126 * S_NumStorePurchases + -0.33296932705082 * 
S_NumWebPurchases + 0.0260072296349 * S_NumWebVisitsMonth + 0.02544749712977 * S_Recency + 
-0.17381561661022 * S_Teenhome ;
2649564   +   H14  =    -0.47498613710851 * S_Income  +     0.09339198401437 * S_Kidhome
2649565   +          +    -0.13642352619174 * S_MntFishProducts
2649566   +          +     0.27167245582117 * S_MntFruits  +    -0.00579747559996 *
2649567   +        S_MntGoldProds  +     0.31591387319577 * S_MntMeatProducts
2649568   +          +     0.14125815807238 * S_MntSweetProducts
2649569   +          +     0.07862916790983 * S_MntWines  +    -0.58905358997534 *
2649570   +        S_NumCatalogPurchases  +     -0.5574069633995 * S_NumDealsPurchases
2649571   +          +     0.19718828261526 * S_NumStorePurchases
2649572   +          +    -0.24156925391919 * S_NumWebPurchases
2649573   +          +    -0.25711078938749 * S_NumWebVisitsMonth
2649574   +          +     0.38883063223812 * S_Recency  +     -0.2396731334184 *
2649575   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = -0.47498613710851 * S_Income + 0.09339198401437 * S_Kidhome + 
-0.13642352619174 * S_MntFishProducts + 0.27167245582117 * S_MntFruits + -0.00579747559996 * 
S_MntGoldProds + 0.31591387319577 * S_MntMeatProducts + 0.14125815807238 * S_MntSweetProducts 
+ 0.07862916790983 * S_MntWines + -0.58905358997534 * S_NumCatalogPurchases + -0.5574069633995 
* S_NumDealsPurchases + 0.19718828261526 * S_NumStorePurchases + -0.24156925391919 * 
S_NumWebPurchases + -0.25711078938749 * S_NumWebVisitsMonth + 0.38883063223812 * S_Recency + 
-0.2396731334184 * S_Teenhome ;
2649576   +   H15  =     0.24624924979609 * S_Income  +    -0.37052106312109 * S_Kidhome
2649577   +          +     0.13579628643404 * S_MntFishProducts
2649578   +          +    -0.05263868911164 * S_MntFruits  +    -0.01504675049991 *
2649579   +        S_MntGoldProds  +     -0.4202277804998 * S_MntMeatProducts
2649580   +          +    -0.01039299374426 * S_MntSweetProducts
2649581   +          +     0.71197420459135 * S_MntWines  +    -0.35973505575029 *
2649582   +        S_NumCatalogPurchases  +     -0.4415445481482 * S_NumDealsPurchases
2649583   +          +     0.58897740652611 * S_NumStorePurchases
2649584   +          +     0.24564485851062 * S_NumWebPurchases
2649585   +          +    -0.13976320243555 * S_NumWebVisitsMonth
2649586   +          +      0.1199367613063 * S_Recency  +    -0.15283161418313 *
2649587   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H15 = 0.24624924979609 * S_Income + -0.37052106312109 * S_Kidhome + 
0.13579628643404 * S_MntFishProducts + -0.05263868911164 * S_MntFruits + -0.01504675049991 * 
S_MntGoldProds + -0.4202277804998 * S_MntMeatProducts + -0.01039299374426 * S_MntSweetProducts 
+ 0.71197420459135 * S_MntWines + -0.35973505575029 * S_NumCatalogPurchases + -0.4415445481482 
* S_NumDealsPurchases + 0.58897740652611 * S_NumStorePurchases + 0.24564485851062 * 
S_NumWebPurchases + -0.13976320243555 * S_NumWebVisitsMonth + 0.1199367613063 * S_Recency + 
-0.15283161418313 * S_Teenhome ;
2649588   +   H16  =     0.23493799758749 * S_Income  +     0.07038278079069 * S_Kidhome
2649589   +          +    -0.45448768538367 * S_MntFishProducts
2649590   +          +     0.02622380709004 * S_MntFruits  +     0.14726698184115 *
2649591   +        S_MntGoldProds  +     0.65760183569767 * S_MntMeatProducts
2649592   +          +    -0.16936256277023 * S_MntSweetProducts
2649593   +          +    -0.40647066866305 * S_MntWines  +     0.99645493491726 *
2649594   +        S_NumCatalogPurchases  +     0.65587239961358 * S_NumDealsPurchases
2649595   +          +    -0.22309716855774 * S_NumStorePurchases
2649596   +          +    -0.61204529910842 * S_NumWebPurchases
2649597   +          +     0.43742228867615 * S_NumWebVisitsMonth
2649598   +          +    -0.56099034256092 * S_Recency  +     -0.2445351671148 *
2649599   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H16 = 0.23493799758749 * S_Income + 0.07038278079069 * S_Kidhome + 
-0.45448768538367 * S_MntFishProducts + 0.02622380709004 * S_MntFruits + 0.14726698184115 * 
S_MntGoldProds + 0.65760183569767 * S_MntMeatProducts + -0.16936256277023 * S_MntSweetProducts 
+ -0.40647066866305 * S_MntWines + 0.99645493491726 * S_NumCatalogPurchases + 0.65587239961358 
* S_NumDealsPurchases + -0.22309716855774 * S_NumStorePurchases + -0.61204529910842 * 
S_NumWebPurchases + 0.43742228867615 * S_NumWebVisitsMonth + -0.56099034256092 * S_Recency + 
-0.2445351671148 * S_Teenhome ;
2649600   +   H17  =    -0.00107702057163 * S_Income  +     0.25116135719972 * S_Kidhome
2649601   +          +    -0.04540308470858 * S_MntFishProducts
2649602   +          +        0.21487241577 * S_MntFruits  +    -0.12914913547414 *
2649603   +        S_MntGoldProds  +    -0.04149021191395 * S_MntMeatProducts
2649604   +          +     0.02853521979141 * S_MntSweetProducts
2649605   +          +     -0.2435805887418 * S_MntWines  +    -0.04509621661407 *
2649606   +        S_NumCatalogPurchases  +    -0.26492036720429 * S_NumDealsPurchases
2649607   +          +     -0.3299561248944 * S_NumStorePurchases
2649608   +          +    -0.09806597448224 * S_NumWebPurchases
2649609   +          +      0.0427056351245 * S_NumWebVisitsMonth
2649610   +          +     0.03953235628202 * S_Recency  +    -0.11317308767713 *
2649611   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H17 = -0.00107702057163 * S_Income + 0.25116135719972 * S_Kidhome + 
-0.04540308470858 * S_MntFishProducts + 0.21487241577 * S_MntFruits + -0.12914913547414 * 
S_MntGoldProds + -0.04149021191395 * S_MntMeatProducts + 0.02853521979141 * S_MntSweetProducts 
+ -0.2435805887418 * S_MntWines + -0.04509621661407 * S_NumCatalogPurchases + 
-0.26492036720429 * S_NumDealsPurchases + -0.3299561248944 * S_NumStorePurchases + 
-0.09806597448224 * S_NumWebPurchases + 0.0427056351245 * S_NumWebVisitsMonth + 
0.03953235628202 * S_Recency + -0.11317308767713 * S_Teenhome ;
2649612   +   H11  = H11  +     0.50033674561531 * AcceptedCmp10
2649613   +          +    -0.02275693117286 * AcceptedCmp20  +     0.31338891533156 *
2649614   +        AcceptedCmp30  +      0.3901248845706 * AcceptedCmp40
2649615   +          +     0.44314358358111 * AcceptedCmp50  +    -0.20444060864498 *
2649616   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.50033674561531 * AcceptedCmp10 + -0.02275693117286 * 
AcceptedCmp20 + 0.31338891533156 * AcceptedCmp30 + 0.3901248845706 * AcceptedCmp40 + 
0.44314358358111 * AcceptedCmp50 + -0.20444060864498 * Complain0 ;
2649617   +   H12  = H12  +     0.30103938822692 * AcceptedCmp10
2649618   +          +     0.54298746723422 * AcceptedCmp20  +     0.50401040035525 *
2649619   +        AcceptedCmp30  +     0.43447710825306 * AcceptedCmp40
2649620   +          +     0.60794421030027 * AcceptedCmp50  +    -0.28114274461319 *
2649621   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.30103938822692 * AcceptedCmp10 + 0.54298746723422 * 
AcceptedCmp20 + 0.50401040035525 * AcceptedCmp30 + 0.43447710825306 * AcceptedCmp40 + 
0.60794421030027 * AcceptedCmp50 + -0.28114274461319 * Complain0 ;
2649622   +   H13  = H13  +     -0.1890212967757 * AcceptedCmp10
2649623   +          +    -0.11487406996391 * AcceptedCmp20  +    -0.22740618754863 *
2649624   +        AcceptedCmp30  +      0.2354510231918 * AcceptedCmp40
2649625   +          +    -0.14327434649067 * AcceptedCmp50  +    -0.17839080850556 *
2649626   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.1890212967757 * AcceptedCmp10 + -0.11487406996391 * 
AcceptedCmp20 + -0.22740618754863 * AcceptedCmp30 + 0.2354510231918 * AcceptedCmp40 + 
-0.14327434649067 * AcceptedCmp50 + -0.17839080850556 * Complain0 ;
2649627   +   H14  = H14  +    -0.28194187416219 * AcceptedCmp10
2649628   +          +     0.11732089254624 * AcceptedCmp20  +     0.34964075536156 *
2649629   +        AcceptedCmp30  +     0.05772396286169 * AcceptedCmp40
2649630   +          +    -0.08671748651826 * AcceptedCmp50  +      0.0629540108407 *
2649631   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.28194187416219 * AcceptedCmp10 + 0.11732089254624 * 
AcceptedCmp20 + 0.34964075536156 * AcceptedCmp30 + 0.05772396286169 * AcceptedCmp40 + 
-0.08671748651826 * AcceptedCmp50 + 0.0629540108407 * Complain0 ;
2649632   +   H15  = H15  +    -0.01058257322803 * AcceptedCmp10
2649633   +          +     0.26755355732587 * AcceptedCmp20  +     0.40856661734724 *
2649634   +        AcceptedCmp30  +     0.02977117354989 * AcceptedCmp40
2649635   +          +       0.073655049734 * AcceptedCmp50  +     0.25562048226555 *
2649636   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + -0.01058257322803 * AcceptedCmp10 + 0.26755355732587 * 
AcceptedCmp20 + 0.40856661734724 * AcceptedCmp30 + 0.02977117354989 * AcceptedCmp40 + 
0.073655049734 * AcceptedCmp50 + 0.25562048226555 * Complain0 ;
2649637   +   H16  = H16  +    -0.65590117532084 * AcceptedCmp10
2649638   +          +    -0.31314161223579 * AcceptedCmp20  +    -0.18863165264573 *
2649639   +        AcceptedCmp30  +    -0.18832338914237 * AcceptedCmp40
2649640   +          +    -0.53765749471786 * AcceptedCmp50  +     0.17409401877513 *
2649641   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H16 = H16 + -0.65590117532084 * AcceptedCmp10 + -0.31314161223579 * 
AcceptedCmp20 + -0.18863165264573 * AcceptedCmp30 + -0.18832338914237 * AcceptedCmp40 + 
-0.53765749471786 * AcceptedCmp50 + 0.17409401877513 * Complain0 ;
2649642   +   H17  = H17  +    -0.42253231673718 * AcceptedCmp10
2649643   +          +    -0.40954345229557 * AcceptedCmp20  +    -0.30577523080786 *
2649644   +        AcceptedCmp30  +    -0.22396670899437 * AcceptedCmp40
2649645   +          +     0.05757251451004 * AcceptedCmp50  +     0.07813950542487 *
2649646   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H17 = H17 + -0.42253231673718 * AcceptedCmp10 + -0.40954345229557 * 
AcceptedCmp20 + -0.30577523080786 * AcceptedCmp30 + -0.22396670899437 * AcceptedCmp40 + 
0.05757251451004 * AcceptedCmp50 + 0.07813950542487 * Complain0 ;
2649647   +   H11  = H11  +    -0.14483542022901 * Education2n_Cycle
2649648   +          +     0.32176647745332 * EducationBasic  +     0.00900796305072 *
2649649   +        EducationGraduation  +    -0.00243484910123 * EducationMaster
2649650   +          +    -0.22074132229211 * Marital_StatusDivorced
2649651   +          +     0.70282742634901 * Marital_StatusMarried
2649652   +          +     -0.5926244797961 * Marital_StatusSingle
2649653   +          +     0.21342221410999 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.14483542022901 * Education2n_Cycle + 0.32176647745332 * 
EducationBasic + 0.00900796305072 * EducationGraduation + -0.00243484910123 * EducationMaster 
+ -0.22074132229211 * Marital_StatusDivorced + 0.70282742634901 * Marital_StatusMarried + 
-0.5926244797961 * Marital_StatusSingle + 0.21342221410999 * Marital_StatusTogether ;
2649654   +   H12  = H12  +    -0.10242932200247 * Education2n_Cycle
2649655   +          +     0.34937926721317 * EducationBasic  +    -0.20395479511872 *
2649656   +        EducationGraduation  +     0.31210327899339 * EducationMaster
2649657   +          +    -0.46376392175295 * Marital_StatusDivorced
2649658   +          +       0.589453579718 * Marital_StatusMarried
2649659   +          +    -0.45342174978481 * Marital_StatusSingle
2649660   +          +     0.70517120763557 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.10242932200247 * Education2n_Cycle + 0.34937926721317 * 
EducationBasic + -0.20395479511872 * EducationGraduation + 0.31210327899339 * EducationMaster 
+ -0.46376392175295 * Marital_StatusDivorced + 0.589453579718 * Marital_StatusMarried + 
-0.45342174978481 * Marital_StatusSingle + 0.70517120763557 * Marital_StatusTogether ;
2649661   +   H13  = H13  +     0.24858755570324 * Education2n_Cycle
2649662   +          +     0.07360039359386 * EducationBasic  +    -0.42563056620078 *
2649663   +        EducationGraduation  +    -0.25970840250323 * EducationMaster
2649664   +          +     0.26981972015482 * Marital_StatusDivorced
2649665   +          +    -0.01707364864139 * Marital_StatusMarried
2649666   +          +     0.38646060840009 * Marital_StatusSingle
2649667   +          +     0.19694047086013 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.24858755570324 * Education2n_Cycle + 0.07360039359386 * 
EducationBasic + -0.42563056620078 * EducationGraduation + -0.25970840250323 * EducationMaster 
+ 0.26981972015482 * Marital_StatusDivorced + -0.01707364864139 * Marital_StatusMarried + 
0.38646060840009 * Marital_StatusSingle + 0.19694047086013 * Marital_StatusTogether ;
2649668   +   H14  = H14  +     0.22577522124265 * Education2n_Cycle
2649669   +          +     0.04183136697557 * EducationBasic  +    -0.27725331198825 *
2649670   +        EducationGraduation  +     0.15709188532123 * EducationMaster
2649671   +          +    -0.01933675094701 * Marital_StatusDivorced
2649672   +          +     0.52969577969434 * Marital_StatusMarried
2649673   +          +      -0.348697714569 * Marital_StatusSingle
2649674   +          +      0.5020342481888 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.22577522124265 * Education2n_Cycle + 0.04183136697557 * 
EducationBasic + -0.27725331198825 * EducationGraduation + 0.15709188532123 * EducationMaster 
+ -0.01933675094701 * Marital_StatusDivorced + 0.52969577969434 * Marital_StatusMarried + 
-0.348697714569 * Marital_StatusSingle + 0.5020342481888 * Marital_StatusTogether ;
2649675   +   H15  = H15  +     0.04488332711225 * Education2n_Cycle
2649676   +          +     0.01911097443907 * EducationBasic  +    -0.11699443624996 *
2649677   +        EducationGraduation  +    -0.07291393566738 * EducationMaster
2649678   +          +    -0.04665146013984 * Marital_StatusDivorced
2649679   +          +      -0.586219175167 * Marital_StatusMarried
2649680   +          +     0.55713543417712 * Marital_StatusSingle
2649681   +          +    -0.42208959885332 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.04488332711225 * Education2n_Cycle + 0.01911097443907 * 
EducationBasic + -0.11699443624996 * EducationGraduation + -0.07291393566738 * EducationMaster 
+ -0.04665146013984 * Marital_StatusDivorced + -0.586219175167 * Marital_StatusMarried + 
0.55713543417712 * Marital_StatusSingle + -0.42208959885332 * Marital_StatusTogether ;
2649682   +   H16  = H16  +     0.09174117861154 * Education2n_Cycle
2649683   +          +     -0.1378945860659 * EducationBasic  +     -0.0728635369665 *
2649684   +        EducationGraduation  +     0.29860714824438 * EducationMaster
2649685   +          +    -0.05632171154347 * Marital_StatusDivorced
2649686   +          +     0.03215547861665 * Marital_StatusMarried
2649687   +          +     0.16870781172538 * Marital_StatusSingle
2649688   +          +    -0.04883314322676 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.09174117861154 * Education2n_Cycle + -0.1378945860659 * 
EducationBasic + -0.0728635369665 * EducationGraduation + 0.29860714824438 * EducationMaster + 
-0.05632171154347 * Marital_StatusDivorced + 0.03215547861665 * Marital_StatusMarried + 
0.16870781172538 * Marital_StatusSingle + -0.04883314322676 * Marital_StatusTogether ;
2649689   +   H17  = H17  +    -0.00343694558117 * Education2n_Cycle
2649690   +          +     0.32636427598227 * EducationBasic  +     0.16259654486833 *
2649691   +        EducationGraduation  +    -0.00424229454859 * EducationMaster
2649692   +          +    -0.21765415159355 * Marital_StatusDivorced
2649693   +          +     -0.0542857922075 * Marital_StatusMarried
2649694   +          +     0.20679907454933 * Marital_StatusSingle
2649695   +          +     0.14976519710725 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H17 = H17 + -0.00343694558117 * Education2n_Cycle + 0.32636427598227 * 
EducationBasic + 0.16259654486833 * EducationGraduation + -0.00424229454859 * EducationMaster 
+ -0.21765415159355 * Marital_StatusDivorced + -0.0542857922075 * Marital_StatusMarried + 
0.20679907454933 * Marital_StatusSingle + 0.14976519710725 * Marital_StatusTogether ;
2649696   +   H11  =     0.92977078759503 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 0.92977078759503 + H11 ;
2649697   +   H12  =    -0.97970409253156 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -0.97970409253156 + H12 ;
2649698   +   H13  =     -0.5001144792196 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.5001144792196 + H13 ;
2649699   +   H14  =    -0.90715840862541 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = -0.90715840862541 + H14 ;
2649700   +   H15  =     0.87046153389036 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = 0.87046153389036 + H15 ;
2649701   +   H16  =     0.49066122767086 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = 0.49066122767086 + H16 ;
2649702   +   H17  =    -1.05949763460293 + H17 ;
MPRINT(EM_DIAGRAM):   H17 = -1.05949763460293 + H17 ;
2649703   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
2649704   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
2649705   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
2649706   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
2649707   +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
2649708   +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
2649709   +   H17  = TANH(H17 );
MPRINT(EM_DIAGRAM):   H17 = TANH(H17 );
2649710   +END;
MPRINT(EM_DIAGRAM):   END;
2649711   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2649712   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
2649713   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
2649714   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
2649715   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
2649716   +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
2649717   +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
2649718   +   H17  = .;
MPRINT(EM_DIAGRAM):   H17 = .;
2649719   +END;
MPRINT(EM_DIAGRAM):   END;
2649720   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2649721   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2649722   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2649723   +
2649724   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
2649725   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
2649726   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2649727   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
2649728   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
2649729   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2649730   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
2649731   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2649732   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2649733   +end;
MPRINT(EM_DIAGRAM):   end;
2649734   +else do;
MPRINT(EM_DIAGRAM):   else do;
2649735   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
2649736   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
2649737   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
2649738   +   end;
MPRINT(EM_DIAGRAM):   end;
2649739   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
2649740   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
2649741   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
2649742   +   end;
MPRINT(EM_DIAGRAM):   end;
2649743   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2649744   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2649745   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2649746   +   end;
MPRINT(EM_DIAGRAM):   end;
2649747   +end;
MPRINT(EM_DIAGRAM):   end;
2649748   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2649749   +   P_DepVar1  =    -2.32998401250848 * H11  +     -3.2074078511991 * H12
2649750   +          +    -0.69549988605443 * H13  +    -1.74950789108762 * H14
2649751   +          +    -1.74013772071344 * H15  +     2.65306089869015 * H16
2649752   +          +     0.03700459000906 * H17 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.32998401250848 * H11 + -3.2074078511991 * H12 + 
-0.69549988605443 * H13 + -1.74950789108762 * H14 + -1.74013772071344 * H15 + 2.65306089869015 
* H16 + 0.03700459000906 * H17 ;
2649753   +   P_DepVar1  =    -1.51229898726716 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.51229898726716 + P_DepVar1 ;
2649754   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2649755   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2649756   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2649757   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2649758   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2649759   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2649760   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2649761   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2649762   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2649763   +END;
MPRINT(EM_DIAGRAM):   END;
2649764   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2649765   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2649766   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2649767   +END;
MPRINT(EM_DIAGRAM):   END;
2649768   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2649769   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2649770   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2649771   +END;
MPRINT(EM_DIAGRAM):   END;
2649772   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
2649773   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
2649774   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
2649775   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
2649776   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
2649777   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
2649778   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
2649779   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2649780   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2649781   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2649782   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2649783   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2649784   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2649785   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2649786   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2649787   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2649788   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2649789   +END;
MPRINT(EM_DIAGRAM):   END;
2649790   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2649791   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2649792   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2649793   +drop
2649794   +H11
2649795   +H12
2649796   +H13
2649797   +H14
2649798   +H15
2649799   +H16
2649800   +H17
2649801   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 H17 ;
2649802   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2649803    run;

NOTE: DATA STEP view saved on file EMWS8.NEURAL30_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.META2_VALIDATE.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2649804    quit;
2649805    filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
2649806    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
2649807    * Neural30: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * Neural30: Computing metadata for TRAIN data;
2649808    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;

NOTE: View EMWS8.NEURAL30_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural30\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS8.Neural30_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS8.Neural30_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS8.Neural30_TRAIN out=WORK.M1F9KHX8 noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1F9KHX8;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20 
INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M1F9KHX8(keep=name type length label format formatl 
formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then format = strip(format)!!strip(put(formatl, 
best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, 
best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then informat = 
strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, 
best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1F9KHX8;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M1F9KHX8;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M3B48XHA NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3B48XHA;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M3B48XHA;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0OYJ8Q9(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M3B48XHA;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3B48XHA;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 
FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M3B48XHA;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" 
"MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" 
"QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" "YEAR" "YYMMDD" "YYMON" 
"YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" 
"EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) 
formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = 
"DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) 
formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" 
"NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" 
"SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = 
"DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then 
level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 
'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 
'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ 
('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 
'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 
'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3B48XHA;
MPRINT(EMADVISECOLUMNS):   set WORK.M3B48XHA;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= 
"Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= 
"Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower limit" UPPERLIMIT= 
"Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= 
"Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Meta2_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Meta2_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural30_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT 
LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "Neural30";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("P_DEPVAR1") creator = "Neural30";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR1") creator = "Neural30";
MPRINT(EM_DIAGRAM):   when("P_DEPVAR0") creator = "Neural30";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR0") creator = "Neural30";
MPRINT(EM_DIAGRAM):   when("F_DEPVAR") creator = "Neural30";
MPRINT(EM_DIAGRAM):   when("I_DEPVAR") creator = "Neural30";
MPRINT(EM_DIAGRAM):   when("U_DEPVAR") creator = "Neural30";
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "Neural30";
MPRINT(EM_DIAGRAM):   when("DEPVAR") model = "Neural30";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural30: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
2650120    data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
2650121    set EMWS8.Neural30_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural30_EMINFO;
2650122    where DATA='Neural30' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='Neural30' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 
'MODEL');
2650123    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.NEURAL30_EMINFO.
      WHERE (DATA='Neural30') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2650124    data EMWS8.Neural30_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS8.Neural30_EMINFO;
2650125    length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
2650126    input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
2650127    cards;
MPRINT(EM_DIAGRAM):   cards;

NOTE: The data set EMWS8.NEURAL30_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   run;
2650131    run;
2650132    data EMWS8.Neural30_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural30_EMINFO;
2650133    set EMWS8.Neural30_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural30_EMINFO WORK.MODELTEMP_INFO;
2650134    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.NEURAL30_EMINFO.
NOTE: There were 0 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS8.NEURAL30_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2650135    proc sort data = EMWS8.Neural30_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.Neural30_EMINFO NOTHREADS;
2650136    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
2650137    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.NEURAL30_EMINFO.
NOTE: The data set EMWS8.NEURAL30_EMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2650138    proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
2650139    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
2650140    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set EMWS8.FIMPORT_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 1 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2650141    proc sort data = EMWS8.Neural30_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS8.Neural30_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
2650142    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
2650143    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 3 observations read from the data set EMWS8.NEURAL30_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2650144    data EMWS8.Neural30_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural30_EMINFO;
2650145    merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
2650146    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
2650147    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 3 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS8.NEURAL30_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2650148    proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
2650149    delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
2650150    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
2650151    quit;
MPRINT(EM_DIAGRAM):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.07 seconds
      cpu time            0.06 seconds
      

NOTE: View EMWS8.NEURAL30_TRAIN.VIEW used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      
NOTE: View EMWS8.NEURAL30_VALIDATE.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
