MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "28. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "19.31 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                28. April 2016
Time:                19.31 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O1DZDLGR 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural30\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O1DZDLGR new;
MPRINT(EM_DIAGRAM):   run;
314963     data work.outkey;
MPRINT(EM_DIAGRAM):    data work.outkey;
314964     set EMWS8.Neural30_OUTKEY;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural30_OUTKEY;
314965     if upcase(ROLE) = 'HIDDEN';
MPRINT(EM_DIAGRAM):   if upcase(ROLE) = 'HIDDEN';
314966     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 36 observations read from the data set EMWS8.NEURAL30_OUTKEY.
NOTE: The data set WORK.OUTKEY has 7 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

314967     filename emflow
314967   ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural30\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural30\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural30: Scoring DATA data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
314968     *------------------------------------------------------------*;
314969     * Neural30: Scoring DATA data;
314970     *------------------------------------------------------------*;
314971     data EMWS8.Neural30_TRAIN
314972     / view=EMWS8.Neural30_TRAIN
314973     ;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural30_TRAIN / view=EMWS8.Neural30_TRAIN ;
314974     set EMWS8.Meta2_TRAIN
314975     ;
MPRINT(EM_DIAGRAM):   set EMWS8.Meta2_TRAIN ;
314976     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Neural30\EMFLOWSCORE.sas.
314977    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
314978    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
314979    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
314980    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
314981    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
314982    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
314983    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
314984    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
314985    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
314986    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
314987    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
314988    +LENGTH _WARN_ $4
314989    +      F_DepVar  $ 12
314990    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
314991    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
314992    +
314993    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
314994    +
314995    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
314996    +
314997    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
314998    +
314999    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
315000    +
315001    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
315002    +
315003    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
315004    +
315005    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
315006    +
315007    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
315008    +
315009    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
315010    +
315011    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
315012    +
315013    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
315014    +
315015    +      label S_Year_Birth = 'Standard: Year_Birth' ;
MPRINT(EM_DIAGRAM):   label S_Year_Birth = 'Standard: Year_Birth' ;
315016    +
315017    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
315018    +
315019    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
315020    +
315021    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
315022    +
315023    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
315024    +
315025    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
315026    +
315027    +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
315028    +
315029    +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
315030    +
315031    +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
315032    +
315033    +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
315034    +
315035    +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
315036    +
315037    +      label H17 = 'Hidden: H1=7' ;
MPRINT(EM_DIAGRAM):   label H17 = 'Hidden: H1=7' ;
315038    +
315039    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
315040    +
315041    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
315042    +
315043    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
315044    +
315045    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
315046    +
315047    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
315048    +
315049    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
315050    +
315051    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
315052    +
315053    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
315054    +
315055    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
315056    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
315057    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
315058    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
315059    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
315060    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
315061    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
315062    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
315063    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
315064    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
315065    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
315066    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
315067    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
315068    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
315069    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
315070    +end;
MPRINT(EM_DIAGRAM):   end;
315071    +else do;
MPRINT(EM_DIAGRAM):   else do;
315072    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
315073    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
315074    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
315075    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
315076    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
315077    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
315078    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
315079    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
315080    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
315081    +         end;
MPRINT(EM_DIAGRAM):   end;
315082    +         else do;
MPRINT(EM_DIAGRAM):   else do;
315083    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
315084    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
315085    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
315086    +            end;
MPRINT(EM_DIAGRAM):   end;
315087    +         end;
MPRINT(EM_DIAGRAM):   end;
315088    +      end;
MPRINT(EM_DIAGRAM):   end;
315089    +      else do;
MPRINT(EM_DIAGRAM):   else do;
315090    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
315091    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
315092    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
315093    +         end;
MPRINT(EM_DIAGRAM):   end;
315094    +      end;
MPRINT(EM_DIAGRAM):   end;
315095    +   end;
MPRINT(EM_DIAGRAM):   end;
315096    +   else do;
MPRINT(EM_DIAGRAM):   else do;
315097    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
315098    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
315099    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
315100    +      end;
MPRINT(EM_DIAGRAM):   end;
315101    +      else do;
MPRINT(EM_DIAGRAM):   else do;
315102    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
315103    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
315104    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
315105    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
315106    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
315107    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
315108    +         end;
MPRINT(EM_DIAGRAM):   end;
315109    +      end;
MPRINT(EM_DIAGRAM):   end;
315110    +   end;
MPRINT(EM_DIAGRAM):   end;
315111    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
315112    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
315113    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
315114    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
315115    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
315116    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
315117    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
315118    +   end;
MPRINT(EM_DIAGRAM):   end;
315119    +end;
MPRINT(EM_DIAGRAM):   end;
315120    +
315121    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
315122    +*** Checking missing input Interval
315123    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
315124    +
315125    +IF NMISS(
315126    +   AcceptedCmpTotal ,
315127    +   Frq ,
315128    +   Income ,
315129    +   Mnt ,
315130    +   MntGoldProds ,
315131    +   MntMeatProducts ,
315132    +   NumCatalogPurchases ,
315133    +   NumDealsPurchases ,
315134    +   NumWebVisitsMonth ,
315135    +   RFMstat ,
315136    +   Recency ,
315137    +   Teenhome ,
315138    +   Year_Birth   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Income , Mnt , MntGoldProds , 
MntMeatProducts , NumCatalogPurchases , NumDealsPurchases , NumWebVisitsMonth , RFMstat , 
Recency , Teenhome , Year_Birth ) THEN DO;
315139    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
315140    +
315141    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
315142    +END;
MPRINT(EM_DIAGRAM):   END;
315143    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
315144    +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
The SAS System

315145    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
315146    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
315147    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
315148    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
315149    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
315150    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
315151    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
315152    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
315153    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
315154    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
315155    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
315156    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
315157    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
315158    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
315159    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
315160    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
315161    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
315162    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
315163    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
315164    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
315165    +   S_Year_Birth  =    -163.205330145852 +     0.08289609202864 * Year_Birth ;
MPRINT(EM_DIAGRAM):   S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
315166    +END;
MPRINT(EM_DIAGRAM):   END;
315167    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
315168    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
315169    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
315170    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
315171    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
315172    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
315173    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
315174    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
315175    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
315176    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
315177    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
315178    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
315179    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
315180    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
315181    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
315182    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
315183    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
315184    +   ELSE S_NumCatalogPurchases
315185    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
315186    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
315187    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
315188    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
315189    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
315190    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
315191    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
315192    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
315193    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
315194    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
315195    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
315196    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
315197    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
315198    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
315199    +   IF MISSING( Year_Birth ) THEN S_Year_Birth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Year_Birth ) THEN S_Year_Birth = . ;
315200    +   ELSE S_Year_Birth  =    -163.205330145852 +     0.08289609202864 *
315201    +        Year_Birth ;
MPRINT(EM_DIAGRAM):   ELSE S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
315202    +END;
MPRINT(EM_DIAGRAM):   END;
315203    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
315204    +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
315205    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
315206    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
315207    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
315208    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
315209    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
315210    +   H11  =      0.5448177358872 * S_AcceptedCmpTotal  +    -0.56918032958607 *
315211    +        S_Frq  +     0.21060618200218 * S_Income  +    -0.40246310954349 *
315212    +        S_Mnt  +    -0.18690574082736 * S_MntGoldProds
315213    +          +     0.83028677347709 * S_MntMeatProducts
315214    +          +     0.56366676093724 * S_NumCatalogPurchases
315215    +          +     0.63662278307649 * S_NumDealsPurchases
315216    +          +     0.45030521898264 * S_NumWebVisitsMonth
315217    +          +     0.23005584857727 * S_RFMstat  +    -0.64234820627061 *
315218    +        S_Recency  +     0.00774462163198 * S_Teenhome
315219    +          +     0.03680161242347 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H11 = 0.5448177358872 * S_AcceptedCmpTotal + -0.56918032958607 * S_Frq + 
0.21060618200218 * S_Income + -0.40246310954349 * S_Mnt + -0.18690574082736 * S_MntGoldProds + 
0.83028677347709 * S_MntMeatProducts + 0.56366676093724 * S_NumCatalogPurchases + 
0.63662278307649 * S_NumDealsPurchases + 0.45030521898264 * S_NumWebVisitsMonth + 
0.23005584857727 * S_RFMstat + -0.64234820627061 * S_Recency + 0.00774462163198 * S_Teenhome + 
0.03680161242347 * S_Year_Birth ;
315220    +   H12  =     0.66298961317118 * S_AcceptedCmpTotal  +      -0.935153223999 *
315221    +        S_Frq  +     0.41449292848187 * S_Income  +    -1.26694271574069 *
315222    +        S_Mnt  +     0.18765833055879 * S_MntGoldProds
315223    +          +       0.802198131853 * S_MntMeatProducts
315224    +          +     0.80699693779953 * S_NumCatalogPurchases
315225    +          +    -0.32111921080627 * S_NumDealsPurchases
315226    +          +     1.05495977150176 * S_NumWebVisitsMonth
315227    +          +    -0.03067071763188 * S_RFMstat  +    -1.14158068786273 *
315228    +        S_Recency  +     -0.3863391299289 * S_Teenhome
315229    +          +    -0.01515301188334 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H12 = 0.66298961317118 * S_AcceptedCmpTotal + -0.935153223999 * S_Frq + 
0.41449292848187 * S_Income + -1.26694271574069 * S_Mnt + 0.18765833055879 * S_MntGoldProds + 
0.802198131853 * S_MntMeatProducts + 0.80699693779953 * S_NumCatalogPurchases + 
-0.32111921080627 * S_NumDealsPurchases + 1.05495977150176 * S_NumWebVisitsMonth + 
-0.03067071763188 * S_RFMstat + -1.14158068786273 * S_Recency + -0.3863391299289 * S_Teenhome 
+ -0.01515301188334 * S_Year_Birth ;
315230    +   H13  =    -0.20258357169781 * S_AcceptedCmpTotal  +    -0.01927951320398 *
315231    +        S_Frq  +     0.04768604929306 * S_Income  +     0.30271184148932 *
315232    +        S_Mnt  +    -0.24825280571811 * S_MntGoldProds
315233    +          +     0.56634068580527 * S_MntMeatProducts
315234    +          +    -0.06012432168804 * S_NumCatalogPurchases
315235    +          +     0.00616163066885 * S_NumDealsPurchases
315236    +          +    -0.28643715149767 * S_NumWebVisitsMonth
315237    +          +    -0.21657284982294 * S_RFMstat  +    -0.11323681460779 *
315238    +        S_Recency  +    -0.05360047278594 * S_Teenhome
315239    +          +     -0.3574952891844 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H13 = -0.20258357169781 * S_AcceptedCmpTotal + -0.01927951320398 * S_Frq 
+ 0.04768604929306 * S_Income + 0.30271184148932 * S_Mnt + -0.24825280571811 * S_MntGoldProds 
+ 0.56634068580527 * S_MntMeatProducts + -0.06012432168804 * S_NumCatalogPurchases + 
0.00616163066885 * S_NumDealsPurchases + -0.28643715149767 * S_NumWebVisitsMonth + 
-0.21657284982294 * S_RFMstat + -0.11323681460779 * S_Recency + -0.05360047278594 * S_Teenhome 
+ -0.3574952891844 * S_Year_Birth ;
315240    +   H14  =    -0.01671557172552 * S_AcceptedCmpTotal  +     0.14126480109635 *
315241    +        S_Frq  +    -0.16542260420764 * S_Income  +    -0.02938555904655 *
315242    +        S_Mnt  +    -0.09628993953297 * S_MntGoldProds
315243    +          +     0.29490772106233 * S_MntMeatProducts
315244    +          +    -0.37973658516518 * S_NumCatalogPurchases
315245    +          +     0.08377613406035 * S_NumDealsPurchases
315246    +          +    -0.17242298863338 * S_NumWebVisitsMonth
315247    +          +     0.24623716603984 * S_RFMstat  +     0.27333937644041 *
315248    +        S_Recency  +    -0.00972098456963 * S_Teenhome
315249    +          +      0.0278167406933 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H14 = -0.01671557172552 * S_AcceptedCmpTotal + 0.14126480109635 * S_Frq 
+ -0.16542260420764 * S_Income + -0.02938555904655 * S_Mnt + -0.09628993953297 * 
S_MntGoldProds + 0.29490772106233 * S_MntMeatProducts + -0.37973658516518 * 
S_NumCatalogPurchases + 0.08377613406035 * S_NumDealsPurchases + -0.17242298863338 * 
S_NumWebVisitsMonth + 0.24623716603984 * S_RFMstat + 0.27333937644041 * S_Recency + 
-0.00972098456963 * S_Teenhome + 0.0278167406933 * S_Year_Birth ;
315250    +   H15  =     0.26338443874493 * S_AcceptedCmpTotal  +    -1.05933447721817 *
315251    +        S_Frq  +     0.15944073710657 * S_Income  +    -0.08201141214939 *
315252    +        S_Mnt  +     0.21740350334003 * S_MntGoldProds
315253    +          +     1.25414895016379 * S_MntMeatProducts
315254    +          +     1.38122748809658 * S_NumCatalogPurchases
315255    +          +     0.28983101492886 * S_NumDealsPurchases
315256    +          +     0.34016977363062 * S_NumWebVisitsMonth
315257    +          +    -0.07539662108021 * S_RFMstat  +    -0.48223583966095 *
315258    +        S_Recency  +    -0.21769282483378 * S_Teenhome
315259    +          +    -0.03637501600986 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H15 = 0.26338443874493 * S_AcceptedCmpTotal + -1.05933447721817 * S_Frq 
+ 0.15944073710657 * S_Income + -0.08201141214939 * S_Mnt + 0.21740350334003 * S_MntGoldProds 
+ 1.25414895016379 * S_MntMeatProducts + 1.38122748809658 * S_NumCatalogPurchases + 
0.28983101492886 * S_NumDealsPurchases + 0.34016977363062 * S_NumWebVisitsMonth + 
-0.07539662108021 * S_RFMstat + -0.48223583966095 * S_Recency + -0.21769282483378 * S_Teenhome 
+ -0.03637501600986 * S_Year_Birth ;
315260    +   H16  =    -0.02235292240802 * S_AcceptedCmpTotal  +     0.05344170585354 *
315261    +        S_Frq  +    -0.16059837639399 * S_Income  +     -0.2016987951784 *
315262    +        S_Mnt  +     0.10489473589715 * S_MntGoldProds
315263    +          +    -0.24223453001761 * S_MntMeatProducts
315264    +          +     0.08658296964034 * S_NumCatalogPurchases
315265    +          +    -0.12912434217806 * S_NumDealsPurchases
315266    +          +     0.20103807385888 * S_NumWebVisitsMonth
315267    +          +     0.26367670266536 * S_RFMstat  +    -0.44098166476515 *
315268    +        S_Recency  +    -0.46051939225222 * S_Teenhome
315269    +          +    -0.03446671446496 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H16 = -0.02235292240802 * S_AcceptedCmpTotal + 0.05344170585354 * S_Frq 
+ -0.16059837639399 * S_Income + -0.2016987951784 * S_Mnt + 0.10489473589715 * S_MntGoldProds 
+ -0.24223453001761 * S_MntMeatProducts + 0.08658296964034 * S_NumCatalogPurchases + 
-0.12912434217806 * S_NumDealsPurchases + 0.20103807385888 * S_NumWebVisitsMonth + 
0.26367670266536 * S_RFMstat + -0.44098166476515 * S_Recency + -0.46051939225222 * S_Teenhome 
+ -0.03446671446496 * S_Year_Birth ;
315270    +   H17  =    -0.33265903592033 * S_AcceptedCmpTotal  +      0.8252218937614 *
315271    +        S_Frq  +     0.41954791536781 * S_Income  +     0.46211299623005 *
315272    +        S_Mnt  +     0.01356150389301 * S_MntGoldProds
315273    +          +    -0.44066080788477 * S_MntMeatProducts
315274    +          +    -0.50262630360787 * S_NumCatalogPurchases
315275    +          +    -0.76106916776546 * S_NumDealsPurchases
315276    +          +     -0.1148740911192 * S_NumWebVisitsMonth
315277    +          +    -0.07226607709062 * S_RFMstat  +       0.057209463183 *
315278    +        S_Recency  +    -0.46203013614528 * S_Teenhome
315279    +          +    -0.19513280423468 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H17 = -0.33265903592033 * S_AcceptedCmpTotal + 0.8252218937614 * S_Frq + 
0.41954791536781 * S_Income + 0.46211299623005 * S_Mnt + 0.01356150389301 * S_MntGoldProds + 
-0.44066080788477 * S_MntMeatProducts + -0.50262630360787 * S_NumCatalogPurchases + 
-0.76106916776546 * S_NumDealsPurchases + -0.1148740911192 * S_NumWebVisitsMonth + 
-0.07226607709062 * S_RFMstat + 0.057209463183 * S_Recency + -0.46203013614528 * S_Teenhome + 
-0.19513280423468 * S_Year_Birth ;
315280    +   H11  = H11  +    -0.25061450597172 * Marital_StatusDivorced
315281    +          +    -0.04190107680763 * Marital_StatusMarried
315282    +          +     0.60475477366656 * Marital_StatusSingle
315283    +          +    -0.23249465504861 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.25061450597172 * Marital_StatusDivorced + 
-0.04190107680763 * Marital_StatusMarried + 0.60475477366656 * Marital_StatusSingle + 
-0.23249465504861 * Marital_StatusTogether ;
315284    +   H12  = H12  +     0.44175341112836 * Marital_StatusDivorced
315285    +          +    -1.07400114292035 * Marital_StatusMarried
315286    +          +     0.68928831262407 * Marital_StatusSingle
315287    +          +    -0.77691960068409 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.44175341112836 * Marital_StatusDivorced + 
-1.07400114292035 * Marital_StatusMarried + 0.68928831262407 * Marital_StatusSingle + 
-0.77691960068409 * Marital_StatusTogether ;
315288    +   H13  = H13  +     0.06946121372082 * Marital_StatusDivorced
315289    +          +    -0.20121339725415 * Marital_StatusMarried
315290    +          +     0.11417921391157 * Marital_StatusSingle
315291    +          +     0.09230572943508 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.06946121372082 * Marital_StatusDivorced + 
-0.20121339725415 * Marital_StatusMarried + 0.11417921391157 * Marital_StatusSingle + 
0.09230572943508 * Marital_StatusTogether ;
315292    +   H14  = H14  +    -0.23294461421366 * Marital_StatusDivorced
315293    +          +    -0.17406326256113 * Marital_StatusMarried
315294    +          +    -0.23720358325215 * Marital_StatusSingle
315295    +          +    -0.43999719513424 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.23294461421366 * Marital_StatusDivorced + 
-0.17406326256113 * Marital_StatusMarried + -0.23720358325215 * Marital_StatusSingle + 
-0.43999719513424 * Marital_StatusTogether ;
315296    +   H15  = H15  +    -0.02489582646664 * Marital_StatusDivorced
315297    +          +     0.09754614002146 * Marital_StatusMarried
315298    +          +    -0.13004651836918 * Marital_StatusSingle
315299    +          +     0.26863820003928 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + -0.02489582646664 * Marital_StatusDivorced + 
0.09754614002146 * Marital_StatusMarried + -0.13004651836918 * Marital_StatusSingle + 
0.26863820003928 * Marital_StatusTogether ;
315300    +   H16  = H16  +    -0.03288546792064 * Marital_StatusDivorced
315301    +          +     0.33991066094948 * Marital_StatusMarried
315302    +          +     0.16726714912168 * Marital_StatusSingle
315303    +          +    -0.25665070086096 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H16 = H16 + -0.03288546792064 * Marital_StatusDivorced + 
0.33991066094948 * Marital_StatusMarried + 0.16726714912168 * Marital_StatusSingle + 
-0.25665070086096 * Marital_StatusTogether ;
315304    +   H17  = H17  +     0.10942200598558 * Marital_StatusDivorced
315305    +          +    -0.70406010688765 * Marital_StatusMarried
315306    +          +     0.77355395614085 * Marital_StatusSingle
315307    +          +    -0.37671922953654 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H17 = H17 + 0.10942200598558 * Marital_StatusDivorced + 
-0.70406010688765 * Marital_StatusMarried + 0.77355395614085 * Marital_StatusSingle + 
-0.37671922953654 * Marital_StatusTogether ;
315308    +   H11  =    -1.10989436564707 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -1.10989436564707 + H11 ;
315309    +   H12  =    -0.21288050694071 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -0.21288050694071 + H12 ;
315310    +   H13  =     0.48811938879702 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = 0.48811938879702 + H13 ;
315311    +   H14  =    -1.71523073897191 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = -1.71523073897191 + H14 ;
315312    +   H15  =    -0.04554136165237 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = -0.04554136165237 + H15 ;
315313    +   H16  =    -2.78464164526225 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = -2.78464164526225 + H16 ;
315314    +   H17  =     1.73418398166308 + H17 ;
MPRINT(EM_DIAGRAM):   H17 = 1.73418398166308 + H17 ;
315315    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
315316    +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
315317    +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
315318    +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
315319    +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
315320    +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
315321    +   H17  = TANH(H17 );
MPRINT(EM_DIAGRAM):   H17 = TANH(H17 );
315322    +END;
MPRINT(EM_DIAGRAM):   END;
315323    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
315324    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
315325    +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
315326    +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
315327    +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
315328    +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
315329    +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
315330    +   H17  = .;
MPRINT(EM_DIAGRAM):   H17 = .;
315331    +END;
MPRINT(EM_DIAGRAM):   END;
315332    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
315333    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
315334    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
315335    +
315336    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
315337    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
315338    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
315339    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
315340    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
315341    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
315342    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
315343    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
315344    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
315345    +end;
MPRINT(EM_DIAGRAM):   end;
315346    +else do;
MPRINT(EM_DIAGRAM):   else do;
315347    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
315348    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
315349    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
315350    +   end;
MPRINT(EM_DIAGRAM):   end;
315351    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
315352    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
315353    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
315354    +   end;
MPRINT(EM_DIAGRAM):   end;
315355    +   else do;
MPRINT(EM_DIAGRAM):   else do;
315356    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
315357    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
315358    +   end;
MPRINT(EM_DIAGRAM):   end;
315359    +end;
MPRINT(EM_DIAGRAM):   end;
315360    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
315361    +   P_DepVar1  =     1.99078165508498 * H11  +     3.59667555265579 * H12
315362    +          +     0.22520578396696 * H13  +     0.07999056432817 * H14
315363    +          +     2.73336314915489 * H15  +     0.11536142898008 * H16
315364    +          +    -1.90380424208785 * H17 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 1.99078165508498 * H11 + 3.59667555265579 * H12 + 
0.22520578396696 * H13 + 0.07999056432817 * H14 + 2.73336314915489 * H15 + 0.11536142898008 * 
H16 + -1.90380424208785 * H17 ;
315365    +   P_DepVar1  =    -1.65978316370044 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.65978316370044 + P_DepVar1 ;
315366    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
315367    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
315368    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
315369    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
315370    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
315371    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
315372    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
315373    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
315374    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
315375    +END;
MPRINT(EM_DIAGRAM):   END;
315376    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
315377    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
315378    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
315379    +END;
MPRINT(EM_DIAGRAM):   END;
315380    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
315381    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
315382    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
315383    +END;
MPRINT(EM_DIAGRAM):   END;
315384    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
315385    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
315386    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
315387    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
315388    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
315389    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
315390    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
315391    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
315392    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
315393    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
315394    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
315395    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
315396    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
315397    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
315398    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
315399    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
315400    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
315401    +END;
MPRINT(EM_DIAGRAM):   END;
315402    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
315403    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
315404    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
315405    +drop
315406    +H11
315407    +H12
315408    +H13
315409    +H14
315410    +H15
315411    +H16
315412    +H17
315413    +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 H17 ;
315414    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
315415     run;

NOTE: DATA STEP view saved on file EMWS8.NEURAL30_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.META2_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
315416     quit;
315417     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
315418     filename emflow
315418   ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural30\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural30\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural30: Scoring VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
315419     *------------------------------------------------------------*;
315420     * Neural30: Scoring VALIDATE data;
315421     *------------------------------------------------------------*;
315422     data EMWS8.Neural30_VALIDATE
315423     / view=EMWS8.Neural30_VALIDATE
315424     ;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural30_VALIDATE / view=EMWS8.Neural30_VALIDATE ;
315425     set EMWS8.Meta2_VALIDATE
315426     ;
MPRINT(EM_DIAGRAM):   set EMWS8.Meta2_VALIDATE ;
315427     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Neural30\EMFLOWSCORE.sas.
315428    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
315429    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
315430    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
315431    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
315432    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
315433    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
315434    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
315435    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
315436    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
315437    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
315438    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
315439    +LENGTH _WARN_ $4
315440    +      F_DepVar  $ 12
315441    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
315442    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
315443    +
315444    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
315445    +
315446    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
315447    +
315448    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
315449    +
315450    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
315451    +
315452    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
315453    +
315454    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
315455    +
315456    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
315457    +
315458    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
315459    +
315460    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
315461    +
315462    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
315463    +
315464    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
315465    +
315466    +      label S_Year_Birth = 'Standard: Year_Birth' ;
MPRINT(EM_DIAGRAM):   label S_Year_Birth = 'Standard: Year_Birth' ;
315467    +
315468    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
315469    +
315470    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
315471    +
315472    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
315473    +
315474    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
315475    +
315476    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
315477    +
315478    +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
315479    +
315480    +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
315481    +
315482    +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
315483    +
315484    +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
315485    +
315486    +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
315487    +
315488    +      label H17 = 'Hidden: H1=7' ;
MPRINT(EM_DIAGRAM):   label H17 = 'Hidden: H1=7' ;
315489    +
315490    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
315491    +
315492    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
315493    +
315494    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
315495    +
315496    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
315497    +
315498    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
315499    +
315500    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
315501    +
315502    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
315503    +
315504    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
315505    +
315506    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
315507    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
315508    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
315509    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
315510    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
315511    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
315512    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
315513    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
315514    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
315515    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
315516    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
315517    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
315518    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
315519    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
315520    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
315521    +end;
MPRINT(EM_DIAGRAM):   end;
315522    +else do;
MPRINT(EM_DIAGRAM):   else do;
315523    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
315524    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
315525    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
315526    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
315527    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
315528    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
315529    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
315530    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
315531    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
315532    +         end;
MPRINT(EM_DIAGRAM):   end;
315533    +         else do;
MPRINT(EM_DIAGRAM):   else do;
315534    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
315535    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
315536    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
315537    +            end;
MPRINT(EM_DIAGRAM):   end;
315538    +         end;
MPRINT(EM_DIAGRAM):   end;
315539    +      end;
MPRINT(EM_DIAGRAM):   end;
315540    +      else do;
MPRINT(EM_DIAGRAM):   else do;
315541    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
315542    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
315543    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
315544    +         end;
MPRINT(EM_DIAGRAM):   end;
315545    +      end;
MPRINT(EM_DIAGRAM):   end;
315546    +   end;
MPRINT(EM_DIAGRAM):   end;
315547    +   else do;
MPRINT(EM_DIAGRAM):   else do;
315548    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
315549    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
315550    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
315551    +      end;
MPRINT(EM_DIAGRAM):   end;
315552    +      else do;
MPRINT(EM_DIAGRAM):   else do;
315553    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
315554    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
315555    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
315556    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
315557    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
315558    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
315559    +         end;
MPRINT(EM_DIAGRAM):   end;
315560    +      end;
MPRINT(EM_DIAGRAM):   end;
315561    +   end;
MPRINT(EM_DIAGRAM):   end;
315562    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
315563    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
315564    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
315565    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
315566    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
315567    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
315568    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
315569    +   end;
MPRINT(EM_DIAGRAM):   end;
315570    +end;
MPRINT(EM_DIAGRAM):   end;
315571    +
315572    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
315573    +*** Checking missing input Interval
315574    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
315575    +
315576    +IF NMISS(
315577    +   AcceptedCmpTotal ,
315578    +   Frq ,
315579    +   Income ,
315580    +   Mnt ,
315581    +   MntGoldProds ,
315582    +   MntMeatProducts ,
315583    +   NumCatalogPurchases ,
315584    +   NumDealsPurchases ,
315585    +   NumWebVisitsMonth ,
315586    +   RFMstat ,
315587    +   Recency ,
315588    +   Teenhome ,
315589    +   Year_Birth   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Income , Mnt , MntGoldProds , 
MntMeatProducts , NumCatalogPurchases , NumDealsPurchases , NumWebVisitsMonth , RFMstat , 
Recency , Teenhome , Year_Birth ) THEN DO;
315590    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
315591    +
315592    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
315593    +END;
MPRINT(EM_DIAGRAM):   END;
315594    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
315595    +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
315596    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
315597    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
315598    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
315599    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
315600    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
315601    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
315602    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
315603    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
315604    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
315605    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
315606    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
315607    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
315608    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
315609    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
315610    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
315611    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
315612    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
315613    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
315614    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
315615    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
315616    +   S_Year_Birth  =    -163.205330145852 +     0.08289609202864 * Year_Birth ;
MPRINT(EM_DIAGRAM):   S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
315617    +END;
MPRINT(EM_DIAGRAM):   END;
315618    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
315619    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
315620    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
315621    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
315622    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
315623    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
315624    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
315625    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
315626    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
315627    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
315628    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
315629    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
315630    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
315631    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
315632    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
315633    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
315634    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
315635    +   ELSE S_NumCatalogPurchases
315636    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
315637    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
315638    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
315639    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
315640    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
315641    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
315642    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
315643    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
315644    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
315645    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
315646    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
315647    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
315648    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
315649    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
315650    +   IF MISSING( Year_Birth ) THEN S_Year_Birth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Year_Birth ) THEN S_Year_Birth = . ;
315651    +   ELSE S_Year_Birth  =    -163.205330145852 +     0.08289609202864 *
315652    +        Year_Birth ;
MPRINT(EM_DIAGRAM):   ELSE S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
315653    +END;
MPRINT(EM_DIAGRAM):   END;
315654    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
315655    +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
315656    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
315657    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
315658    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
315659    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
315660    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
315661    +   H11  =      0.5448177358872 * S_AcceptedCmpTotal  +    -0.56918032958607 *
315662    +        S_Frq  +     0.21060618200218 * S_Income  +    -0.40246310954349 *
315663    +        S_Mnt  +    -0.18690574082736 * S_MntGoldProds
315664    +          +     0.83028677347709 * S_MntMeatProducts
315665    +          +     0.56366676093724 * S_NumCatalogPurchases
315666    +          +     0.63662278307649 * S_NumDealsPurchases
315667    +          +     0.45030521898264 * S_NumWebVisitsMonth
315668    +          +     0.23005584857727 * S_RFMstat  +    -0.64234820627061 *
315669    +        S_Recency  +     0.00774462163198 * S_Teenhome
315670    +          +     0.03680161242347 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H11 = 0.5448177358872 * S_AcceptedCmpTotal + -0.56918032958607 * S_Frq + 
0.21060618200218 * S_Income + -0.40246310954349 * S_Mnt + -0.18690574082736 * S_MntGoldProds + 
0.83028677347709 * S_MntMeatProducts + 0.56366676093724 * S_NumCatalogPurchases + 
0.63662278307649 * S_NumDealsPurchases + 0.45030521898264 * S_NumWebVisitsMonth + 
0.23005584857727 * S_RFMstat + -0.64234820627061 * S_Recency + 0.00774462163198 * S_Teenhome + 
0.03680161242347 * S_Year_Birth ;
315671    +   H12  =     0.66298961317118 * S_AcceptedCmpTotal  +      -0.935153223999 *
315672    +        S_Frq  +     0.41449292848187 * S_Income  +    -1.26694271574069 *
315673    +        S_Mnt  +     0.18765833055879 * S_MntGoldProds
315674    +          +       0.802198131853 * S_MntMeatProducts
315675    +          +     0.80699693779953 * S_NumCatalogPurchases
315676    +          +    -0.32111921080627 * S_NumDealsPurchases
315677    +          +     1.05495977150176 * S_NumWebVisitsMonth
315678    +          +    -0.03067071763188 * S_RFMstat  +    -1.14158068786273 *
315679    +        S_Recency  +     -0.3863391299289 * S_Teenhome
315680    +          +    -0.01515301188334 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H12 = 0.66298961317118 * S_AcceptedCmpTotal + -0.935153223999 * S_Frq + 
0.41449292848187 * S_Income + -1.26694271574069 * S_Mnt + 0.18765833055879 * S_MntGoldProds + 
0.802198131853 * S_MntMeatProducts + 0.80699693779953 * S_NumCatalogPurchases + 
-0.32111921080627 * S_NumDealsPurchases + 1.05495977150176 * S_NumWebVisitsMonth + 
-0.03067071763188 * S_RFMstat + -1.14158068786273 * S_Recency + -0.3863391299289 * S_Teenhome 
+ -0.01515301188334 * S_Year_Birth ;
315681    +   H13  =    -0.20258357169781 * S_AcceptedCmpTotal  +    -0.01927951320398 *
315682    +        S_Frq  +     0.04768604929306 * S_Income  +     0.30271184148932 *
315683    +        S_Mnt  +    -0.24825280571811 * S_MntGoldProds
315684    +          +     0.56634068580527 * S_MntMeatProducts
315685    +          +    -0.06012432168804 * S_NumCatalogPurchases
315686    +          +     0.00616163066885 * S_NumDealsPurchases
315687    +          +    -0.28643715149767 * S_NumWebVisitsMonth
315688    +          +    -0.21657284982294 * S_RFMstat  +    -0.11323681460779 *
315689    +        S_Recency  +    -0.05360047278594 * S_Teenhome
315690    +          +     -0.3574952891844 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H13 = -0.20258357169781 * S_AcceptedCmpTotal + -0.01927951320398 * S_Frq 
+ 0.04768604929306 * S_Income + 0.30271184148932 * S_Mnt + -0.24825280571811 * S_MntGoldProds 
+ 0.56634068580527 * S_MntMeatProducts + -0.06012432168804 * S_NumCatalogPurchases + 
0.00616163066885 * S_NumDealsPurchases + -0.28643715149767 * S_NumWebVisitsMonth + 
-0.21657284982294 * S_RFMstat + -0.11323681460779 * S_Recency + -0.05360047278594 * S_Teenhome 
+ -0.3574952891844 * S_Year_Birth ;
315691    +   H14  =    -0.01671557172552 * S_AcceptedCmpTotal  +     0.14126480109635 *
315692    +        S_Frq  +    -0.16542260420764 * S_Income  +    -0.02938555904655 *
315693    +        S_Mnt  +    -0.09628993953297 * S_MntGoldProds
315694    +          +     0.29490772106233 * S_MntMeatProducts
315695    +          +    -0.37973658516518 * S_NumCatalogPurchases
315696    +          +     0.08377613406035 * S_NumDealsPurchases
315697    +          +    -0.17242298863338 * S_NumWebVisitsMonth
315698    +          +     0.24623716603984 * S_RFMstat  +     0.27333937644041 *
315699    +        S_Recency  +    -0.00972098456963 * S_Teenhome
315700    +          +      0.0278167406933 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H14 = -0.01671557172552 * S_AcceptedCmpTotal + 0.14126480109635 * S_Frq 
+ -0.16542260420764 * S_Income + -0.02938555904655 * S_Mnt + -0.09628993953297 * 
S_MntGoldProds + 0.29490772106233 * S_MntMeatProducts + -0.37973658516518 * 
S_NumCatalogPurchases + 0.08377613406035 * S_NumDealsPurchases + -0.17242298863338 * 
S_NumWebVisitsMonth + 0.24623716603984 * S_RFMstat + 0.27333937644041 * S_Recency + 
-0.00972098456963 * S_Teenhome + 0.0278167406933 * S_Year_Birth ;
315701    +   H15  =     0.26338443874493 * S_AcceptedCmpTotal  +    -1.05933447721817 *
315702    +        S_Frq  +     0.15944073710657 * S_Income  +    -0.08201141214939 *
315703    +        S_Mnt  +     0.21740350334003 * S_MntGoldProds
315704    +          +     1.25414895016379 * S_MntMeatProducts
315705    +          +     1.38122748809658 * S_NumCatalogPurchases
315706    +          +     0.28983101492886 * S_NumDealsPurchases
315707    +          +     0.34016977363062 * S_NumWebVisitsMonth
315708    +          +    -0.07539662108021 * S_RFMstat  +    -0.48223583966095 *
315709    +        S_Recency  +    -0.21769282483378 * S_Teenhome
315710    +          +    -0.03637501600986 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H15 = 0.26338443874493 * S_AcceptedCmpTotal + -1.05933447721817 * S_Frq 
+ 0.15944073710657 * S_Income + -0.08201141214939 * S_Mnt + 0.21740350334003 * S_MntGoldProds 
+ 1.25414895016379 * S_MntMeatProducts + 1.38122748809658 * S_NumCatalogPurchases + 
0.28983101492886 * S_NumDealsPurchases + 0.34016977363062 * S_NumWebVisitsMonth + 
-0.07539662108021 * S_RFMstat + -0.48223583966095 * S_Recency + -0.21769282483378 * S_Teenhome 
+ -0.03637501600986 * S_Year_Birth ;
315711    +   H16  =    -0.02235292240802 * S_AcceptedCmpTotal  +     0.05344170585354 *
315712    +        S_Frq  +    -0.16059837639399 * S_Income  +     -0.2016987951784 *
315713    +        S_Mnt  +     0.10489473589715 * S_MntGoldProds
315714    +          +    -0.24223453001761 * S_MntMeatProducts
315715    +          +     0.08658296964034 * S_NumCatalogPurchases
315716    +          +    -0.12912434217806 * S_NumDealsPurchases
315717    +          +     0.20103807385888 * S_NumWebVisitsMonth
315718    +          +     0.26367670266536 * S_RFMstat  +    -0.44098166476515 *
315719    +        S_Recency  +    -0.46051939225222 * S_Teenhome
315720    +          +    -0.03446671446496 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H16 = -0.02235292240802 * S_AcceptedCmpTotal + 0.05344170585354 * S_Frq 
+ -0.16059837639399 * S_Income + -0.2016987951784 * S_Mnt + 0.10489473589715 * S_MntGoldProds 
+ -0.24223453001761 * S_MntMeatProducts + 0.08658296964034 * S_NumCatalogPurchases + 
-0.12912434217806 * S_NumDealsPurchases + 0.20103807385888 * S_NumWebVisitsMonth + 
0.26367670266536 * S_RFMstat + -0.44098166476515 * S_Recency + -0.46051939225222 * S_Teenhome 
+ -0.03446671446496 * S_Year_Birth ;
315721    +   H17  =    -0.33265903592033 * S_AcceptedCmpTotal  +      0.8252218937614 *
315722    +        S_Frq  +     0.41954791536781 * S_Income  +     0.46211299623005 *
315723    +        S_Mnt  +     0.01356150389301 * S_MntGoldProds
315724    +          +    -0.44066080788477 * S_MntMeatProducts
315725    +          +    -0.50262630360787 * S_NumCatalogPurchases
315726    +          +    -0.76106916776546 * S_NumDealsPurchases
315727    +          +     -0.1148740911192 * S_NumWebVisitsMonth
315728    +          +    -0.07226607709062 * S_RFMstat  +       0.057209463183 *
315729    +        S_Recency  +    -0.46203013614528 * S_Teenhome
315730    +          +    -0.19513280423468 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H17 = -0.33265903592033 * S_AcceptedCmpTotal + 0.8252218937614 * S_Frq + 
0.41954791536781 * S_Income + 0.46211299623005 * S_Mnt + 0.01356150389301 * S_MntGoldProds + 
-0.44066080788477 * S_MntMeatProducts + -0.50262630360787 * S_NumCatalogPurchases + 
-0.76106916776546 * S_NumDealsPurchases + -0.1148740911192 * S_NumWebVisitsMonth + 
-0.07226607709062 * S_RFMstat + 0.057209463183 * S_Recency + -0.46203013614528 * S_Teenhome + 
-0.19513280423468 * S_Year_Birth ;
315731    +   H11  = H11  +    -0.25061450597172 * Marital_StatusDivorced
315732    +          +    -0.04190107680763 * Marital_StatusMarried
315733    +          +     0.60475477366656 * Marital_StatusSingle
315734    +          +    -0.23249465504861 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.25061450597172 * Marital_StatusDivorced + 
-0.04190107680763 * Marital_StatusMarried + 0.60475477366656 * Marital_StatusSingle + 
-0.23249465504861 * Marital_StatusTogether ;
315735    +   H12  = H12  +     0.44175341112836 * Marital_StatusDivorced
315736    +          +    -1.07400114292035 * Marital_StatusMarried
315737    +          +     0.68928831262407 * Marital_StatusSingle
315738    +          +    -0.77691960068409 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.44175341112836 * Marital_StatusDivorced + 
-1.07400114292035 * Marital_StatusMarried + 0.68928831262407 * Marital_StatusSingle + 
-0.77691960068409 * Marital_StatusTogether ;
315739    +   H13  = H13  +     0.06946121372082 * Marital_StatusDivorced
315740    +          +    -0.20121339725415 * Marital_StatusMarried
315741    +          +     0.11417921391157 * Marital_StatusSingle
315742    +          +     0.09230572943508 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.06946121372082 * Marital_StatusDivorced + 
-0.20121339725415 * Marital_StatusMarried + 0.11417921391157 * Marital_StatusSingle + 
0.09230572943508 * Marital_StatusTogether ;
315743    +   H14  = H14  +    -0.23294461421366 * Marital_StatusDivorced
315744    +          +    -0.17406326256113 * Marital_StatusMarried
315745    +          +    -0.23720358325215 * Marital_StatusSingle
315746    +          +    -0.43999719513424 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.23294461421366 * Marital_StatusDivorced + 
-0.17406326256113 * Marital_StatusMarried + -0.23720358325215 * Marital_StatusSingle + 
-0.43999719513424 * Marital_StatusTogether ;
315747    +   H15  = H15  +    -0.02489582646664 * Marital_StatusDivorced
315748    +          +     0.09754614002146 * Marital_StatusMarried
315749    +          +    -0.13004651836918 * Marital_StatusSingle
315750    +          +     0.26863820003928 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + -0.02489582646664 * Marital_StatusDivorced + 
0.09754614002146 * Marital_StatusMarried + -0.13004651836918 * Marital_StatusSingle + 
0.26863820003928 * Marital_StatusTogether ;
315751    +   H16  = H16  +    -0.03288546792064 * Marital_StatusDivorced
315752    +          +     0.33991066094948 * Marital_StatusMarried
315753    +          +     0.16726714912168 * Marital_StatusSingle
315754    +          +    -0.25665070086096 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H16 = H16 + -0.03288546792064 * Marital_StatusDivorced + 
0.33991066094948 * Marital_StatusMarried + 0.16726714912168 * Marital_StatusSingle + 
-0.25665070086096 * Marital_StatusTogether ;
315755    +   H17  = H17  +     0.10942200598558 * Marital_StatusDivorced
315756    +          +    -0.70406010688765 * Marital_StatusMarried
315757    +          +     0.77355395614085 * Marital_StatusSingle
315758    +          +    -0.37671922953654 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H17 = H17 + 0.10942200598558 * Marital_StatusDivorced + 
-0.70406010688765 * Marital_StatusMarried + 0.77355395614085 * Marital_StatusSingle + 
-0.37671922953654 * Marital_StatusTogether ;
315759    +   H11  =    -1.10989436564707 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -1.10989436564707 + H11 ;
315760    +   H12  =    -0.21288050694071 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -0.21288050694071 + H12 ;
315761    +   H13  =     0.48811938879702 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = 0.48811938879702 + H13 ;
315762    +   H14  =    -1.71523073897191 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = -1.71523073897191 + H14 ;
315763    +   H15  =    -0.04554136165237 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = -0.04554136165237 + H15 ;
315764    +   H16  =    -2.78464164526225 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = -2.78464164526225 + H16 ;
315765    +   H17  =     1.73418398166308 + H17 ;
MPRINT(EM_DIAGRAM):   H17 = 1.73418398166308 + H17 ;
315766    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
315767    +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
315768    +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
315769    +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
315770    +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
315771    +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
315772    +   H17  = TANH(H17 );
MPRINT(EM_DIAGRAM):   H17 = TANH(H17 );
315773    +END;
MPRINT(EM_DIAGRAM):   END;
315774    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
315775    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
315776    +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
315777    +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
315778    +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
315779    +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
315780    +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
315781    +   H17  = .;
MPRINT(EM_DIAGRAM):   H17 = .;
315782    +END;
MPRINT(EM_DIAGRAM):   END;
315783    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
315784    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
315785    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
315786    +
315787    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
315788    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
315789    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
315790    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
315791    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
315792    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
315793    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
315794    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
315795    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
315796    +end;
MPRINT(EM_DIAGRAM):   end;
315797    +else do;
MPRINT(EM_DIAGRAM):   else do;
315798    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
315799    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
315800    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
315801    +   end;
MPRINT(EM_DIAGRAM):   end;
315802    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
315803    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
315804    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
315805    +   end;
MPRINT(EM_DIAGRAM):   end;
315806    +   else do;
MPRINT(EM_DIAGRAM):   else do;
315807    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
315808    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
315809    +   end;
MPRINT(EM_DIAGRAM):   end;
315810    +end;
MPRINT(EM_DIAGRAM):   end;
315811    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
315812    +   P_DepVar1  =     1.99078165508498 * H11  +     3.59667555265579 * H12
315813    +          +     0.22520578396696 * H13  +     0.07999056432817 * H14
315814    +          +     2.73336314915489 * H15  +     0.11536142898008 * H16
315815    +          +    -1.90380424208785 * H17 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 1.99078165508498 * H11 + 3.59667555265579 * H12 + 
0.22520578396696 * H13 + 0.07999056432817 * H14 + 2.73336314915489 * H15 + 0.11536142898008 * 
H16 + -1.90380424208785 * H17 ;
315816    +   P_DepVar1  =    -1.65978316370044 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.65978316370044 + P_DepVar1 ;
315817    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
315818    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
315819    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
315820    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
315821    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
315822    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
315823    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
315824    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
315825    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
315826    +END;
MPRINT(EM_DIAGRAM):   END;
315827    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
315828    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
315829    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
315830    +END;
MPRINT(EM_DIAGRAM):   END;
315831    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
315832    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
315833    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
315834    +END;
MPRINT(EM_DIAGRAM):   END;
315835    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
315836    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
315837    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
315838    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
315839    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
315840    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
315841    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
315842    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
315843    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
315844    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
315845    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
315846    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
315847    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
315848    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
315849    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
315850    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
315851    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
315852    +END;
MPRINT(EM_DIAGRAM):   END;
315853    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
315854    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
315855    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
315856    +drop
315857    +H11
315858    +H12
315859    +H13
315860    +H14
315861    +H15
315862    +H16
315863    +H17
315864    +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 H17 ;
315865    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
315866     run;

NOTE: DATA STEP view saved on file EMWS8.NEURAL30_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.META2_VALIDATE.VIEW used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
315867     quit;
315868     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
315869     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
315870     * Neural30: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * Neural30: Computing metadata for TRAIN data;
315871     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;

NOTE: View EMWS8.NEURAL30_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural30\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS8.Neural30_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS8.Neural30_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS8.Neural30_TRAIN out=WORK.M3I5W85N noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3I5W85N;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20 
INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M3I5W85N(keep=name type length label format formatl 
formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then format = strip(format)!!strip(put(formatl, 
best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, 
best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then informat = 
strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, 
best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3I5W85N;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M3I5W85N;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M1_6R4M3 NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1_6R4M3;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M1_6R4M3;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M34X__7C(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M1_6R4M3;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1_6R4M3;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 
FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M1_6R4M3;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" 
"MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" 
"QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" "YEAR" "YYMMDD" "YYMON" 
"YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" 
"EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) 
formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = 
"DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) 
formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" 
"NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" 
"SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = 
"DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then 
level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 
'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 
'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ 
('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 
'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 
'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1_6R4M3;
MPRINT(EMADVISECOLUMNS):   set WORK.M1_6R4M3;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= 
"Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= 
"Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower limit" UPPERLIMIT= 
"Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= 
"Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Meta2_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Meta2_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural30_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT 
LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "Neural30";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("P_DEPVAR1") creator = "Neural30";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR1") creator = "Neural30";
MPRINT(EM_DIAGRAM):   when("P_DEPVAR0") creator = "Neural30";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR0") creator = "Neural30";
MPRINT(EM_DIAGRAM):   when("F_DEPVAR") creator = "Neural30";
MPRINT(EM_DIAGRAM):   when("I_DEPVAR") creator = "Neural30";
MPRINT(EM_DIAGRAM):   when("U_DEPVAR") creator = "Neural30";
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "Neural30";
MPRINT(EM_DIAGRAM):   when("DEPVAR") model = "Neural30";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural30: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
316183     data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
316184     set EMWS8.Neural30_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural30_EMINFO;
316185     where DATA='Neural30' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='Neural30' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 
'MODEL');
316186     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.NEURAL30_EMINFO.
      WHERE (DATA='Neural30') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

316187     data EMWS8.Neural30_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS8.Neural30_EMINFO;
316188     length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
316189     input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
316190     cards;
MPRINT(EM_DIAGRAM):   cards;

NOTE: The data set EMWS8.NEURAL30_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   run;
316194     run;
316195     data EMWS8.Neural30_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural30_EMINFO;
316196     set EMWS8.Neural30_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural30_EMINFO WORK.MODELTEMP_INFO;
316197     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.NEURAL30_EMINFO.
NOTE: There were 0 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS8.NEURAL30_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

316198     proc sort data = EMWS8.Neural30_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.Neural30_EMINFO NOTHREADS;
316199     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
316200     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.NEURAL30_EMINFO.
NOTE: The data set EMWS8.NEURAL30_EMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

316201     proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
316202     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
316203     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set EMWS8.FIMPORT_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 1 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

316204     proc sort data = EMWS8.Neural30_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS8.Neural30_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
316205     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
316206     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 3 observations read from the data set EMWS8.NEURAL30_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

316207     data EMWS8.Neural30_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural30_EMINFO;
316208     merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
316209     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
316210     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 3 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS8.NEURAL30_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

316211     proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
316212     delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
316213     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
316214     quit;
MPRINT(EM_DIAGRAM):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

NOTE: View EMWS8.NEURAL30_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
NOTE: View EMWS8.NEURAL30_VALIDATE.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
