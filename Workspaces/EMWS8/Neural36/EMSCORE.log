MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "20. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "17.29 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                20. April 2016
Time:                17.29 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O3U10MTI 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural36\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O3U10MTI new;
MPRINT(EM_DIAGRAM):   run;
1153300    data work.outkey;
MPRINT(EM_DIAGRAM):    data work.outkey;
1153301    set EMWS8.Neural36_OUTKEY;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural36_OUTKEY;
1153302    if upcase(ROLE) = 'HIDDEN';
MPRINT(EM_DIAGRAM):   if upcase(ROLE) = 'HIDDEN';
1153303    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 50 observations read from the data set EMWS8.NEURAL36_OUTKEY.
NOTE: The data set WORK.OUTKEY has 7 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1153304    filename emflow
1153304  ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural36\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural36\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural36: Scoring DATA data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1153305    *------------------------------------------------------------*;
1153306    * Neural36: Scoring DATA data;
1153307    *------------------------------------------------------------*;
1153308    data EMWS8.Neural36_TRAIN
1153309    / view=EMWS8.Neural36_TRAIN
1153310    ;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural36_TRAIN / view=EMWS8.Neural36_TRAIN ;
1153311    set EMWS8.Meta3_TRAIN
1153312    ;
MPRINT(EM_DIAGRAM):   set EMWS8.Meta3_TRAIN ;
1153313    %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Neural36\EMFLOWSCORE.sas.
1153314   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1153315   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1153316   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1153317   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1153318   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1153319   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1153320   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1153321   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1153322   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1153323   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1153324   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1153325   +LENGTH _WARN_ $4
1153326   +      F_DepVar  $ 12
1153327   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1153328   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1153329   +
1153330   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1153331   +
1153332   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1153333   +
1153334   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1153335   +
1153336   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1153337   +
1153338   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1153339   +
1153340   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1153341   +
1153342   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1153343   +
1153344   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1153345   +
1153346   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1153347   +
1153348   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1153349   +
1153350   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1153351   +
1153352   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1153353   +
1153354   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1153355   +
1153356   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1153357   +
1153358   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1153359   +
1153360   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1153361   +
1153362   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1153363   +
1153364   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1153365   +
1153366   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1153367   +
1153368   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1153369   +
1153370   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1153371   +
1153372   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1153373   +
1153374   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1153375   +
1153376   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1153377   +
1153378   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1153379   +
1153380   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1153381   +
1153382   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1153383   +
1153384   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1153385   +
1153386   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1153387   +
1153388   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1153389   +
1153390   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1153391   +
1153392   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1153393   +
1153394   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1153395   +
1153396   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1153397   +
1153398   +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
1153399   +
1153400   +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
1153401   +
1153402   +      label H17 = 'Hidden: H1=7' ;
MPRINT(EM_DIAGRAM):   label H17 = 'Hidden: H1=7' ;
1153403   +
1153404   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1153405   +
1153406   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1153407   +
1153408   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1153409   +
1153410   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1153411   +
1153412   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1153413   +
1153414   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1153415   +
1153416   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1153417   +
1153418   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1153419   +
1153420   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1153421   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1153422   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1153423   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1153424   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1153425   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1153426   +end;
MPRINT(EM_DIAGRAM):   end;
1153427   +else do;
MPRINT(EM_DIAGRAM):   else do;
1153428   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1153429   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1153430   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1153431   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1153432   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1153433   +   end;
MPRINT(EM_DIAGRAM):   end;
1153434   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1153435   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1153436   +   end;
MPRINT(EM_DIAGRAM):   end;
1153437   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1153438   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1153439   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1153440   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1153441   +   end;
MPRINT(EM_DIAGRAM):   end;
1153442   +end;
MPRINT(EM_DIAGRAM):   end;
1153443   +
1153444   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1153445   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1153446   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1153447   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1153448   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1153449   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1153450   +end;
MPRINT(EM_DIAGRAM):   end;
1153451   +else do;
MPRINT(EM_DIAGRAM):   else do;
1153452   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1153453   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1153454   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1153455   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1153456   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1153457   +   end;
MPRINT(EM_DIAGRAM):   end;
1153458   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1153459   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1153460   +   end;
MPRINT(EM_DIAGRAM):   end;
1153461   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1153462   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1153463   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1153464   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1153465   +   end;
MPRINT(EM_DIAGRAM):   end;
1153466   +end;
MPRINT(EM_DIAGRAM):   end;
1153467   +
1153468   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1153469   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1153470   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1153471   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1153472   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1153473   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1153474   +end;
MPRINT(EM_DIAGRAM):   end;
1153475   +else do;
MPRINT(EM_DIAGRAM):   else do;
1153476   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1153477   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1153478   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1153479   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1153480   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1153481   +   end;
MPRINT(EM_DIAGRAM):   end;
1153482   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1153483   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1153484   +   end;
MPRINT(EM_DIAGRAM):   end;
1153485   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1153486   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1153487   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1153488   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1153489   +   end;
MPRINT(EM_DIAGRAM):   end;
1153490   +end;
MPRINT(EM_DIAGRAM):   end;
1153491   +
1153492   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1153493   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1153494   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1153495   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1153496   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1153497   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1153498   +end;
MPRINT(EM_DIAGRAM):   end;
1153499   +else do;
MPRINT(EM_DIAGRAM):   else do;
1153500   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1153501   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1153502   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1153503   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1153504   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1153505   +   end;
MPRINT(EM_DIAGRAM):   end;
1153506   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1153507   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1153508   +   end;
MPRINT(EM_DIAGRAM):   end;
1153509   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1153510   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1153511   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1153512   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1153513   +   end;
MPRINT(EM_DIAGRAM):   end;
1153514   +end;
MPRINT(EM_DIAGRAM):   end;
1153515   +
1153516   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1153517   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1153518   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1153519   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1153520   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1153521   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1153522   +end;
MPRINT(EM_DIAGRAM):   end;
1153523   +else do;
MPRINT(EM_DIAGRAM):   else do;
1153524   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1153525   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1153526   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1153527   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1153528   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1153529   +   end;
MPRINT(EM_DIAGRAM):   end;
1153530   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1153531   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1153532   +   end;
MPRINT(EM_DIAGRAM):   end;
1153533   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1153534   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1153535   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1153536   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1153537   +   end;
MPRINT(EM_DIAGRAM):   end;
1153538   +end;
MPRINT(EM_DIAGRAM):   end;
1153539   +
1153540   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1153541   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1153542   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1153543   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1153544   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1153545   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1153546   +end;
MPRINT(EM_DIAGRAM):   end;
1153547   +else do;
MPRINT(EM_DIAGRAM):   else do;
1153548   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1153549   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1153550   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1153551   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1153552   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1153553   +   end;
MPRINT(EM_DIAGRAM):   end;
1153554   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1153555   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1153556   +   end;
MPRINT(EM_DIAGRAM):   end;
1153557   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1153558   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1153559   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1153560   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1153561   +   end;
MPRINT(EM_DIAGRAM):   end;
1153562   +end;
MPRINT(EM_DIAGRAM):   end;
1153563   +
1153564   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1153565   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1153566   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1153567   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1153568   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1153569   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1153570   +end;
MPRINT(EM_DIAGRAM):   end;
1153571   +else do;
MPRINT(EM_DIAGRAM):   else do;
1153572   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1153573   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1153574   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1153575   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1153576   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1153577   +   end;
MPRINT(EM_DIAGRAM):   end;
1153578   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1153579   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1153580   +   end;
MPRINT(EM_DIAGRAM):   end;
1153581   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1153582   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1153583   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1153584   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1153585   +   end;
MPRINT(EM_DIAGRAM):   end;
1153586   +end;
MPRINT(EM_DIAGRAM):   end;
1153587   +
1153588   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1153589   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
1153590   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1153591   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1153592   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1153593   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1153594   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1153595   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1153596   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1153597   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1153598   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1153599   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1153600   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1153601   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1153602   +end;
MPRINT(EM_DIAGRAM):   end;
1153603   +else do;
MPRINT(EM_DIAGRAM):   else do;
1153604   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1153605   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1153606   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1153607   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1153608   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1153609   +   end;
MPRINT(EM_DIAGRAM):   end;
1153610   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1153611   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1153612   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1153613   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1153614   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1153615   +   end;
MPRINT(EM_DIAGRAM):   end;
1153616   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1153617   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1153618   +   end;
MPRINT(EM_DIAGRAM):   end;
1153619   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1153620   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1153621   +   end;
MPRINT(EM_DIAGRAM):   end;
1153622   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1153623   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1153624   +   end;
MPRINT(EM_DIAGRAM):   end;
1153625   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1153626   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1153627   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1153628   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1153629   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1153630   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1153631   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1153632   +   end;
MPRINT(EM_DIAGRAM):   end;
1153633   +end;
MPRINT(EM_DIAGRAM):   end;
1153634   +
1153635   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1153636   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1153637   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
1153638   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1153639   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1153640   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1153641   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1153642   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1153643   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1153644   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1153645   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1153646   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1153647   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1153648   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1153649   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1153650   +end;
MPRINT(EM_DIAGRAM):   end;
1153651   +else do;
MPRINT(EM_DIAGRAM):   else do;
1153652   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1153653   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1153654   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1153655   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1153656   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1153657   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1153658   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1153659   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1153660   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1153661   +         end;
MPRINT(EM_DIAGRAM):   end;
1153662   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1153663   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1153664   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1153665   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1153666   +            end;
MPRINT(EM_DIAGRAM):   end;
1153667   +         end;
MPRINT(EM_DIAGRAM):   end;
1153668   +      end;
MPRINT(EM_DIAGRAM):   end;
1153669   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1153670   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1153671   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1153672   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1153673   +         end;
MPRINT(EM_DIAGRAM):   end;
1153674   +      end;
MPRINT(EM_DIAGRAM):   end;
1153675   +   end;
MPRINT(EM_DIAGRAM):   end;
1153676   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1153677   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1153678   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1153679   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1153680   +      end;
MPRINT(EM_DIAGRAM):   end;
1153681   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1153682   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1153683   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1153684   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1153685   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1153686   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1153687   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1153688   +         end;
MPRINT(EM_DIAGRAM):   end;
1153689   +      end;
MPRINT(EM_DIAGRAM):   end;
1153690   +   end;
MPRINT(EM_DIAGRAM):   end;
1153691   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1153692   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1153693   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1153694   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1153695   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1153696   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1153697   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1153698   +   end;
MPRINT(EM_DIAGRAM):   end;
1153699   +end;
MPRINT(EM_DIAGRAM):   end;
1153700   +
1153701   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1153702   +*** Checking missing input Interval
1153703   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1153704   +
1153705   +IF NMISS(
1153706   +   AcceptedCmpTotal ,
1153707   +   Age ,
1153708   +   Frq ,
1153709   +   Income ,
1153710   +   Kidhome ,
1153711   +   MntFishProducts ,
1153712   +   MntFruits ,
1153713   +   MntGoldProds ,
1153714   +   MntSweetProducts ,
1153715   +   MonthsAsCustomer ,
1153716   +   NumDealsPurchases ,
1153717   +   NumWebVisitsMonth ,
1153718   +   RFMstat ,
1153719   +   RMntFrq ,
1153720   +   Recency ,
1153721   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , 
MntFishProducts , MntFruits , MntGoldProds , MntSweetProducts , MonthsAsCustomer , 
NumDealsPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , Teenhome ) THEN DO;
1153722   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1153723   +
1153724   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1153725   +END;
MPRINT(EM_DIAGRAM):   END;
1153726   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1153727   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1153728   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1153729   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1153730   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1153731   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1153732   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1153733   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1153734   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1153735   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1153736   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1153737   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1153738   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1153739   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1153740   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1153741   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1153742   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1153743   +   S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
1153744   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 * 
MonthsAsCustomer ;
1153745   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1153746   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1153747   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1153748   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1153749   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1153750   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1153751   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1153752   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1153753   +END;
MPRINT(EM_DIAGRAM):   END;
1153754   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1153755   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1153756   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1153757   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1153758   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1153759   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1153760   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1153761   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1153762   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1153763   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1153764   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1153765   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1153766   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1153767   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1153768   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1153769   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1153770   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1153771   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1153772   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1153773   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1153774   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1153775   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1153776   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1153777   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1153778   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1153779   +   ELSE S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
1153780   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 * 
MonthsAsCustomer ;
1153781   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1153782   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1153783   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1153784   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1153785   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1153786   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1153787   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1153788   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1153789   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1153790   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1153791   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1153792   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1153793   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1153794   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1153795   +END;
MPRINT(EM_DIAGRAM):   END;
1153796   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1153797   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1153798   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1153799   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1153800   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1153801   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1153802   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1153803   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1153804   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1153805   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1153806   +   H11  =     0.36133262718383 * S_AcceptedCmpTotal  +      0.1343771400865 *
1153807   +        S_Age  +    -0.24571467055536 * S_Frq  +    -0.11635861322703 *
1153808   +        S_Income  +     0.21800402847245 * S_Kidhome
1153809   +          +    -0.08149710666733 * S_MntFishProducts
1153810   +          +     -0.2701399689031 * S_MntFruits  +    -0.25914859917698 *
1153811   +        S_MntGoldProds  +     0.07460522502866 * S_MntSweetProducts
1153812   +          +     0.21797461204216 * S_MonthsAsCustomer
1153813   +          +    -0.21815589160821 * S_NumDealsPurchases
1153814   +          +     0.07812084857236 * S_NumWebVisitsMonth
1153815   +          +     0.08932200343778 * S_RFMstat  +    -0.02006098427394 *
1153816   +        S_RMntFrq  +     0.15769561600884 * S_Recency
1153817   +          +     0.18750185075516 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.36133262718383 * S_AcceptedCmpTotal + 0.1343771400865 * S_Age + 
-0.24571467055536 * S_Frq + -0.11635861322703 * S_Income + 0.21800402847245 * S_Kidhome + 
-0.08149710666733 * S_MntFishProducts + -0.2701399689031 * S_MntFruits + -0.25914859917698 * 
S_MntGoldProds + 0.07460522502866 * S_MntSweetProducts + 0.21797461204216 * S_MonthsAsCustomer 
+ -0.21815589160821 * S_NumDealsPurchases + 0.07812084857236 * S_NumWebVisitsMonth + 
0.08932200343778 * S_RFMstat + -0.02006098427394 * S_RMntFrq + 0.15769561600884 * S_Recency + 
0.18750185075516 * S_Teenhome ;
1153818   +   H12  =    -0.50617940273705 * S_AcceptedCmpTotal  +     0.01742905139009 *
1153819   +        S_Age  +     0.02860405601568 * S_Frq  +     -0.8946732981825 *
1153820   +        S_Income  +    -0.51395557383394 * S_Kidhome
1153821   +          +     0.11230001652798 * S_MntFishProducts
1153822   +          +    -0.05937548001223 * S_MntFruits  +    -0.43879855376106 *
1153823   +        S_MntGoldProds  +      0.1886933749454 * S_MntSweetProducts
1153824   +          +    -0.12024856595234 * S_MonthsAsCustomer
1153825   +          +    -0.53457103099833 * S_NumDealsPurchases
1153826   +          +    -0.65858266122841 * S_NumWebVisitsMonth
1153827   +          +    -0.29325586421931 * S_RFMstat  +    -0.07711837853536 *
1153828   +        S_RMntFrq  +     0.73198178314208 * S_Recency
1153829   +          +       0.284273700583 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -0.50617940273705 * S_AcceptedCmpTotal + 0.01742905139009 * S_Age 
+ 0.02860405601568 * S_Frq + -0.8946732981825 * S_Income + -0.51395557383394 * S_Kidhome + 
0.11230001652798 * S_MntFishProducts + -0.05937548001223 * S_MntFruits + -0.43879855376106 * 
S_MntGoldProds + 0.1886933749454 * S_MntSweetProducts + -0.12024856595234 * S_MonthsAsCustomer 
+ -0.53457103099833 * S_NumDealsPurchases + -0.65858266122841 * S_NumWebVisitsMonth + 
-0.29325586421931 * S_RFMstat + -0.07711837853536 * S_RMntFrq + 0.73198178314208 * S_Recency + 
0.284273700583 * S_Teenhome ;
1153830   +   H13  =    -0.22382536367821 * S_AcceptedCmpTotal  +     0.04173724966563 *
1153831   +        S_Age  +     0.33332048365592 * S_Frq  +    -0.27050680035036 *
1153832   +        S_Income  +     0.59619777894904 * S_Kidhome
1153833   +          +    -0.20681231438874 * S_MntFishProducts
1153834   +          +     0.09668269245081 * S_MntFruits  +     0.33122038423469 *
1153835   +        S_MntGoldProds  +     0.19072077497407 * S_MntSweetProducts
1153836   +          +     0.74999757376588 * S_MonthsAsCustomer
1153837   +          +     -0.0414957568196 * S_NumDealsPurchases
1153838   +          +    -0.28660732058672 * S_NumWebVisitsMonth
1153839   +          +    -0.14783319113971 * S_RFMstat  +     0.08819285971239 *
1153840   +        S_RMntFrq  +     0.82939566759356 * S_Recency
1153841   +          +     0.37769126383714 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = -0.22382536367821 * S_AcceptedCmpTotal + 0.04173724966563 * S_Age 
+ 0.33332048365592 * S_Frq + -0.27050680035036 * S_Income + 0.59619777894904 * S_Kidhome + 
-0.20681231438874 * S_MntFishProducts + 0.09668269245081 * S_MntFruits + 0.33122038423469 * 
S_MntGoldProds + 0.19072077497407 * S_MntSweetProducts + 0.74999757376588 * S_MonthsAsCustomer 
+ -0.0414957568196 * S_NumDealsPurchases + -0.28660732058672 * S_NumWebVisitsMonth + 
-0.14783319113971 * S_RFMstat + 0.08819285971239 * S_RMntFrq + 0.82939566759356 * S_Recency + 
0.37769126383714 * S_Teenhome ;
1153842   +   H14  =    -0.29813774834901 * S_AcceptedCmpTotal  +     0.02971084841681 *
1153843   +        S_Age  +     0.84689199886227 * S_Frq  +     0.08860239979138 *
1153844   +        S_Income  +    -0.00048825209248 * S_Kidhome
1153845   +          +    -0.27253152390669 * S_MntFishProducts
1153846   +          +     0.22290984088185 * S_MntFruits  +    -0.22538306066789 *
1153847   +        S_MntGoldProds  +     0.10593860044534 * S_MntSweetProducts
1153848   +          +    -0.04061858729352 * S_MonthsAsCustomer
1153849   +          +    -0.69966026045197 * S_NumDealsPurchases
1153850   +          +    -0.42440411795848 * S_NumWebVisitsMonth
1153851   +          +    -0.15144674016689 * S_RFMstat  +    -0.12725894949315 *
1153852   +        S_RMntFrq  +     0.85043625268487 * S_Recency
1153853   +          +     0.11330341680725 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = -0.29813774834901 * S_AcceptedCmpTotal + 0.02971084841681 * S_Age 
+ 0.84689199886227 * S_Frq + 0.08860239979138 * S_Income + -0.00048825209248 * S_Kidhome + 
-0.27253152390669 * S_MntFishProducts + 0.22290984088185 * S_MntFruits + -0.22538306066789 * 
S_MntGoldProds + 0.10593860044534 * S_MntSweetProducts + -0.04061858729352 * 
S_MonthsAsCustomer + -0.69966026045197 * S_NumDealsPurchases + -0.42440411795848 * 
S_NumWebVisitsMonth + -0.15144674016689 * S_RFMstat + -0.12725894949315 * S_RMntFrq + 
0.85043625268487 * S_Recency + 0.11330341680725 * S_Teenhome ;
1153854   +   H15  =    -0.07982747659587 * S_AcceptedCmpTotal  +     0.02995727735441 *
1153855   +        S_Age  +     0.48248608076176 * S_Frq  +     0.77701541080871 *
1153856   +        S_Income  +     -0.5200016917594 * S_Kidhome
1153857   +          +    -0.01917879751968 * S_MntFishProducts
1153858   +          +      -0.208302760068 * S_MntFruits  +    -0.01328591874164 *
1153859   +        S_MntGoldProds  +    -0.04604837766039 * S_MntSweetProducts
1153860   +          +     0.24883938360928 * S_MonthsAsCustomer
1153861   +          +    -0.20671463104805 * S_NumDealsPurchases
1153862   +          +    -0.04211724261457 * S_NumWebVisitsMonth
1153863   +          +     0.01917470342239 * S_RFMstat  +     0.33439664089227 *
1153864   +        S_RMntFrq  +    -0.44822635454662 * S_Recency
1153865   +          +    -0.63325249003932 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H15 = -0.07982747659587 * S_AcceptedCmpTotal + 0.02995727735441 * S_Age 
+ 0.48248608076176 * S_Frq + 0.77701541080871 * S_Income + -0.5200016917594 * S_Kidhome + 
-0.01917879751968 * S_MntFishProducts + -0.208302760068 * S_MntFruits + -0.01328591874164 * 
S_MntGoldProds + -0.04604837766039 * S_MntSweetProducts + 0.24883938360928 * 
S_MonthsAsCustomer + -0.20671463104805 * S_NumDealsPurchases + -0.04211724261457 * 
S_NumWebVisitsMonth + 0.01917470342239 * S_RFMstat + 0.33439664089227 * S_RMntFrq + 
-0.44822635454662 * S_Recency + -0.63325249003932 * S_Teenhome ;
1153866   +   H16  =    -0.38297792304862 * S_AcceptedCmpTotal  +     0.10981213932608 *
1153867   +        S_Age  +    -0.17598557908808 * S_Frq  +    -0.00438864339571 *
1153868   +        S_Income  +     0.02657538028182 * S_Kidhome
1153869   +          +     0.30261554656963 * S_MntFishProducts
1153870   +          +    -0.15342918076573 * S_MntFruits  +     0.34453886692852 *
1153871   +        S_MntGoldProds  +    -0.02040982310102 * S_MntSweetProducts
1153872   +          +     0.02174590740842 * S_MonthsAsCustomer
1153873   +          +     -0.2564742686659 * S_NumDealsPurchases
1153874   +          +    -0.17669736301302 * S_NumWebVisitsMonth
1153875   +          +    -0.05908565871891 * S_RFMstat  +     -0.1004598146117 *
1153876   +        S_RMntFrq  +    -0.26904490861856 * S_Recency
1153877   +          +    -0.02193907318371 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H16 = -0.38297792304862 * S_AcceptedCmpTotal + 0.10981213932608 * S_Age 
+ -0.17598557908808 * S_Frq + -0.00438864339571 * S_Income + 0.02657538028182 * S_Kidhome + 
0.30261554656963 * S_MntFishProducts + -0.15342918076573 * S_MntFruits + 0.34453886692852 * 
S_MntGoldProds + -0.02040982310102 * S_MntSweetProducts + 0.02174590740842 * 
S_MonthsAsCustomer + -0.2564742686659 * S_NumDealsPurchases + -0.17669736301302 * 
S_NumWebVisitsMonth + -0.05908565871891 * S_RFMstat + -0.1004598146117 * S_RMntFrq + 
-0.26904490861856 * S_Recency + -0.02193907318371 * S_Teenhome ;
1153878   +   H17  =     0.19136795761974 * S_AcceptedCmpTotal  +    -0.36598513063907 *
1153879   +        S_Age  +    -0.50377462461047 * S_Frq  +     -0.4823937142695 *
1153880   +        S_Income  +     0.24766328423243 * S_Kidhome
1153881   +          +    -0.25095009551816 * S_MntFishProducts
1153882   +          +     0.32862405994166 * S_MntFruits  +     0.13545997285014 *
1153883   +        S_MntGoldProds  +     0.48572798966447 * S_MntSweetProducts
1153884   +          +     0.05495423017724 * S_MonthsAsCustomer
1153885   +          +     0.43616167783834 * S_NumDealsPurchases
1153886   +          +     0.56632988971927 * S_NumWebVisitsMonth
1153887   +          +     0.07176913532762 * S_RFMstat  +     0.09455545385258 *
1153888   +        S_RMntFrq  +    -0.57930962586715 * S_Recency
1153889   +          +     0.37402577765336 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H17 = 0.19136795761974 * S_AcceptedCmpTotal + -0.36598513063907 * S_Age 
+ -0.50377462461047 * S_Frq + -0.4823937142695 * S_Income + 0.24766328423243 * S_Kidhome + 
-0.25095009551816 * S_MntFishProducts + 0.32862405994166 * S_MntFruits + 0.13545997285014 * 
S_MntGoldProds + 0.48572798966447 * S_MntSweetProducts + 0.05495423017724 * S_MonthsAsCustomer 
+ 0.43616167783834 * S_NumDealsPurchases + 0.56632988971927 * S_NumWebVisitsMonth + 
0.07176913532762 * S_RFMstat + 0.09455545385258 * S_RMntFrq + -0.57930962586715 * S_Recency + 
0.37402577765336 * S_Teenhome ;
1153890   +   H11  = H11  +     0.19051470634808 * AcceptedCmp10
1153891   +          +    -0.07216947855434 * AcceptedCmp20  +     0.21737393600184 *
1153892   +        AcceptedCmp30  +     0.21085157726024 * AcceptedCmp40
1153893   +          +    -0.03060343696444 * AcceptedCmp50  +    -0.07251000037685 *
1153894   +        Complain0  +     0.01831009008775 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.19051470634808 * AcceptedCmp10 + -0.07216947855434 * 
AcceptedCmp20 + 0.21737393600184 * AcceptedCmp30 + 0.21085157726024 * AcceptedCmp40 + 
-0.03060343696444 * AcceptedCmp50 + -0.07251000037685 * Complain0 + 0.01831009008775 * 
HigherEducationBinary0 ;
1153895   +   H12  = H12  +    -0.08376219764212 * AcceptedCmp10
1153896   +          +    -0.04318604935285 * AcceptedCmp20  +     0.31686571931406 *
1153897   +        AcceptedCmp30  +    -0.50381802619358 * AcceptedCmp40
1153898   +          +     0.14765895912577 * AcceptedCmp50  +    -0.30891077015908 *
1153899   +        Complain0  +     0.33649437112475 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.08376219764212 * AcceptedCmp10 + -0.04318604935285 * 
AcceptedCmp20 + 0.31686571931406 * AcceptedCmp30 + -0.50381802619358 * AcceptedCmp40 + 
0.14765895912577 * AcceptedCmp50 + -0.30891077015908 * Complain0 + 0.33649437112475 * 
HigherEducationBinary0 ;
1153900   +   H13  = H13  +    -0.26783020607447 * AcceptedCmp10
1153901   +          +     0.00469266575176 * AcceptedCmp20  +     0.17067955604815 *
1153902   +        AcceptedCmp30  +    -0.03800701493644 * AcceptedCmp40
1153903   +          +     0.18664788771851 * AcceptedCmp50  +    -0.58650285377449 *
1153904   +        Complain0  +    -0.35013080380749 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.26783020607447 * AcceptedCmp10 + 0.00469266575176 * 
AcceptedCmp20 + 0.17067955604815 * AcceptedCmp30 + -0.03800701493644 * AcceptedCmp40 + 
0.18664788771851 * AcceptedCmp50 + -0.58650285377449 * Complain0 + -0.35013080380749 * 
HigherEducationBinary0 ;
1153905   +   H14  = H14  +     0.63010904279384 * AcceptedCmp10
1153906   +          +     0.06584826963979 * AcceptedCmp20  +     0.32237915530123 *
1153907   +        AcceptedCmp30  +    -0.04951576144663 * AcceptedCmp40
1153908   +          +     0.61998234297035 * AcceptedCmp50  +     0.00048129839212 *
1153909   +        Complain0  +     -0.1253104829676 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.63010904279384 * AcceptedCmp10 + 0.06584826963979 * 
AcceptedCmp20 + 0.32237915530123 * AcceptedCmp30 + -0.04951576144663 * AcceptedCmp40 + 
0.61998234297035 * AcceptedCmp50 + 0.00048129839212 * Complain0 + -0.1253104829676 * 
HigherEducationBinary0 ;
1153910   +   H15  = H15  +      -0.431361787308 * AcceptedCmp10
1153911   +          +    -0.35444173306347 * AcceptedCmp20  +    -0.29829328632276 *
1153912   +        AcceptedCmp30  +    -0.63891180852982 * AcceptedCmp40
1153913   +          +     0.09112550400968 * AcceptedCmp50  +    -0.55600327682226 *
1153914   +        Complain0  +     0.37327970930193 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + -0.431361787308 * AcceptedCmp10 + -0.35444173306347 * 
AcceptedCmp20 + -0.29829328632276 * AcceptedCmp30 + -0.63891180852982 * AcceptedCmp40 + 
0.09112550400968 * AcceptedCmp50 + -0.55600327682226 * Complain0 + 0.37327970930193 * 
HigherEducationBinary0 ;
1153915   +   H16  = H16  +    -0.10510318083151 * AcceptedCmp10
1153916   +          +     0.20700826755616 * AcceptedCmp20  +     0.34115351197698 *
1153917   +        AcceptedCmp30  +    -0.02186089038242 * AcceptedCmp40
1153918   +          +    -0.22066876509421 * AcceptedCmp50  +    -0.37202379131817 *
1153919   +        Complain0  +     0.14046104192307 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H16 = H16 + -0.10510318083151 * AcceptedCmp10 + 0.20700826755616 * 
AcceptedCmp20 + 0.34115351197698 * AcceptedCmp30 + -0.02186089038242 * AcceptedCmp40 + 
-0.22066876509421 * AcceptedCmp50 + -0.37202379131817 * Complain0 + 0.14046104192307 * 
HigherEducationBinary0 ;
1153920   +   H17  = H17  +    -0.09298124880387 * AcceptedCmp10
1153921   +          +    -0.04743706801693 * AcceptedCmp20  +    -0.44870387587127 *
1153922   +        AcceptedCmp30  +      0.1036296198206 * AcceptedCmp40
1153923   +          +    -0.05138140136888 * AcceptedCmp50  +    -0.19337238268115 *
1153924   +        Complain0  +    -0.21291261409303 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H17 = H17 + -0.09298124880387 * AcceptedCmp10 + -0.04743706801693 * 
AcceptedCmp20 + -0.44870387587127 * AcceptedCmp30 + 0.1036296198206 * AcceptedCmp40 + 
-0.05138140136888 * AcceptedCmp50 + -0.19337238268115 * Complain0 + -0.21291261409303 * 
HigherEducationBinary0 ;
1153925   +   H11  = H11  +    -0.16744529688383 * Education2n_Cycle
1153926   +          +    -0.31425534410414 * EducationBasic  +     0.13292009986312 *
1153927   +        EducationGraduation  +     0.02026218772144 * EducationMaster
1153928   +          +     0.03224080100133 * Marital_StatusDivorced
1153929   +          +     0.29745692653089 * Marital_StatusMarried
1153930   +          +    -0.05710732710843 * Marital_StatusSingle
1153931   +          +     0.27928074465671 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.16744529688383 * Education2n_Cycle + -0.31425534410414 * 
EducationBasic + 0.13292009986312 * EducationGraduation + 0.02026218772144 * EducationMaster + 
0.03224080100133 * Marital_StatusDivorced + 0.29745692653089 * Marital_StatusMarried + 
-0.05710732710843 * Marital_StatusSingle + 0.27928074465671 * Marital_StatusTogether ;
1153932   +   H12  = H12  +    -0.10675016455937 * Education2n_Cycle
1153933   +          +     0.25652819606036 * EducationBasic  +    -0.25732914554257 *
1153934   +        EducationGraduation  +     0.05617204773323 * EducationMaster
1153935   +          +    -0.13213973463809 * Marital_StatusDivorced
1153936   +          +     0.29599134560833 * Marital_StatusMarried
1153937   +          +     -0.2063852486711 * Marital_StatusSingle
1153938   +          +     0.12103657163442 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.10675016455937 * Education2n_Cycle + 0.25652819606036 * 
EducationBasic + -0.25732914554257 * EducationGraduation + 0.05617204773323 * EducationMaster 
+ -0.13213973463809 * Marital_StatusDivorced + 0.29599134560833 * Marital_StatusMarried + 
-0.2063852486711 * Marital_StatusSingle + 0.12103657163442 * Marital_StatusTogether ;
1153939   +   H13  = H13  +     0.16437023455981 * Education2n_Cycle
1153940   +          +    -0.08434195766996 * EducationBasic  +     0.11865174008514 *
1153941   +        EducationGraduation  +    -0.23426651494583 * EducationMaster
1153942   +          +     0.03869842290419 * Marital_StatusDivorced
1153943   +          +     0.02863271652743 * Marital_StatusMarried
1153944   +          +     0.16900197403585 * Marital_StatusSingle
1153945   +          +     -0.4005829242866 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.16437023455981 * Education2n_Cycle + -0.08434195766996 * 
EducationBasic + 0.11865174008514 * EducationGraduation + -0.23426651494583 * EducationMaster 
+ 0.03869842290419 * Marital_StatusDivorced + 0.02863271652743 * Marital_StatusMarried + 
0.16900197403585 * Marital_StatusSingle + -0.4005829242866 * Marital_StatusTogether ;
1153946   +   H14  = H14  +     0.09249210314159 * Education2n_Cycle
1153947   +          +     0.17486481480148 * EducationBasic  +    -0.08188859647689 *
1153948   +        EducationGraduation  +    -0.01246856756087 * EducationMaster
1153949   +          +    -0.07321508189995 * Marital_StatusDivorced
1153950   +          +     0.20555334173771 * Marital_StatusMarried
1153951   +          +     0.21523251628551 * Marital_StatusSingle
1153952   +          +     0.25008985020723 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.09249210314159 * Education2n_Cycle + 0.17486481480148 * 
EducationBasic + -0.08188859647689 * EducationGraduation + -0.01246856756087 * EducationMaster 
+ -0.07321508189995 * Marital_StatusDivorced + 0.20555334173771 * Marital_StatusMarried + 
0.21523251628551 * Marital_StatusSingle + 0.25008985020723 * Marital_StatusTogether ;
1153953   +   H15  = H15  +      0.0559000195465 * Education2n_Cycle
1153954   +          +     0.15755882128532 * EducationBasic  +     0.18728279497378 *
1153955   +        EducationGraduation  +    -0.40523840756533 * EducationMaster
1153956   +          +     0.16221006173823 * Marital_StatusDivorced
1153957   +          +    -0.82194777490073 * Marital_StatusMarried
1153958   +          +     0.85321787917596 * Marital_StatusSingle
1153959   +          +    -0.81385338897521 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.0559000195465 * Education2n_Cycle + 0.15755882128532 * 
EducationBasic + 0.18728279497378 * EducationGraduation + -0.40523840756533 * EducationMaster 
+ 0.16221006173823 * Marital_StatusDivorced + -0.82194777490073 * Marital_StatusMarried + 
0.85321787917596 * Marital_StatusSingle + -0.81385338897521 * Marital_StatusTogether ;
1153960   +   H16  = H16  +    -0.15156841688167 * Education2n_Cycle
1153961   +          +    -0.32052189509613 * EducationBasic  +     0.14814402908721 *
1153962   +        EducationGraduation  +    -0.24180213668326 * EducationMaster
1153963   +          +    -0.01732271619375 * Marital_StatusDivorced
1153964   +          +     0.04513262049576 * Marital_StatusMarried
1153965   +          +    -0.05438203821532 * Marital_StatusSingle
1153966   +          +      0.0759481335775 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H16 = H16 + -0.15156841688167 * Education2n_Cycle + -0.32052189509613 * 
EducationBasic + 0.14814402908721 * EducationGraduation + -0.24180213668326 * EducationMaster 
+ -0.01732271619375 * Marital_StatusDivorced + 0.04513262049576 * Marital_StatusMarried + 
-0.05438203821532 * Marital_StatusSingle + 0.0759481335775 * Marital_StatusTogether ;
1153967   +   H17  = H17  +    -0.18722295224931 * Education2n_Cycle
1153968   +          +      0.3187729862352 * EducationBasic  +     0.22068390790352 *
1153969   +        EducationGraduation  +     0.13877995362513 * EducationMaster
1153970   +          +     0.22623757264973 * Marital_StatusDivorced
1153971   +          +     0.10308007683249 * Marital_StatusMarried
1153972   +          +    -0.07750614215091 * Marital_StatusSingle
1153973   +          +    -0.19333798296202 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H17 = H17 + -0.18722295224931 * Education2n_Cycle + 0.3187729862352 * 
EducationBasic + 0.22068390790352 * EducationGraduation + 0.13877995362513 * EducationMaster + 
0.22623757264973 * Marital_StatusDivorced + 0.10308007683249 * Marital_StatusMarried + 
-0.07750614215091 * Marital_StatusSingle + -0.19333798296202 * Marital_StatusTogether ;
1153974   +   H11  =     1.31496618512526 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 1.31496618512526 + H11 ;
1153975   +   H12  =     0.20245920531192 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.20245920531192 + H12 ;
1153976   +   H13  =     -0.7770501213614 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.7770501213614 + H13 ;
1153977   +   H14  =     0.85602300575727 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 0.85602300575727 + H14 ;
1153978   +   H15  =    -0.15331135041487 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = -0.15331135041487 + H15 ;
1153979   +   H16  =    -0.71412018703209 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = -0.71412018703209 + H16 ;
1153980   +   H17  =    -1.06302431968156 + H17 ;
MPRINT(EM_DIAGRAM):   H17 = -1.06302431968156 + H17 ;
1153981   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1153982   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1153983   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1153984   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1153985   +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
1153986   +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
1153987   +   H17  = TANH(H17 );
MPRINT(EM_DIAGRAM):   H17 = TANH(H17 );
1153988   +END;
MPRINT(EM_DIAGRAM):   END;
1153989   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1153990   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1153991   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1153992   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1153993   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1153994   +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
1153995   +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
1153996   +   H17  = .;
MPRINT(EM_DIAGRAM):   H17 = .;
1153997   +END;
MPRINT(EM_DIAGRAM):   END;
1153998   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1153999   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1154000   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1154001   +
1154002   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1154003   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1154004   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1154005   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1154006   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1154007   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1154008   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1154009   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1154010   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1154011   +end;
MPRINT(EM_DIAGRAM):   end;
1154012   +else do;
MPRINT(EM_DIAGRAM):   else do;
1154013   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1154014   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1154015   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1154016   +   end;
MPRINT(EM_DIAGRAM):   end;
1154017   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1154018   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1154019   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1154020   +   end;
MPRINT(EM_DIAGRAM):   end;
1154021   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1154022   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1154023   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1154024   +   end;
MPRINT(EM_DIAGRAM):   end;
1154025   +end;
MPRINT(EM_DIAGRAM):   end;
1154026   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1154027   +   P_DepVar1  =    -0.11734493117272 * H11  +    -2.70843436735374 * H12
1154028   +          +    -1.82278168298088 * H13  +    -1.84841969324871 * H14
1154029   +          +     2.54735424594008 * H15  +     -0.2050385322443 * H16
1154030   +          +     1.26532821734496 * H17 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.11734493117272 * H11 + -2.70843436735374 * H12 + 
-1.82278168298088 * H13 + -1.84841969324871 * H14 + 2.54735424594008 * H15 + -0.2050385322443 
* H16 + 1.26532821734496 * H17 ;
1154031   +   P_DepVar1  =    -1.65851332548506 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.65851332548506 + P_DepVar1 ;
1154032   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1154033   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1154034   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1154035   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1154036   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1154037   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1154038   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1154039   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1154040   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1154041   +END;
MPRINT(EM_DIAGRAM):   END;
1154042   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1154043   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1154044   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1154045   +END;
MPRINT(EM_DIAGRAM):   END;
1154046   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1154047   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1154048   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1154049   +END;
MPRINT(EM_DIAGRAM):   END;
1154050   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1154051   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1154052   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1154053   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1154054   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1154055   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1154056   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1154057   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1154058   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1154059   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1154060   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1154061   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1154062   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1154063   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1154064   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1154065   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1154066   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1154067   +END;
MPRINT(EM_DIAGRAM):   END;
1154068   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1154069   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1154070   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1154071   +drop
1154072   +H11
1154073   +H12
1154074   +H13
1154075   +H14
1154076   +H15
1154077   +H16
1154078   +H17
1154079   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 H17 ;
1154080   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1154081    run;

NOTE: DATA STEP view saved on file EMWS8.NEURAL36_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.META3_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1154082    quit;
1154083    filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
1154084    filename emflow
1154084  ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural36\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural36\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural36: Scoring VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1154085    *------------------------------------------------------------*;
1154086    * Neural36: Scoring VALIDATE data;
1154087    *------------------------------------------------------------*;
1154088    data EMWS8.Neural36_VALIDATE
1154089    / view=EMWS8.Neural36_VALIDATE
1154090    ;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural36_VALIDATE / view=EMWS8.Neural36_VALIDATE ;
1154091    set EMWS8.Meta3_VALIDATE
1154092    ;
MPRINT(EM_DIAGRAM):   set EMWS8.Meta3_VALIDATE ;
1154093    %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Neural36\EMFLOWSCORE.sas.
1154094   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1154095   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1154096   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1154097   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1154098   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1154099   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1154100   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1154101   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1154102   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1154103   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1154104   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1154105   +LENGTH _WARN_ $4
1154106   +      F_DepVar  $ 12
1154107   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1154108   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1154109   +
1154110   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1154111   +
1154112   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1154113   +
1154114   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1154115   +
1154116   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1154117   +
1154118   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1154119   +
1154120   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1154121   +
1154122   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1154123   +
1154124   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1154125   +
1154126   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1154127   +
1154128   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1154129   +
1154130   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1154131   +
1154132   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1154133   +
1154134   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1154135   +
1154136   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1154137   +
1154138   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1154139   +
1154140   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1154141   +
1154142   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1154143   +
1154144   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1154145   +
1154146   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1154147   +
1154148   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1154149   +
1154150   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1154151   +
1154152   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1154153   +
1154154   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1154155   +
1154156   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1154157   +
1154158   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1154159   +
1154160   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1154161   +
1154162   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1154163   +
1154164   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1154165   +
1154166   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1154167   +
1154168   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1154169   +
1154170   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1154171   +
1154172   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1154173   +
1154174   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1154175   +
1154176   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1154177   +
1154178   +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
1154179   +
1154180   +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
1154181   +
1154182   +      label H17 = 'Hidden: H1=7' ;
MPRINT(EM_DIAGRAM):   label H17 = 'Hidden: H1=7' ;
1154183   +
1154184   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1154185   +
1154186   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1154187   +
1154188   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1154189   +
1154190   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1154191   +
1154192   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1154193   +
1154194   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1154195   +
1154196   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1154197   +
1154198   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1154199   +
1154200   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1154201   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1154202   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1154203   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1154204   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1154205   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1154206   +end;
MPRINT(EM_DIAGRAM):   end;
1154207   +else do;
MPRINT(EM_DIAGRAM):   else do;
1154208   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1154209   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1154210   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1154211   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1154212   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1154213   +   end;
MPRINT(EM_DIAGRAM):   end;
1154214   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1154215   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1154216   +   end;
MPRINT(EM_DIAGRAM):   end;
1154217   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1154218   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1154219   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1154220   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1154221   +   end;
MPRINT(EM_DIAGRAM):   end;
1154222   +end;
MPRINT(EM_DIAGRAM):   end;
1154223   +
1154224   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1154225   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1154226   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1154227   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1154228   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1154229   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1154230   +end;
MPRINT(EM_DIAGRAM):   end;
1154231   +else do;
MPRINT(EM_DIAGRAM):   else do;
1154232   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1154233   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1154234   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1154235   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1154236   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1154237   +   end;
MPRINT(EM_DIAGRAM):   end;
1154238   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1154239   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1154240   +   end;
MPRINT(EM_DIAGRAM):   end;
1154241   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1154242   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1154243   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1154244   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1154245   +   end;
MPRINT(EM_DIAGRAM):   end;
1154246   +end;
MPRINT(EM_DIAGRAM):   end;
1154247   +
1154248   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1154249   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1154250   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1154251   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1154252   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1154253   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1154254   +end;
MPRINT(EM_DIAGRAM):   end;
1154255   +else do;
MPRINT(EM_DIAGRAM):   else do;
1154256   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1154257   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1154258   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1154259   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1154260   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1154261   +   end;
MPRINT(EM_DIAGRAM):   end;
1154262   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1154263   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1154264   +   end;
MPRINT(EM_DIAGRAM):   end;
1154265   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1154266   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1154267   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1154268   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1154269   +   end;
MPRINT(EM_DIAGRAM):   end;
1154270   +end;
MPRINT(EM_DIAGRAM):   end;
1154271   +
1154272   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1154273   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1154274   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1154275   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1154276   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1154277   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1154278   +end;
MPRINT(EM_DIAGRAM):   end;
1154279   +else do;
MPRINT(EM_DIAGRAM):   else do;
1154280   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1154281   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1154282   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1154283   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1154284   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1154285   +   end;
MPRINT(EM_DIAGRAM):   end;
1154286   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1154287   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1154288   +   end;
MPRINT(EM_DIAGRAM):   end;
1154289   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1154290   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1154291   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1154292   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1154293   +   end;
MPRINT(EM_DIAGRAM):   end;
1154294   +end;
MPRINT(EM_DIAGRAM):   end;
1154295   +
1154296   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1154297   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1154298   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1154299   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1154300   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1154301   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1154302   +end;
MPRINT(EM_DIAGRAM):   end;
1154303   +else do;
MPRINT(EM_DIAGRAM):   else do;
1154304   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1154305   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1154306   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1154307   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1154308   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1154309   +   end;
MPRINT(EM_DIAGRAM):   end;
1154310   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1154311   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1154312   +   end;
MPRINT(EM_DIAGRAM):   end;
1154313   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1154314   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1154315   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1154316   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1154317   +   end;
MPRINT(EM_DIAGRAM):   end;
1154318   +end;
MPRINT(EM_DIAGRAM):   end;
1154319   +
1154320   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1154321   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1154322   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1154323   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1154324   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1154325   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1154326   +end;
MPRINT(EM_DIAGRAM):   end;
1154327   +else do;
MPRINT(EM_DIAGRAM):   else do;
1154328   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1154329   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1154330   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1154331   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1154332   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1154333   +   end;
MPRINT(EM_DIAGRAM):   end;
1154334   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1154335   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1154336   +   end;
MPRINT(EM_DIAGRAM):   end;
1154337   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1154338   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1154339   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1154340   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1154341   +   end;
MPRINT(EM_DIAGRAM):   end;
1154342   +end;
MPRINT(EM_DIAGRAM):   end;
1154343   +
1154344   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1154345   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1154346   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1154347   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1154348   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1154349   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1154350   +end;
MPRINT(EM_DIAGRAM):   end;
1154351   +else do;
MPRINT(EM_DIAGRAM):   else do;
1154352   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1154353   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1154354   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1154355   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1154356   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1154357   +   end;
MPRINT(EM_DIAGRAM):   end;
1154358   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1154359   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1154360   +   end;
MPRINT(EM_DIAGRAM):   end;
1154361   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1154362   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1154363   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1154364   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1154365   +   end;
MPRINT(EM_DIAGRAM):   end;
1154366   +end;
MPRINT(EM_DIAGRAM):   end;
1154367   +
1154368   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1154369   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
1154370   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1154371   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1154372   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1154373   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1154374   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1154375   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1154376   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1154377   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1154378   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1154379   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1154380   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1154381   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1154382   +end;
MPRINT(EM_DIAGRAM):   end;
1154383   +else do;
MPRINT(EM_DIAGRAM):   else do;
1154384   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1154385   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1154386   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1154387   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1154388   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1154389   +   end;
MPRINT(EM_DIAGRAM):   end;
1154390   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1154391   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1154392   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1154393   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1154394   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1154395   +   end;
MPRINT(EM_DIAGRAM):   end;
1154396   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1154397   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1154398   +   end;
MPRINT(EM_DIAGRAM):   end;
1154399   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1154400   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1154401   +   end;
MPRINT(EM_DIAGRAM):   end;
1154402   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1154403   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1154404   +   end;
MPRINT(EM_DIAGRAM):   end;
1154405   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1154406   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1154407   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1154408   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1154409   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1154410   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1154411   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1154412   +   end;
MPRINT(EM_DIAGRAM):   end;
1154413   +end;
MPRINT(EM_DIAGRAM):   end;
1154414   +
1154415   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1154416   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1154417   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
1154418   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1154419   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1154420   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1154421   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1154422   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1154423   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1154424   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1154425   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1154426   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1154427   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1154428   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1154429   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1154430   +end;
MPRINT(EM_DIAGRAM):   end;
1154431   +else do;
MPRINT(EM_DIAGRAM):   else do;
1154432   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1154433   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1154434   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1154435   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1154436   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1154437   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1154438   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1154439   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1154440   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1154441   +         end;
MPRINT(EM_DIAGRAM):   end;
1154442   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1154443   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1154444   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1154445   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1154446   +            end;
MPRINT(EM_DIAGRAM):   end;
1154447   +         end;
MPRINT(EM_DIAGRAM):   end;
1154448   +      end;
MPRINT(EM_DIAGRAM):   end;
1154449   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1154450   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1154451   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1154452   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1154453   +         end;
MPRINT(EM_DIAGRAM):   end;
1154454   +      end;
MPRINT(EM_DIAGRAM):   end;
1154455   +   end;
MPRINT(EM_DIAGRAM):   end;
1154456   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1154457   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1154458   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1154459   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1154460   +      end;
MPRINT(EM_DIAGRAM):   end;
1154461   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1154462   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1154463   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1154464   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1154465   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1154466   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1154467   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1154468   +         end;
MPRINT(EM_DIAGRAM):   end;
1154469   +      end;
MPRINT(EM_DIAGRAM):   end;
1154470   +   end;
MPRINT(EM_DIAGRAM):   end;
1154471   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1154472   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1154473   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1154474   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1154475   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1154476   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1154477   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1154478   +   end;
MPRINT(EM_DIAGRAM):   end;
1154479   +end;
MPRINT(EM_DIAGRAM):   end;
1154480   +
1154481   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1154482   +*** Checking missing input Interval
1154483   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1154484   +
1154485   +IF NMISS(
1154486   +   AcceptedCmpTotal ,
1154487   +   Age ,
1154488   +   Frq ,
1154489   +   Income ,
1154490   +   Kidhome ,
1154491   +   MntFishProducts ,
1154492   +   MntFruits ,
1154493   +   MntGoldProds ,
1154494   +   MntSweetProducts ,
1154495   +   MonthsAsCustomer ,
1154496   +   NumDealsPurchases ,
1154497   +   NumWebVisitsMonth ,
1154498   +   RFMstat ,
1154499   +   RMntFrq ,
1154500   +   Recency ,
1154501   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , 
MntFishProducts , MntFruits , MntGoldProds , MntSweetProducts , MonthsAsCustomer , 
NumDealsPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , Teenhome ) THEN DO;
1154502   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1154503   +
1154504   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1154505   +END;
MPRINT(EM_DIAGRAM):   END;
1154506   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1154507   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1154508   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1154509   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1154510   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1154511   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1154512   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1154513   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1154514   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1154515   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1154516   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1154517   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1154518   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1154519   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1154520   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1154521   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1154522   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1154523   +   S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
1154524   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 * 
MonthsAsCustomer ;
1154525   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1154526   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1154527   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1154528   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1154529   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1154530   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1154531   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1154532   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1154533   +END;
MPRINT(EM_DIAGRAM):   END;
1154534   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1154535   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1154536   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1154537   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1154538   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1154539   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1154540   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1154541   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1154542   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1154543   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1154544   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1154545   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1154546   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1154547   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1154548   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1154549   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1154550   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1154551   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1154552   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1154553   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1154554   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1154555   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1154556   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1154557   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1154558   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1154559   +   ELSE S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
1154560   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 * 
MonthsAsCustomer ;
1154561   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1154562   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1154563   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1154564   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1154565   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1154566   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1154567   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1154568   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1154569   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1154570   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1154571   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1154572   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1154573   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1154574   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1154575   +END;
MPRINT(EM_DIAGRAM):   END;
1154576   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1154577   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1154578   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1154579   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1154580   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1154581   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1154582   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1154583   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1154584   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1154585   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1154586   +   H11  =     0.36133262718383 * S_AcceptedCmpTotal  +      0.1343771400865 *
1154587   +        S_Age  +    -0.24571467055536 * S_Frq  +    -0.11635861322703 *
1154588   +        S_Income  +     0.21800402847245 * S_Kidhome
1154589   +          +    -0.08149710666733 * S_MntFishProducts
1154590   +          +     -0.2701399689031 * S_MntFruits  +    -0.25914859917698 *
1154591   +        S_MntGoldProds  +     0.07460522502866 * S_MntSweetProducts
1154592   +          +     0.21797461204216 * S_MonthsAsCustomer
1154593   +          +    -0.21815589160821 * S_NumDealsPurchases
1154594   +          +     0.07812084857236 * S_NumWebVisitsMonth
1154595   +          +     0.08932200343778 * S_RFMstat  +    -0.02006098427394 *
1154596   +        S_RMntFrq  +     0.15769561600884 * S_Recency
1154597   +          +     0.18750185075516 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.36133262718383 * S_AcceptedCmpTotal + 0.1343771400865 * S_Age + 
-0.24571467055536 * S_Frq + -0.11635861322703 * S_Income + 0.21800402847245 * S_Kidhome + 
-0.08149710666733 * S_MntFishProducts + -0.2701399689031 * S_MntFruits + -0.25914859917698 * 
S_MntGoldProds + 0.07460522502866 * S_MntSweetProducts + 0.21797461204216 * S_MonthsAsCustomer 
+ -0.21815589160821 * S_NumDealsPurchases + 0.07812084857236 * S_NumWebVisitsMonth + 
0.08932200343778 * S_RFMstat + -0.02006098427394 * S_RMntFrq + 0.15769561600884 * S_Recency + 
0.18750185075516 * S_Teenhome ;
1154598   +   H12  =    -0.50617940273705 * S_AcceptedCmpTotal  +     0.01742905139009 *
1154599   +        S_Age  +     0.02860405601568 * S_Frq  +     -0.8946732981825 *
1154600   +        S_Income  +    -0.51395557383394 * S_Kidhome
1154601   +          +     0.11230001652798 * S_MntFishProducts
1154602   +          +    -0.05937548001223 * S_MntFruits  +    -0.43879855376106 *
1154603   +        S_MntGoldProds  +      0.1886933749454 * S_MntSweetProducts
1154604   +          +    -0.12024856595234 * S_MonthsAsCustomer
1154605   +          +    -0.53457103099833 * S_NumDealsPurchases
1154606   +          +    -0.65858266122841 * S_NumWebVisitsMonth
1154607   +          +    -0.29325586421931 * S_RFMstat  +    -0.07711837853536 *
1154608   +        S_RMntFrq  +     0.73198178314208 * S_Recency
1154609   +          +       0.284273700583 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -0.50617940273705 * S_AcceptedCmpTotal + 0.01742905139009 * S_Age 
+ 0.02860405601568 * S_Frq + -0.8946732981825 * S_Income + -0.51395557383394 * S_Kidhome + 
0.11230001652798 * S_MntFishProducts + -0.05937548001223 * S_MntFruits + -0.43879855376106 * 
S_MntGoldProds + 0.1886933749454 * S_MntSweetProducts + -0.12024856595234 * S_MonthsAsCustomer 
+ -0.53457103099833 * S_NumDealsPurchases + -0.65858266122841 * S_NumWebVisitsMonth + 
-0.29325586421931 * S_RFMstat + -0.07711837853536 * S_RMntFrq + 0.73198178314208 * S_Recency + 
0.284273700583 * S_Teenhome ;
1154610   +   H13  =    -0.22382536367821 * S_AcceptedCmpTotal  +     0.04173724966563 *
1154611   +        S_Age  +     0.33332048365592 * S_Frq  +    -0.27050680035036 *
1154612   +        S_Income  +     0.59619777894904 * S_Kidhome
1154613   +          +    -0.20681231438874 * S_MntFishProducts
1154614   +          +     0.09668269245081 * S_MntFruits  +     0.33122038423469 *
1154615   +        S_MntGoldProds  +     0.19072077497407 * S_MntSweetProducts
1154616   +          +     0.74999757376588 * S_MonthsAsCustomer
1154617   +          +     -0.0414957568196 * S_NumDealsPurchases
1154618   +          +    -0.28660732058672 * S_NumWebVisitsMonth
1154619   +          +    -0.14783319113971 * S_RFMstat  +     0.08819285971239 *
1154620   +        S_RMntFrq  +     0.82939566759356 * S_Recency
1154621   +          +     0.37769126383714 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = -0.22382536367821 * S_AcceptedCmpTotal + 0.04173724966563 * S_Age 
+ 0.33332048365592 * S_Frq + -0.27050680035036 * S_Income + 0.59619777894904 * S_Kidhome + 
-0.20681231438874 * S_MntFishProducts + 0.09668269245081 * S_MntFruits + 0.33122038423469 * 
S_MntGoldProds + 0.19072077497407 * S_MntSweetProducts + 0.74999757376588 * S_MonthsAsCustomer 
+ -0.0414957568196 * S_NumDealsPurchases + -0.28660732058672 * S_NumWebVisitsMonth + 
-0.14783319113971 * S_RFMstat + 0.08819285971239 * S_RMntFrq + 0.82939566759356 * S_Recency + 
0.37769126383714 * S_Teenhome ;
1154622   +   H14  =    -0.29813774834901 * S_AcceptedCmpTotal  +     0.02971084841681 *
1154623   +        S_Age  +     0.84689199886227 * S_Frq  +     0.08860239979138 *
1154624   +        S_Income  +    -0.00048825209248 * S_Kidhome
1154625   +          +    -0.27253152390669 * S_MntFishProducts
1154626   +          +     0.22290984088185 * S_MntFruits  +    -0.22538306066789 *
1154627   +        S_MntGoldProds  +     0.10593860044534 * S_MntSweetProducts
1154628   +          +    -0.04061858729352 * S_MonthsAsCustomer
1154629   +          +    -0.69966026045197 * S_NumDealsPurchases
1154630   +          +    -0.42440411795848 * S_NumWebVisitsMonth
1154631   +          +    -0.15144674016689 * S_RFMstat  +    -0.12725894949315 *
1154632   +        S_RMntFrq  +     0.85043625268487 * S_Recency
1154633   +          +     0.11330341680725 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = -0.29813774834901 * S_AcceptedCmpTotal + 0.02971084841681 * S_Age 
+ 0.84689199886227 * S_Frq + 0.08860239979138 * S_Income + -0.00048825209248 * S_Kidhome + 
-0.27253152390669 * S_MntFishProducts + 0.22290984088185 * S_MntFruits + -0.22538306066789 * 
S_MntGoldProds + 0.10593860044534 * S_MntSweetProducts + -0.04061858729352 * 
S_MonthsAsCustomer + -0.69966026045197 * S_NumDealsPurchases + -0.42440411795848 * 
S_NumWebVisitsMonth + -0.15144674016689 * S_RFMstat + -0.12725894949315 * S_RMntFrq + 
0.85043625268487 * S_Recency + 0.11330341680725 * S_Teenhome ;
1154634   +   H15  =    -0.07982747659587 * S_AcceptedCmpTotal  +     0.02995727735441 *
1154635   +        S_Age  +     0.48248608076176 * S_Frq  +     0.77701541080871 *
1154636   +        S_Income  +     -0.5200016917594 * S_Kidhome
1154637   +          +    -0.01917879751968 * S_MntFishProducts
1154638   +          +      -0.208302760068 * S_MntFruits  +    -0.01328591874164 *
1154639   +        S_MntGoldProds  +    -0.04604837766039 * S_MntSweetProducts
1154640   +          +     0.24883938360928 * S_MonthsAsCustomer
1154641   +          +    -0.20671463104805 * S_NumDealsPurchases
1154642   +          +    -0.04211724261457 * S_NumWebVisitsMonth
1154643   +          +     0.01917470342239 * S_RFMstat  +     0.33439664089227 *
1154644   +        S_RMntFrq  +    -0.44822635454662 * S_Recency
1154645   +          +    -0.63325249003932 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H15 = -0.07982747659587 * S_AcceptedCmpTotal + 0.02995727735441 * S_Age 
+ 0.48248608076176 * S_Frq + 0.77701541080871 * S_Income + -0.5200016917594 * S_Kidhome + 
-0.01917879751968 * S_MntFishProducts + -0.208302760068 * S_MntFruits + -0.01328591874164 * 
S_MntGoldProds + -0.04604837766039 * S_MntSweetProducts + 0.24883938360928 * 
S_MonthsAsCustomer + -0.20671463104805 * S_NumDealsPurchases + -0.04211724261457 * 
S_NumWebVisitsMonth + 0.01917470342239 * S_RFMstat + 0.33439664089227 * S_RMntFrq + 
-0.44822635454662 * S_Recency + -0.63325249003932 * S_Teenhome ;
1154646   +   H16  =    -0.38297792304862 * S_AcceptedCmpTotal  +     0.10981213932608 *
1154647   +        S_Age  +    -0.17598557908808 * S_Frq  +    -0.00438864339571 *
1154648   +        S_Income  +     0.02657538028182 * S_Kidhome
1154649   +          +     0.30261554656963 * S_MntFishProducts
1154650   +          +    -0.15342918076573 * S_MntFruits  +     0.34453886692852 *
1154651   +        S_MntGoldProds  +    -0.02040982310102 * S_MntSweetProducts
1154652   +          +     0.02174590740842 * S_MonthsAsCustomer
1154653   +          +     -0.2564742686659 * S_NumDealsPurchases
1154654   +          +    -0.17669736301302 * S_NumWebVisitsMonth
1154655   +          +    -0.05908565871891 * S_RFMstat  +     -0.1004598146117 *
1154656   +        S_RMntFrq  +    -0.26904490861856 * S_Recency
1154657   +          +    -0.02193907318371 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H16 = -0.38297792304862 * S_AcceptedCmpTotal + 0.10981213932608 * S_Age 
+ -0.17598557908808 * S_Frq + -0.00438864339571 * S_Income + 0.02657538028182 * S_Kidhome + 
0.30261554656963 * S_MntFishProducts + -0.15342918076573 * S_MntFruits + 0.34453886692852 * 
S_MntGoldProds + -0.02040982310102 * S_MntSweetProducts + 0.02174590740842 * 
S_MonthsAsCustomer + -0.2564742686659 * S_NumDealsPurchases + -0.17669736301302 * 
S_NumWebVisitsMonth + -0.05908565871891 * S_RFMstat + -0.1004598146117 * S_RMntFrq + 
-0.26904490861856 * S_Recency + -0.02193907318371 * S_Teenhome ;
1154658   +   H17  =     0.19136795761974 * S_AcceptedCmpTotal  +    -0.36598513063907 *
1154659   +        S_Age  +    -0.50377462461047 * S_Frq  +     -0.4823937142695 *
1154660   +        S_Income  +     0.24766328423243 * S_Kidhome
1154661   +          +    -0.25095009551816 * S_MntFishProducts
1154662   +          +     0.32862405994166 * S_MntFruits  +     0.13545997285014 *
1154663   +        S_MntGoldProds  +     0.48572798966447 * S_MntSweetProducts
1154664   +          +     0.05495423017724 * S_MonthsAsCustomer
1154665   +          +     0.43616167783834 * S_NumDealsPurchases
1154666   +          +     0.56632988971927 * S_NumWebVisitsMonth
1154667   +          +     0.07176913532762 * S_RFMstat  +     0.09455545385258 *
1154668   +        S_RMntFrq  +    -0.57930962586715 * S_Recency
1154669   +          +     0.37402577765336 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H17 = 0.19136795761974 * S_AcceptedCmpTotal + -0.36598513063907 * S_Age 
+ -0.50377462461047 * S_Frq + -0.4823937142695 * S_Income + 0.24766328423243 * S_Kidhome + 
-0.25095009551816 * S_MntFishProducts + 0.32862405994166 * S_MntFruits + 0.13545997285014 * 
S_MntGoldProds + 0.48572798966447 * S_MntSweetProducts + 0.05495423017724 * S_MonthsAsCustomer 
+ 0.43616167783834 * S_NumDealsPurchases + 0.56632988971927 * S_NumWebVisitsMonth + 
0.07176913532762 * S_RFMstat + 0.09455545385258 * S_RMntFrq + -0.57930962586715 * S_Recency + 
0.37402577765336 * S_Teenhome ;
1154670   +   H11  = H11  +     0.19051470634808 * AcceptedCmp10
1154671   +          +    -0.07216947855434 * AcceptedCmp20  +     0.21737393600184 *
1154672   +        AcceptedCmp30  +     0.21085157726024 * AcceptedCmp40
1154673   +          +    -0.03060343696444 * AcceptedCmp50  +    -0.07251000037685 *
1154674   +        Complain0  +     0.01831009008775 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.19051470634808 * AcceptedCmp10 + -0.07216947855434 * 
AcceptedCmp20 + 0.21737393600184 * AcceptedCmp30 + 0.21085157726024 * AcceptedCmp40 + 
-0.03060343696444 * AcceptedCmp50 + -0.07251000037685 * Complain0 + 0.01831009008775 * 
HigherEducationBinary0 ;
1154675   +   H12  = H12  +    -0.08376219764212 * AcceptedCmp10
1154676   +          +    -0.04318604935285 * AcceptedCmp20  +     0.31686571931406 *
1154677   +        AcceptedCmp30  +    -0.50381802619358 * AcceptedCmp40
1154678   +          +     0.14765895912577 * AcceptedCmp50  +    -0.30891077015908 *
1154679   +        Complain0  +     0.33649437112475 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.08376219764212 * AcceptedCmp10 + -0.04318604935285 * 
AcceptedCmp20 + 0.31686571931406 * AcceptedCmp30 + -0.50381802619358 * AcceptedCmp40 + 
0.14765895912577 * AcceptedCmp50 + -0.30891077015908 * Complain0 + 0.33649437112475 * 
HigherEducationBinary0 ;
1154680   +   H13  = H13  +    -0.26783020607447 * AcceptedCmp10
1154681   +          +     0.00469266575176 * AcceptedCmp20  +     0.17067955604815 *
1154682   +        AcceptedCmp30  +    -0.03800701493644 * AcceptedCmp40
1154683   +          +     0.18664788771851 * AcceptedCmp50  +    -0.58650285377449 *
1154684   +        Complain0  +    -0.35013080380749 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.26783020607447 * AcceptedCmp10 + 0.00469266575176 * 
AcceptedCmp20 + 0.17067955604815 * AcceptedCmp30 + -0.03800701493644 * AcceptedCmp40 + 
0.18664788771851 * AcceptedCmp50 + -0.58650285377449 * Complain0 + -0.35013080380749 * 
HigherEducationBinary0 ;
1154685   +   H14  = H14  +     0.63010904279384 * AcceptedCmp10
1154686   +          +     0.06584826963979 * AcceptedCmp20  +     0.32237915530123 *
1154687   +        AcceptedCmp30  +    -0.04951576144663 * AcceptedCmp40
1154688   +          +     0.61998234297035 * AcceptedCmp50  +     0.00048129839212 *
1154689   +        Complain0  +     -0.1253104829676 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.63010904279384 * AcceptedCmp10 + 0.06584826963979 * 
AcceptedCmp20 + 0.32237915530123 * AcceptedCmp30 + -0.04951576144663 * AcceptedCmp40 + 
0.61998234297035 * AcceptedCmp50 + 0.00048129839212 * Complain0 + -0.1253104829676 * 
HigherEducationBinary0 ;
1154690   +   H15  = H15  +      -0.431361787308 * AcceptedCmp10
1154691   +          +    -0.35444173306347 * AcceptedCmp20  +    -0.29829328632276 *
1154692   +        AcceptedCmp30  +    -0.63891180852982 * AcceptedCmp40
1154693   +          +     0.09112550400968 * AcceptedCmp50  +    -0.55600327682226 *
1154694   +        Complain0  +     0.37327970930193 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + -0.431361787308 * AcceptedCmp10 + -0.35444173306347 * 
AcceptedCmp20 + -0.29829328632276 * AcceptedCmp30 + -0.63891180852982 * AcceptedCmp40 + 
0.09112550400968 * AcceptedCmp50 + -0.55600327682226 * Complain0 + 0.37327970930193 * 
HigherEducationBinary0 ;
1154695   +   H16  = H16  +    -0.10510318083151 * AcceptedCmp10
1154696   +          +     0.20700826755616 * AcceptedCmp20  +     0.34115351197698 *
1154697   +        AcceptedCmp30  +    -0.02186089038242 * AcceptedCmp40
1154698   +          +    -0.22066876509421 * AcceptedCmp50  +    -0.37202379131817 *
1154699   +        Complain0  +     0.14046104192307 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H16 = H16 + -0.10510318083151 * AcceptedCmp10 + 0.20700826755616 * 
AcceptedCmp20 + 0.34115351197698 * AcceptedCmp30 + -0.02186089038242 * AcceptedCmp40 + 
-0.22066876509421 * AcceptedCmp50 + -0.37202379131817 * Complain0 + 0.14046104192307 * 
HigherEducationBinary0 ;
1154700   +   H17  = H17  +    -0.09298124880387 * AcceptedCmp10
1154701   +          +    -0.04743706801693 * AcceptedCmp20  +    -0.44870387587127 *
1154702   +        AcceptedCmp30  +      0.1036296198206 * AcceptedCmp40
1154703   +          +    -0.05138140136888 * AcceptedCmp50  +    -0.19337238268115 *
1154704   +        Complain0  +    -0.21291261409303 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H17 = H17 + -0.09298124880387 * AcceptedCmp10 + -0.04743706801693 * 
AcceptedCmp20 + -0.44870387587127 * AcceptedCmp30 + 0.1036296198206 * AcceptedCmp40 + 
-0.05138140136888 * AcceptedCmp50 + -0.19337238268115 * Complain0 + -0.21291261409303 * 
HigherEducationBinary0 ;
1154705   +   H11  = H11  +    -0.16744529688383 * Education2n_Cycle
1154706   +          +    -0.31425534410414 * EducationBasic  +     0.13292009986312 *
1154707   +        EducationGraduation  +     0.02026218772144 * EducationMaster
1154708   +          +     0.03224080100133 * Marital_StatusDivorced
1154709   +          +     0.29745692653089 * Marital_StatusMarried
1154710   +          +    -0.05710732710843 * Marital_StatusSingle
1154711   +          +     0.27928074465671 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.16744529688383 * Education2n_Cycle + -0.31425534410414 * 
EducationBasic + 0.13292009986312 * EducationGraduation + 0.02026218772144 * EducationMaster + 
0.03224080100133 * Marital_StatusDivorced + 0.29745692653089 * Marital_StatusMarried + 
-0.05710732710843 * Marital_StatusSingle + 0.27928074465671 * Marital_StatusTogether ;
1154712   +   H12  = H12  +    -0.10675016455937 * Education2n_Cycle
1154713   +          +     0.25652819606036 * EducationBasic  +    -0.25732914554257 *
1154714   +        EducationGraduation  +     0.05617204773323 * EducationMaster
1154715   +          +    -0.13213973463809 * Marital_StatusDivorced
1154716   +          +     0.29599134560833 * Marital_StatusMarried
1154717   +          +     -0.2063852486711 * Marital_StatusSingle
1154718   +          +     0.12103657163442 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.10675016455937 * Education2n_Cycle + 0.25652819606036 * 
EducationBasic + -0.25732914554257 * EducationGraduation + 0.05617204773323 * EducationMaster 
+ -0.13213973463809 * Marital_StatusDivorced + 0.29599134560833 * Marital_StatusMarried + 
-0.2063852486711 * Marital_StatusSingle + 0.12103657163442 * Marital_StatusTogether ;
1154719   +   H13  = H13  +     0.16437023455981 * Education2n_Cycle
1154720   +          +    -0.08434195766996 * EducationBasic  +     0.11865174008514 *
1154721   +        EducationGraduation  +    -0.23426651494583 * EducationMaster
1154722   +          +     0.03869842290419 * Marital_StatusDivorced
1154723   +          +     0.02863271652743 * Marital_StatusMarried
1154724   +          +     0.16900197403585 * Marital_StatusSingle
1154725   +          +     -0.4005829242866 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.16437023455981 * Education2n_Cycle + -0.08434195766996 * 
EducationBasic + 0.11865174008514 * EducationGraduation + -0.23426651494583 * EducationMaster 
+ 0.03869842290419 * Marital_StatusDivorced + 0.02863271652743 * Marital_StatusMarried + 
0.16900197403585 * Marital_StatusSingle + -0.4005829242866 * Marital_StatusTogether ;
1154726   +   H14  = H14  +     0.09249210314159 * Education2n_Cycle
1154727   +          +     0.17486481480148 * EducationBasic  +    -0.08188859647689 *
1154728   +        EducationGraduation  +    -0.01246856756087 * EducationMaster
1154729   +          +    -0.07321508189995 * Marital_StatusDivorced
1154730   +          +     0.20555334173771 * Marital_StatusMarried
1154731   +          +     0.21523251628551 * Marital_StatusSingle
1154732   +          +     0.25008985020723 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.09249210314159 * Education2n_Cycle + 0.17486481480148 * 
EducationBasic + -0.08188859647689 * EducationGraduation + -0.01246856756087 * EducationMaster 
+ -0.07321508189995 * Marital_StatusDivorced + 0.20555334173771 * Marital_StatusMarried + 
0.21523251628551 * Marital_StatusSingle + 0.25008985020723 * Marital_StatusTogether ;
1154733   +   H15  = H15  +      0.0559000195465 * Education2n_Cycle
1154734   +          +     0.15755882128532 * EducationBasic  +     0.18728279497378 *
1154735   +        EducationGraduation  +    -0.40523840756533 * EducationMaster
1154736   +          +     0.16221006173823 * Marital_StatusDivorced
1154737   +          +    -0.82194777490073 * Marital_StatusMarried
1154738   +          +     0.85321787917596 * Marital_StatusSingle
1154739   +          +    -0.81385338897521 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.0559000195465 * Education2n_Cycle + 0.15755882128532 * 
EducationBasic + 0.18728279497378 * EducationGraduation + -0.40523840756533 * EducationMaster 
+ 0.16221006173823 * Marital_StatusDivorced + -0.82194777490073 * Marital_StatusMarried + 
0.85321787917596 * Marital_StatusSingle + -0.81385338897521 * Marital_StatusTogether ;
1154740   +   H16  = H16  +    -0.15156841688167 * Education2n_Cycle
1154741   +          +    -0.32052189509613 * EducationBasic  +     0.14814402908721 *
1154742   +        EducationGraduation  +    -0.24180213668326 * EducationMaster
1154743   +          +    -0.01732271619375 * Marital_StatusDivorced
1154744   +          +     0.04513262049576 * Marital_StatusMarried
1154745   +          +    -0.05438203821532 * Marital_StatusSingle
1154746   +          +      0.0759481335775 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H16 = H16 + -0.15156841688167 * Education2n_Cycle + -0.32052189509613 * 
EducationBasic + 0.14814402908721 * EducationGraduation + -0.24180213668326 * EducationMaster 
+ -0.01732271619375 * Marital_StatusDivorced + 0.04513262049576 * Marital_StatusMarried + 
-0.05438203821532 * Marital_StatusSingle + 0.0759481335775 * Marital_StatusTogether ;
1154747   +   H17  = H17  +    -0.18722295224931 * Education2n_Cycle
1154748   +          +      0.3187729862352 * EducationBasic  +     0.22068390790352 *
1154749   +        EducationGraduation  +     0.13877995362513 * EducationMaster
1154750   +          +     0.22623757264973 * Marital_StatusDivorced
1154751   +          +     0.10308007683249 * Marital_StatusMarried
1154752   +          +    -0.07750614215091 * Marital_StatusSingle
1154753   +          +    -0.19333798296202 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H17 = H17 + -0.18722295224931 * Education2n_Cycle + 0.3187729862352 * 
EducationBasic + 0.22068390790352 * EducationGraduation + 0.13877995362513 * EducationMaster + 
0.22623757264973 * Marital_StatusDivorced + 0.10308007683249 * Marital_StatusMarried + 
-0.07750614215091 * Marital_StatusSingle + -0.19333798296202 * Marital_StatusTogether ;
1154754   +   H11  =     1.31496618512526 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 1.31496618512526 + H11 ;
1154755   +   H12  =     0.20245920531192 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.20245920531192 + H12 ;
1154756   +   H13  =     -0.7770501213614 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.7770501213614 + H13 ;
1154757   +   H14  =     0.85602300575727 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 0.85602300575727 + H14 ;
1154758   +   H15  =    -0.15331135041487 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = -0.15331135041487 + H15 ;
1154759   +   H16  =    -0.71412018703209 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = -0.71412018703209 + H16 ;
1154760   +   H17  =    -1.06302431968156 + H17 ;
MPRINT(EM_DIAGRAM):   H17 = -1.06302431968156 + H17 ;
1154761   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1154762   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1154763   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1154764   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1154765   +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
1154766   +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
1154767   +   H17  = TANH(H17 );
MPRINT(EM_DIAGRAM):   H17 = TANH(H17 );
1154768   +END;
MPRINT(EM_DIAGRAM):   END;
1154769   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1154770   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1154771   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1154772   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1154773   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1154774   +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
1154775   +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
1154776   +   H17  = .;
MPRINT(EM_DIAGRAM):   H17 = .;
1154777   +END;
MPRINT(EM_DIAGRAM):   END;
1154778   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1154779   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1154780   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1154781   +
1154782   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1154783   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1154784   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1154785   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1154786   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1154787   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1154788   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1154789   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1154790   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1154791   +end;
MPRINT(EM_DIAGRAM):   end;
1154792   +else do;
MPRINT(EM_DIAGRAM):   else do;
1154793   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1154794   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1154795   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1154796   +   end;
MPRINT(EM_DIAGRAM):   end;
1154797   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1154798   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1154799   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1154800   +   end;
MPRINT(EM_DIAGRAM):   end;
1154801   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1154802   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1154803   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1154804   +   end;
MPRINT(EM_DIAGRAM):   end;
1154805   +end;
MPRINT(EM_DIAGRAM):   end;
1154806   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1154807   +   P_DepVar1  =    -0.11734493117272 * H11  +    -2.70843436735374 * H12
1154808   +          +    -1.82278168298088 * H13  +    -1.84841969324871 * H14
1154809   +          +     2.54735424594008 * H15  +     -0.2050385322443 * H16
1154810   +          +     1.26532821734496 * H17 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.11734493117272 * H11 + -2.70843436735374 * H12 + 
-1.82278168298088 * H13 + -1.84841969324871 * H14 + 2.54735424594008 * H15 + -0.2050385322443 
* H16 + 1.26532821734496 * H17 ;
1154811   +   P_DepVar1  =    -1.65851332548506 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.65851332548506 + P_DepVar1 ;
1154812   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1154813   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1154814   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1154815   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1154816   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1154817   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1154818   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1154819   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1154820   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1154821   +END;
MPRINT(EM_DIAGRAM):   END;
1154822   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1154823   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1154824   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1154825   +END;
MPRINT(EM_DIAGRAM):   END;
1154826   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1154827   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1154828   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1154829   +END;
MPRINT(EM_DIAGRAM):   END;
1154830   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1154831   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1154832   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1154833   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1154834   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1154835   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1154836   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1154837   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1154838   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1154839   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1154840   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1154841   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1154842   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1154843   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1154844   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1154845   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1154846   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1154847   +END;
MPRINT(EM_DIAGRAM):   END;
1154848   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1154849   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1154850   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1154851   +drop
1154852   +H11
1154853   +H12
1154854   +H13
1154855   +H14
1154856   +H15
1154857   +H16
1154858   +H17
1154859   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 H17 ;
1154860   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1154861    run;

NOTE: DATA STEP view saved on file EMWS8.NEURAL36_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.META3_VALIDATE.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1154862    quit;
1154863    filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
1154864    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
1154865    * Neural36: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * Neural36: Computing metadata for TRAIN data;
1154866    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;

NOTE: View EMWS8.NEURAL36_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural36\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS8.Neural36_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS8.Neural36_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS8.Neural36_TRAIN out=WORK.M2GOMPS0 noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2GOMPS0;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20 
INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M2GOMPS0(keep=name type length label format formatl 
formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then format = strip(format)!!strip(put(formatl, 
best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, 
best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then informat = 
strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, 
best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2GOMPS0;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M2GOMPS0;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M0V1Y3PD NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0V1Y3PD;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M0V1Y3PD;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M38JD0IG(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M0V1Y3PD;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0V1Y3PD;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 
FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M0V1Y3PD;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" 
"MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" 
"QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" "YEAR" "YYMMDD" "YYMON" 
"YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" 
"EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) 
formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = 
"DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) 
formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" 
"NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" 
"SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = 
"DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then 
level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 
'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 
'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ 
('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 
'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 
'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0V1Y3PD;
MPRINT(EMADVISECOLUMNS):   set WORK.M0V1Y3PD;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= 
"Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= 
"Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower limit" UPPERLIMIT= 
"Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= 
"Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Meta3_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Meta3_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural36_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT 
LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "Neural36";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("P_DEPVAR1") creator = "Neural36";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR1") creator = "Neural36";
MPRINT(EM_DIAGRAM):   when("P_DEPVAR0") creator = "Neural36";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR0") creator = "Neural36";
MPRINT(EM_DIAGRAM):   when("F_DEPVAR") creator = "Neural36";
MPRINT(EM_DIAGRAM):   when("I_DEPVAR") creator = "Neural36";
MPRINT(EM_DIAGRAM):   when("U_DEPVAR") creator = "Neural36";
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "Neural36";
MPRINT(EM_DIAGRAM):   when("DEPVAR") model = "Neural36";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural36: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
1155178    data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
1155179    set EMWS8.Neural36_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural36_EMINFO;
1155180    where DATA='Neural36' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='Neural36' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 
'MODEL');
1155181    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.NEURAL36_EMINFO.
      WHERE (DATA='Neural36') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1155182    data EMWS8.Neural36_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS8.Neural36_EMINFO;
1155183    length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
1155184    input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
1155185    cards;
MPRINT(EM_DIAGRAM):   cards;

NOTE: The data set EMWS8.NEURAL36_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   run;
1155189    run;
1155190    data EMWS8.Neural36_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural36_EMINFO;
1155191    set EMWS8.Neural36_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural36_EMINFO WORK.MODELTEMP_INFO;
1155192    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.NEURAL36_EMINFO.
NOTE: There were 0 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS8.NEURAL36_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1155193    proc sort data = EMWS8.Neural36_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.Neural36_EMINFO NOTHREADS;
1155194    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
1155195    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.NEURAL36_EMINFO.
NOTE: The data set EMWS8.NEURAL36_EMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1155196    proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
1155197    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
1155198    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set EMWS8.FIMPORT_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 1 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1155199    proc sort data = EMWS8.Neural36_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS8.Neural36_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
1155200    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
1155201    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 3 observations read from the data set EMWS8.NEURAL36_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1155202    data EMWS8.Neural36_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural36_EMINFO;
1155203    merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
1155204    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
1155205    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 3 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS8.NEURAL36_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1155206    proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
1155207    delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
1155208    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
1155209    quit;
MPRINT(EM_DIAGRAM):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

NOTE: View EMWS8.NEURAL36_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
NOTE: View EMWS8.NEURAL36_VALIDATE.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
