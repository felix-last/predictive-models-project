MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "21. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "18.55 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                21. April 2016
Time:                18.55 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O1IP8WE1 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural36\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O1IP8WE1 new;
MPRINT(EM_DIAGRAM):   run;
1137796    data work.outkey;
MPRINT(EM_DIAGRAM):    data work.outkey;
1137797    set EMWS8.Neural36_OUTKEY;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural36_OUTKEY;
1137798    if upcase(ROLE) = 'HIDDEN';
MPRINT(EM_DIAGRAM):   if upcase(ROLE) = 'HIDDEN';
1137799    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 50 observations read from the data set EMWS8.NEURAL36_OUTKEY.
NOTE: The data set WORK.OUTKEY has 7 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1137800    filename emflow
1137800  ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural36\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural36\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural36: Scoring DATA data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1137801    *------------------------------------------------------------*;
1137802    * Neural36: Scoring DATA data;
1137803    *------------------------------------------------------------*;
1137804    data EMWS8.Neural36_TRAIN
1137805    / view=EMWS8.Neural36_TRAIN
1137806    ;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural36_TRAIN / view=EMWS8.Neural36_TRAIN ;
1137807    set EMWS8.Meta3_TRAIN
1137808    ;
MPRINT(EM_DIAGRAM):   set EMWS8.Meta3_TRAIN ;
1137809    %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Neural36\EMFLOWSCORE.sas.
1137810   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1137811   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1137812   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1137813   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1137814   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1137815   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1137816   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1137817   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1137818   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1137819   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1137820   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1137821   +LENGTH _WARN_ $4
1137822   +      F_DepVar  $ 12
1137823   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1137824   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1137825   +
1137826   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1137827   +
1137828   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1137829   +
1137830   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1137831   +
1137832   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1137833   +
1137834   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1137835   +
1137836   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1137837   +
1137838   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1137839   +
1137840   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1137841   +
1137842   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1137843   +
1137844   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1137845   +
1137846   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1137847   +
1137848   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1137849   +
1137850   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1137851   +
1137852   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1137853   +
1137854   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1137855   +
1137856   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1137857   +
1137858   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1137859   +
1137860   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1137861   +
1137862   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1137863   +
1137864   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1137865   +
1137866   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1137867   +
1137868   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1137869   +
1137870   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1137871   +
1137872   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1137873   +
1137874   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1137875   +
1137876   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1137877   +
1137878   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1137879   +
1137880   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1137881   +
1137882   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1137883   +
1137884   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1137885   +
1137886   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1137887   +
1137888   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1137889   +
1137890   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1137891   +
1137892   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1137893   +
1137894   +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
1137895   +
1137896   +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
1137897   +
1137898   +      label H17 = 'Hidden: H1=7' ;
MPRINT(EM_DIAGRAM):   label H17 = 'Hidden: H1=7' ;
1137899   +
1137900   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1137901   +
1137902   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1137903   +
1137904   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1137905   +
1137906   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1137907   +
1137908   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1137909   +
1137910   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1137911   +
1137912   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1137913   +
1137914   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1137915   +
1137916   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1137917   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1137918   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1137919   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1137920   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1137921   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1137922   +end;
MPRINT(EM_DIAGRAM):   end;
1137923   +else do;
MPRINT(EM_DIAGRAM):   else do;
1137924   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1137925   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1137926   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1137927   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1137928   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1137929   +   end;
MPRINT(EM_DIAGRAM):   end;
1137930   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1137931   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1137932   +   end;
MPRINT(EM_DIAGRAM):   end;
1137933   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1137934   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1137935   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1137936   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1137937   +   end;
MPRINT(EM_DIAGRAM):   end;
1137938   +end;
MPRINT(EM_DIAGRAM):   end;
1137939   +
1137940   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1137941   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1137942   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1137943   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1137944   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1137945   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1137946   +end;
MPRINT(EM_DIAGRAM):   end;
1137947   +else do;
MPRINT(EM_DIAGRAM):   else do;
1137948   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1137949   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1137950   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1137951   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1137952   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1137953   +   end;
MPRINT(EM_DIAGRAM):   end;
1137954   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1137955   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1137956   +   end;
MPRINT(EM_DIAGRAM):   end;
1137957   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1137958   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1137959   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1137960   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1137961   +   end;
MPRINT(EM_DIAGRAM):   end;
1137962   +end;
MPRINT(EM_DIAGRAM):   end;
1137963   +
1137964   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1137965   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1137966   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1137967   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1137968   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1137969   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1137970   +end;
MPRINT(EM_DIAGRAM):   end;
1137971   +else do;
MPRINT(EM_DIAGRAM):   else do;
1137972   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1137973   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1137974   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1137975   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1137976   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1137977   +   end;
MPRINT(EM_DIAGRAM):   end;
1137978   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1137979   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1137980   +   end;
MPRINT(EM_DIAGRAM):   end;
1137981   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1137982   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1137983   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1137984   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1137985   +   end;
MPRINT(EM_DIAGRAM):   end;
1137986   +end;
MPRINT(EM_DIAGRAM):   end;
1137987   +
1137988   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1137989   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1137990   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1137991   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1137992   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1137993   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1137994   +end;
MPRINT(EM_DIAGRAM):   end;
1137995   +else do;
MPRINT(EM_DIAGRAM):   else do;
1137996   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1137997   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1137998   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1137999   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1138000   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1138001   +   end;
MPRINT(EM_DIAGRAM):   end;
1138002   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1138003   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1138004   +   end;
MPRINT(EM_DIAGRAM):   end;
1138005   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1138006   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1138007   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1138008   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1138009   +   end;
MPRINT(EM_DIAGRAM):   end;
1138010   +end;
MPRINT(EM_DIAGRAM):   end;
1138011   +
1138012   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1138013   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1138014   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1138015   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1138016   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1138017   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1138018   +end;
MPRINT(EM_DIAGRAM):   end;
1138019   +else do;
MPRINT(EM_DIAGRAM):   else do;
1138020   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1138021   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1138022   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1138023   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1138024   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1138025   +   end;
MPRINT(EM_DIAGRAM):   end;
1138026   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1138027   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1138028   +   end;
MPRINT(EM_DIAGRAM):   end;
1138029   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1138030   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1138031   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1138032   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1138033   +   end;
MPRINT(EM_DIAGRAM):   end;
1138034   +end;
MPRINT(EM_DIAGRAM):   end;
1138035   +
1138036   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1138037   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1138038   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1138039   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1138040   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1138041   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1138042   +end;
MPRINT(EM_DIAGRAM):   end;
1138043   +else do;
MPRINT(EM_DIAGRAM):   else do;
1138044   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1138045   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1138046   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1138047   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1138048   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1138049   +   end;
MPRINT(EM_DIAGRAM):   end;
1138050   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1138051   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1138052   +   end;
MPRINT(EM_DIAGRAM):   end;
1138053   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1138054   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1138055   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1138056   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1138057   +   end;
MPRINT(EM_DIAGRAM):   end;
1138058   +end;
MPRINT(EM_DIAGRAM):   end;
1138059   +
1138060   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1138061   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1138062   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1138063   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1138064   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1138065   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1138066   +end;
MPRINT(EM_DIAGRAM):   end;
1138067   +else do;
MPRINT(EM_DIAGRAM):   else do;
1138068   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1138069   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1138070   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1138071   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1138072   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1138073   +   end;
MPRINT(EM_DIAGRAM):   end;
1138074   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1138075   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1138076   +   end;
MPRINT(EM_DIAGRAM):   end;
1138077   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1138078   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1138079   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1138080   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1138081   +   end;
MPRINT(EM_DIAGRAM):   end;
1138082   +end;
MPRINT(EM_DIAGRAM):   end;
1138083   +
1138084   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1138085   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
1138086   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1138087   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1138088   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1138089   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1138090   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1138091   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1138092   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1138093   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1138094   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1138095   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1138096   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1138097   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1138098   +end;
MPRINT(EM_DIAGRAM):   end;
1138099   +else do;
MPRINT(EM_DIAGRAM):   else do;
1138100   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1138101   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1138102   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1138103   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1138104   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1138105   +   end;
MPRINT(EM_DIAGRAM):   end;
1138106   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1138107   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1138108   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1138109   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1138110   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1138111   +   end;
MPRINT(EM_DIAGRAM):   end;
1138112   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1138113   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1138114   +   end;
MPRINT(EM_DIAGRAM):   end;
1138115   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1138116   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1138117   +   end;
MPRINT(EM_DIAGRAM):   end;
1138118   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1138119   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1138120   +   end;
MPRINT(EM_DIAGRAM):   end;
1138121   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1138122   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1138123   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1138124   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1138125   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1138126   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1138127   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1138128   +   end;
MPRINT(EM_DIAGRAM):   end;
1138129   +end;
MPRINT(EM_DIAGRAM):   end;
1138130   +
1138131   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1138132   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1138133   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
1138134   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1138135   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1138136   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1138137   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1138138   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1138139   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1138140   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1138141   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1138142   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1138143   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1138144   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1138145   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1138146   +end;
MPRINT(EM_DIAGRAM):   end;
1138147   +else do;
MPRINT(EM_DIAGRAM):   else do;
1138148   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1138149   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1138150   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1138151   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1138152   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1138153   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1138154   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1138155   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1138156   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1138157   +         end;
MPRINT(EM_DIAGRAM):   end;
1138158   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1138159   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1138160   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1138161   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1138162   +            end;
MPRINT(EM_DIAGRAM):   end;
1138163   +         end;
MPRINT(EM_DIAGRAM):   end;
1138164   +      end;
MPRINT(EM_DIAGRAM):   end;
1138165   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1138166   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1138167   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1138168   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1138169   +         end;
MPRINT(EM_DIAGRAM):   end;
1138170   +      end;
MPRINT(EM_DIAGRAM):   end;
1138171   +   end;
MPRINT(EM_DIAGRAM):   end;
1138172   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1138173   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1138174   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1138175   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1138176   +      end;
MPRINT(EM_DIAGRAM):   end;
1138177   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1138178   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1138179   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1138180   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1138181   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1138182   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1138183   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1138184   +         end;
MPRINT(EM_DIAGRAM):   end;
1138185   +      end;
MPRINT(EM_DIAGRAM):   end;
1138186   +   end;
MPRINT(EM_DIAGRAM):   end;
1138187   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1138188   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1138189   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1138190   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1138191   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1138192   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1138193   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1138194   +   end;
MPRINT(EM_DIAGRAM):   end;
1138195   +end;
MPRINT(EM_DIAGRAM):   end;
1138196   +
1138197   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1138198   +*** Checking missing input Interval
1138199   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1138200   +
1138201   +IF NMISS(
1138202   +   AcceptedCmpTotal ,
1138203   +   Age ,
1138204   +   Frq ,
1138205   +   Income ,
1138206   +   Kidhome ,
1138207   +   MntFishProducts ,
1138208   +   MntFruits ,
1138209   +   MntGoldProds ,
1138210   +   MntSweetProducts ,
1138211   +   MonthsAsCustomer ,
1138212   +   NumDealsPurchases ,
1138213   +   NumWebVisitsMonth ,
1138214   +   RFMstat ,
1138215   +   RMntFrq ,
1138216   +   Recency ,
1138217   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , 
MntFishProducts , MntFruits , MntGoldProds , MntSweetProducts , MonthsAsCustomer , 
NumDealsPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , Teenhome ) THEN DO;
1138218   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1138219   +
1138220   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1138221   +END;
MPRINT(EM_DIAGRAM):   END;
1138222   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1138223   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1138224   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1138225   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1138226   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1138227   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1138228   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1138229   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1138230   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1138231   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1138232   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1138233   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1138234   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1138235   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1138236   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1138237   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1138238   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1138239   +   S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
1138240   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 * 
MonthsAsCustomer ;
1138241   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1138242   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1138243   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1138244   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1138245   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1138246   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1138247   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1138248   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1138249   +END;
MPRINT(EM_DIAGRAM):   END;
1138250   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1138251   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1138252   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1138253   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1138254   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1138255   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1138256   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1138257   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1138258   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1138259   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1138260   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1138261   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1138262   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1138263   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1138264   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1138265   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1138266   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1138267   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1138268   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1138269   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1138270   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1138271   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1138272   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1138273   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1138274   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1138275   +   ELSE S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
1138276   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 * 
MonthsAsCustomer ;
1138277   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1138278   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1138279   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1138280   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1138281   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1138282   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1138283   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1138284   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1138285   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1138286   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1138287   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1138288   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1138289   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1138290   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1138291   +END;
MPRINT(EM_DIAGRAM):   END;
1138292   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1138293   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1138294   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1138295   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1138296   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1138297   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1138298   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1138299   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1138300   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1138301   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1138302   +   H11  =     0.36110803954855 * S_AcceptedCmpTotal  +     0.13547801674585 *
1138303   +        S_Age  +    -0.24552124555532 * S_Frq  +    -0.11657390188351 *
1138304   +        S_Income  +     0.21841327214328 * S_Kidhome
1138305   +          +    -0.08125755885491 * S_MntFishProducts
1138306   +          +     -0.2705052745123 * S_MntFruits  +     -0.2590576061572 *
1138307   +        S_MntGoldProds  +     0.07459498469538 * S_MntSweetProducts
1138308   +          +     0.21866166218293 * S_MonthsAsCustomer
1138309   +          +    -0.21701762836549 * S_NumDealsPurchases
1138310   +          +     0.07894851045935 * S_NumWebVisitsMonth
1138311   +          +     0.08921612822245 * S_RFMstat  +    -0.02040952914279 *
1138312   +        S_RMntFrq  +     0.15773040296683 * S_Recency
1138313   +          +     0.18795040351393 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.36110803954855 * S_AcceptedCmpTotal + 0.13547801674585 * S_Age + 
-0.24552124555532 * S_Frq + -0.11657390188351 * S_Income + 0.21841327214328 * S_Kidhome + 
-0.08125755885491 * S_MntFishProducts + -0.2705052745123 * S_MntFruits + -0.2590576061572 * 
S_MntGoldProds + 0.07459498469538 * S_MntSweetProducts + 0.21866166218293 * S_MonthsAsCustomer 
+ -0.21701762836549 * S_NumDealsPurchases + 0.07894851045935 * S_NumWebVisitsMonth + 
0.08921612822245 * S_RFMstat + -0.02040952914279 * S_RMntFrq + 0.15773040296683 * S_Recency + 
0.18795040351393 * S_Teenhome ;
1138314   +   H12  =     -0.5016796601689 * S_AcceptedCmpTotal  +     0.02141252121077 *
1138315   +        S_Age  +     0.02533358832525 * S_Frq  +    -0.89656056304793 *
1138316   +        S_Income  +    -0.50741018742107 * S_Kidhome
1138317   +          +     0.11789235500688 * S_MntFishProducts
1138318   +          +    -0.05391257299074 * S_MntFruits  +    -0.43844383398328 *
1138319   +        S_MntGoldProds  +     0.20086516584172 * S_MntSweetProducts
1138320   +          +    -0.12096441889126 * S_MonthsAsCustomer
1138321   +          +    -0.53182967817876 * S_NumDealsPurchases
1138322   +          +    -0.65381646818525 * S_NumWebVisitsMonth
1138323   +          +    -0.29345654851839 * S_RFMstat  +    -0.07284725988025 *
1138324   +        S_RMntFrq  +     0.73417460609275 * S_Recency
1138325   +          +     0.28152108778838 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -0.5016796601689 * S_AcceptedCmpTotal + 0.02141252121077 * S_Age + 
0.02533358832525 * S_Frq + -0.89656056304793 * S_Income + -0.50741018742107 * S_Kidhome + 
0.11789235500688 * S_MntFishProducts + -0.05391257299074 * S_MntFruits + -0.43844383398328 * 
S_MntGoldProds + 0.20086516584172 * S_MntSweetProducts + -0.12096441889126 * 
S_MonthsAsCustomer + -0.53182967817876 * S_NumDealsPurchases + -0.65381646818525 * 
S_NumWebVisitsMonth + -0.29345654851839 * S_RFMstat + -0.07284725988025 * S_RMntFrq + 
0.73417460609275 * S_Recency + 0.28152108778838 * S_Teenhome ;
1138326   +   H13  =    -0.22241318356942 * S_AcceptedCmpTotal  +     0.04664521183033 *
1138327   +        S_Age  +     0.33683339375822 * S_Frq  +    -0.27700440206991 *
1138328   +        S_Income  +     0.59731856577609 * S_Kidhome
1138329   +          +    -0.21417066380485 * S_MntFishProducts
1138330   +          +     0.09462678519727 * S_MntFruits  +     0.33690652154135 *
1138331   +        S_MntGoldProds  +     0.18218751437319 * S_MntSweetProducts
1138332   +          +     0.74506126241168 * S_MonthsAsCustomer
1138333   +          +     -0.0426046522032 * S_NumDealsPurchases
1138334   +          +    -0.28766319294366 * S_NumWebVisitsMonth
1138335   +          +    -0.15001102616419 * S_RFMstat  +      0.0796282932817 *
1138336   +        S_RMntFrq  +     0.82312941262219 * S_Recency
1138337   +          +     0.37834061867339 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = -0.22241318356942 * S_AcceptedCmpTotal + 0.04664521183033 * S_Age 
+ 0.33683339375822 * S_Frq + -0.27700440206991 * S_Income + 0.59731856577609 * S_Kidhome + 
-0.21417066380485 * S_MntFishProducts + 0.09462678519727 * S_MntFruits + 0.33690652154135 * 
S_MntGoldProds + 0.18218751437319 * S_MntSweetProducts + 0.74506126241168 * S_MonthsAsCustomer 
+ -0.0426046522032 * S_NumDealsPurchases + -0.28766319294366 * S_NumWebVisitsMonth + 
-0.15001102616419 * S_RFMstat + 0.0796282932817 * S_RMntFrq + 0.82312941262219 * S_Recency + 
0.37834061867339 * S_Teenhome ;
1138338   +   H14  =    -0.29647151260749 * S_AcceptedCmpTotal  +     0.03875185072729 *
1138339   +        S_Age  +     0.84663314841373 * S_Frq  +     0.08781808788689 *
1138340   +        S_Income  +     0.00520247940824 * S_Kidhome
1138341   +          +    -0.27279099954997 * S_MntFishProducts
1138342   +          +     0.22411346263117 * S_MntFruits  +    -0.22117604499599 *
1138343   +        S_MntGoldProds  +      0.1133354997708 * S_MntSweetProducts
1138344   +          +    -0.03930385119549 * S_MonthsAsCustomer
1138345   +          +    -0.70151263335901 * S_NumDealsPurchases
1138346   +          +     -0.4265994687181 * S_NumWebVisitsMonth
1138347   +          +    -0.15748641435362 * S_RFMstat  +    -0.13078011500878 *
1138348   +        S_RMntFrq  +     0.84719737677288 * S_Recency
1138349   +          +     0.10706817431021 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = -0.29647151260749 * S_AcceptedCmpTotal + 0.03875185072729 * S_Age 
+ 0.84663314841373 * S_Frq + 0.08781808788689 * S_Income + 0.00520247940824 * S_Kidhome + 
-0.27279099954997 * S_MntFishProducts + 0.22411346263117 * S_MntFruits + -0.22117604499599 * 
S_MntGoldProds + 0.1133354997708 * S_MntSweetProducts + -0.03930385119549 * S_MonthsAsCustomer 
+ -0.70151263335901 * S_NumDealsPurchases + -0.4265994687181 * S_NumWebVisitsMonth + 
-0.15748641435362 * S_RFMstat + -0.13078011500878 * S_RMntFrq + 0.84719737677288 * S_Recency + 
0.10706817431021 * S_Teenhome ;
1138350   +   H15  =    -0.07899787590352 * S_AcceptedCmpTotal  +     0.03180708050796 *
1138351   +        S_Age  +     0.48119579482844 * S_Frq  +     0.77894167571758 *
1138352   +        S_Income  +    -0.51766206077271 * S_Kidhome
1138353   +          +    -0.02457049344389 * S_MntFishProducts
1138354   +          +    -0.20172553597691 * S_MntFruits  +    -0.01323073969545 *
1138355   +        S_MntGoldProds  +    -0.04777972579646 * S_MntSweetProducts
1138356   +          +      0.2527325279137 * S_MonthsAsCustomer
1138357   +          +     -0.2042358011289 * S_NumDealsPurchases
1138358   +          +    -0.04239170381036 * S_NumWebVisitsMonth
1138359   +          +     0.02012529381207 * S_RFMstat  +     0.33404529308618 *
1138360   +        S_RMntFrq  +    -0.44724048899839 * S_Recency
1138361   +          +    -0.63180189567132 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H15 = -0.07899787590352 * S_AcceptedCmpTotal + 0.03180708050796 * S_Age 
+ 0.48119579482844 * S_Frq + 0.77894167571758 * S_Income + -0.51766206077271 * S_Kidhome + 
-0.02457049344389 * S_MntFishProducts + -0.20172553597691 * S_MntFruits + -0.01323073969545 * 
S_MntGoldProds + -0.04777972579646 * S_MntSweetProducts + 0.2527325279137 * S_MonthsAsCustomer 
+ -0.2042358011289 * S_NumDealsPurchases + -0.04239170381036 * S_NumWebVisitsMonth + 
0.02012529381207 * S_RFMstat + 0.33404529308618 * S_RMntFrq + -0.44724048899839 * S_Recency + 
-0.63180189567132 * S_Teenhome ;
1138362   +   H16  =      -0.383410328703 * S_AcceptedCmpTotal  +     0.11015036032707 *
1138363   +        S_Age  +    -0.17603849696268 * S_Frq  +    -0.00482417497586 *
1138364   +        S_Income  +     0.02703524116788 * S_Kidhome
1138365   +          +      0.3032492052643 * S_MntFishProducts
1138366   +          +    -0.15404208571625 * S_MntFruits  +     0.34380561605192 *
1138367   +        S_MntGoldProds  +    -0.01993566560895 * S_MntSweetProducts
1138368   +          +     0.02239066904537 * S_MonthsAsCustomer
1138369   +          +    -0.25672377994849 * S_NumDealsPurchases
1138370   +          +    -0.17631825911607 * S_NumWebVisitsMonth
1138371   +          +    -0.05766944902387 * S_RFMstat  +    -0.10123742631192 *
1138372   +        S_RMntFrq  +    -0.27017097846466 * S_Recency
1138373   +          +    -0.02255470439449 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H16 = -0.383410328703 * S_AcceptedCmpTotal + 0.11015036032707 * S_Age + 
-0.17603849696268 * S_Frq + -0.00482417497586 * S_Income + 0.02703524116788 * S_Kidhome + 
0.3032492052643 * S_MntFishProducts + -0.15404208571625 * S_MntFruits + 0.34380561605192 * 
S_MntGoldProds + -0.01993566560895 * S_MntSweetProducts + 0.02239066904537 * 
S_MonthsAsCustomer + -0.25672377994849 * S_NumDealsPurchases + -0.17631825911607 * 
S_NumWebVisitsMonth + -0.05766944902387 * S_RFMstat + -0.10123742631192 * S_RMntFrq + 
-0.27017097846466 * S_Recency + -0.02255470439449 * S_Teenhome ;
1138374   +   H17  =     0.19026773905324 * S_AcceptedCmpTotal  +    -0.36595652460169 *
1138375   +        S_Age  +    -0.50203116840269 * S_Frq  +    -0.48148272876868 *
1138376   +        S_Income  +     0.24269117164704 * S_Kidhome
1138377   +          +    -0.25280027660497 * S_MntFishProducts
1138378   +          +     0.32817616458642 * S_MntFruits  +      0.1314087142667 *
1138379   +        S_MntGoldProds  +     0.48501628960615 * S_MntSweetProducts
1138380   +          +     0.05844462803784 * S_MonthsAsCustomer
1138381   +          +     0.44050031660904 * S_NumDealsPurchases
1138382   +          +     0.56802299610748 * S_NumWebVisitsMonth
1138383   +          +     0.07111036873206 * S_RFMstat  +     0.09513487392921 *
1138384   +        S_RMntFrq  +    -0.57895917541133 * S_Recency
1138385   +          +      0.3784306430786 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H17 = 0.19026773905324 * S_AcceptedCmpTotal + -0.36595652460169 * S_Age 
+ -0.50203116840269 * S_Frq + -0.48148272876868 * S_Income + 0.24269117164704 * S_Kidhome + 
-0.25280027660497 * S_MntFishProducts + 0.32817616458642 * S_MntFruits + 0.1314087142667 * 
S_MntGoldProds + 0.48501628960615 * S_MntSweetProducts + 0.05844462803784 * S_MonthsAsCustomer 
+ 0.44050031660904 * S_NumDealsPurchases + 0.56802299610748 * S_NumWebVisitsMonth + 
0.07111036873206 * S_RFMstat + 0.09513487392921 * S_RMntFrq + -0.57895917541133 * S_Recency + 
0.3784306430786 * S_Teenhome ;
1138386   +   H11  = H11  +     0.19053470959518 * AcceptedCmp10
1138387   +          +    -0.07214096695579 * AcceptedCmp20  +     0.21734632286308 *
1138388   +        AcceptedCmp30  +     0.21104454807694 * AcceptedCmp40
1138389   +          +    -0.03042840763045 * AcceptedCmp50  +    -0.07248819948399 *
1138390   +        Complain0  +     0.01807512537676 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.19053470959518 * AcceptedCmp10 + -0.07214096695579 * 
AcceptedCmp20 + 0.21734632286308 * AcceptedCmp30 + 0.21104454807694 * AcceptedCmp40 + 
-0.03042840763045 * AcceptedCmp50 + -0.07248819948399 * Complain0 + 0.01807512537676 * 
HigherEducationBinary0 ;
1138391   +   H12  = H12  +    -0.08643027844399 * AcceptedCmp10
1138392   +          +    -0.04690429005463 * AcceptedCmp20  +     0.31198784964773 *
1138393   +        AcceptedCmp30  +    -0.49945004903212 * AcceptedCmp40
1138394   +          +     0.13835872835723 * AcceptedCmp50  +    -0.31088531623779 *
1138395   +        Complain0  +      0.3349555407628 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.08643027844399 * AcceptedCmp10 + -0.04690429005463 * 
AcceptedCmp20 + 0.31198784964773 * AcceptedCmp30 + -0.49945004903212 * AcceptedCmp40 + 
0.13835872835723 * AcceptedCmp50 + -0.31088531623779 * Complain0 + 0.3349555407628 * 
HigherEducationBinary0 ;
1138396   +   H13  = H13  +    -0.26820236609158 * AcceptedCmp10
1138397   +          +     0.00448855360376 * AcceptedCmp20  +     0.16944645736856 *
1138398   +        AcceptedCmp30  +    -0.04005549221867 * AcceptedCmp40
1138399   +          +      0.1910208977492 * AcceptedCmp50  +    -0.58683723735432 *
1138400   +        Complain0  +    -0.35128851625292 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.26820236609158 * AcceptedCmp10 + 0.00448855360376 * 
AcceptedCmp20 + 0.16944645736856 * AcceptedCmp30 + -0.04005549221867 * AcceptedCmp40 + 
0.1910208977492 * AcceptedCmp50 + -0.58683723735432 * Complain0 + -0.35128851625292 * 
HigherEducationBinary0 ;
1138401   +   H14  = H14  +     0.62785274077618 * AcceptedCmp10
1138402   +          +      0.0693722948195 * AcceptedCmp20  +     0.32529417239013 *
1138403   +        AcceptedCmp30  +    -0.04192585494202 * AcceptedCmp40
1138404   +          +     0.61511047277682 * AcceptedCmp50  +     0.00175862626358 *
1138405   +        Complain0  +     -0.1307616855525 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.62785274077618 * AcceptedCmp10 + 0.0693722948195 * 
AcceptedCmp20 + 0.32529417239013 * AcceptedCmp30 + -0.04192585494202 * AcceptedCmp40 + 
0.61511047277682 * AcceptedCmp50 + 0.00175862626358 * Complain0 + -0.1307616855525 * 
HigherEducationBinary0 ;
1138406   +   H15  = H15  +    -0.43561963745277 * AcceptedCmp10
1138407   +          +    -0.35461269691767 * AcceptedCmp20  +    -0.30302138803147 *
1138408   +        AcceptedCmp30  +    -0.63665313118921 * AcceptedCmp40
1138409   +          +     0.08104592597156 * AcceptedCmp50  +    -0.56003108172887 *
1138410   +        Complain0  +     0.37695623750728 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + -0.43561963745277 * AcceptedCmp10 + -0.35461269691767 * 
AcceptedCmp20 + -0.30302138803147 * AcceptedCmp30 + -0.63665313118921 * AcceptedCmp40 + 
0.08104592597156 * AcceptedCmp50 + -0.56003108172887 * Complain0 + 0.37695623750728 * 
HigherEducationBinary0 ;
1138411   +   H16  = H16  +    -0.10473893768031 * AcceptedCmp10
1138412   +          +     0.20741912244959 * AcceptedCmp20  +     0.34161448957673 *
1138413   +        AcceptedCmp30  +    -0.02143448305541 * AcceptedCmp40
1138414   +          +     -0.2199415295718 * AcceptedCmp50  +    -0.37163650635155 *
1138415   +        Complain0  +     0.13984739049701 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H16 = H16 + -0.10473893768031 * AcceptedCmp10 + 0.20741912244959 * 
AcceptedCmp20 + 0.34161448957673 * AcceptedCmp30 + -0.02143448305541 * AcceptedCmp40 + 
-0.2199415295718 * AcceptedCmp50 + -0.37163650635155 * Complain0 + 0.13984739049701 * 
HigherEducationBinary0 ;
1138416   +   H17  = H17  +    -0.09370093055173 * AcceptedCmp10
1138417   +          +    -0.04918758410641 * AcceptedCmp20  +    -0.44974584575411 *
1138418   +        AcceptedCmp30  +     0.10464992854985 * AcceptedCmp40
1138419   +          +    -0.05182980556199 * AcceptedCmp50  +    -0.19323882957787 *
1138420   +        Complain0  +    -0.21093860578303 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H17 = H17 + -0.09370093055173 * AcceptedCmp10 + -0.04918758410641 * 
AcceptedCmp20 + -0.44974584575411 * AcceptedCmp30 + 0.10464992854985 * AcceptedCmp40 + 
-0.05182980556199 * AcceptedCmp50 + -0.19323882957787 * Complain0 + -0.21093860578303 * 
HigherEducationBinary0 ;
1138421   +   H11  = H11  +    -0.16742393784366 * Education2n_Cycle
1138422   +          +    -0.31414461011734 * EducationBasic  +     0.13322773160329 *
1138423   +        EducationGraduation  +     0.02044133367016 * EducationMaster
1138424   +          +     0.03218438391868 * Marital_StatusDivorced
1138425   +          +     0.29740201431648 * Marital_StatusMarried
1138426   +          +    -0.05711320105182 * Marital_StatusSingle
1138427   +          +     0.27921996089325 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.16742393784366 * Education2n_Cycle + -0.31414461011734 * 
EducationBasic + 0.13322773160329 * EducationGraduation + 0.02044133367016 * EducationMaster + 
0.03218438391868 * Marital_StatusDivorced + 0.29740201431648 * Marital_StatusMarried + 
-0.05711320105182 * Marital_StatusSingle + 0.27921996089325 * Marital_StatusTogether ;
1138428   +   H12  = H12  +    -0.10551122009757 * Education2n_Cycle
1138429   +          +     0.25967552558213 * EducationBasic  +    -0.25379946081258 *
1138430   +        EducationGraduation  +     0.06172711985252 * EducationMaster
1138431   +          +    -0.13485953864883 * Marital_StatusDivorced
1138432   +          +     0.29585621396014 * Marital_StatusMarried
1138433   +          +    -0.21062396510776 * Marital_StatusSingle
1138434   +          +     0.12581779616426 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.10551122009757 * Education2n_Cycle + 0.25967552558213 * 
EducationBasic + -0.25379946081258 * EducationGraduation + 0.06172711985252 * EducationMaster 
+ -0.13485953864883 * Marital_StatusDivorced + 0.29585621396014 * Marital_StatusMarried + 
-0.21062396510776 * Marital_StatusSingle + 0.12581779616426 * Marital_StatusTogether ;
1138435   +   H13  = H13  +     0.16376652881662 * Education2n_Cycle
1138436   +          +    -0.08434665843847 * EducationBasic  +      0.1195595163399 *
1138437   +        EducationGraduation  +    -0.23477707229079 * EducationMaster
1138438   +          +     0.03739211492109 * Marital_StatusDivorced
1138439   +          +     0.02254393538602 * Marital_StatusMarried
1138440   +          +     0.17136006383242 * Marital_StatusSingle
1138441   +          +    -0.40488263187974 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.16376652881662 * Education2n_Cycle + -0.08434665843847 * 
EducationBasic + 0.1195595163399 * EducationGraduation + -0.23477707229079 * EducationMaster + 
0.03739211492109 * Marital_StatusDivorced + 0.02254393538602 * Marital_StatusMarried + 
0.17136006383242 * Marital_StatusSingle + -0.40488263187974 * Marital_StatusTogether ;
1138442   +   H14  = H14  +     0.08980489161782 * Education2n_Cycle
1138443   +          +     0.17398317663845 * EducationBasic  +    -0.08201462711728 *
1138444   +        EducationGraduation  +    -0.01140342790221 * EducationMaster
1138445   +          +    -0.07451351408309 * Marital_StatusDivorced
1138446   +          +      0.2029630348745 * Marital_StatusMarried
1138447   +          +     0.21447602869795 * Marital_StatusSingle
1138448   +          +     0.24985218402946 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.08980489161782 * Education2n_Cycle + 0.17398317663845 * 
EducationBasic + -0.08201462711728 * EducationGraduation + -0.01140342790221 * EducationMaster 
+ -0.07451351408309 * Marital_StatusDivorced + 0.2029630348745 * Marital_StatusMarried + 
0.21447602869795 * Marital_StatusSingle + 0.24985218402946 * Marital_StatusTogether ;
1138449   +   H15  = H15  +     0.05571864694522 * Education2n_Cycle
1138450   +          +     0.15599348383381 * EducationBasic  +     0.18446892396738 *
1138451   +        EducationGraduation  +    -0.40873344898593 * EducationMaster
1138452   +          +     0.16093771775144 * Marital_StatusDivorced
1138453   +          +    -0.81694058036214 * Marital_StatusMarried
1138454   +          +     0.85329100663689 * Marital_StatusSingle
1138455   +          +    -0.81086593091247 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.05571864694522 * Education2n_Cycle + 0.15599348383381 * 
EducationBasic + 0.18446892396738 * EducationGraduation + -0.40873344898593 * EducationMaster 
+ 0.16093771775144 * Marital_StatusDivorced + -0.81694058036214 * Marital_StatusMarried + 
0.85329100663689 * Marital_StatusSingle + -0.81086593091247 * Marital_StatusTogether ;
1138456   +   H16  = H16  +    -0.15186411904751 * Education2n_Cycle
1138457   +          +    -0.32073478970843 * EducationBasic  +     0.14834928320728 *
1138458   +        EducationGraduation  +     -0.2421067497959 * EducationMaster
1138459   +          +    -0.01714918488371 * Marital_StatusDivorced
1138460   +          +     0.04552206929478 * Marital_StatusMarried
1138461   +          +    -0.05463276154515 * Marital_StatusSingle
1138462   +          +     0.07591432748361 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H16 = H16 + -0.15186411904751 * Education2n_Cycle + -0.32073478970843 * 
EducationBasic + 0.14834928320728 * EducationGraduation + -0.2421067497959 * EducationMaster + 
-0.01714918488371 * Marital_StatusDivorced + 0.04552206929478 * Marital_StatusMarried + 
-0.05463276154515 * Marital_StatusSingle + 0.07591432748361 * Marital_StatusTogether ;
1138463   +   H17  = H17  +     -0.1856786144352 * Education2n_Cycle
1138464   +          +     0.31836662672474 * EducationBasic  +     0.21999227529727 *
1138465   +        EducationGraduation  +     0.13896310567103 * EducationMaster
1138466   +          +     0.22629171286765 * Marital_StatusDivorced
1138467   +          +     0.10716741132649 * Marital_StatusMarried
1138468   +          +    -0.07811411689056 * Marital_StatusSingle
1138469   +          +    -0.19403139012242 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H17 = H17 + -0.1856786144352 * Education2n_Cycle + 0.31836662672474 * 
EducationBasic + 0.21999227529727 * EducationGraduation + 0.13896310567103 * EducationMaster + 
0.22629171286765 * Marital_StatusDivorced + 0.10716741132649 * Marital_StatusMarried + 
-0.07811411689056 * Marital_StatusSingle + -0.19403139012242 * Marital_StatusTogether ;
1138470   +   H11  =     1.31498645608645 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 1.31498645608645 + H11 ;
1138471   +   H12  =     0.20013197362598 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.20013197362598 + H12 ;
1138472   +   H13  =    -0.77650087384368 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.77650087384368 + H13 ;
1138473   +   H14  =     0.85810948448782 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 0.85810948448782 + H14 ;
1138474   +   H15  =     -0.1569386020503 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = -0.1569386020503 + H15 ;
1138475   +   H16  =     -0.7137060746003 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = -0.7137060746003 + H16 ;
1138476   +   H17  =    -1.06403256916825 + H17 ;
MPRINT(EM_DIAGRAM):   H17 = -1.06403256916825 + H17 ;
1138477   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1138478   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1138479   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1138480   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1138481   +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
1138482   +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
1138483   +   H17  = TANH(H17 );
MPRINT(EM_DIAGRAM):   H17 = TANH(H17 );
1138484   +END;
MPRINT(EM_DIAGRAM):   END;
1138485   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1138486   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1138487   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1138488   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1138489   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1138490   +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
1138491   +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
1138492   +   H17  = .;
MPRINT(EM_DIAGRAM):   H17 = .;
1138493   +END;
MPRINT(EM_DIAGRAM):   END;
1138494   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1138495   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1138496   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1138497   +
1138498   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1138499   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1138500   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1138501   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1138502   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1138503   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1138504   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1138505   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1138506   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1138507   +end;
MPRINT(EM_DIAGRAM):   end;
1138508   +else do;
MPRINT(EM_DIAGRAM):   else do;
1138509   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1138510   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1138511   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1138512   +   end;
MPRINT(EM_DIAGRAM):   end;
1138513   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1138514   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1138515   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1138516   +   end;
MPRINT(EM_DIAGRAM):   end;
1138517   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1138518   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1138519   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1138520   +   end;
MPRINT(EM_DIAGRAM):   end;
1138521   +end;
MPRINT(EM_DIAGRAM):   end;
1138522   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1138523   +   P_DepVar1  =    -0.12091629032846 * H11  +     -2.7057572850547 * H12
1138524   +          +    -1.82036433923679 * H13  +    -1.84943401889148 * H14
1138525   +          +      2.5473822826307 * H15  +    -0.20625314344181 * H16
1138526   +          +     1.26998332460819 * H17 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.12091629032846 * H11 + -2.7057572850547 * H12 + 
-1.82036433923679 * H13 + -1.84943401889148 * H14 + 2.5473822826307 * H15 + -0.20625314344181 
* H16 + 1.26998332460819 * H17 ;
1138527   +   P_DepVar1  =    -1.65872808052338 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.65872808052338 + P_DepVar1 ;
1138528   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1138529   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1138530   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1138531   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1138532   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1138533   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1138534   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1138535   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1138536   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1138537   +END;
MPRINT(EM_DIAGRAM):   END;
1138538   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1138539   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1138540   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1138541   +END;
MPRINT(EM_DIAGRAM):   END;
1138542   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1138543   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1138544   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1138545   +END;
MPRINT(EM_DIAGRAM):   END;
1138546   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1138547   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1138548   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1138549   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1138550   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1138551   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1138552   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1138553   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1138554   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1138555   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1138556   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1138557   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1138558   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1138559   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1138560   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1138561   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1138562   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1138563   +END;
MPRINT(EM_DIAGRAM):   END;
1138564   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1138565   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1138566   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1138567   +drop
1138568   +H11
1138569   +H12
1138570   +H13
1138571   +H14
1138572   +H15
1138573   +H16
1138574   +H17
1138575   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 H17 ;
1138576   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1138577    run;

NOTE: DATA STEP view saved on file EMWS8.NEURAL36_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.META3_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1138578    quit;
1138579    filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
1138580    filename emflow
1138580  ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural36\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural36\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural36: Scoring VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1138581    *------------------------------------------------------------*;
1138582    * Neural36: Scoring VALIDATE data;
1138583    *------------------------------------------------------------*;
1138584    data EMWS8.Neural36_VALIDATE
1138585    / view=EMWS8.Neural36_VALIDATE
1138586    ;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural36_VALIDATE / view=EMWS8.Neural36_VALIDATE ;
1138587    set EMWS8.Meta3_VALIDATE
1138588    ;
MPRINT(EM_DIAGRAM):   set EMWS8.Meta3_VALIDATE ;
1138589    %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Neural36\EMFLOWSCORE.sas.
1138590   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1138591   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1138592   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1138593   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1138594   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1138595   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1138596   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1138597   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1138598   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1138599   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1138600   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1138601   +LENGTH _WARN_ $4
1138602   +      F_DepVar  $ 12
1138603   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1138604   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1138605   +
1138606   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1138607   +
1138608   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1138609   +
1138610   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1138611   +
1138612   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1138613   +
1138614   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1138615   +
1138616   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1138617   +
1138618   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1138619   +
1138620   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1138621   +
1138622   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1138623   +
1138624   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1138625   +
1138626   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1138627   +
1138628   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1138629   +
1138630   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1138631   +
1138632   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1138633   +
1138634   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1138635   +
1138636   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1138637   +
1138638   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1138639   +
1138640   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1138641   +
1138642   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1138643   +
1138644   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1138645   +
1138646   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1138647   +
1138648   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1138649   +
1138650   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1138651   +
1138652   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1138653   +
1138654   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1138655   +
1138656   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1138657   +
1138658   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1138659   +
1138660   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1138661   +
1138662   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1138663   +
1138664   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1138665   +
1138666   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1138667   +
1138668   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1138669   +
1138670   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1138671   +
1138672   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1138673   +
1138674   +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
1138675   +
1138676   +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
1138677   +
1138678   +      label H17 = 'Hidden: H1=7' ;
MPRINT(EM_DIAGRAM):   label H17 = 'Hidden: H1=7' ;
1138679   +
1138680   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1138681   +
1138682   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1138683   +
1138684   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1138685   +
1138686   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1138687   +
1138688   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1138689   +
1138690   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1138691   +
1138692   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1138693   +
1138694   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1138695   +
1138696   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1138697   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1138698   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1138699   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1138700   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1138701   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1138702   +end;
MPRINT(EM_DIAGRAM):   end;
1138703   +else do;
MPRINT(EM_DIAGRAM):   else do;
1138704   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1138705   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1138706   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1138707   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1138708   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1138709   +   end;
MPRINT(EM_DIAGRAM):   end;
1138710   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1138711   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1138712   +   end;
MPRINT(EM_DIAGRAM):   end;
1138713   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1138714   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1138715   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1138716   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1138717   +   end;
MPRINT(EM_DIAGRAM):   end;
1138718   +end;
MPRINT(EM_DIAGRAM):   end;
1138719   +
1138720   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1138721   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1138722   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1138723   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1138724   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1138725   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1138726   +end;
MPRINT(EM_DIAGRAM):   end;
1138727   +else do;
MPRINT(EM_DIAGRAM):   else do;
1138728   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1138729   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1138730   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1138731   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1138732   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1138733   +   end;
MPRINT(EM_DIAGRAM):   end;
1138734   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1138735   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1138736   +   end;
MPRINT(EM_DIAGRAM):   end;
1138737   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1138738   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1138739   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1138740   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1138741   +   end;
MPRINT(EM_DIAGRAM):   end;
1138742   +end;
MPRINT(EM_DIAGRAM):   end;
1138743   +
1138744   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1138745   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1138746   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1138747   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1138748   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1138749   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1138750   +end;
MPRINT(EM_DIAGRAM):   end;
1138751   +else do;
MPRINT(EM_DIAGRAM):   else do;
1138752   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1138753   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1138754   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1138755   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1138756   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1138757   +   end;
MPRINT(EM_DIAGRAM):   end;
1138758   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1138759   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1138760   +   end;
MPRINT(EM_DIAGRAM):   end;
1138761   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1138762   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1138763   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1138764   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1138765   +   end;
MPRINT(EM_DIAGRAM):   end;
1138766   +end;
MPRINT(EM_DIAGRAM):   end;
1138767   +
1138768   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1138769   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1138770   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1138771   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1138772   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1138773   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1138774   +end;
MPRINT(EM_DIAGRAM):   end;
1138775   +else do;
MPRINT(EM_DIAGRAM):   else do;
1138776   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1138777   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1138778   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1138779   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1138780   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1138781   +   end;
MPRINT(EM_DIAGRAM):   end;
1138782   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1138783   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1138784   +   end;
MPRINT(EM_DIAGRAM):   end;
1138785   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1138786   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1138787   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1138788   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1138789   +   end;
MPRINT(EM_DIAGRAM):   end;
1138790   +end;
MPRINT(EM_DIAGRAM):   end;
1138791   +
1138792   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1138793   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1138794   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1138795   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1138796   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1138797   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1138798   +end;
MPRINT(EM_DIAGRAM):   end;
1138799   +else do;
MPRINT(EM_DIAGRAM):   else do;
1138800   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1138801   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1138802   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1138803   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1138804   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1138805   +   end;
MPRINT(EM_DIAGRAM):   end;
1138806   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1138807   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1138808   +   end;
MPRINT(EM_DIAGRAM):   end;
1138809   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1138810   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1138811   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1138812   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1138813   +   end;
MPRINT(EM_DIAGRAM):   end;
1138814   +end;
MPRINT(EM_DIAGRAM):   end;
1138815   +
1138816   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1138817   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1138818   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1138819   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1138820   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1138821   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1138822   +end;
MPRINT(EM_DIAGRAM):   end;
1138823   +else do;
MPRINT(EM_DIAGRAM):   else do;
1138824   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1138825   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1138826   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1138827   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1138828   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1138829   +   end;
MPRINT(EM_DIAGRAM):   end;
1138830   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1138831   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1138832   +   end;
MPRINT(EM_DIAGRAM):   end;
1138833   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1138834   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1138835   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1138836   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1138837   +   end;
MPRINT(EM_DIAGRAM):   end;
1138838   +end;
MPRINT(EM_DIAGRAM):   end;
1138839   +
1138840   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1138841   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1138842   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1138843   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1138844   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1138845   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1138846   +end;
MPRINT(EM_DIAGRAM):   end;
1138847   +else do;
MPRINT(EM_DIAGRAM):   else do;
1138848   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1138849   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1138850   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1138851   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1138852   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1138853   +   end;
MPRINT(EM_DIAGRAM):   end;
1138854   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1138855   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1138856   +   end;
MPRINT(EM_DIAGRAM):   end;
1138857   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1138858   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1138859   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1138860   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1138861   +   end;
MPRINT(EM_DIAGRAM):   end;
1138862   +end;
MPRINT(EM_DIAGRAM):   end;
1138863   +
1138864   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1138865   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
1138866   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1138867   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1138868   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1138869   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1138870   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1138871   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1138872   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1138873   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1138874   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1138875   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1138876   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1138877   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1138878   +end;
MPRINT(EM_DIAGRAM):   end;
1138879   +else do;
MPRINT(EM_DIAGRAM):   else do;
1138880   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1138881   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1138882   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1138883   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1138884   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1138885   +   end;
MPRINT(EM_DIAGRAM):   end;
1138886   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1138887   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1138888   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1138889   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1138890   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1138891   +   end;
MPRINT(EM_DIAGRAM):   end;
1138892   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1138893   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1138894   +   end;
MPRINT(EM_DIAGRAM):   end;
1138895   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1138896   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1138897   +   end;
MPRINT(EM_DIAGRAM):   end;
1138898   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1138899   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1138900   +   end;
MPRINT(EM_DIAGRAM):   end;
1138901   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1138902   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1138903   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1138904   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1138905   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1138906   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1138907   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1138908   +   end;
MPRINT(EM_DIAGRAM):   end;
1138909   +end;
MPRINT(EM_DIAGRAM):   end;
1138910   +
1138911   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1138912   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1138913   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
1138914   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1138915   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1138916   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1138917   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1138918   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1138919   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1138920   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1138921   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1138922   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1138923   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1138924   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1138925   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1138926   +end;
MPRINT(EM_DIAGRAM):   end;
1138927   +else do;
MPRINT(EM_DIAGRAM):   else do;
1138928   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1138929   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1138930   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1138931   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1138932   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1138933   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1138934   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1138935   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1138936   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1138937   +         end;
MPRINT(EM_DIAGRAM):   end;
1138938   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1138939   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1138940   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1138941   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1138942   +            end;
MPRINT(EM_DIAGRAM):   end;
1138943   +         end;
MPRINT(EM_DIAGRAM):   end;
1138944   +      end;
MPRINT(EM_DIAGRAM):   end;
1138945   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1138946   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1138947   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1138948   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1138949   +         end;
MPRINT(EM_DIAGRAM):   end;
1138950   +      end;
MPRINT(EM_DIAGRAM):   end;
1138951   +   end;
MPRINT(EM_DIAGRAM):   end;
1138952   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1138953   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1138954   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1138955   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1138956   +      end;
MPRINT(EM_DIAGRAM):   end;
1138957   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1138958   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1138959   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1138960   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1138961   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1138962   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1138963   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1138964   +         end;
MPRINT(EM_DIAGRAM):   end;
1138965   +      end;
MPRINT(EM_DIAGRAM):   end;
1138966   +   end;
MPRINT(EM_DIAGRAM):   end;
1138967   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1138968   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1138969   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1138970   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1138971   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1138972   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1138973   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1138974   +   end;
MPRINT(EM_DIAGRAM):   end;
1138975   +end;
MPRINT(EM_DIAGRAM):   end;
1138976   +
1138977   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1138978   +*** Checking missing input Interval
1138979   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1138980   +
1138981   +IF NMISS(
1138982   +   AcceptedCmpTotal ,
1138983   +   Age ,
1138984   +   Frq ,
1138985   +   Income ,
1138986   +   Kidhome ,
1138987   +   MntFishProducts ,
1138988   +   MntFruits ,
1138989   +   MntGoldProds ,
1138990   +   MntSweetProducts ,
1138991   +   MonthsAsCustomer ,
1138992   +   NumDealsPurchases ,
1138993   +   NumWebVisitsMonth ,
1138994   +   RFMstat ,
1138995   +   RMntFrq ,
1138996   +   Recency ,
1138997   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , 
MntFishProducts , MntFruits , MntGoldProds , MntSweetProducts , MonthsAsCustomer , 
NumDealsPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , Teenhome ) THEN DO;
1138998   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1138999   +
1139000   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1139001   +END;
MPRINT(EM_DIAGRAM):   END;
1139002   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1139003   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1139004   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1139005   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1139006   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1139007   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1139008   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1139009   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1139010   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1139011   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1139012   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1139013   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1139014   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1139015   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1139016   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1139017   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1139018   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1139019   +   S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
1139020   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 * 
MonthsAsCustomer ;
1139021   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1139022   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1139023   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1139024   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1139025   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1139026   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1139027   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1139028   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1139029   +END;
MPRINT(EM_DIAGRAM):   END;
1139030   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1139031   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1139032   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1139033   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1139034   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1139035   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1139036   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1139037   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1139038   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1139039   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1139040   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1139041   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1139042   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1139043   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1139044   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1139045   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1139046   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1139047   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1139048   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1139049   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1139050   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1139051   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1139052   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1139053   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1139054   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1139055   +   ELSE S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
1139056   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 * 
MonthsAsCustomer ;
1139057   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1139058   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1139059   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1139060   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1139061   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1139062   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1139063   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1139064   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1139065   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1139066   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1139067   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1139068   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1139069   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1139070   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1139071   +END;
MPRINT(EM_DIAGRAM):   END;
1139072   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1139073   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1139074   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1139075   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1139076   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1139077   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1139078   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1139079   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1139080   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1139081   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1139082   +   H11  =     0.36110803954855 * S_AcceptedCmpTotal  +     0.13547801674585 *
1139083   +        S_Age  +    -0.24552124555532 * S_Frq  +    -0.11657390188351 *
1139084   +        S_Income  +     0.21841327214328 * S_Kidhome
1139085   +          +    -0.08125755885491 * S_MntFishProducts
1139086   +          +     -0.2705052745123 * S_MntFruits  +     -0.2590576061572 *
1139087   +        S_MntGoldProds  +     0.07459498469538 * S_MntSweetProducts
1139088   +          +     0.21866166218293 * S_MonthsAsCustomer
1139089   +          +    -0.21701762836549 * S_NumDealsPurchases
1139090   +          +     0.07894851045935 * S_NumWebVisitsMonth
1139091   +          +     0.08921612822245 * S_RFMstat  +    -0.02040952914279 *
1139092   +        S_RMntFrq  +     0.15773040296683 * S_Recency
1139093   +          +     0.18795040351393 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.36110803954855 * S_AcceptedCmpTotal + 0.13547801674585 * S_Age + 
-0.24552124555532 * S_Frq + -0.11657390188351 * S_Income + 0.21841327214328 * S_Kidhome + 
-0.08125755885491 * S_MntFishProducts + -0.2705052745123 * S_MntFruits + -0.2590576061572 * 
S_MntGoldProds + 0.07459498469538 * S_MntSweetProducts + 0.21866166218293 * S_MonthsAsCustomer 
+ -0.21701762836549 * S_NumDealsPurchases + 0.07894851045935 * S_NumWebVisitsMonth + 
0.08921612822245 * S_RFMstat + -0.02040952914279 * S_RMntFrq + 0.15773040296683 * S_Recency + 
0.18795040351393 * S_Teenhome ;
1139094   +   H12  =     -0.5016796601689 * S_AcceptedCmpTotal  +     0.02141252121077 *
1139095   +        S_Age  +     0.02533358832525 * S_Frq  +    -0.89656056304793 *
1139096   +        S_Income  +    -0.50741018742107 * S_Kidhome
1139097   +          +     0.11789235500688 * S_MntFishProducts
1139098   +          +    -0.05391257299074 * S_MntFruits  +    -0.43844383398328 *
1139099   +        S_MntGoldProds  +     0.20086516584172 * S_MntSweetProducts
1139100   +          +    -0.12096441889126 * S_MonthsAsCustomer
1139101   +          +    -0.53182967817876 * S_NumDealsPurchases
1139102   +          +    -0.65381646818525 * S_NumWebVisitsMonth
1139103   +          +    -0.29345654851839 * S_RFMstat  +    -0.07284725988025 *
1139104   +        S_RMntFrq  +     0.73417460609275 * S_Recency
1139105   +          +     0.28152108778838 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -0.5016796601689 * S_AcceptedCmpTotal + 0.02141252121077 * S_Age + 
0.02533358832525 * S_Frq + -0.89656056304793 * S_Income + -0.50741018742107 * S_Kidhome + 
0.11789235500688 * S_MntFishProducts + -0.05391257299074 * S_MntFruits + -0.43844383398328 * 
S_MntGoldProds + 0.20086516584172 * S_MntSweetProducts + -0.12096441889126 * 
S_MonthsAsCustomer + -0.53182967817876 * S_NumDealsPurchases + -0.65381646818525 * 
S_NumWebVisitsMonth + -0.29345654851839 * S_RFMstat + -0.07284725988025 * S_RMntFrq + 
0.73417460609275 * S_Recency + 0.28152108778838 * S_Teenhome ;
1139106   +   H13  =    -0.22241318356942 * S_AcceptedCmpTotal  +     0.04664521183033 *
1139107   +        S_Age  +     0.33683339375822 * S_Frq  +    -0.27700440206991 *
1139108   +        S_Income  +     0.59731856577609 * S_Kidhome
1139109   +          +    -0.21417066380485 * S_MntFishProducts
1139110   +          +     0.09462678519727 * S_MntFruits  +     0.33690652154135 *
1139111   +        S_MntGoldProds  +     0.18218751437319 * S_MntSweetProducts
1139112   +          +     0.74506126241168 * S_MonthsAsCustomer
1139113   +          +     -0.0426046522032 * S_NumDealsPurchases
1139114   +          +    -0.28766319294366 * S_NumWebVisitsMonth
1139115   +          +    -0.15001102616419 * S_RFMstat  +      0.0796282932817 *
1139116   +        S_RMntFrq  +     0.82312941262219 * S_Recency
1139117   +          +     0.37834061867339 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = -0.22241318356942 * S_AcceptedCmpTotal + 0.04664521183033 * S_Age 
+ 0.33683339375822 * S_Frq + -0.27700440206991 * S_Income + 0.59731856577609 * S_Kidhome + 
-0.21417066380485 * S_MntFishProducts + 0.09462678519727 * S_MntFruits + 0.33690652154135 * 
S_MntGoldProds + 0.18218751437319 * S_MntSweetProducts + 0.74506126241168 * S_MonthsAsCustomer 
+ -0.0426046522032 * S_NumDealsPurchases + -0.28766319294366 * S_NumWebVisitsMonth + 
-0.15001102616419 * S_RFMstat + 0.0796282932817 * S_RMntFrq + 0.82312941262219 * S_Recency + 
0.37834061867339 * S_Teenhome ;
1139118   +   H14  =    -0.29647151260749 * S_AcceptedCmpTotal  +     0.03875185072729 *
1139119   +        S_Age  +     0.84663314841373 * S_Frq  +     0.08781808788689 *
1139120   +        S_Income  +     0.00520247940824 * S_Kidhome
1139121   +          +    -0.27279099954997 * S_MntFishProducts
1139122   +          +     0.22411346263117 * S_MntFruits  +    -0.22117604499599 *
1139123   +        S_MntGoldProds  +      0.1133354997708 * S_MntSweetProducts
1139124   +          +    -0.03930385119549 * S_MonthsAsCustomer
1139125   +          +    -0.70151263335901 * S_NumDealsPurchases
1139126   +          +     -0.4265994687181 * S_NumWebVisitsMonth
1139127   +          +    -0.15748641435362 * S_RFMstat  +    -0.13078011500878 *
1139128   +        S_RMntFrq  +     0.84719737677288 * S_Recency
1139129   +          +     0.10706817431021 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = -0.29647151260749 * S_AcceptedCmpTotal + 0.03875185072729 * S_Age 
+ 0.84663314841373 * S_Frq + 0.08781808788689 * S_Income + 0.00520247940824 * S_Kidhome + 
-0.27279099954997 * S_MntFishProducts + 0.22411346263117 * S_MntFruits + -0.22117604499599 * 
S_MntGoldProds + 0.1133354997708 * S_MntSweetProducts + -0.03930385119549 * S_MonthsAsCustomer 
+ -0.70151263335901 * S_NumDealsPurchases + -0.4265994687181 * S_NumWebVisitsMonth + 
-0.15748641435362 * S_RFMstat + -0.13078011500878 * S_RMntFrq + 0.84719737677288 * S_Recency + 
0.10706817431021 * S_Teenhome ;
1139130   +   H15  =    -0.07899787590352 * S_AcceptedCmpTotal  +     0.03180708050796 *
1139131   +        S_Age  +     0.48119579482844 * S_Frq  +     0.77894167571758 *
1139132   +        S_Income  +    -0.51766206077271 * S_Kidhome
1139133   +          +    -0.02457049344389 * S_MntFishProducts
1139134   +          +    -0.20172553597691 * S_MntFruits  +    -0.01323073969545 *
1139135   +        S_MntGoldProds  +    -0.04777972579646 * S_MntSweetProducts
1139136   +          +      0.2527325279137 * S_MonthsAsCustomer
1139137   +          +     -0.2042358011289 * S_NumDealsPurchases
1139138   +          +    -0.04239170381036 * S_NumWebVisitsMonth
1139139   +          +     0.02012529381207 * S_RFMstat  +     0.33404529308618 *
1139140   +        S_RMntFrq  +    -0.44724048899839 * S_Recency
1139141   +          +    -0.63180189567132 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H15 = -0.07899787590352 * S_AcceptedCmpTotal + 0.03180708050796 * S_Age 
+ 0.48119579482844 * S_Frq + 0.77894167571758 * S_Income + -0.51766206077271 * S_Kidhome + 
-0.02457049344389 * S_MntFishProducts + -0.20172553597691 * S_MntFruits + -0.01323073969545 * 
S_MntGoldProds + -0.04777972579646 * S_MntSweetProducts + 0.2527325279137 * S_MonthsAsCustomer 
+ -0.2042358011289 * S_NumDealsPurchases + -0.04239170381036 * S_NumWebVisitsMonth + 
0.02012529381207 * S_RFMstat + 0.33404529308618 * S_RMntFrq + -0.44724048899839 * S_Recency + 
-0.63180189567132 * S_Teenhome ;
1139142   +   H16  =      -0.383410328703 * S_AcceptedCmpTotal  +     0.11015036032707 *
1139143   +        S_Age  +    -0.17603849696268 * S_Frq  +    -0.00482417497586 *
1139144   +        S_Income  +     0.02703524116788 * S_Kidhome
1139145   +          +      0.3032492052643 * S_MntFishProducts
1139146   +          +    -0.15404208571625 * S_MntFruits  +     0.34380561605192 *
1139147   +        S_MntGoldProds  +    -0.01993566560895 * S_MntSweetProducts
1139148   +          +     0.02239066904537 * S_MonthsAsCustomer
1139149   +          +    -0.25672377994849 * S_NumDealsPurchases
1139150   +          +    -0.17631825911607 * S_NumWebVisitsMonth
1139151   +          +    -0.05766944902387 * S_RFMstat  +    -0.10123742631192 *
1139152   +        S_RMntFrq  +    -0.27017097846466 * S_Recency
1139153   +          +    -0.02255470439449 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H16 = -0.383410328703 * S_AcceptedCmpTotal + 0.11015036032707 * S_Age + 
-0.17603849696268 * S_Frq + -0.00482417497586 * S_Income + 0.02703524116788 * S_Kidhome + 
0.3032492052643 * S_MntFishProducts + -0.15404208571625 * S_MntFruits + 0.34380561605192 * 
S_MntGoldProds + -0.01993566560895 * S_MntSweetProducts + 0.02239066904537 * 
S_MonthsAsCustomer + -0.25672377994849 * S_NumDealsPurchases + -0.17631825911607 * 
S_NumWebVisitsMonth + -0.05766944902387 * S_RFMstat + -0.10123742631192 * S_RMntFrq + 
-0.27017097846466 * S_Recency + -0.02255470439449 * S_Teenhome ;
1139154   +   H17  =     0.19026773905324 * S_AcceptedCmpTotal  +    -0.36595652460169 *
1139155   +        S_Age  +    -0.50203116840269 * S_Frq  +    -0.48148272876868 *
1139156   +        S_Income  +     0.24269117164704 * S_Kidhome
1139157   +          +    -0.25280027660497 * S_MntFishProducts
1139158   +          +     0.32817616458642 * S_MntFruits  +      0.1314087142667 *
1139159   +        S_MntGoldProds  +     0.48501628960615 * S_MntSweetProducts
1139160   +          +     0.05844462803784 * S_MonthsAsCustomer
1139161   +          +     0.44050031660904 * S_NumDealsPurchases
1139162   +          +     0.56802299610748 * S_NumWebVisitsMonth
1139163   +          +     0.07111036873206 * S_RFMstat  +     0.09513487392921 *
1139164   +        S_RMntFrq  +    -0.57895917541133 * S_Recency
1139165   +          +      0.3784306430786 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H17 = 0.19026773905324 * S_AcceptedCmpTotal + -0.36595652460169 * S_Age 
+ -0.50203116840269 * S_Frq + -0.48148272876868 * S_Income + 0.24269117164704 * S_Kidhome + 
-0.25280027660497 * S_MntFishProducts + 0.32817616458642 * S_MntFruits + 0.1314087142667 * 
S_MntGoldProds + 0.48501628960615 * S_MntSweetProducts + 0.05844462803784 * S_MonthsAsCustomer 
+ 0.44050031660904 * S_NumDealsPurchases + 0.56802299610748 * S_NumWebVisitsMonth + 
0.07111036873206 * S_RFMstat + 0.09513487392921 * S_RMntFrq + -0.57895917541133 * S_Recency + 
0.3784306430786 * S_Teenhome ;
1139166   +   H11  = H11  +     0.19053470959518 * AcceptedCmp10
1139167   +          +    -0.07214096695579 * AcceptedCmp20  +     0.21734632286308 *
1139168   +        AcceptedCmp30  +     0.21104454807694 * AcceptedCmp40
1139169   +          +    -0.03042840763045 * AcceptedCmp50  +    -0.07248819948399 *
1139170   +        Complain0  +     0.01807512537676 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.19053470959518 * AcceptedCmp10 + -0.07214096695579 * 
AcceptedCmp20 + 0.21734632286308 * AcceptedCmp30 + 0.21104454807694 * AcceptedCmp40 + 
-0.03042840763045 * AcceptedCmp50 + -0.07248819948399 * Complain0 + 0.01807512537676 * 
HigherEducationBinary0 ;
1139171   +   H12  = H12  +    -0.08643027844399 * AcceptedCmp10
1139172   +          +    -0.04690429005463 * AcceptedCmp20  +     0.31198784964773 *
1139173   +        AcceptedCmp30  +    -0.49945004903212 * AcceptedCmp40
1139174   +          +     0.13835872835723 * AcceptedCmp50  +    -0.31088531623779 *
1139175   +        Complain0  +      0.3349555407628 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.08643027844399 * AcceptedCmp10 + -0.04690429005463 * 
AcceptedCmp20 + 0.31198784964773 * AcceptedCmp30 + -0.49945004903212 * AcceptedCmp40 + 
0.13835872835723 * AcceptedCmp50 + -0.31088531623779 * Complain0 + 0.3349555407628 * 
HigherEducationBinary0 ;
1139176   +   H13  = H13  +    -0.26820236609158 * AcceptedCmp10
1139177   +          +     0.00448855360376 * AcceptedCmp20  +     0.16944645736856 *
1139178   +        AcceptedCmp30  +    -0.04005549221867 * AcceptedCmp40
1139179   +          +      0.1910208977492 * AcceptedCmp50  +    -0.58683723735432 *
1139180   +        Complain0  +    -0.35128851625292 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.26820236609158 * AcceptedCmp10 + 0.00448855360376 * 
AcceptedCmp20 + 0.16944645736856 * AcceptedCmp30 + -0.04005549221867 * AcceptedCmp40 + 
0.1910208977492 * AcceptedCmp50 + -0.58683723735432 * Complain0 + -0.35128851625292 * 
HigherEducationBinary0 ;
1139181   +   H14  = H14  +     0.62785274077618 * AcceptedCmp10
1139182   +          +      0.0693722948195 * AcceptedCmp20  +     0.32529417239013 *
1139183   +        AcceptedCmp30  +    -0.04192585494202 * AcceptedCmp40
1139184   +          +     0.61511047277682 * AcceptedCmp50  +     0.00175862626358 *
1139185   +        Complain0  +     -0.1307616855525 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.62785274077618 * AcceptedCmp10 + 0.0693722948195 * 
AcceptedCmp20 + 0.32529417239013 * AcceptedCmp30 + -0.04192585494202 * AcceptedCmp40 + 
0.61511047277682 * AcceptedCmp50 + 0.00175862626358 * Complain0 + -0.1307616855525 * 
HigherEducationBinary0 ;
1139186   +   H15  = H15  +    -0.43561963745277 * AcceptedCmp10
1139187   +          +    -0.35461269691767 * AcceptedCmp20  +    -0.30302138803147 *
1139188   +        AcceptedCmp30  +    -0.63665313118921 * AcceptedCmp40
1139189   +          +     0.08104592597156 * AcceptedCmp50  +    -0.56003108172887 *
1139190   +        Complain0  +     0.37695623750728 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + -0.43561963745277 * AcceptedCmp10 + -0.35461269691767 * 
AcceptedCmp20 + -0.30302138803147 * AcceptedCmp30 + -0.63665313118921 * AcceptedCmp40 + 
0.08104592597156 * AcceptedCmp50 + -0.56003108172887 * Complain0 + 0.37695623750728 * 
HigherEducationBinary0 ;
1139191   +   H16  = H16  +    -0.10473893768031 * AcceptedCmp10
1139192   +          +     0.20741912244959 * AcceptedCmp20  +     0.34161448957673 *
1139193   +        AcceptedCmp30  +    -0.02143448305541 * AcceptedCmp40
1139194   +          +     -0.2199415295718 * AcceptedCmp50  +    -0.37163650635155 *
1139195   +        Complain0  +     0.13984739049701 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H16 = H16 + -0.10473893768031 * AcceptedCmp10 + 0.20741912244959 * 
AcceptedCmp20 + 0.34161448957673 * AcceptedCmp30 + -0.02143448305541 * AcceptedCmp40 + 
-0.2199415295718 * AcceptedCmp50 + -0.37163650635155 * Complain0 + 0.13984739049701 * 
HigherEducationBinary0 ;
1139196   +   H17  = H17  +    -0.09370093055173 * AcceptedCmp10
1139197   +          +    -0.04918758410641 * AcceptedCmp20  +    -0.44974584575411 *
1139198   +        AcceptedCmp30  +     0.10464992854985 * AcceptedCmp40
1139199   +          +    -0.05182980556199 * AcceptedCmp50  +    -0.19323882957787 *
1139200   +        Complain0  +    -0.21093860578303 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H17 = H17 + -0.09370093055173 * AcceptedCmp10 + -0.04918758410641 * 
AcceptedCmp20 + -0.44974584575411 * AcceptedCmp30 + 0.10464992854985 * AcceptedCmp40 + 
-0.05182980556199 * AcceptedCmp50 + -0.19323882957787 * Complain0 + -0.21093860578303 * 
HigherEducationBinary0 ;
1139201   +   H11  = H11  +    -0.16742393784366 * Education2n_Cycle
1139202   +          +    -0.31414461011734 * EducationBasic  +     0.13322773160329 *
1139203   +        EducationGraduation  +     0.02044133367016 * EducationMaster
1139204   +          +     0.03218438391868 * Marital_StatusDivorced
1139205   +          +     0.29740201431648 * Marital_StatusMarried
1139206   +          +    -0.05711320105182 * Marital_StatusSingle
1139207   +          +     0.27921996089325 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.16742393784366 * Education2n_Cycle + -0.31414461011734 * 
EducationBasic + 0.13322773160329 * EducationGraduation + 0.02044133367016 * EducationMaster + 
0.03218438391868 * Marital_StatusDivorced + 0.29740201431648 * Marital_StatusMarried + 
-0.05711320105182 * Marital_StatusSingle + 0.27921996089325 * Marital_StatusTogether ;
1139208   +   H12  = H12  +    -0.10551122009757 * Education2n_Cycle
1139209   +          +     0.25967552558213 * EducationBasic  +    -0.25379946081258 *
1139210   +        EducationGraduation  +     0.06172711985252 * EducationMaster
1139211   +          +    -0.13485953864883 * Marital_StatusDivorced
1139212   +          +     0.29585621396014 * Marital_StatusMarried
1139213   +          +    -0.21062396510776 * Marital_StatusSingle
1139214   +          +     0.12581779616426 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.10551122009757 * Education2n_Cycle + 0.25967552558213 * 
EducationBasic + -0.25379946081258 * EducationGraduation + 0.06172711985252 * EducationMaster 
+ -0.13485953864883 * Marital_StatusDivorced + 0.29585621396014 * Marital_StatusMarried + 
-0.21062396510776 * Marital_StatusSingle + 0.12581779616426 * Marital_StatusTogether ;
1139215   +   H13  = H13  +     0.16376652881662 * Education2n_Cycle
1139216   +          +    -0.08434665843847 * EducationBasic  +      0.1195595163399 *
1139217   +        EducationGraduation  +    -0.23477707229079 * EducationMaster
1139218   +          +     0.03739211492109 * Marital_StatusDivorced
1139219   +          +     0.02254393538602 * Marital_StatusMarried
1139220   +          +     0.17136006383242 * Marital_StatusSingle
1139221   +          +    -0.40488263187974 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.16376652881662 * Education2n_Cycle + -0.08434665843847 * 
EducationBasic + 0.1195595163399 * EducationGraduation + -0.23477707229079 * EducationMaster + 
0.03739211492109 * Marital_StatusDivorced + 0.02254393538602 * Marital_StatusMarried + 
0.17136006383242 * Marital_StatusSingle + -0.40488263187974 * Marital_StatusTogether ;
1139222   +   H14  = H14  +     0.08980489161782 * Education2n_Cycle
1139223   +          +     0.17398317663845 * EducationBasic  +    -0.08201462711728 *
1139224   +        EducationGraduation  +    -0.01140342790221 * EducationMaster
1139225   +          +    -0.07451351408309 * Marital_StatusDivorced
1139226   +          +      0.2029630348745 * Marital_StatusMarried
1139227   +          +     0.21447602869795 * Marital_StatusSingle
1139228   +          +     0.24985218402946 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.08980489161782 * Education2n_Cycle + 0.17398317663845 * 
EducationBasic + -0.08201462711728 * EducationGraduation + -0.01140342790221 * EducationMaster 
+ -0.07451351408309 * Marital_StatusDivorced + 0.2029630348745 * Marital_StatusMarried + 
0.21447602869795 * Marital_StatusSingle + 0.24985218402946 * Marital_StatusTogether ;
1139229   +   H15  = H15  +     0.05571864694522 * Education2n_Cycle
1139230   +          +     0.15599348383381 * EducationBasic  +     0.18446892396738 *
1139231   +        EducationGraduation  +    -0.40873344898593 * EducationMaster
1139232   +          +     0.16093771775144 * Marital_StatusDivorced
1139233   +          +    -0.81694058036214 * Marital_StatusMarried
1139234   +          +     0.85329100663689 * Marital_StatusSingle
1139235   +          +    -0.81086593091247 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.05571864694522 * Education2n_Cycle + 0.15599348383381 * 
EducationBasic + 0.18446892396738 * EducationGraduation + -0.40873344898593 * EducationMaster 
+ 0.16093771775144 * Marital_StatusDivorced + -0.81694058036214 * Marital_StatusMarried + 
0.85329100663689 * Marital_StatusSingle + -0.81086593091247 * Marital_StatusTogether ;
1139236   +   H16  = H16  +    -0.15186411904751 * Education2n_Cycle
1139237   +          +    -0.32073478970843 * EducationBasic  +     0.14834928320728 *
1139238   +        EducationGraduation  +     -0.2421067497959 * EducationMaster
1139239   +          +    -0.01714918488371 * Marital_StatusDivorced
1139240   +          +     0.04552206929478 * Marital_StatusMarried
1139241   +          +    -0.05463276154515 * Marital_StatusSingle
1139242   +          +     0.07591432748361 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H16 = H16 + -0.15186411904751 * Education2n_Cycle + -0.32073478970843 * 
EducationBasic + 0.14834928320728 * EducationGraduation + -0.2421067497959 * EducationMaster + 
-0.01714918488371 * Marital_StatusDivorced + 0.04552206929478 * Marital_StatusMarried + 
-0.05463276154515 * Marital_StatusSingle + 0.07591432748361 * Marital_StatusTogether ;
1139243   +   H17  = H17  +     -0.1856786144352 * Education2n_Cycle
1139244   +          +     0.31836662672474 * EducationBasic  +     0.21999227529727 *
1139245   +        EducationGraduation  +     0.13896310567103 * EducationMaster
1139246   +          +     0.22629171286765 * Marital_StatusDivorced
1139247   +          +     0.10716741132649 * Marital_StatusMarried
1139248   +          +    -0.07811411689056 * Marital_StatusSingle
1139249   +          +    -0.19403139012242 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H17 = H17 + -0.1856786144352 * Education2n_Cycle + 0.31836662672474 * 
EducationBasic + 0.21999227529727 * EducationGraduation + 0.13896310567103 * EducationMaster + 
0.22629171286765 * Marital_StatusDivorced + 0.10716741132649 * Marital_StatusMarried + 
-0.07811411689056 * Marital_StatusSingle + -0.19403139012242 * Marital_StatusTogether ;
1139250   +   H11  =     1.31498645608645 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 1.31498645608645 + H11 ;
1139251   +   H12  =     0.20013197362598 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.20013197362598 + H12 ;
1139252   +   H13  =    -0.77650087384368 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.77650087384368 + H13 ;
1139253   +   H14  =     0.85810948448782 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 0.85810948448782 + H14 ;
1139254   +   H15  =     -0.1569386020503 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = -0.1569386020503 + H15 ;
1139255   +   H16  =     -0.7137060746003 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = -0.7137060746003 + H16 ;
1139256   +   H17  =    -1.06403256916825 + H17 ;
MPRINT(EM_DIAGRAM):   H17 = -1.06403256916825 + H17 ;
1139257   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1139258   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1139259   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1139260   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1139261   +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
1139262   +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
1139263   +   H17  = TANH(H17 );
MPRINT(EM_DIAGRAM):   H17 = TANH(H17 );
1139264   +END;
MPRINT(EM_DIAGRAM):   END;
1139265   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1139266   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1139267   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1139268   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1139269   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1139270   +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
1139271   +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
1139272   +   H17  = .;
MPRINT(EM_DIAGRAM):   H17 = .;
1139273   +END;
MPRINT(EM_DIAGRAM):   END;
1139274   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1139275   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1139276   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1139277   +
1139278   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1139279   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1139280   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1139281   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1139282   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1139283   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1139284   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1139285   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1139286   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1139287   +end;
MPRINT(EM_DIAGRAM):   end;
1139288   +else do;
MPRINT(EM_DIAGRAM):   else do;
1139289   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1139290   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1139291   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1139292   +   end;
MPRINT(EM_DIAGRAM):   end;
1139293   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1139294   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1139295   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1139296   +   end;
MPRINT(EM_DIAGRAM):   end;
1139297   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1139298   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1139299   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1139300   +   end;
MPRINT(EM_DIAGRAM):   end;
1139301   +end;
MPRINT(EM_DIAGRAM):   end;
1139302   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1139303   +   P_DepVar1  =    -0.12091629032846 * H11  +     -2.7057572850547 * H12
1139304   +          +    -1.82036433923679 * H13  +    -1.84943401889148 * H14
1139305   +          +      2.5473822826307 * H15  +    -0.20625314344181 * H16
1139306   +          +     1.26998332460819 * H17 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.12091629032846 * H11 + -2.7057572850547 * H12 + 
-1.82036433923679 * H13 + -1.84943401889148 * H14 + 2.5473822826307 * H15 + -0.20625314344181 
* H16 + 1.26998332460819 * H17 ;
1139307   +   P_DepVar1  =    -1.65872808052338 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.65872808052338 + P_DepVar1 ;
1139308   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1139309   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1139310   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1139311   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1139312   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1139313   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1139314   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1139315   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1139316   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1139317   +END;
MPRINT(EM_DIAGRAM):   END;
1139318   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1139319   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1139320   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1139321   +END;
MPRINT(EM_DIAGRAM):   END;
1139322   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1139323   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1139324   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1139325   +END;
MPRINT(EM_DIAGRAM):   END;
1139326   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1139327   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1139328   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1139329   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1139330   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1139331   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1139332   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1139333   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1139334   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1139335   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1139336   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1139337   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1139338   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1139339   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1139340   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1139341   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1139342   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1139343   +END;
MPRINT(EM_DIAGRAM):   END;
1139344   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1139345   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1139346   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1139347   +drop
1139348   +H11
1139349   +H12
1139350   +H13
1139351   +H14
1139352   +H15
1139353   +H16
1139354   +H17
1139355   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 H17 ;
1139356   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1139357    run;

NOTE: DATA STEP view saved on file EMWS8.NEURAL36_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.META3_VALIDATE.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1139358    quit;
1139359    filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
1139360    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
1139361    * Neural36: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * Neural36: Computing metadata for TRAIN data;
1139362    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;

NOTE: View EMWS8.NEURAL36_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural36\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS8.Neural36_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS8.Neural36_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS8.Neural36_TRAIN out=WORK.M05A0NJ6 noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M05A0NJ6;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20 
INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M05A0NJ6(keep=name type length label format formatl 
formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then format = strip(format)!!strip(put(formatl, 
best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, 
best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then informat = 
strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, 
best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M05A0NJ6;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M05A0NJ6;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M3B6KFD9 NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3B6KFD9;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M3B6KFD9;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0AESNHA(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M3B6KFD9;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3B6KFD9;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 
FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M3B6KFD9;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" 
"MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" 
"QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" "YEAR" "YYMMDD" "YYMON" 
"YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" 
"EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) 
formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = 
"DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) 
formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" 
"NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" 
"SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = 
"DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then 
level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 
'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 
'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ 
('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 
'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 
'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3B6KFD9;
MPRINT(EMADVISECOLUMNS):   set WORK.M3B6KFD9;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= 
"Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= 
"Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower limit" UPPERLIMIT= 
"Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= 
"Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Meta3_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Meta3_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural36_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT 
LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "Neural36";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("P_DEPVAR1") creator = "Neural36";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR1") creator = "Neural36";
MPRINT(EM_DIAGRAM):   when("P_DEPVAR0") creator = "Neural36";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR0") creator = "Neural36";
MPRINT(EM_DIAGRAM):   when("F_DEPVAR") creator = "Neural36";
MPRINT(EM_DIAGRAM):   when("I_DEPVAR") creator = "Neural36";
MPRINT(EM_DIAGRAM):   when("U_DEPVAR") creator = "Neural36";
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "Neural36";
MPRINT(EM_DIAGRAM):   when("DEPVAR") model = "Neural36";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural36: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
1139674    data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
1139675    set EMWS8.Neural36_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural36_EMINFO;
1139676    where DATA='Neural36' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='Neural36' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 
'MODEL');
1139677    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.NEURAL36_EMINFO.
      WHERE (DATA='Neural36') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1139678    data EMWS8.Neural36_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS8.Neural36_EMINFO;
1139679    length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
1139680    input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
1139681    cards;
MPRINT(EM_DIAGRAM):   cards;

NOTE: The data set EMWS8.NEURAL36_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   run;
1139685    run;
1139686    data EMWS8.Neural36_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural36_EMINFO;
1139687    set EMWS8.Neural36_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural36_EMINFO WORK.MODELTEMP_INFO;
1139688    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.NEURAL36_EMINFO.
NOTE: There were 0 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS8.NEURAL36_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1139689    proc sort data = EMWS8.Neural36_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.Neural36_EMINFO NOTHREADS;
1139690    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
1139691    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.NEURAL36_EMINFO.
NOTE: The data set EMWS8.NEURAL36_EMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1139692    proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
1139693    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
1139694    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set EMWS8.FIMPORT_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 1 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1139695    proc sort data = EMWS8.Neural36_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS8.Neural36_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
1139696    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
1139697    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 3 observations read from the data set EMWS8.NEURAL36_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1139698    data EMWS8.Neural36_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural36_EMINFO;
1139699    merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
1139700    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
1139701    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 3 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS8.NEURAL36_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1139702    proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
1139703    delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
1139704    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
1139705    quit;
MPRINT(EM_DIAGRAM):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

NOTE: View EMWS8.NEURAL36_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
      
NOTE: View EMWS8.NEURAL36_VALIDATE.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
