MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "19. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "11.03 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                19. April 2016
Time:                11.03 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O1K4GS0M 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural36\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O1K4GS0M new;
MPRINT(EM_DIAGRAM):   run;
186206     data work.outkey;
MPRINT(EM_DIAGRAM):    data work.outkey;
186207     set EMWS8.Neural36_OUTKEY;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural36_OUTKEY;
186208     if upcase(ROLE) = 'HIDDEN';
MPRINT(EM_DIAGRAM):   if upcase(ROLE) = 'HIDDEN';
186209     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 50 observations read from the data set EMWS8.NEURAL36_OUTKEY.
NOTE: The data set WORK.OUTKEY has 7 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

186210     filename emflow
186210   ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural36\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural36\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural36: Scoring DATA data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
186211     *------------------------------------------------------------*;
186212     * Neural36: Scoring DATA data;
186213     *------------------------------------------------------------*;
186214     data EMWS8.Neural36_TRAIN
186215     / view=EMWS8.Neural36_TRAIN
186216     ;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural36_TRAIN / view=EMWS8.Neural36_TRAIN ;
186217     set EMWS8.Meta3_TRAIN
186218     ;
MPRINT(EM_DIAGRAM):   set EMWS8.Meta3_TRAIN ;
186219     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Neural36\EMFLOWSCORE.sas.
186220    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
186221    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
186222    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
186223    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
186224    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
186225    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
186226    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
186227    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
186228    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
186229    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
186230    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
186231    +LENGTH _WARN_ $4
186232    +      F_DepVar  $ 12
186233    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
186234    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
186235    +
186236    +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
186237    +
186238    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
186239    +
186240    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
186241    +
186242    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
186243    +
186244    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
186245    +
186246    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
186247    +
186248    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
186249    +
186250    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
186251    +
186252    +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
186253    +
186254    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
186255    +
186256    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
186257    +
186258    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
186259    +
186260    +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
186261    +
186262    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
186263    +
186264    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
186265    +
186266    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
186267    +
186268    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
186269    +
186270    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
186271    +
186272    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
186273    +
186274    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
186275    +
186276    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
186277    +
186278    +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
186279    +
186280    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
186281    +
186282    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
186283    +
186284    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
186285    +
186286    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
186287    +
186288    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
186289    +
186290    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
186291    +
186292    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
186293    +
186294    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
186295    +
186296    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
186297    +
186298    +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
186299    +
186300    +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
186301    +
186302    +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
186303    +
186304    +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
186305    +
186306    +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
186307    +
186308    +      label H17 = 'Hidden: H1=7' ;
MPRINT(EM_DIAGRAM):   label H17 = 'Hidden: H1=7' ;
186309    +
186310    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
186311    +
186312    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
186313    +
186314    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
186315    +
186316    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
186317    +
186318    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
186319    +
186320    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
186321    +
186322    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
186323    +
186324    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
186325    +
186326    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
186327    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
186328    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
186329    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
186330    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
186331    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
186332    +end;
MPRINT(EM_DIAGRAM):   end;
186333    +else do;
MPRINT(EM_DIAGRAM):   else do;
186334    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
186335    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
186336    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
186337    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
186338    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
186339    +   end;
MPRINT(EM_DIAGRAM):   end;
186340    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
186341    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
186342    +   end;
MPRINT(EM_DIAGRAM):   end;
186343    +   else do;
MPRINT(EM_DIAGRAM):   else do;
186344    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
186345    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
186346    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
186347    +   end;
MPRINT(EM_DIAGRAM):   end;
186348    +end;
MPRINT(EM_DIAGRAM):   end;
186349    +
186350    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
186351    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
186352    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
186353    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
186354    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
186355    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
186356    +end;
MPRINT(EM_DIAGRAM):   end;
186357    +else do;
MPRINT(EM_DIAGRAM):   else do;
186358    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
186359    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
186360    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
186361    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
186362    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
186363    +   end;
MPRINT(EM_DIAGRAM):   end;
186364    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
186365    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
186366    +   end;
MPRINT(EM_DIAGRAM):   end;
186367    +   else do;
MPRINT(EM_DIAGRAM):   else do;
186368    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
186369    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
186370    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
186371    +   end;
MPRINT(EM_DIAGRAM):   end;
186372    +end;
MPRINT(EM_DIAGRAM):   end;
186373    +
186374    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
186375    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
186376    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
186377    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
186378    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
186379    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
186380    +end;
MPRINT(EM_DIAGRAM):   end;
186381    +else do;
MPRINT(EM_DIAGRAM):   else do;
186382    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
186383    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
186384    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
186385    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
186386    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
186387    +   end;
MPRINT(EM_DIAGRAM):   end;
186388    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
186389    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
186390    +   end;
MPRINT(EM_DIAGRAM):   end;
186391    +   else do;
MPRINT(EM_DIAGRAM):   else do;
186392    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
186393    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
186394    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
186395    +   end;
MPRINT(EM_DIAGRAM):   end;
186396    +end;
MPRINT(EM_DIAGRAM):   end;
186397    +
186398    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
186399    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
186400    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
186401    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
186402    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
186403    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
186404    +end;
MPRINT(EM_DIAGRAM):   end;
186405    +else do;
MPRINT(EM_DIAGRAM):   else do;
186406    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
186407    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
186408    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
186409    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
186410    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
186411    +   end;
MPRINT(EM_DIAGRAM):   end;
186412    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
186413    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
186414    +   end;
MPRINT(EM_DIAGRAM):   end;
186415    +   else do;
MPRINT(EM_DIAGRAM):   else do;
186416    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
186417    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
186418    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
186419    +   end;
MPRINT(EM_DIAGRAM):   end;
186420    +end;
MPRINT(EM_DIAGRAM):   end;
186421    +
186422    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
186423    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
186424    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
186425    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
186426    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
186427    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
186428    +end;
MPRINT(EM_DIAGRAM):   end;
186429    +else do;
MPRINT(EM_DIAGRAM):   else do;
186430    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
186431    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
186432    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
186433    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
186434    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
186435    +   end;
MPRINT(EM_DIAGRAM):   end;
186436    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
186437    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
186438    +   end;
MPRINT(EM_DIAGRAM):   end;
186439    +   else do;
MPRINT(EM_DIAGRAM):   else do;
186440    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
186441    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
186442    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
186443    +   end;
MPRINT(EM_DIAGRAM):   end;
186444    +end;
MPRINT(EM_DIAGRAM):   end;
186445    +
186446    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
186447    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
186448    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
186449    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
186450    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
186451    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
186452    +end;
MPRINT(EM_DIAGRAM):   end;
186453    +else do;
MPRINT(EM_DIAGRAM):   else do;
186454    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
186455    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
186456    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
186457    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
186458    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
186459    +   end;
MPRINT(EM_DIAGRAM):   end;
186460    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
186461    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
186462    +   end;
MPRINT(EM_DIAGRAM):   end;
186463    +   else do;
MPRINT(EM_DIAGRAM):   else do;
186464    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
186465    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
186466    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
186467    +   end;
MPRINT(EM_DIAGRAM):   end;
186468    +end;
MPRINT(EM_DIAGRAM):   end;
186469    +
186470    +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
186471    +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
186472    +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
186473    +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
186474    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
186475    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
186476    +end;
MPRINT(EM_DIAGRAM):   end;
186477    +else do;
MPRINT(EM_DIAGRAM):   else do;
186478    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
186479    +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
186480    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
186481    +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
186482    +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
186483    +   end;
MPRINT(EM_DIAGRAM):   end;
186484    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
186485    +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
186486    +   end;
MPRINT(EM_DIAGRAM):   end;
186487    +   else do;
MPRINT(EM_DIAGRAM):   else do;
186488    +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
186489    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
186490    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
186491    +   end;
MPRINT(EM_DIAGRAM):   end;
186492    +end;
MPRINT(EM_DIAGRAM):   end;
186493    +
186494    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
186495    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
186496    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
186497    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
186498    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
186499    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
186500    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
186501    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
186502    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
186503    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
186504    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
186505    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
186506    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
186507    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
186508    +end;
MPRINT(EM_DIAGRAM):   end;
186509    +else do;
MPRINT(EM_DIAGRAM):   else do;
186510    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
186511    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
186512    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
186513    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
186514    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
186515    +   end;
MPRINT(EM_DIAGRAM):   end;
186516    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
186517    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
186518    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
186519    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
186520    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
186521    +   end;
MPRINT(EM_DIAGRAM):   end;
186522    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
186523    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
186524    +   end;
MPRINT(EM_DIAGRAM):   end;
186525    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
186526    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
186527    +   end;
MPRINT(EM_DIAGRAM):   end;
186528    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
186529    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
186530    +   end;
MPRINT(EM_DIAGRAM):   end;
186531    +   else do;
MPRINT(EM_DIAGRAM):   else do;
186532    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
186533    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
186534    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
186535    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
186536    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
186537    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
186538    +   end;
MPRINT(EM_DIAGRAM):   end;
186539    +end;
MPRINT(EM_DIAGRAM):   end;
186540    +
186541    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
186542    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
186543    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
186544    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
186545    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
186546    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
186547    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
186548    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
186549    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
186550    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
186551    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
186552    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
186553    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
186554    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
186555    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
186556    +end;
MPRINT(EM_DIAGRAM):   end;
186557    +else do;
MPRINT(EM_DIAGRAM):   else do;
186558    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
186559    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
186560    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
186561    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
186562    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
186563    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
186564    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
186565    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
186566    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
186567    +         end;
MPRINT(EM_DIAGRAM):   end;
186568    +         else do;
MPRINT(EM_DIAGRAM):   else do;
186569    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
186570    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
186571    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
186572    +            end;
MPRINT(EM_DIAGRAM):   end;
186573    +         end;
MPRINT(EM_DIAGRAM):   end;
186574    +      end;
MPRINT(EM_DIAGRAM):   end;
186575    +      else do;
MPRINT(EM_DIAGRAM):   else do;
186576    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
186577    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
186578    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
186579    +         end;
MPRINT(EM_DIAGRAM):   end;
186580    +      end;
MPRINT(EM_DIAGRAM):   end;
186581    +   end;
MPRINT(EM_DIAGRAM):   end;
186582    +   else do;
MPRINT(EM_DIAGRAM):   else do;
186583    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
186584    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
186585    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
186586    +      end;
MPRINT(EM_DIAGRAM):   end;
186587    +      else do;
MPRINT(EM_DIAGRAM):   else do;
186588    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
186589    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
186590    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
186591    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
186592    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
186593    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
186594    +         end;
MPRINT(EM_DIAGRAM):   end;
186595    +      end;
MPRINT(EM_DIAGRAM):   end;
186596    +   end;
MPRINT(EM_DIAGRAM):   end;
186597    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
186598    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
186599    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
186600    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
186601    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
186602    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
186603    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
186604    +   end;
MPRINT(EM_DIAGRAM):   end;
186605    +end;
MPRINT(EM_DIAGRAM):   end;
186606    +
186607    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
186608    +*** Checking missing input Interval
186609    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
186610    +
186611    +IF NMISS(
186612    +   AcceptedCmpTotal ,
186613    +   Age ,
186614    +   Frq ,
186615    +   Income ,
186616    +   Kidhome ,
186617    +   MntFishProducts ,
186618    +   MntFruits ,
186619    +   MntGoldProds ,
186620    +   MntSweetProducts ,
186621    +   MonthsAsCustomer ,
186622    +   NumDealsPurchases ,
186623    +   NumWebVisitsMonth ,
186624    +   RFMstat ,
186625    +   RMntFrq ,
186626    +   Recency ,
186627    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , 
MntFishProducts , MntFruits , MntGoldProds , MntSweetProducts , MonthsAsCustomer , 
NumDealsPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , Teenhome ) THEN DO;
186628    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
186629    +
186630    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
186631    +END;
MPRINT(EM_DIAGRAM):   END;
186632    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
186633    +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
186634    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
186635    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
186636    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
186637    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
186638    +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
186639    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
186640    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
186641    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
186642    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
186643    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
186644    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
186645    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
186646    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
186647    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
186648    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
186649    +   S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
186650    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
186651    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
186652    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
186653    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
186654    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
186655    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
186656    +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
186657    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
186658    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
186659    +END;
MPRINT(EM_DIAGRAM):   END;
186660    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
186661    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
186662    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
186663    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
186664    +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
186665    +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
186666    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
186667    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
186668    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
186669    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
186670    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
186671    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
186672    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
186673    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
186674    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
186675    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
186676    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
186677    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
186678    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
186679    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
186680    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
186681    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
186682    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
186683    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
186684    +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
186685    +   ELSE S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
186686    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
186687    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
186688    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
186689    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
186690    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
186691    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
186692    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
186693    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
186694    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
186695    +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
186696    +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
186697    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
186698    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
186699    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
186700    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
186701    +END;
MPRINT(EM_DIAGRAM):   END;
186702    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
186703    +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
186704    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
186705    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
186706    +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
186707    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
186708    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
186709    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
186710    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
186711    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
186712    +   H11  =     0.36102409886134 * S_AcceptedCmpTotal  +     0.13395156650326 *
186713    +        S_Age  +    -0.24538302428059 * S_Frq  +    -0.11572058197557 *
186714    +        S_Income  +     0.21790378443814 * S_Kidhome
186715    +          +    -0.08134586316395 * S_MntFishProducts
186716    +          +     -0.2688648060203 * S_MntFruits  +    -0.25880035211038 *
186717    +        S_MntGoldProds  +     0.07531502626045 * S_MntSweetProducts
186718    +          +     0.21726816930291 * S_MonthsAsCustomer
186719    +          +    -0.21824241156847 * S_NumDealsPurchases
186720    +          +     0.07727563921761 * S_NumWebVisitsMonth
186721    +          +     0.09027808324069 * S_RFMstat  +     -0.0189462843628 *
186722    +        S_RMntFrq  +     0.15658915596853 * S_Recency
186723    +          +     0.18680606168417 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.36102409886134 * S_AcceptedCmpTotal + 0.13395156650326 * S_Age + 
-0.24538302428059 * S_Frq + -0.11572058197557 * S_Income + 0.21790378443814 * S_Kidhome + 
-0.08134586316395 * S_MntFishProducts + -0.2688648060203 * S_MntFruits + -0.25880035211038 * 
S_MntGoldProds + 0.07531502626045 * S_MntSweetProducts + 0.21726816930291 * S_MonthsAsCustomer 
+ -0.21824241156847 * S_NumDealsPurchases + 0.07727563921761 * S_NumWebVisitsMonth + 
0.09027808324069 * S_RFMstat + -0.0189462843628 * S_RMntFrq + 0.15658915596853 * S_Recency + 
0.18680606168417 * S_Teenhome ;
186724    +   H12  =    -0.50461866181934 * S_AcceptedCmpTotal  +     0.01266437730767 *
186725    +        S_Age  +     0.02534169432751 * S_Frq  +    -0.89441458532035 *
186726    +        S_Income  +    -0.51036141680293 * S_Kidhome
186727    +          +     0.10879858722875 * S_MntFishProducts
186728    +          +    -0.05639987269313 * S_MntFruits  +    -0.43702228668285 *
186729    +        S_MntGoldProds  +     0.18909754042399 * S_MntSweetProducts
186730    +          +    -0.11392977531374 * S_MonthsAsCustomer
186731    +          +     -0.5318843752274 * S_NumDealsPurchases
186732    +          +    -0.65796537312585 * S_NumWebVisitsMonth
186733    +          +    -0.29571612685484 * S_RFMstat  +     -0.0801458884647 *
186734    +        S_RMntFrq  +     0.73429478940872 * S_Recency
186735    +          +     0.28950334189528 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -0.50461866181934 * S_AcceptedCmpTotal + 0.01266437730767 * S_Age 
+ 0.02534169432751 * S_Frq + -0.89441458532035 * S_Income + -0.51036141680293 * S_Kidhome + 
0.10879858722875 * S_MntFishProducts + -0.05639987269313 * S_MntFruits + -0.43702228668285 * 
S_MntGoldProds + 0.18909754042399 * S_MntSweetProducts + -0.11392977531374 * 
S_MonthsAsCustomer + -0.5318843752274 * S_NumDealsPurchases + -0.65796537312585 * 
S_NumWebVisitsMonth + -0.29571612685484 * S_RFMstat + -0.0801458884647 * S_RMntFrq + 
0.73429478940872 * S_Recency + 0.28950334189528 * S_Teenhome ;
186736    +   H13  =    -0.22612994964695 * S_AcceptedCmpTotal  +     0.04392639924073 *
186737    +        S_Age  +     0.32974877429932 * S_Frq  +    -0.26990824722212 *
186738    +        S_Income  +     0.59254092901621 * S_Kidhome
186739    +          +    -0.20448500725841 * S_MntFishProducts
186740    +          +     0.09904900315476 * S_MntFruits  +     0.33085368683805 *
186741    +        S_MntGoldProds  +     0.19272280339022 * S_MntSweetProducts
186742    +          +     0.75084411765835 * S_MonthsAsCustomer
186743    +          +     -0.0387146296237 * S_NumDealsPurchases
186744    +          +    -0.28387522584505 * S_NumWebVisitsMonth
186745    +          +    -0.15204072409221 * S_RFMstat  +     0.09340123133096 *
186746    +        S_RMntFrq  +     0.82636976290684 * S_Recency
186747    +          +     0.37810091232378 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = -0.22612994964695 * S_AcceptedCmpTotal + 0.04392639924073 * S_Age 
+ 0.32974877429932 * S_Frq + -0.26990824722212 * S_Income + 0.59254092901621 * S_Kidhome + 
-0.20448500725841 * S_MntFishProducts + 0.09904900315476 * S_MntFruits + 0.33085368683805 * 
S_MntGoldProds + 0.19272280339022 * S_MntSweetProducts + 0.75084411765835 * S_MonthsAsCustomer 
+ -0.0387146296237 * S_NumDealsPurchases + -0.28387522584505 * S_NumWebVisitsMonth + 
-0.15204072409221 * S_RFMstat + 0.09340123133096 * S_RMntFrq + 0.82636976290684 * S_Recency + 
0.37810091232378 * S_Teenhome ;
186748    +   H14  =    -0.30228547708859 * S_AcceptedCmpTotal  +     0.03241560550242 *
186749    +        S_Age  +     0.84298653991521 * S_Frq  +     0.08457309547848 *
186750    +        S_Income  +    -0.00122834275949 * S_Kidhome
186751    +          +    -0.27566379985337 * S_MntFishProducts
186752    +          +     0.22439349557664 * S_MntFruits  +     -0.2238462316234 *
186753    +        S_MntGoldProds  +     0.10162320730644 * S_MntSweetProducts
186754    +          +    -0.04164317708211 * S_MonthsAsCustomer
186755    +          +    -0.69362879353268 * S_NumDealsPurchases
186756    +          +    -0.42590146496797 * S_NumWebVisitsMonth
186757    +          +    -0.14963136795323 * S_RFMstat  +    -0.12684701620224 *
186758    +        S_RMntFrq  +     0.84758472963267 * S_Recency
186759    +          +     0.11712588251204 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = -0.30228547708859 * S_AcceptedCmpTotal + 0.03241560550242 * S_Age 
+ 0.84298653991521 * S_Frq + 0.08457309547848 * S_Income + -0.00122834275949 * S_Kidhome + 
-0.27566379985337 * S_MntFishProducts + 0.22439349557664 * S_MntFruits + -0.2238462316234 * 
S_MntGoldProds + 0.10162320730644 * S_MntSweetProducts + -0.04164317708211 * 
S_MonthsAsCustomer + -0.69362879353268 * S_NumDealsPurchases + -0.42590146496797 * 
S_NumWebVisitsMonth + -0.14963136795323 * S_RFMstat + -0.12684701620224 * S_RMntFrq + 
0.84758472963267 * S_Recency + 0.11712588251204 * S_Teenhome ;
186760    +   H15  =    -0.07826142783822 * S_AcceptedCmpTotal  +     0.02869519269506 *
186761    +        S_Age  +     0.47709626753648 * S_Frq  +     0.77626478438802 *
186762    +        S_Income  +    -0.52116533001423 * S_Kidhome
186763    +          +     -0.0164127050263 * S_MntFishProducts
186764    +          +    -0.21044074963391 * S_MntFruits  +    -0.01106715629962 *
186765    +        S_MntGoldProds  +    -0.04742180634458 * S_MntSweetProducts
186766    +          +     0.24190773546087 * S_MonthsAsCustomer
186767    +          +    -0.20709839635746 * S_NumDealsPurchases
186768    +          +    -0.03892039672539 * S_NumWebVisitsMonth
186769    +          +     0.01844174922581 * S_RFMstat  +     0.33852543335405 *
186770    +        S_RMntFrq  +    -0.44935213795722 * S_Recency
186771    +          +     -0.6298368435821 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H15 = -0.07826142783822 * S_AcceptedCmpTotal + 0.02869519269506 * S_Age 
+ 0.47709626753648 * S_Frq + 0.77626478438802 * S_Income + -0.52116533001423 * S_Kidhome + 
-0.0164127050263 * S_MntFishProducts + -0.21044074963391 * S_MntFruits + -0.01106715629962 * 
S_MntGoldProds + -0.04742180634458 * S_MntSweetProducts + 0.24190773546087 * 
S_MonthsAsCustomer + -0.20709839635746 * S_NumDealsPurchases + -0.03892039672539 * 
S_NumWebVisitsMonth + 0.01844174922581 * S_RFMstat + 0.33852543335405 * S_RMntFrq + 
-0.44935213795722 * S_Recency + -0.6298368435821 * S_Teenhome ;
186772    +   H16  =    -0.38278200147216 * S_AcceptedCmpTotal  +     0.10976543329989 *
186773    +        S_Age  +    -0.17634499366273 * S_Frq  +    -0.00464219628456 *
186774    +        S_Income  +     0.02656798188894 * S_Kidhome
186775    +          +     0.30126647035438 * S_MntFishProducts
186776    +          +    -0.15329042297108 * S_MntFruits  +     0.34485619618635 *
186777    +        S_MntGoldProds  +    -0.02131109278943 * S_MntSweetProducts
186778    +          +     0.02225077975252 * S_MonthsAsCustomer
186779    +          +    -0.25574607065737 * S_NumDealsPurchases
186780    +          +    -0.17649073415066 * S_NumWebVisitsMonth
186781    +          +    -0.05940264496746 * S_RFMstat  +    -0.10060551243835 *
186782    +        S_RMntFrq  +    -0.26823576982436 * S_Recency
186783    +          +    -0.02089829217347 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H16 = -0.38278200147216 * S_AcceptedCmpTotal + 0.10976543329989 * S_Age 
+ -0.17634499366273 * S_Frq + -0.00464219628456 * S_Income + 0.02656798188894 * S_Kidhome + 
0.30126647035438 * S_MntFishProducts + -0.15329042297108 * S_MntFruits + 0.34485619618635 * 
S_MntGoldProds + -0.02131109278943 * S_MntSweetProducts + 0.02225077975252 * 
S_MonthsAsCustomer + -0.25574607065737 * S_NumDealsPurchases + -0.17649073415066 * 
S_NumWebVisitsMonth + -0.05940264496746 * S_RFMstat + -0.10060551243835 * S_RMntFrq + 
-0.26823576982436 * S_Recency + -0.02089829217347 * S_Teenhome ;
186784    +   H17  =     0.19294816663728 * S_AcceptedCmpTotal  +    -0.36492507147362 *
186785    +        S_Age  +     -0.5026822541815 * S_Frq  +    -0.48143237402929 *
186786    +        S_Income  +     0.24859715564668 * S_Kidhome
186787    +          +    -0.25170385966484 * S_MntFishProducts
186788    +          +     0.32613161868695 * S_MntFruits  +     0.13394374893255 *
186789    +        S_MntGoldProds  +     0.48416151380913 * S_MntSweetProducts
186790    +          +     0.05219342683802 * S_MonthsAsCustomer
186791    +          +     0.43291262348863 * S_NumDealsPurchases
186792    +          +     0.56350506449265 * S_NumWebVisitsMonth
186793    +          +     0.07050038692379 * S_RFMstat  +     0.09321760948671 *
186794    +        S_RMntFrq  +      -0.582152401129 * S_Recency
186795    +          +     0.37123217787922 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H17 = 0.19294816663728 * S_AcceptedCmpTotal + -0.36492507147362 * S_Age 
+ -0.5026822541815 * S_Frq + -0.48143237402929 * S_Income + 0.24859715564668 * S_Kidhome + 
-0.25170385966484 * S_MntFishProducts + 0.32613161868695 * S_MntFruits + 0.13394374893255 * 
S_MntGoldProds + 0.48416151380913 * S_MntSweetProducts + 0.05219342683802 * S_MonthsAsCustomer 
+ 0.43291262348863 * S_NumDealsPurchases + 0.56350506449265 * S_NumWebVisitsMonth + 
0.07050038692379 * S_RFMstat + 0.09321760948671 * S_RMntFrq + -0.582152401129 * S_Recency + 
0.37123217787922 * S_Teenhome ;
186796    +   H11  = H11  +     0.19124500210188 * AcceptedCmp10
186797    +          +    -0.07164186578541 * AcceptedCmp20  +     0.21783016367597 *
186798    +        AcceptedCmp30  +     0.21148394728435 * AcceptedCmp40
186799    +          +    -0.03026880266191 * AcceptedCmp50  +    -0.07201946966594 *
186800    +        Complain0  +     0.01809478462337 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.19124500210188 * AcceptedCmp10 + -0.07164186578541 * 
AcceptedCmp20 + 0.21783016367597 * AcceptedCmp30 + 0.21148394728435 * AcceptedCmp40 + 
-0.03026880266191 * AcceptedCmp50 + -0.07201946966594 * Complain0 + 0.01809478462337 * 
HigherEducationBinary0 ;
186801    +   H12  = H12  +    -0.08224648561215 * AcceptedCmp10
186802    +          +    -0.04262229291512 * AcceptedCmp20  +     0.31730600734378 *
186803    +        AcceptedCmp30  +    -0.50103336510524 * AcceptedCmp40
186804    +          +     0.14654032457963 * AcceptedCmp50  +     -0.3081029727525 *
186805    +        Complain0  +     0.33420373179467 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.08224648561215 * AcceptedCmp10 + -0.04262229291512 * 
AcceptedCmp20 + 0.31730600734378 * AcceptedCmp30 + -0.50103336510524 * AcceptedCmp40 + 
0.14654032457963 * AcceptedCmp50 + -0.3081029727525 * Complain0 + 0.33420373179467 * 
HigherEducationBinary0 ;
186806    +   H13  = H13  +     -0.2675286852338 * AcceptedCmp10
186807    +          +     0.00293684627092 * AcceptedCmp20  +     0.17042784679702 *
186808    +        AcceptedCmp30  +    -0.03300348487228 * AcceptedCmp40
186809    +          +     0.18139562224546 * AcceptedCmp50  +     -0.5876653777255 *
186810    +        Complain0  +      -0.348312724013 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.2675286852338 * AcceptedCmp10 + 0.00293684627092 * 
AcceptedCmp20 + 0.17042784679702 * AcceptedCmp30 + -0.03300348487228 * AcceptedCmp40 + 
0.18139562224546 * AcceptedCmp50 + -0.5876653777255 * Complain0 + -0.348312724013 * 
HigherEducationBinary0 ;
186811    +   H14  = H14  +     0.62345895952335 * AcceptedCmp10
186812    +          +     0.06420128732689 * AcceptedCmp20  +     0.32944172885024 *
186813    +        AcceptedCmp30  +    -0.04719511461619 * AcceptedCmp40
186814    +          +     0.61833640682482 * AcceptedCmp50  +     -0.0006656764006 *
186815    +        Complain0  +    -0.12356778452039 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.62345895952335 * AcceptedCmp10 + 0.06420128732689 * 
AcceptedCmp20 + 0.32944172885024 * AcceptedCmp30 + -0.04719511461619 * AcceptedCmp40 + 
0.61833640682482 * AcceptedCmp50 + -0.0006656764006 * Complain0 + -0.12356778452039 * 
HigherEducationBinary0 ;
186816    +   H15  = H15  +    -0.43202592233127 * AcceptedCmp10
186817    +          +    -0.35346067325701 * AcceptedCmp20  +    -0.29446055239371 *
186818    +        AcceptedCmp30  +     -0.6355060868005 * AcceptedCmp40
186819    +          +     0.08763000125481 * AcceptedCmp50  +    -0.55439066852712 *
186820    +        Complain0  +     0.37078134908454 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + -0.43202592233127 * AcceptedCmp10 + -0.35346067325701 * 
AcceptedCmp20 + -0.29446055239371 * AcceptedCmp30 + -0.6355060868005 * AcceptedCmp40 + 
0.08763000125481 * AcceptedCmp50 + -0.55439066852712 * Complain0 + 0.37078134908454 * 
HigherEducationBinary0 ;
186821    +   H16  = H16  +    -0.10522820178908 * AcceptedCmp10
186822    +          +     0.20645125728354 * AcceptedCmp20  +     0.34040121966792 *
186823    +        AcceptedCmp30  +    -0.02259616994399 * AcceptedCmp40
186824    +          +    -0.22123397523195 * AcceptedCmp50  +    -0.37258892216723 *
186825    +        Complain0  +     0.14107103807235 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H16 = H16 + -0.10522820178908 * AcceptedCmp10 + 0.20645125728354 * 
AcceptedCmp20 + 0.34040121966792 * AcceptedCmp30 + -0.02259616994399 * AcceptedCmp40 + 
-0.22123397523195 * AcceptedCmp50 + -0.37258892216723 * Complain0 + 0.14107103807235 * 
HigherEducationBinary0 ;
186826    +   H17  = H17  +    -0.09096203784003 * AcceptedCmp10
186827    +          +    -0.04735484605229 * AcceptedCmp20  +     -0.4485810761844 *
186828    +        AcceptedCmp30  +     0.10362320405529 * AcceptedCmp40
186829    +          +    -0.05214433990448 * AcceptedCmp50  +    -0.19339827696554 *
186830    +        Complain0  +    -0.21246690264814 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H17 = H17 + -0.09096203784003 * AcceptedCmp10 + -0.04735484605229 * 
AcceptedCmp20 + -0.4485810761844 * AcceptedCmp30 + 0.10362320405529 * AcceptedCmp40 + 
-0.05214433990448 * AcceptedCmp50 + -0.19339827696554 * Complain0 + -0.21246690264814 * 
HigherEducationBinary0 ;
186831    +   H11  = H11  +    -0.16759278562529 * Education2n_Cycle
186832    +          +    -0.31449574789464 * EducationBasic  +     0.13281408830843 *
186833    +        EducationGraduation  +      0.0199258483942 * EducationMaster
186834    +          +     0.03245181998921 * Marital_StatusDivorced
186835    +          +     0.29722741247663 * Marital_StatusMarried
186836    +          +    -0.05683085497262 * Marital_StatusSingle
186837    +          +     0.27914630307932 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.16759278562529 * Education2n_Cycle + -0.31449574789464 * 
EducationBasic + 0.13281408830843 * EducationGraduation + 0.0199258483942 * EducationMaster + 
0.03245181998921 * Marital_StatusDivorced + 0.29722741247663 * Marital_StatusMarried + 
-0.05683085497262 * Marital_StatusSingle + 0.27914630307932 * Marital_StatusTogether ;
186838    +   H12  = H12  +    -0.10709422401859 * Education2n_Cycle
186839    +          +     0.25457515905931 * EducationBasic  +    -0.26018740430941 *
186840    +        EducationGraduation  +     0.05808954602972 * EducationMaster
186841    +          +    -0.13095826187081 * Marital_StatusDivorced
186842    +          +     0.29509760197193 * Marital_StatusMarried
186843    +          +    -0.21019918550166 * Marital_StatusSingle
186844    +          +     0.12557122666089 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.10709422401859 * Education2n_Cycle + 0.25457515905931 * 
EducationBasic + -0.26018740430941 * EducationGraduation + 0.05808954602972 * EducationMaster 
+ -0.13095826187081 * Marital_StatusDivorced + 0.29509760197193 * Marital_StatusMarried + 
-0.21019918550166 * Marital_StatusSingle + 0.12557122666089 * Marital_StatusTogether ;
186845    +   H13  = H13  +     0.16189957128414 * Education2n_Cycle
186846    +          +    -0.08593025695878 * EducationBasic  +     0.11065463845302 *
186847    +        EducationGraduation  +    -0.23434271231945 * EducationMaster
186848    +          +     0.03746692643939 * Marital_StatusDivorced
186849    +          +     0.03482798841727 * Marital_StatusMarried
186850    +          +     0.16645207250571 * Marital_StatusSingle
186851    +          +    -0.40169040281111 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.16189957128414 * Education2n_Cycle + -0.08593025695878 * 
EducationBasic + 0.11065463845302 * EducationGraduation + -0.23434271231945 * EducationMaster 
+ 0.03746692643939 * Marital_StatusDivorced + 0.03482798841727 * Marital_StatusMarried + 
0.16645207250571 * Marital_StatusSingle + -0.40169040281111 * Marital_StatusTogether ;
186852    +   H14  = H14  +      0.0929589076858 * Education2n_Cycle
186853    +          +     0.17576896755796 * EducationBasic  +    -0.08548079761525 *
186854    +        EducationGraduation  +     -0.0086494793343 * EducationMaster
186855    +          +     -0.0753971504765 * Marital_StatusDivorced
186856    +          +     0.20446719655724 * Marital_StatusMarried
186857    +          +     0.21472836757686 * Marital_StatusSingle
186858    +          +     0.25097210445128 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.0929589076858 * Education2n_Cycle + 0.17576896755796 * 
EducationBasic + -0.08548079761525 * EducationGraduation + -0.0086494793343 * EducationMaster 
+ -0.0753971504765 * Marital_StatusDivorced + 0.20446719655724 * Marital_StatusMarried + 
0.21472836757686 * Marital_StatusSingle + 0.25097210445128 * Marital_StatusTogether ;
186859    +   H15  = H15  +     0.05613706593293 * Education2n_Cycle
186860    +          +     0.15733773983498 * EducationBasic  +     0.18710928885666 *
186861    +        EducationGraduation  +    -0.40226962940436 * EducationMaster
186862    +          +     0.16191937298215 * Marital_StatusDivorced
186863    +          +    -0.81780658848614 * Marital_StatusMarried
186864    +          +     0.84981159748349 * Marital_StatusSingle
186865    +          +    -0.81246154443713 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.05613706593293 * Education2n_Cycle + 0.15733773983498 * 
EducationBasic + 0.18710928885666 * EducationGraduation + -0.40226962940436 * EducationMaster 
+ 0.16191937298215 * Marital_StatusDivorced + -0.81780658848614 * Marital_StatusMarried + 
0.84981159748349 * Marital_StatusSingle + -0.81246154443713 * Marital_StatusTogether ;
186866    +   H16  = H16  +    -0.15143146742513 * Education2n_Cycle
186867    +          +    -0.32039616194876 * EducationBasic  +     0.14759493683433 *
186868    +        EducationGraduation  +    -0.24148020292763 * EducationMaster
186869    +          +    -0.01766312280073 * Marital_StatusDivorced
186870    +          +     0.04455346003394 * Marital_StatusMarried
186871    +          +    -0.05433982251127 * Marital_StatusSingle
186872    +          +     0.07585750304293 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H16 = H16 + -0.15143146742513 * Education2n_Cycle + -0.32039616194876 * 
EducationBasic + 0.14759493683433 * EducationGraduation + -0.24148020292763 * EducationMaster 
+ -0.01766312280073 * Marital_StatusDivorced + 0.04455346003394 * Marital_StatusMarried + 
-0.05433982251127 * Marital_StatusSingle + 0.07585750304293 * Marital_StatusTogether ;
186873    +   H17  = H17  +    -0.18844639887236 * Education2n_Cycle
186874    +          +     0.31793429928185 * EducationBasic  +     0.21885580860665 *
186875    +        EducationGraduation  +      0.1367538666381 * EducationMaster
186876    +          +        0.22905595967 * Marital_StatusDivorced
186877    +          +      0.1024998677695 * Marital_StatusMarried
186878    +          +    -0.07752101768018 * Marital_StatusSingle
186879    +          +    -0.19408218868635 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H17 = H17 + -0.18844639887236 * Education2n_Cycle + 0.31793429928185 * 
EducationBasic + 0.21885580860665 * EducationGraduation + 0.1367538666381 * EducationMaster + 
0.22905595967 * Marital_StatusDivorced + 0.1024998677695 * Marital_StatusMarried + 
-0.07752101768018 * Marital_StatusSingle + -0.19408218868635 * Marital_StatusTogether ;
186880    +   H11  =     1.31548476078312 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 1.31548476078312 + H11 ;
186881    +   H12  =     0.20389286508203 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.20389286508203 + H12 ;
186882    +   H13  =    -0.77820109969785 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.77820109969785 + H13 ;
186883    +   H14  =     0.85462770897247 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 0.85462770897247 + H14 ;
186884    +   H15  =    -0.15190484788676 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = -0.15190484788676 + H15 ;
186885    +   H16  =     -0.7146854381659 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = -0.7146854381659 + H16 ;
186886    +   H17  =    -1.06220893322882 + H17 ;
MPRINT(EM_DIAGRAM):   H17 = -1.06220893322882 + H17 ;
186887    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
186888    +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
186889    +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
186890    +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
186891    +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
186892    +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
186893    +   H17  = TANH(H17 );
MPRINT(EM_DIAGRAM):   H17 = TANH(H17 );
186894    +END;
MPRINT(EM_DIAGRAM):   END;
186895    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
186896    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
186897    +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
186898    +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
186899    +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
186900    +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
186901    +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
186902    +   H17  = .;
MPRINT(EM_DIAGRAM):   H17 = .;
186903    +END;
MPRINT(EM_DIAGRAM):   END;
186904    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
186905    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
186906    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
186907    +
186908    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
186909    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
186910    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
186911    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
186912    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
186913    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
186914    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
186915    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
186916    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
186917    +end;
MPRINT(EM_DIAGRAM):   end;
186918    +else do;
MPRINT(EM_DIAGRAM):   else do;
186919    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
186920    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
186921    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
186922    +   end;
MPRINT(EM_DIAGRAM):   end;
186923    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
186924    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
186925    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
186926    +   end;
MPRINT(EM_DIAGRAM):   end;
186927    +   else do;
MPRINT(EM_DIAGRAM):   else do;
186928    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
186929    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
186930    +   end;
MPRINT(EM_DIAGRAM):   end;
186931    +end;
MPRINT(EM_DIAGRAM):   end;
186932    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
186933    +   P_DepVar1  =    -0.11628699177184 * H11  +    -2.70843270240794 * H12
186934    +          +    -1.81814079406916 * H13  +    -1.84852165774564 * H14
186935    +          +     2.53533827620448 * H15  +    -0.20106950795136 * H16
186936    +          +     1.26058098194871 * H17 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.11628699177184 * H11 + -2.70843270240794 * H12 + 
-1.81814079406916 * H13 + -1.84852165774564 * H14 + 2.53533827620448 * H15 + -0.20106950795136 
* H16 + 1.26058098194871 * H17 ;
186937    +   P_DepVar1  =    -1.66152267043508 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.66152267043508 + P_DepVar1 ;
186938    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
186939    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
186940    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
186941    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
186942    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
186943    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
186944    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
186945    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
186946    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
186947    +END;
MPRINT(EM_DIAGRAM):   END;
186948    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
186949    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
186950    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
186951    +END;
MPRINT(EM_DIAGRAM):   END;
186952    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
186953    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
186954    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
186955    +END;
MPRINT(EM_DIAGRAM):   END;
186956    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
186957    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
186958    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
186959    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
186960    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
186961    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
186962    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
186963    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
186964    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
186965    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
186966    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
186967    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
186968    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
186969    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
186970    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
186971    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
186972    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
186973    +END;
MPRINT(EM_DIAGRAM):   END;
186974    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
186975    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
186976    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
186977    +drop
186978    +H11
186979    +H12
186980    +H13
186981    +H14
186982    +H15
186983    +H16
186984    +H17
186985    +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 H17 ;
186986    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
186987     run;

NOTE: DATA STEP view saved on file EMWS8.NEURAL36_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.META3_TRAIN.VIEW used (Total process time):
      real time           0.09 seconds
      cpu time            0.09 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.10 seconds
      cpu time            0.09 seconds
      

MPRINT(EM_DIAGRAM):   quit;
186988     quit;
186989     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
186990     filename emflow
186990   ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural36\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural36\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural36: Scoring VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
186991     *------------------------------------------------------------*;
186992     * Neural36: Scoring VALIDATE data;
186993     *------------------------------------------------------------*;
186994     data EMWS8.Neural36_VALIDATE
186995     / view=EMWS8.Neural36_VALIDATE
186996     ;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural36_VALIDATE / view=EMWS8.Neural36_VALIDATE ;
186997     set EMWS8.Meta3_VALIDATE
186998     ;
MPRINT(EM_DIAGRAM):   set EMWS8.Meta3_VALIDATE ;
186999     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Neural36\EMFLOWSCORE.sas.
187000    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
187001    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
187002    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
187003    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
187004    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
187005    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
187006    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
187007    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
187008    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
187009    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
187010    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
187011    +LENGTH _WARN_ $4
187012    +      F_DepVar  $ 12
187013    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
187014    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
187015    +
187016    +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
187017    +
187018    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
187019    +
187020    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
187021    +
187022    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
187023    +
187024    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
187025    +
187026    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
187027    +
187028    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
187029    +
187030    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
187031    +
187032    +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
187033    +
187034    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
187035    +
187036    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
187037    +
187038    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
187039    +
187040    +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
187041    +
187042    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
187043    +
187044    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
187045    +
187046    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
187047    +
187048    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
187049    +
187050    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
187051    +
187052    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
187053    +
187054    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
187055    +
187056    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
187057    +
187058    +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
187059    +
187060    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
187061    +
187062    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
187063    +
187064    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
187065    +
187066    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
187067    +
187068    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
187069    +
187070    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
187071    +
187072    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
187073    +
187074    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
187075    +
187076    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
187077    +
187078    +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
187079    +
187080    +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
187081    +
187082    +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
187083    +
187084    +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
187085    +
187086    +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
187087    +
187088    +      label H17 = 'Hidden: H1=7' ;
MPRINT(EM_DIAGRAM):   label H17 = 'Hidden: H1=7' ;
187089    +
187090    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
187091    +
187092    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
187093    +
187094    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
187095    +
187096    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
187097    +
187098    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
187099    +
187100    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
187101    +
187102    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
187103    +
187104    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
187105    +
187106    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
187107    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
187108    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
187109    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
187110    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
187111    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
187112    +end;
MPRINT(EM_DIAGRAM):   end;
187113    +else do;
MPRINT(EM_DIAGRAM):   else do;
187114    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
187115    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
187116    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
187117    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
187118    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
187119    +   end;
MPRINT(EM_DIAGRAM):   end;
187120    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
187121    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
187122    +   end;
MPRINT(EM_DIAGRAM):   end;
187123    +   else do;
MPRINT(EM_DIAGRAM):   else do;
187124    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
187125    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
187126    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
187127    +   end;
MPRINT(EM_DIAGRAM):   end;
187128    +end;
MPRINT(EM_DIAGRAM):   end;
187129    +
187130    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
187131    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
187132    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
187133    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
187134    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
187135    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
187136    +end;
MPRINT(EM_DIAGRAM):   end;
187137    +else do;
MPRINT(EM_DIAGRAM):   else do;
187138    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
187139    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
187140    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
187141    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
187142    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
187143    +   end;
MPRINT(EM_DIAGRAM):   end;
187144    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
187145    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
187146    +   end;
MPRINT(EM_DIAGRAM):   end;
187147    +   else do;
MPRINT(EM_DIAGRAM):   else do;
187148    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
187149    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
187150    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
187151    +   end;
MPRINT(EM_DIAGRAM):   end;
187152    +end;
MPRINT(EM_DIAGRAM):   end;
187153    +
187154    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
187155    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
187156    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
187157    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
187158    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
187159    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
187160    +end;
MPRINT(EM_DIAGRAM):   end;
187161    +else do;
MPRINT(EM_DIAGRAM):   else do;
187162    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
187163    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
187164    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
187165    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
187166    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
187167    +   end;
MPRINT(EM_DIAGRAM):   end;
187168    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
187169    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
187170    +   end;
MPRINT(EM_DIAGRAM):   end;
187171    +   else do;
MPRINT(EM_DIAGRAM):   else do;
187172    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
187173    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
187174    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
187175    +   end;
MPRINT(EM_DIAGRAM):   end;
187176    +end;
MPRINT(EM_DIAGRAM):   end;
187177    +
187178    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
187179    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
187180    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
187181    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
187182    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
187183    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
187184    +end;
MPRINT(EM_DIAGRAM):   end;
187185    +else do;
MPRINT(EM_DIAGRAM):   else do;
187186    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
187187    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
187188    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
187189    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
187190    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
187191    +   end;
MPRINT(EM_DIAGRAM):   end;
187192    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
187193    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
187194    +   end;
MPRINT(EM_DIAGRAM):   end;
187195    +   else do;
MPRINT(EM_DIAGRAM):   else do;
187196    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
187197    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
187198    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
187199    +   end;
MPRINT(EM_DIAGRAM):   end;
187200    +end;
MPRINT(EM_DIAGRAM):   end;
187201    +
187202    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
187203    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
187204    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
187205    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
187206    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
187207    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
187208    +end;
MPRINT(EM_DIAGRAM):   end;
187209    +else do;
MPRINT(EM_DIAGRAM):   else do;
187210    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
187211    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
187212    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
187213    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
187214    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
187215    +   end;
MPRINT(EM_DIAGRAM):   end;
187216    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
187217    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
187218    +   end;
MPRINT(EM_DIAGRAM):   end;
187219    +   else do;
MPRINT(EM_DIAGRAM):   else do;
187220    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
187221    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
187222    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
187223    +   end;
MPRINT(EM_DIAGRAM):   end;
187224    +end;
MPRINT(EM_DIAGRAM):   end;
187225    +
187226    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
187227    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
187228    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
187229    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
187230    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
187231    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
187232    +end;
MPRINT(EM_DIAGRAM):   end;
187233    +else do;
MPRINT(EM_DIAGRAM):   else do;
187234    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
187235    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
187236    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
187237    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
187238    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
187239    +   end;
MPRINT(EM_DIAGRAM):   end;
187240    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
187241    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
187242    +   end;
MPRINT(EM_DIAGRAM):   end;
187243    +   else do;
MPRINT(EM_DIAGRAM):   else do;
187244    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
187245    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
187246    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
187247    +   end;
MPRINT(EM_DIAGRAM):   end;
187248    +end;
MPRINT(EM_DIAGRAM):   end;
187249    +
187250    +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
187251    +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
187252    +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
187253    +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
187254    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
187255    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
187256    +end;
MPRINT(EM_DIAGRAM):   end;
187257    +else do;
MPRINT(EM_DIAGRAM):   else do;
187258    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
187259    +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
187260    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
187261    +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
187262    +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
187263    +   end;
MPRINT(EM_DIAGRAM):   end;
187264    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
187265    +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
187266    +   end;
MPRINT(EM_DIAGRAM):   end;
187267    +   else do;
MPRINT(EM_DIAGRAM):   else do;
187268    +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
187269    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
187270    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
187271    +   end;
MPRINT(EM_DIAGRAM):   end;
187272    +end;
MPRINT(EM_DIAGRAM):   end;
187273    +
187274    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
187275    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
187276    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
187277    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
187278    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
187279    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
187280    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
187281    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
187282    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
187283    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
187284    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
187285    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
187286    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
187287    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
187288    +end;
MPRINT(EM_DIAGRAM):   end;
187289    +else do;
MPRINT(EM_DIAGRAM):   else do;
187290    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
187291    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
187292    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
187293    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
187294    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
187295    +   end;
MPRINT(EM_DIAGRAM):   end;
187296    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
187297    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
187298    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
187299    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
187300    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
187301    +   end;
MPRINT(EM_DIAGRAM):   end;
187302    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
187303    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
187304    +   end;
MPRINT(EM_DIAGRAM):   end;
187305    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
187306    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
187307    +   end;
MPRINT(EM_DIAGRAM):   end;
187308    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
187309    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
187310    +   end;
MPRINT(EM_DIAGRAM):   end;
187311    +   else do;
MPRINT(EM_DIAGRAM):   else do;
187312    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
187313    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
187314    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
187315    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
187316    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
187317    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
187318    +   end;
MPRINT(EM_DIAGRAM):   end;
187319    +end;
MPRINT(EM_DIAGRAM):   end;
187320    +
187321    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
187322    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
187323    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
187324    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
187325    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
187326    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
187327    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
187328    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
187329    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
187330    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
187331    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
187332    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
187333    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
187334    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
187335    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
187336    +end;
MPRINT(EM_DIAGRAM):   end;
187337    +else do;
MPRINT(EM_DIAGRAM):   else do;
187338    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
187339    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
187340    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
187341    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
187342    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
187343    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
187344    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
187345    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
187346    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
187347    +         end;
MPRINT(EM_DIAGRAM):   end;
187348    +         else do;
MPRINT(EM_DIAGRAM):   else do;
187349    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
187350    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
187351    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
187352    +            end;
MPRINT(EM_DIAGRAM):   end;
187353    +         end;
MPRINT(EM_DIAGRAM):   end;
187354    +      end;
MPRINT(EM_DIAGRAM):   end;
187355    +      else do;
MPRINT(EM_DIAGRAM):   else do;
187356    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
187357    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
187358    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
187359    +         end;
MPRINT(EM_DIAGRAM):   end;
187360    +      end;
MPRINT(EM_DIAGRAM):   end;
187361    +   end;
MPRINT(EM_DIAGRAM):   end;
187362    +   else do;
MPRINT(EM_DIAGRAM):   else do;
187363    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
187364    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
187365    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
187366    +      end;
MPRINT(EM_DIAGRAM):   end;
187367    +      else do;
MPRINT(EM_DIAGRAM):   else do;
187368    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
187369    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
187370    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
187371    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
187372    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
187373    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
187374    +         end;
MPRINT(EM_DIAGRAM):   end;
187375    +      end;
MPRINT(EM_DIAGRAM):   end;
187376    +   end;
MPRINT(EM_DIAGRAM):   end;
187377    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
187378    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
187379    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
187380    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
187381    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
187382    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
187383    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
187384    +   end;
MPRINT(EM_DIAGRAM):   end;
187385    +end;
MPRINT(EM_DIAGRAM):   end;
187386    +
187387    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
187388    +*** Checking missing input Interval
187389    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
187390    +
187391    +IF NMISS(
187392    +   AcceptedCmpTotal ,
187393    +   Age ,
187394    +   Frq ,
187395    +   Income ,
187396    +   Kidhome ,
187397    +   MntFishProducts ,
187398    +   MntFruits ,
187399    +   MntGoldProds ,
187400    +   MntSweetProducts ,
187401    +   MonthsAsCustomer ,
187402    +   NumDealsPurchases ,
187403    +   NumWebVisitsMonth ,
187404    +   RFMstat ,
187405    +   RMntFrq ,
187406    +   Recency ,
187407    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , 
MntFishProducts , MntFruits , MntGoldProds , MntSweetProducts , MonthsAsCustomer , 
NumDealsPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , Teenhome ) THEN DO;
187408    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
187409    +
187410    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
187411    +END;
MPRINT(EM_DIAGRAM):   END;
187412    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
187413    +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
187414    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
187415    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
187416    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
187417    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
187418    +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
187419    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
187420    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
187421    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
187422    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
187423    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
187424    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
187425    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
187426    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
187427    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
187428    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
187429    +   S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
187430    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
187431    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
187432    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
187433    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
187434    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
187435    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
187436    +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
187437    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
187438    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
187439    +END;
MPRINT(EM_DIAGRAM):   END;
187440    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
187441    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
187442    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
187443    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
187444    +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
187445    +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
187446    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
187447    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
187448    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
187449    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
187450    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
187451    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
187452    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
187453    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
187454    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
187455    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
187456    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
187457    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
187458    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
187459    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
187460    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
187461    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
187462    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
187463    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
187464    +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
187465    +   ELSE S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
187466    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
187467    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
187468    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
187469    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
187470    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
187471    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
187472    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
187473    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
187474    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
187475    +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
187476    +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
187477    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
187478    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
187479    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
187480    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
187481    +END;
MPRINT(EM_DIAGRAM):   END;
187482    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
187483    +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
187484    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
187485    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
187486    +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
187487    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
187488    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
187489    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
187490    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
187491    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
187492    +   H11  =     0.36102409886134 * S_AcceptedCmpTotal  +     0.13395156650326 *
187493    +        S_Age  +    -0.24538302428059 * S_Frq  +    -0.11572058197557 *
187494    +        S_Income  +     0.21790378443814 * S_Kidhome
187495    +          +    -0.08134586316395 * S_MntFishProducts
187496    +          +     -0.2688648060203 * S_MntFruits  +    -0.25880035211038 *
187497    +        S_MntGoldProds  +     0.07531502626045 * S_MntSweetProducts
187498    +          +     0.21726816930291 * S_MonthsAsCustomer
187499    +          +    -0.21824241156847 * S_NumDealsPurchases
187500    +          +     0.07727563921761 * S_NumWebVisitsMonth
187501    +          +     0.09027808324069 * S_RFMstat  +     -0.0189462843628 *
187502    +        S_RMntFrq  +     0.15658915596853 * S_Recency
187503    +          +     0.18680606168417 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.36102409886134 * S_AcceptedCmpTotal + 0.13395156650326 * S_Age + 
-0.24538302428059 * S_Frq + -0.11572058197557 * S_Income + 0.21790378443814 * S_Kidhome + 
-0.08134586316395 * S_MntFishProducts + -0.2688648060203 * S_MntFruits + -0.25880035211038 * 
S_MntGoldProds + 0.07531502626045 * S_MntSweetProducts + 0.21726816930291 * S_MonthsAsCustomer 
+ -0.21824241156847 * S_NumDealsPurchases + 0.07727563921761 * S_NumWebVisitsMonth + 
0.09027808324069 * S_RFMstat + -0.0189462843628 * S_RMntFrq + 0.15658915596853 * S_Recency + 
0.18680606168417 * S_Teenhome ;
187504    +   H12  =    -0.50461866181934 * S_AcceptedCmpTotal  +     0.01266437730767 *
187505    +        S_Age  +     0.02534169432751 * S_Frq  +    -0.89441458532035 *
187506    +        S_Income  +    -0.51036141680293 * S_Kidhome
187507    +          +     0.10879858722875 * S_MntFishProducts
187508    +          +    -0.05639987269313 * S_MntFruits  +    -0.43702228668285 *
187509    +        S_MntGoldProds  +     0.18909754042399 * S_MntSweetProducts
187510    +          +    -0.11392977531374 * S_MonthsAsCustomer
187511    +          +     -0.5318843752274 * S_NumDealsPurchases
187512    +          +    -0.65796537312585 * S_NumWebVisitsMonth
187513    +          +    -0.29571612685484 * S_RFMstat  +     -0.0801458884647 *
187514    +        S_RMntFrq  +     0.73429478940872 * S_Recency
187515    +          +     0.28950334189528 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -0.50461866181934 * S_AcceptedCmpTotal + 0.01266437730767 * S_Age 
+ 0.02534169432751 * S_Frq + -0.89441458532035 * S_Income + -0.51036141680293 * S_Kidhome + 
0.10879858722875 * S_MntFishProducts + -0.05639987269313 * S_MntFruits + -0.43702228668285 * 
S_MntGoldProds + 0.18909754042399 * S_MntSweetProducts + -0.11392977531374 * 
S_MonthsAsCustomer + -0.5318843752274 * S_NumDealsPurchases + -0.65796537312585 * 
S_NumWebVisitsMonth + -0.29571612685484 * S_RFMstat + -0.0801458884647 * S_RMntFrq + 
0.73429478940872 * S_Recency + 0.28950334189528 * S_Teenhome ;
187516    +   H13  =    -0.22612994964695 * S_AcceptedCmpTotal  +     0.04392639924073 *
187517    +        S_Age  +     0.32974877429932 * S_Frq  +    -0.26990824722212 *
187518    +        S_Income  +     0.59254092901621 * S_Kidhome
187519    +          +    -0.20448500725841 * S_MntFishProducts
187520    +          +     0.09904900315476 * S_MntFruits  +     0.33085368683805 *
187521    +        S_MntGoldProds  +     0.19272280339022 * S_MntSweetProducts
187522    +          +     0.75084411765835 * S_MonthsAsCustomer
187523    +          +     -0.0387146296237 * S_NumDealsPurchases
187524    +          +    -0.28387522584505 * S_NumWebVisitsMonth
187525    +          +    -0.15204072409221 * S_RFMstat  +     0.09340123133096 *
187526    +        S_RMntFrq  +     0.82636976290684 * S_Recency
187527    +          +     0.37810091232378 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = -0.22612994964695 * S_AcceptedCmpTotal + 0.04392639924073 * S_Age 
+ 0.32974877429932 * S_Frq + -0.26990824722212 * S_Income + 0.59254092901621 * S_Kidhome + 
-0.20448500725841 * S_MntFishProducts + 0.09904900315476 * S_MntFruits + 0.33085368683805 * 
S_MntGoldProds + 0.19272280339022 * S_MntSweetProducts + 0.75084411765835 * S_MonthsAsCustomer 
+ -0.0387146296237 * S_NumDealsPurchases + -0.28387522584505 * S_NumWebVisitsMonth + 
-0.15204072409221 * S_RFMstat + 0.09340123133096 * S_RMntFrq + 0.82636976290684 * S_Recency + 
0.37810091232378 * S_Teenhome ;
187528    +   H14  =    -0.30228547708859 * S_AcceptedCmpTotal  +     0.03241560550242 *
187529    +        S_Age  +     0.84298653991521 * S_Frq  +     0.08457309547848 *
187530    +        S_Income  +    -0.00122834275949 * S_Kidhome
187531    +          +    -0.27566379985337 * S_MntFishProducts
187532    +          +     0.22439349557664 * S_MntFruits  +     -0.2238462316234 *
187533    +        S_MntGoldProds  +     0.10162320730644 * S_MntSweetProducts
187534    +          +    -0.04164317708211 * S_MonthsAsCustomer
187535    +          +    -0.69362879353268 * S_NumDealsPurchases
187536    +          +    -0.42590146496797 * S_NumWebVisitsMonth
187537    +          +    -0.14963136795323 * S_RFMstat  +    -0.12684701620224 *
187538    +        S_RMntFrq  +     0.84758472963267 * S_Recency
187539    +          +     0.11712588251204 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = -0.30228547708859 * S_AcceptedCmpTotal + 0.03241560550242 * S_Age 
+ 0.84298653991521 * S_Frq + 0.08457309547848 * S_Income + -0.00122834275949 * S_Kidhome + 
-0.27566379985337 * S_MntFishProducts + 0.22439349557664 * S_MntFruits + -0.2238462316234 * 
S_MntGoldProds + 0.10162320730644 * S_MntSweetProducts + -0.04164317708211 * 
S_MonthsAsCustomer + -0.69362879353268 * S_NumDealsPurchases + -0.42590146496797 * 
S_NumWebVisitsMonth + -0.14963136795323 * S_RFMstat + -0.12684701620224 * S_RMntFrq + 
0.84758472963267 * S_Recency + 0.11712588251204 * S_Teenhome ;
187540    +   H15  =    -0.07826142783822 * S_AcceptedCmpTotal  +     0.02869519269506 *
187541    +        S_Age  +     0.47709626753648 * S_Frq  +     0.77626478438802 *
187542    +        S_Income  +    -0.52116533001423 * S_Kidhome
187543    +          +     -0.0164127050263 * S_MntFishProducts
187544    +          +    -0.21044074963391 * S_MntFruits  +    -0.01106715629962 *
187545    +        S_MntGoldProds  +    -0.04742180634458 * S_MntSweetProducts
187546    +          +     0.24190773546087 * S_MonthsAsCustomer
187547    +          +    -0.20709839635746 * S_NumDealsPurchases
187548    +          +    -0.03892039672539 * S_NumWebVisitsMonth
187549    +          +     0.01844174922581 * S_RFMstat  +     0.33852543335405 *
187550    +        S_RMntFrq  +    -0.44935213795722 * S_Recency
187551    +          +     -0.6298368435821 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H15 = -0.07826142783822 * S_AcceptedCmpTotal + 0.02869519269506 * S_Age 
+ 0.47709626753648 * S_Frq + 0.77626478438802 * S_Income + -0.52116533001423 * S_Kidhome + 
-0.0164127050263 * S_MntFishProducts + -0.21044074963391 * S_MntFruits + -0.01106715629962 * 
S_MntGoldProds + -0.04742180634458 * S_MntSweetProducts + 0.24190773546087 * 
S_MonthsAsCustomer + -0.20709839635746 * S_NumDealsPurchases + -0.03892039672539 * 
S_NumWebVisitsMonth + 0.01844174922581 * S_RFMstat + 0.33852543335405 * S_RMntFrq + 
-0.44935213795722 * S_Recency + -0.6298368435821 * S_Teenhome ;
187552    +   H16  =    -0.38278200147216 * S_AcceptedCmpTotal  +     0.10976543329989 *
187553    +        S_Age  +    -0.17634499366273 * S_Frq  +    -0.00464219628456 *
187554    +        S_Income  +     0.02656798188894 * S_Kidhome
187555    +          +     0.30126647035438 * S_MntFishProducts
187556    +          +    -0.15329042297108 * S_MntFruits  +     0.34485619618635 *
187557    +        S_MntGoldProds  +    -0.02131109278943 * S_MntSweetProducts
187558    +          +     0.02225077975252 * S_MonthsAsCustomer
187559    +          +    -0.25574607065737 * S_NumDealsPurchases
187560    +          +    -0.17649073415066 * S_NumWebVisitsMonth
187561    +          +    -0.05940264496746 * S_RFMstat  +    -0.10060551243835 *
187562    +        S_RMntFrq  +    -0.26823576982436 * S_Recency
187563    +          +    -0.02089829217347 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H16 = -0.38278200147216 * S_AcceptedCmpTotal + 0.10976543329989 * S_Age 
+ -0.17634499366273 * S_Frq + -0.00464219628456 * S_Income + 0.02656798188894 * S_Kidhome + 
0.30126647035438 * S_MntFishProducts + -0.15329042297108 * S_MntFruits + 0.34485619618635 * 
S_MntGoldProds + -0.02131109278943 * S_MntSweetProducts + 0.02225077975252 * 
S_MonthsAsCustomer + -0.25574607065737 * S_NumDealsPurchases + -0.17649073415066 * 
S_NumWebVisitsMonth + -0.05940264496746 * S_RFMstat + -0.10060551243835 * S_RMntFrq + 
-0.26823576982436 * S_Recency + -0.02089829217347 * S_Teenhome ;
187564    +   H17  =     0.19294816663728 * S_AcceptedCmpTotal  +    -0.36492507147362 *
187565    +        S_Age  +     -0.5026822541815 * S_Frq  +    -0.48143237402929 *
187566    +        S_Income  +     0.24859715564668 * S_Kidhome
187567    +          +    -0.25170385966484 * S_MntFishProducts
187568    +          +     0.32613161868695 * S_MntFruits  +     0.13394374893255 *
187569    +        S_MntGoldProds  +     0.48416151380913 * S_MntSweetProducts
187570    +          +     0.05219342683802 * S_MonthsAsCustomer
187571    +          +     0.43291262348863 * S_NumDealsPurchases
187572    +          +     0.56350506449265 * S_NumWebVisitsMonth
187573    +          +     0.07050038692379 * S_RFMstat  +     0.09321760948671 *
187574    +        S_RMntFrq  +      -0.582152401129 * S_Recency
187575    +          +     0.37123217787922 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H17 = 0.19294816663728 * S_AcceptedCmpTotal + -0.36492507147362 * S_Age 
+ -0.5026822541815 * S_Frq + -0.48143237402929 * S_Income + 0.24859715564668 * S_Kidhome + 
-0.25170385966484 * S_MntFishProducts + 0.32613161868695 * S_MntFruits + 0.13394374893255 * 
S_MntGoldProds + 0.48416151380913 * S_MntSweetProducts + 0.05219342683802 * S_MonthsAsCustomer 
+ 0.43291262348863 * S_NumDealsPurchases + 0.56350506449265 * S_NumWebVisitsMonth + 
0.07050038692379 * S_RFMstat + 0.09321760948671 * S_RMntFrq + -0.582152401129 * S_Recency + 
0.37123217787922 * S_Teenhome ;
187576    +   H11  = H11  +     0.19124500210188 * AcceptedCmp10
187577    +          +    -0.07164186578541 * AcceptedCmp20  +     0.21783016367597 *
187578    +        AcceptedCmp30  +     0.21148394728435 * AcceptedCmp40
187579    +          +    -0.03026880266191 * AcceptedCmp50  +    -0.07201946966594 *
187580    +        Complain0  +     0.01809478462337 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.19124500210188 * AcceptedCmp10 + -0.07164186578541 * 
AcceptedCmp20 + 0.21783016367597 * AcceptedCmp30 + 0.21148394728435 * AcceptedCmp40 + 
-0.03026880266191 * AcceptedCmp50 + -0.07201946966594 * Complain0 + 0.01809478462337 * 
HigherEducationBinary0 ;
187581    +   H12  = H12  +    -0.08224648561215 * AcceptedCmp10
187582    +          +    -0.04262229291512 * AcceptedCmp20  +     0.31730600734378 *
187583    +        AcceptedCmp30  +    -0.50103336510524 * AcceptedCmp40
187584    +          +     0.14654032457963 * AcceptedCmp50  +     -0.3081029727525 *
187585    +        Complain0  +     0.33420373179467 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.08224648561215 * AcceptedCmp10 + -0.04262229291512 * 
AcceptedCmp20 + 0.31730600734378 * AcceptedCmp30 + -0.50103336510524 * AcceptedCmp40 + 
0.14654032457963 * AcceptedCmp50 + -0.3081029727525 * Complain0 + 0.33420373179467 * 
HigherEducationBinary0 ;
187586    +   H13  = H13  +     -0.2675286852338 * AcceptedCmp10
187587    +          +     0.00293684627092 * AcceptedCmp20  +     0.17042784679702 *
187588    +        AcceptedCmp30  +    -0.03300348487228 * AcceptedCmp40
187589    +          +     0.18139562224546 * AcceptedCmp50  +     -0.5876653777255 *
187590    +        Complain0  +      -0.348312724013 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.2675286852338 * AcceptedCmp10 + 0.00293684627092 * 
AcceptedCmp20 + 0.17042784679702 * AcceptedCmp30 + -0.03300348487228 * AcceptedCmp40 + 
0.18139562224546 * AcceptedCmp50 + -0.5876653777255 * Complain0 + -0.348312724013 * 
HigherEducationBinary0 ;
187591    +   H14  = H14  +     0.62345895952335 * AcceptedCmp10
187592    +          +     0.06420128732689 * AcceptedCmp20  +     0.32944172885024 *
187593    +        AcceptedCmp30  +    -0.04719511461619 * AcceptedCmp40
187594    +          +     0.61833640682482 * AcceptedCmp50  +     -0.0006656764006 *
187595    +        Complain0  +    -0.12356778452039 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.62345895952335 * AcceptedCmp10 + 0.06420128732689 * 
AcceptedCmp20 + 0.32944172885024 * AcceptedCmp30 + -0.04719511461619 * AcceptedCmp40 + 
0.61833640682482 * AcceptedCmp50 + -0.0006656764006 * Complain0 + -0.12356778452039 * 
HigherEducationBinary0 ;
187596    +   H15  = H15  +    -0.43202592233127 * AcceptedCmp10
187597    +          +    -0.35346067325701 * AcceptedCmp20  +    -0.29446055239371 *
187598    +        AcceptedCmp30  +     -0.6355060868005 * AcceptedCmp40
187599    +          +     0.08763000125481 * AcceptedCmp50  +    -0.55439066852712 *
187600    +        Complain0  +     0.37078134908454 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + -0.43202592233127 * AcceptedCmp10 + -0.35346067325701 * 
AcceptedCmp20 + -0.29446055239371 * AcceptedCmp30 + -0.6355060868005 * AcceptedCmp40 + 
0.08763000125481 * AcceptedCmp50 + -0.55439066852712 * Complain0 + 0.37078134908454 * 
HigherEducationBinary0 ;
187601    +   H16  = H16  +    -0.10522820178908 * AcceptedCmp10
187602    +          +     0.20645125728354 * AcceptedCmp20  +     0.34040121966792 *
187603    +        AcceptedCmp30  +    -0.02259616994399 * AcceptedCmp40
187604    +          +    -0.22123397523195 * AcceptedCmp50  +    -0.37258892216723 *
187605    +        Complain0  +     0.14107103807235 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H16 = H16 + -0.10522820178908 * AcceptedCmp10 + 0.20645125728354 * 
AcceptedCmp20 + 0.34040121966792 * AcceptedCmp30 + -0.02259616994399 * AcceptedCmp40 + 
-0.22123397523195 * AcceptedCmp50 + -0.37258892216723 * Complain0 + 0.14107103807235 * 
HigherEducationBinary0 ;
187606    +   H17  = H17  +    -0.09096203784003 * AcceptedCmp10
187607    +          +    -0.04735484605229 * AcceptedCmp20  +     -0.4485810761844 *
187608    +        AcceptedCmp30  +     0.10362320405529 * AcceptedCmp40
187609    +          +    -0.05214433990448 * AcceptedCmp50  +    -0.19339827696554 *
187610    +        Complain0  +    -0.21246690264814 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H17 = H17 + -0.09096203784003 * AcceptedCmp10 + -0.04735484605229 * 
AcceptedCmp20 + -0.4485810761844 * AcceptedCmp30 + 0.10362320405529 * AcceptedCmp40 + 
-0.05214433990448 * AcceptedCmp50 + -0.19339827696554 * Complain0 + -0.21246690264814 * 
HigherEducationBinary0 ;
187611    +   H11  = H11  +    -0.16759278562529 * Education2n_Cycle
187612    +          +    -0.31449574789464 * EducationBasic  +     0.13281408830843 *
187613    +        EducationGraduation  +      0.0199258483942 * EducationMaster
187614    +          +     0.03245181998921 * Marital_StatusDivorced
187615    +          +     0.29722741247663 * Marital_StatusMarried
187616    +          +    -0.05683085497262 * Marital_StatusSingle
187617    +          +     0.27914630307932 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.16759278562529 * Education2n_Cycle + -0.31449574789464 * 
EducationBasic + 0.13281408830843 * EducationGraduation + 0.0199258483942 * EducationMaster + 
0.03245181998921 * Marital_StatusDivorced + 0.29722741247663 * Marital_StatusMarried + 
-0.05683085497262 * Marital_StatusSingle + 0.27914630307932 * Marital_StatusTogether ;
187618    +   H12  = H12  +    -0.10709422401859 * Education2n_Cycle
187619    +          +     0.25457515905931 * EducationBasic  +    -0.26018740430941 *
187620    +        EducationGraduation  +     0.05808954602972 * EducationMaster
187621    +          +    -0.13095826187081 * Marital_StatusDivorced
187622    +          +     0.29509760197193 * Marital_StatusMarried
187623    +          +    -0.21019918550166 * Marital_StatusSingle
187624    +          +     0.12557122666089 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.10709422401859 * Education2n_Cycle + 0.25457515905931 * 
EducationBasic + -0.26018740430941 * EducationGraduation + 0.05808954602972 * EducationMaster 
+ -0.13095826187081 * Marital_StatusDivorced + 0.29509760197193 * Marital_StatusMarried + 
-0.21019918550166 * Marital_StatusSingle + 0.12557122666089 * Marital_StatusTogether ;
187625    +   H13  = H13  +     0.16189957128414 * Education2n_Cycle
187626    +          +    -0.08593025695878 * EducationBasic  +     0.11065463845302 *
187627    +        EducationGraduation  +    -0.23434271231945 * EducationMaster
187628    +          +     0.03746692643939 * Marital_StatusDivorced
187629    +          +     0.03482798841727 * Marital_StatusMarried
187630    +          +     0.16645207250571 * Marital_StatusSingle
187631    +          +    -0.40169040281111 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.16189957128414 * Education2n_Cycle + -0.08593025695878 * 
EducationBasic + 0.11065463845302 * EducationGraduation + -0.23434271231945 * EducationMaster 
+ 0.03746692643939 * Marital_StatusDivorced + 0.03482798841727 * Marital_StatusMarried + 
0.16645207250571 * Marital_StatusSingle + -0.40169040281111 * Marital_StatusTogether ;
187632    +   H14  = H14  +      0.0929589076858 * Education2n_Cycle
187633    +          +     0.17576896755796 * EducationBasic  +    -0.08548079761525 *
187634    +        EducationGraduation  +     -0.0086494793343 * EducationMaster
187635    +          +     -0.0753971504765 * Marital_StatusDivorced
187636    +          +     0.20446719655724 * Marital_StatusMarried
187637    +          +     0.21472836757686 * Marital_StatusSingle
187638    +          +     0.25097210445128 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.0929589076858 * Education2n_Cycle + 0.17576896755796 * 
EducationBasic + -0.08548079761525 * EducationGraduation + -0.0086494793343 * EducationMaster 
+ -0.0753971504765 * Marital_StatusDivorced + 0.20446719655724 * Marital_StatusMarried + 
0.21472836757686 * Marital_StatusSingle + 0.25097210445128 * Marital_StatusTogether ;
187639    +   H15  = H15  +     0.05613706593293 * Education2n_Cycle
187640    +          +     0.15733773983498 * EducationBasic  +     0.18710928885666 *
187641    +        EducationGraduation  +    -0.40226962940436 * EducationMaster
187642    +          +     0.16191937298215 * Marital_StatusDivorced
187643    +          +    -0.81780658848614 * Marital_StatusMarried
187644    +          +     0.84981159748349 * Marital_StatusSingle
187645    +          +    -0.81246154443713 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.05613706593293 * Education2n_Cycle + 0.15733773983498 * 
EducationBasic + 0.18710928885666 * EducationGraduation + -0.40226962940436 * EducationMaster 
+ 0.16191937298215 * Marital_StatusDivorced + -0.81780658848614 * Marital_StatusMarried + 
0.84981159748349 * Marital_StatusSingle + -0.81246154443713 * Marital_StatusTogether ;
187646    +   H16  = H16  +    -0.15143146742513 * Education2n_Cycle
187647    +          +    -0.32039616194876 * EducationBasic  +     0.14759493683433 *
187648    +        EducationGraduation  +    -0.24148020292763 * EducationMaster
187649    +          +    -0.01766312280073 * Marital_StatusDivorced
187650    +          +     0.04455346003394 * Marital_StatusMarried
187651    +          +    -0.05433982251127 * Marital_StatusSingle
187652    +          +     0.07585750304293 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H16 = H16 + -0.15143146742513 * Education2n_Cycle + -0.32039616194876 * 
EducationBasic + 0.14759493683433 * EducationGraduation + -0.24148020292763 * EducationMaster 
+ -0.01766312280073 * Marital_StatusDivorced + 0.04455346003394 * Marital_StatusMarried + 
-0.05433982251127 * Marital_StatusSingle + 0.07585750304293 * Marital_StatusTogether ;
187653    +   H17  = H17  +    -0.18844639887236 * Education2n_Cycle
187654    +          +     0.31793429928185 * EducationBasic  +     0.21885580860665 *
187655    +        EducationGraduation  +      0.1367538666381 * EducationMaster
187656    +          +        0.22905595967 * Marital_StatusDivorced
187657    +          +      0.1024998677695 * Marital_StatusMarried
187658    +          +    -0.07752101768018 * Marital_StatusSingle
187659    +          +    -0.19408218868635 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H17 = H17 + -0.18844639887236 * Education2n_Cycle + 0.31793429928185 * 
EducationBasic + 0.21885580860665 * EducationGraduation + 0.1367538666381 * EducationMaster + 
0.22905595967 * Marital_StatusDivorced + 0.1024998677695 * Marital_StatusMarried + 
-0.07752101768018 * Marital_StatusSingle + -0.19408218868635 * Marital_StatusTogether ;
187660    +   H11  =     1.31548476078312 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 1.31548476078312 + H11 ;
187661    +   H12  =     0.20389286508203 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.20389286508203 + H12 ;
187662    +   H13  =    -0.77820109969785 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.77820109969785 + H13 ;
187663    +   H14  =     0.85462770897247 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 0.85462770897247 + H14 ;
187664    +   H15  =    -0.15190484788676 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = -0.15190484788676 + H15 ;
187665    +   H16  =     -0.7146854381659 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = -0.7146854381659 + H16 ;
187666    +   H17  =    -1.06220893322882 + H17 ;
MPRINT(EM_DIAGRAM):   H17 = -1.06220893322882 + H17 ;
187667    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
187668    +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
187669    +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
187670    +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
187671    +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
187672    +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
187673    +   H17  = TANH(H17 );
MPRINT(EM_DIAGRAM):   H17 = TANH(H17 );
187674    +END;
MPRINT(EM_DIAGRAM):   END;
187675    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
187676    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
187677    +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
187678    +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
187679    +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
187680    +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
187681    +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
187682    +   H17  = .;
MPRINT(EM_DIAGRAM):   H17 = .;
187683    +END;
MPRINT(EM_DIAGRAM):   END;
187684    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
187685    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
187686    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
187687    +
187688    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
187689    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
187690    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
187691    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
187692    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
187693    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
187694    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
187695    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
187696    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
187697    +end;
MPRINT(EM_DIAGRAM):   end;
187698    +else do;
MPRINT(EM_DIAGRAM):   else do;
187699    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
187700    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
187701    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
187702    +   end;
MPRINT(EM_DIAGRAM):   end;
187703    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
187704    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
187705    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
187706    +   end;
MPRINT(EM_DIAGRAM):   end;
187707    +   else do;
MPRINT(EM_DIAGRAM):   else do;
187708    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
187709    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
187710    +   end;
MPRINT(EM_DIAGRAM):   end;
187711    +end;
MPRINT(EM_DIAGRAM):   end;
187712    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
187713    +   P_DepVar1  =    -0.11628699177184 * H11  +    -2.70843270240794 * H12
187714    +          +    -1.81814079406916 * H13  +    -1.84852165774564 * H14
187715    +          +     2.53533827620448 * H15  +    -0.20106950795136 * H16
187716    +          +     1.26058098194871 * H17 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.11628699177184 * H11 + -2.70843270240794 * H12 + 
-1.81814079406916 * H13 + -1.84852165774564 * H14 + 2.53533827620448 * H15 + -0.20106950795136 
* H16 + 1.26058098194871 * H17 ;
187717    +   P_DepVar1  =    -1.66152267043508 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.66152267043508 + P_DepVar1 ;
187718    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
187719    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
187720    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
187721    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
187722    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
187723    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
187724    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
187725    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
187726    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
187727    +END;
MPRINT(EM_DIAGRAM):   END;
187728    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
187729    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
187730    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
187731    +END;
MPRINT(EM_DIAGRAM):   END;
187732    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
187733    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
187734    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
187735    +END;
MPRINT(EM_DIAGRAM):   END;
187736    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
187737    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
187738    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
187739    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
187740    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
187741    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
187742    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
187743    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
187744    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
187745    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
187746    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
187747    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
187748    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
187749    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
187750    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
187751    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
187752    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
187753    +END;
MPRINT(EM_DIAGRAM):   END;
187754    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
187755    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
187756    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
187757    +drop
187758    +H11
187759    +H12
187760    +H13
187761    +H14
187762    +H15
187763    +H16
187764    +H17
187765    +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 H17 ;
187766    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
187767     run;

NOTE: DATA STEP view saved on file EMWS8.NEURAL36_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.META3_VALIDATE.VIEW used (Total process time):
      real time           0.09 seconds
      cpu time            0.09 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.10 seconds
      cpu time            0.10 seconds
      

MPRINT(EM_DIAGRAM):   quit;
187768     quit;
187769     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
187770     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
187771     * Neural36: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * Neural36: Computing metadata for TRAIN data;
187772     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;

NOTE: View EMWS8.NEURAL36_TRAIN.VIEW used (Total process time):
      real time           0.29 seconds
      cpu time            0.07 seconds
      
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural36\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS8.Neural36_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS8.Neural36_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS8.Neural36_TRAIN out=WORK.M2_2SCSR noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2_2SCSR;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20 
INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M2_2SCSR(keep=name type length label format formatl 
formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then format = strip(format)!!strip(put(formatl, 
best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, 
best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then informat = 
strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, 
best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2_2SCSR;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M2_2SCSR;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M1JM4I4W NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1JM4I4W;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M1JM4I4W;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0_RP0T_(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M1JM4I4W;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1JM4I4W;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 
FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M1JM4I4W;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" 
"MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" 
"QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" "YEAR" "YYMMDD" "YYMON" 
"YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" 
"EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) 
formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = 
"DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) 
formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" 
"NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" 
"SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = 
"DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then 
level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 
'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 
'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ 
('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 
'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 
'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1JM4I4W;
MPRINT(EMADVISECOLUMNS):   set WORK.M1JM4I4W;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= 
"Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= 
"Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower limit" UPPERLIMIT= 
"Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= 
"Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Meta3_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Meta3_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural36_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT 
LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "Neural36";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("DEPVAR") model = "Neural36";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural36: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
188076     data EMWS8.Neural36_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS8.Neural36_EMINFO;
188077     length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
188078     input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
188079     cards;
MPRINT(EM_DIAGRAM):   cards;

NOTE: The data set EMWS8.NEURAL36_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   run;
188083     run;
188084     proc sort data = EMWS8.Neural36_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS8.Neural36_EMINFO NOTHREADS;
188085     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
188086     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.NEURAL36_EMINFO.
NOTE: The data set EMWS8.NEURAL36_EMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

188087     proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
188088     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
188089     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set EMWS8.FIMPORT_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 1 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

188090     proc sort data = EMWS8.Neural36_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS8.Neural36_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
188091     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
188092     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 3 observations read from the data set EMWS8.NEURAL36_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

188093     data EMWS8.Neural36_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural36_EMINFO;
188094     merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
188095     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
188096     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 3 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS8.NEURAL36_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

188097     proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
188098     delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
188099     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
188100     quit;
MPRINT(EM_DIAGRAM):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

NOTE: View EMWS8.NEURAL36_TRAIN.VIEW used (Total process time):
      real time           0.07 seconds
      cpu time            0.07 seconds
      
NOTE: View EMWS8.NEURAL36_VALIDATE.VIEW used (Total process time):
      real time           0.07 seconds
      cpu time            0.07 seconds
      
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
