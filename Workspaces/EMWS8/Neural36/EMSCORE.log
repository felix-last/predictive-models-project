MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "28. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "20.05 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                28. April 2016
Time:                20.05 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O0H7L_W0 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural36\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O0H7L_W0 new;
MPRINT(EM_DIAGRAM):   run;
812032     data work.outkey;
MPRINT(EM_DIAGRAM):    data work.outkey;
812033     set EMWS8.Neural36_OUTKEY;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural36_OUTKEY;
812034     if upcase(ROLE) = 'HIDDEN';
MPRINT(EM_DIAGRAM):   if upcase(ROLE) = 'HIDDEN';
812035     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 31 observations read from the data set EMWS8.NEURAL36_OUTKEY.
NOTE: The data set WORK.OUTKEY has 7 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

812036     filename emflow
812036   ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural36\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural36\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural36: Scoring DATA data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
812037     *------------------------------------------------------------*;
812038     * Neural36: Scoring DATA data;
812039     *------------------------------------------------------------*;
812040     data EMWS8.Neural36_TRAIN
812041     / view=EMWS8.Neural36_TRAIN
812042     ;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural36_TRAIN / view=EMWS8.Neural36_TRAIN ;
812043     set EMWS8.Meta3_TRAIN
812044     ;
MPRINT(EM_DIAGRAM):   set EMWS8.Meta3_TRAIN ;
812045     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Neural36\EMFLOWSCORE.sas.
812046    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
812047    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
812048    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
812049    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
812050    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
812051    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
812052    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
812053    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
812054    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
812055    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
812056    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
812057    +LENGTH _WARN_ $4
812058    +      F_DepVar  $ 12
812059    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
812060    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
812061    +
812062    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
812063    +
812064    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
812065    +
812066    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
812067    +
812068    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
812069    +
812070    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
812071    +
812072    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
812073    +
812074    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
812075    +
812076    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
812077    +
812078    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
812079    +
812080    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
812081    +
812082    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
812083    +
812084    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
812085    +
812086    +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
812087    +
812088    +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
812089    +
812090    +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
812091    +
812092    +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
812093    +
812094    +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
812095    +
812096    +      label H17 = 'Hidden: H1=7' ;
MPRINT(EM_DIAGRAM):   label H17 = 'Hidden: H1=7' ;
812097    +
812098    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
812099    +
812100    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
812101    +
812102    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
812103    +
812104    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
812105    +
812106    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
812107    +
812108    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
812109    +
812110    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
812111    +
812112    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
812113    +
812114    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
812115    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
812116    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
812117    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
812118    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
812119    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
812120    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
812121    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
812122    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
812123    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
812124    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
812125    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
812126    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
812127    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
812128    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
812129    +end;
MPRINT(EM_DIAGRAM):   end;
812130    +else do;
MPRINT(EM_DIAGRAM):   else do;
812131    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
812132    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
812133    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
812134    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
812135    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
812136    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
812137    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
812138    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
812139    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
812140    +         end;
MPRINT(EM_DIAGRAM):   end;
812141    +         else do;
MPRINT(EM_DIAGRAM):   else do;
812142    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
812143    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
812144    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
812145    +            end;
MPRINT(EM_DIAGRAM):   end;
812146    +         end;
MPRINT(EM_DIAGRAM):   end;
812147    +      end;
MPRINT(EM_DIAGRAM):   end;
812148    +      else do;
MPRINT(EM_DIAGRAM):   else do;
812149    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
812150    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
812151    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
812152    +         end;
MPRINT(EM_DIAGRAM):   end;
812153    +      end;
MPRINT(EM_DIAGRAM):   end;
812154    +   end;
MPRINT(EM_DIAGRAM):   end;
812155    +   else do;
MPRINT(EM_DIAGRAM):   else do;
812156    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
812157    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
812158    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
812159    +      end;
MPRINT(EM_DIAGRAM):   end;
812160    +      else do;
MPRINT(EM_DIAGRAM):   else do;
812161    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
812162    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
812163    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
812164    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
812165    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
812166    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
812167    +         end;
MPRINT(EM_DIAGRAM):   end;
812168    +      end;
MPRINT(EM_DIAGRAM):   end;
812169    +   end;
MPRINT(EM_DIAGRAM):   end;
812170    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
812171    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
812172    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
812173    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
812174    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
812175    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
812176    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
812177    +   end;
MPRINT(EM_DIAGRAM):   end;
812178    +end;
MPRINT(EM_DIAGRAM):   end;
812179    +
812180    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
812181    +*** Checking missing input Interval
812182    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
812183    +
812184    +IF NMISS(
812185    +   AcceptedCmpTotal ,
812186    +   Frq ,
812187    +   Mnt ,
812188    +   MntMeatProducts ,
812189    +   NumCatalogPurchases ,
812190    +   NumDealsPurchases ,
812191    +   NumWebVisitsMonth ,
812192    +   Recency   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Mnt , MntMeatProducts , 
NumCatalogPurchases , NumDealsPurchases , NumWebVisitsMonth , Recency ) THEN DO;
812193    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
812194    +
812195    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
812196    +END;
MPRINT(EM_DIAGRAM):   END;
812197    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
812198    +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
812199    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
812200    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
812201    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
812202    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
812203    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
812204    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
812205    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
812206    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
812207    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
812208    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
812209    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
812210    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
812211    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
812212    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
812213    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
812214    +END;
MPRINT(EM_DIAGRAM):   END;
812215    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
812216    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
812217    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
812218    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
812219    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
812220    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
812221    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
812222    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
812223    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
812224    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
812225    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
The SAS System

MntMeatProducts ;
812226    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
812227    +   ELSE S_NumCatalogPurchases
812228    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
812229    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
812230    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
812231    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
812232    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
812233    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
812234    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
812235    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
812236    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
812237    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
812238    +END;
MPRINT(EM_DIAGRAM):   END;
812239    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
812240    +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
812241    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
812242    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
812243    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
812244    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
812245    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
812246    +   H11  =    -0.13927969047531 * S_AcceptedCmpTotal  +    -0.63180331858997 *
812247    +        S_Frq  +     0.64218193404925 * S_Mnt  +    -1.09018159995832 *
812248    +        S_MntMeatProducts  +     -0.0525140711481 * S_NumCatalogPurchases
812249    +          +     0.54227053816028 * S_NumDealsPurchases
812250    +          +    -0.72067392363133 * S_NumWebVisitsMonth
812251    +          +     1.97836772832458 * S_Recency ;
MPRINT(EM_DIAGRAM):   H11 = -0.13927969047531 * S_AcceptedCmpTotal + -0.63180331858997 * S_Frq 
+ 0.64218193404925 * S_Mnt + -1.09018159995832 * S_MntMeatProducts + -0.0525140711481 * 
S_NumCatalogPurchases + 0.54227053816028 * S_NumDealsPurchases + -0.72067392363133 * 
S_NumWebVisitsMonth + 1.97836772832458 * S_Recency ;
812252    +   H12  =      0.7201127764608 * S_AcceptedCmpTotal  +      -0.249227931932 *
812253    +        S_Frq  +     0.09529654212208 * S_Mnt  +     0.71215113531886 *
812254    +        S_MntMeatProducts  +     0.42797461401557 * S_NumCatalogPurchases
812255    +          +     0.72213774326416 * S_NumDealsPurchases
812256    +          +     0.82635861527041 * S_NumWebVisitsMonth
812257    +          +    -1.15716240400951 * S_Recency ;
MPRINT(EM_DIAGRAM):   H12 = 0.7201127764608 * S_AcceptedCmpTotal + -0.249227931932 * S_Frq + 
0.09529654212208 * S_Mnt + 0.71215113531886 * S_MntMeatProducts + 0.42797461401557 * 
S_NumCatalogPurchases + 0.72213774326416 * S_NumDealsPurchases + 0.82635861527041 * 
S_NumWebVisitsMonth + -1.15716240400951 * S_Recency ;
812258    +   H13  =    -0.47733798336023 * S_AcceptedCmpTotal  +     1.77772008360582 *
812259    +        S_Frq  +     0.74015836577273 * S_Mnt  +    -2.09802242783455 *
812260    +        S_MntMeatProducts  +     -2.0604713665217 * S_NumCatalogPurchases
812261    +          +    -0.43212551045752 * S_NumDealsPurchases
812262    +          +    -0.64430159163369 * S_NumWebVisitsMonth
812263    +          +     0.20699064954569 * S_Recency ;
MPRINT(EM_DIAGRAM):   H13 = -0.47733798336023 * S_AcceptedCmpTotal + 1.77772008360582 * S_Frq 
+ 0.74015836577273 * S_Mnt + -2.09802242783455 * S_MntMeatProducts + -2.0604713665217 * 
S_NumCatalogPurchases + -0.43212551045752 * S_NumDealsPurchases + -0.64430159163369 * 
S_NumWebVisitsMonth + 0.20699064954569 * S_Recency ;
812264    +   H14  =    -0.04912516108169 * S_AcceptedCmpTotal  +    -0.39920729213556 *
812265    +        S_Frq  +     1.28832230193431 * S_Mnt  +     2.49097094540063 *
812266    +        S_MntMeatProducts  +     -0.7345287027769 * S_NumCatalogPurchases
812267    +          +    -0.23499091401918 * S_NumDealsPurchases
812268    +          +    -0.29217361533329 * S_NumWebVisitsMonth
812269    +          +     0.22725296423105 * S_Recency ;
MPRINT(EM_DIAGRAM):   H14 = -0.04912516108169 * S_AcceptedCmpTotal + -0.39920729213556 * S_Frq 
+ 1.28832230193431 * S_Mnt + 2.49097094540063 * S_MntMeatProducts + -0.7345287027769 * 
S_NumCatalogPurchases + -0.23499091401918 * S_NumDealsPurchases + -0.29217361533329 * 
S_NumWebVisitsMonth + 0.22725296423105 * S_Recency ;
812270    +   H15  =    -0.57086204432891 * S_AcceptedCmpTotal  +      0.8778230694935 *
812271    +        S_Frq  +     1.15312235467448 * S_Mnt  +    -0.44668500784663 *
812272    +        S_MntMeatProducts  +    -0.46898396140615 * S_NumCatalogPurchases
812273    +          +      0.5266291220003 * S_NumDealsPurchases
812274    +          +    -0.96300834305482 * S_NumWebVisitsMonth
812275    +          +     0.68179956103907 * S_Recency ;
MPRINT(EM_DIAGRAM):   H15 = -0.57086204432891 * S_AcceptedCmpTotal + 0.8778230694935 * S_Frq + 
1.15312235467448 * S_Mnt + -0.44668500784663 * S_MntMeatProducts + -0.46898396140615 * 
S_NumCatalogPurchases + 0.5266291220003 * S_NumDealsPurchases + -0.96300834305482 * 
S_NumWebVisitsMonth + 0.68179956103907 * S_Recency ;
812276    +   H16  =    -0.50509061578538 * S_AcceptedCmpTotal  +    -0.06382263258739 *
812277    +        S_Frq  +    -0.20684681067061 * S_Mnt  +     -0.1723653611643 *
812278    +        S_MntMeatProducts  +    -0.55341696140251 * S_NumCatalogPurchases
812279    +          +     0.21407658568759 * S_NumDealsPurchases
812280    +          +    -0.30230445007862 * S_NumWebVisitsMonth
812281    +          +      0.8763809622949 * S_Recency ;
MPRINT(EM_DIAGRAM):   H16 = -0.50509061578538 * S_AcceptedCmpTotal + -0.06382263258739 * S_Frq 
+ -0.20684681067061 * S_Mnt + -0.1723653611643 * S_MntMeatProducts + -0.55341696140251 * 
S_NumCatalogPurchases + 0.21407658568759 * S_NumDealsPurchases + -0.30230445007862 * 
S_NumWebVisitsMonth + 0.8763809622949 * S_Recency ;
812282    +   H17  =    -0.20843198902717 * S_AcceptedCmpTotal  +     1.47593020659154 *
812283    +        S_Frq  +      2.2391730772085 * S_Mnt  +    -1.96971925461337 *
812284    +        S_MntMeatProducts  +    -1.33493636985909 * S_NumCatalogPurchases
812285    +          +    -0.71262860060777 * S_NumDealsPurchases
812286    +          +    -0.16003262475714 * S_NumWebVisitsMonth
812287    +          +     0.30492086974514 * S_Recency ;
MPRINT(EM_DIAGRAM):   H17 = -0.20843198902717 * S_AcceptedCmpTotal + 1.47593020659154 * S_Frq 
+ 2.2391730772085 * S_Mnt + -1.96971925461337 * S_MntMeatProducts + -1.33493636985909 * 
S_NumCatalogPurchases + -0.71262860060777 * S_NumDealsPurchases + -0.16003262475714 * 
S_NumWebVisitsMonth + 0.30492086974514 * S_Recency ;
812288    +   H11  = H11  +    -0.59867776291698 * Marital_StatusDivorced
812289    +          +    -0.77289864882405 * Marital_StatusMarried
812290    +          +    -1.04792470584913 * Marital_StatusSingle
812291    +          +     1.78644715155531 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.59867776291698 * Marital_StatusDivorced + 
-0.77289864882405 * Marital_StatusMarried + -1.04792470584913 * Marital_StatusSingle + 
1.78644715155531 * Marital_StatusTogether ;
812292    +   H12  = H12  +     -0.5766498657478 * Marital_StatusDivorced
812293    +          +    -0.58699647015827 * Marital_StatusMarried
812294    +          +    -1.45685449315382 * Marital_StatusSingle
812295    +          +    -0.57773394015054 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.5766498657478 * Marital_StatusDivorced + 
-0.58699647015827 * Marital_StatusMarried + -1.45685449315382 * Marital_StatusSingle + 
-0.57773394015054 * Marital_StatusTogether ;
812296    +   H13  = H13  +    -0.53037191026882 * Marital_StatusDivorced
812297    +          +    -0.61402763409667 * Marital_StatusMarried
812298    +          +    -0.94454892723651 * Marital_StatusSingle
812299    +          +    -1.16354372572715 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.53037191026882 * Marital_StatusDivorced + 
-0.61402763409667 * Marital_StatusMarried + -0.94454892723651 * Marital_StatusSingle + 
-1.16354372572715 * Marital_StatusTogether ;
812300    +   H14  = H14  +    -0.13873258987154 * Marital_StatusDivorced
812301    +          +     1.36531646228763 * Marital_StatusMarried
812302    +          +     0.56507141025345 * Marital_StatusSingle
812303    +          +     1.07733975152905 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.13873258987154 * Marital_StatusDivorced + 
1.36531646228763 * Marital_StatusMarried + 0.56507141025345 * Marital_StatusSingle + 
1.07733975152905 * Marital_StatusTogether ;
812304    +   H15  = H15  +    -1.08382106670561 * Marital_StatusDivorced
812305    +          +     0.86517922699299 * Marital_StatusMarried
812306    +          +    -0.25270268615277 * Marital_StatusSingle
812307    +          +     1.41323475133006 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + -1.08382106670561 * Marital_StatusDivorced + 
0.86517922699299 * Marital_StatusMarried + -0.25270268615277 * Marital_StatusSingle + 
1.41323475133006 * Marital_StatusTogether ;
812308    +   H16  = H16  +     0.68313126007351 * Marital_StatusDivorced
812309    +          +     0.84688769440997 * Marital_StatusMarried
812310    +          +     -0.9162090616438 * Marital_StatusSingle
812311    +          +     0.19067350568292 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.68313126007351 * Marital_StatusDivorced + 0.84688769440997 
* Marital_StatusMarried + -0.9162090616438 * Marital_StatusSingle + 0.19067350568292 * 
Marital_StatusTogether ;
812312    +   H17  = H17  +    -0.35311007430456 * Marital_StatusDivorced
812313    +          +     0.25385556802402 * Marital_StatusMarried
812314    +          +     0.06295540442756 * Marital_StatusSingle
812315    +          +     -0.0369190740933 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H17 = H17 + -0.35311007430456 * Marital_StatusDivorced + 
0.25385556802402 * Marital_StatusMarried + 0.06295540442756 * Marital_StatusSingle + 
-0.0369190740933 * Marital_StatusTogether ;
812316    +   H11  =     0.91888530169708 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 0.91888530169708 + H11 ;
812317    +   H12  =    -1.87691251344908 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -1.87691251344908 + H12 ;
812318    +   H13  =     0.67176027494579 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = 0.67176027494579 + H13 ;
812319    +   H14  =     1.36219597555353 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 1.36219597555353 + H14 ;
812320    +   H15  =    -1.22230644761539 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = -1.22230644761539 + H15 ;
812321    +   H16  =      2.6660042377591 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = 2.6660042377591 + H16 ;
812322    +   H17  =     1.41738058573685 + H17 ;
MPRINT(EM_DIAGRAM):   H17 = 1.41738058573685 + H17 ;
812323    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
812324    +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
812325    +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
812326    +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
812327    +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
812328    +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
812329    +   H17  = TANH(H17 );
MPRINT(EM_DIAGRAM):   H17 = TANH(H17 );
812330    +END;
MPRINT(EM_DIAGRAM):   END;
812331    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
812332    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
812333    +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
812334    +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
812335    +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
812336    +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
812337    +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
812338    +   H17  = .;
MPRINT(EM_DIAGRAM):   H17 = .;
812339    +END;
MPRINT(EM_DIAGRAM):   END;
812340    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
812341    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
812342    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
812343    +
812344    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
812345    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
812346    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
812347    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
812348    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
812349    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
812350    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
812351    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
812352    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
812353    +end;
MPRINT(EM_DIAGRAM):   end;
812354    +else do;
MPRINT(EM_DIAGRAM):   else do;
812355    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
812356    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
812357    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
812358    +   end;
MPRINT(EM_DIAGRAM):   end;
812359    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
812360    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
812361    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
812362    +   end;
MPRINT(EM_DIAGRAM):   end;
812363    +   else do;
MPRINT(EM_DIAGRAM):   else do;
812364    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
812365    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
812366    +   end;
MPRINT(EM_DIAGRAM):   end;
812367    +end;
MPRINT(EM_DIAGRAM):   end;
812368    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
812369    +   P_DepVar1  =    -1.56163309380633 * H11  +     2.99475736269426 * H12
812370    +          +    -3.38085392764162 * H13  +     2.44315909437251 * H14
812371    +          +    -4.58905802620352 * H15  +    -5.85802056442644 * H16
812372    +          +    -3.34899990325235 * H17 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.56163309380633 * H11 + 2.99475736269426 * H12 + 
-3.38085392764162 * H13 + 2.44315909437251 * H14 + -4.58905802620352 * H15 + -5.85802056442644 
* H16 + -3.34899990325235 * H17 ;
812373    +   P_DepVar1  =     1.13403274907418 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 1.13403274907418 + P_DepVar1 ;
812374    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
812375    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
812376    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
812377    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
812378    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
812379    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
812380    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
812381    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
812382    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
812383    +END;
MPRINT(EM_DIAGRAM):   END;
812384    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
812385    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
812386    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
812387    +END;
MPRINT(EM_DIAGRAM):   END;
812388    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
812389    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
812390    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
812391    +END;
MPRINT(EM_DIAGRAM):   END;
812392    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
812393    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
812394    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
812395    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
812396    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
812397    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
812398    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
812399    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
812400    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
812401    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
812402    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
812403    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
812404    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
812405    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
812406    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
812407    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
812408    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
812409    +END;
MPRINT(EM_DIAGRAM):   END;
812410    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
812411    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
812412    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
812413    +drop
812414    +H11
812415    +H12
812416    +H13
812417    +H14
812418    +H15
812419    +H16
812420    +H17
812421    +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 H17 ;
812422    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
812423     run;

NOTE: DATA STEP view saved on file EMWS8.NEURAL36_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.META3_TRAIN.VIEW used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
812424     quit;
812425     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
812426     filename emflow
812426   ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural36\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural36\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural36: Scoring VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
812427     *------------------------------------------------------------*;
812428     * Neural36: Scoring VALIDATE data;
812429     *------------------------------------------------------------*;
812430     data EMWS8.Neural36_VALIDATE
812431     / view=EMWS8.Neural36_VALIDATE
812432     ;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural36_VALIDATE / view=EMWS8.Neural36_VALIDATE ;
812433     set EMWS8.Meta3_VALIDATE
812434     ;
MPRINT(EM_DIAGRAM):   set EMWS8.Meta3_VALIDATE ;
812435     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Neural36\EMFLOWSCORE.sas.
812436    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
812437    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
812438    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
812439    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
812440    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
812441    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
812442    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
812443    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
812444    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
812445    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
812446    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
812447    +LENGTH _WARN_ $4
812448    +      F_DepVar  $ 12
812449    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
812450    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
812451    +
812452    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
812453    +
812454    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
812455    +
812456    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
812457    +
812458    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
812459    +
812460    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
812461    +
812462    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
812463    +
812464    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
812465    +
812466    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
812467    +
812468    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
812469    +
812470    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
812471    +
812472    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
812473    +
812474    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
812475    +
812476    +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
812477    +
812478    +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
812479    +
812480    +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
812481    +
812482    +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
812483    +
812484    +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
812485    +
812486    +      label H17 = 'Hidden: H1=7' ;
MPRINT(EM_DIAGRAM):   label H17 = 'Hidden: H1=7' ;
812487    +
812488    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
812489    +
812490    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
812491    +
812492    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
812493    +
812494    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
812495    +
812496    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
812497    +
812498    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
812499    +
812500    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
812501    +
812502    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
812503    +
812504    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
812505    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
812506    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
812507    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
812508    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
812509    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
812510    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
812511    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
812512    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
812513    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
812514    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
812515    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
812516    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
812517    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
812518    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
812519    +end;
MPRINT(EM_DIAGRAM):   end;
812520    +else do;
MPRINT(EM_DIAGRAM):   else do;
812521    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
812522    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
812523    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
812524    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
812525    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
812526    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
812527    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
812528    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
812529    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
812530    +         end;
MPRINT(EM_DIAGRAM):   end;
812531    +         else do;
MPRINT(EM_DIAGRAM):   else do;
812532    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
812533    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
812534    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
812535    +            end;
MPRINT(EM_DIAGRAM):   end;
812536    +         end;
MPRINT(EM_DIAGRAM):   end;
812537    +      end;
MPRINT(EM_DIAGRAM):   end;
812538    +      else do;
MPRINT(EM_DIAGRAM):   else do;
812539    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
812540    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
812541    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
812542    +         end;
MPRINT(EM_DIAGRAM):   end;
812543    +      end;
MPRINT(EM_DIAGRAM):   end;
812544    +   end;
MPRINT(EM_DIAGRAM):   end;
812545    +   else do;
MPRINT(EM_DIAGRAM):   else do;
812546    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
812547    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
812548    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
812549    +      end;
MPRINT(EM_DIAGRAM):   end;
812550    +      else do;
MPRINT(EM_DIAGRAM):   else do;
812551    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
812552    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
812553    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
812554    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
812555    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
812556    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
812557    +         end;
MPRINT(EM_DIAGRAM):   end;
812558    +      end;
MPRINT(EM_DIAGRAM):   end;
812559    +   end;
MPRINT(EM_DIAGRAM):   end;
812560    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
812561    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
812562    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
812563    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
812564    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
812565    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
812566    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
812567    +   end;
MPRINT(EM_DIAGRAM):   end;
812568    +end;
MPRINT(EM_DIAGRAM):   end;
812569    +
812570    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
812571    +*** Checking missing input Interval
812572    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
812573    +
812574    +IF NMISS(
812575    +   AcceptedCmpTotal ,
812576    +   Frq ,
812577    +   Mnt ,
812578    +   MntMeatProducts ,
812579    +   NumCatalogPurchases ,
812580    +   NumDealsPurchases ,
812581    +   NumWebVisitsMonth ,
812582    +   Recency   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Mnt , MntMeatProducts , 
NumCatalogPurchases , NumDealsPurchases , NumWebVisitsMonth , Recency ) THEN DO;
812583    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
812584    +
812585    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
812586    +END;
MPRINT(EM_DIAGRAM):   END;
812587    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
812588    +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
812589    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
812590    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
812591    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
812592    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
812593    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
812594    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
812595    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
812596    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
812597    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
812598    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
812599    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
812600    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
812601    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
812602    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
812603    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
812604    +END;
MPRINT(EM_DIAGRAM):   END;
812605    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
812606    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
812607    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
812608    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
812609    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
812610    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
812611    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
812612    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
812613    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
812614    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
812615    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
812616    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
812617    +   ELSE S_NumCatalogPurchases
812618    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
812619    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
812620    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
812621    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
812622    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
812623    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
812624    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
812625    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
812626    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
812627    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
812628    +END;
MPRINT(EM_DIAGRAM):   END;
812629    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
812630    +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
812631    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
812632    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
812633    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
812634    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
812635    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
812636    +   H11  =    -0.13927969047531 * S_AcceptedCmpTotal  +    -0.63180331858997 *
812637    +        S_Frq  +     0.64218193404925 * S_Mnt  +    -1.09018159995832 *
812638    +        S_MntMeatProducts  +     -0.0525140711481 * S_NumCatalogPurchases
812639    +          +     0.54227053816028 * S_NumDealsPurchases
812640    +          +    -0.72067392363133 * S_NumWebVisitsMonth
812641    +          +     1.97836772832458 * S_Recency ;
MPRINT(EM_DIAGRAM):   H11 = -0.13927969047531 * S_AcceptedCmpTotal + -0.63180331858997 * S_Frq 
+ 0.64218193404925 * S_Mnt + -1.09018159995832 * S_MntMeatProducts + -0.0525140711481 * 
S_NumCatalogPurchases + 0.54227053816028 * S_NumDealsPurchases + -0.72067392363133 * 
S_NumWebVisitsMonth + 1.97836772832458 * S_Recency ;
812642    +   H12  =      0.7201127764608 * S_AcceptedCmpTotal  +      -0.249227931932 *
812643    +        S_Frq  +     0.09529654212208 * S_Mnt  +     0.71215113531886 *
812644    +        S_MntMeatProducts  +     0.42797461401557 * S_NumCatalogPurchases
812645    +          +     0.72213774326416 * S_NumDealsPurchases
812646    +          +     0.82635861527041 * S_NumWebVisitsMonth
812647    +          +    -1.15716240400951 * S_Recency ;
MPRINT(EM_DIAGRAM):   H12 = 0.7201127764608 * S_AcceptedCmpTotal + -0.249227931932 * S_Frq + 
0.09529654212208 * S_Mnt + 0.71215113531886 * S_MntMeatProducts + 0.42797461401557 * 
S_NumCatalogPurchases + 0.72213774326416 * S_NumDealsPurchases + 0.82635861527041 * 
S_NumWebVisitsMonth + -1.15716240400951 * S_Recency ;
812648    +   H13  =    -0.47733798336023 * S_AcceptedCmpTotal  +     1.77772008360582 *
812649    +        S_Frq  +     0.74015836577273 * S_Mnt  +    -2.09802242783455 *
812650    +        S_MntMeatProducts  +     -2.0604713665217 * S_NumCatalogPurchases
812651    +          +    -0.43212551045752 * S_NumDealsPurchases
812652    +          +    -0.64430159163369 * S_NumWebVisitsMonth
812653    +          +     0.20699064954569 * S_Recency ;
MPRINT(EM_DIAGRAM):   H13 = -0.47733798336023 * S_AcceptedCmpTotal + 1.77772008360582 * S_Frq 
+ 0.74015836577273 * S_Mnt + -2.09802242783455 * S_MntMeatProducts + -2.0604713665217 * 
S_NumCatalogPurchases + -0.43212551045752 * S_NumDealsPurchases + -0.64430159163369 * 
S_NumWebVisitsMonth + 0.20699064954569 * S_Recency ;
812654    +   H14  =    -0.04912516108169 * S_AcceptedCmpTotal  +    -0.39920729213556 *
812655    +        S_Frq  +     1.28832230193431 * S_Mnt  +     2.49097094540063 *
812656    +        S_MntMeatProducts  +     -0.7345287027769 * S_NumCatalogPurchases
812657    +          +    -0.23499091401918 * S_NumDealsPurchases
812658    +          +    -0.29217361533329 * S_NumWebVisitsMonth
812659    +          +     0.22725296423105 * S_Recency ;
MPRINT(EM_DIAGRAM):   H14 = -0.04912516108169 * S_AcceptedCmpTotal + -0.39920729213556 * S_Frq 
+ 1.28832230193431 * S_Mnt + 2.49097094540063 * S_MntMeatProducts + -0.7345287027769 * 
S_NumCatalogPurchases + -0.23499091401918 * S_NumDealsPurchases + -0.29217361533329 * 
S_NumWebVisitsMonth + 0.22725296423105 * S_Recency ;
812660    +   H15  =    -0.57086204432891 * S_AcceptedCmpTotal  +      0.8778230694935 *
812661    +        S_Frq  +     1.15312235467448 * S_Mnt  +    -0.44668500784663 *
812662    +        S_MntMeatProducts  +    -0.46898396140615 * S_NumCatalogPurchases
812663    +          +      0.5266291220003 * S_NumDealsPurchases
812664    +          +    -0.96300834305482 * S_NumWebVisitsMonth
812665    +          +     0.68179956103907 * S_Recency ;
MPRINT(EM_DIAGRAM):   H15 = -0.57086204432891 * S_AcceptedCmpTotal + 0.8778230694935 * S_Frq + 
1.15312235467448 * S_Mnt + -0.44668500784663 * S_MntMeatProducts + -0.46898396140615 * 
S_NumCatalogPurchases + 0.5266291220003 * S_NumDealsPurchases + -0.96300834305482 * 
S_NumWebVisitsMonth + 0.68179956103907 * S_Recency ;
812666    +   H16  =    -0.50509061578538 * S_AcceptedCmpTotal  +    -0.06382263258739 *
812667    +        S_Frq  +    -0.20684681067061 * S_Mnt  +     -0.1723653611643 *
812668    +        S_MntMeatProducts  +    -0.55341696140251 * S_NumCatalogPurchases
812669    +          +     0.21407658568759 * S_NumDealsPurchases
812670    +          +    -0.30230445007862 * S_NumWebVisitsMonth
812671    +          +      0.8763809622949 * S_Recency ;
MPRINT(EM_DIAGRAM):   H16 = -0.50509061578538 * S_AcceptedCmpTotal + -0.06382263258739 * S_Frq 
+ -0.20684681067061 * S_Mnt + -0.1723653611643 * S_MntMeatProducts + -0.55341696140251 * 
S_NumCatalogPurchases + 0.21407658568759 * S_NumDealsPurchases + -0.30230445007862 * 
S_NumWebVisitsMonth + 0.8763809622949 * S_Recency ;
812672    +   H17  =    -0.20843198902717 * S_AcceptedCmpTotal  +     1.47593020659154 *
812673    +        S_Frq  +      2.2391730772085 * S_Mnt  +    -1.96971925461337 *
812674    +        S_MntMeatProducts  +    -1.33493636985909 * S_NumCatalogPurchases
812675    +          +    -0.71262860060777 * S_NumDealsPurchases
812676    +          +    -0.16003262475714 * S_NumWebVisitsMonth
812677    +          +     0.30492086974514 * S_Recency ;
MPRINT(EM_DIAGRAM):   H17 = -0.20843198902717 * S_AcceptedCmpTotal + 1.47593020659154 * S_Frq 
+ 2.2391730772085 * S_Mnt + -1.96971925461337 * S_MntMeatProducts + -1.33493636985909 * 
S_NumCatalogPurchases + -0.71262860060777 * S_NumDealsPurchases + -0.16003262475714 * 
S_NumWebVisitsMonth + 0.30492086974514 * S_Recency ;
812678    +   H11  = H11  +    -0.59867776291698 * Marital_StatusDivorced
812679    +          +    -0.77289864882405 * Marital_StatusMarried
812680    +          +    -1.04792470584913 * Marital_StatusSingle
812681    +          +     1.78644715155531 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.59867776291698 * Marital_StatusDivorced + 
-0.77289864882405 * Marital_StatusMarried + -1.04792470584913 * Marital_StatusSingle + 
1.78644715155531 * Marital_StatusTogether ;
812682    +   H12  = H12  +     -0.5766498657478 * Marital_StatusDivorced
812683    +          +    -0.58699647015827 * Marital_StatusMarried
812684    +          +    -1.45685449315382 * Marital_StatusSingle
812685    +          +    -0.57773394015054 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.5766498657478 * Marital_StatusDivorced + 
-0.58699647015827 * Marital_StatusMarried + -1.45685449315382 * Marital_StatusSingle + 
-0.57773394015054 * Marital_StatusTogether ;
812686    +   H13  = H13  +    -0.53037191026882 * Marital_StatusDivorced
812687    +          +    -0.61402763409667 * Marital_StatusMarried
812688    +          +    -0.94454892723651 * Marital_StatusSingle
812689    +          +    -1.16354372572715 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.53037191026882 * Marital_StatusDivorced + 
-0.61402763409667 * Marital_StatusMarried + -0.94454892723651 * Marital_StatusSingle + 
-1.16354372572715 * Marital_StatusTogether ;
812690    +   H14  = H14  +    -0.13873258987154 * Marital_StatusDivorced
812691    +          +     1.36531646228763 * Marital_StatusMarried
812692    +          +     0.56507141025345 * Marital_StatusSingle
812693    +          +     1.07733975152905 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.13873258987154 * Marital_StatusDivorced + 
1.36531646228763 * Marital_StatusMarried + 0.56507141025345 * Marital_StatusSingle + 
1.07733975152905 * Marital_StatusTogether ;
812694    +   H15  = H15  +    -1.08382106670561 * Marital_StatusDivorced
812695    +          +     0.86517922699299 * Marital_StatusMarried
812696    +          +    -0.25270268615277 * Marital_StatusSingle
812697    +          +     1.41323475133006 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + -1.08382106670561 * Marital_StatusDivorced + 
0.86517922699299 * Marital_StatusMarried + -0.25270268615277 * Marital_StatusSingle + 
1.41323475133006 * Marital_StatusTogether ;
812698    +   H16  = H16  +     0.68313126007351 * Marital_StatusDivorced
812699    +          +     0.84688769440997 * Marital_StatusMarried
812700    +          +     -0.9162090616438 * Marital_StatusSingle
812701    +          +     0.19067350568292 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.68313126007351 * Marital_StatusDivorced + 0.84688769440997 
* Marital_StatusMarried + -0.9162090616438 * Marital_StatusSingle + 0.19067350568292 * 
Marital_StatusTogether ;
812702    +   H17  = H17  +    -0.35311007430456 * Marital_StatusDivorced
812703    +          +     0.25385556802402 * Marital_StatusMarried
812704    +          +     0.06295540442756 * Marital_StatusSingle
812705    +          +     -0.0369190740933 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H17 = H17 + -0.35311007430456 * Marital_StatusDivorced + 
0.25385556802402 * Marital_StatusMarried + 0.06295540442756 * Marital_StatusSingle + 
-0.0369190740933 * Marital_StatusTogether ;
812706    +   H11  =     0.91888530169708 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 0.91888530169708 + H11 ;
812707    +   H12  =    -1.87691251344908 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -1.87691251344908 + H12 ;
812708    +   H13  =     0.67176027494579 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = 0.67176027494579 + H13 ;
812709    +   H14  =     1.36219597555353 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 1.36219597555353 + H14 ;
812710    +   H15  =    -1.22230644761539 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = -1.22230644761539 + H15 ;
812711    +   H16  =      2.6660042377591 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = 2.6660042377591 + H16 ;
812712    +   H17  =     1.41738058573685 + H17 ;
MPRINT(EM_DIAGRAM):   H17 = 1.41738058573685 + H17 ;
812713    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
812714    +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
812715    +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
812716    +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
812717    +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
812718    +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
812719    +   H17  = TANH(H17 );
MPRINT(EM_DIAGRAM):   H17 = TANH(H17 );
812720    +END;
MPRINT(EM_DIAGRAM):   END;
812721    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
812722    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
812723    +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
812724    +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
812725    +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
812726    +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
812727    +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
812728    +   H17  = .;
MPRINT(EM_DIAGRAM):   H17 = .;
812729    +END;
MPRINT(EM_DIAGRAM):   END;
812730    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
812731    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
812732    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
812733    +
812734    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
812735    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
812736    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
812737    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
812738    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
812739    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
812740    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
812741    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
812742    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
812743    +end;
MPRINT(EM_DIAGRAM):   end;
812744    +else do;
MPRINT(EM_DIAGRAM):   else do;
812745    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
812746    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
812747    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
812748    +   end;
MPRINT(EM_DIAGRAM):   end;
812749    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
812750    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
812751    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
812752    +   end;
MPRINT(EM_DIAGRAM):   end;
812753    +   else do;
MPRINT(EM_DIAGRAM):   else do;
812754    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
812755    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
812756    +   end;
MPRINT(EM_DIAGRAM):   end;
812757    +end;
MPRINT(EM_DIAGRAM):   end;
812758    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
812759    +   P_DepVar1  =    -1.56163309380633 * H11  +     2.99475736269426 * H12
812760    +          +    -3.38085392764162 * H13  +     2.44315909437251 * H14
812761    +          +    -4.58905802620352 * H15  +    -5.85802056442644 * H16
812762    +          +    -3.34899990325235 * H17 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.56163309380633 * H11 + 2.99475736269426 * H12 + 
-3.38085392764162 * H13 + 2.44315909437251 * H14 + -4.58905802620352 * H15 + -5.85802056442644 
* H16 + -3.34899990325235 * H17 ;
812763    +   P_DepVar1  =     1.13403274907418 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 1.13403274907418 + P_DepVar1 ;
812764    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
812765    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
812766    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
812767    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
812768    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
812769    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
812770    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
812771    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
812772    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
812773    +END;
MPRINT(EM_DIAGRAM):   END;
812774    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
812775    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
812776    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
812777    +END;
MPRINT(EM_DIAGRAM):   END;
812778    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
812779    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
812780    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
812781    +END;
MPRINT(EM_DIAGRAM):   END;
812782    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
812783    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
812784    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
812785    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
812786    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
812787    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
812788    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
812789    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
812790    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
812791    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
812792    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
812793    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
812794    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
812795    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
812796    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
812797    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
812798    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
812799    +END;
MPRINT(EM_DIAGRAM):   END;
812800    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
812801    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
812802    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
812803    +drop
812804    +H11
812805    +H12
812806    +H13
812807    +H14
812808    +H15
812809    +H16
812810    +H17
812811    +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 H17 ;
812812    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
812813     run;

NOTE: DATA STEP view saved on file EMWS8.NEURAL36_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.META3_VALIDATE.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
812814     quit;
812815     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
812816     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
812817     * Neural36: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * Neural36: Computing metadata for TRAIN data;
812818     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;

NOTE: View EMWS8.NEURAL36_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural36\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS8.Neural36_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS8.Neural36_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS8.Neural36_TRAIN out=WORK.M358XR4T noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M358XR4T;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20 
INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M358XR4T(keep=name type length label format formatl 
formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then format = strip(format)!!strip(put(formatl, 
best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, 
best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then informat = 
strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, 
best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M358XR4T;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M358XR4T;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M1T8TJB7 NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1T8TJB7;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M1T8TJB7;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M18AM7E_(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M1T8TJB7;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1T8TJB7;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 
FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M1T8TJB7;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" 
"MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" 
"QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" "YEAR" "YYMMDD" "YYMON" 
"YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" 
"EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) 
formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = 
"DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) 
formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" 
"NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" 
"SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = 
"DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then 
level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 
'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 
'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ 
('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 
'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 
'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1T8TJB7;
MPRINT(EMADVISECOLUMNS):   set WORK.M1T8TJB7;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= 
"Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= 
"Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower limit" UPPERLIMIT= 
"Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= 
"Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Meta3_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Meta3_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural36_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT 
LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "Neural36";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("P_DEPVAR1") creator = "Neural36";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR1") creator = "Neural36";
MPRINT(EM_DIAGRAM):   when("P_DEPVAR0") creator = "Neural36";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR0") creator = "Neural36";
MPRINT(EM_DIAGRAM):   when("F_DEPVAR") creator = "Neural36";
MPRINT(EM_DIAGRAM):   when("I_DEPVAR") creator = "Neural36";
MPRINT(EM_DIAGRAM):   when("U_DEPVAR") creator = "Neural36";
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "Neural36";
MPRINT(EM_DIAGRAM):   when("DEPVAR") model = "Neural36";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural36: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
813130     data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
813131     set EMWS8.Neural36_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural36_EMINFO;
813132     where DATA='Neural36' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='Neural36' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 
'MODEL');
813133     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.NEURAL36_EMINFO.
      WHERE (DATA='Neural36') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

813134     data EMWS8.Neural36_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS8.Neural36_EMINFO;
813135     length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
813136     input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
813137     cards;
MPRINT(EM_DIAGRAM):   cards;

NOTE: The data set EMWS8.NEURAL36_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   run;
813141     run;
813142     data EMWS8.Neural36_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural36_EMINFO;
813143     set EMWS8.Neural36_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural36_EMINFO WORK.MODELTEMP_INFO;
813144     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.NEURAL36_EMINFO.
NOTE: There were 0 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS8.NEURAL36_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

813145     proc sort data = EMWS8.Neural36_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.Neural36_EMINFO NOTHREADS;
813146     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
813147     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.NEURAL36_EMINFO.
NOTE: The data set EMWS8.NEURAL36_EMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

813148     proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
813149     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
813150     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set EMWS8.FIMPORT_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 1 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

813151     proc sort data = EMWS8.Neural36_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS8.Neural36_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
813152     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
813153     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 3 observations read from the data set EMWS8.NEURAL36_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

813154     data EMWS8.Neural36_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural36_EMINFO;
813155     merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
813156     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
813157     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 3 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS8.NEURAL36_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

813158     proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
813159     delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
813160     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
813161     quit;
MPRINT(EM_DIAGRAM):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

NOTE: View EMWS8.NEURAL36_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
NOTE: View EMWS8.NEURAL36_VALIDATE.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
