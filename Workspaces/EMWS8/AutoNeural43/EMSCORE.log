MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "28. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "19.50 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                28. April 2016
Time:                19.50 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O1YPCFLX 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural43\EMSCORE.out" encoding="UTF-8" 
NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O1YPCFLX new;
MPRINT(EM_DIAGRAM):   run;
499069     filename emflow
499069   ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural43\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural43\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * AutoNeural43: Scoring DATA data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
499070     *------------------------------------------------------------*;
499071     * AutoNeural43: Scoring DATA data;
499072     *------------------------------------------------------------*;
499073     data EMWS8.AutoNeural43_TRAIN
499074     / view=EMWS8.AutoNeural43_TRAIN
499075     ;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural43_TRAIN / view=EMWS8.AutoNeural43_TRAIN ;
499076     set EMWS8.Meta2_TRAIN
499077     ;
MPRINT(EM_DIAGRAM):   set EMWS8.Meta2_TRAIN ;
499078     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural43\EMFLOWSCORE.sas.
499079    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
499080    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
499081    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
499082    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
499083    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
499084    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
499085    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
499086    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
499087    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
499088    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
499089    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
499090    +LENGTH _WARN_ $4
499091    +      F_DepVar  $ 12
499092    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
499093    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
499094    +
499095    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
499096    +
499097    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
499098    +
499099    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
499100    +
499101    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
499102    +
499103    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
499104    +
499105    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
499106    +
499107    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
499108    +
499109    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
499110    +
499111    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
499112    +
499113    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
499114    +
499115    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
499116    +
499117    +      label S_Year_Birth = 'Standard: Year_Birth' ;
MPRINT(EM_DIAGRAM):   label S_Year_Birth = 'Standard: Year_Birth' ;
499118    +
499119    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
499120    +
499121    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
499122    +
499123    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
499124    +
499125    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
499126    +
499127    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
499128    +
499129    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
499130    +
499131    +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
499132    +
499133    +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
499134    +
499135    +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
499136    +
499137    +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
499138    +
499139    +      label H1x1_7 = 'Hidden: H1x1_=7' ;
MPRINT(EM_DIAGRAM):   label H1x1_7 = 'Hidden: H1x1_=7' ;
499140    +
499141    +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
499142    +
499143    +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
499144    +
499145    +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
499146    +
499147    +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
499148    +
499149    +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
499150    +
499151    +      label H1x2_6 = 'Hidden: H1x2_=6' ;
MPRINT(EM_DIAGRAM):   label H1x2_6 = 'Hidden: H1x2_=6' ;
499152    +
499153    +      label H1x2_7 = 'Hidden: H1x2_=7' ;
MPRINT(EM_DIAGRAM):   label H1x2_7 = 'Hidden: H1x2_=7' ;
499154    +
499155    +      label H1x3_1 = 'Hidden: H1x3_=1' ;
MPRINT(EM_DIAGRAM):   label H1x3_1 = 'Hidden: H1x3_=1' ;
499156    +
499157    +      label H1x3_2 = 'Hidden: H1x3_=2' ;
MPRINT(EM_DIAGRAM):   label H1x3_2 = 'Hidden: H1x3_=2' ;
499158    +
499159    +      label H1x3_3 = 'Hidden: H1x3_=3' ;
MPRINT(EM_DIAGRAM):   label H1x3_3 = 'Hidden: H1x3_=3' ;
499160    +
499161    +      label H1x3_4 = 'Hidden: H1x3_=4' ;
MPRINT(EM_DIAGRAM):   label H1x3_4 = 'Hidden: H1x3_=4' ;
499162    +
499163    +      label H1x3_5 = 'Hidden: H1x3_=5' ;
MPRINT(EM_DIAGRAM):   label H1x3_5 = 'Hidden: H1x3_=5' ;
499164    +
499165    +      label H1x3_6 = 'Hidden: H1x3_=6' ;
MPRINT(EM_DIAGRAM):   label H1x3_6 = 'Hidden: H1x3_=6' ;
499166    +
499167    +      label H1x3_7 = 'Hidden: H1x3_=7' ;
MPRINT(EM_DIAGRAM):   label H1x3_7 = 'Hidden: H1x3_=7' ;
499168    +
499169    +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
499170    +
499171    +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
499172    +
499173    +      label H2x1_3 = 'Hidden: H2x1_=3' ;
MPRINT(EM_DIAGRAM):   label H2x1_3 = 'Hidden: H2x1_=3' ;
499174    +
499175    +      label H2x1_4 = 'Hidden: H2x1_=4' ;
MPRINT(EM_DIAGRAM):   label H2x1_4 = 'Hidden: H2x1_=4' ;
499176    +
499177    +      label H2x1_5 = 'Hidden: H2x1_=5' ;
MPRINT(EM_DIAGRAM):   label H2x1_5 = 'Hidden: H2x1_=5' ;
499178    +
499179    +      label H2x1_6 = 'Hidden: H2x1_=6' ;
MPRINT(EM_DIAGRAM):   label H2x1_6 = 'Hidden: H2x1_=6' ;
499180    +
499181    +      label H2x1_7 = 'Hidden: H2x1_=7' ;
MPRINT(EM_DIAGRAM):   label H2x1_7 = 'Hidden: H2x1_=7' ;
499182    +
499183    +      label H2x2_1 = 'Hidden: H2x2_=1' ;
MPRINT(EM_DIAGRAM):   label H2x2_1 = 'Hidden: H2x2_=1' ;
499184    +
499185    +      label H2x2_2 = 'Hidden: H2x2_=2' ;
MPRINT(EM_DIAGRAM):   label H2x2_2 = 'Hidden: H2x2_=2' ;
499186    +
499187    +      label H2x2_3 = 'Hidden: H2x2_=3' ;
MPRINT(EM_DIAGRAM):   label H2x2_3 = 'Hidden: H2x2_=3' ;
499188    +
499189    +      label H2x2_4 = 'Hidden: H2x2_=4' ;
MPRINT(EM_DIAGRAM):   label H2x2_4 = 'Hidden: H2x2_=4' ;
499190    +
499191    +      label H2x2_5 = 'Hidden: H2x2_=5' ;
MPRINT(EM_DIAGRAM):   label H2x2_5 = 'Hidden: H2x2_=5' ;
499192    +
499193    +      label H2x2_6 = 'Hidden: H2x2_=6' ;
MPRINT(EM_DIAGRAM):   label H2x2_6 = 'Hidden: H2x2_=6' ;
499194    +
499195    +      label H2x2_7 = 'Hidden: H2x2_=7' ;
MPRINT(EM_DIAGRAM):   label H2x2_7 = 'Hidden: H2x2_=7' ;
499196    +
499197    +      label H3x1_1 = 'Hidden: H3x1_=1' ;
MPRINT(EM_DIAGRAM):   label H3x1_1 = 'Hidden: H3x1_=1' ;
499198    +
499199    +      label H3x1_2 = 'Hidden: H3x1_=2' ;
MPRINT(EM_DIAGRAM):   label H3x1_2 = 'Hidden: H3x1_=2' ;
499200    +
499201    +      label H3x1_3 = 'Hidden: H3x1_=3' ;
MPRINT(EM_DIAGRAM):   label H3x1_3 = 'Hidden: H3x1_=3' ;
499202    +
499203    +      label H3x1_4 = 'Hidden: H3x1_=4' ;
MPRINT(EM_DIAGRAM):   label H3x1_4 = 'Hidden: H3x1_=4' ;
499204    +
499205    +      label H3x1_5 = 'Hidden: H3x1_=5' ;
MPRINT(EM_DIAGRAM):   label H3x1_5 = 'Hidden: H3x1_=5' ;
499206    +
499207    +      label H3x1_6 = 'Hidden: H3x1_=6' ;
MPRINT(EM_DIAGRAM):   label H3x1_6 = 'Hidden: H3x1_=6' ;
499208    +
499209    +      label H3x1_7 = 'Hidden: H3x1_=7' ;
MPRINT(EM_DIAGRAM):   label H3x1_7 = 'Hidden: H3x1_=7' ;
499210    +
499211    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
499212    +
499213    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
499214    +
499215    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
499216    +
499217    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
499218    +
499219    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
499220    +
499221    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
499222    +
499223    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
499224    +
499225    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
499226    +
499227    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
499228    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
499229    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
499230    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
499231    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
499232    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
499233    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
499234    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
499235    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
499236    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
499237    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
499238    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
499239    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
499240    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
499241    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
499242    +end;
MPRINT(EM_DIAGRAM):   end;
499243    +else do;
MPRINT(EM_DIAGRAM):   else do;
499244    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
499245    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
499246    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
499247    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
499248    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
499249    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
499250    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
499251    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
499252    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
499253    +         end;
MPRINT(EM_DIAGRAM):   end;
499254    +         else do;
MPRINT(EM_DIAGRAM):   else do;
499255    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
499256    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
499257    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
499258    +            end;
MPRINT(EM_DIAGRAM):   end;
499259    +         end;
MPRINT(EM_DIAGRAM):   end;
499260    +      end;
MPRINT(EM_DIAGRAM):   end;
499261    +      else do;
MPRINT(EM_DIAGRAM):   else do;
499262    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
499263    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
499264    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
499265    +         end;
MPRINT(EM_DIAGRAM):   end;
499266    +      end;
MPRINT(EM_DIAGRAM):   end;
499267    +   end;
MPRINT(EM_DIAGRAM):   end;
499268    +   else do;
MPRINT(EM_DIAGRAM):   else do;
499269    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
499270    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
499271    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
499272    +      end;
MPRINT(EM_DIAGRAM):   end;
499273    +      else do;
MPRINT(EM_DIAGRAM):   else do;
499274    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
499275    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
499276    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
499277    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
499278    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
499279    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
499280    +         end;
MPRINT(EM_DIAGRAM):   end;
499281    +      end;
MPRINT(EM_DIAGRAM):   end;
499282    +   end;
MPRINT(EM_DIAGRAM):   end;
499283    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
499284    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
499285    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
499286    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
499287    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
499288    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
499289    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
499290    +   end;
MPRINT(EM_DIAGRAM):   end;
499291    +end;
MPRINT(EM_DIAGRAM):   end;
499292    +
499293    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
499294    +*** Checking missing input Interval
499295    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
499296    +
499297    +IF NMISS(
499298    +   AcceptedCmpTotal ,
499299    +   Frq ,
499300    +   Income ,
499301    +   Mnt ,
499302    +   MntGoldProds ,
499303    +   MntMeatProducts ,
499304    +   NumCatalogPurchases ,
499305    +   NumDealsPurchases ,
499306    +   NumWebVisitsMonth ,
499307    +   RFMstat ,
499308    +   Recency ,
499309    +   Teenhome ,
499310    +   Year_Birth   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Income , Mnt , MntGoldProds , 
MntMeatProducts , NumCatalogPurchases , NumDealsPurchases , NumWebVisitsMonth , RFMstat , 
Recency , Teenhome , Year_Birth ) THEN DO;
499311    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
499312    +
499313    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
499314    +END;
MPRINT(EM_DIAGRAM):   END;
499315    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
499316    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
499317    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
499318    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
499319    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
499320    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
499321    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
499322    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
499323    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
499324    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
499325    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
499326    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
499327    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
499328    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
499329    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
499330    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
499331    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
499332    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
499333    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
499334    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
499335    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
499336    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
499337    +   S_Year_Birth  =    -163.205330145852 +     0.08289609202864 * Year_Birth ;
MPRINT(EM_DIAGRAM):   S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
499338    +END;
MPRINT(EM_DIAGRAM):   END;
499339    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
499340    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
499341    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
499342    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
499343    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
499344    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
499345    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
499346    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
499347    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
499348    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
499349    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
499350    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
499351    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
499352    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
499353    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
499354    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
499355    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
499356    +   ELSE S_NumCatalogPurchases
499357    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
499358    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
499359    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
499360    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
499361    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
499362    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
499363    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
499364    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
499365    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
499366    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
499367    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
499368    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
499369    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
499370    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
499371    +   IF MISSING( Year_Birth ) THEN S_Year_Birth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Year_Birth ) THEN S_Year_Birth = . ;
499372    +   ELSE S_Year_Birth  =    -163.205330145852 +     0.08289609202864 *
499373    +        Year_Birth ;
MPRINT(EM_DIAGRAM):   ELSE S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
499374    +END;
MPRINT(EM_DIAGRAM):   END;
499375    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
499376    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
499377    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
499378    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
499379    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
499380    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
499381    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
499382    +   H1x1_1  =    -0.29618919413806 * S_AcceptedCmpTotal
499383    +          +     0.65621237028757 * S_Frq  +     0.03418945976327 * S_Income
499384    +          +     1.44880456678399 * S_Mnt  +     0.74166093949552 *
499385    +        S_MntGoldProds  +     1.02706876663519 * S_MntMeatProducts
499386    +          +    -0.82528424139262 * S_NumCatalogPurchases
499387    +          +      0.5929046965244 * S_NumDealsPurchases
499388    +          +    -0.52362488197384 * S_NumWebVisitsMonth
499389    +          +     0.37882892269923 * S_RFMstat  +     2.12340115344155 *
499390    +        S_Recency  +    -0.83670225777249 * S_Teenhome
499391    +          +     0.53976656905831 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.29618919413806 * S_AcceptedCmpTotal + 0.65621237028757 * 
S_Frq + 0.03418945976327 * S_Income + 1.44880456678399 * S_Mnt + 0.74166093949552 * 
S_MntGoldProds + 1.02706876663519 * S_MntMeatProducts + -0.82528424139262 * 
S_NumCatalogPurchases + 0.5929046965244 * S_NumDealsPurchases + -0.52362488197384 * 
S_NumWebVisitsMonth + 0.37882892269923 * S_RFMstat + 2.12340115344155 * S_Recency + 
-0.83670225777249 * S_Teenhome + 0.53976656905831 * S_Year_Birth ;
499392    +   H1x1_2  =     0.29962396390652 * S_AcceptedCmpTotal
499393    +          +     -2.5902198016826 * S_Frq  +    -0.18776639473475 * S_Income
499394    +          +    -2.77524252217737 * S_Mnt  +     0.96018065616836 *
499395    +        S_MntGoldProds  +     3.16907172523474 * S_MntMeatProducts
499396    +          +    -0.60117742307807 * S_NumCatalogPurchases
499397    +          +     1.09806082321711 * S_NumDealsPurchases
499398    +          +     1.26617704720444 * S_NumWebVisitsMonth
499399    +          +     1.08444062320284 * S_RFMstat  +     1.05523311776937 *
499400    +        S_Recency  +     -0.2630764341314 * S_Teenhome
499401    +          +    -0.42373178164016 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.29962396390652 * S_AcceptedCmpTotal + -2.5902198016826 * 
S_Frq + -0.18776639473475 * S_Income + -2.77524252217737 * S_Mnt + 0.96018065616836 * 
S_MntGoldProds + 3.16907172523474 * S_MntMeatProducts + -0.60117742307807 * 
S_NumCatalogPurchases + 1.09806082321711 * S_NumDealsPurchases + 1.26617704720444 * 
S_NumWebVisitsMonth + 1.08444062320284 * S_RFMstat + 1.05523311776937 * S_Recency + 
-0.2630764341314 * S_Teenhome + -0.42373178164016 * S_Year_Birth ;
499402    +   H1x1_3  =     2.31041583450369 * S_AcceptedCmpTotal
499403    +          +    -1.96810851023784 * S_Frq  +     0.93795839333407 * S_Income
499404    +          +    -1.55337331547216 * S_Mnt  +     1.13417428979776 *
499405    +        S_MntGoldProds  +     3.70573651287077 * S_MntMeatProducts
499406    +          +     1.63075268570383 * S_NumCatalogPurchases
499407    +          +     0.62057902628545 * S_NumDealsPurchases
499408    +          +     1.85944172136218 * S_NumWebVisitsMonth
499409    +          +     0.51474936656536 * S_RFMstat  +    -2.17922024885571 *
499410    +        S_Recency  +    -0.78663308544854 * S_Teenhome
499411    +          +    -0.08719031066365 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 2.31041583450369 * S_AcceptedCmpTotal + -1.96810851023784 * 
S_Frq + 0.93795839333407 * S_Income + -1.55337331547216 * S_Mnt + 1.13417428979776 * 
S_MntGoldProds + 3.70573651287077 * S_MntMeatProducts + 1.63075268570383 * 
S_NumCatalogPurchases + 0.62057902628545 * S_NumDealsPurchases + 1.85944172136218 * 
S_NumWebVisitsMonth + 0.51474936656536 * S_RFMstat + -2.17922024885571 * S_Recency + 
-0.78663308544854 * S_Teenhome + -0.08719031066365 * S_Year_Birth ;
499412    +   H1x1_4  =     -0.0390409024382 * S_AcceptedCmpTotal
499413    +          +     2.11606776858073 * S_Frq  +     -0.3817450995856 * S_Income
499414    +          +     0.40531492299483 * S_Mnt  +     0.54341985868017 *
499415    +        S_MntGoldProds  +    -5.50809183295151 * S_MntMeatProducts
499416    +          +    -2.59032878085972 * S_NumCatalogPurchases
499417    +          +    -0.44146008176644 * S_NumDealsPurchases
499418    +          +     1.16377649939583 * S_NumWebVisitsMonth
499419    +          +    -0.40950445519308 * S_RFMstat  +     1.44701615363875 *
499420    +        S_Recency  +    -0.44721505258044 * S_Teenhome
499421    +          +    -0.53780522701747 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -0.0390409024382 * S_AcceptedCmpTotal + 2.11606776858073 * 
S_Frq + -0.3817450995856 * S_Income + 0.40531492299483 * S_Mnt + 0.54341985868017 * 
S_MntGoldProds + -5.50809183295151 * S_MntMeatProducts + -2.59032878085972 * 
S_NumCatalogPurchases + -0.44146008176644 * S_NumDealsPurchases + 1.16377649939583 * 
S_NumWebVisitsMonth + -0.40950445519308 * S_RFMstat + 1.44701615363875 * S_Recency + 
-0.44721505258044 * S_Teenhome + -0.53780522701747 * S_Year_Birth ;
499422    +   H1x1_5  =    -0.96249689474011 * S_AcceptedCmpTotal
499423    +          +     1.18171571446591 * S_Frq  +     0.15643078933994 * S_Income
499424    +          +      1.1855275327594 * S_Mnt  +    -0.31882188338593 *
499425    +        S_MntGoldProds  +    -0.17799046807331 * S_MntMeatProducts
499426    +          +    -2.88423926492169 * S_NumCatalogPurchases
499427    +          +     0.76448279454687 * S_NumDealsPurchases
499428    +          +     0.63782718366339 * S_NumWebVisitsMonth
499429    +          +    -1.52311206450608 * S_RFMstat  +     2.66138322599513 *
499430    +        S_Recency  +     0.19809045233143 * S_Teenhome
499431    +          +    -0.11944673598308 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -0.96249689474011 * S_AcceptedCmpTotal + 1.18171571446591 * 
S_Frq + 0.15643078933994 * S_Income + 1.1855275327594 * S_Mnt + -0.31882188338593 * 
S_MntGoldProds + -0.17799046807331 * S_MntMeatProducts + -2.88423926492169 * 
S_NumCatalogPurchases + 0.76448279454687 * S_NumDealsPurchases + 0.63782718366339 * 
S_NumWebVisitsMonth + -1.52311206450608 * S_RFMstat + 2.66138322599513 * S_Recency + 
0.19809045233143 * S_Teenhome + -0.11944673598308 * S_Year_Birth ;
499432    +   H1x1_6  =     1.48018319811202 * S_AcceptedCmpTotal
499433    +          +    -2.35201132061873 * S_Frq  +     1.49549206730687 * S_Income
499434    +          +    -0.92311571755706 * S_Mnt  +    -0.17036386789536 *
499435    +        S_MntGoldProds  +     2.42959371021324 * S_MntMeatProducts
499436    +          +     1.71243370379543 * S_NumCatalogPurchases
499437    +          +     1.59034024362028 * S_NumDealsPurchases
499438    +          +     2.43090724707282 * S_NumWebVisitsMonth
499439    +          +    -1.84934930083177 * S_RFMstat  +    -1.10219728762745 *
499440    +        S_Recency  +    -1.20398234836557 * S_Teenhome
499441    +          +    -0.04071326663204 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_6 = 1.48018319811202 * S_AcceptedCmpTotal + -2.35201132061873 * 
S_Frq + 1.49549206730687 * S_Income + -0.92311571755706 * S_Mnt + -0.17036386789536 * 
S_MntGoldProds + 2.42959371021324 * S_MntMeatProducts + 1.71243370379543 * 
S_NumCatalogPurchases + 1.59034024362028 * S_NumDealsPurchases + 2.43090724707282 * 
S_NumWebVisitsMonth + -1.84934930083177 * S_RFMstat + -1.10219728762745 * S_Recency + 
-1.20398234836557 * S_Teenhome + -0.04071326663204 * S_Year_Birth ;
499442    +   H1x1_1  = H1x1_1  +    -1.53952272056325 * Marital_StatusDivorced
499443    +          +     1.90782989914192 * Marital_StatusMarried
499444    +          +    -1.16189886119693 * Marital_StatusSingle
499445    +          +     1.42717413956591 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -1.53952272056325 * Marital_StatusDivorced + 
1.90782989914192 * Marital_StatusMarried + -1.16189886119693 * Marital_StatusSingle + 
1.42717413956591 * Marital_StatusTogether ;
499446    +   H1x1_2  = H1x1_2  +     0.65814869063598 * Marital_StatusDivorced
499447    +          +     0.30468777490799 * Marital_StatusMarried
499448    +          +     0.61978761938746 * Marital_StatusSingle
499449    +          +    -0.78873321292122 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.65814869063598 * Marital_StatusDivorced + 
0.30468777490799 * Marital_StatusMarried + 0.61978761938746 * Marital_StatusSingle + 
-0.78873321292122 * Marital_StatusTogether ;
499450    +   H1x1_3  = H1x1_3  +      0.1292120736254 * Marital_StatusDivorced
499451    +          +    -1.73477859605124 * Marital_StatusMarried
499452    +          +     1.32595981126289 * Marital_StatusSingle
499453    +          +    -1.40161784211243 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.1292120736254 * Marital_StatusDivorced + 
-1.73477859605124 * Marital_StatusMarried + 1.32595981126289 * Marital_StatusSingle + 
-1.40161784211243 * Marital_StatusTogether ;
499454    +   H1x1_4  = H1x1_4  +     0.20617554754163 * Marital_StatusDivorced
499455    +          +     0.06077392213964 * Marital_StatusMarried
499456    +          +     0.21115279121703 * Marital_StatusSingle
499457    +          +    -0.61340758151821 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + 0.20617554754163 * Marital_StatusDivorced + 
0.06077392213964 * Marital_StatusMarried + 0.21115279121703 * Marital_StatusSingle + 
-0.61340758151821 * Marital_StatusTogether ;
499458    +   H1x1_5  = H1x1_5  +    -0.69141266071894 * Marital_StatusDivorced
499459    +          +    -0.24067068377767 * Marital_StatusMarried
499460    +          +      0.2728964145401 * Marital_StatusSingle
499461    +          +    -0.61614895252648 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.69141266071894 * Marital_StatusDivorced + 
-0.24067068377767 * Marital_StatusMarried + 0.2728964145401 * Marital_StatusSingle + 
-0.61614895252648 * Marital_StatusTogether ;
499462    +   H1x1_6  = H1x1_6  +    -0.81455860225062 * Marital_StatusDivorced
499463    +          +    -0.15640287278595 * Marital_StatusMarried
499464    +          +     0.54159395450762 * Marital_StatusSingle
499465    +          +    -0.43264862434738 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + -0.81455860225062 * Marital_StatusDivorced + 
-0.15640287278595 * Marital_StatusMarried + 0.54159395450762 * Marital_StatusSingle + 
-0.43264862434738 * Marital_StatusTogether ;
499466    +   H1x1_1  =    -0.36385036888345 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.36385036888345 + H1x1_1 ;
499467    +   H1x1_2  =     0.02663558500629 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.02663558500629 + H1x1_2 ;
499468    +   H1x1_3  =    -3.50526409213811 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -3.50526409213811 + H1x1_3 ;
499469    +   H1x1_4  =     0.63048769294892 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.63048769294892 + H1x1_4 ;
499470    +   H1x1_5  =     1.21111796976731 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 1.21111796976731 + H1x1_5 ;
499471    +   H1x1_6  =    -1.76174187739611 + H1x1_6 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = -1.76174187739611 + H1x1_6 ;
499472    +   H1x1_7  = 0;
MPRINT(EM_DIAGRAM):   H1x1_7 = 0;
499473    +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 , H1x1_7
499474    +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 , 
H1x1_7 );
499475    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
499476    +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
499477    +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
499478    +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
499479    +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
499480    +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
499481    +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
499482    +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
499483    +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
499484    +   H1x1_5  = EXP(H1x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_5 = EXP(H1x1_5 - _MAX_);
499485    +   _SUM_ = _SUM_ + H1x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_5 ;
499486    +   H1x1_6  = EXP(H1x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_6 = EXP(H1x1_6 - _MAX_);
499487    +   _SUM_ = _SUM_ + H1x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_6 ;
499488    +   H1x1_7  = EXP(H1x1_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_7 = EXP(H1x1_7 - _MAX_);
499489    +   _SUM_ = _SUM_ + H1x1_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_7 ;
499490    +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
499491    +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
499492    +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
499493    +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
499494    +   H1x1_5  = H1x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 / _SUM_;
499495    +   H1x1_6  = H1x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 / _SUM_;
499496    +   H1x1_7  = H1x1_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_7 = H1x1_7 / _SUM_;
499497    +END;
MPRINT(EM_DIAGRAM):   END;
499498    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
499499    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
499500    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
499501    +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
499502    +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
499503    +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
499504    +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
499505    +   H1x1_7  = .;
MPRINT(EM_DIAGRAM):   H1x1_7 = .;
499506    +END;
MPRINT(EM_DIAGRAM):   END;
499507    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
499508    +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
499509    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
499510    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
499511    +   H1x2_1  =     0.51589041180152 * S_AcceptedCmpTotal
499512    +          +     -0.6498311499195 * S_Frq  +    -1.08182644925044 * S_Income
499513    +          +    -1.19064228379044 * S_Mnt  +    -1.27287496888491 *
499514    +        S_MntGoldProds  +    -1.33897837883991 * S_MntMeatProducts
499515    +          +     0.14209124492657 * S_NumCatalogPurchases
499516    +          +    -1.31625106509803 * S_NumDealsPurchases
499517    +          +     2.35745588368331 * S_NumWebVisitsMonth
499518    +          +    -1.28657356976181 * S_RFMstat  +     0.25408650330935 *
499519    +        S_Recency  +     1.23527100408525 * S_Teenhome
499520    +          +    -1.87183507669176 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.51589041180152 * S_AcceptedCmpTotal + -0.6498311499195 * 
S_Frq + -1.08182644925044 * S_Income + -1.19064228379044 * S_Mnt + -1.27287496888491 * 
S_MntGoldProds + -1.33897837883991 * S_MntMeatProducts + 0.14209124492657 * 
S_NumCatalogPurchases + -1.31625106509803 * S_NumDealsPurchases + 2.35745588368331 * 
S_NumWebVisitsMonth + -1.28657356976181 * S_RFMstat + 0.25408650330935 * S_Recency + 
1.23527100408525 * S_Teenhome + -1.87183507669176 * S_Year_Birth ;
499521    +   H1x2_2  =    -1.23424462482032 * S_AcceptedCmpTotal
499522    +          +     1.46358102529667 * S_Frq  +     1.75790517593121 * S_Income
499523    +          +      -0.424881586919 * S_Mnt  +     -0.9331242135447 *
499524    +        S_MntGoldProds  +     0.54942904780681 * S_MntMeatProducts
499525    +          +     1.18605040958794 * S_NumCatalogPurchases
499526    +          +    -0.89798157472835 * S_NumDealsPurchases
499527    +          +    -0.09236646871049 * S_NumWebVisitsMonth
499528    +          +    -1.29341547638046 * S_RFMstat  +     1.66853355984342 *
499529    +        S_Recency  +    -0.50770218335102 * S_Teenhome
499530    +          +    -1.07353749220663 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -1.23424462482032 * S_AcceptedCmpTotal + 1.46358102529667 * 
S_Frq + 1.75790517593121 * S_Income + -0.424881586919 * S_Mnt + -0.9331242135447 * 
S_MntGoldProds + 0.54942904780681 * S_MntMeatProducts + 1.18605040958794 * 
S_NumCatalogPurchases + -0.89798157472835 * S_NumDealsPurchases + -0.09236646871049 * 
S_NumWebVisitsMonth + -1.29341547638046 * S_RFMstat + 1.66853355984342 * S_Recency + 
-0.50770218335102 * S_Teenhome + -1.07353749220663 * S_Year_Birth ;
499531    +   H1x2_3  =     0.77624009560593 * S_AcceptedCmpTotal
499532    +          +    -0.52739784343536 * S_Frq  +     0.03893675518591 * S_Income
499533    +          +     2.17484611279249 * S_Mnt  +    -0.17952459801341 *
499534    +        S_MntGoldProds  +     0.34588410829653 * S_MntMeatProducts
499535    +          +    -1.53424308314822 * S_NumCatalogPurchases
499536    +          +    -0.80590323269981 * S_NumDealsPurchases
499537    +          +    -1.40104490662303 * S_NumWebVisitsMonth
499538    +          +     1.66586308350968 * S_RFMstat  +    -0.47553614859646 *
499539    +        S_Recency  +     0.96086280467056 * S_Teenhome
499540    +          +    -1.77672596886127 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x2_3 = 0.77624009560593 * S_AcceptedCmpTotal + -0.52739784343536 * 
S_Frq + 0.03893675518591 * S_Income + 2.17484611279249 * S_Mnt + -0.17952459801341 * 
S_MntGoldProds + 0.34588410829653 * S_MntMeatProducts + -1.53424308314822 * 
S_NumCatalogPurchases + -0.80590323269981 * S_NumDealsPurchases + -1.40104490662303 * 
S_NumWebVisitsMonth + 1.66586308350968 * S_RFMstat + -0.47553614859646 * S_Recency + 
0.96086280467056 * S_Teenhome + -1.77672596886127 * S_Year_Birth ;
499541    +   H1x2_4  =     0.58137966699652 * S_AcceptedCmpTotal
499542    +          +      1.4040418295752 * S_Frq  +    -0.24832517883948 * S_Income
499543    +          +    -0.61141424736299 * S_Mnt  +     0.20471254162898 *
499544    +        S_MntGoldProds  +     0.44314427658514 * S_MntMeatProducts
499545    +          +    -1.25862219948587 * S_NumCatalogPurchases
499546    +          +     1.95015982914109 * S_NumDealsPurchases
499547    +          +     0.64320281589594 * S_NumWebVisitsMonth
499548    +          +     0.79165027029588 * S_RFMstat  +     0.66988554846863 *
499549    +        S_Recency  +    -0.00184949563812 * S_Teenhome
499550    +          +    -0.90548552271817 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 0.58137966699652 * S_AcceptedCmpTotal + 1.4040418295752 * S_Frq 
+ -0.24832517883948 * S_Income + -0.61141424736299 * S_Mnt + 0.20471254162898 * S_MntGoldProds 
+ 0.44314427658514 * S_MntMeatProducts + -1.25862219948587 * S_NumCatalogPurchases + 
1.95015982914109 * S_NumDealsPurchases + 0.64320281589594 * S_NumWebVisitsMonth + 
0.79165027029588 * S_RFMstat + 0.66988554846863 * S_Recency + -0.00184949563812 * S_Teenhome + 
-0.90548552271817 * S_Year_Birth ;
499551    +   H1x2_5  =      0.5931660751286 * S_AcceptedCmpTotal
499552    +          +     0.58645753040534 * S_Frq  +     1.15236353289832 * S_Income
499553    +          +     0.33853280493921 * S_Mnt  +    -0.34695797092699 *
499554    +        S_MntGoldProds  +     2.24596975589576 * S_MntMeatProducts
499555    +          +     0.30573893169917 * S_NumCatalogPurchases
499556    +          +     0.93169788380491 * S_NumDealsPurchases
499557    +          +     0.04516037232248 * S_NumWebVisitsMonth
499558    +          +     0.56461660789519 * S_RFMstat  +    -0.73850030816559 *
499559    +        S_Recency  +      0.1429120113072 * S_Teenhome
499560    +          +     0.57728849891114 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 0.5931660751286 * S_AcceptedCmpTotal + 0.58645753040534 * S_Frq 
+ 1.15236353289832 * S_Income + 0.33853280493921 * S_Mnt + -0.34695797092699 * S_MntGoldProds 
+ 2.24596975589576 * S_MntMeatProducts + 0.30573893169917 * S_NumCatalogPurchases + 
0.93169788380491 * S_NumDealsPurchases + 0.04516037232248 * S_NumWebVisitsMonth + 
0.56461660789519 * S_RFMstat + -0.73850030816559 * S_Recency + 0.1429120113072 * S_Teenhome + 
0.57728849891114 * S_Year_Birth ;
499561    +   H1x2_6  =    -0.61564457275113 * S_AcceptedCmpTotal
499562    +          +     0.25558411574917 * S_Frq  +      0.1079727446126 * S_Income
499563    +          +    -1.20360633098467 * S_Mnt  +     1.72797334940475 *
499564    +        S_MntGoldProds  +    -1.65210775934619 * S_MntMeatProducts
499565    +          +      0.2704422632168 * S_NumCatalogPurchases
499566    +          +      2.3389342094366 * S_NumDealsPurchases
499567    +          +     0.01076302858809 * S_NumWebVisitsMonth
499568    +          +    -2.36764292681458 * S_RFMstat  +     1.10196533018748 *
499569    +        S_Recency  +     0.68455094392125 * S_Teenhome
499570    +          +     1.22292273319927 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x2_6 = -0.61564457275113 * S_AcceptedCmpTotal + 0.25558411574917 * 
S_Frq + 0.1079727446126 * S_Income + -1.20360633098467 * S_Mnt + 1.72797334940475 * 
S_MntGoldProds + -1.65210775934619 * S_MntMeatProducts + 0.2704422632168 * 
S_NumCatalogPurchases + 2.3389342094366 * S_NumDealsPurchases + 0.01076302858809 * 
S_NumWebVisitsMonth + -2.36764292681458 * S_RFMstat + 1.10196533018748 * S_Recency + 
0.68455094392125 * S_Teenhome + 1.22292273319927 * S_Year_Birth ;
499571    +   H1x2_1  = H1x2_1  +    -2.04566893512123 * Marital_StatusDivorced
499572    +          +      0.8255833782513 * Marital_StatusMarried
499573    +          +    -0.48959165020896 * Marital_StatusSingle
499574    +          +     2.83781371812098 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -2.04566893512123 * Marital_StatusDivorced + 
0.8255833782513 * Marital_StatusMarried + -0.48959165020896 * Marital_StatusSingle + 
2.83781371812098 * Marital_StatusTogether ;
499575    +   H1x2_2  = H1x2_2  +     0.67000557197818 * Marital_StatusDivorced
499576    +          +    -0.36405013930464 * Marital_StatusMarried
499577    +          +    -0.11895921007246 * Marital_StatusSingle
499578    +          +    -0.94713834966834 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 0.67000557197818 * Marital_StatusDivorced + 
-0.36405013930464 * Marital_StatusMarried + -0.11895921007246 * Marital_StatusSingle + 
-0.94713834966834 * Marital_StatusTogether ;
499579    +   H1x2_3  = H1x2_3  +     0.26597574107473 * Marital_StatusDivorced
499580    +          +    -1.38902793752658 * Marital_StatusMarried
499581    +          +     0.47104623132568 * Marital_StatusSingle
499582    +          +    -0.55354712799424 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 0.26597574107473 * Marital_StatusDivorced + 
-1.38902793752658 * Marital_StatusMarried + 0.47104623132568 * Marital_StatusSingle + 
-0.55354712799424 * Marital_StatusTogether ;
499583    +   H1x2_4  = H1x2_4  +    -1.69625977318234 * Marital_StatusDivorced
499584    +          +     0.03793816986941 * Marital_StatusMarried
499585    +          +     0.32286910605532 * Marital_StatusSingle
499586    +          +    -1.44817209305758 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + -1.69625977318234 * Marital_StatusDivorced + 
0.03793816986941 * Marital_StatusMarried + 0.32286910605532 * Marital_StatusSingle + 
-1.44817209305758 * Marital_StatusTogether ;
499587    +   H1x2_5  = H1x2_5  +     0.19745523338489 * Marital_StatusDivorced
499588    +          +    -0.60013237897988 * Marital_StatusMarried
499589    +          +    -1.54090744803073 * Marital_StatusSingle
499590    +          +    -2.24346446510302 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 0.19745523338489 * Marital_StatusDivorced + 
-0.60013237897988 * Marital_StatusMarried + -1.54090744803073 * Marital_StatusSingle + 
-2.24346446510302 * Marital_StatusTogether ;
499591    +   H1x2_6  = H1x2_6  +     0.47464108124928 * Marital_StatusDivorced
499592    +          +     2.39490119482132 * Marital_StatusMarried
499593    +          +     0.73080073298893 * Marital_StatusSingle
499594    +          +    -0.62296432915598 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 + 0.47464108124928 * Marital_StatusDivorced + 
2.39490119482132 * Marital_StatusMarried + 0.73080073298893 * Marital_StatusSingle + 
-0.62296432915598 * Marital_StatusTogether ;
499595    +   H1x2_1  =     1.03099135229255 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.03099135229255 + H1x2_1 ;
499596    +   H1x2_2  =     -0.9436150278938 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -0.9436150278938 + H1x2_2 ;
499597    +   H1x2_3  =    -0.17327523864686 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.17327523864686 + H1x2_3 ;
499598    +   H1x2_4  =     0.30103807123555 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 0.30103807123555 + H1x2_4 ;
499599    +   H1x2_5  =    -2.06815743640812 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -2.06815743640812 + H1x2_5 ;
499600    +   H1x2_6  =     1.90356790294644 + H1x2_6 ;
MPRINT(EM_DIAGRAM):   H1x2_6 = 1.90356790294644 + H1x2_6 ;
499601    +   H1x2_7  = 0;
MPRINT(EM_DIAGRAM):   H1x2_7 = 0;
499602    +   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 , H1x2_7
499603    +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 , 
H1x2_7 );
499604    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
499605    +   H1x2_1  = EXP(H1x2_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_1 = EXP(H1x2_1 - _MAX_);
499606    +   _SUM_ = _SUM_ + H1x2_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_1 ;
499607    +   H1x2_2  = EXP(H1x2_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_2 = EXP(H1x2_2 - _MAX_);
499608    +   _SUM_ = _SUM_ + H1x2_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_2 ;
499609    +   H1x2_3  = EXP(H1x2_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_3 = EXP(H1x2_3 - _MAX_);
499610    +   _SUM_ = _SUM_ + H1x2_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_3 ;
499611    +   H1x2_4  = EXP(H1x2_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_4 = EXP(H1x2_4 - _MAX_);
499612    +   _SUM_ = _SUM_ + H1x2_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_4 ;
499613    +   H1x2_5  = EXP(H1x2_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_5 = EXP(H1x2_5 - _MAX_);
499614    +   _SUM_ = _SUM_ + H1x2_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_5 ;
499615    +   H1x2_6  = EXP(H1x2_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_6 = EXP(H1x2_6 - _MAX_);
499616    +   _SUM_ = _SUM_ + H1x2_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_6 ;
499617    +   H1x2_7  = EXP(H1x2_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_7 = EXP(H1x2_7 - _MAX_);
499618    +   _SUM_ = _SUM_ + H1x2_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_7 ;
499619    +   H1x2_1  = H1x2_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 / _SUM_;
499620    +   H1x2_2  = H1x2_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 / _SUM_;
499621    +   H1x2_3  = H1x2_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 / _SUM_;
499622    +   H1x2_4  = H1x2_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 / _SUM_;
499623    +   H1x2_5  = H1x2_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 / _SUM_;
499624    +   H1x2_6  = H1x2_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 / _SUM_;
499625    +   H1x2_7  = H1x2_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_7 = H1x2_7 / _SUM_;
499626    +END;
MPRINT(EM_DIAGRAM):   END;
499627    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
499628    +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
499629    +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
499630    +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
499631    +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
499632    +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
499633    +   H1x2_6  = .;
MPRINT(EM_DIAGRAM):   H1x2_6 = .;
499634    +   H1x2_7  = .;
MPRINT(EM_DIAGRAM):   H1x2_7 = .;
499635    +END;
MPRINT(EM_DIAGRAM):   END;
499636    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
499637    +*** Writing the Node H1x3_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x3_ ;
499638    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
499639    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
499640    +   H1x3_1  =    -0.02577999703823 * S_AcceptedCmpTotal
499641    +          +     1.15166430232754 * S_Frq  +     0.14876168620543 * S_Income
499642    +          +    -0.18380736633059 * S_Mnt  +     0.50048252433262 *
499643    +        S_MntGoldProds  +    -0.33191625929347 * S_MntMeatProducts
499644    +          +     2.25334156596167 * S_NumCatalogPurchases
499645    +          +     1.11206221926547 * S_NumDealsPurchases
499646    +          +    -0.86546062057987 * S_NumWebVisitsMonth
499647    +          +    -0.98321051175326 * S_RFMstat  +     1.25274008829299 *
499648    +        S_Recency  +    -1.57916593034924 * S_Teenhome
499649    +          +    -2.06345344469395 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x3_1 = -0.02577999703823 * S_AcceptedCmpTotal + 1.15166430232754 * 
S_Frq + 0.14876168620543 * S_Income + -0.18380736633059 * S_Mnt + 0.50048252433262 * 
S_MntGoldProds + -0.33191625929347 * S_MntMeatProducts + 2.25334156596167 * 
S_NumCatalogPurchases + 1.11206221926547 * S_NumDealsPurchases + -0.86546062057987 * 
S_NumWebVisitsMonth + -0.98321051175326 * S_RFMstat + 1.25274008829299 * S_Recency + 
-1.57916593034924 * S_Teenhome + -2.06345344469395 * S_Year_Birth ;
499650    +   H1x3_2  =    -1.17329843303132 * S_AcceptedCmpTotal
499651    +          +     1.78916673039241 * S_Frq  +    -0.84674133842717 * S_Income
499652    +          +     0.28484675606294 * S_Mnt  +     0.63187019772354 *
499653    +        S_MntGoldProds  +    -0.96245535082151 * S_MntMeatProducts
499654    +          +    -0.72830662589886 * S_NumCatalogPurchases
499655    +          +    -1.43194640925705 * S_NumDealsPurchases
499656    +          +     0.27875145672985 * S_NumWebVisitsMonth
499657    +          +    -2.03430995128807 * S_RFMstat  +    -0.52413738058555 *
499658    +        S_Recency  +    -1.01056905981073 * S_Teenhome
499659    +          +     0.00830584207402 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x3_2 = -1.17329843303132 * S_AcceptedCmpTotal + 1.78916673039241 * 
S_Frq + -0.84674133842717 * S_Income + 0.28484675606294 * S_Mnt + 0.63187019772354 * 
S_MntGoldProds + -0.96245535082151 * S_MntMeatProducts + -0.72830662589886 * 
S_NumCatalogPurchases + -1.43194640925705 * S_NumDealsPurchases + 0.27875145672985 * 
S_NumWebVisitsMonth + -2.03430995128807 * S_RFMstat + -0.52413738058555 * S_Recency + 
-1.01056905981073 * S_Teenhome + 0.00830584207402 * S_Year_Birth ;
499660    +   H1x3_3  =    -1.51193899177395 * S_AcceptedCmpTotal
499661    +          +    -1.18260896990859 * S_Frq  +    -0.95243122164169 * S_Income
499662    +          +    -0.18792820239336 * S_Mnt  +    -0.06982279743147 *
499663    +        S_MntGoldProds  +    -1.14763783870634 * S_MntMeatProducts
499664    +          +    -0.29577972728188 * S_NumCatalogPurchases
499665    +          +    -0.09204036503823 * S_NumDealsPurchases
499666    +          +     1.09127760712522 * S_NumWebVisitsMonth
499667    +          +     0.67251355869104 * S_RFMstat  +     0.02406054275944 *
499668    +        S_Recency  +    -1.61269837976842 * S_Teenhome
499669    +          +     1.49645524045306 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x3_3 = -1.51193899177395 * S_AcceptedCmpTotal + -1.18260896990859 * 
S_Frq + -0.95243122164169 * S_Income + -0.18792820239336 * S_Mnt + -0.06982279743147 * 
S_MntGoldProds + -1.14763783870634 * S_MntMeatProducts + -0.29577972728188 * 
S_NumCatalogPurchases + -0.09204036503823 * S_NumDealsPurchases + 1.09127760712522 * 
S_NumWebVisitsMonth + 0.67251355869104 * S_RFMstat + 0.02406054275944 * S_Recency + 
-1.61269837976842 * S_Teenhome + 1.49645524045306 * S_Year_Birth ;
499670    +   H1x3_4  =      0.0300271349218 * S_AcceptedCmpTotal
499671    +          +     0.92676949944979 * S_Frq  +    -0.43729227407729 * S_Income
499672    +          +     0.20149694045928 * S_Mnt  +    -0.72339995493149 *
499673    +        S_MntGoldProds  +     0.79792093415572 * S_MntMeatProducts
499674    +          +     0.74771164805463 * S_NumCatalogPurchases
499675    +          +     1.48674373289951 * S_NumDealsPurchases
499676    +          +    -0.43724934700095 * S_NumWebVisitsMonth
499677    +          +    -0.83295997374079 * S_RFMstat  +    -0.78737099754706 *
499678    +        S_Recency  +      1.5969237416548 * S_Teenhome
499679    +          +     -0.1539761100948 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x3_4 = 0.0300271349218 * S_AcceptedCmpTotal + 0.92676949944979 * S_Frq 
+ -0.43729227407729 * S_Income + 0.20149694045928 * S_Mnt + -0.72339995493149 * S_MntGoldProds 
+ 0.79792093415572 * S_MntMeatProducts + 0.74771164805463 * S_NumCatalogPurchases + 
1.48674373289951 * S_NumDealsPurchases + -0.43724934700095 * S_NumWebVisitsMonth + 
-0.83295997374079 * S_RFMstat + -0.78737099754706 * S_Recency + 1.5969237416548 * S_Teenhome + 
-0.1539761100948 * S_Year_Birth ;
499680    +   H1x3_5  =     0.10850479066736 * S_AcceptedCmpTotal
499681    +          +    -0.69523987336905 * S_Frq  +    -1.03313846128362 * S_Income
499682    +          +     0.25026080496919 * S_Mnt  +    -0.97357883151863 *
499683    +        S_MntGoldProds  +    -0.61754054300662 * S_MntMeatProducts
499684    +          +     0.32607897654777 * S_NumCatalogPurchases
499685    +          +    -0.05989936582211 * S_NumDealsPurchases
499686    +          +     -0.8863628882594 * S_NumWebVisitsMonth
499687    +          +      1.1124532739734 * S_RFMstat  +    -0.38719199193265 *
499688    +        S_Recency  +      1.1633098880037 * S_Teenhome
499689    +          +    -1.12745203473451 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x3_5 = 0.10850479066736 * S_AcceptedCmpTotal + -0.69523987336905 * 
S_Frq + -1.03313846128362 * S_Income + 0.25026080496919 * S_Mnt + -0.97357883151863 * 
S_MntGoldProds + -0.61754054300662 * S_MntMeatProducts + 0.32607897654777 * 
S_NumCatalogPurchases + -0.05989936582211 * S_NumDealsPurchases + -0.8863628882594 * 
S_NumWebVisitsMonth + 1.1124532739734 * S_RFMstat + -0.38719199193265 * S_Recency + 
1.1633098880037 * S_Teenhome + -1.12745203473451 * S_Year_Birth ;
499690    +   H1x3_6  =    -0.11588080697234 * S_AcceptedCmpTotal
499691    +          +     0.62360534366171 * S_Frq  +     0.05171263107667 * S_Income
499692    +          +    -2.09517372359855 * S_Mnt  +     1.82275072298905 *
499693    +        S_MntGoldProds  +    -0.20222711303443 * S_MntMeatProducts
499694    +          +    -0.32855091358254 * S_NumCatalogPurchases
499695    +          +    -0.04262624947945 * S_NumDealsPurchases
499696    +          +     0.34844893542429 * S_NumWebVisitsMonth
499697    +          +     1.02395415516187 * S_RFMstat  +     0.72163010188304 *
499698    +        S_Recency  +     0.25374922499465 * S_Teenhome
499699    +          +    -0.26482823596248 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x3_6 = -0.11588080697234 * S_AcceptedCmpTotal + 0.62360534366171 * 
S_Frq + 0.05171263107667 * S_Income + -2.09517372359855 * S_Mnt + 1.82275072298905 * 
S_MntGoldProds + -0.20222711303443 * S_MntMeatProducts + -0.32855091358254 * 
S_NumCatalogPurchases + -0.04262624947945 * S_NumDealsPurchases + 0.34844893542429 * 
S_NumWebVisitsMonth + 1.02395415516187 * S_RFMstat + 0.72163010188304 * S_Recency + 
0.25374922499465 * S_Teenhome + -0.26482823596248 * S_Year_Birth ;
499700    +   H1x3_1  = H1x3_1  +     0.22579923464903 * Marital_StatusDivorced
499701    +          +    -1.19357131519861 * Marital_StatusMarried
499702    +          +     1.01104838285626 * Marital_StatusSingle
499703    +          +    -1.80955917142309 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + 0.22579923464903 * Marital_StatusDivorced + 
-1.19357131519861 * Marital_StatusMarried + 1.01104838285626 * Marital_StatusSingle + 
-1.80955917142309 * Marital_StatusTogether ;
499704    +   H1x3_2  = H1x3_2  +    -0.94571479472535 * Marital_StatusDivorced
499705    +          +     0.41518199668826 * Marital_StatusMarried
499706    +          +     1.03267293059069 * Marital_StatusSingle
499707    +          +    -0.66743874470855 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 + -0.94571479472535 * Marital_StatusDivorced + 
0.41518199668826 * Marital_StatusMarried + 1.03267293059069 * Marital_StatusSingle + 
-0.66743874470855 * Marital_StatusTogether ;
499708    +   H1x3_3  = H1x3_3  +    -0.15213926695809 * Marital_StatusDivorced
499709    +          +     0.56306179671807 * Marital_StatusMarried
499710    +          +    -1.20896369649342 * Marital_StatusSingle
499711    +          +      0.2381860290523 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_3 = H1x3_3 + -0.15213926695809 * Marital_StatusDivorced + 
0.56306179671807 * Marital_StatusMarried + -1.20896369649342 * Marital_StatusSingle + 
0.2381860290523 * Marital_StatusTogether ;
499712    +   H1x3_4  = H1x3_4  +      1.0736711015636 * Marital_StatusDivorced
499713    +          +    -2.56951757071166 * Marital_StatusMarried
499714    +          +     0.89024254219017 * Marital_StatusSingle
499715    +          +    -1.38303524163943 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_4 = H1x3_4 + 1.0736711015636 * Marital_StatusDivorced + 
-2.56951757071166 * Marital_StatusMarried + 0.89024254219017 * Marital_StatusSingle + 
-1.38303524163943 * Marital_StatusTogether ;
499716    +   H1x3_5  = H1x3_5  +     2.33108578518176 * Marital_StatusDivorced
499717    +          +    -0.82560993254767 * Marital_StatusMarried
499718    +          +     0.67892086377875 * Marital_StatusSingle
499719    +          +    -0.99872502550085 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_5 = H1x3_5 + 2.33108578518176 * Marital_StatusDivorced + 
-0.82560993254767 * Marital_StatusMarried + 0.67892086377875 * Marital_StatusSingle + 
-0.99872502550085 * Marital_StatusTogether ;
499720    +   H1x3_6  = H1x3_6  +    -1.46724646572707 * Marital_StatusDivorced
499721    +          +     1.62783448403167 * Marital_StatusMarried
499722    +          +     0.73020544049082 * Marital_StatusSingle
499723    +          +    -0.22473120319236 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_6 = H1x3_6 + -1.46724646572707 * Marital_StatusDivorced + 
1.62783448403167 * Marital_StatusMarried + 0.73020544049082 * Marital_StatusSingle + 
-0.22473120319236 * Marital_StatusTogether ;
499724    +   H1x3_1  =     0.67900930500511 + H1x3_1 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 0.67900930500511 + H1x3_1 ;
499725    +   H1x3_2  =     1.40060666199115 + H1x3_2 ;
MPRINT(EM_DIAGRAM):   H1x3_2 = 1.40060666199115 + H1x3_2 ;
499726    +   H1x3_3  =     0.29463847527526 + H1x3_3 ;
MPRINT(EM_DIAGRAM):   H1x3_3 = 0.29463847527526 + H1x3_3 ;
499727    +   H1x3_4  =    -0.04357875847579 + H1x3_4 ;
MPRINT(EM_DIAGRAM):   H1x3_4 = -0.04357875847579 + H1x3_4 ;
499728    +   H1x3_5  =      0.8612643972197 + H1x3_5 ;
MPRINT(EM_DIAGRAM):   H1x3_5 = 0.8612643972197 + H1x3_5 ;
499729    +   H1x3_6  =    -1.88380703730164 + H1x3_6 ;
MPRINT(EM_DIAGRAM):   H1x3_6 = -1.88380703730164 + H1x3_6 ;
499730    +   H1x3_7  = 0;
MPRINT(EM_DIAGRAM):   H1x3_7 = 0;
499731    +   _MAX_ = MAX (H1x3_1 , H1x3_2 , H1x3_3 , H1x3_4 , H1x3_5 , H1x3_6 , H1x3_7
499732    +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x3_1 , H1x3_2 , H1x3_3 , H1x3_4 , H1x3_5 , H1x3_6 , 
H1x3_7 );
499733    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
499734    +   H1x3_1  = EXP(H1x3_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_1 = EXP(H1x3_1 - _MAX_);
499735    +   _SUM_ = _SUM_ + H1x3_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_1 ;
499736    +   H1x3_2  = EXP(H1x3_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_2 = EXP(H1x3_2 - _MAX_);
499737    +   _SUM_ = _SUM_ + H1x3_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_2 ;
499738    +   H1x3_3  = EXP(H1x3_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_3 = EXP(H1x3_3 - _MAX_);
499739    +   _SUM_ = _SUM_ + H1x3_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_3 ;
499740    +   H1x3_4  = EXP(H1x3_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_4 = EXP(H1x3_4 - _MAX_);
499741    +   _SUM_ = _SUM_ + H1x3_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_4 ;
499742    +   H1x3_5  = EXP(H1x3_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_5 = EXP(H1x3_5 - _MAX_);
499743    +   _SUM_ = _SUM_ + H1x3_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_5 ;
499744    +   H1x3_6  = EXP(H1x3_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_6 = EXP(H1x3_6 - _MAX_);
499745    +   _SUM_ = _SUM_ + H1x3_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_6 ;
499746    +   H1x3_7  = EXP(H1x3_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_7 = EXP(H1x3_7 - _MAX_);
499747    +   _SUM_ = _SUM_ + H1x3_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_7 ;
499748    +   H1x3_1  = H1x3_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 / _SUM_;
499749    +   H1x3_2  = H1x3_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 / _SUM_;
499750    +   H1x3_3  = H1x3_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_3 = H1x3_3 / _SUM_;
499751    +   H1x3_4  = H1x3_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_4 = H1x3_4 / _SUM_;
499752    +   H1x3_5  = H1x3_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_5 = H1x3_5 / _SUM_;
499753    +   H1x3_6  = H1x3_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_6 = H1x3_6 / _SUM_;
499754    +   H1x3_7  = H1x3_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_7 = H1x3_7 / _SUM_;
499755    +END;
MPRINT(EM_DIAGRAM):   END;
499756    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
499757    +   H1x3_1  = .;
MPRINT(EM_DIAGRAM):   H1x3_1 = .;
499758    +   H1x3_2  = .;
MPRINT(EM_DIAGRAM):   H1x3_2 = .;
499759    +   H1x3_3  = .;
MPRINT(EM_DIAGRAM):   H1x3_3 = .;
499760    +   H1x3_4  = .;
MPRINT(EM_DIAGRAM):   H1x3_4 = .;
499761    +   H1x3_5  = .;
MPRINT(EM_DIAGRAM):   H1x3_5 = .;
499762    +   H1x3_6  = .;
MPRINT(EM_DIAGRAM):   H1x3_6 = .;
499763    +   H1x3_7  = .;
MPRINT(EM_DIAGRAM):   H1x3_7 = .;
499764    +END;
MPRINT(EM_DIAGRAM):   END;
499765    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
499766    +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
499767    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
499768    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
499769    +   H2x1_1  =    -0.95656178134917 * H1x1_1  +     1.37796748135739 * H1x1_2
499770    +          +     1.78756036673938 * H1x1_3  +     -0.8439546201475 * H1x1_4
499771    +          +    -1.03166099242293 * H1x1_5  +     0.52943703441707 * H1x1_6
499772    +          +     0.59795148287931 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -0.95656178134917 * H1x1_1 + 1.37796748135739 * H1x1_2 + 
1.78756036673938 * H1x1_3 + -0.8439546201475 * H1x1_4 + -1.03166099242293 * H1x1_5 + 
0.52943703441707 * H1x1_6 + 0.59795148287931 * H1x1_7 ;
499773    +   H2x1_2  =     1.91190798936382 * H1x1_1  +      -0.175949167006 * H1x1_2
499774    +          +    -0.20010954623703 * H1x1_3  +    -1.12168184279533 * H1x1_4
499775    +          +     0.35517508917627 * H1x1_5  +    -0.45519619936571 * H1x1_6
499776    +          +     1.08432924744886 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.91190798936382 * H1x1_1 + -0.175949167006 * H1x1_2 + 
-0.20010954623703 * H1x1_3 + -1.12168184279533 * H1x1_4 + 0.35517508917627 * H1x1_5 + 
-0.45519619936571 * H1x1_6 + 1.08432924744886 * H1x1_7 ;
499777    +   H2x1_3  =    -0.27236838695598 * H1x1_1  +     2.63546136140352 * H1x1_2
499778    +          +     1.80045649255758 * H1x1_3  +    -2.98830892061373 * H1x1_4
499779    +          +    -2.46045881589621 * H1x1_5  +     3.22396803549708 * H1x1_6
499780    +          +    -2.34667330067152 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -0.27236838695598 * H1x1_1 + 2.63546136140352 * H1x1_2 + 
1.80045649255758 * H1x1_3 + -2.98830892061373 * H1x1_4 + -2.46045881589621 * H1x1_5 + 
3.22396803549708 * H1x1_6 + -2.34667330067152 * H1x1_7 ;
499781    +   H2x1_4  =    -3.13210205675036 * H1x1_1  +     3.91450403558871 * H1x1_2
499782    +          +       4.933279615521 * H1x1_3  +    -2.59282514986249 * H1x1_4
499783    +          +    -2.03653671740081 * H1x1_5  +       4.064405082461 * H1x1_6
499784    +          +    -2.60526325926954 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = -3.13210205675036 * H1x1_1 + 3.91450403558871 * H1x1_2 + 
4.933279615521 * H1x1_3 + -2.59282514986249 * H1x1_4 + -2.03653671740081 * H1x1_5 + 
4.064405082461 * H1x1_6 + -2.60526325926954 * H1x1_7 ;
499785    +   H2x1_5  =    -0.63232084982839 * H1x1_1  +     0.33718773947492 * H1x1_2
499786    +          +     1.29296448887546 * H1x1_3  +     1.12889621039023 * H1x1_4
499787    +          +     2.18934908118237 * H1x1_5  +     0.87862098785892 * H1x1_6
499788    +          +     0.91832061749569 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = -0.63232084982839 * H1x1_1 + 0.33718773947492 * H1x1_2 + 
1.29296448887546 * H1x1_3 + 1.12889621039023 * H1x1_4 + 2.18934908118237 * H1x1_5 + 
0.87862098785892 * H1x1_6 + 0.91832061749569 * H1x1_7 ;
499789    +   H2x1_6  =     1.81043244413035 * H1x1_1  +      1.4777958998418 * H1x1_2
499790    +          +     2.53190667102186 * H1x1_3  +      0.4670787906688 * H1x1_4
499791    +          +    -0.00303664790933 * H1x1_5  +     0.21078497178324 * H1x1_6
499792    +          +     0.34792900678934 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = 1.81043244413035 * H1x1_1 + 1.4777958998418 * H1x1_2 + 
2.53190667102186 * H1x1_3 + 0.4670787906688 * H1x1_4 + -0.00303664790933 * H1x1_5 + 
0.21078497178324 * H1x1_6 + 0.34792900678934 * H1x1_7 ;
499793    +   H2x1_7  =      2.7297431384039 * H1x1_1  +    -1.30829815853208 * H1x1_2
499794    +          +    -0.74317234707744 * H1x1_3  +     0.02621795882884 * H1x1_4
499795    +          +     1.92641283593631 * H1x1_5  +     0.32006968332264 * H1x1_6
499796    +          +     0.87129000431049 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_7 = 2.7297431384039 * H1x1_1 + -1.30829815853208 * H1x1_2 + 
-0.74317234707744 * H1x1_3 + 0.02621795882884 * H1x1_4 + 1.92641283593631 * H1x1_5 + 
0.32006968332264 * H1x1_6 + 0.87129000431049 * H1x1_7 ;
499797    +   H2x1_1  = H2x1_1  +     -2.1938127062121 * H1x2_1
499798    +          +     0.21780666650637 * H1x2_2  +    -0.59195589593425 * H1x2_3
499799    +          +     0.38436245185742 * H1x2_4  +     0.62573807049092 * H1x2_5
499800    +          +    -0.61319348011502 * H1x2_6  +     0.47203210338015 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -2.1938127062121 * H1x2_1 + 0.21780666650637 * H1x2_2 
+ -0.59195589593425 * H1x2_3 + 0.38436245185742 * H1x2_4 + 0.62573807049092 * H1x2_5 + 
-0.61319348011502 * H1x2_6 + 0.47203210338015 * H1x2_7 ;
499801    +   H2x1_2  = H2x1_2  +    -0.26087177829438 * H1x2_1
499802    +          +      1.5809361009025 * H1x2_2  +     1.48270435958935 * H1x2_3
499803    +          +    -0.08943866833208 * H1x2_4  +     1.06601866330059 * H1x2_5
499804    +          +     0.65908674086625 * H1x2_6  +    -0.41138217409507 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + -0.26087177829438 * H1x2_1 + 1.5809361009025 * H1x2_2 
+ 1.48270435958935 * H1x2_3 + -0.08943866833208 * H1x2_4 + 1.06601866330059 * H1x2_5 + 
0.65908674086625 * H1x2_6 + -0.41138217409507 * H1x2_7 ;
499805    +   H2x1_3  = H2x1_3  +     0.38416253176813 * H1x2_1
499806    +          +    -0.18005172775158 * H1x2_2  +    -0.64477973121074 * H1x2_3
499807    +          +    -0.89326621554735 * H1x2_4  +     2.10808351608759 * H1x2_5
499808    +          +    -0.79701502540522 * H1x2_6  +     0.12564972289045 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + 0.38416253176813 * H1x2_1 + -0.18005172775158 * H1x2_2 
+ -0.64477973121074 * H1x2_3 + -0.89326621554735 * H1x2_4 + 2.10808351608759 * H1x2_5 + 
-0.79701502540522 * H1x2_6 + 0.12564972289045 * H1x2_7 ;
499809    +   H2x1_4  = H2x1_4  +     0.45607666975085 * H1x2_1
499810    +          +     0.66281103175614 * H1x2_2  +     -2.2042052849244 * H1x2_3
499811    +          +    -0.88338513539567 * H1x2_4  +      0.8444719755129 * H1x2_5
499812    +          +    -1.34699546034909 * H1x2_6  +    -0.92256004986079 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + 0.45607666975085 * H1x2_1 + 0.66281103175614 * H1x2_2 
+ -2.2042052849244 * H1x2_3 + -0.88338513539567 * H1x2_4 + 0.8444719755129 * H1x2_5 + 
-1.34699546034909 * H1x2_6 + -0.92256004986079 * H1x2_7 ;
499813    +   H2x1_5  = H2x1_5  +    -1.36966827041497 * H1x2_1
499814    +          +    -0.50899589190563 * H1x2_2  +    -1.06117764109728 * H1x2_3
499815    +          +    -0.15325014700397 * H1x2_4  +     0.77845029985607 * H1x2_5
499816    +          +     0.15661838238861 * H1x2_6  +    -1.46533717081069 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + -1.36966827041497 * H1x2_1 + -0.50899589190563 * 
H1x2_2 + -1.06117764109728 * H1x2_3 + -0.15325014700397 * H1x2_4 + 0.77845029985607 * H1x2_5 + 
0.15661838238861 * H1x2_6 + -1.46533717081069 * H1x2_7 ;
499817    +   H2x1_6  = H2x1_6  +    -1.39055542164691 * H1x2_1
499818    +          +    -0.58359991825266 * H1x2_2  +     1.77147289208184 * H1x2_3
499819    +          +    -0.35342441714416 * H1x2_4  +     0.33680205236698 * H1x2_5
499820    +          +    -0.30165800401137 * H1x2_6  +    -1.49792110543314 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 + -1.39055542164691 * H1x2_1 + -0.58359991825266 * 
H1x2_2 + 1.77147289208184 * H1x2_3 + -0.35342441714416 * H1x2_4 + 0.33680205236698 * H1x2_5 + 
-0.30165800401137 * H1x2_6 + -1.49792110543314 * H1x2_7 ;
499821    +   H2x1_7  = H2x1_7  +     0.20334369322498 * H1x2_1
499822    +          +    -0.56117684469389 * H1x2_2  +     1.27451151893116 * H1x2_3
499823    +          +    -0.39759641471947 * H1x2_4  +    -0.48424888739695 * H1x2_5
499824    +          +      0.5776601194378 * H1x2_6  +    -0.11343742791086 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_7 = H2x1_7 + 0.20334369322498 * H1x2_1 + -0.56117684469389 * H1x2_2 
+ 1.27451151893116 * H1x2_3 + -0.39759641471947 * H1x2_4 + -0.48424888739695 * H1x2_5 + 
0.5776601194378 * H1x2_6 + -0.11343742791086 * H1x2_7 ;
499825    +   H2x1_1  = H2x1_1  +    -0.06990804266869 * H1x3_1
499826    +          +     1.59179747886577 * H1x3_2  +     -0.3658160611529 * H1x3_3
499827    +          +    -0.16177521959465 * H1x3_4  +     0.23353693967535 * H1x3_5
499828    +          +     0.96164596504173 * H1x3_6  +    -0.49996390114171 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -0.06990804266869 * H1x3_1 + 1.59179747886577 * H1x3_2 
+ -0.3658160611529 * H1x3_3 + -0.16177521959465 * H1x3_4 + 0.23353693967535 * H1x3_5 + 
0.96164596504173 * H1x3_6 + -0.49996390114171 * H1x3_7 ;
499829    +   H2x1_2  = H2x1_2  +    -1.34775541988885 * H1x3_1
499830    +          +    -0.94185062200477 * H1x3_2  +     2.40002799790884 * H1x3_3
499831    +          +      1.3228491036493 * H1x3_4  +    -2.27212522601702 * H1x3_5
499832    +          +     0.22676652176348 * H1x3_6  +     0.96810343094913 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + -1.34775541988885 * H1x3_1 + -0.94185062200477 * 
H1x3_2 + 2.40002799790884 * H1x3_3 + 1.3228491036493 * H1x3_4 + -2.27212522601702 * H1x3_5 + 
0.22676652176348 * H1x3_6 + 0.96810343094913 * H1x3_7 ;
499833    +   H2x1_3  = H2x1_3  +    -0.68382731119741 * H1x3_1
499834    +          +    -0.90388882694092 * H1x3_2  +     0.51668393396039 * H1x3_3
499835    +          +     0.45716345972756 * H1x3_4  +    -0.49320936872992 * H1x3_5
499836    +          +     0.11919896076076 * H1x3_6  +    -0.14288859595709 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + -0.68382731119741 * H1x3_1 + -0.90388882694092 * 
H1x3_2 + 0.51668393396039 * H1x3_3 + 0.45716345972756 * H1x3_4 + -0.49320936872992 * H1x3_5 + 
0.11919896076076 * H1x3_6 + -0.14288859595709 * H1x3_7 ;
499837    +   H2x1_4  = H2x1_4  +    -0.68614915242276 * H1x3_1
499838    +          +     0.55556081003484 * H1x3_2  +     0.26058803548386 * H1x3_3
499839    +          +     0.44653924204999 * H1x3_4  +    -0.97704608173388 * H1x3_5
499840    +          +    -0.04291306465274 * H1x3_6  +    -0.70203538063923 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + -0.68614915242276 * H1x3_1 + 0.55556081003484 * H1x3_2 
+ 0.26058803548386 * H1x3_3 + 0.44653924204999 * H1x3_4 + -0.97704608173388 * H1x3_5 + 
-0.04291306465274 * H1x3_6 + -0.70203538063923 * H1x3_7 ;
499841    +   H2x1_5  = H2x1_5  +     0.58123765973845 * H1x3_1
499842    +          +     0.48842685419846 * H1x3_2  +     1.59951720976688 * H1x3_3
499843    +          +     0.39804915100427 * H1x3_4  +    -0.47629764750379 * H1x3_5
499844    +          +    -1.56133001160202 * H1x3_6  +     1.12232825939123 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + 0.58123765973845 * H1x3_1 + 0.48842685419846 * H1x3_2 
+ 1.59951720976688 * H1x3_3 + 0.39804915100427 * H1x3_4 + -0.47629764750379 * H1x3_5 + 
-1.56133001160202 * H1x3_6 + 1.12232825939123 * H1x3_7 ;
499845    +   H2x1_6  = H2x1_6  +    -0.35903530664944 * H1x3_1
499846    +          +    -1.21870303791063 * H1x3_2  +     -0.0358958118983 * H1x3_3
499847    +          +     1.71577031345204 * H1x3_4  +    -0.29111463093854 * H1x3_5
499848    +          +    -1.77383444462785 * H1x3_6  +    -0.93379473274206 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 + -0.35903530664944 * H1x3_1 + -1.21870303791063 * 
H1x3_2 + -0.0358958118983 * H1x3_3 + 1.71577031345204 * H1x3_4 + -0.29111463093854 * H1x3_5 + 
-1.77383444462785 * H1x3_6 + -0.93379473274206 * H1x3_7 ;
499849    +   H2x1_7  = H2x1_7  +     0.79356954272121 * H1x3_1
499850    +          +    -2.23344635077437 * H1x3_2  +     0.01459894574902 * H1x3_3
499851    +          +    -1.76556734796059 * H1x3_4  +     0.55679401249834 * H1x3_5
499852    +          +    -0.00867866380584 * H1x3_6  +     1.61311341603142 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x1_7 = H2x1_7 + 0.79356954272121 * H1x3_1 + -2.23344635077437 * H1x3_2 
+ 0.01459894574902 * H1x3_3 + -1.76556734796059 * H1x3_4 + 0.55679401249834 * H1x3_5 + 
-0.00867866380584 * H1x3_6 + 1.61311341603142 * H1x3_7 ;
499853    +   H2x1_1  =     0.45495097945606 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 0.45495097945606 + H2x1_1 ;
499854    +   H2x1_2  =    -0.00150409200191 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -0.00150409200191 + H2x1_2 ;
499855    +   H2x1_3  =     0.06766385008662 + H2x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = 0.06766385008662 + H2x1_3 ;
499856    +   H2x1_4  =    -0.15767488957433 + H2x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = -0.15767488957433 + H2x1_4 ;
499857    +   H2x1_5  =     3.00862692955968 + H2x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = 3.00862692955968 + H2x1_5 ;
499858    +   H2x1_6  =     1.46151036473661 + H2x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = 1.46151036473661 + H2x1_6 ;
499859    +   H2x1_7  =    -1.14350195577506 + H2x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_7 = -1.14350195577506 + H2x1_7 ;
499860    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
499861    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
499862    +   H2x1_1  = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
499863    +   H2x1_2  = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
499864    +   H2x1_3  = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_3 = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
499865    +   H2x1_4  = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_4 = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
499866    +   H2x1_5  = 1.0 / (1.0 + EXP(MIN( - H2x1_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_5 = 1.0 / (1.0 + EXP(MIN( - H2x1_5 , _EXP_BAR)));
499867    +   H2x1_6  = 1.0 / (1.0 + EXP(MIN( - H2x1_6 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_6 = 1.0 / (1.0 + EXP(MIN( - H2x1_6 , _EXP_BAR)));
499868    +   H2x1_7  = 1.0 / (1.0 + EXP(MIN( - H2x1_7 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_7 = 1.0 / (1.0 + EXP(MIN( - H2x1_7 , _EXP_BAR)));
499869    +END;
MPRINT(EM_DIAGRAM):   END;
499870    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
499871    +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
499872    +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
499873    +   H2x1_3  = .;
MPRINT(EM_DIAGRAM):   H2x1_3 = .;
499874    +   H2x1_4  = .;
MPRINT(EM_DIAGRAM):   H2x1_4 = .;
499875    +   H2x1_5  = .;
MPRINT(EM_DIAGRAM):   H2x1_5 = .;
499876    +   H2x1_6  = .;
MPRINT(EM_DIAGRAM):   H2x1_6 = .;
499877    +   H2x1_7  = .;
MPRINT(EM_DIAGRAM):   H2x1_7 = .;
499878    +END;
MPRINT(EM_DIAGRAM):   END;
499879    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
499880    +*** Writing the Node H2x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x2_ ;
499881    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
499882    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
499883    +   H2x2_1  =     -0.6098073780758 * H1x1_1  +    -0.36212005078054 * H1x1_2
499884    +          +     0.06355695656592 * H1x1_3  +     0.42978415336514 * H1x1_4
499885    +          +     1.73171637681701 * H1x1_5  +    -0.19499247120261 * H1x1_6
499886    +          +     0.74015079276747 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = -0.6098073780758 * H1x1_1 + -0.36212005078054 * H1x1_2 + 
0.06355695656592 * H1x1_3 + 0.42978415336514 * H1x1_4 + 1.73171637681701 * H1x1_5 + 
-0.19499247120261 * H1x1_6 + 0.74015079276747 * H1x1_7 ;
499887    +   H2x2_2  =     0.94291268086892 * H1x1_1  +    -0.57821086705904 * H1x1_2
499888    +          +     1.78126629448091 * H1x1_3  +    -1.19267460568433 * H1x1_4
499889    +          +    -0.23111688249081 * H1x1_5  +     0.48499259969431 * H1x1_6
499890    +          +    -1.56999349458897 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = 0.94291268086892 * H1x1_1 + -0.57821086705904 * H1x1_2 + 
1.78126629448091 * H1x1_3 + -1.19267460568433 * H1x1_4 + -0.23111688249081 * H1x1_5 + 
0.48499259969431 * H1x1_6 + -1.56999349458897 * H1x1_7 ;
499891    +   H2x2_3  =    -0.83943846185187 * H1x1_1  +     0.07494097035466 * H1x1_2
499892    +          +    -0.22510824455886 * H1x1_3  +     0.73702100581613 * H1x1_4
499893    +          +     0.84717434356729 * H1x1_5  +      1.1890648131813 * H1x1_6
499894    +          +    -0.69985750736721 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = -0.83943846185187 * H1x1_1 + 0.07494097035466 * H1x1_2 + 
-0.22510824455886 * H1x1_3 + 0.73702100581613 * H1x1_4 + 0.84717434356729 * H1x1_5 + 
1.1890648131813 * H1x1_6 + -0.69985750736721 * H1x1_7 ;
499895    +   H2x2_4  =     1.34186573490327 * H1x1_1  +     0.10476556384336 * H1x1_2
499896    +          +    -0.07073923857851 * H1x1_3  +     0.49865386241422 * H1x1_4
499897    +          +     1.20386613863792 * H1x1_5  +     0.13033316874168 * H1x1_6
499898    +          +     0.36095712511699 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = 1.34186573490327 * H1x1_1 + 0.10476556384336 * H1x1_2 + 
-0.07073923857851 * H1x1_3 + 0.49865386241422 * H1x1_4 + 1.20386613863792 * H1x1_5 + 
0.13033316874168 * H1x1_6 + 0.36095712511699 * H1x1_7 ;
499899    +   H2x2_5  =     0.18683850895928 * H1x1_1  +     0.14087720385762 * H1x1_2
499900    +          +     0.39026989292984 * H1x1_3  +     0.40839626117338 * H1x1_4
499901    +          +     0.17816964710989 * H1x1_5  +     0.64340089705428 * H1x1_6
499902    +          +    -1.27363167094111 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x2_5 = 0.18683850895928 * H1x1_1 + 0.14087720385762 * H1x1_2 + 
0.39026989292984 * H1x1_3 + 0.40839626117338 * H1x1_4 + 0.17816964710989 * H1x1_5 + 
0.64340089705428 * H1x1_6 + -1.27363167094111 * H1x1_7 ;
499903    +   H2x2_6  =     0.67895838050616 * H1x1_1  +     0.23794862788395 * H1x1_2
499904    +          +     1.47625698143483 * H1x1_3  +    -0.78874578699705 * H1x1_4
499905    +          +     0.11576168045678 * H1x1_5  +     0.44470888441177 * H1x1_6
499906    +          +     1.87629961612594 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x2_6 = 0.67895838050616 * H1x1_1 + 0.23794862788395 * H1x1_2 + 
1.47625698143483 * H1x1_3 + -0.78874578699705 * H1x1_4 + 0.11576168045678 * H1x1_5 + 
0.44470888441177 * H1x1_6 + 1.87629961612594 * H1x1_7 ;
499907    +   H2x2_7  =     0.68721855914482 * H1x1_1  +    -0.49548906059129 * H1x1_2
499908    +          +    -0.95479435424814 * H1x1_3  +    -0.39636357013457 * H1x1_4
499909    +          +     1.05784760554335 * H1x1_5  +     0.55302681608178 * H1x1_6
499910    +          +     0.46646041474723 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x2_7 = 0.68721855914482 * H1x1_1 + -0.49548906059129 * H1x1_2 + 
-0.95479435424814 * H1x1_3 + -0.39636357013457 * H1x1_4 + 1.05784760554335 * H1x1_5 + 
0.55302681608178 * H1x1_6 + 0.46646041474723 * H1x1_7 ;
499911    +   H2x2_1  = H2x2_1  +    -0.27434389803517 * H1x2_1
499912    +          +    -0.02074671287693 * H1x2_2  +    -1.51155778758517 * H1x2_3
499913    +          +    -1.19011584420542 * H1x2_4  +     -0.8540083688408 * H1x2_5
499914    +          +    -0.51772310023527 * H1x2_6  +     -0.0192399267251 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + -0.27434389803517 * H1x2_1 + -0.02074671287693 * 
H1x2_2 + -1.51155778758517 * H1x2_3 + -1.19011584420542 * H1x2_4 + -0.8540083688408 * H1x2_5 + 
-0.51772310023527 * H1x2_6 + -0.0192399267251 * H1x2_7 ;
499915    +   H2x2_2  = H2x2_2  +      -1.312525087163 * H1x2_1
499916    +          +     1.19175487774401 * H1x2_2  +    -1.10903746388023 * H1x2_3
499917    +          +      0.2627511726941 * H1x2_4  +    -1.49474705736936 * H1x2_5
499918    +          +     0.79354329450131 * H1x2_6  +    -0.48676510074213 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 + -1.312525087163 * H1x2_1 + 1.19175487774401 * H1x2_2 + 
-1.10903746388023 * H1x2_3 + 0.2627511726941 * H1x2_4 + -1.49474705736936 * H1x2_5 + 
0.79354329450131 * H1x2_6 + -0.48676510074213 * H1x2_7 ;
499919    +   H2x2_3  = H2x2_3  +     0.36715282986404 * H1x2_1
499920    +          +    -1.54691354420052 * H1x2_2  +     0.58334429972967 * H1x2_3
499921    +          +     3.32026929025218 * H1x2_4  +     0.08578287392048 * H1x2_5
499922    +          +     0.66591130534429 * H1x2_6  +     0.57559013181145 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = H2x2_3 + 0.36715282986404 * H1x2_1 + -1.54691354420052 * H1x2_2 
+ 0.58334429972967 * H1x2_3 + 3.32026929025218 * H1x2_4 + 0.08578287392048 * H1x2_5 + 
0.66591130534429 * H1x2_6 + 0.57559013181145 * H1x2_7 ;
499923    +   H2x2_4  = H2x2_4  +     1.28239253398808 * H1x2_1
499924    +          +     0.06662925242621 * H1x2_2  +     0.49967984015316 * H1x2_3
499925    +          +     0.65508978056742 * H1x2_4  +    -0.28141359636508 * H1x2_5
499926    +          +    -0.11787887977724 * H1x2_6  +     -0.6607325871171 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = H2x2_4 + 1.28239253398808 * H1x2_1 + 0.06662925242621 * H1x2_2 
+ 0.49967984015316 * H1x2_3 + 0.65508978056742 * H1x2_4 + -0.28141359636508 * H1x2_5 + 
-0.11787887977724 * H1x2_6 + -0.6607325871171 * H1x2_7 ;
499927    +   H2x2_5  = H2x2_5  +    -0.49511046906315 * H1x2_1
499928    +          +    -1.88759923025868 * H1x2_2  +    -0.99578805432186 * H1x2_3
499929    +          +     0.47300607025135 * H1x2_4  +     0.73725488149784 * H1x2_5
499930    +          +     0.56107930260304 * H1x2_6  +     -0.6618265083723 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x2_5 = H2x2_5 + -0.49511046906315 * H1x2_1 + -1.88759923025868 * 
H1x2_2 + -0.99578805432186 * H1x2_3 + 0.47300607025135 * H1x2_4 + 0.73725488149784 * H1x2_5 + 
0.56107930260304 * H1x2_6 + -0.6618265083723 * H1x2_7 ;
499931    +   H2x2_6  = H2x2_6  +    -0.56511063846684 * H1x2_1
499932    +          +      0.1682036403191 * H1x2_2  +     -0.7835100270482 * H1x2_3
499933    +          +    -0.05926261017522 * H1x2_4  +     0.28303530518131 * H1x2_5
499934    +          +     1.57291802723543 * H1x2_6  +    -1.59403373749444 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x2_6 = H2x2_6 + -0.56511063846684 * H1x2_1 + 0.1682036403191 * H1x2_2 
+ -0.7835100270482 * H1x2_3 + -0.05926261017522 * H1x2_4 + 0.28303530518131 * H1x2_5 + 
1.57291802723543 * H1x2_6 + -1.59403373749444 * H1x2_7 ;
499935    +   H2x2_7  = H2x2_7  +    -1.06397759700592 * H1x2_1
499936    +          +    -0.21206214531111 * H1x2_2  +     1.52697813698804 * H1x2_3
499937    +          +    -0.03132126915438 * H1x2_4  +     0.11910805580916 * H1x2_5
499938    +          +     1.03394382602734 * H1x2_6  +    -0.28139834412941 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x2_7 = H2x2_7 + -1.06397759700592 * H1x2_1 + -0.21206214531111 * 
H1x2_2 + 1.52697813698804 * H1x2_3 + -0.03132126915438 * H1x2_4 + 0.11910805580916 * H1x2_5 + 
1.03394382602734 * H1x2_6 + -0.28139834412941 * H1x2_7 ;
499939    +   H2x2_1  = H2x2_1  +    -1.18028681022903 * H1x3_1
499940    +          +    -0.56354962807969 * H1x3_2  +    -0.32071823564038 * H1x3_3
499941    +          +    -1.14868021494554 * H1x3_4  +     0.50491385711883 * H1x3_5
499942    +          +      0.3595638799915 * H1x3_6  +    -1.04253859844314 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + -1.18028681022903 * H1x3_1 + -0.56354962807969 * 
H1x3_2 + -0.32071823564038 * H1x3_3 + -1.14868021494554 * H1x3_4 + 0.50491385711883 * H1x3_5 + 
0.3595638799915 * H1x3_6 + -1.04253859844314 * H1x3_7 ;
499943    +   H2x2_2  = H2x2_2  +     1.10237781244945 * H1x3_1
499944    +          +     1.08171284637926 * H1x3_2  +     0.51153068676713 * H1x3_3
499945    +          +     -0.0106772728333 * H1x3_4  +     0.21777593557961 * H1x3_5
499946    +          +     0.10772516691825 * H1x3_6  +    -0.91346091248416 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 + 1.10237781244945 * H1x3_1 + 1.08171284637926 * H1x3_2 
+ 0.51153068676713 * H1x3_3 + -0.0106772728333 * H1x3_4 + 0.21777593557961 * H1x3_5 + 
0.10772516691825 * H1x3_6 + -0.91346091248416 * H1x3_7 ;
499947    +   H2x2_3  = H2x2_3  +    -0.71132206215234 * H1x3_1
499948    +          +     0.60006902706544 * H1x3_2  +      -0.471170925786 * H1x3_3
499949    +          +     0.07477379311969 * H1x3_4  +    -0.34034195429991 * H1x3_5
499950    +          +     1.63429052967629 * H1x3_6  +     0.13697740143754 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = H2x2_3 + -0.71132206215234 * H1x3_1 + 0.60006902706544 * H1x3_2 
+ -0.471170925786 * H1x3_3 + 0.07477379311969 * H1x3_4 + -0.34034195429991 * H1x3_5 + 
1.63429052967629 * H1x3_6 + 0.13697740143754 * H1x3_7 ;
499951    +   H2x2_4  = H2x2_4  +     0.76338339806809 * H1x3_1
499952    +          +     0.34600443003632 * H1x3_2  +    -0.60707577837208 * H1x3_3
499953    +          +     1.37001034857478 * H1x3_4  +    -1.24749521510775 * H1x3_5
499954    +          +    -1.45784349983015 * H1x3_6  +     0.12879195100917 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = H2x2_4 + 0.76338339806809 * H1x3_1 + 0.34600443003632 * H1x3_2 
+ -0.60707577837208 * H1x3_3 + 1.37001034857478 * H1x3_4 + -1.24749521510775 * H1x3_5 + 
-1.45784349983015 * H1x3_6 + 0.12879195100917 * H1x3_7 ;
499955    +   H2x2_5  = H2x2_5  +    -2.33392280718246 * H1x3_1
499956    +          +    -0.48123076018945 * H1x3_2  +    -0.76638732765894 * H1x3_3
499957    +          +    -1.76560846551209 * H1x3_4  +     1.62249911960883 * H1x3_5
499958    +          +    -0.31271093507345 * H1x3_6  +    -0.34748800562391 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x2_5 = H2x2_5 + -2.33392280718246 * H1x3_1 + -0.48123076018945 * 
H1x3_2 + -0.76638732765894 * H1x3_3 + -1.76560846551209 * H1x3_4 + 1.62249911960883 * H1x3_5 + 
-0.31271093507345 * H1x3_6 + -0.34748800562391 * H1x3_7 ;
499959    +   H2x2_6  = H2x2_6  +     0.53202536648562 * H1x3_1
499960    +          +     0.36605088046069 * H1x3_2  +     -1.7626773020241 * H1x3_3
499961    +          +     0.14681062331369 * H1x3_4  +     0.10699108516053 * H1x3_5
499962    +          +     2.24609371442936 * H1x3_6  +    -0.59076884674419 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x2_6 = H2x2_6 + 0.53202536648562 * H1x3_1 + 0.36605088046069 * H1x3_2 
+ -1.7626773020241 * H1x3_3 + 0.14681062331369 * H1x3_4 + 0.10699108516053 * H1x3_5 + 
2.24609371442936 * H1x3_6 + -0.59076884674419 * H1x3_7 ;
499963    +   H2x2_7  = H2x2_7  +    -0.05290923023086 * H1x3_1
499964    +          +    -0.30472796298249 * H1x3_2  +     1.89100111779461 * H1x3_3
499965    +          +     0.51110284119421 * H1x3_4  +     -0.2014479939412 * H1x3_5
499966    +          +     1.02507111515379 * H1x3_6  +    -0.63211120065975 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x2_7 = H2x2_7 + -0.05290923023086 * H1x3_1 + -0.30472796298249 * 
H1x3_2 + 1.89100111779461 * H1x3_3 + 0.51110284119421 * H1x3_4 + -0.2014479939412 * H1x3_5 + 
1.02507111515379 * H1x3_6 + -0.63211120065975 * H1x3_7 ;
499967    +   H2x2_1  =    -2.15023760884419 + H2x2_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = -2.15023760884419 + H2x2_1 ;
499968    +   H2x2_2  =    -1.03542203438136 + H2x2_2 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = -1.03542203438136 + H2x2_2 ;
499969    +   H2x2_3  =    -1.03202542428687 + H2x2_3 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = -1.03202542428687 + H2x2_3 ;
499970    +   H2x2_4  =     0.79380822765375 + H2x2_4 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = 0.79380822765375 + H2x2_4 ;
499971    +   H2x2_5  =    -0.37637686056399 + H2x2_5 ;
MPRINT(EM_DIAGRAM):   H2x2_5 = -0.37637686056399 + H2x2_5 ;
499972    +   H2x2_6  =    -0.12032383488066 + H2x2_6 ;
MPRINT(EM_DIAGRAM):   H2x2_6 = -0.12032383488066 + H2x2_6 ;
499973    +   H2x2_7  =     0.84544057856735 + H2x2_7 ;
MPRINT(EM_DIAGRAM):   H2x2_7 = 0.84544057856735 + H2x2_7 ;
499974    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
499975    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
499976    +   H2x2_1  = 1.0 / (1.0 + EXP(MIN( - H2x2_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x2_1 = 1.0 / (1.0 + EXP(MIN( - H2x2_1 , _EXP_BAR)));
499977    +   H2x2_2  = 1.0 / (1.0 + EXP(MIN( - H2x2_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x2_2 = 1.0 / (1.0 + EXP(MIN( - H2x2_2 , _EXP_BAR)));
499978    +   H2x2_3  = 1.0 / (1.0 + EXP(MIN( - H2x2_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x2_3 = 1.0 / (1.0 + EXP(MIN( - H2x2_3 , _EXP_BAR)));
499979    +   H2x2_4  = 1.0 / (1.0 + EXP(MIN( - H2x2_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x2_4 = 1.0 / (1.0 + EXP(MIN( - H2x2_4 , _EXP_BAR)));
499980    +   H2x2_5  = 1.0 / (1.0 + EXP(MIN( - H2x2_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x2_5 = 1.0 / (1.0 + EXP(MIN( - H2x2_5 , _EXP_BAR)));
499981    +   H2x2_6  = 1.0 / (1.0 + EXP(MIN( - H2x2_6 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x2_6 = 1.0 / (1.0 + EXP(MIN( - H2x2_6 , _EXP_BAR)));
499982    +   H2x2_7  = 1.0 / (1.0 + EXP(MIN( - H2x2_7 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x2_7 = 1.0 / (1.0 + EXP(MIN( - H2x2_7 , _EXP_BAR)));
499983    +END;
MPRINT(EM_DIAGRAM):   END;
499984    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
499985    +   H2x2_1  = .;
MPRINT(EM_DIAGRAM):   H2x2_1 = .;
499986    +   H2x2_2  = .;
MPRINT(EM_DIAGRAM):   H2x2_2 = .;
499987    +   H2x2_3  = .;
MPRINT(EM_DIAGRAM):   H2x2_3 = .;
499988    +   H2x2_4  = .;
MPRINT(EM_DIAGRAM):   H2x2_4 = .;
499989    +   H2x2_5  = .;
MPRINT(EM_DIAGRAM):   H2x2_5 = .;
499990    +   H2x2_6  = .;
MPRINT(EM_DIAGRAM):   H2x2_6 = .;
499991    +   H2x2_7  = .;
MPRINT(EM_DIAGRAM):   H2x2_7 = .;
499992    +END;
MPRINT(EM_DIAGRAM):   END;
499993    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
499994    +*** Writing the Node H3x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H3x1_ ;
499995    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
499996    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
499997    +   H3x1_1  =    -0.90634182479211 * H2x1_1  +    -0.09135307681655 * H2x1_2
499998    +          +     -1.1697186659188 * H2x1_3  +    -1.58089509972168 * H2x1_4
499999    +          +    -0.36298075828987 * H2x1_5  +     -0.1512750341775 * H2x1_6
500000    +          +    -0.95333639415651 * H2x1_7 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = -0.90634182479211 * H2x1_1 + -0.09135307681655 * H2x1_2 + 
-1.1697186659188 * H2x1_3 + -1.58089509972168 * H2x1_4 + -0.36298075828987 * H2x1_5 + 
-0.1512750341775 * H2x1_6 + -0.95333639415651 * H2x1_7 ;
500001    +   H3x1_2  =     0.55686365647701 * H2x1_1  +      1.5696753982442 * H2x1_2
500002    +          +    -0.32250855602992 * H2x1_3  +     0.19455668370146 * H2x1_4
500003    +          +     0.44351097086868 * H2x1_5  +     0.27358852097745 * H2x1_6
500004    +          +      0.4281879736941 * H2x1_7 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = 0.55686365647701 * H2x1_1 + 1.5696753982442 * H2x1_2 + 
-0.32250855602992 * H2x1_3 + 0.19455668370146 * H2x1_4 + 0.44351097086868 * H2x1_5 + 
0.27358852097745 * H2x1_6 + 0.4281879736941 * H2x1_7 ;
500005    +   H3x1_3  =     0.12633341645489 * H2x1_1  +    -0.66899185238366 * H2x1_2
500006    +          +    -2.56536949854372 * H2x1_3  +    -1.44702955697377 * H2x1_4
500007    +          +    -2.12726548877297 * H2x1_5  +     0.98860110338896 * H2x1_6
500008    +          +    -1.81290069415788 * H2x1_7 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = 0.12633341645489 * H2x1_1 + -0.66899185238366 * H2x1_2 + 
-2.56536949854372 * H2x1_3 + -1.44702955697377 * H2x1_4 + -2.12726548877297 * H2x1_5 + 
0.98860110338896 * H2x1_6 + -1.81290069415788 * H2x1_7 ;
500009    +   H3x1_4  =     -1.5244883189849 * H2x1_1  +     -0.8795974458787 * H2x1_2
500010    +          +    -0.90961705850703 * H2x1_3  +    -0.41256891447907 * H2x1_4
500011    +          +    -1.55913982799805 * H2x1_5  +     -0.9171280329681 * H2x1_6
500012    +          +    -0.70506147827449 * H2x1_7 ;
MPRINT(EM_DIAGRAM):   H3x1_4 = -1.5244883189849 * H2x1_1 + -0.8795974458787 * H2x1_2 + 
-0.90961705850703 * H2x1_3 + -0.41256891447907 * H2x1_4 + -1.55913982799805 * H2x1_5 + 
-0.9171280329681 * H2x1_6 + -0.70506147827449 * H2x1_7 ;
500013    +   H3x1_5  =     0.35217616707387 * H2x1_1  +    -1.16700891298034 * H2x1_2
500014    +          +      0.5371834401358 * H2x1_3  +     2.90147333104132 * H2x1_4
500015    +          +     0.77800792666349 * H2x1_5  +     0.78250225671691 * H2x1_6
500016    +          +    -0.59091463760785 * H2x1_7 ;
MPRINT(EM_DIAGRAM):   H3x1_5 = 0.35217616707387 * H2x1_1 + -1.16700891298034 * H2x1_2 + 
0.5371834401358 * H2x1_3 + 2.90147333104132 * H2x1_4 + 0.77800792666349 * H2x1_5 + 
0.78250225671691 * H2x1_6 + -0.59091463760785 * H2x1_7 ;
500017    +   H3x1_6  =    -0.44929632444778 * H2x1_1  +    -0.78833736143978 * H2x1_2
500018    +          +    -2.25458905584756 * H2x1_3  +    -1.94571232358746 * H2x1_4
500019    +          +     1.80055450278469 * H2x1_5  +     1.56927477052283 * H2x1_6
500020    +          +     0.56206783006188 * H2x1_7 ;
MPRINT(EM_DIAGRAM):   H3x1_6 = -0.44929632444778 * H2x1_1 + -0.78833736143978 * H2x1_2 + 
-2.25458905584756 * H2x1_3 + -1.94571232358746 * H2x1_4 + 1.80055450278469 * H2x1_5 + 
1.56927477052283 * H2x1_6 + 0.56206783006188 * H2x1_7 ;
500021    +   H3x1_1  = H3x1_1  +    -1.50414812258238 * H2x2_1
500022    +          +     2.71183535634521 * H2x2_2  +     0.92780495410356 * H2x2_3
500023    +          +     1.94819401410825 * H2x2_4  +     0.85505273909828 * H2x2_5
500024    +          +    -0.66540689026991 * H2x2_6  +    -0.32749055872531 * H2x2_7 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = H3x1_1 + -1.50414812258238 * H2x2_1 + 2.71183535634521 * H2x2_2 
+ 0.92780495410356 * H2x2_3 + 1.94819401410825 * H2x2_4 + 0.85505273909828 * H2x2_5 + 
-0.66540689026991 * H2x2_6 + -0.32749055872531 * H2x2_7 ;
500025    +   H3x1_2  = H3x1_2  +     0.55540470737424 * H2x2_1
500026    +          +    -1.17598972209898 * H2x2_2  +    -0.16619065810258 * H2x2_3
500027    +          +    -0.58955298520043 * H2x2_4  +     1.04029871696373 * H2x2_5
500028    +          +    -0.71430896416332 * H2x2_6  +    -1.57031773170963 * H2x2_7 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = H3x1_2 + 0.55540470737424 * H2x2_1 + -1.17598972209898 * H2x2_2 
+ -0.16619065810258 * H2x2_3 + -0.58955298520043 * H2x2_4 + 1.04029871696373 * H2x2_5 + 
-0.71430896416332 * H2x2_6 + -1.57031773170963 * H2x2_7 ;
500029    +   H3x1_3  = H3x1_3  +    -1.83796456414338 * H2x2_1
500030    +          +     1.49146311784803 * H2x2_2  +     0.05550989818961 * H2x2_3
500031    +          +    -0.08016006878981 * H2x2_4  +    -1.41328284571945 * H2x2_5
500032    +          +    -0.58920642563444 * H2x2_6  +     1.30950353008631 * H2x2_7 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = H3x1_3 + -1.83796456414338 * H2x2_1 + 1.49146311784803 * H2x2_2 
+ 0.05550989818961 * H2x2_3 + -0.08016006878981 * H2x2_4 + -1.41328284571945 * H2x2_5 + 
-0.58920642563444 * H2x2_6 + 1.30950353008631 * H2x2_7 ;
500033    +   H3x1_4  = H3x1_4  +     0.91384399854626 * H2x2_1
500034    +          +     -0.0377841204978 * H2x2_2  +     0.67274196472005 * H2x2_3
500035    +          +     0.76900504900432 * H2x2_4  +     0.71823373480501 * H2x2_5
500036    +          +    -0.04199535362683 * H2x2_6  +    -0.23501610033448 * H2x2_7 ;
MPRINT(EM_DIAGRAM):   H3x1_4 = H3x1_4 + 0.91384399854626 * H2x2_1 + -0.0377841204978 * H2x2_2 
+ 0.67274196472005 * H2x2_3 + 0.76900504900432 * H2x2_4 + 0.71823373480501 * H2x2_5 + 
-0.04199535362683 * H2x2_6 + -0.23501610033448 * H2x2_7 ;
500037    +   H3x1_5  = H3x1_5  +    -0.06769558303335 * H2x2_1
500038    +          +    -0.95662890382057 * H2x2_2  +    -0.56314830579562 * H2x2_3
500039    +          +    -0.17355939108245 * H2x2_4  +     0.49684441057813 * H2x2_5
500040    +          +    -0.27220440010331 * H2x2_6  +     1.13747855812864 * H2x2_7 ;
MPRINT(EM_DIAGRAM):   H3x1_5 = H3x1_5 + -0.06769558303335 * H2x2_1 + -0.95662890382057 * 
H2x2_2 + -0.56314830579562 * H2x2_3 + -0.17355939108245 * H2x2_4 + 0.49684441057813 * H2x2_5 + 
-0.27220440010331 * H2x2_6 + 1.13747855812864 * H2x2_7 ;
500041    +   H3x1_6  = H3x1_6  +    -0.58306849781773 * H2x2_1
500042    +          +    -1.96921645645113 * H2x2_2  +     0.09529919260054 * H2x2_3
500043    +          +     1.84321935581989 * H2x2_4  +     1.90621049776113 * H2x2_5
500044    +          +     0.22735961476244 * H2x2_6  +      1.7681869270915 * H2x2_7 ;
MPRINT(EM_DIAGRAM):   H3x1_6 = H3x1_6 + -0.58306849781773 * H2x2_1 + -1.96921645645113 * 
H2x2_2 + 0.09529919260054 * H2x2_3 + 1.84321935581989 * H2x2_4 + 1.90621049776113 * H2x2_5 + 
0.22735961476244 * H2x2_6 + 1.7681869270915 * H2x2_7 ;
500045    +   H3x1_1  =     0.84072071725045 + H3x1_1 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = 0.84072071725045 + H3x1_1 ;
500046    +   H3x1_2  =    -0.84331420680493 + H3x1_2 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = -0.84331420680493 + H3x1_2 ;
500047    +   H3x1_3  =    -1.15131491327763 + H3x1_3 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = -1.15131491327763 + H3x1_3 ;
500048    +   H3x1_4  =    -0.56905094914727 + H3x1_4 ;
MPRINT(EM_DIAGRAM):   H3x1_4 = -0.56905094914727 + H3x1_4 ;
500049    +   H3x1_5  =     1.29747074025762 + H3x1_5 ;
MPRINT(EM_DIAGRAM):   H3x1_5 = 1.29747074025762 + H3x1_5 ;
500050    +   H3x1_6  =     1.70771922783336 + H3x1_6 ;
MPRINT(EM_DIAGRAM):   H3x1_6 = 1.70771922783336 + H3x1_6 ;
500051    +   H3x1_7  = 0;
MPRINT(EM_DIAGRAM):   H3x1_7 = 0;
500052    +   _MAX_ = MAX (H3x1_1 , H3x1_2 , H3x1_3 , H3x1_4 , H3x1_5 , H3x1_6 , H3x1_7
500053    +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H3x1_1 , H3x1_2 , H3x1_3 , H3x1_4 , H3x1_5 , H3x1_6 , 
H3x1_7 );
500054    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
500055    +   H3x1_1  = EXP(H3x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_1 = EXP(H3x1_1 - _MAX_);
500056    +   _SUM_ = _SUM_ + H3x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_1 ;
500057    +   H3x1_2  = EXP(H3x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_2 = EXP(H3x1_2 - _MAX_);
500058    +   _SUM_ = _SUM_ + H3x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_2 ;
500059    +   H3x1_3  = EXP(H3x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_3 = EXP(H3x1_3 - _MAX_);
500060    +   _SUM_ = _SUM_ + H3x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_3 ;
500061    +   H3x1_4  = EXP(H3x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_4 = EXP(H3x1_4 - _MAX_);
500062    +   _SUM_ = _SUM_ + H3x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_4 ;
500063    +   H3x1_5  = EXP(H3x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_5 = EXP(H3x1_5 - _MAX_);
500064    +   _SUM_ = _SUM_ + H3x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_5 ;
500065    +   H3x1_6  = EXP(H3x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_6 = EXP(H3x1_6 - _MAX_);
500066    +   _SUM_ = _SUM_ + H3x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_6 ;
500067    +   H3x1_7  = EXP(H3x1_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_7 = EXP(H3x1_7 - _MAX_);
500068    +   _SUM_ = _SUM_ + H3x1_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_7 ;
500069    +   H3x1_1  = H3x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_1 = H3x1_1 / _SUM_;
500070    +   H3x1_2  = H3x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_2 = H3x1_2 / _SUM_;
500071    +   H3x1_3  = H3x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_3 = H3x1_3 / _SUM_;
500072    +   H3x1_4  = H3x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_4 = H3x1_4 / _SUM_;
500073    +   H3x1_5  = H3x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_5 = H3x1_5 / _SUM_;
500074    +   H3x1_6  = H3x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_6 = H3x1_6 / _SUM_;
500075    +   H3x1_7  = H3x1_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_7 = H3x1_7 / _SUM_;
500076    +END;
MPRINT(EM_DIAGRAM):   END;
500077    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
500078    +   H3x1_1  = .;
MPRINT(EM_DIAGRAM):   H3x1_1 = .;
500079    +   H3x1_2  = .;
MPRINT(EM_DIAGRAM):   H3x1_2 = .;
500080    +   H3x1_3  = .;
MPRINT(EM_DIAGRAM):   H3x1_3 = .;
500081    +   H3x1_4  = .;
MPRINT(EM_DIAGRAM):   H3x1_4 = .;
500082    +   H3x1_5  = .;
MPRINT(EM_DIAGRAM):   H3x1_5 = .;
500083    +   H3x1_6  = .;
MPRINT(EM_DIAGRAM):   H3x1_6 = .;
500084    +   H3x1_7  = .;
MPRINT(EM_DIAGRAM):   H3x1_7 = .;
500085    +END;
MPRINT(EM_DIAGRAM):   END;
500086    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
500087    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
500088    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
500089    +
500090    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
500091    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
500092    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
500093    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
500094    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
500095    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
500096    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
500097    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
500098    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
500099    +end;
MPRINT(EM_DIAGRAM):   end;
500100    +else do;
MPRINT(EM_DIAGRAM):   else do;
500101    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
500102    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
500103    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
500104    +   end;
MPRINT(EM_DIAGRAM):   end;
500105    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
500106    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
500107    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
500108    +   end;
MPRINT(EM_DIAGRAM):   end;
500109    +   else do;
MPRINT(EM_DIAGRAM):   else do;
500110    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
500111    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
500112    +   end;
MPRINT(EM_DIAGRAM):   end;
500113    +end;
MPRINT(EM_DIAGRAM):   end;
500114    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
500115    +   P_DepVar1  =    -10.5125772193731 * H3x1_1  +     0.35682915649078 * H3x1_2
500116    +          +    -0.04349805114958 * H3x1_3  +    -0.04491244667008 * H3x1_4
500117    +          +     34.5477259369591 * H3x1_5  +    -16.5063579573423 * H3x1_6
500118    +          +     0.83421675743806 * H3x1_7 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -10.5125772193731 * H3x1_1 + 0.35682915649078 * H3x1_2 + 
-0.04349805114958 * H3x1_3 + -0.04491244667008 * H3x1_4 + 34.5477259369591 * H3x1_5 + 
-16.5063579573423 * H3x1_6 + 0.83421675743806 * H3x1_7 ;
500119    +   P_DepVar1  =     6.85864742009761 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 6.85864742009761 + P_DepVar1 ;
500120    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
500121    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
500122    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
500123    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
500124    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
500125    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
500126    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
500127    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
500128    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
500129    +END;
MPRINT(EM_DIAGRAM):   END;
500130    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
500131    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
500132    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
500133    +END;
MPRINT(EM_DIAGRAM):   END;
500134    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
500135    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
500136    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
500137    +END;
MPRINT(EM_DIAGRAM):   END;
500138    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
500139    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
500140    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
500141    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
500142    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
500143    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
500144    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
500145    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
500146    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
500147    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
500148    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
500149    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
500150    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
500151    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
500152    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
500153    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
500154    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
500155    +END;
MPRINT(EM_DIAGRAM):   END;
500156    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
500157    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
500158    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
500159    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
500160     run;

NOTE: DATA STEP view saved on file EMWS8.AUTONEURAL43_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.META2_TRAIN.VIEW used (Total process time):
      real time           1.49 seconds
      cpu time            0.04 seconds
      
NOTE: DATA statement used (Total process time):
      real time           1.49 seconds
      cpu time            0.04 seconds
      

MPRINT(EM_DIAGRAM):   quit;
500161     quit;
500162     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
500163     filename emflow
500163   ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural43\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural43\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * AutoNeural43: Scoring VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
500164     *------------------------------------------------------------*;
500165     * AutoNeural43: Scoring VALIDATE data;
500166     *------------------------------------------------------------*;
500167     data EMWS8.AutoNeural43_VALIDATE
500168     / view=EMWS8.AutoNeural43_VALIDATE
500169     ;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural43_VALIDATE / view=EMWS8.AutoNeural43_VALIDATE ;
500170     set EMWS8.Meta2_VALIDATE
500171     ;
MPRINT(EM_DIAGRAM):   set EMWS8.Meta2_VALIDATE ;
500172     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural43\EMFLOWSCORE.sas.
500173    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
500174    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
500175    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
500176    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
500177    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
500178    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
500179    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
500180    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
500181    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
500182    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
500183    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
500184    +LENGTH _WARN_ $4
500185    +      F_DepVar  $ 12
500186    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
500187    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
500188    +
500189    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
500190    +
500191    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
500192    +
500193    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
500194    +
500195    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
500196    +
500197    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
500198    +
500199    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
500200    +
500201    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
500202    +
500203    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
500204    +
500205    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
500206    +
500207    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
500208    +
500209    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
500210    +
500211    +      label S_Year_Birth = 'Standard: Year_Birth' ;
MPRINT(EM_DIAGRAM):   label S_Year_Birth = 'Standard: Year_Birth' ;
500212    +
500213    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
500214    +
500215    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
500216    +
500217    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
500218    +
500219    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
500220    +
500221    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
500222    +
500223    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
500224    +
500225    +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
500226    +
500227    +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
500228    +
500229    +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
500230    +
500231    +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
500232    +
500233    +      label H1x1_7 = 'Hidden: H1x1_=7' ;
MPRINT(EM_DIAGRAM):   label H1x1_7 = 'Hidden: H1x1_=7' ;
500234    +
500235    +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
500236    +
500237    +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
500238    +
500239    +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
500240    +
500241    +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
500242    +
500243    +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
500244    +
500245    +      label H1x2_6 = 'Hidden: H1x2_=6' ;
MPRINT(EM_DIAGRAM):   label H1x2_6 = 'Hidden: H1x2_=6' ;
500246    +
500247    +      label H1x2_7 = 'Hidden: H1x2_=7' ;
MPRINT(EM_DIAGRAM):   label H1x2_7 = 'Hidden: H1x2_=7' ;
500248    +
500249    +      label H1x3_1 = 'Hidden: H1x3_=1' ;
MPRINT(EM_DIAGRAM):   label H1x3_1 = 'Hidden: H1x3_=1' ;
500250    +
500251    +      label H1x3_2 = 'Hidden: H1x3_=2' ;
MPRINT(EM_DIAGRAM):   label H1x3_2 = 'Hidden: H1x3_=2' ;
500252    +
500253    +      label H1x3_3 = 'Hidden: H1x3_=3' ;
MPRINT(EM_DIAGRAM):   label H1x3_3 = 'Hidden: H1x3_=3' ;
500254    +
500255    +      label H1x3_4 = 'Hidden: H1x3_=4' ;
MPRINT(EM_DIAGRAM):   label H1x3_4 = 'Hidden: H1x3_=4' ;
500256    +
500257    +      label H1x3_5 = 'Hidden: H1x3_=5' ;
MPRINT(EM_DIAGRAM):   label H1x3_5 = 'Hidden: H1x3_=5' ;
500258    +
500259    +      label H1x3_6 = 'Hidden: H1x3_=6' ;
MPRINT(EM_DIAGRAM):   label H1x3_6 = 'Hidden: H1x3_=6' ;
500260    +
500261    +      label H1x3_7 = 'Hidden: H1x3_=7' ;
MPRINT(EM_DIAGRAM):   label H1x3_7 = 'Hidden: H1x3_=7' ;
500262    +
500263    +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
500264    +
500265    +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
500266    +
500267    +      label H2x1_3 = 'Hidden: H2x1_=3' ;
MPRINT(EM_DIAGRAM):   label H2x1_3 = 'Hidden: H2x1_=3' ;
500268    +
500269    +      label H2x1_4 = 'Hidden: H2x1_=4' ;
MPRINT(EM_DIAGRAM):   label H2x1_4 = 'Hidden: H2x1_=4' ;
500270    +
500271    +      label H2x1_5 = 'Hidden: H2x1_=5' ;
MPRINT(EM_DIAGRAM):   label H2x1_5 = 'Hidden: H2x1_=5' ;
500272    +
500273    +      label H2x1_6 = 'Hidden: H2x1_=6' ;
MPRINT(EM_DIAGRAM):   label H2x1_6 = 'Hidden: H2x1_=6' ;
500274    +
500275    +      label H2x1_7 = 'Hidden: H2x1_=7' ;
MPRINT(EM_DIAGRAM):   label H2x1_7 = 'Hidden: H2x1_=7' ;
500276    +
500277    +      label H2x2_1 = 'Hidden: H2x2_=1' ;
MPRINT(EM_DIAGRAM):   label H2x2_1 = 'Hidden: H2x2_=1' ;
500278    +
500279    +      label H2x2_2 = 'Hidden: H2x2_=2' ;
MPRINT(EM_DIAGRAM):   label H2x2_2 = 'Hidden: H2x2_=2' ;
500280    +
500281    +      label H2x2_3 = 'Hidden: H2x2_=3' ;
MPRINT(EM_DIAGRAM):   label H2x2_3 = 'Hidden: H2x2_=3' ;
500282    +
500283    +      label H2x2_4 = 'Hidden: H2x2_=4' ;
MPRINT(EM_DIAGRAM):   label H2x2_4 = 'Hidden: H2x2_=4' ;
500284    +
500285    +      label H2x2_5 = 'Hidden: H2x2_=5' ;
MPRINT(EM_DIAGRAM):   label H2x2_5 = 'Hidden: H2x2_=5' ;
500286    +
500287    +      label H2x2_6 = 'Hidden: H2x2_=6' ;
MPRINT(EM_DIAGRAM):   label H2x2_6 = 'Hidden: H2x2_=6' ;
500288    +
500289    +      label H2x2_7 = 'Hidden: H2x2_=7' ;
MPRINT(EM_DIAGRAM):   label H2x2_7 = 'Hidden: H2x2_=7' ;
500290    +
500291    +      label H3x1_1 = 'Hidden: H3x1_=1' ;
MPRINT(EM_DIAGRAM):   label H3x1_1 = 'Hidden: H3x1_=1' ;
500292    +
500293    +      label H3x1_2 = 'Hidden: H3x1_=2' ;
MPRINT(EM_DIAGRAM):   label H3x1_2 = 'Hidden: H3x1_=2' ;
500294    +
500295    +      label H3x1_3 = 'Hidden: H3x1_=3' ;
MPRINT(EM_DIAGRAM):   label H3x1_3 = 'Hidden: H3x1_=3' ;
500296    +
500297    +      label H3x1_4 = 'Hidden: H3x1_=4' ;
MPRINT(EM_DIAGRAM):   label H3x1_4 = 'Hidden: H3x1_=4' ;
500298    +
500299    +      label H3x1_5 = 'Hidden: H3x1_=5' ;
MPRINT(EM_DIAGRAM):   label H3x1_5 = 'Hidden: H3x1_=5' ;
500300    +
500301    +      label H3x1_6 = 'Hidden: H3x1_=6' ;
MPRINT(EM_DIAGRAM):   label H3x1_6 = 'Hidden: H3x1_=6' ;
500302    +
500303    +      label H3x1_7 = 'Hidden: H3x1_=7' ;
MPRINT(EM_DIAGRAM):   label H3x1_7 = 'Hidden: H3x1_=7' ;
500304    +
500305    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
500306    +
500307    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
500308    +
500309    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
500310    +
500311    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
500312    +
500313    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
500314    +
500315    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
500316    +
500317    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
500318    +
500319    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
500320    +
500321    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
500322    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
500323    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
500324    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
500325    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
500326    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
500327    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
500328    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
500329    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
500330    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
500331    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
500332    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
500333    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
500334    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
500335    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
500336    +end;
MPRINT(EM_DIAGRAM):   end;
500337    +else do;
MPRINT(EM_DIAGRAM):   else do;
500338    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
500339    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
500340    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
500341    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
500342    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
500343    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
500344    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
500345    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
500346    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
500347    +         end;
MPRINT(EM_DIAGRAM):   end;
500348    +         else do;
MPRINT(EM_DIAGRAM):   else do;
500349    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
500350    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
500351    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
500352    +            end;
MPRINT(EM_DIAGRAM):   end;
500353    +         end;
MPRINT(EM_DIAGRAM):   end;
500354    +      end;
MPRINT(EM_DIAGRAM):   end;
500355    +      else do;
MPRINT(EM_DIAGRAM):   else do;
500356    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
500357    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
500358    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
500359    +         end;
MPRINT(EM_DIAGRAM):   end;
500360    +      end;
MPRINT(EM_DIAGRAM):   end;
500361    +   end;
MPRINT(EM_DIAGRAM):   end;
500362    +   else do;
MPRINT(EM_DIAGRAM):   else do;
500363    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
500364    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
500365    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
500366    +      end;
MPRINT(EM_DIAGRAM):   end;
500367    +      else do;
MPRINT(EM_DIAGRAM):   else do;
500368    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
500369    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
500370    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
500371    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
500372    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
500373    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
500374    +         end;
MPRINT(EM_DIAGRAM):   end;
500375    +      end;
MPRINT(EM_DIAGRAM):   end;
500376    +   end;
MPRINT(EM_DIAGRAM):   end;
500377    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
500378    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
500379    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
500380    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
500381    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
500382    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
500383    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
500384    +   end;
MPRINT(EM_DIAGRAM):   end;
500385    +end;
MPRINT(EM_DIAGRAM):   end;
500386    +
500387    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
500388    +*** Checking missing input Interval
500389    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
500390    +
500391    +IF NMISS(
500392    +   AcceptedCmpTotal ,
500393    +   Frq ,
500394    +   Income ,
500395    +   Mnt ,
500396    +   MntGoldProds ,
500397    +   MntMeatProducts ,
500398    +   NumCatalogPurchases ,
500399    +   NumDealsPurchases ,
500400    +   NumWebVisitsMonth ,
500401    +   RFMstat ,
500402    +   Recency ,
500403    +   Teenhome ,
500404    +   Year_Birth   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Income , Mnt , MntGoldProds , 
MntMeatProducts , NumCatalogPurchases , NumDealsPurchases , NumWebVisitsMonth , RFMstat , 
Recency , Teenhome , Year_Birth ) THEN DO;
500405    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
500406    +
500407    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
500408    +END;
MPRINT(EM_DIAGRAM):   END;
500409    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
500410    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
500411    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
500412    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
500413    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
500414    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
500415    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
500416    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
500417    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
500418    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
500419    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
500420    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
500421    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
500422    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
500423    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
500424    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
500425    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
500426    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
500427    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
500428    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
500429    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
500430    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
500431    +   S_Year_Birth  =    -163.205330145852 +     0.08289609202864 * Year_Birth ;
MPRINT(EM_DIAGRAM):   S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
500432    +END;
MPRINT(EM_DIAGRAM):   END;
500433    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
500434    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
500435    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
500436    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
500437    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
500438    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
500439    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
500440    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
500441    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
500442    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
500443    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
500444    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
500445    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
500446    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
500447    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
500448    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
500449    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
500450    +   ELSE S_NumCatalogPurchases
500451    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
500452    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
500453    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
500454    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
500455    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
500456    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
500457    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
500458    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
500459    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
500460    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
500461    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
500462    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
500463    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
500464    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
500465    +   IF MISSING( Year_Birth ) THEN S_Year_Birth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Year_Birth ) THEN S_Year_Birth = . ;
500466    +   ELSE S_Year_Birth  =    -163.205330145852 +     0.08289609202864 *
500467    +        Year_Birth ;
MPRINT(EM_DIAGRAM):   ELSE S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
500468    +END;
MPRINT(EM_DIAGRAM):   END;
500469    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
500470    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
500471    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
500472    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
500473    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
500474    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
500475    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
500476    +   H1x1_1  =    -0.29618919413806 * S_AcceptedCmpTotal
500477    +          +     0.65621237028757 * S_Frq  +     0.03418945976327 * S_Income
500478    +          +     1.44880456678399 * S_Mnt  +     0.74166093949552 *
500479    +        S_MntGoldProds  +     1.02706876663519 * S_MntMeatProducts
500480    +          +    -0.82528424139262 * S_NumCatalogPurchases
500481    +          +      0.5929046965244 * S_NumDealsPurchases
500482    +          +    -0.52362488197384 * S_NumWebVisitsMonth
500483    +          +     0.37882892269923 * S_RFMstat  +     2.12340115344155 *
500484    +        S_Recency  +    -0.83670225777249 * S_Teenhome
500485    +          +     0.53976656905831 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.29618919413806 * S_AcceptedCmpTotal + 0.65621237028757 * 
S_Frq + 0.03418945976327 * S_Income + 1.44880456678399 * S_Mnt + 0.74166093949552 * 
S_MntGoldProds + 1.02706876663519 * S_MntMeatProducts + -0.82528424139262 * 
S_NumCatalogPurchases + 0.5929046965244 * S_NumDealsPurchases + -0.52362488197384 * 
S_NumWebVisitsMonth + 0.37882892269923 * S_RFMstat + 2.12340115344155 * S_Recency + 
-0.83670225777249 * S_Teenhome + 0.53976656905831 * S_Year_Birth ;
500486    +   H1x1_2  =     0.29962396390652 * S_AcceptedCmpTotal
500487    +          +     -2.5902198016826 * S_Frq  +    -0.18776639473475 * S_Income
500488    +          +    -2.77524252217737 * S_Mnt  +     0.96018065616836 *
500489    +        S_MntGoldProds  +     3.16907172523474 * S_MntMeatProducts
500490    +          +    -0.60117742307807 * S_NumCatalogPurchases
500491    +          +     1.09806082321711 * S_NumDealsPurchases
500492    +          +     1.26617704720444 * S_NumWebVisitsMonth
500493    +          +     1.08444062320284 * S_RFMstat  +     1.05523311776937 *
500494    +        S_Recency  +     -0.2630764341314 * S_Teenhome
500495    +          +    -0.42373178164016 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.29962396390652 * S_AcceptedCmpTotal + -2.5902198016826 * 
S_Frq + -0.18776639473475 * S_Income + -2.77524252217737 * S_Mnt + 0.96018065616836 * 
S_MntGoldProds + 3.16907172523474 * S_MntMeatProducts + -0.60117742307807 * 
S_NumCatalogPurchases + 1.09806082321711 * S_NumDealsPurchases + 1.26617704720444 * 
S_NumWebVisitsMonth + 1.08444062320284 * S_RFMstat + 1.05523311776937 * S_Recency + 
-0.2630764341314 * S_Teenhome + -0.42373178164016 * S_Year_Birth ;
500496    +   H1x1_3  =     2.31041583450369 * S_AcceptedCmpTotal
500497    +          +    -1.96810851023784 * S_Frq  +     0.93795839333407 * S_Income
500498    +          +    -1.55337331547216 * S_Mnt  +     1.13417428979776 *
500499    +        S_MntGoldProds  +     3.70573651287077 * S_MntMeatProducts
500500    +          +     1.63075268570383 * S_NumCatalogPurchases
500501    +          +     0.62057902628545 * S_NumDealsPurchases
500502    +          +     1.85944172136218 * S_NumWebVisitsMonth
500503    +          +     0.51474936656536 * S_RFMstat  +    -2.17922024885571 *
500504    +        S_Recency  +    -0.78663308544854 * S_Teenhome
500505    +          +    -0.08719031066365 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 2.31041583450369 * S_AcceptedCmpTotal + -1.96810851023784 * 
S_Frq + 0.93795839333407 * S_Income + -1.55337331547216 * S_Mnt + 1.13417428979776 * 
S_MntGoldProds + 3.70573651287077 * S_MntMeatProducts + 1.63075268570383 * 
S_NumCatalogPurchases + 0.62057902628545 * S_NumDealsPurchases + 1.85944172136218 * 
S_NumWebVisitsMonth + 0.51474936656536 * S_RFMstat + -2.17922024885571 * S_Recency + 
-0.78663308544854 * S_Teenhome + -0.08719031066365 * S_Year_Birth ;
500506    +   H1x1_4  =     -0.0390409024382 * S_AcceptedCmpTotal
500507    +          +     2.11606776858073 * S_Frq  +     -0.3817450995856 * S_Income
500508    +          +     0.40531492299483 * S_Mnt  +     0.54341985868017 *
500509    +        S_MntGoldProds  +    -5.50809183295151 * S_MntMeatProducts
500510    +          +    -2.59032878085972 * S_NumCatalogPurchases
500511    +          +    -0.44146008176644 * S_NumDealsPurchases
500512    +          +     1.16377649939583 * S_NumWebVisitsMonth
500513    +          +    -0.40950445519308 * S_RFMstat  +     1.44701615363875 *
500514    +        S_Recency  +    -0.44721505258044 * S_Teenhome
500515    +          +    -0.53780522701747 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -0.0390409024382 * S_AcceptedCmpTotal + 2.11606776858073 * 
S_Frq + -0.3817450995856 * S_Income + 0.40531492299483 * S_Mnt + 0.54341985868017 * 
S_MntGoldProds + -5.50809183295151 * S_MntMeatProducts + -2.59032878085972 * 
S_NumCatalogPurchases + -0.44146008176644 * S_NumDealsPurchases + 1.16377649939583 * 
S_NumWebVisitsMonth + -0.40950445519308 * S_RFMstat + 1.44701615363875 * S_Recency + 
-0.44721505258044 * S_Teenhome + -0.53780522701747 * S_Year_Birth ;
500516    +   H1x1_5  =    -0.96249689474011 * S_AcceptedCmpTotal
500517    +          +     1.18171571446591 * S_Frq  +     0.15643078933994 * S_Income
500518    +          +      1.1855275327594 * S_Mnt  +    -0.31882188338593 *
500519    +        S_MntGoldProds  +    -0.17799046807331 * S_MntMeatProducts
500520    +          +    -2.88423926492169 * S_NumCatalogPurchases
500521    +          +     0.76448279454687 * S_NumDealsPurchases
500522    +          +     0.63782718366339 * S_NumWebVisitsMonth
500523    +          +    -1.52311206450608 * S_RFMstat  +     2.66138322599513 *
500524    +        S_Recency  +     0.19809045233143 * S_Teenhome
500525    +          +    -0.11944673598308 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -0.96249689474011 * S_AcceptedCmpTotal + 1.18171571446591 * 
S_Frq + 0.15643078933994 * S_Income + 1.1855275327594 * S_Mnt + -0.31882188338593 * 
S_MntGoldProds + -0.17799046807331 * S_MntMeatProducts + -2.88423926492169 * 
S_NumCatalogPurchases + 0.76448279454687 * S_NumDealsPurchases + 0.63782718366339 * 
S_NumWebVisitsMonth + -1.52311206450608 * S_RFMstat + 2.66138322599513 * S_Recency + 
0.19809045233143 * S_Teenhome + -0.11944673598308 * S_Year_Birth ;
500526    +   H1x1_6  =     1.48018319811202 * S_AcceptedCmpTotal
500527    +          +    -2.35201132061873 * S_Frq  +     1.49549206730687 * S_Income
500528    +          +    -0.92311571755706 * S_Mnt  +    -0.17036386789536 *
500529    +        S_MntGoldProds  +     2.42959371021324 * S_MntMeatProducts
500530    +          +     1.71243370379543 * S_NumCatalogPurchases
500531    +          +     1.59034024362028 * S_NumDealsPurchases
500532    +          +     2.43090724707282 * S_NumWebVisitsMonth
500533    +          +    -1.84934930083177 * S_RFMstat  +    -1.10219728762745 *
500534    +        S_Recency  +    -1.20398234836557 * S_Teenhome
500535    +          +    -0.04071326663204 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_6 = 1.48018319811202 * S_AcceptedCmpTotal + -2.35201132061873 * 
S_Frq + 1.49549206730687 * S_Income + -0.92311571755706 * S_Mnt + -0.17036386789536 * 
S_MntGoldProds + 2.42959371021324 * S_MntMeatProducts + 1.71243370379543 * 
S_NumCatalogPurchases + 1.59034024362028 * S_NumDealsPurchases + 2.43090724707282 * 
S_NumWebVisitsMonth + -1.84934930083177 * S_RFMstat + -1.10219728762745 * S_Recency + 
-1.20398234836557 * S_Teenhome + -0.04071326663204 * S_Year_Birth ;
500536    +   H1x1_1  = H1x1_1  +    -1.53952272056325 * Marital_StatusDivorced
500537    +          +     1.90782989914192 * Marital_StatusMarried
500538    +          +    -1.16189886119693 * Marital_StatusSingle
500539    +          +     1.42717413956591 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -1.53952272056325 * Marital_StatusDivorced + 
1.90782989914192 * Marital_StatusMarried + -1.16189886119693 * Marital_StatusSingle + 
1.42717413956591 * Marital_StatusTogether ;
500540    +   H1x1_2  = H1x1_2  +     0.65814869063598 * Marital_StatusDivorced
500541    +          +     0.30468777490799 * Marital_StatusMarried
500542    +          +     0.61978761938746 * Marital_StatusSingle
500543    +          +    -0.78873321292122 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.65814869063598 * Marital_StatusDivorced + 
0.30468777490799 * Marital_StatusMarried + 0.61978761938746 * Marital_StatusSingle + 
-0.78873321292122 * Marital_StatusTogether ;
500544    +   H1x1_3  = H1x1_3  +      0.1292120736254 * Marital_StatusDivorced
500545    +          +    -1.73477859605124 * Marital_StatusMarried
500546    +          +     1.32595981126289 * Marital_StatusSingle
500547    +          +    -1.40161784211243 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.1292120736254 * Marital_StatusDivorced + 
-1.73477859605124 * Marital_StatusMarried + 1.32595981126289 * Marital_StatusSingle + 
-1.40161784211243 * Marital_StatusTogether ;
500548    +   H1x1_4  = H1x1_4  +     0.20617554754163 * Marital_StatusDivorced
500549    +          +     0.06077392213964 * Marital_StatusMarried
500550    +          +     0.21115279121703 * Marital_StatusSingle
500551    +          +    -0.61340758151821 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + 0.20617554754163 * Marital_StatusDivorced + 
0.06077392213964 * Marital_StatusMarried + 0.21115279121703 * Marital_StatusSingle + 
-0.61340758151821 * Marital_StatusTogether ;
500552    +   H1x1_5  = H1x1_5  +    -0.69141266071894 * Marital_StatusDivorced
500553    +          +    -0.24067068377767 * Marital_StatusMarried
500554    +          +      0.2728964145401 * Marital_StatusSingle
500555    +          +    -0.61614895252648 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.69141266071894 * Marital_StatusDivorced + 
-0.24067068377767 * Marital_StatusMarried + 0.2728964145401 * Marital_StatusSingle + 
-0.61614895252648 * Marital_StatusTogether ;
500556    +   H1x1_6  = H1x1_6  +    -0.81455860225062 * Marital_StatusDivorced
500557    +          +    -0.15640287278595 * Marital_StatusMarried
500558    +          +     0.54159395450762 * Marital_StatusSingle
500559    +          +    -0.43264862434738 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + -0.81455860225062 * Marital_StatusDivorced + 
-0.15640287278595 * Marital_StatusMarried + 0.54159395450762 * Marital_StatusSingle + 
-0.43264862434738 * Marital_StatusTogether ;
500560    +   H1x1_1  =    -0.36385036888345 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.36385036888345 + H1x1_1 ;
500561    +   H1x1_2  =     0.02663558500629 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.02663558500629 + H1x1_2 ;
500562    +   H1x1_3  =    -3.50526409213811 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -3.50526409213811 + H1x1_3 ;
500563    +   H1x1_4  =     0.63048769294892 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.63048769294892 + H1x1_4 ;
500564    +   H1x1_5  =     1.21111796976731 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 1.21111796976731 + H1x1_5 ;
500565    +   H1x1_6  =    -1.76174187739611 + H1x1_6 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = -1.76174187739611 + H1x1_6 ;
500566    +   H1x1_7  = 0;
MPRINT(EM_DIAGRAM):   H1x1_7 = 0;
500567    +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 , H1x1_7
500568    +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 , 
H1x1_7 );
500569    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
500570    +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
500571    +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
500572    +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
500573    +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
500574    +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
500575    +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
500576    +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
500577    +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
500578    +   H1x1_5  = EXP(H1x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_5 = EXP(H1x1_5 - _MAX_);
500579    +   _SUM_ = _SUM_ + H1x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_5 ;
500580    +   H1x1_6  = EXP(H1x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_6 = EXP(H1x1_6 - _MAX_);
500581    +   _SUM_ = _SUM_ + H1x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_6 ;
500582    +   H1x1_7  = EXP(H1x1_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_7 = EXP(H1x1_7 - _MAX_);
500583    +   _SUM_ = _SUM_ + H1x1_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_7 ;
500584    +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
500585    +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
500586    +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
500587    +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
500588    +   H1x1_5  = H1x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 / _SUM_;
500589    +   H1x1_6  = H1x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 / _SUM_;
500590    +   H1x1_7  = H1x1_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_7 = H1x1_7 / _SUM_;
500591    +END;
MPRINT(EM_DIAGRAM):   END;
500592    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
500593    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
500594    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
500595    +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
500596    +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
500597    +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
500598    +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
500599    +   H1x1_7  = .;
MPRINT(EM_DIAGRAM):   H1x1_7 = .;
500600    +END;
MPRINT(EM_DIAGRAM):   END;
500601    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
500602    +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
500603    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
500604    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
500605    +   H1x2_1  =     0.51589041180152 * S_AcceptedCmpTotal
500606    +          +     -0.6498311499195 * S_Frq  +    -1.08182644925044 * S_Income
500607    +          +    -1.19064228379044 * S_Mnt  +    -1.27287496888491 *
500608    +        S_MntGoldProds  +    -1.33897837883991 * S_MntMeatProducts
500609    +          +     0.14209124492657 * S_NumCatalogPurchases
500610    +          +    -1.31625106509803 * S_NumDealsPurchases
500611    +          +     2.35745588368331 * S_NumWebVisitsMonth
500612    +          +    -1.28657356976181 * S_RFMstat  +     0.25408650330935 *
500613    +        S_Recency  +     1.23527100408525 * S_Teenhome
500614    +          +    -1.87183507669176 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.51589041180152 * S_AcceptedCmpTotal + -0.6498311499195 * 
S_Frq + -1.08182644925044 * S_Income + -1.19064228379044 * S_Mnt + -1.27287496888491 * 
S_MntGoldProds + -1.33897837883991 * S_MntMeatProducts + 0.14209124492657 * 
S_NumCatalogPurchases + -1.31625106509803 * S_NumDealsPurchases + 2.35745588368331 * 
S_NumWebVisitsMonth + -1.28657356976181 * S_RFMstat + 0.25408650330935 * S_Recency + 
1.23527100408525 * S_Teenhome + -1.87183507669176 * S_Year_Birth ;
500615    +   H1x2_2  =    -1.23424462482032 * S_AcceptedCmpTotal
500616    +          +     1.46358102529667 * S_Frq  +     1.75790517593121 * S_Income
500617    +          +      -0.424881586919 * S_Mnt  +     -0.9331242135447 *
500618    +        S_MntGoldProds  +     0.54942904780681 * S_MntMeatProducts
500619    +          +     1.18605040958794 * S_NumCatalogPurchases
500620    +          +    -0.89798157472835 * S_NumDealsPurchases
500621    +          +    -0.09236646871049 * S_NumWebVisitsMonth
500622    +          +    -1.29341547638046 * S_RFMstat  +     1.66853355984342 *
500623    +        S_Recency  +    -0.50770218335102 * S_Teenhome
500624    +          +    -1.07353749220663 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -1.23424462482032 * S_AcceptedCmpTotal + 1.46358102529667 * 
S_Frq + 1.75790517593121 * S_Income + -0.424881586919 * S_Mnt + -0.9331242135447 * 
S_MntGoldProds + 0.54942904780681 * S_MntMeatProducts + 1.18605040958794 * 
S_NumCatalogPurchases + -0.89798157472835 * S_NumDealsPurchases + -0.09236646871049 * 
S_NumWebVisitsMonth + -1.29341547638046 * S_RFMstat + 1.66853355984342 * S_Recency + 
-0.50770218335102 * S_Teenhome + -1.07353749220663 * S_Year_Birth ;
500625    +   H1x2_3  =     0.77624009560593 * S_AcceptedCmpTotal
500626    +          +    -0.52739784343536 * S_Frq  +     0.03893675518591 * S_Income
500627    +          +     2.17484611279249 * S_Mnt  +    -0.17952459801341 *
500628    +        S_MntGoldProds  +     0.34588410829653 * S_MntMeatProducts
500629    +          +    -1.53424308314822 * S_NumCatalogPurchases
500630    +          +    -0.80590323269981 * S_NumDealsPurchases
500631    +          +    -1.40104490662303 * S_NumWebVisitsMonth
500632    +          +     1.66586308350968 * S_RFMstat  +    -0.47553614859646 *
500633    +        S_Recency  +     0.96086280467056 * S_Teenhome
500634    +          +    -1.77672596886127 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x2_3 = 0.77624009560593 * S_AcceptedCmpTotal + -0.52739784343536 * 
S_Frq + 0.03893675518591 * S_Income + 2.17484611279249 * S_Mnt + -0.17952459801341 * 
S_MntGoldProds + 0.34588410829653 * S_MntMeatProducts + -1.53424308314822 * 
S_NumCatalogPurchases + -0.80590323269981 * S_NumDealsPurchases + -1.40104490662303 * 
S_NumWebVisitsMonth + 1.66586308350968 * S_RFMstat + -0.47553614859646 * S_Recency + 
0.96086280467056 * S_Teenhome + -1.77672596886127 * S_Year_Birth ;
500635    +   H1x2_4  =     0.58137966699652 * S_AcceptedCmpTotal
500636    +          +      1.4040418295752 * S_Frq  +    -0.24832517883948 * S_Income
500637    +          +    -0.61141424736299 * S_Mnt  +     0.20471254162898 *
500638    +        S_MntGoldProds  +     0.44314427658514 * S_MntMeatProducts
500639    +          +    -1.25862219948587 * S_NumCatalogPurchases
500640    +          +     1.95015982914109 * S_NumDealsPurchases
500641    +          +     0.64320281589594 * S_NumWebVisitsMonth
500642    +          +     0.79165027029588 * S_RFMstat  +     0.66988554846863 *
500643    +        S_Recency  +    -0.00184949563812 * S_Teenhome
500644    +          +    -0.90548552271817 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 0.58137966699652 * S_AcceptedCmpTotal + 1.4040418295752 * S_Frq 
+ -0.24832517883948 * S_Income + -0.61141424736299 * S_Mnt + 0.20471254162898 * S_MntGoldProds 
+ 0.44314427658514 * S_MntMeatProducts + -1.25862219948587 * S_NumCatalogPurchases + 
1.95015982914109 * S_NumDealsPurchases + 0.64320281589594 * S_NumWebVisitsMonth + 
0.79165027029588 * S_RFMstat + 0.66988554846863 * S_Recency + -0.00184949563812 * S_Teenhome + 
-0.90548552271817 * S_Year_Birth ;
500645    +   H1x2_5  =      0.5931660751286 * S_AcceptedCmpTotal
500646    +          +     0.58645753040534 * S_Frq  +     1.15236353289832 * S_Income
500647    +          +     0.33853280493921 * S_Mnt  +    -0.34695797092699 *
500648    +        S_MntGoldProds  +     2.24596975589576 * S_MntMeatProducts
500649    +          +     0.30573893169917 * S_NumCatalogPurchases
500650    +          +     0.93169788380491 * S_NumDealsPurchases
500651    +          +     0.04516037232248 * S_NumWebVisitsMonth
500652    +          +     0.56461660789519 * S_RFMstat  +    -0.73850030816559 *
500653    +        S_Recency  +      0.1429120113072 * S_Teenhome
500654    +          +     0.57728849891114 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 0.5931660751286 * S_AcceptedCmpTotal + 0.58645753040534 * S_Frq 
+ 1.15236353289832 * S_Income + 0.33853280493921 * S_Mnt + -0.34695797092699 * S_MntGoldProds 
+ 2.24596975589576 * S_MntMeatProducts + 0.30573893169917 * S_NumCatalogPurchases + 
0.93169788380491 * S_NumDealsPurchases + 0.04516037232248 * S_NumWebVisitsMonth + 
0.56461660789519 * S_RFMstat + -0.73850030816559 * S_Recency + 0.1429120113072 * S_Teenhome + 
0.57728849891114 * S_Year_Birth ;
500655    +   H1x2_6  =    -0.61564457275113 * S_AcceptedCmpTotal
500656    +          +     0.25558411574917 * S_Frq  +      0.1079727446126 * S_Income
500657    +          +    -1.20360633098467 * S_Mnt  +     1.72797334940475 *
500658    +        S_MntGoldProds  +    -1.65210775934619 * S_MntMeatProducts
500659    +          +      0.2704422632168 * S_NumCatalogPurchases
500660    +          +      2.3389342094366 * S_NumDealsPurchases
500661    +          +     0.01076302858809 * S_NumWebVisitsMonth
500662    +          +    -2.36764292681458 * S_RFMstat  +     1.10196533018748 *
500663    +        S_Recency  +     0.68455094392125 * S_Teenhome
500664    +          +     1.22292273319927 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x2_6 = -0.61564457275113 * S_AcceptedCmpTotal + 0.25558411574917 * 
S_Frq + 0.1079727446126 * S_Income + -1.20360633098467 * S_Mnt + 1.72797334940475 * 
S_MntGoldProds + -1.65210775934619 * S_MntMeatProducts + 0.2704422632168 * 
S_NumCatalogPurchases + 2.3389342094366 * S_NumDealsPurchases + 0.01076302858809 * 
S_NumWebVisitsMonth + -2.36764292681458 * S_RFMstat + 1.10196533018748 * S_Recency + 
0.68455094392125 * S_Teenhome + 1.22292273319927 * S_Year_Birth ;
500665    +   H1x2_1  = H1x2_1  +    -2.04566893512123 * Marital_StatusDivorced
500666    +          +      0.8255833782513 * Marital_StatusMarried
500667    +          +    -0.48959165020896 * Marital_StatusSingle
500668    +          +     2.83781371812098 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -2.04566893512123 * Marital_StatusDivorced + 
0.8255833782513 * Marital_StatusMarried + -0.48959165020896 * Marital_StatusSingle + 
2.83781371812098 * Marital_StatusTogether ;
500669    +   H1x2_2  = H1x2_2  +     0.67000557197818 * Marital_StatusDivorced
500670    +          +    -0.36405013930464 * Marital_StatusMarried
500671    +          +    -0.11895921007246 * Marital_StatusSingle
500672    +          +    -0.94713834966834 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 0.67000557197818 * Marital_StatusDivorced + 
-0.36405013930464 * Marital_StatusMarried + -0.11895921007246 * Marital_StatusSingle + 
-0.94713834966834 * Marital_StatusTogether ;
500673    +   H1x2_3  = H1x2_3  +     0.26597574107473 * Marital_StatusDivorced
500674    +          +    -1.38902793752658 * Marital_StatusMarried
500675    +          +     0.47104623132568 * Marital_StatusSingle
500676    +          +    -0.55354712799424 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 0.26597574107473 * Marital_StatusDivorced + 
-1.38902793752658 * Marital_StatusMarried + 0.47104623132568 * Marital_StatusSingle + 
-0.55354712799424 * Marital_StatusTogether ;
500677    +   H1x2_4  = H1x2_4  +    -1.69625977318234 * Marital_StatusDivorced
500678    +          +     0.03793816986941 * Marital_StatusMarried
500679    +          +     0.32286910605532 * Marital_StatusSingle
500680    +          +    -1.44817209305758 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + -1.69625977318234 * Marital_StatusDivorced + 
0.03793816986941 * Marital_StatusMarried + 0.32286910605532 * Marital_StatusSingle + 
-1.44817209305758 * Marital_StatusTogether ;
500681    +   H1x2_5  = H1x2_5  +     0.19745523338489 * Marital_StatusDivorced
500682    +          +    -0.60013237897988 * Marital_StatusMarried
500683    +          +    -1.54090744803073 * Marital_StatusSingle
500684    +          +    -2.24346446510302 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 0.19745523338489 * Marital_StatusDivorced + 
-0.60013237897988 * Marital_StatusMarried + -1.54090744803073 * Marital_StatusSingle + 
-2.24346446510302 * Marital_StatusTogether ;
500685    +   H1x2_6  = H1x2_6  +     0.47464108124928 * Marital_StatusDivorced
500686    +          +     2.39490119482132 * Marital_StatusMarried
500687    +          +     0.73080073298893 * Marital_StatusSingle
500688    +          +    -0.62296432915598 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 + 0.47464108124928 * Marital_StatusDivorced + 
2.39490119482132 * Marital_StatusMarried + 0.73080073298893 * Marital_StatusSingle + 
-0.62296432915598 * Marital_StatusTogether ;
500689    +   H1x2_1  =     1.03099135229255 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.03099135229255 + H1x2_1 ;
500690    +   H1x2_2  =     -0.9436150278938 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -0.9436150278938 + H1x2_2 ;
500691    +   H1x2_3  =    -0.17327523864686 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.17327523864686 + H1x2_3 ;
500692    +   H1x2_4  =     0.30103807123555 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 0.30103807123555 + H1x2_4 ;
500693    +   H1x2_5  =    -2.06815743640812 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -2.06815743640812 + H1x2_5 ;
500694    +   H1x2_6  =     1.90356790294644 + H1x2_6 ;
MPRINT(EM_DIAGRAM):   H1x2_6 = 1.90356790294644 + H1x2_6 ;
500695    +   H1x2_7  = 0;
MPRINT(EM_DIAGRAM):   H1x2_7 = 0;
500696    +   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 , H1x2_7
500697    +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 , 
H1x2_7 );
500698    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
500699    +   H1x2_1  = EXP(H1x2_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_1 = EXP(H1x2_1 - _MAX_);
500700    +   _SUM_ = _SUM_ + H1x2_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_1 ;
500701    +   H1x2_2  = EXP(H1x2_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_2 = EXP(H1x2_2 - _MAX_);
500702    +   _SUM_ = _SUM_ + H1x2_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_2 ;
500703    +   H1x2_3  = EXP(H1x2_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_3 = EXP(H1x2_3 - _MAX_);
500704    +   _SUM_ = _SUM_ + H1x2_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_3 ;
500705    +   H1x2_4  = EXP(H1x2_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_4 = EXP(H1x2_4 - _MAX_);
500706    +   _SUM_ = _SUM_ + H1x2_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_4 ;
500707    +   H1x2_5  = EXP(H1x2_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_5 = EXP(H1x2_5 - _MAX_);
500708    +   _SUM_ = _SUM_ + H1x2_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_5 ;
500709    +   H1x2_6  = EXP(H1x2_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_6 = EXP(H1x2_6 - _MAX_);
500710    +   _SUM_ = _SUM_ + H1x2_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_6 ;
500711    +   H1x2_7  = EXP(H1x2_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_7 = EXP(H1x2_7 - _MAX_);
500712    +   _SUM_ = _SUM_ + H1x2_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_7 ;
500713    +   H1x2_1  = H1x2_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 / _SUM_;
500714    +   H1x2_2  = H1x2_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 / _SUM_;
500715    +   H1x2_3  = H1x2_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 / _SUM_;
500716    +   H1x2_4  = H1x2_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 / _SUM_;
500717    +   H1x2_5  = H1x2_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 / _SUM_;
500718    +   H1x2_6  = H1x2_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 / _SUM_;
500719    +   H1x2_7  = H1x2_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_7 = H1x2_7 / _SUM_;
500720    +END;
MPRINT(EM_DIAGRAM):   END;
500721    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
500722    +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
500723    +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
500724    +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
500725    +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
500726    +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
500727    +   H1x2_6  = .;
MPRINT(EM_DIAGRAM):   H1x2_6 = .;
500728    +   H1x2_7  = .;
MPRINT(EM_DIAGRAM):   H1x2_7 = .;
500729    +END;
MPRINT(EM_DIAGRAM):   END;
500730    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
500731    +*** Writing the Node H1x3_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x3_ ;
500732    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
500733    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
500734    +   H1x3_1  =    -0.02577999703823 * S_AcceptedCmpTotal
500735    +          +     1.15166430232754 * S_Frq  +     0.14876168620543 * S_Income
500736    +          +    -0.18380736633059 * S_Mnt  +     0.50048252433262 *
500737    +        S_MntGoldProds  +    -0.33191625929347 * S_MntMeatProducts
500738    +          +     2.25334156596167 * S_NumCatalogPurchases
500739    +          +     1.11206221926547 * S_NumDealsPurchases
500740    +          +    -0.86546062057987 * S_NumWebVisitsMonth
500741    +          +    -0.98321051175326 * S_RFMstat  +     1.25274008829299 *
500742    +        S_Recency  +    -1.57916593034924 * S_Teenhome
500743    +          +    -2.06345344469395 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x3_1 = -0.02577999703823 * S_AcceptedCmpTotal + 1.15166430232754 * 
S_Frq + 0.14876168620543 * S_Income + -0.18380736633059 * S_Mnt + 0.50048252433262 * 
S_MntGoldProds + -0.33191625929347 * S_MntMeatProducts + 2.25334156596167 * 
S_NumCatalogPurchases + 1.11206221926547 * S_NumDealsPurchases + -0.86546062057987 * 
S_NumWebVisitsMonth + -0.98321051175326 * S_RFMstat + 1.25274008829299 * S_Recency + 
-1.57916593034924 * S_Teenhome + -2.06345344469395 * S_Year_Birth ;
500744    +   H1x3_2  =    -1.17329843303132 * S_AcceptedCmpTotal
500745    +          +     1.78916673039241 * S_Frq  +    -0.84674133842717 * S_Income
500746    +          +     0.28484675606294 * S_Mnt  +     0.63187019772354 *
500747    +        S_MntGoldProds  +    -0.96245535082151 * S_MntMeatProducts
500748    +          +    -0.72830662589886 * S_NumCatalogPurchases
500749    +          +    -1.43194640925705 * S_NumDealsPurchases
500750    +          +     0.27875145672985 * S_NumWebVisitsMonth
500751    +          +    -2.03430995128807 * S_RFMstat  +    -0.52413738058555 *
500752    +        S_Recency  +    -1.01056905981073 * S_Teenhome
500753    +          +     0.00830584207402 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x3_2 = -1.17329843303132 * S_AcceptedCmpTotal + 1.78916673039241 * 
S_Frq + -0.84674133842717 * S_Income + 0.28484675606294 * S_Mnt + 0.63187019772354 * 
S_MntGoldProds + -0.96245535082151 * S_MntMeatProducts + -0.72830662589886 * 
S_NumCatalogPurchases + -1.43194640925705 * S_NumDealsPurchases + 0.27875145672985 * 
S_NumWebVisitsMonth + -2.03430995128807 * S_RFMstat + -0.52413738058555 * S_Recency + 
-1.01056905981073 * S_Teenhome + 0.00830584207402 * S_Year_Birth ;
500754    +   H1x3_3  =    -1.51193899177395 * S_AcceptedCmpTotal
500755    +          +    -1.18260896990859 * S_Frq  +    -0.95243122164169 * S_Income
500756    +          +    -0.18792820239336 * S_Mnt  +    -0.06982279743147 *
500757    +        S_MntGoldProds  +    -1.14763783870634 * S_MntMeatProducts
500758    +          +    -0.29577972728188 * S_NumCatalogPurchases
500759    +          +    -0.09204036503823 * S_NumDealsPurchases
500760    +          +     1.09127760712522 * S_NumWebVisitsMonth
500761    +          +     0.67251355869104 * S_RFMstat  +     0.02406054275944 *
500762    +        S_Recency  +    -1.61269837976842 * S_Teenhome
500763    +          +     1.49645524045306 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x3_3 = -1.51193899177395 * S_AcceptedCmpTotal + -1.18260896990859 * 
S_Frq + -0.95243122164169 * S_Income + -0.18792820239336 * S_Mnt + -0.06982279743147 * 
S_MntGoldProds + -1.14763783870634 * S_MntMeatProducts + -0.29577972728188 * 
S_NumCatalogPurchases + -0.09204036503823 * S_NumDealsPurchases + 1.09127760712522 * 
S_NumWebVisitsMonth + 0.67251355869104 * S_RFMstat + 0.02406054275944 * S_Recency + 
-1.61269837976842 * S_Teenhome + 1.49645524045306 * S_Year_Birth ;
500764    +   H1x3_4  =      0.0300271349218 * S_AcceptedCmpTotal
500765    +          +     0.92676949944979 * S_Frq  +    -0.43729227407729 * S_Income
500766    +          +     0.20149694045928 * S_Mnt  +    -0.72339995493149 *
500767    +        S_MntGoldProds  +     0.79792093415572 * S_MntMeatProducts
500768    +          +     0.74771164805463 * S_NumCatalogPurchases
500769    +          +     1.48674373289951 * S_NumDealsPurchases
500770    +          +    -0.43724934700095 * S_NumWebVisitsMonth
500771    +          +    -0.83295997374079 * S_RFMstat  +    -0.78737099754706 *
500772    +        S_Recency  +      1.5969237416548 * S_Teenhome
500773    +          +     -0.1539761100948 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x3_4 = 0.0300271349218 * S_AcceptedCmpTotal + 0.92676949944979 * S_Frq 
+ -0.43729227407729 * S_Income + 0.20149694045928 * S_Mnt + -0.72339995493149 * S_MntGoldProds 
+ 0.79792093415572 * S_MntMeatProducts + 0.74771164805463 * S_NumCatalogPurchases + 
1.48674373289951 * S_NumDealsPurchases + -0.43724934700095 * S_NumWebVisitsMonth + 
-0.83295997374079 * S_RFMstat + -0.78737099754706 * S_Recency + 1.5969237416548 * S_Teenhome + 
-0.1539761100948 * S_Year_Birth ;
500774    +   H1x3_5  =     0.10850479066736 * S_AcceptedCmpTotal
500775    +          +    -0.69523987336905 * S_Frq  +    -1.03313846128362 * S_Income
500776    +          +     0.25026080496919 * S_Mnt  +    -0.97357883151863 *
500777    +        S_MntGoldProds  +    -0.61754054300662 * S_MntMeatProducts
500778    +          +     0.32607897654777 * S_NumCatalogPurchases
500779    +          +    -0.05989936582211 * S_NumDealsPurchases
500780    +          +     -0.8863628882594 * S_NumWebVisitsMonth
500781    +          +      1.1124532739734 * S_RFMstat  +    -0.38719199193265 *
500782    +        S_Recency  +      1.1633098880037 * S_Teenhome
500783    +          +    -1.12745203473451 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x3_5 = 0.10850479066736 * S_AcceptedCmpTotal + -0.69523987336905 * 
S_Frq + -1.03313846128362 * S_Income + 0.25026080496919 * S_Mnt + -0.97357883151863 * 
S_MntGoldProds + -0.61754054300662 * S_MntMeatProducts + 0.32607897654777 * 
S_NumCatalogPurchases + -0.05989936582211 * S_NumDealsPurchases + -0.8863628882594 * 
S_NumWebVisitsMonth + 1.1124532739734 * S_RFMstat + -0.38719199193265 * S_Recency + 
1.1633098880037 * S_Teenhome + -1.12745203473451 * S_Year_Birth ;
500784    +   H1x3_6  =    -0.11588080697234 * S_AcceptedCmpTotal
500785    +          +     0.62360534366171 * S_Frq  +     0.05171263107667 * S_Income
500786    +          +    -2.09517372359855 * S_Mnt  +     1.82275072298905 *
500787    +        S_MntGoldProds  +    -0.20222711303443 * S_MntMeatProducts
500788    +          +    -0.32855091358254 * S_NumCatalogPurchases
500789    +          +    -0.04262624947945 * S_NumDealsPurchases
500790    +          +     0.34844893542429 * S_NumWebVisitsMonth
500791    +          +     1.02395415516187 * S_RFMstat  +     0.72163010188304 *
500792    +        S_Recency  +     0.25374922499465 * S_Teenhome
500793    +          +    -0.26482823596248 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x3_6 = -0.11588080697234 * S_AcceptedCmpTotal + 0.62360534366171 * 
S_Frq + 0.05171263107667 * S_Income + -2.09517372359855 * S_Mnt + 1.82275072298905 * 
S_MntGoldProds + -0.20222711303443 * S_MntMeatProducts + -0.32855091358254 * 
S_NumCatalogPurchases + -0.04262624947945 * S_NumDealsPurchases + 0.34844893542429 * 
S_NumWebVisitsMonth + 1.02395415516187 * S_RFMstat + 0.72163010188304 * S_Recency + 
0.25374922499465 * S_Teenhome + -0.26482823596248 * S_Year_Birth ;
500794    +   H1x3_1  = H1x3_1  +     0.22579923464903 * Marital_StatusDivorced
500795    +          +    -1.19357131519861 * Marital_StatusMarried
500796    +          +     1.01104838285626 * Marital_StatusSingle
500797    +          +    -1.80955917142309 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + 0.22579923464903 * Marital_StatusDivorced + 
-1.19357131519861 * Marital_StatusMarried + 1.01104838285626 * Marital_StatusSingle + 
-1.80955917142309 * Marital_StatusTogether ;
500798    +   H1x3_2  = H1x3_2  +    -0.94571479472535 * Marital_StatusDivorced
500799    +          +     0.41518199668826 * Marital_StatusMarried
500800    +          +     1.03267293059069 * Marital_StatusSingle
500801    +          +    -0.66743874470855 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 + -0.94571479472535 * Marital_StatusDivorced + 
0.41518199668826 * Marital_StatusMarried + 1.03267293059069 * Marital_StatusSingle + 
-0.66743874470855 * Marital_StatusTogether ;
500802    +   H1x3_3  = H1x3_3  +    -0.15213926695809 * Marital_StatusDivorced
500803    +          +     0.56306179671807 * Marital_StatusMarried
500804    +          +    -1.20896369649342 * Marital_StatusSingle
500805    +          +      0.2381860290523 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_3 = H1x3_3 + -0.15213926695809 * Marital_StatusDivorced + 
0.56306179671807 * Marital_StatusMarried + -1.20896369649342 * Marital_StatusSingle + 
0.2381860290523 * Marital_StatusTogether ;
500806    +   H1x3_4  = H1x3_4  +      1.0736711015636 * Marital_StatusDivorced
500807    +          +    -2.56951757071166 * Marital_StatusMarried
500808    +          +     0.89024254219017 * Marital_StatusSingle
500809    +          +    -1.38303524163943 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_4 = H1x3_4 + 1.0736711015636 * Marital_StatusDivorced + 
-2.56951757071166 * Marital_StatusMarried + 0.89024254219017 * Marital_StatusSingle + 
-1.38303524163943 * Marital_StatusTogether ;
500810    +   H1x3_5  = H1x3_5  +     2.33108578518176 * Marital_StatusDivorced
500811    +          +    -0.82560993254767 * Marital_StatusMarried
500812    +          +     0.67892086377875 * Marital_StatusSingle
500813    +          +    -0.99872502550085 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_5 = H1x3_5 + 2.33108578518176 * Marital_StatusDivorced + 
-0.82560993254767 * Marital_StatusMarried + 0.67892086377875 * Marital_StatusSingle + 
-0.99872502550085 * Marital_StatusTogether ;
500814    +   H1x3_6  = H1x3_6  +    -1.46724646572707 * Marital_StatusDivorced
500815    +          +     1.62783448403167 * Marital_StatusMarried
500816    +          +     0.73020544049082 * Marital_StatusSingle
500817    +          +    -0.22473120319236 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_6 = H1x3_6 + -1.46724646572707 * Marital_StatusDivorced + 
1.62783448403167 * Marital_StatusMarried + 0.73020544049082 * Marital_StatusSingle + 
-0.22473120319236 * Marital_StatusTogether ;
500818    +   H1x3_1  =     0.67900930500511 + H1x3_1 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 0.67900930500511 + H1x3_1 ;
500819    +   H1x3_2  =     1.40060666199115 + H1x3_2 ;
MPRINT(EM_DIAGRAM):   H1x3_2 = 1.40060666199115 + H1x3_2 ;
500820    +   H1x3_3  =     0.29463847527526 + H1x3_3 ;
MPRINT(EM_DIAGRAM):   H1x3_3 = 0.29463847527526 + H1x3_3 ;
500821    +   H1x3_4  =    -0.04357875847579 + H1x3_4 ;
MPRINT(EM_DIAGRAM):   H1x3_4 = -0.04357875847579 + H1x3_4 ;
500822    +   H1x3_5  =      0.8612643972197 + H1x3_5 ;
MPRINT(EM_DIAGRAM):   H1x3_5 = 0.8612643972197 + H1x3_5 ;
500823    +   H1x3_6  =    -1.88380703730164 + H1x3_6 ;
MPRINT(EM_DIAGRAM):   H1x3_6 = -1.88380703730164 + H1x3_6 ;
500824    +   H1x3_7  = 0;
MPRINT(EM_DIAGRAM):   H1x3_7 = 0;
500825    +   _MAX_ = MAX (H1x3_1 , H1x3_2 , H1x3_3 , H1x3_4 , H1x3_5 , H1x3_6 , H1x3_7
500826    +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x3_1 , H1x3_2 , H1x3_3 , H1x3_4 , H1x3_5 , H1x3_6 , 
H1x3_7 );
500827    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
500828    +   H1x3_1  = EXP(H1x3_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_1 = EXP(H1x3_1 - _MAX_);
500829    +   _SUM_ = _SUM_ + H1x3_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_1 ;
500830    +   H1x3_2  = EXP(H1x3_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_2 = EXP(H1x3_2 - _MAX_);
500831    +   _SUM_ = _SUM_ + H1x3_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_2 ;
500832    +   H1x3_3  = EXP(H1x3_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_3 = EXP(H1x3_3 - _MAX_);
500833    +   _SUM_ = _SUM_ + H1x3_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_3 ;
500834    +   H1x3_4  = EXP(H1x3_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_4 = EXP(H1x3_4 - _MAX_);
500835    +   _SUM_ = _SUM_ + H1x3_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_4 ;
500836    +   H1x3_5  = EXP(H1x3_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_5 = EXP(H1x3_5 - _MAX_);
500837    +   _SUM_ = _SUM_ + H1x3_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_5 ;
500838    +   H1x3_6  = EXP(H1x3_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_6 = EXP(H1x3_6 - _MAX_);
500839    +   _SUM_ = _SUM_ + H1x3_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_6 ;
500840    +   H1x3_7  = EXP(H1x3_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_7 = EXP(H1x3_7 - _MAX_);
500841    +   _SUM_ = _SUM_ + H1x3_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_7 ;
500842    +   H1x3_1  = H1x3_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 / _SUM_;
500843    +   H1x3_2  = H1x3_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 / _SUM_;
500844    +   H1x3_3  = H1x3_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_3 = H1x3_3 / _SUM_;
500845    +   H1x3_4  = H1x3_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_4 = H1x3_4 / _SUM_;
500846    +   H1x3_5  = H1x3_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_5 = H1x3_5 / _SUM_;
500847    +   H1x3_6  = H1x3_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_6 = H1x3_6 / _SUM_;
500848    +   H1x3_7  = H1x3_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_7 = H1x3_7 / _SUM_;
500849    +END;
MPRINT(EM_DIAGRAM):   END;
500850    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
500851    +   H1x3_1  = .;
MPRINT(EM_DIAGRAM):   H1x3_1 = .;
500852    +   H1x3_2  = .;
MPRINT(EM_DIAGRAM):   H1x3_2 = .;
500853    +   H1x3_3  = .;
MPRINT(EM_DIAGRAM):   H1x3_3 = .;
500854    +   H1x3_4  = .;
MPRINT(EM_DIAGRAM):   H1x3_4 = .;
500855    +   H1x3_5  = .;
MPRINT(EM_DIAGRAM):   H1x3_5 = .;
500856    +   H1x3_6  = .;
MPRINT(EM_DIAGRAM):   H1x3_6 = .;
500857    +   H1x3_7  = .;
MPRINT(EM_DIAGRAM):   H1x3_7 = .;
500858    +END;
MPRINT(EM_DIAGRAM):   END;
500859    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
500860    +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
500861    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
500862    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
500863    +   H2x1_1  =    -0.95656178134917 * H1x1_1  +     1.37796748135739 * H1x1_2
500864    +          +     1.78756036673938 * H1x1_3  +     -0.8439546201475 * H1x1_4
500865    +          +    -1.03166099242293 * H1x1_5  +     0.52943703441707 * H1x1_6
500866    +          +     0.59795148287931 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -0.95656178134917 * H1x1_1 + 1.37796748135739 * H1x1_2 + 
1.78756036673938 * H1x1_3 + -0.8439546201475 * H1x1_4 + -1.03166099242293 * H1x1_5 + 
0.52943703441707 * H1x1_6 + 0.59795148287931 * H1x1_7 ;
500867    +   H2x1_2  =     1.91190798936382 * H1x1_1  +      -0.175949167006 * H1x1_2
500868    +          +    -0.20010954623703 * H1x1_3  +    -1.12168184279533 * H1x1_4
500869    +          +     0.35517508917627 * H1x1_5  +    -0.45519619936571 * H1x1_6
500870    +          +     1.08432924744886 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.91190798936382 * H1x1_1 + -0.175949167006 * H1x1_2 + 
-0.20010954623703 * H1x1_3 + -1.12168184279533 * H1x1_4 + 0.35517508917627 * H1x1_5 + 
-0.45519619936571 * H1x1_6 + 1.08432924744886 * H1x1_7 ;
500871    +   H2x1_3  =    -0.27236838695598 * H1x1_1  +     2.63546136140352 * H1x1_2
500872    +          +     1.80045649255758 * H1x1_3  +    -2.98830892061373 * H1x1_4
500873    +          +    -2.46045881589621 * H1x1_5  +     3.22396803549708 * H1x1_6
500874    +          +    -2.34667330067152 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -0.27236838695598 * H1x1_1 + 2.63546136140352 * H1x1_2 + 
1.80045649255758 * H1x1_3 + -2.98830892061373 * H1x1_4 + -2.46045881589621 * H1x1_5 + 
3.22396803549708 * H1x1_6 + -2.34667330067152 * H1x1_7 ;
500875    +   H2x1_4  =    -3.13210205675036 * H1x1_1  +     3.91450403558871 * H1x1_2
500876    +          +       4.933279615521 * H1x1_3  +    -2.59282514986249 * H1x1_4
500877    +          +    -2.03653671740081 * H1x1_5  +       4.064405082461 * H1x1_6
500878    +          +    -2.60526325926954 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = -3.13210205675036 * H1x1_1 + 3.91450403558871 * H1x1_2 + 
4.933279615521 * H1x1_3 + -2.59282514986249 * H1x1_4 + -2.03653671740081 * H1x1_5 + 
4.064405082461 * H1x1_6 + -2.60526325926954 * H1x1_7 ;
500879    +   H2x1_5  =    -0.63232084982839 * H1x1_1  +     0.33718773947492 * H1x1_2
500880    +          +     1.29296448887546 * H1x1_3  +     1.12889621039023 * H1x1_4
500881    +          +     2.18934908118237 * H1x1_5  +     0.87862098785892 * H1x1_6
500882    +          +     0.91832061749569 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = -0.63232084982839 * H1x1_1 + 0.33718773947492 * H1x1_2 + 
1.29296448887546 * H1x1_3 + 1.12889621039023 * H1x1_4 + 2.18934908118237 * H1x1_5 + 
0.87862098785892 * H1x1_6 + 0.91832061749569 * H1x1_7 ;
500883    +   H2x1_6  =     1.81043244413035 * H1x1_1  +      1.4777958998418 * H1x1_2
500884    +          +     2.53190667102186 * H1x1_3  +      0.4670787906688 * H1x1_4
500885    +          +    -0.00303664790933 * H1x1_5  +     0.21078497178324 * H1x1_6
500886    +          +     0.34792900678934 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = 1.81043244413035 * H1x1_1 + 1.4777958998418 * H1x1_2 + 
2.53190667102186 * H1x1_3 + 0.4670787906688 * H1x1_4 + -0.00303664790933 * H1x1_5 + 
0.21078497178324 * H1x1_6 + 0.34792900678934 * H1x1_7 ;
500887    +   H2x1_7  =      2.7297431384039 * H1x1_1  +    -1.30829815853208 * H1x1_2
500888    +          +    -0.74317234707744 * H1x1_3  +     0.02621795882884 * H1x1_4
500889    +          +     1.92641283593631 * H1x1_5  +     0.32006968332264 * H1x1_6
500890    +          +     0.87129000431049 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_7 = 2.7297431384039 * H1x1_1 + -1.30829815853208 * H1x1_2 + 
-0.74317234707744 * H1x1_3 + 0.02621795882884 * H1x1_4 + 1.92641283593631 * H1x1_5 + 
0.32006968332264 * H1x1_6 + 0.87129000431049 * H1x1_7 ;
500891    +   H2x1_1  = H2x1_1  +     -2.1938127062121 * H1x2_1
500892    +          +     0.21780666650637 * H1x2_2  +    -0.59195589593425 * H1x2_3
500893    +          +     0.38436245185742 * H1x2_4  +     0.62573807049092 * H1x2_5
500894    +          +    -0.61319348011502 * H1x2_6  +     0.47203210338015 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -2.1938127062121 * H1x2_1 + 0.21780666650637 * H1x2_2 
+ -0.59195589593425 * H1x2_3 + 0.38436245185742 * H1x2_4 + 0.62573807049092 * H1x2_5 + 
-0.61319348011502 * H1x2_6 + 0.47203210338015 * H1x2_7 ;
500895    +   H2x1_2  = H2x1_2  +    -0.26087177829438 * H1x2_1
500896    +          +      1.5809361009025 * H1x2_2  +     1.48270435958935 * H1x2_3
500897    +          +    -0.08943866833208 * H1x2_4  +     1.06601866330059 * H1x2_5
500898    +          +     0.65908674086625 * H1x2_6  +    -0.41138217409507 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + -0.26087177829438 * H1x2_1 + 1.5809361009025 * H1x2_2 
+ 1.48270435958935 * H1x2_3 + -0.08943866833208 * H1x2_4 + 1.06601866330059 * H1x2_5 + 
0.65908674086625 * H1x2_6 + -0.41138217409507 * H1x2_7 ;
500899    +   H2x1_3  = H2x1_3  +     0.38416253176813 * H1x2_1
500900    +          +    -0.18005172775158 * H1x2_2  +    -0.64477973121074 * H1x2_3
500901    +          +    -0.89326621554735 * H1x2_4  +     2.10808351608759 * H1x2_5
500902    +          +    -0.79701502540522 * H1x2_6  +     0.12564972289045 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + 0.38416253176813 * H1x2_1 + -0.18005172775158 * H1x2_2 
+ -0.64477973121074 * H1x2_3 + -0.89326621554735 * H1x2_4 + 2.10808351608759 * H1x2_5 + 
-0.79701502540522 * H1x2_6 + 0.12564972289045 * H1x2_7 ;
500903    +   H2x1_4  = H2x1_4  +     0.45607666975085 * H1x2_1
500904    +          +     0.66281103175614 * H1x2_2  +     -2.2042052849244 * H1x2_3
500905    +          +    -0.88338513539567 * H1x2_4  +      0.8444719755129 * H1x2_5
500906    +          +    -1.34699546034909 * H1x2_6  +    -0.92256004986079 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + 0.45607666975085 * H1x2_1 + 0.66281103175614 * H1x2_2 
+ -2.2042052849244 * H1x2_3 + -0.88338513539567 * H1x2_4 + 0.8444719755129 * H1x2_5 + 
-1.34699546034909 * H1x2_6 + -0.92256004986079 * H1x2_7 ;
500907    +   H2x1_5  = H2x1_5  +    -1.36966827041497 * H1x2_1
500908    +          +    -0.50899589190563 * H1x2_2  +    -1.06117764109728 * H1x2_3
500909    +          +    -0.15325014700397 * H1x2_4  +     0.77845029985607 * H1x2_5
500910    +          +     0.15661838238861 * H1x2_6  +    -1.46533717081069 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + -1.36966827041497 * H1x2_1 + -0.50899589190563 * 
H1x2_2 + -1.06117764109728 * H1x2_3 + -0.15325014700397 * H1x2_4 + 0.77845029985607 * H1x2_5 + 
0.15661838238861 * H1x2_6 + -1.46533717081069 * H1x2_7 ;
500911    +   H2x1_6  = H2x1_6  +    -1.39055542164691 * H1x2_1
500912    +          +    -0.58359991825266 * H1x2_2  +     1.77147289208184 * H1x2_3
500913    +          +    -0.35342441714416 * H1x2_4  +     0.33680205236698 * H1x2_5
500914    +          +    -0.30165800401137 * H1x2_6  +    -1.49792110543314 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 + -1.39055542164691 * H1x2_1 + -0.58359991825266 * 
H1x2_2 + 1.77147289208184 * H1x2_3 + -0.35342441714416 * H1x2_4 + 0.33680205236698 * H1x2_5 + 
-0.30165800401137 * H1x2_6 + -1.49792110543314 * H1x2_7 ;
500915    +   H2x1_7  = H2x1_7  +     0.20334369322498 * H1x2_1
500916    +          +    -0.56117684469389 * H1x2_2  +     1.27451151893116 * H1x2_3
500917    +          +    -0.39759641471947 * H1x2_4  +    -0.48424888739695 * H1x2_5
500918    +          +      0.5776601194378 * H1x2_6  +    -0.11343742791086 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_7 = H2x1_7 + 0.20334369322498 * H1x2_1 + -0.56117684469389 * H1x2_2 
+ 1.27451151893116 * H1x2_3 + -0.39759641471947 * H1x2_4 + -0.48424888739695 * H1x2_5 + 
0.5776601194378 * H1x2_6 + -0.11343742791086 * H1x2_7 ;
500919    +   H2x1_1  = H2x1_1  +    -0.06990804266869 * H1x3_1
500920    +          +     1.59179747886577 * H1x3_2  +     -0.3658160611529 * H1x3_3
500921    +          +    -0.16177521959465 * H1x3_4  +     0.23353693967535 * H1x3_5
500922    +          +     0.96164596504173 * H1x3_6  +    -0.49996390114171 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -0.06990804266869 * H1x3_1 + 1.59179747886577 * H1x3_2 
+ -0.3658160611529 * H1x3_3 + -0.16177521959465 * H1x3_4 + 0.23353693967535 * H1x3_5 + 
0.96164596504173 * H1x3_6 + -0.49996390114171 * H1x3_7 ;
500923    +   H2x1_2  = H2x1_2  +    -1.34775541988885 * H1x3_1
500924    +          +    -0.94185062200477 * H1x3_2  +     2.40002799790884 * H1x3_3
500925    +          +      1.3228491036493 * H1x3_4  +    -2.27212522601702 * H1x3_5
500926    +          +     0.22676652176348 * H1x3_6  +     0.96810343094913 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + -1.34775541988885 * H1x3_1 + -0.94185062200477 * 
H1x3_2 + 2.40002799790884 * H1x3_3 + 1.3228491036493 * H1x3_4 + -2.27212522601702 * H1x3_5 + 
0.22676652176348 * H1x3_6 + 0.96810343094913 * H1x3_7 ;
500927    +   H2x1_3  = H2x1_3  +    -0.68382731119741 * H1x3_1
500928    +          +    -0.90388882694092 * H1x3_2  +     0.51668393396039 * H1x3_3
500929    +          +     0.45716345972756 * H1x3_4  +    -0.49320936872992 * H1x3_5
500930    +          +     0.11919896076076 * H1x3_6  +    -0.14288859595709 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + -0.68382731119741 * H1x3_1 + -0.90388882694092 * 
H1x3_2 + 0.51668393396039 * H1x3_3 + 0.45716345972756 * H1x3_4 + -0.49320936872992 * H1x3_5 + 
0.11919896076076 * H1x3_6 + -0.14288859595709 * H1x3_7 ;
500931    +   H2x1_4  = H2x1_4  +    -0.68614915242276 * H1x3_1
500932    +          +     0.55556081003484 * H1x3_2  +     0.26058803548386 * H1x3_3
500933    +          +     0.44653924204999 * H1x3_4  +    -0.97704608173388 * H1x3_5
500934    +          +    -0.04291306465274 * H1x3_6  +    -0.70203538063923 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + -0.68614915242276 * H1x3_1 + 0.55556081003484 * H1x3_2 
+ 0.26058803548386 * H1x3_3 + 0.44653924204999 * H1x3_4 + -0.97704608173388 * H1x3_5 + 
-0.04291306465274 * H1x3_6 + -0.70203538063923 * H1x3_7 ;
500935    +   H2x1_5  = H2x1_5  +     0.58123765973845 * H1x3_1
500936    +          +     0.48842685419846 * H1x3_2  +     1.59951720976688 * H1x3_3
500937    +          +     0.39804915100427 * H1x3_4  +    -0.47629764750379 * H1x3_5
500938    +          +    -1.56133001160202 * H1x3_6  +     1.12232825939123 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + 0.58123765973845 * H1x3_1 + 0.48842685419846 * H1x3_2 
+ 1.59951720976688 * H1x3_3 + 0.39804915100427 * H1x3_4 + -0.47629764750379 * H1x3_5 + 
-1.56133001160202 * H1x3_6 + 1.12232825939123 * H1x3_7 ;
500939    +   H2x1_6  = H2x1_6  +    -0.35903530664944 * H1x3_1
500940    +          +    -1.21870303791063 * H1x3_2  +     -0.0358958118983 * H1x3_3
500941    +          +     1.71577031345204 * H1x3_4  +    -0.29111463093854 * H1x3_5
500942    +          +    -1.77383444462785 * H1x3_6  +    -0.93379473274206 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 + -0.35903530664944 * H1x3_1 + -1.21870303791063 * 
H1x3_2 + -0.0358958118983 * H1x3_3 + 1.71577031345204 * H1x3_4 + -0.29111463093854 * H1x3_5 + 
-1.77383444462785 * H1x3_6 + -0.93379473274206 * H1x3_7 ;
500943    +   H2x1_7  = H2x1_7  +     0.79356954272121 * H1x3_1
500944    +          +    -2.23344635077437 * H1x3_2  +     0.01459894574902 * H1x3_3
500945    +          +    -1.76556734796059 * H1x3_4  +     0.55679401249834 * H1x3_5
500946    +          +    -0.00867866380584 * H1x3_6  +     1.61311341603142 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x1_7 = H2x1_7 + 0.79356954272121 * H1x3_1 + -2.23344635077437 * H1x3_2 
+ 0.01459894574902 * H1x3_3 + -1.76556734796059 * H1x3_4 + 0.55679401249834 * H1x3_5 + 
-0.00867866380584 * H1x3_6 + 1.61311341603142 * H1x3_7 ;
500947    +   H2x1_1  =     0.45495097945606 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 0.45495097945606 + H2x1_1 ;
500948    +   H2x1_2  =    -0.00150409200191 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -0.00150409200191 + H2x1_2 ;
500949    +   H2x1_3  =     0.06766385008662 + H2x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = 0.06766385008662 + H2x1_3 ;
500950    +   H2x1_4  =    -0.15767488957433 + H2x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = -0.15767488957433 + H2x1_4 ;
500951    +   H2x1_5  =     3.00862692955968 + H2x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = 3.00862692955968 + H2x1_5 ;
500952    +   H2x1_6  =     1.46151036473661 + H2x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = 1.46151036473661 + H2x1_6 ;
500953    +   H2x1_7  =    -1.14350195577506 + H2x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_7 = -1.14350195577506 + H2x1_7 ;
500954    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
500955    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
500956    +   H2x1_1  = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
500957    +   H2x1_2  = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
500958    +   H2x1_3  = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_3 = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
500959    +   H2x1_4  = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_4 = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
500960    +   H2x1_5  = 1.0 / (1.0 + EXP(MIN( - H2x1_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_5 = 1.0 / (1.0 + EXP(MIN( - H2x1_5 , _EXP_BAR)));
500961    +   H2x1_6  = 1.0 / (1.0 + EXP(MIN( - H2x1_6 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_6 = 1.0 / (1.0 + EXP(MIN( - H2x1_6 , _EXP_BAR)));
500962    +   H2x1_7  = 1.0 / (1.0 + EXP(MIN( - H2x1_7 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_7 = 1.0 / (1.0 + EXP(MIN( - H2x1_7 , _EXP_BAR)));
500963    +END;
MPRINT(EM_DIAGRAM):   END;
500964    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
500965    +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
500966    +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
500967    +   H2x1_3  = .;
MPRINT(EM_DIAGRAM):   H2x1_3 = .;
500968    +   H2x1_4  = .;
MPRINT(EM_DIAGRAM):   H2x1_4 = .;
500969    +   H2x1_5  = .;
MPRINT(EM_DIAGRAM):   H2x1_5 = .;
500970    +   H2x1_6  = .;
MPRINT(EM_DIAGRAM):   H2x1_6 = .;
500971    +   H2x1_7  = .;
MPRINT(EM_DIAGRAM):   H2x1_7 = .;
500972    +END;
MPRINT(EM_DIAGRAM):   END;
500973    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
500974    +*** Writing the Node H2x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x2_ ;
500975    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
500976    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
500977    +   H2x2_1  =     -0.6098073780758 * H1x1_1  +    -0.36212005078054 * H1x1_2
500978    +          +     0.06355695656592 * H1x1_3  +     0.42978415336514 * H1x1_4
500979    +          +     1.73171637681701 * H1x1_5  +    -0.19499247120261 * H1x1_6
500980    +          +     0.74015079276747 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = -0.6098073780758 * H1x1_1 + -0.36212005078054 * H1x1_2 + 
0.06355695656592 * H1x1_3 + 0.42978415336514 * H1x1_4 + 1.73171637681701 * H1x1_5 + 
-0.19499247120261 * H1x1_6 + 0.74015079276747 * H1x1_7 ;
500981    +   H2x2_2  =     0.94291268086892 * H1x1_1  +    -0.57821086705904 * H1x1_2
500982    +          +     1.78126629448091 * H1x1_3  +    -1.19267460568433 * H1x1_4
500983    +          +    -0.23111688249081 * H1x1_5  +     0.48499259969431 * H1x1_6
500984    +          +    -1.56999349458897 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = 0.94291268086892 * H1x1_1 + -0.57821086705904 * H1x1_2 + 
1.78126629448091 * H1x1_3 + -1.19267460568433 * H1x1_4 + -0.23111688249081 * H1x1_5 + 
0.48499259969431 * H1x1_6 + -1.56999349458897 * H1x1_7 ;
500985    +   H2x2_3  =    -0.83943846185187 * H1x1_1  +     0.07494097035466 * H1x1_2
500986    +          +    -0.22510824455886 * H1x1_3  +     0.73702100581613 * H1x1_4
500987    +          +     0.84717434356729 * H1x1_5  +      1.1890648131813 * H1x1_6
500988    +          +    -0.69985750736721 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = -0.83943846185187 * H1x1_1 + 0.07494097035466 * H1x1_2 + 
-0.22510824455886 * H1x1_3 + 0.73702100581613 * H1x1_4 + 0.84717434356729 * H1x1_5 + 
1.1890648131813 * H1x1_6 + -0.69985750736721 * H1x1_7 ;
500989    +   H2x2_4  =     1.34186573490327 * H1x1_1  +     0.10476556384336 * H1x1_2
500990    +          +    -0.07073923857851 * H1x1_3  +     0.49865386241422 * H1x1_4
500991    +          +     1.20386613863792 * H1x1_5  +     0.13033316874168 * H1x1_6
500992    +          +     0.36095712511699 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = 1.34186573490327 * H1x1_1 + 0.10476556384336 * H1x1_2 + 
-0.07073923857851 * H1x1_3 + 0.49865386241422 * H1x1_4 + 1.20386613863792 * H1x1_5 + 
0.13033316874168 * H1x1_6 + 0.36095712511699 * H1x1_7 ;
500993    +   H2x2_5  =     0.18683850895928 * H1x1_1  +     0.14087720385762 * H1x1_2
500994    +          +     0.39026989292984 * H1x1_3  +     0.40839626117338 * H1x1_4
500995    +          +     0.17816964710989 * H1x1_5  +     0.64340089705428 * H1x1_6
500996    +          +    -1.27363167094111 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x2_5 = 0.18683850895928 * H1x1_1 + 0.14087720385762 * H1x1_2 + 
0.39026989292984 * H1x1_3 + 0.40839626117338 * H1x1_4 + 0.17816964710989 * H1x1_5 + 
0.64340089705428 * H1x1_6 + -1.27363167094111 * H1x1_7 ;
500997    +   H2x2_6  =     0.67895838050616 * H1x1_1  +     0.23794862788395 * H1x1_2
500998    +          +     1.47625698143483 * H1x1_3  +    -0.78874578699705 * H1x1_4
500999    +          +     0.11576168045678 * H1x1_5  +     0.44470888441177 * H1x1_6
501000    +          +     1.87629961612594 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x2_6 = 0.67895838050616 * H1x1_1 + 0.23794862788395 * H1x1_2 + 
1.47625698143483 * H1x1_3 + -0.78874578699705 * H1x1_4 + 0.11576168045678 * H1x1_5 + 
0.44470888441177 * H1x1_6 + 1.87629961612594 * H1x1_7 ;
501001    +   H2x2_7  =     0.68721855914482 * H1x1_1  +    -0.49548906059129 * H1x1_2
501002    +          +    -0.95479435424814 * H1x1_3  +    -0.39636357013457 * H1x1_4
501003    +          +     1.05784760554335 * H1x1_5  +     0.55302681608178 * H1x1_6
501004    +          +     0.46646041474723 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x2_7 = 0.68721855914482 * H1x1_1 + -0.49548906059129 * H1x1_2 + 
-0.95479435424814 * H1x1_3 + -0.39636357013457 * H1x1_4 + 1.05784760554335 * H1x1_5 + 
0.55302681608178 * H1x1_6 + 0.46646041474723 * H1x1_7 ;
501005    +   H2x2_1  = H2x2_1  +    -0.27434389803517 * H1x2_1
501006    +          +    -0.02074671287693 * H1x2_2  +    -1.51155778758517 * H1x2_3
501007    +          +    -1.19011584420542 * H1x2_4  +     -0.8540083688408 * H1x2_5
501008    +          +    -0.51772310023527 * H1x2_6  +     -0.0192399267251 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + -0.27434389803517 * H1x2_1 + -0.02074671287693 * 
H1x2_2 + -1.51155778758517 * H1x2_3 + -1.19011584420542 * H1x2_4 + -0.8540083688408 * H1x2_5 + 
-0.51772310023527 * H1x2_6 + -0.0192399267251 * H1x2_7 ;
501009    +   H2x2_2  = H2x2_2  +      -1.312525087163 * H1x2_1
501010    +          +     1.19175487774401 * H1x2_2  +    -1.10903746388023 * H1x2_3
501011    +          +      0.2627511726941 * H1x2_4  +    -1.49474705736936 * H1x2_5
501012    +          +     0.79354329450131 * H1x2_6  +    -0.48676510074213 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 + -1.312525087163 * H1x2_1 + 1.19175487774401 * H1x2_2 + 
-1.10903746388023 * H1x2_3 + 0.2627511726941 * H1x2_4 + -1.49474705736936 * H1x2_5 + 
0.79354329450131 * H1x2_6 + -0.48676510074213 * H1x2_7 ;
501013    +   H2x2_3  = H2x2_3  +     0.36715282986404 * H1x2_1
501014    +          +    -1.54691354420052 * H1x2_2  +     0.58334429972967 * H1x2_3
501015    +          +     3.32026929025218 * H1x2_4  +     0.08578287392048 * H1x2_5
501016    +          +     0.66591130534429 * H1x2_6  +     0.57559013181145 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = H2x2_3 + 0.36715282986404 * H1x2_1 + -1.54691354420052 * H1x2_2 
+ 0.58334429972967 * H1x2_3 + 3.32026929025218 * H1x2_4 + 0.08578287392048 * H1x2_5 + 
0.66591130534429 * H1x2_6 + 0.57559013181145 * H1x2_7 ;
501017    +   H2x2_4  = H2x2_4  +     1.28239253398808 * H1x2_1
501018    +          +     0.06662925242621 * H1x2_2  +     0.49967984015316 * H1x2_3
501019    +          +     0.65508978056742 * H1x2_4  +    -0.28141359636508 * H1x2_5
501020    +          +    -0.11787887977724 * H1x2_6  +     -0.6607325871171 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = H2x2_4 + 1.28239253398808 * H1x2_1 + 0.06662925242621 * H1x2_2 
+ 0.49967984015316 * H1x2_3 + 0.65508978056742 * H1x2_4 + -0.28141359636508 * H1x2_5 + 
-0.11787887977724 * H1x2_6 + -0.6607325871171 * H1x2_7 ;
501021    +   H2x2_5  = H2x2_5  +    -0.49511046906315 * H1x2_1
501022    +          +    -1.88759923025868 * H1x2_2  +    -0.99578805432186 * H1x2_3
501023    +          +     0.47300607025135 * H1x2_4  +     0.73725488149784 * H1x2_5
501024    +          +     0.56107930260304 * H1x2_6  +     -0.6618265083723 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x2_5 = H2x2_5 + -0.49511046906315 * H1x2_1 + -1.88759923025868 * 
H1x2_2 + -0.99578805432186 * H1x2_3 + 0.47300607025135 * H1x2_4 + 0.73725488149784 * H1x2_5 + 
0.56107930260304 * H1x2_6 + -0.6618265083723 * H1x2_7 ;
501025    +   H2x2_6  = H2x2_6  +    -0.56511063846684 * H1x2_1
501026    +          +      0.1682036403191 * H1x2_2  +     -0.7835100270482 * H1x2_3
501027    +          +    -0.05926261017522 * H1x2_4  +     0.28303530518131 * H1x2_5
501028    +          +     1.57291802723543 * H1x2_6  +    -1.59403373749444 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x2_6 = H2x2_6 + -0.56511063846684 * H1x2_1 + 0.1682036403191 * H1x2_2 
+ -0.7835100270482 * H1x2_3 + -0.05926261017522 * H1x2_4 + 0.28303530518131 * H1x2_5 + 
1.57291802723543 * H1x2_6 + -1.59403373749444 * H1x2_7 ;
501029    +   H2x2_7  = H2x2_7  +    -1.06397759700592 * H1x2_1
501030    +          +    -0.21206214531111 * H1x2_2  +     1.52697813698804 * H1x2_3
501031    +          +    -0.03132126915438 * H1x2_4  +     0.11910805580916 * H1x2_5
501032    +          +     1.03394382602734 * H1x2_6  +    -0.28139834412941 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x2_7 = H2x2_7 + -1.06397759700592 * H1x2_1 + -0.21206214531111 * 
H1x2_2 + 1.52697813698804 * H1x2_3 + -0.03132126915438 * H1x2_4 + 0.11910805580916 * H1x2_5 + 
1.03394382602734 * H1x2_6 + -0.28139834412941 * H1x2_7 ;
501033    +   H2x2_1  = H2x2_1  +    -1.18028681022903 * H1x3_1
501034    +          +    -0.56354962807969 * H1x3_2  +    -0.32071823564038 * H1x3_3
501035    +          +    -1.14868021494554 * H1x3_4  +     0.50491385711883 * H1x3_5
501036    +          +      0.3595638799915 * H1x3_6  +    -1.04253859844314 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + -1.18028681022903 * H1x3_1 + -0.56354962807969 * 
H1x3_2 + -0.32071823564038 * H1x3_3 + -1.14868021494554 * H1x3_4 + 0.50491385711883 * H1x3_5 + 
0.3595638799915 * H1x3_6 + -1.04253859844314 * H1x3_7 ;
501037    +   H2x2_2  = H2x2_2  +     1.10237781244945 * H1x3_1
501038    +          +     1.08171284637926 * H1x3_2  +     0.51153068676713 * H1x3_3
501039    +          +     -0.0106772728333 * H1x3_4  +     0.21777593557961 * H1x3_5
501040    +          +     0.10772516691825 * H1x3_6  +    -0.91346091248416 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 + 1.10237781244945 * H1x3_1 + 1.08171284637926 * H1x3_2 
+ 0.51153068676713 * H1x3_3 + -0.0106772728333 * H1x3_4 + 0.21777593557961 * H1x3_5 + 
0.10772516691825 * H1x3_6 + -0.91346091248416 * H1x3_7 ;
501041    +   H2x2_3  = H2x2_3  +    -0.71132206215234 * H1x3_1
501042    +          +     0.60006902706544 * H1x3_2  +      -0.471170925786 * H1x3_3
501043    +          +     0.07477379311969 * H1x3_4  +    -0.34034195429991 * H1x3_5
501044    +          +     1.63429052967629 * H1x3_6  +     0.13697740143754 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = H2x2_3 + -0.71132206215234 * H1x3_1 + 0.60006902706544 * H1x3_2 
+ -0.471170925786 * H1x3_3 + 0.07477379311969 * H1x3_4 + -0.34034195429991 * H1x3_5 + 
1.63429052967629 * H1x3_6 + 0.13697740143754 * H1x3_7 ;
501045    +   H2x2_4  = H2x2_4  +     0.76338339806809 * H1x3_1
501046    +          +     0.34600443003632 * H1x3_2  +    -0.60707577837208 * H1x3_3
501047    +          +     1.37001034857478 * H1x3_4  +    -1.24749521510775 * H1x3_5
501048    +          +    -1.45784349983015 * H1x3_6  +     0.12879195100917 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = H2x2_4 + 0.76338339806809 * H1x3_1 + 0.34600443003632 * H1x3_2 
+ -0.60707577837208 * H1x3_3 + 1.37001034857478 * H1x3_4 + -1.24749521510775 * H1x3_5 + 
-1.45784349983015 * H1x3_6 + 0.12879195100917 * H1x3_7 ;
501049    +   H2x2_5  = H2x2_5  +    -2.33392280718246 * H1x3_1
501050    +          +    -0.48123076018945 * H1x3_2  +    -0.76638732765894 * H1x3_3
501051    +          +    -1.76560846551209 * H1x3_4  +     1.62249911960883 * H1x3_5
501052    +          +    -0.31271093507345 * H1x3_6  +    -0.34748800562391 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x2_5 = H2x2_5 + -2.33392280718246 * H1x3_1 + -0.48123076018945 * 
H1x3_2 + -0.76638732765894 * H1x3_3 + -1.76560846551209 * H1x3_4 + 1.62249911960883 * H1x3_5 + 
-0.31271093507345 * H1x3_6 + -0.34748800562391 * H1x3_7 ;
501053    +   H2x2_6  = H2x2_6  +     0.53202536648562 * H1x3_1
501054    +          +     0.36605088046069 * H1x3_2  +     -1.7626773020241 * H1x3_3
501055    +          +     0.14681062331369 * H1x3_4  +     0.10699108516053 * H1x3_5
501056    +          +     2.24609371442936 * H1x3_6  +    -0.59076884674419 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x2_6 = H2x2_6 + 0.53202536648562 * H1x3_1 + 0.36605088046069 * H1x3_2 
+ -1.7626773020241 * H1x3_3 + 0.14681062331369 * H1x3_4 + 0.10699108516053 * H1x3_5 + 
2.24609371442936 * H1x3_6 + -0.59076884674419 * H1x3_7 ;
501057    +   H2x2_7  = H2x2_7  +    -0.05290923023086 * H1x3_1
501058    +          +    -0.30472796298249 * H1x3_2  +     1.89100111779461 * H1x3_3
501059    +          +     0.51110284119421 * H1x3_4  +     -0.2014479939412 * H1x3_5
501060    +          +     1.02507111515379 * H1x3_6  +    -0.63211120065975 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x2_7 = H2x2_7 + -0.05290923023086 * H1x3_1 + -0.30472796298249 * 
H1x3_2 + 1.89100111779461 * H1x3_3 + 0.51110284119421 * H1x3_4 + -0.2014479939412 * H1x3_5 + 
1.02507111515379 * H1x3_6 + -0.63211120065975 * H1x3_7 ;
501061    +   H2x2_1  =    -2.15023760884419 + H2x2_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = -2.15023760884419 + H2x2_1 ;
501062    +   H2x2_2  =    -1.03542203438136 + H2x2_2 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = -1.03542203438136 + H2x2_2 ;
501063    +   H2x2_3  =    -1.03202542428687 + H2x2_3 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = -1.03202542428687 + H2x2_3 ;
501064    +   H2x2_4  =     0.79380822765375 + H2x2_4 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = 0.79380822765375 + H2x2_4 ;
501065    +   H2x2_5  =    -0.37637686056399 + H2x2_5 ;
MPRINT(EM_DIAGRAM):   H2x2_5 = -0.37637686056399 + H2x2_5 ;
501066    +   H2x2_6  =    -0.12032383488066 + H2x2_6 ;
MPRINT(EM_DIAGRAM):   H2x2_6 = -0.12032383488066 + H2x2_6 ;
501067    +   H2x2_7  =     0.84544057856735 + H2x2_7 ;
MPRINT(EM_DIAGRAM):   H2x2_7 = 0.84544057856735 + H2x2_7 ;
501068    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
501069    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
501070    +   H2x2_1  = 1.0 / (1.0 + EXP(MIN( - H2x2_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x2_1 = 1.0 / (1.0 + EXP(MIN( - H2x2_1 , _EXP_BAR)));
501071    +   H2x2_2  = 1.0 / (1.0 + EXP(MIN( - H2x2_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x2_2 = 1.0 / (1.0 + EXP(MIN( - H2x2_2 , _EXP_BAR)));
501072    +   H2x2_3  = 1.0 / (1.0 + EXP(MIN( - H2x2_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x2_3 = 1.0 / (1.0 + EXP(MIN( - H2x2_3 , _EXP_BAR)));
501073    +   H2x2_4  = 1.0 / (1.0 + EXP(MIN( - H2x2_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x2_4 = 1.0 / (1.0 + EXP(MIN( - H2x2_4 , _EXP_BAR)));
501074    +   H2x2_5  = 1.0 / (1.0 + EXP(MIN( - H2x2_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x2_5 = 1.0 / (1.0 + EXP(MIN( - H2x2_5 , _EXP_BAR)));
501075    +   H2x2_6  = 1.0 / (1.0 + EXP(MIN( - H2x2_6 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x2_6 = 1.0 / (1.0 + EXP(MIN( - H2x2_6 , _EXP_BAR)));
501076    +   H2x2_7  = 1.0 / (1.0 + EXP(MIN( - H2x2_7 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x2_7 = 1.0 / (1.0 + EXP(MIN( - H2x2_7 , _EXP_BAR)));
501077    +END;
MPRINT(EM_DIAGRAM):   END;
501078    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
501079    +   H2x2_1  = .;
MPRINT(EM_DIAGRAM):   H2x2_1 = .;
501080    +   H2x2_2  = .;
MPRINT(EM_DIAGRAM):   H2x2_2 = .;
501081    +   H2x2_3  = .;
MPRINT(EM_DIAGRAM):   H2x2_3 = .;
501082    +   H2x2_4  = .;
MPRINT(EM_DIAGRAM):   H2x2_4 = .;
501083    +   H2x2_5  = .;
MPRINT(EM_DIAGRAM):   H2x2_5 = .;
501084    +   H2x2_6  = .;
MPRINT(EM_DIAGRAM):   H2x2_6 = .;
501085    +   H2x2_7  = .;
MPRINT(EM_DIAGRAM):   H2x2_7 = .;
501086    +END;
MPRINT(EM_DIAGRAM):   END;
501087    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
501088    +*** Writing the Node H3x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H3x1_ ;
501089    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
501090    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
501091    +   H3x1_1  =    -0.90634182479211 * H2x1_1  +    -0.09135307681655 * H2x1_2
501092    +          +     -1.1697186659188 * H2x1_3  +    -1.58089509972168 * H2x1_4
501093    +          +    -0.36298075828987 * H2x1_5  +     -0.1512750341775 * H2x1_6
501094    +          +    -0.95333639415651 * H2x1_7 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = -0.90634182479211 * H2x1_1 + -0.09135307681655 * H2x1_2 + 
-1.1697186659188 * H2x1_3 + -1.58089509972168 * H2x1_4 + -0.36298075828987 * H2x1_5 + 
-0.1512750341775 * H2x1_6 + -0.95333639415651 * H2x1_7 ;
501095    +   H3x1_2  =     0.55686365647701 * H2x1_1  +      1.5696753982442 * H2x1_2
501096    +          +    -0.32250855602992 * H2x1_3  +     0.19455668370146 * H2x1_4
501097    +          +     0.44351097086868 * H2x1_5  +     0.27358852097745 * H2x1_6
501098    +          +      0.4281879736941 * H2x1_7 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = 0.55686365647701 * H2x1_1 + 1.5696753982442 * H2x1_2 + 
-0.32250855602992 * H2x1_3 + 0.19455668370146 * H2x1_4 + 0.44351097086868 * H2x1_5 + 
0.27358852097745 * H2x1_6 + 0.4281879736941 * H2x1_7 ;
501099    +   H3x1_3  =     0.12633341645489 * H2x1_1  +    -0.66899185238366 * H2x1_2
501100    +          +    -2.56536949854372 * H2x1_3  +    -1.44702955697377 * H2x1_4
501101    +          +    -2.12726548877297 * H2x1_5  +     0.98860110338896 * H2x1_6
501102    +          +    -1.81290069415788 * H2x1_7 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = 0.12633341645489 * H2x1_1 + -0.66899185238366 * H2x1_2 + 
-2.56536949854372 * H2x1_3 + -1.44702955697377 * H2x1_4 + -2.12726548877297 * H2x1_5 + 
0.98860110338896 * H2x1_6 + -1.81290069415788 * H2x1_7 ;
501103    +   H3x1_4  =     -1.5244883189849 * H2x1_1  +     -0.8795974458787 * H2x1_2
501104    +          +    -0.90961705850703 * H2x1_3  +    -0.41256891447907 * H2x1_4
501105    +          +    -1.55913982799805 * H2x1_5  +     -0.9171280329681 * H2x1_6
501106    +          +    -0.70506147827449 * H2x1_7 ;
MPRINT(EM_DIAGRAM):   H3x1_4 = -1.5244883189849 * H2x1_1 + -0.8795974458787 * H2x1_2 + 
-0.90961705850703 * H2x1_3 + -0.41256891447907 * H2x1_4 + -1.55913982799805 * H2x1_5 + 
-0.9171280329681 * H2x1_6 + -0.70506147827449 * H2x1_7 ;
501107    +   H3x1_5  =     0.35217616707387 * H2x1_1  +    -1.16700891298034 * H2x1_2
501108    +          +      0.5371834401358 * H2x1_3  +     2.90147333104132 * H2x1_4
501109    +          +     0.77800792666349 * H2x1_5  +     0.78250225671691 * H2x1_6
501110    +          +    -0.59091463760785 * H2x1_7 ;
MPRINT(EM_DIAGRAM):   H3x1_5 = 0.35217616707387 * H2x1_1 + -1.16700891298034 * H2x1_2 + 
0.5371834401358 * H2x1_3 + 2.90147333104132 * H2x1_4 + 0.77800792666349 * H2x1_5 + 
0.78250225671691 * H2x1_6 + -0.59091463760785 * H2x1_7 ;
501111    +   H3x1_6  =    -0.44929632444778 * H2x1_1  +    -0.78833736143978 * H2x1_2
501112    +          +    -2.25458905584756 * H2x1_3  +    -1.94571232358746 * H2x1_4
501113    +          +     1.80055450278469 * H2x1_5  +     1.56927477052283 * H2x1_6
501114    +          +     0.56206783006188 * H2x1_7 ;
MPRINT(EM_DIAGRAM):   H3x1_6 = -0.44929632444778 * H2x1_1 + -0.78833736143978 * H2x1_2 + 
-2.25458905584756 * H2x1_3 + -1.94571232358746 * H2x1_4 + 1.80055450278469 * H2x1_5 + 
1.56927477052283 * H2x1_6 + 0.56206783006188 * H2x1_7 ;
501115    +   H3x1_1  = H3x1_1  +    -1.50414812258238 * H2x2_1
501116    +          +     2.71183535634521 * H2x2_2  +     0.92780495410356 * H2x2_3
501117    +          +     1.94819401410825 * H2x2_4  +     0.85505273909828 * H2x2_5
501118    +          +    -0.66540689026991 * H2x2_6  +    -0.32749055872531 * H2x2_7 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = H3x1_1 + -1.50414812258238 * H2x2_1 + 2.71183535634521 * H2x2_2 
+ 0.92780495410356 * H2x2_3 + 1.94819401410825 * H2x2_4 + 0.85505273909828 * H2x2_5 + 
-0.66540689026991 * H2x2_6 + -0.32749055872531 * H2x2_7 ;
501119    +   H3x1_2  = H3x1_2  +     0.55540470737424 * H2x2_1
501120    +          +    -1.17598972209898 * H2x2_2  +    -0.16619065810258 * H2x2_3
501121    +          +    -0.58955298520043 * H2x2_4  +     1.04029871696373 * H2x2_5
501122    +          +    -0.71430896416332 * H2x2_6  +    -1.57031773170963 * H2x2_7 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = H3x1_2 + 0.55540470737424 * H2x2_1 + -1.17598972209898 * H2x2_2 
+ -0.16619065810258 * H2x2_3 + -0.58955298520043 * H2x2_4 + 1.04029871696373 * H2x2_5 + 
-0.71430896416332 * H2x2_6 + -1.57031773170963 * H2x2_7 ;
501123    +   H3x1_3  = H3x1_3  +    -1.83796456414338 * H2x2_1
501124    +          +     1.49146311784803 * H2x2_2  +     0.05550989818961 * H2x2_3
501125    +          +    -0.08016006878981 * H2x2_4  +    -1.41328284571945 * H2x2_5
501126    +          +    -0.58920642563444 * H2x2_6  +     1.30950353008631 * H2x2_7 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = H3x1_3 + -1.83796456414338 * H2x2_1 + 1.49146311784803 * H2x2_2 
+ 0.05550989818961 * H2x2_3 + -0.08016006878981 * H2x2_4 + -1.41328284571945 * H2x2_5 + 
-0.58920642563444 * H2x2_6 + 1.30950353008631 * H2x2_7 ;
501127    +   H3x1_4  = H3x1_4  +     0.91384399854626 * H2x2_1
501128    +          +     -0.0377841204978 * H2x2_2  +     0.67274196472005 * H2x2_3
501129    +          +     0.76900504900432 * H2x2_4  +     0.71823373480501 * H2x2_5
501130    +          +    -0.04199535362683 * H2x2_6  +    -0.23501610033448 * H2x2_7 ;
MPRINT(EM_DIAGRAM):   H3x1_4 = H3x1_4 + 0.91384399854626 * H2x2_1 + -0.0377841204978 * H2x2_2 
+ 0.67274196472005 * H2x2_3 + 0.76900504900432 * H2x2_4 + 0.71823373480501 * H2x2_5 + 
-0.04199535362683 * H2x2_6 + -0.23501610033448 * H2x2_7 ;
501131    +   H3x1_5  = H3x1_5  +    -0.06769558303335 * H2x2_1
501132    +          +    -0.95662890382057 * H2x2_2  +    -0.56314830579562 * H2x2_3
501133    +          +    -0.17355939108245 * H2x2_4  +     0.49684441057813 * H2x2_5
501134    +          +    -0.27220440010331 * H2x2_6  +     1.13747855812864 * H2x2_7 ;
MPRINT(EM_DIAGRAM):   H3x1_5 = H3x1_5 + -0.06769558303335 * H2x2_1 + -0.95662890382057 * 
H2x2_2 + -0.56314830579562 * H2x2_3 + -0.17355939108245 * H2x2_4 + 0.49684441057813 * H2x2_5 + 
-0.27220440010331 * H2x2_6 + 1.13747855812864 * H2x2_7 ;
501135    +   H3x1_6  = H3x1_6  +    -0.58306849781773 * H2x2_1
501136    +          +    -1.96921645645113 * H2x2_2  +     0.09529919260054 * H2x2_3
501137    +          +     1.84321935581989 * H2x2_4  +     1.90621049776113 * H2x2_5
501138    +          +     0.22735961476244 * H2x2_6  +      1.7681869270915 * H2x2_7 ;
MPRINT(EM_DIAGRAM):   H3x1_6 = H3x1_6 + -0.58306849781773 * H2x2_1 + -1.96921645645113 * 
H2x2_2 + 0.09529919260054 * H2x2_3 + 1.84321935581989 * H2x2_4 + 1.90621049776113 * H2x2_5 + 
0.22735961476244 * H2x2_6 + 1.7681869270915 * H2x2_7 ;
501139    +   H3x1_1  =     0.84072071725045 + H3x1_1 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = 0.84072071725045 + H3x1_1 ;
501140    +   H3x1_2  =    -0.84331420680493 + H3x1_2 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = -0.84331420680493 + H3x1_2 ;
501141    +   H3x1_3  =    -1.15131491327763 + H3x1_3 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = -1.15131491327763 + H3x1_3 ;
501142    +   H3x1_4  =    -0.56905094914727 + H3x1_4 ;
MPRINT(EM_DIAGRAM):   H3x1_4 = -0.56905094914727 + H3x1_4 ;
501143    +   H3x1_5  =     1.29747074025762 + H3x1_5 ;
MPRINT(EM_DIAGRAM):   H3x1_5 = 1.29747074025762 + H3x1_5 ;
501144    +   H3x1_6  =     1.70771922783336 + H3x1_6 ;
MPRINT(EM_DIAGRAM):   H3x1_6 = 1.70771922783336 + H3x1_6 ;
501145    +   H3x1_7  = 0;
MPRINT(EM_DIAGRAM):   H3x1_7 = 0;
501146    +   _MAX_ = MAX (H3x1_1 , H3x1_2 , H3x1_3 , H3x1_4 , H3x1_5 , H3x1_6 , H3x1_7
501147    +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H3x1_1 , H3x1_2 , H3x1_3 , H3x1_4 , H3x1_5 , H3x1_6 , 
H3x1_7 );
501148    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
501149    +   H3x1_1  = EXP(H3x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_1 = EXP(H3x1_1 - _MAX_);
501150    +   _SUM_ = _SUM_ + H3x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_1 ;
501151    +   H3x1_2  = EXP(H3x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_2 = EXP(H3x1_2 - _MAX_);
501152    +   _SUM_ = _SUM_ + H3x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_2 ;
501153    +   H3x1_3  = EXP(H3x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_3 = EXP(H3x1_3 - _MAX_);
501154    +   _SUM_ = _SUM_ + H3x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_3 ;
501155    +   H3x1_4  = EXP(H3x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_4 = EXP(H3x1_4 - _MAX_);
501156    +   _SUM_ = _SUM_ + H3x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_4 ;
501157    +   H3x1_5  = EXP(H3x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_5 = EXP(H3x1_5 - _MAX_);
501158    +   _SUM_ = _SUM_ + H3x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_5 ;
501159    +   H3x1_6  = EXP(H3x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_6 = EXP(H3x1_6 - _MAX_);
501160    +   _SUM_ = _SUM_ + H3x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_6 ;
501161    +   H3x1_7  = EXP(H3x1_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_7 = EXP(H3x1_7 - _MAX_);
501162    +   _SUM_ = _SUM_ + H3x1_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_7 ;
501163    +   H3x1_1  = H3x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_1 = H3x1_1 / _SUM_;
501164    +   H3x1_2  = H3x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_2 = H3x1_2 / _SUM_;
501165    +   H3x1_3  = H3x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_3 = H3x1_3 / _SUM_;
501166    +   H3x1_4  = H3x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_4 = H3x1_4 / _SUM_;
501167    +   H3x1_5  = H3x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_5 = H3x1_5 / _SUM_;
501168    +   H3x1_6  = H3x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_6 = H3x1_6 / _SUM_;
501169    +   H3x1_7  = H3x1_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_7 = H3x1_7 / _SUM_;
501170    +END;
MPRINT(EM_DIAGRAM):   END;
501171    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
501172    +   H3x1_1  = .;
MPRINT(EM_DIAGRAM):   H3x1_1 = .;
501173    +   H3x1_2  = .;
MPRINT(EM_DIAGRAM):   H3x1_2 = .;
501174    +   H3x1_3  = .;
MPRINT(EM_DIAGRAM):   H3x1_3 = .;
501175    +   H3x1_4  = .;
MPRINT(EM_DIAGRAM):   H3x1_4 = .;
501176    +   H3x1_5  = .;
MPRINT(EM_DIAGRAM):   H3x1_5 = .;
501177    +   H3x1_6  = .;
MPRINT(EM_DIAGRAM):   H3x1_6 = .;
501178    +   H3x1_7  = .;
MPRINT(EM_DIAGRAM):   H3x1_7 = .;
501179    +END;
MPRINT(EM_DIAGRAM):   END;
501180    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
501181    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
501182    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
501183    +
501184    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
501185    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
501186    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
501187    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
501188    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
501189    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
501190    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
501191    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
501192    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
501193    +end;
MPRINT(EM_DIAGRAM):   end;
501194    +else do;
MPRINT(EM_DIAGRAM):   else do;
501195    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
501196    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
501197    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
501198    +   end;
MPRINT(EM_DIAGRAM):   end;
501199    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
501200    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
501201    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
501202    +   end;
MPRINT(EM_DIAGRAM):   end;
501203    +   else do;
MPRINT(EM_DIAGRAM):   else do;
501204    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
501205    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
501206    +   end;
MPRINT(EM_DIAGRAM):   end;
501207    +end;
MPRINT(EM_DIAGRAM):   end;
501208    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
501209    +   P_DepVar1  =    -10.5125772193731 * H3x1_1  +     0.35682915649078 * H3x1_2
501210    +          +    -0.04349805114958 * H3x1_3  +    -0.04491244667008 * H3x1_4
501211    +          +     34.5477259369591 * H3x1_5  +    -16.5063579573423 * H3x1_6
501212    +          +     0.83421675743806 * H3x1_7 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -10.5125772193731 * H3x1_1 + 0.35682915649078 * H3x1_2 + 
-0.04349805114958 * H3x1_3 + -0.04491244667008 * H3x1_4 + 34.5477259369591 * H3x1_5 + 
-16.5063579573423 * H3x1_6 + 0.83421675743806 * H3x1_7 ;
501213    +   P_DepVar1  =     6.85864742009761 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 6.85864742009761 + P_DepVar1 ;
501214    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
501215    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
501216    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
501217    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
501218    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
501219    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
501220    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
501221    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
501222    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
501223    +END;
MPRINT(EM_DIAGRAM):   END;
501224    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
501225    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
501226    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
501227    +END;
MPRINT(EM_DIAGRAM):   END;
501228    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
501229    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
501230    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
501231    +END;
MPRINT(EM_DIAGRAM):   END;
501232    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
501233    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
501234    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
501235    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
501236    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
501237    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
501238    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
501239    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
501240    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
501241    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
501242    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
501243    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
501244    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
501245    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
501246    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
501247    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
501248    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
501249    +END;
MPRINT(EM_DIAGRAM):   END;
501250    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
501251    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
501252    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
501253    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
501254     run;

NOTE: DATA STEP view saved on file EMWS8.AUTONEURAL43_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.META2_VALIDATE.VIEW used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(EM_DIAGRAM):   quit;
501255     quit;
501256     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
501257     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
501258     * AutoNeural43: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * AutoNeural43: Computing metadata for TRAIN data;
501259     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;

NOTE: View EMWS8.AUTONEURAL43_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural43\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS8.AutoNeural43_TRAIN out=_tempAdvisor 
noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS8.AutoNeural43_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS8.AutoNeural43_TRAIN out=WORK.M360H0J4 
noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M360H0J4;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20 
INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M360H0J4(keep=name type length label format formatl 
formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then format = strip(format)!!strip(put(formatl, 
best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, 
best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then informat = 
strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, 
best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M360H0J4;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M360H0J4;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M085RZG3 NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M085RZG3;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M085RZG3;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2OC9D21(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M085RZG3;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M085RZG3;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 
FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M085RZG3;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" 
"MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" 
"QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" "YEAR" "YYMMDD" "YYMON" 
"YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" 
"EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) 
formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = 
"DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) 
formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" 
"NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" 
"SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = 
"DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then 
level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 
'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 
'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ 
('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 
'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 
'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M085RZG3;
MPRINT(EMADVISECOLUMNS):   set WORK.M085RZG3;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= 
"Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= 
"Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower limit" UPPERLIMIT= 
"Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= 
"Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Meta2_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Meta2_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural43_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT 
LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "AutoNeural43";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("P_DEPVAR1") creator = "AutoNeural43";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR1") creator = "AutoNeural43";
MPRINT(EM_DIAGRAM):   when("P_DEPVAR0") creator = "AutoNeural43";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR0") creator = "AutoNeural43";
MPRINT(EM_DIAGRAM):   when("F_DEPVAR") creator = "AutoNeural43";
MPRINT(EM_DIAGRAM):   when("I_DEPVAR") creator = "AutoNeural43";
MPRINT(EM_DIAGRAM):   when("U_DEPVAR") creator = "AutoNeural43";
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "AutoNeural43";
MPRINT(EM_DIAGRAM):   when("DEPVAR") model = "AutoNeural43";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * AutoNeural43: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
501571     data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
501572     set EMWS8.AutoNeural43_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural43_EMINFO;
501573     where DATA='AutoNeural43' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='AutoNeural43' and KEY ^in('DECDATA', 'DECMETA', 
'IMPORTANCE', 'MODEL');
501574     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.AUTONEURAL43_EMINFO.
      WHERE (DATA='AutoNeural43') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

501575     data EMWS8.AutoNeural43_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural43_EMINFO;
501576     length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
501577     input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
501578     cards;
MPRINT(EM_DIAGRAM):   cards;

NOTE: The data set EMWS8.AUTONEURAL43_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   run;
501582     run;
501583     data EMWS8.AutoNeural43_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural43_EMINFO;
501584     set EMWS8.AutoNeural43_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural43_EMINFO WORK.MODELTEMP_INFO;
501585     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.AUTONEURAL43_EMINFO.
NOTE: There were 0 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS8.AUTONEURAL43_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

501586     proc sort data = EMWS8.AutoNeural43_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.AutoNeural43_EMINFO NOTHREADS;
501587     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
501588     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.AUTONEURAL43_EMINFO.
NOTE: The data set EMWS8.AUTONEURAL43_EMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

501589     proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
501590     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
501591     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set EMWS8.FIMPORT_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 1 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

501592     proc sort data = EMWS8.AutoNeural43_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS8.AutoNeural43_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
501593     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
501594     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 3 observations read from the data set EMWS8.AUTONEURAL43_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

501595     data EMWS8.AutoNeural43_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural43_EMINFO;
501596     merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
501597     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
501598     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 3 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS8.AUTONEURAL43_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

501599     proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
501600     delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
501601     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
501602     quit;
MPRINT(EM_DIAGRAM):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

NOTE: View EMWS8.AUTONEURAL43_TRAIN.VIEW used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      
NOTE: View EMWS8.AUTONEURAL43_VALIDATE.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
