*------------------------------------------------------------*
User:                Lukas Fahr
Date:                28. April 2016
Time:                19.50 Uhr
Site:                70107571
Platform:            X64_7PRO
Maintenance Release: 9.03.01M2P081512
EM Version:          12.1
* 
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "28. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "19.40 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Training Log
Date:                28. April 2016
Time:                19.40 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O0995LZG
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural43\EMTRAIN.out" encoding="UTF-8"
NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O0995LZG new;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOG
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural43\EMLOG.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "28. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "19.40 Uhr" );
MPRINT(EM_DIAGRAM):   file _LOG;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                Lukas Fahr";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "Site:                70107571";
MPRINT(EM_DIAGRAM):   put "Platform:            X64_7PRO";
MPRINT(EM_DIAGRAM):   put "Maintenance Release: 9.03.01M2P081512";
MPRINT(EM_DIAGRAM):   put "EM Version:          12.1";
MPRINT(EM_DIAGRAM):   put "* ";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural43\EMTRAIN.log" encoding="UTF-8"
NOBOM;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _LOG MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_LOGIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _LOGIN
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural43\EMSCORE.log" encoding="UTF-8"
NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural43\EMREPORT.log" encoding="UTF-8"
NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    filename _LOG;
MPRINT(EM_DIAGRAM):    filename _OUT
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural43\EMOUTPUT.out" encoding="UTF-8"
NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "28. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "19.40 Uhr" );
MPRINT(EM_DIAGRAM):   file _OUT;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                Lukas Fahr";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural43\EMTRAIN.out" encoding="UTF-8"
NOBOM;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _OUT MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_OUTIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural43\EMSCORE.out" encoding="UTF-8"
NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural43\EMREPORT.out" encoding="UTF-8"
NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    filename _OUT;
MPRINT(EM_DIAGRAM):    filename _emtool_
'C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural43\EMRUNSTATUS.xml' encoding="UTF-8"
NOBOM;
495796     proc freq data=EMWS8.AutoNeural43_VariableSet noprint;
MPRINT(EM_DIAGRAM):    proc freq data=EMWS8.AutoNeural43_VariableSet noprint;
495797     table ROLE*LEVEL/out=WORK.AutoNeural43META;
MPRINT(EM_DIAGRAM):   table ROLE*LEVEL/out=WORK.AutoNeural43META;
495798     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set EMWS8.AUTONEURAL43_VARIABLESET.
NOTE: The data set WORK.AUTONEURAL43META has 6 observations and 4 variables.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
495799     proc print data=WORK.AutoNeural43META label noobs;
MPRINT(EM_DIAGRAM):   proc print data=WORK.AutoNeural43META label noobs;
495800     var ROLE LEVEL COUNT;
MPRINT(EM_DIAGRAM):   var ROLE LEVEL COUNT;
495801     label ROLE = "%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel, NOQUOTE))" LEVEL =
495801   ! "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" COUNT =
495801   ! "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label ROLE = "Role" LEVEL = "Measurement Level" COUNT = "Frequency
Count";
495802     title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
495803     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_varSummary_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Variable Summary";
MPRINT(EM_DIAGRAM):   run;
495804     run;
 
NOTE: There were 6 observations read from the data set WORK.AUTONEURAL43META.
NOTE: The PROCEDURE PRINT printed page 407.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
495805     title10;
MPRINT(EM_DIAGRAM):   title10;
495806     %let EMNORLEN = %DMNORLEN;
MPRINT(EM_DIAGRAM):
EMWS8.Meta2_TRAIN EMWS8.Meta2_TRAIN
EMWS8.Meta2_TRAIN EMWS8.Meta2_TRAIN EMWS8 Meta2_TRAIN
EMWS8.Meta2_TRAIN EMWS8.Meta2_TRAIN
EMWS8.Meta2_TRAIN EMWS8.Meta2_TRAIN EMWS8 Meta2_TRAIN
MPRINT(EM_DIAGRAM):    proc dmdb data=EMWS8.Meta2_TRAIN
classout=WORK._DMDBCLASSTARGET(keep=NAME NRAW CRAW LEVEL FREQUENCY NMISSPERCENT);
MPRINT(EM_DIAGRAM):   class DepVar(DESC) ;
MPRINT(EM_DIAGRAM):   run;
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _INIT >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL setMetaData >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL setMetaData >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _term >>
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set WORK._DMDBCLASSTARGET;
MPRINT(EM_DIAGRAM):   where ^(NRAW eq . and CRAW eq '') and NAME="DepVar";
MPRINT(EM_DIAGRAM):   if _N_=1 then call symput('_newevent', strip(LEVEL));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK._DMDBCLASSTARGET out=_TEMPCLASS(keep=LEVEL FREQUENCY
NMISSPERCENT rename=(LEVEL=DepVar));
MPRINT(EM_DIAGRAM):   by LEVEL;
MPRINT(EM_DIAGRAM):   where ^(NRAW eq . and CRAW eq '') and NAME="DepVar";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _TEMPCLASS;
MPRINT(EM_DIAGRAM):   set _TEMPCLASS;
MPRINT(EM_DIAGRAM):   NMISSPERCENT= NMISSPERCENT/100;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _sortedDecData;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural43_DepVar_DD;
MPRINT(EM_DIAGRAM):   _levelorder_=_N_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_sortedDecdata;
MPRINT(EM_DIAGRAM):   by DepVar;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   merge _TEMPCLASS(in=_a) _sortedDecdata(in=_b);
MPRINT(EM_DIAGRAM):   by DepVar;
MPRINT(EM_DIAGRAM):   if (_a and ^_b) or (^_a and _b) then call symput('_emresetDec', '1');
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural43_DepVar_DD;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural43_DepVar_DD;
MPRINT(EM_DIAGRAM):   _levelorder_=_N_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural43_DepVar_DD;
MPRINT(EM_DIAGRAM):   by DepVar;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural43_DepVar_DD;
MPRINT(EM_DIAGRAM):   merge EMWS8.AutoNeural43_DepVar_DD
_TEMPCLASS(rename=(NMISSPERCENT=TRAINPRIOR FREQUENCY=COUNT));
MPRINT(EM_DIAGRAM):   by DepVar;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural43_DepVar_DD
out=EMWS8.AutoNeural43_DepVar_DD(drop=_levelorder_);
MPRINT(EM_DIAGRAM):   by _levelorder_;
MPRINT(EM_DIAGRAM):   run;
495853     data WORK.AutoNeural43_EVENT(KEEP=VARIABLE LABEL LEVEL EVENT NUMLEVELS ORDER);
MPRINT(EM_DIAGRAM):    data WORK.AutoNeural43_EVENT(KEEP=VARIABLE LABEL LEVEL EVENT NUMLEVELS
ORDER);
495854     length ORDER $20;
MPRINT(EM_DIAGRAM):   length ORDER $20;
495855     label VARIABLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel,  NOQUOTE))"
495855   ! EVENT = "%sysfunc(sasmsg(sashelp.dmine, assmt_event_vlabel, NOQUOTE))" NUMLEVELS =
495855   ! "%sysfunc(sasmsg(sashelp.dmine, rpt_numcat_vlabel, NOQUOTE))" LEVEL =
495856        "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" ORDER =
495856   ! "%sysfunc(sasmsg(sashelp.dmine, meta_order_vlabel, NOQUOTE))" LABEL =
495856   ! "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label VARIABLE = "Target" EVENT = "Event" NUMLEVELS = "Number of Levels"
LEVEL = "Measurement Level" ORDER = "Order" LABEL = "Label";
495857     set EMWS8.AUTONEURAL43_DEPVAR_DM( where=(_TYPE_="TARGET"));
MPRINT(EM_DIAGRAM):   set EMWS8.AUTONEURAL43_DEPVAR_DM( where=(_TYPE_="TARGET"));
495858     NumLevels=2;
MPRINT(EM_DIAGRAM):   NumLevels=2;
495859     select(upcase(ORDER));
MPRINT(EM_DIAGRAM):   select(upcase(ORDER));
495860     when('DESC') ORDER = 'Descending';
MPRINT(EM_DIAGRAM):   when('DESC') ORDER = 'Descending';
495861     when('ASC') ORDER = 'Ascending';
MPRINT(EM_DIAGRAM):   when('ASC') ORDER = 'Ascending';
495862     when('FMTDESC') ORDER = 'Formatted Descending';
MPRINT(EM_DIAGRAM):   when('FMTDESC') ORDER = 'Formatted Descending';
495863     when('FMTASC') ORDER = 'Formatted Ascending';
MPRINT(EM_DIAGRAM):   when('FMTASC') ORDER = 'Formatted Ascending';
495864     otherwise ORDER = 'Descending';
MPRINT(EM_DIAGRAM):   otherwise ORDER = 'Descending';
495865     end;
MPRINT(EM_DIAGRAM):   end;
495866     output;
MPRINT(EM_DIAGRAM):   output;
495867     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.AUTONEURAL43_DEPVAR_DM.
      WHERE _TYPE_='TARGET';
NOTE: The data set WORK.AUTONEURAL43_EVENT has 1 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
495868     title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
495869     proc print data=WORK.AutoNeural43_EVENT noobs label;
MPRINT(EM_DIAGRAM):   proc print data=WORK.AutoNeural43_EVENT noobs label;
495870     var VARIABLE EVENT LEVEL NUMLEVELS ORDER LABEL;
MPRINT(EM_DIAGRAM):   var VARIABLE EVENT LEVEL NUMLEVELS ORDER LABEL;
495871     title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
495872     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_modelEvent_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Model Events";
MPRINT(EM_DIAGRAM):   run;
495873     run;
 
NOTE: There were 1 observations read from the data set WORK.AUTONEURAL43_EVENT.
NOTE: The PROCEDURE PRINT printed page 408.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
495874     title10;
MPRINT(EM_DIAGRAM):   title10;
"No decisions defined for target "DepVar"."
495875     proc print data = EMWS8.AutoNeural43_DepVar_DM noobs label;
MPRINT(EM_DIAGRAM):    proc print data = EMWS8.AutoNeural43_DepVar_DM noobs label;
495876     var _type_ variable label;
MPRINT(EM_DIAGRAM):   var _type_ variable label;
495877     where _type_ ^in('MATRIX', 'DECISION', 'TRAINPRIOR', 'DATAPRIOR', 'DECPRIOR');
MPRINT(EM_DIAGRAM):   where _type_ ^in('MATRIX', 'DECISION', 'TRAINPRIOR', 'DATAPRIOR',
'DECPRIOR');
495878     label _TYPE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_type_vlabel,     NOQUOTE))"
495878   ! VARIABLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel, NOQUOTE))" LABEL =
495878   ! "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _TYPE_ = "Type" VARIABLE = "Variable" LABEL = "Label";
495879     title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
495880     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_predDecVars_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Predicted and decision variables";
MPRINT(EM_DIAGRAM):   run;
495881     run;
 
NOTE: There were 7 observations read from the data set EMWS8.AUTONEURAL43_DEPVAR_DM.
      WHERE _type_ not in ('DATAPRIOR', 'DECISION', 'DECPRIOR', 'MATRIX', 'TRAINPRIOR');
NOTE: The PROCEDURE PRINT printed page 409.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
495882     title10;
MPRINT(EM_DIAGRAM):   title10;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * AutoNeural43: Preparing metadata for Training;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   data WORK.M0JNXYHU;
MPRINT(EM_DIAGRAM):   set WORK.M0JNXYHU;
MPRINT(EM_DIAGRAM):   where(use = 'Y' or (role = 'INPUT' and use = 'D'));
MPRINT(EM_DIAGRAM):   if (role = 'REJECTED') then role = 'INPUT';
MPRINT(EM_DIAGRAM):   run;
495891     data WORK.M0JNXYHU;
MPRINT(EM_DIAGRAM):    data WORK.M0JNXYHU;
495892     set WORK.M0JNXYHU end=eof;
MPRINT(EM_DIAGRAM):   set WORK.M0JNXYHU end=eof;
495893     output;
MPRINT(EM_DIAGRAM):   output;
495894     if eof then do;
MPRINT(EM_DIAGRAM):   if eof then do;
495895     NAME="";
MPRINT(EM_DIAGRAM):   NAME="";
495896     ROLE="COST";
MPRINT(EM_DIAGRAM):   ROLE="COST";
495897     LEVEL="INTERVAL";
MPRINT(EM_DIAGRAM):   LEVEL="INTERVAL";
495898     TYPE="N";
MPRINT(EM_DIAGRAM):   TYPE="N";
495899     output;
MPRINT(EM_DIAGRAM):   output;
495900     end;
MPRINT(EM_DIAGRAM):   end;
495901     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 15 observations read from the data set WORK.M0JNXYHU.
NOTE: The data set WORK.M0JNXYHU has 16 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
NOTE: There were 2 observations read from the data set EMWS8.AUTONEURAL43_DEPVAR_DD.
NOTE: The data set WORK.DEPVAR has 2 observations and 7 variables.
495902     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
495903     * AutoNeural43: Create decision matrix;
MPRINT(EM_DIAGRAM):   * AutoNeural43: Create decision matrix;
495904     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
495905     data WORK.DepVar;
MPRINT(EM_DIAGRAM):   data WORK.DepVar;
495906       length   DepVar                           $  32
495907                COUNT                                8
495908                DATAPRIOR                            8
495909                TRAINPRIOR                           8
495910                DECPRIOR                             8
495911                DECISION1                            8
495912                DECISION2                            8
495913                ;
MPRINT(EM_DIAGRAM):   length DepVar $ 32 COUNT 8 DATAPRIOR 8 TRAINPRIOR 8 DECPRIOR 8 DECISION1
8 DECISION2 8 ;
495914
495915       label    COUNT="Level Counts"
495916                DATAPRIOR="Data Proportions"
495917                TRAINPRIOR="Training Proportions"
495918                DECPRIOR="Decision Priors"
495919                DECISION1="1"
495920                DECISION2="0"
495921                ;
MPRINT(EM_DIAGRAM):   label COUNT= "Level Counts" DATAPRIOR= "Data Proportions" TRAINPRIOR=
"Training Proportions" DECPRIOR= "Decision Priors" DECISION1= "1" DECISION2= "0" ;
495922       format   COUNT 10.
495923                ;
MPRINT(EM_DIAGRAM):   format COUNT 10. ;
495924     DepVar="1"; COUNT=359; DATAPRIOR=0.151221567; TRAINPRIOR=0.15122156697556;
495924   ! DECPRIOR=.; DECISION1=1; DECISION2=0;
MPRINT(EM_DIAGRAM):   DepVar="1";
MPRINT(EM_DIAGRAM):   COUNT=359;
MPRINT(EM_DIAGRAM):   DATAPRIOR=0.151221567;
MPRINT(EM_DIAGRAM):   TRAINPRIOR=0.15122156697556;
MPRINT(EM_DIAGRAM):   DECPRIOR=.;
MPRINT(EM_DIAGRAM):   DECISION1=1;
MPRINT(EM_DIAGRAM):   DECISION2=0;
495925     output;
MPRINT(EM_DIAGRAM):   output;
495926     DepVar="0"; COUNT=2015; DATAPRIOR=0.848778433; TRAINPRIOR=0.84877843302443;
495926   ! DECPRIOR=.; DECISION1=0; DECISION2=1;
MPRINT(EM_DIAGRAM):   DepVar="0";
MPRINT(EM_DIAGRAM):   COUNT=2015;
MPRINT(EM_DIAGRAM):   DATAPRIOR=0.848778433;
MPRINT(EM_DIAGRAM):   TRAINPRIOR=0.84877843302443;
MPRINT(EM_DIAGRAM):   DECPRIOR=.;
MPRINT(EM_DIAGRAM):   DECISION1=0;
MPRINT(EM_DIAGRAM):   DECISION2=1;
495927     output;
MPRINT(EM_DIAGRAM):   output;
495928     ;
MPRINT(EM_DIAGRAM):   ;
495929     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK.DEPVAR has 2 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
495930     proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
495931     modify DepVar(type=PROFIT label=DepVar);
MPRINT(EM_DIAGRAM):   modify DepVar(type=PROFIT label= DepVar);
MPRINT(EM_DIAGRAM):   label DECISION1= '1';
MPRINT(EM_DIAGRAM):   label DECISION2= '0';
MPRINT(EM_DIAGRAM):   run;
495932     label DECISION1= '1';
495933     label DECISION2= '0';
495934     run;
 
NOTE: MODIFY was successful for WORK.DEPVAR.DATA.
495935     quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
495936     data EM_AutoNeural43;
MPRINT(EM_DIAGRAM):   data EM_AutoNeural43;
495937     set EMWS8.Meta2_TRAIN(keep=
495938     AcceptedCmpTotal DepVar Frq Income Marital_Status Mnt MntGoldProds
495939     MntMeatProducts NumCatalogPurchases NumDealsPurchases NumWebVisitsMonth RFMstat
495940     Recency Teenhome Year_Birth );
MPRINT(EM_DIAGRAM):   set EMWS8.Meta2_TRAIN(keep= AcceptedCmpTotal DepVar Frq Income
Marital_Status Mnt MntGoldProds MntMeatProducts NumCatalogPurchases NumDealsPurchases
NumWebVisitsMonth RFMstat Recency Teenhome Year_Birth );
495941     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: View EMWS8.META2_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
NOTE: There were 2374 observations read from the data set EMWS8.PART_TRAIN.
NOTE: There were 2374 observations read from the data set EMWS8.META2_TRAIN.
NOTE: The data set WORK.EM_AUTONEURAL43 has 2374 observations and 15 variables.
NOTE: DATA statement used (Total process time):
      real time           0.28 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * AutoNeural43: DMDBClass Macro ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
495942     *------------------------------------------------------------* ;
495943     * AutoNeural43: DMDBClass Macro ;
495944     *------------------------------------------------------------* ;
495945     %macro DMDBClass;
495946         DepVar(DESC) Marital_Status(ASC)
495947     %mend DMDBClass;
495948     *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
495949     * AutoNeural43: DMDBVar Macro ;
MPRINT(EM_DIAGRAM):   * AutoNeural43: DMDBVar Macro ;
495950     *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
495951     %macro DMDBVar;
495952         AcceptedCmpTotal Frq Income Mnt MntGoldProds MntMeatProducts
495953        NumCatalogPurchases NumDealsPurchases NumWebVisitsMonth RFMstat Recency
495954        Teenhome Year_Birth
495955     %mend DMDBVar;
495956     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
495957     * AutoNeural43: Create DMDB;
MPRINT(EM_DIAGRAM):   * AutoNeural43: Create DMDB;
495958     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
495959     proc dmdb batch data=WORK.EM_AutoNeural43
495960     dmdbcat=WORK.AutoNeural43_DMDB
495961     maxlevel = 513
495962     ;
MPRINT(EM_DIAGRAM):   proc dmdb batch data=WORK.EM_AutoNeural43 dmdbcat=WORK.AutoNeural43_DMDB
maxlevel = 513 ;
MPRINT(EM_DIAGRAM):   class
495963     class %DMDBClass;
MPRINT(DMDBCLASS):   DepVar(DESC) Marital_Status(ASC)
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   var
495964     var %DMDBVar;
MPRINT(DMDBVAR):   AcceptedCmpTotal Frq Income Mnt MntGoldProds MntMeatProducts
NumCatalogPurchases NumDealsPurchases NumWebVisitsMonth RFMstat Recency Teenhome Year_Birth
MPRINT(EM_DIAGRAM):  ;
495965     target
495966     DepVar
495967     ;
MPRINT(EM_DIAGRAM):   target DepVar ;
495968     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Records processed = 2374   Memory used = 511K.
NOTE: There were 2374 observations read from the data set WORK.EM_AUTONEURAL43.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):   *--- end code ---*;
495969     quit;
495970     *--- end code ---*;
 
495971     *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------* ;
495972     * AutoNeural43: Interval Inputs Macro ;
MPRINT(EM_DIAGRAM):   * AutoNeural43: Interval Inputs Macro ;
495973     *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
495974     %macro INTINPUTS;
495975         AcceptedCmpTotal Frq Income Mnt MntGoldProds MntMeatProducts
495976        NumCatalogPurchases NumDealsPurchases NumWebVisitsMonth RFMstat Recency
495977        Teenhome Year_Birth
495978     %mend INTINPUTS;
495979     *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
495980     * AutoNeural43: Binary Inputs Macro ;
MPRINT(EM_DIAGRAM):   * AutoNeural43: Binary Inputs Macro ;
495981     *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
495982     %macro BININPUTS;
495983
495984     %mend BININPUTS;
495985     *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
495986     * AutoNeural43: Nominal Inputs Macro ;
MPRINT(EM_DIAGRAM):   * AutoNeural43: Nominal Inputs Macro ;
495987     *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
495988     %macro NOMINPUTS;
495989         Marital_Status
495990     %mend NOMINPUTS;
495991     *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
495992     * AutoNeural43: Ordinal Inputs Macro ;
MPRINT(EM_DIAGRAM):   * AutoNeural43: Ordinal Inputs Macro ;
495993     *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
495994     %macro ORDINPUTS;
495995
495996     %mend ORDINPUTS;
495997     * set printing options;
MPRINT(EM_DIAGRAM):   * set printing options;
495998     ;
MPRINT(EM_DIAGRAM):   ;
495999     options linesize = 80;
MPRINT(EM_DIAGRAM):   options linesize = 80;
496000     options pagesize = 6000;
The SAS System
 
MPRINT(EM_DIAGRAM):   options pagesize = 6000;
496001     options nonumber;
MPRINT(EM_DIAGRAM):   options nonumber;
496002     options nocenter;
MPRINT(EM_DIAGRAM):   options nocenter;
496003     options nodate;
MPRINT(EM_DIAGRAM):   options nodate;
496004     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
496005     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_autonet_title  ,
496005   ! NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "AutoNet";
MPRINT(EM_DIAGRAM):   *;
496006     *;
 
496007     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
496008     * Autoneural: search / FUNNEL LAYERS;
MPRINT(EM_DIAGRAM):   * Autoneural: search / FUNNEL LAYERS;
496009     ;
MPRINT(EM_DIAGRAM):   ;
496010     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
496011     *;
MPRINT(EM_DIAGRAM):   *;
 
496012     *;
MPRINT(EM_DIAGRAM):    *;
496013     proc neural data=EM_AutoNeural43 dmdbcat=WORK.AutoNeural43_DMDB
496014     validdata=EMWS8.Meta2_VALIDATE
496015     ;
MPRINT(EM_DIAGRAM):   proc neural data=EM_AutoNeural43
dmdbcat=WORK.AutoNeural43_DMDB validdata=EMWS8.Meta2_VALIDATE ;
496016     *;
MPRINT(EM_DIAGRAM):   *;
496017     nloptions noprint;
MPRINT(EM_DIAGRAM):   nloptions noprint;
496018     performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   input
496019     input %INTINPUTS / level=interval id=interval;
MPRINT(INTINPUTS):   AcceptedCmpTotal Frq Income Mnt MntGoldProds
MntMeatProducts NumCatalogPurchases NumDealsPurchases NumWebVisitsMonth RFMstat
Recency Teenhome Year_Birth
MPRINT(EM_DIAGRAM):   / level=interval id=interval;
MPRINT(EM_DIAGRAM):   input
496020     input %NOMINPUTS / level=nominal id=nominal;
MPRINT(NOMINPUTS):   Marital_Status
MPRINT(EM_DIAGRAM):   / level=nominal id=nominal;
496021     target DepVar / level=NOMINAL id=DepVar
496022     ;
MPRINT(EM_DIAGRAM):   target DepVar / level=NOMINAL id=DepVar ;
496023     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
496024     * Direct connection;
MPRINT(EM_DIAGRAM):   * Direct connection;
496025     ;
MPRINT(EM_DIAGRAM):   ;
496026     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
496027     connect interval DepVar;
MPRINT(EM_DIAGRAM):   connect interval DepVar;
496028     connect nominal DepVar;
MPRINT(EM_DIAGRAM):   connect nominal DepVar;
496029     *;
MPRINT(EM_DIAGRAM):   *;
496030     netoptions ranscale = 1;
MPRINT(EM_DIAGRAM):   netoptions ranscale = 1;
496031     *;
MPRINT(EM_DIAGRAM):   *;
496032     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
496033     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_train_title  ,NOQUOTE,
496033   ! Search # 1 FUNNEL LAYERS trial # 1 : DIRECT : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 1 FUNNEL LAYERS trial # 1 : DIRECT :
Training";
MPRINT(EM_DIAGRAM):   train estiter=1 outest=_anest outfit=_anfit maxtime=1800
maxiter=50 tech = Default;
NOTE:  Synchronizing the objectives and the Solution.
NOTE: Convergence criterion (ABSGCONV=0.00001) satisfied.
NOTE: The data set WORK._ANEST has 35 observations and 33 variables.
NOTE: The data set WORK._ANFIT has 32 observations and 36 variables.
MPRINT(EM_DIAGRAM):   ;
496034     train estiter=1 outest=_anest outfit=_anfit maxtime=1800 maxiter=50
MPRINT(EM_DIAGRAM):   run;
496035     tech = Default;
496036     ;
496037     run;
 
NOTE: The data set WORK.EM_AUTONEURAL43 has 2374 observations and 15 variables.
NOTE: The data set EMWS8.META2_VALIDATE has . observations and 45 variables.
NOTE: View EMWS8.META2_VALIDATE.VIEW used (Total process time):
      real time           0.28 seconds
      cpu time            0.28 seconds
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: Closing the Neural Application.
NOTE: PROCEDURE NEURAL used (Total process time):
      real time           0.28 seconds
      cpu time            0.28 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
496038     *;
496039     proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
MPRINT(EM_DIAGRAM):   proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
496040     var _iter_ _aic_ _averr_ _misc_
496041     _vaverr_ _vmisc_
496042     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
496043     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 16 observations read from the data set WORK._ANFIT.
      WHERE _name_='OVERALL';
NOTE: The PROCEDURE PRINT printed page 410.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Extract best iteration;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
496044     *------------------------------------------------------------*;
496045     * Extract best iteration;
496046     ;
496047     *------------------------------------------------------------*;
496048     %global _iter;
496049     data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
496050     set _anfit(where=(_NAME_ eq 'OVERALL'));
MPRINT(EM_DIAGRAM):   set _anfit(where=(_NAME_ eq 'OVERALL'));
496051     retain _min 1e+64;
MPRINT(EM_DIAGRAM):   retain _min 1e+64;
496052     if _VMISC_ < _min then do;
MPRINT(EM_DIAGRAM):   if _VMISC_ < _min then do;
496053     _min = _VMISC_;
MPRINT(EM_DIAGRAM):   _min = _VMISC_;
496054     call symput('_iter',put(_ITER_, 6.));
MPRINT(EM_DIAGRAM):   call symput('_iter',put(_ITER_, 6.));
496055     end;
MPRINT(EM_DIAGRAM):   end;
496056     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 16 observations read from the data set WORK._ANFIT.
      WHERE _NAME_='OVERALL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
496057     *;
 
496058     data EMWS8.AutoNeural43_ESTDS;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural43_ESTDS;
496059     set _anest;
MPRINT(EM_DIAGRAM):   set _anest;
496060     if _ITER_ eq 1 then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 1 then do;
496061     output;
MPRINT(EM_DIAGRAM):   output;
496062     stop;
MPRINT(EM_DIAGRAM):   stop;
496063     end;
MPRINT(EM_DIAGRAM):   end;
496064     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set WORK._ANEST.
NOTE: The data set EMWS8.AUTONEURAL43_ESTDS has 1 observations and 33 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
496065     *;
496066     data EMWS8.AutoNeural43_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural43_OUTFIT;
496067     set _anfit;
MPRINT(EM_DIAGRAM):   set _anfit;
496068     if _ITER_ eq 1 and _NAME_ eq "OVERALL" then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 1 and _NAME_ eq "OVERALL" then do;
496069     output;
MPRINT(EM_DIAGRAM):   output;
496070     stop;
MPRINT(EM_DIAGRAM):   stop;
496071     end;
MPRINT(EM_DIAGRAM):   end;
496072     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._ANFIT.
NOTE: The data set EMWS8.AUTONEURAL43_OUTFIT has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
496073     *;
MPRINT(EM_DIAGRAM):    *;
496074     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
496075     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_selectediteration_title
496075   ! , NOQUOTE, _VMISC_))";
MPRINT(EM_DIAGRAM):   title10 "Selected Iteration based on _VMISC_";
496076     proc print data=EMWS8.AutoNeural43_OUTFIT noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural43_OUTFIT noobs;
496077     var _iter_ _aic_ _averr_ _misc_
496078     _vaverr_ _vmisc_
496079     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
496080     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL43_OUTFIT.
NOTE: The PROCEDURE PRINT printed page 411.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
496081     title9;
MPRINT(EM_DIAGRAM):   title9;
496082     title10;
MPRINT(EM_DIAGRAM):   title10;
496083     %sysfunc(sasmsg(sashelp.dmine, starthistory_note , NOQUOTE));
MPRINT(EM_DIAGRAM):    * Start history;
MPRINT(EM_DIAGRAM):  ;
496084     data EMWS8.AutoNeural43_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural43_HISTORY;
496085     length _func_ _status_ _step_ $16;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16;
496086     label _func_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_function_vlabel  ,
496086   !  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _func_ = "Function";
496087     label _status_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_status_vlabel  ,
496087   !  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _status_ = "Status";
496088     label _iter_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_iteration_vlabel
496088   ! , NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _iter_ = "Iteration";
496089     label _step_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_step_vlabel  ,
496089   ! NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _step_ = "Step";
496090     _func_ = '';
MPRINT(EM_DIAGRAM):   _func_ = '';
496091     _status_ = '';
MPRINT(EM_DIAGRAM):   _status_ = '';
496092     _step_ = 'FUNNEL LAYERS 1';
MPRINT(EM_DIAGRAM):   _step_ = 'FUNNEL LAYERS 1';
496093     set
496094     _anfit(where=(_name_ eq 'OVERALL' and _iter_ eq 0))
496095     ;
MPRINT(EM_DIAGRAM):   set _anfit(where=(_name_ eq 'OVERALL' and _iter_ eq 0)) ;
496096     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK._ANFIT.
      WHERE (_name_='OVERALL') and (_iter_=0);
NOTE: The data set EMWS8.AUTONEURAL43_HISTORY has 1 observations and 39
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
496097     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
496098     set EMWS8.AutoNeural43_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural43_OUTFIT;
496099     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
496100     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL43_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
496101     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
496102     set EMWS8.AutoNeural43_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural43_OUTFIT;
496103     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
496104     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL43_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
496105     *SEARCH: copy estimates and fit to best buffer;
MPRINT(EM_DIAGRAM):    *SEARCH: copy estimates and fit to best buffer;
496106     ;
MPRINT(EM_DIAGRAM):   ;
496107     data WORK.SAVEDS_AUTONEUR_3IW3VMD;
MPRINT(EM_DIAGRAM):   data WORK.SAVEDS_AUTONEUR_3IW3VMD;
496108     set EMWS8.AutoNeural43_ESTDS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural43_ESTDS;
496109     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.AUTONEURAL43_ESTDS.
NOTE: The data set WORK.SAVEDS_AUTONEUR_3IW3VMD has 1 observations and 33
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
496110     data EMWS8.AutoNeural43_BESTDS;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural43_BESTDS;
496111     set EMWS8.AutoNeural43_ESTDS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural43_ESTDS;
496112     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.AUTONEURAL43_ESTDS.
NOTE: The data set EMWS8.AUTONEURAL43_BESTDS has 1 observations and 33
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
496113     data WORK.BFITDS_AUTONEUR_3IW3VMD;
MPRINT(EM_DIAGRAM):   data WORK.BFITDS_AUTONEUR_3IW3VMD;
496114     set EMWS8.AutoNeural43_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural43_OUTFIT;
496115     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL43_OUTFIT.
NOTE: The data set WORK.BFITDS_AUTONEUR_3IW3VMD has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
496116     * Add function info to new history;
MPRINT(EM_DIAGRAM):    * Add function info to new history;
496117     ;
MPRINT(EM_DIAGRAM):   ;
496118     data EMWS8.AutoNeural43_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural43_HISTORY;
496119     set EMWS8.AutoNeural43_HISTORY;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural43_HISTORY;
496120     _func_ = 'DIRECT';
MPRINT(EM_DIAGRAM):   _func_ = 'DIRECT';
496121     _status_ = 'initial';
MPRINT(EM_DIAGRAM):   _status_ = 'initial';
496122     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL43_HISTORY.
NOTE: The data set EMWS8.AUTONEURAL43_HISTORY has 1 observations and 39
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
496123     * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
496124     ;
MPRINT(EM_DIAGRAM):   ;
496125     data EMWS8.AutoNeural43_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural43_OUTFIT;
496126     set EMWS8.AutoNeural43_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural43_OUTFIT;
496127     length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
496128     _func_ = "DIRECT";
MPRINT(EM_DIAGRAM):   _func_ = "DIRECT";
496129     _status_ = "candidate";
MPRINT(EM_DIAGRAM):   _status_ = "candidate";
496130     _step_ = "FUNNEL LAYERS 1";
MPRINT(EM_DIAGRAM):   _step_ = "FUNNEL LAYERS 1";
496131     _index_ = 1;
MPRINT(EM_DIAGRAM):   _index_ = 1;
496132     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL43_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL43_OUTFIT has 1 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
496133     data EMWS8.AutoNeural43_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural43_HISTORY;
496134     set EMWS8.AutoNeural43_HISTORY EMWS8.AutoNeural43_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural43_HISTORY EMWS8.AutoNeural43_OUTFIT;
496135     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL43_HISTORY.
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL43_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL43_HISTORY has 2 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
496136     *;
MPRINT(EM_DIAGRAM):    *;
496137     proc neural data=EM_AutoNeural43 dmdbcat=WORK.AutoNeural43_DMDB
496138     validdata=EMWS8.Meta2_VALIDATE
496139     ;
MPRINT(EM_DIAGRAM):   proc neural data=EM_AutoNeural43
dmdbcat=WORK.AutoNeural43_DMDB validdata=EMWS8.Meta2_VALIDATE ;
496140     *;
MPRINT(EM_DIAGRAM):   *;
496141     nloptions noprint;
MPRINT(EM_DIAGRAM):   nloptions noprint;
496142     performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   input
496143     input %INTINPUTS / level=interval id=interval;
MPRINT(INTINPUTS):   AcceptedCmpTotal Frq Income Mnt MntGoldProds
MntMeatProducts NumCatalogPurchases NumDealsPurchases NumWebVisitsMonth RFMstat
Recency Teenhome Year_Birth
MPRINT(EM_DIAGRAM):   / level=interval id=interval;
MPRINT(EM_DIAGRAM):   input
496144     input %NOMINPUTS / level=nominal id=nominal;
MPRINT(NOMINPUTS):   Marital_Status
MPRINT(EM_DIAGRAM):   / level=nominal id=nominal;
496145     target DepVar / level=NOMINAL id=DepVar
496146     ;
MPRINT(EM_DIAGRAM):   target DepVar / level=NOMINAL id=DepVar ;
496147     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
496148     * Layer #1;
MPRINT(EM_DIAGRAM):   * Layer #1;
496149     ;
MPRINT(EM_DIAGRAM):   ;
496150     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
496151     Hidden 7 / id = H1x1_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 7 / id = H1x1_ act=LOG;
496152     connect interval H1x1_;
MPRINT(EM_DIAGRAM):   connect interval H1x1_;
496153     connect nominal H1x1_;
MPRINT(EM_DIAGRAM):   connect nominal H1x1_;
496154     connect H1x1_ DepVar;
MPRINT(EM_DIAGRAM):   connect H1x1_ DepVar;
496155     *;
MPRINT(EM_DIAGRAM):   *;
496156     netoptions ranscale = 1;
MPRINT(EM_DIAGRAM):   netoptions ranscale = 1;
496157     *;
MPRINT(EM_DIAGRAM):   *;
496158     initial
496159     ;
MPRINT(EM_DIAGRAM):   initial ;
496160     *;
MPRINT(EM_DIAGRAM):   *;
496161     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
496162     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_prelim_title  ,NOQUOTE,
496162   ! Search # 1 FUNNEL LAYERS trial # 2 : LOGISTIC : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 1 FUNNEL LAYERS trial # 2 : LOGISTIC :
Prelim";
MPRINT(EM_DIAGRAM):   prelim 28 outest=_anpre pretime=32 preiter=25 tech =
Default ;
NOTE:  Synchronizing the objectives and the Solution.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANPRE has 57 observations and 149 variables.
MPRINT(EM_DIAGRAM):   *;
496163     prelim 28 outest=_anpre pretime=32 preiter=25
496164     tech = Default
496165     ;
496166     *;
496167     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
496168     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_train_title  ,NOQUOTE,
496168   ! Search # 1 FUNNEL LAYERS trial # 2 : LOGISTIC : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 1 FUNNEL LAYERS trial # 2 : LOGISTIC :
Training";
MPRINT(EM_DIAGRAM):   train estiter=1 outest=_anest outfit=_anfit maxtime=900
maxiter=50 tech = Default;
WARNING: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 50 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANEST has 53 observations and 149 variables.
NOTE: The data set WORK._ANFIT has 104 observations and 36 variables.
MPRINT(EM_DIAGRAM):   ;
496169     train estiter=1 outest=_anest outfit=_anfit maxtime=900 maxiter=50
MPRINT(EM_DIAGRAM):   run;
496170     tech = Default;
496171     ;
496172     run;
 
NOTE: The data set WORK.EM_AUTONEURAL43 has 2374 observations and 15 variables.
NOTE: The data set EMWS8.META2_VALIDATE has . observations and 45 variables.
NOTE: View EMWS8.META2_VALIDATE.VIEW used (Total process time):
      real time           7.31 seconds
      cpu time            7.25 seconds
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: Closing the Neural Application.
NOTE: The PROCEDURE NEURAL printed page 412.
NOTE: PROCEDURE NEURAL used (Total process time):
      real time           7.31 seconds
      cpu time            7.25 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
496173     *;
496174     proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
MPRINT(EM_DIAGRAM):   proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
496175     var _iter_ _aic_ _averr_ _misc_
496176     _vaverr_ _vmisc_
496177     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
496178     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _name_='OVERALL';
NOTE: The PROCEDURE PRINT printed page 413.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Extract best iteration;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
496179     *------------------------------------------------------------*;
496180     * Extract best iteration;
496181     ;
496182     *------------------------------------------------------------*;
496183     %global _iter;
496184     data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
496185     set _anfit(where=(_NAME_ eq 'OVERALL'));
MPRINT(EM_DIAGRAM):   set _anfit(where=(_NAME_ eq 'OVERALL'));
496186     retain _min 1e+64;
MPRINT(EM_DIAGRAM):   retain _min 1e+64;
496187     if _VMISC_ < _min then do;
MPRINT(EM_DIAGRAM):   if _VMISC_ < _min then do;
496188     _min = _VMISC_;
MPRINT(EM_DIAGRAM):   _min = _VMISC_;
496189     call symput('_iter',put(_ITER_, 6.));
MPRINT(EM_DIAGRAM):   call symput('_iter',put(_ITER_, 6.));
496190     end;
MPRINT(EM_DIAGRAM):   end;
496191     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _NAME_='OVERALL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
496192     *;
 
496193     data EMWS8.AutoNeural43_ESTDS;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural43_ESTDS;
496194     set _anest;
MPRINT(EM_DIAGRAM):   set _anest;
496195     if _ITER_ eq 3 then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 3 then do;
496196     output;
MPRINT(EM_DIAGRAM):   output;
496197     stop;
MPRINT(EM_DIAGRAM):   stop;
496198     end;
MPRINT(EM_DIAGRAM):   end;
496199     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._ANEST.
NOTE: The data set EMWS8.AUTONEURAL43_ESTDS has 1 observations and 149
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
496200     *;
496201     data EMWS8.AutoNeural43_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural43_OUTFIT;
496202     set _anfit;
MPRINT(EM_DIAGRAM):   set _anfit;
496203     if _ITER_ eq 3 and _NAME_ eq "OVERALL" then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 3 and _NAME_ eq "OVERALL" then do;
496204     output;
MPRINT(EM_DIAGRAM):   output;
496205     stop;
MPRINT(EM_DIAGRAM):   stop;
496206     end;
MPRINT(EM_DIAGRAM):   end;
496207     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set WORK._ANFIT.
NOTE: The data set EMWS8.AUTONEURAL43_OUTFIT has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
496208     *;
MPRINT(EM_DIAGRAM):    *;
496209     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
496210     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_selectediteration_title
496210   ! , NOQUOTE, _VMISC_))";
MPRINT(EM_DIAGRAM):   title10 "Selected Iteration based on _VMISC_";
496211     proc print data=EMWS8.AutoNeural43_OUTFIT noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural43_OUTFIT noobs;
496212     var _iter_ _aic_ _averr_ _misc_
496213     _vaverr_ _vmisc_
496214     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
496215     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL43_OUTFIT.
NOTE: The PROCEDURE PRINT printed page 414.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
496216     title9;
MPRINT(EM_DIAGRAM):   title9;
496217     title10;
MPRINT(EM_DIAGRAM):   title10;
496218     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
496219     set EMWS8.AutoNeural43_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural43_OUTFIT;
496220     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
496221     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL43_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
496222     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
496223     set EMWS8.AutoNeural43_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural43_OUTFIT;
496224     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
496225     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL43_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
496226     *SEARCH: copy estimates and fit to best buffer;
MPRINT(EM_DIAGRAM):    *SEARCH: copy estimates and fit to best buffer;
496227     ;
MPRINT(EM_DIAGRAM):   ;
496228     data WORK.SAVEDS_AUTONEUR_3IW3VMD;
MPRINT(EM_DIAGRAM):   data WORK.SAVEDS_AUTONEUR_3IW3VMD;
496229     set EMWS8.AutoNeural43_ESTDS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural43_ESTDS;
496230     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.AUTONEURAL43_ESTDS.
NOTE: The data set WORK.SAVEDS_AUTONEUR_3IW3VMD has 1 observations and 149
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
496231     data EMWS8.AutoNeural43_BESTDS;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural43_BESTDS;
496232     set EMWS8.AutoNeural43_ESTDS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural43_ESTDS;
496233     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.AUTONEURAL43_ESTDS.
NOTE: The data set EMWS8.AUTONEURAL43_BESTDS has 1 observations and 149
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
496234     data WORK.BFITDS_AUTONEUR_3IW3VMD;
MPRINT(EM_DIAGRAM):   data WORK.BFITDS_AUTONEUR_3IW3VMD;
496235     set EMWS8.AutoNeural43_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural43_OUTFIT;
496236     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL43_OUTFIT.
NOTE: The data set WORK.BFITDS_AUTONEUR_3IW3VMD has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
496237     * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
496238     ;
MPRINT(EM_DIAGRAM):   ;
496239     data EMWS8.AutoNeural43_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural43_OUTFIT;
496240     set EMWS8.AutoNeural43_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural43_OUTFIT;
496241     length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
496242     _func_ = "LOGISTIC";
MPRINT(EM_DIAGRAM):   _func_ = "LOGISTIC";
496243     _status_ = "candidate";
MPRINT(EM_DIAGRAM):   _status_ = "candidate";
496244     _step_ = "FUNNEL LAYERS 1";
MPRINT(EM_DIAGRAM):   _step_ = "FUNNEL LAYERS 1";
496245     _index_ = 1;
MPRINT(EM_DIAGRAM):   _index_ = 1;
496246     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL43_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL43_OUTFIT has 1 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
496247     data EMWS8.AutoNeural43_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural43_HISTORY;
496248     set EMWS8.AutoNeural43_HISTORY EMWS8.AutoNeural43_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural43_HISTORY EMWS8.AutoNeural43_OUTFIT;
496249     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set
      EMWS8.AUTONEURAL43_HISTORY.
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL43_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL43_HISTORY has 3 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
496250     *;
MPRINT(EM_DIAGRAM):    *;
496251     proc neural data=EM_AutoNeural43 dmdbcat=WORK.AutoNeural43_DMDB
496252     validdata=EMWS8.Meta2_VALIDATE
496253     ;
MPRINT(EM_DIAGRAM):   proc neural data=EM_AutoNeural43
dmdbcat=WORK.AutoNeural43_DMDB validdata=EMWS8.Meta2_VALIDATE ;
496254     *;
MPRINT(EM_DIAGRAM):   *;
496255     nloptions noprint;
MPRINT(EM_DIAGRAM):   nloptions noprint;
496256     performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   input
496257     input %INTINPUTS / level=interval id=interval;
MPRINT(INTINPUTS):   AcceptedCmpTotal Frq Income Mnt MntGoldProds
MntMeatProducts NumCatalogPurchases NumDealsPurchases NumWebVisitsMonth RFMstat
Recency Teenhome Year_Birth
MPRINT(EM_DIAGRAM):   / level=interval id=interval;
MPRINT(EM_DIAGRAM):   input
496258     input %NOMINPUTS / level=nominal id=nominal;
MPRINT(NOMINPUTS):   Marital_Status
MPRINT(EM_DIAGRAM):   / level=nominal id=nominal;
496259     target DepVar / level=NOMINAL id=DepVar
496260     ;
MPRINT(EM_DIAGRAM):   target DepVar / level=NOMINAL id=DepVar ;
496261     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
496262     * Layer #1;
MPRINT(EM_DIAGRAM):   * Layer #1;
496263     ;
MPRINT(EM_DIAGRAM):   ;
496264     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
496265     Hidden 7 / id = H1x1_ act=SINE;
MPRINT(EM_DIAGRAM):   Hidden 7 / id = H1x1_ act=SINE;
496266     connect interval H1x1_;
MPRINT(EM_DIAGRAM):   connect interval H1x1_;
496267     connect nominal H1x1_;
MPRINT(EM_DIAGRAM):   connect nominal H1x1_;
496268     connect H1x1_ DepVar;
MPRINT(EM_DIAGRAM):   connect H1x1_ DepVar;
496269     *;
MPRINT(EM_DIAGRAM):   *;
496270     netoptions ranscale = 1;
MPRINT(EM_DIAGRAM):   netoptions ranscale = 1;
496271     *;
MPRINT(EM_DIAGRAM):   *;
496272     initial
496273     ;
MPRINT(EM_DIAGRAM):   initial ;
496274     *;
MPRINT(EM_DIAGRAM):   *;
496275     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
496276     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_prelim_title  ,NOQUOTE,
496276   ! Search # 1 FUNNEL LAYERS trial # 3 : SINE : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 1 FUNNEL LAYERS trial # 3 : SINE :
Prelim";
MPRINT(EM_DIAGRAM):   prelim 28 outest=_anpre pretime=32 preiter=25 tech =
Default ;
NOTE:  Synchronizing the objectives and the Solution.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANPRE has 57 observations and 149 variables.
MPRINT(EM_DIAGRAM):   *;
496277     prelim 28 outest=_anpre pretime=32 preiter=25
496278     tech = Default
496279     ;
496280     *;
496281     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
496282     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_train_title  ,NOQUOTE,
496282   ! Search # 1 FUNNEL LAYERS trial # 3 : SINE : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 1 FUNNEL LAYERS trial # 3 : SINE :
Training";
MPRINT(EM_DIAGRAM):   train estiter=1 outest=_anest outfit=_anfit maxtime=898
maxiter=50 tech = Default;
WARNING: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 50 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANEST has 53 observations and 149 variables.
NOTE: The data set WORK._ANFIT has 104 observations and 36 variables.
MPRINT(EM_DIAGRAM):   ;
496283     train estiter=1 outest=_anest outfit=_anfit maxtime=898 maxiter=50
MPRINT(EM_DIAGRAM):   run;
496284     tech = Default;
496285     ;
496286     run;
 
NOTE: The data set WORK.EM_AUTONEURAL43 has 2374 observations and 15 variables.
NOTE: The data set EMWS8.META2_VALIDATE has . observations and 45 variables.
NOTE: View EMWS8.META2_VALIDATE.VIEW used (Total process time):
      real time           6.33 seconds
      cpu time            6.31 seconds
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: Closing the Neural Application.
NOTE: The PROCEDURE NEURAL printed page 415.
NOTE: PROCEDURE NEURAL used (Total process time):
      real time           6.35 seconds
      cpu time            6.33 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
496287     *;
496288     proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
MPRINT(EM_DIAGRAM):   proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
496289     var _iter_ _aic_ _averr_ _misc_
496290     _vaverr_ _vmisc_
496291     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
496292     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _name_='OVERALL';
NOTE: The PROCEDURE PRINT printed page 416.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Extract best iteration;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
496293     *------------------------------------------------------------*;
496294     * Extract best iteration;
496295     ;
496296     *------------------------------------------------------------*;
496297     %global _iter;
496298     data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
496299     set _anfit(where=(_NAME_ eq 'OVERALL'));
MPRINT(EM_DIAGRAM):   set _anfit(where=(_NAME_ eq 'OVERALL'));
496300     retain _min 1e+64;
MPRINT(EM_DIAGRAM):   retain _min 1e+64;
496301     if _VMISC_ < _min then do;
MPRINT(EM_DIAGRAM):   if _VMISC_ < _min then do;
496302     _min = _VMISC_;
MPRINT(EM_DIAGRAM):   _min = _VMISC_;
496303     call symput('_iter',put(_ITER_, 6.));
MPRINT(EM_DIAGRAM):   call symput('_iter',put(_ITER_, 6.));
496304     end;
MPRINT(EM_DIAGRAM):   end;
496305     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _NAME_='OVERALL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
496306     *;
 
496307     data EMWS8.AutoNeural43_ESTDS;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural43_ESTDS;
496308     set _anest;
MPRINT(EM_DIAGRAM):   set _anest;
496309     if _ITER_ eq 44 then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 44 then do;
496310     output;
MPRINT(EM_DIAGRAM):   output;
496311     stop;
MPRINT(EM_DIAGRAM):   stop;
496312     end;
MPRINT(EM_DIAGRAM):   end;
496313     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 45 observations read from the data set WORK._ANEST.
NOTE: The data set EMWS8.AUTONEURAL43_ESTDS has 1 observations and 149
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
496314     *;
496315     data EMWS8.AutoNeural43_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural43_OUTFIT;
496316     set _anfit;
MPRINT(EM_DIAGRAM):   set _anfit;
496317     if _ITER_ eq 44 and _NAME_ eq "OVERALL" then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 44 and _NAME_ eq "OVERALL" then do;
496318     output;
MPRINT(EM_DIAGRAM):   output;
496319     stop;
MPRINT(EM_DIAGRAM):   stop;
496320     end;
MPRINT(EM_DIAGRAM):   end;
496321     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 90 observations read from the data set WORK._ANFIT.
NOTE: The data set EMWS8.AUTONEURAL43_OUTFIT has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
496322     *;
MPRINT(EM_DIAGRAM):    *;
496323     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
496324     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_selectediteration_title
496324   ! , NOQUOTE, _VMISC_))";
MPRINT(EM_DIAGRAM):   title10 "Selected Iteration based on _VMISC_";
496325     proc print data=EMWS8.AutoNeural43_OUTFIT noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural43_OUTFIT noobs;
496326     var _iter_ _aic_ _averr_ _misc_
496327     _vaverr_ _vmisc_
496328     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
496329     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL43_OUTFIT.
NOTE: The PROCEDURE PRINT printed page 417.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
496330     title9;
MPRINT(EM_DIAGRAM):   title9;
496331     title10;
MPRINT(EM_DIAGRAM):   title10;
496332     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
496333     set EMWS8.AutoNeural43_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural43_OUTFIT;
496334     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
496335     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL43_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
496336     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
496337     set EMWS8.AutoNeural43_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural43_OUTFIT;
496338     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
496339     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL43_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
496340     * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
496341     ;
MPRINT(EM_DIAGRAM):   ;
496342     data EMWS8.AutoNeural43_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural43_OUTFIT;
496343     set EMWS8.AutoNeural43_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural43_OUTFIT;
496344     length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
496345     _func_ = "SINE";
MPRINT(EM_DIAGRAM):   _func_ = "SINE";
496346     _status_ = "reject";
MPRINT(EM_DIAGRAM):   _status_ = "reject";
496347     _step_ = "FUNNEL LAYERS 1";
MPRINT(EM_DIAGRAM):   _step_ = "FUNNEL LAYERS 1";
496348     _index_ = 1;
MPRINT(EM_DIAGRAM):   _index_ = 1;
496349     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL43_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL43_OUTFIT has 1 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
496350     data EMWS8.AutoNeural43_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural43_HISTORY;
496351     set EMWS8.AutoNeural43_HISTORY EMWS8.AutoNeural43_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural43_HISTORY EMWS8.AutoNeural43_OUTFIT;
496352     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set
      EMWS8.AUTONEURAL43_HISTORY.
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL43_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL43_HISTORY has 4 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
496353     *;
MPRINT(EM_DIAGRAM):    *;
496354     proc neural data=EM_AutoNeural43 dmdbcat=WORK.AutoNeural43_DMDB
496355     validdata=EMWS8.Meta2_VALIDATE
496356     ;
MPRINT(EM_DIAGRAM):   proc neural data=EM_AutoNeural43
dmdbcat=WORK.AutoNeural43_DMDB validdata=EMWS8.Meta2_VALIDATE ;
496357     *;
MPRINT(EM_DIAGRAM):   *;
496358     nloptions noprint;
MPRINT(EM_DIAGRAM):   nloptions noprint;
496359     performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   input
496360     input %INTINPUTS / level=interval id=interval;
MPRINT(INTINPUTS):   AcceptedCmpTotal Frq Income Mnt MntGoldProds
MntMeatProducts NumCatalogPurchases NumDealsPurchases NumWebVisitsMonth RFMstat
Recency Teenhome Year_Birth
MPRINT(EM_DIAGRAM):   / level=interval id=interval;
MPRINT(EM_DIAGRAM):   input
496361     input %NOMINPUTS / level=nominal id=nominal;
MPRINT(NOMINPUTS):   Marital_Status
MPRINT(EM_DIAGRAM):   / level=nominal id=nominal;
496362     target DepVar / level=NOMINAL id=DepVar
496363     ;
MPRINT(EM_DIAGRAM):   target DepVar / level=NOMINAL id=DepVar ;
496364     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
496365     * Layer #1;
MPRINT(EM_DIAGRAM):   * Layer #1;
496366     ;
MPRINT(EM_DIAGRAM):   ;
496367     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
496368     Hidden 7 / id = H1x1_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 7 / id = H1x1_ act=SOFTMAX;
496369     connect interval H1x1_;
MPRINT(EM_DIAGRAM):   connect interval H1x1_;
496370     connect nominal H1x1_;
MPRINT(EM_DIAGRAM):   connect nominal H1x1_;
496371     connect H1x1_ DepVar;
MPRINT(EM_DIAGRAM):   connect H1x1_ DepVar;
496372     *;
MPRINT(EM_DIAGRAM):   *;
496373     netoptions ranscale = 1;
MPRINT(EM_DIAGRAM):   netoptions ranscale = 1;
496374     *;
MPRINT(EM_DIAGRAM):   *;
496375     initial
496376     ;
MPRINT(EM_DIAGRAM):   initial ;
496377     *;
MPRINT(EM_DIAGRAM):   *;
496378     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
496379     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_prelim_title  ,NOQUOTE,
496379   ! Search # 1 FUNNEL LAYERS trial # 4 : SOFTMAX : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 1 FUNNEL LAYERS trial # 4 : SOFTMAX :
Prelim";
MPRINT(EM_DIAGRAM):   prelim 28 outest=_anpre pretime=32 preiter=25 tech =
Default ;
NOTE:  Synchronizing the objectives and the Solution.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANPRE has 57 observations and 131 variables.
MPRINT(EM_DIAGRAM):   *;
496380     prelim 28 outest=_anpre pretime=32 preiter=25
496381     tech = Default
496382     ;
496383     *;
496384     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
496385     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_train_title  ,NOQUOTE,
496385   ! Search # 1 FUNNEL LAYERS trial # 4 : SOFTMAX : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 1 FUNNEL LAYERS trial # 4 : SOFTMAX :
Training";
MPRINT(EM_DIAGRAM):   train estiter=1 outest=_anest outfit=_anfit maxtime=896
maxiter=50 tech = Default;
WARNING: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 50 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANEST has 53 observations and 131 variables.
NOTE: The data set WORK._ANFIT has 104 observations and 36 variables.
MPRINT(EM_DIAGRAM):   ;
496386     train estiter=1 outest=_anest outfit=_anfit maxtime=896 maxiter=50
MPRINT(EM_DIAGRAM):   run;
496387     tech = Default;
496388     ;
496389     run;
 
NOTE: The data set WORK.EM_AUTONEURAL43 has 2374 observations and 15 variables.
NOTE: The data set EMWS8.META2_VALIDATE has . observations and 45 variables.
NOTE: View EMWS8.META2_VALIDATE.VIEW used (Total process time):
      real time           7.21 seconds
      cpu time            7.20 seconds
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: Closing the Neural Application.
NOTE: The PROCEDURE NEURAL printed page 418.
NOTE: PROCEDURE NEURAL used (Total process time):
      real time           7.21 seconds
      cpu time            7.20 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
496390     *;
496391     proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
MPRINT(EM_DIAGRAM):   proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
496392     var _iter_ _aic_ _averr_ _misc_
496393     _vaverr_ _vmisc_
496394     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
496395     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _name_='OVERALL';
NOTE: The PROCEDURE PRINT printed page 419.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Extract best iteration;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
496396     *------------------------------------------------------------*;
496397     * Extract best iteration;
496398     ;
496399     *------------------------------------------------------------*;
496400     %global _iter;
496401     data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
496402     set _anfit(where=(_NAME_ eq 'OVERALL'));
MPRINT(EM_DIAGRAM):   set _anfit(where=(_NAME_ eq 'OVERALL'));
496403     retain _min 1e+64;
MPRINT(EM_DIAGRAM):   retain _min 1e+64;
496404     if _VMISC_ < _min then do;
MPRINT(EM_DIAGRAM):   if _VMISC_ < _min then do;
496405     _min = _VMISC_;
MPRINT(EM_DIAGRAM):   _min = _VMISC_;
496406     call symput('_iter',put(_ITER_, 6.));
MPRINT(EM_DIAGRAM):   call symput('_iter',put(_ITER_, 6.));
496407     end;
MPRINT(EM_DIAGRAM):   end;
496408     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _NAME_='OVERALL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
496409     *;
 
496410     data EMWS8.AutoNeural43_ESTDS;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural43_ESTDS;
496411     set _anest;
MPRINT(EM_DIAGRAM):   set _anest;
496412     if _ITER_ eq 38 then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 38 then do;
496413     output;
MPRINT(EM_DIAGRAM):   output;
496414     stop;
MPRINT(EM_DIAGRAM):   stop;
496415     end;
MPRINT(EM_DIAGRAM):   end;
496416     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._ANEST.
NOTE: The data set EMWS8.AUTONEURAL43_ESTDS has 1 observations and 131
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
496417     *;
496418     data EMWS8.AutoNeural43_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural43_OUTFIT;
496419     set _anfit;
MPRINT(EM_DIAGRAM):   set _anfit;
496420     if _ITER_ eq 38 and _NAME_ eq "OVERALL" then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 38 and _NAME_ eq "OVERALL" then do;
496421     output;
MPRINT(EM_DIAGRAM):   output;
496422     stop;
MPRINT(EM_DIAGRAM):   stop;
496423     end;
MPRINT(EM_DIAGRAM):   end;
496424     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 78 observations read from the data set WORK._ANFIT.
NOTE: The data set EMWS8.AUTONEURAL43_OUTFIT has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.03 seconds
 
 
496425     *;
MPRINT(EM_DIAGRAM):    *;
496426     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
496427     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_selectediteration_title
496427   ! , NOQUOTE, _VMISC_))";
MPRINT(EM_DIAGRAM):   title10 "Selected Iteration based on _VMISC_";
496428     proc print data=EMWS8.AutoNeural43_OUTFIT noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural43_OUTFIT noobs;
496429     var _iter_ _aic_ _averr_ _misc_
496430     _vaverr_ _vmisc_
496431     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
496432     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL43_OUTFIT.
NOTE: The PROCEDURE PRINT printed page 420.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
496433     title9;
MPRINT(EM_DIAGRAM):   title9;
496434     title10;
MPRINT(EM_DIAGRAM):   title10;
496435     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
496436     set EMWS8.AutoNeural43_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural43_OUTFIT;
496437     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
496438     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL43_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
496439     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
496440     set EMWS8.AutoNeural43_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural43_OUTFIT;
496441     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
496442     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL43_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
496443     *SEARCH: copy estimates and fit to best buffer;
MPRINT(EM_DIAGRAM):    *SEARCH: copy estimates and fit to best buffer;
496444     ;
MPRINT(EM_DIAGRAM):   ;
496445     data WORK.SAVEDS_AUTONEUR_3IW3VMD;
MPRINT(EM_DIAGRAM):   data WORK.SAVEDS_AUTONEUR_3IW3VMD;
496446     set EMWS8.AutoNeural43_ESTDS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural43_ESTDS;
496447     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.AUTONEURAL43_ESTDS.
NOTE: The data set WORK.SAVEDS_AUTONEUR_3IW3VMD has 1 observations and 131
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
496448     data EMWS8.AutoNeural43_BESTDS;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural43_BESTDS;
496449     set EMWS8.AutoNeural43_ESTDS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural43_ESTDS;
496450     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.AUTONEURAL43_ESTDS.
NOTE: The data set EMWS8.AUTONEURAL43_BESTDS has 1 observations and 131
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
496451     data WORK.BFITDS_AUTONEUR_3IW3VMD;
MPRINT(EM_DIAGRAM):   data WORK.BFITDS_AUTONEUR_3IW3VMD;
496452     set EMWS8.AutoNeural43_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural43_OUTFIT;
496453     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL43_OUTFIT.
NOTE: The data set WORK.BFITDS_AUTONEUR_3IW3VMD has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
496454     * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
496455     ;
MPRINT(EM_DIAGRAM):   ;
496456     data EMWS8.AutoNeural43_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural43_OUTFIT;
496457     set EMWS8.AutoNeural43_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural43_OUTFIT;
496458     length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
496459     _func_ = "SOFTMAX";
MPRINT(EM_DIAGRAM):   _func_ = "SOFTMAX";
496460     _status_ = "candidate";
MPRINT(EM_DIAGRAM):   _status_ = "candidate";
496461     _step_ = "FUNNEL LAYERS 1";
MPRINT(EM_DIAGRAM):   _step_ = "FUNNEL LAYERS 1";
496462     _index_ = 1;
MPRINT(EM_DIAGRAM):   _index_ = 1;
496463     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL43_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL43_OUTFIT has 1 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
496464     data EMWS8.AutoNeural43_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural43_HISTORY;
496465     set EMWS8.AutoNeural43_HISTORY EMWS8.AutoNeural43_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural43_HISTORY EMWS8.AutoNeural43_OUTFIT;
496466     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set
      EMWS8.AUTONEURAL43_HISTORY.
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL43_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL43_HISTORY has 5 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
496467     *SEARCH: recall best estimates and fit;
MPRINT(EM_DIAGRAM):    *SEARCH: recall best estimates and fit;
496468     ;
MPRINT(EM_DIAGRAM):   ;
496469     data EMWS8.AutoNeural43_ESTDS;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural43_ESTDS;
496470     set EMWS8.AutoNeural43_BESTDS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural43_BESTDS;
496471     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL43_BESTDS.
NOTE: The data set EMWS8.AUTONEURAL43_ESTDS has 1 observations and 131
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
496472     data EMWS8.AutoNeural43_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural43_OUTFIT;
496473     set WORK.BFITDS_AUTONEUR_3IW3VMD;
MPRINT(EM_DIAGRAM):   set WORK.BFITDS_AUTONEUR_3IW3VMD;
496474     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      WORK.BFITDS_AUTONEUR_3IW3VMD.
NOTE: The data set EMWS8.AUTONEURAL43_OUTFIT has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
496475     * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
496476     ;
MPRINT(EM_DIAGRAM):   ;
496477     data EMWS8.AutoNeural43_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural43_OUTFIT;
496478     set EMWS8.AutoNeural43_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural43_OUTFIT;
496479     length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
496480     _func_ = "SOFTMAX";
MPRINT(EM_DIAGRAM):   _func_ = "SOFTMAX";
496481     _status_ = "keep";
MPRINT(EM_DIAGRAM):   _status_ = "keep";
496482     _step_ = "FUNNEL LAYERS 1";
MPRINT(EM_DIAGRAM):   _step_ = "FUNNEL LAYERS 1";
496483     _index_ = 1;
MPRINT(EM_DIAGRAM):   _index_ = 1;
496484     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL43_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL43_OUTFIT has 1 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
496485     data EMWS8.AutoNeural43_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural43_HISTORY;
496486     set EMWS8.AutoNeural43_HISTORY EMWS8.AutoNeural43_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural43_HISTORY EMWS8.AutoNeural43_OUTFIT;
496487     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 5 observations read from the data set
      EMWS8.AUTONEURAL43_HISTORY.
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL43_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL43_HISTORY has 6 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
496488     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
496489     set EMWS8.AutoNeural43_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural43_OUTFIT;
496490     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
496491     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL43_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 40 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
496492     *;
MPRINT(EM_DIAGRAM):    *;
496493     proc neural data=EM_AutoNeural43 dmdbcat=WORK.AutoNeural43_DMDB
496494     validdata=EMWS8.Meta2_VALIDATE
496495     ;
MPRINT(EM_DIAGRAM):   proc neural data=EM_AutoNeural43
dmdbcat=WORK.AutoNeural43_DMDB validdata=EMWS8.Meta2_VALIDATE ;
496496     *;
MPRINT(EM_DIAGRAM):   *;
496497     nloptions noprint;
MPRINT(EM_DIAGRAM):   nloptions noprint;
496498     performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   input
496499     input %INTINPUTS / level=interval id=interval;
MPRINT(INTINPUTS):   AcceptedCmpTotal Frq Income Mnt MntGoldProds
MntMeatProducts NumCatalogPurchases NumDealsPurchases NumWebVisitsMonth RFMstat
Recency Teenhome Year_Birth
MPRINT(EM_DIAGRAM):   / level=interval id=interval;
MPRINT(EM_DIAGRAM):   input
496500     input %NOMINPUTS / level=nominal id=nominal;
MPRINT(NOMINPUTS):   Marital_Status
MPRINT(EM_DIAGRAM):   / level=nominal id=nominal;
496501     target DepVar / level=NOMINAL id=DepVar
496502     ;
MPRINT(EM_DIAGRAM):   target DepVar / level=NOMINAL id=DepVar ;
496503     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
496504     * Direct connection;
MPRINT(EM_DIAGRAM):   * Direct connection;
496505     ;
MPRINT(EM_DIAGRAM):   ;
496506     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
496507     connect interval DepVar;
MPRINT(EM_DIAGRAM):   connect interval DepVar;
496508     connect nominal DepVar;
MPRINT(EM_DIAGRAM):   connect nominal DepVar;
496509     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
496510     * Layer #1;
MPRINT(EM_DIAGRAM):   * Layer #1;
496511     ;
MPRINT(EM_DIAGRAM):   ;
496512     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
496513     Hidden 7 / id = H1x1_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 7 / id = H1x1_ act=SOFTMAX;
496514     connect interval H1x1_;
MPRINT(EM_DIAGRAM):   connect interval H1x1_;
496515     connect nominal H1x1_;
MPRINT(EM_DIAGRAM):   connect nominal H1x1_;
496516     connect H1x1_ DepVar;
MPRINT(EM_DIAGRAM):   connect H1x1_ DepVar;
496517     *;
MPRINT(EM_DIAGRAM):   *;
496518     netoptions ranscale = 1;
MPRINT(EM_DIAGRAM):   netoptions ranscale = 1;
496519     *;
MPRINT(EM_DIAGRAM):   *;
496520     initial
496521     inest = EMWS8.AutoNeural43_ESTDS bylabel;
MPRINT(EM_DIAGRAM):   initial inest = EMWS8.AutoNeural43_ESTDS bylabel;
NOTE: The data set EMWS8.AUTONEURAL43_ESTDS has 1 observations and 131
      variables.
496522     ;
MPRINT(EM_DIAGRAM):   ;
496523     *;
MPRINT(EM_DIAGRAM):   *;
496524     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
496525     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_prelim_title  ,NOQUOTE,
496525   ! Search # 2 FUNNEL LAYERS trial # 1 : DIRECT : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 2 FUNNEL LAYERS trial # 1 : DIRECT :
Prelim";
496526     prelim 28 outest=_anpre pretime=31 preiter=25
MPRINT(EM_DIAGRAM):   prelim 28 outest=_anpre pretime=31 preiter=25 tech =
Default inest = EMWS8.AutoNeural43_ESTDS bylabel ;
NOTE:  Synchronizing the objectives and the Solution.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
The prelim will run only once. Use the randbias or randout option on the target
layer.
NOTE: The data set WORK._ANPRE has 3 observations and 148 variables.
NOTE: The data set EMWS8.AUTONEURAL43_ESTDS has 1 observations and 131
      variables.
MPRINT(EM_DIAGRAM):   *;
496527     tech = Default
496528     inest = EMWS8.AutoNeural43_ESTDS bylabel
496529     ;
496530     *;
496531     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
496532     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_train_title  ,NOQUOTE,
496532   ! Search # 2 FUNNEL LAYERS trial # 1 : DIRECT : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 2 FUNNEL LAYERS trial # 1 : DIRECT :
Training";
MPRINT(EM_DIAGRAM):   train estiter=1 outest=_anest outfit=_anfit maxtime=894
maxiter=50 tech = Default;
WARNING: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 50 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANEST has 53 observations and 148 variables.
NOTE: The data set WORK._ANFIT has 104 observations and 36 variables.
MPRINT(EM_DIAGRAM):   ;
496533     train estiter=1 outest=_anest outfit=_anfit maxtime=894 maxiter=50
MPRINT(EM_DIAGRAM):   run;
496534     tech = Default;
496535     ;
496536     run;
 
NOTE: The data set WORK.EM_AUTONEURAL43 has 2374 observations and 15 variables.
NOTE: The data set EMWS8.META2_VALIDATE has . observations and 45 variables.
NOTE: View EMWS8.META2_VALIDATE.VIEW used (Total process time):
      real time           0.84 seconds
      cpu time            0.84 seconds
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: Closing the Neural Application.
NOTE: The PROCEDURE NEURAL printed page 421.
NOTE: PROCEDURE NEURAL used (Total process time):
      real time           0.85 seconds
      cpu time            0.85 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
496537     *;
496538     proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
MPRINT(EM_DIAGRAM):   proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
496539     var _iter_ _aic_ _averr_ _misc_
496540     _vaverr_ _vmisc_
496541     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
496542     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _name_='OVERALL';
NOTE: The PROCEDURE PRINT printed page 422.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Extract best iteration;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
496543     *------------------------------------------------------------*;
496544     * Extract best iteration;
496545     ;
496546     *------------------------------------------------------------*;
496547     %global _iter;
496548     data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
496549     set _anfit(where=(_NAME_ eq 'OVERALL'));
MPRINT(EM_DIAGRAM):   set _anfit(where=(_NAME_ eq 'OVERALL'));
496550     retain _min 1e+64;
MPRINT(EM_DIAGRAM):   retain _min 1e+64;
496551     if _VMISC_ < _min then do;
MPRINT(EM_DIAGRAM):   if _VMISC_ < _min then do;
496552     _min = _VMISC_;
MPRINT(EM_DIAGRAM):   _min = _VMISC_;
496553     call symput('_iter',put(_ITER_, 6.));
MPRINT(EM_DIAGRAM):   call symput('_iter',put(_ITER_, 6.));
496554     end;
MPRINT(EM_DIAGRAM):   end;
496555     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _NAME_='OVERALL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
496556     *;
 
496557     data EMWS8.AutoNeural43_ESTDS;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural43_ESTDS;
496558     set _anest;
MPRINT(EM_DIAGRAM):   set _anest;
496559     if _ITER_ eq 16 then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 16 then do;
496560     output;
MPRINT(EM_DIAGRAM):   output;
496561     stop;
MPRINT(EM_DIAGRAM):   stop;
496562     end;
MPRINT(EM_DIAGRAM):   end;
496563     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 17 observations read from the data set WORK._ANEST.
NOTE: The data set EMWS8.AUTONEURAL43_ESTDS has 1 observations and 148
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
496564     *;
496565     data EMWS8.AutoNeural43_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural43_OUTFIT;
496566     set _anfit;
MPRINT(EM_DIAGRAM):   set _anfit;
496567     if _ITER_ eq 16 and _NAME_ eq "OVERALL" then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 16 and _NAME_ eq "OVERALL" then do;
496568     output;
MPRINT(EM_DIAGRAM):   output;
496569     stop;
MPRINT(EM_DIAGRAM):   stop;
496570     end;
MPRINT(EM_DIAGRAM):   end;
496571     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._ANFIT.
NOTE: The data set EMWS8.AUTONEURAL43_OUTFIT has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
496572     *;
MPRINT(EM_DIAGRAM):    *;
496573     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
496574     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_selectediteration_title
496574   ! , NOQUOTE, _VMISC_))";
MPRINT(EM_DIAGRAM):   title10 "Selected Iteration based on _VMISC_";
496575     proc print data=EMWS8.AutoNeural43_OUTFIT noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural43_OUTFIT noobs;
496576     var _iter_ _aic_ _averr_ _misc_
496577     _vaverr_ _vmisc_
496578     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
496579     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL43_OUTFIT.
NOTE: The PROCEDURE PRINT printed page 423.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
496580     title9;
MPRINT(EM_DIAGRAM):   title9;
496581     title10;
MPRINT(EM_DIAGRAM):   title10;
496582     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
496583     set EMWS8.AutoNeural43_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural43_OUTFIT;
496584     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
496585     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL43_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
496586     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
496587     set EMWS8.AutoNeural43_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural43_OUTFIT;
496588     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
496589     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL43_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
496590     * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
496591     ;
MPRINT(EM_DIAGRAM):   ;
496592     data EMWS8.AutoNeural43_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural43_OUTFIT;
496593     set EMWS8.AutoNeural43_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural43_OUTFIT;
496594     length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
496595     _func_ = "DIRECT";
MPRINT(EM_DIAGRAM):   _func_ = "DIRECT";
496596     _status_ = "reject";
MPRINT(EM_DIAGRAM):   _status_ = "reject";
496597     _step_ = "FUNNEL LAYERS 2";
MPRINT(EM_DIAGRAM):   _step_ = "FUNNEL LAYERS 2";
496598     _index_ = 2;
MPRINT(EM_DIAGRAM):   _index_ = 2;
496599     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL43_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL43_OUTFIT has 1 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
496600     data EMWS8.AutoNeural43_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural43_HISTORY;
496601     set EMWS8.AutoNeural43_HISTORY EMWS8.AutoNeural43_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural43_HISTORY EMWS8.AutoNeural43_OUTFIT;
496602     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 6 observations read from the data set
      EMWS8.AUTONEURAL43_HISTORY.
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL43_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL43_HISTORY has 7 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
496603     * SEARCH: recall starting estimates;
MPRINT(EM_DIAGRAM):    * SEARCH: recall starting estimates;
496604     ;
MPRINT(EM_DIAGRAM):   ;
496605     data EMWS8.AutoNeural43_ESTDS;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural43_ESTDS;
496606     set EMWS8.AutoNeural43_BESTDS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural43_BESTDS;
496607     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL43_BESTDS.
NOTE: The data set EMWS8.AUTONEURAL43_ESTDS has 1 observations and 131
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
496608     *;
MPRINT(EM_DIAGRAM):    *;
496609     proc neural data=EM_AutoNeural43 dmdbcat=WORK.AutoNeural43_DMDB
496610     validdata=EMWS8.Meta2_VALIDATE
496611     ;
MPRINT(EM_DIAGRAM):   proc neural data=EM_AutoNeural43
dmdbcat=WORK.AutoNeural43_DMDB validdata=EMWS8.Meta2_VALIDATE ;
496612     *;
MPRINT(EM_DIAGRAM):   *;
496613     nloptions noprint;
MPRINT(EM_DIAGRAM):   nloptions noprint;
496614     performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   input
496615     input %INTINPUTS / level=interval id=interval;
MPRINT(INTINPUTS):   AcceptedCmpTotal Frq Income Mnt MntGoldProds
MntMeatProducts NumCatalogPurchases NumDealsPurchases NumWebVisitsMonth RFMstat
Recency Teenhome Year_Birth
MPRINT(EM_DIAGRAM):   / level=interval id=interval;
MPRINT(EM_DIAGRAM):   input
496616     input %NOMINPUTS / level=nominal id=nominal;
MPRINT(NOMINPUTS):   Marital_Status
MPRINT(EM_DIAGRAM):   / level=nominal id=nominal;
496617     target DepVar / level=NOMINAL id=DepVar
496618     ;
MPRINT(EM_DIAGRAM):   target DepVar / level=NOMINAL id=DepVar ;
496619     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
496620     * Layer #1;
MPRINT(EM_DIAGRAM):   * Layer #1;
496621     ;
MPRINT(EM_DIAGRAM):   ;
496622     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
496623     Hidden 7 / id = H1x1_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 7 / id = H1x1_ act=SOFTMAX;
496624     connect interval H1x1_;
MPRINT(EM_DIAGRAM):   connect interval H1x1_;
496625     connect nominal H1x1_;
MPRINT(EM_DIAGRAM):   connect nominal H1x1_;
496626     Hidden 7 / id = H1x2_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 7 / id = H1x2_ act=SOFTMAX;
496627     connect interval H1x2_;
MPRINT(EM_DIAGRAM):   connect interval H1x2_;
496628     connect nominal H1x2_;
MPRINT(EM_DIAGRAM):   connect nominal H1x2_;
496629     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
496630     * Layer #2;
MPRINT(EM_DIAGRAM):   * Layer #2;
496631     ;
MPRINT(EM_DIAGRAM):   ;
496632     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
496633     Hidden 7 / id = H2x1_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 7 / id = H2x1_ act=LOG;
496634     connect H1x1_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x1_ H2x1_;
496635     connect H1x2_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x2_ H2x1_;
496636     connect H2x1_ DepVar;
MPRINT(EM_DIAGRAM):   connect H2x1_ DepVar;
496637     *;
MPRINT(EM_DIAGRAM):   *;
496638     netoptions ranscale = 1;
MPRINT(EM_DIAGRAM):   netoptions ranscale = 1;
496639     *;
MPRINT(EM_DIAGRAM):   *;
496640     initial
496641     inest = EMWS8.AutoNeural43_ESTDS bylabel;
MPRINT(EM_DIAGRAM):   initial inest = EMWS8.AutoNeural43_ESTDS bylabel;
NOTE: The data set EMWS8.AUTONEURAL43_ESTDS has 1 observations and 131
      variables.
496642     ;
MPRINT(EM_DIAGRAM):   ;
496643     *;
MPRINT(EM_DIAGRAM):   *;
496644     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
496645     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_prelim_title  ,NOQUOTE,
496645   ! Search # 2 FUNNEL LAYERS trial # 2 : LOGISTIC : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 2 FUNNEL LAYERS trial # 2 : LOGISTIC :
Prelim";
496646     prelim 32 outest=_anpre pretime=30 preiter=25
MPRINT(EM_DIAGRAM):   prelim 32 outest=_anpre pretime=30 preiter=25 tech =
Default inest = EMWS8.AutoNeural43_ESTDS bylabel ;
NOTE:  Synchronizing the objectives and the Solution.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANPRE has 65 observations and 344 variables.
NOTE: The data set EMWS8.AUTONEURAL43_ESTDS has 1 observations and 131
      variables.
MPRINT(EM_DIAGRAM):   *;
496647     tech = Default
496648     inest = EMWS8.AutoNeural43_ESTDS bylabel
496649     ;
496650     *;
496651     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
496652     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_train_title  ,NOQUOTE,
496652   ! Search # 2 FUNNEL LAYERS trial # 2 : LOGISTIC : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 2 FUNNEL LAYERS trial # 2 : LOGISTIC :
Training";
MPRINT(EM_DIAGRAM):   train estiter=1 outest=_anest outfit=_anfit maxtime=894
maxiter=50 tech = Default;
WARNING: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 50 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANEST has 53 observations and 344 variables.
NOTE: The data set WORK._ANFIT has 104 observations and 36 variables.
MPRINT(EM_DIAGRAM):   ;
496653     train estiter=1 outest=_anest outfit=_anfit maxtime=894 maxiter=50
MPRINT(EM_DIAGRAM):   run;
496654     tech = Default;
496655     ;
496656     run;
 
NOTE: The data set WORK.EM_AUTONEURAL43 has 2374 observations and 15 variables.
NOTE: The data set EMWS8.META2_VALIDATE has . observations and 45 variables.
NOTE: View EMWS8.META2_VALIDATE.VIEW used (Total process time):
      real time           15.83 seconds
      cpu time            15.83 seconds
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: Closing the Neural Application.
NOTE: The PROCEDURE NEURAL printed page 424.
NOTE: PROCEDURE NEURAL used (Total process time):
      real time           15.83 seconds
      cpu time            15.83 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
496657     *;
496658     proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
MPRINT(EM_DIAGRAM):   proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
496659     var _iter_ _aic_ _averr_ _misc_
496660     _vaverr_ _vmisc_
496661     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
496662     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _name_='OVERALL';
NOTE: The PROCEDURE PRINT printed page 425.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Extract best iteration;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
496663     *------------------------------------------------------------*;
496664     * Extract best iteration;
496665     ;
496666     *------------------------------------------------------------*;
496667     %global _iter;
496668     data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
496669     set _anfit(where=(_NAME_ eq 'OVERALL'));
MPRINT(EM_DIAGRAM):   set _anfit(where=(_NAME_ eq 'OVERALL'));
496670     retain _min 1e+64;
MPRINT(EM_DIAGRAM):   retain _min 1e+64;
496671     if _VMISC_ < _min then do;
MPRINT(EM_DIAGRAM):   if _VMISC_ < _min then do;
496672     _min = _VMISC_;
MPRINT(EM_DIAGRAM):   _min = _VMISC_;
496673     call symput('_iter',put(_ITER_, 6.));
MPRINT(EM_DIAGRAM):   call symput('_iter',put(_ITER_, 6.));
496674     end;
MPRINT(EM_DIAGRAM):   end;
496675     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _NAME_='OVERALL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
496676     *;
 
496677     data EMWS8.AutoNeural43_ESTDS;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural43_ESTDS;
496678     set _anest;
MPRINT(EM_DIAGRAM):   set _anest;
496679     if _ITER_ eq 30 then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 30 then do;
496680     output;
MPRINT(EM_DIAGRAM):   output;
496681     stop;
MPRINT(EM_DIAGRAM):   stop;
496682     end;
MPRINT(EM_DIAGRAM):   end;
496683     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 31 observations read from the data set WORK._ANEST.
NOTE: The data set EMWS8.AUTONEURAL43_ESTDS has 1 observations and 344
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
496684     *;
496685     data EMWS8.AutoNeural43_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural43_OUTFIT;
496686     set _anfit;
MPRINT(EM_DIAGRAM):   set _anfit;
496687     if _ITER_ eq 30 and _NAME_ eq "OVERALL" then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 30 and _NAME_ eq "OVERALL" then do;
496688     output;
MPRINT(EM_DIAGRAM):   output;
496689     stop;
MPRINT(EM_DIAGRAM):   stop;
496690     end;
MPRINT(EM_DIAGRAM):   end;
496691     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 62 observations read from the data set WORK._ANFIT.
NOTE: The data set EMWS8.AUTONEURAL43_OUTFIT has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
496692     *;
MPRINT(EM_DIAGRAM):    *;
496693     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
496694     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_selectediteration_title
496694   ! , NOQUOTE, _VMISC_))";
MPRINT(EM_DIAGRAM):   title10 "Selected Iteration based on _VMISC_";
496695     proc print data=EMWS8.AutoNeural43_OUTFIT noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural43_OUTFIT noobs;
496696     var _iter_ _aic_ _averr_ _misc_
496697     _vaverr_ _vmisc_
496698     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
496699     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL43_OUTFIT.
NOTE: The PROCEDURE PRINT printed page 426.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
496700     title9;
MPRINT(EM_DIAGRAM):   title9;
496701     title10;
MPRINT(EM_DIAGRAM):   title10;
496702     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
496703     set EMWS8.AutoNeural43_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural43_OUTFIT;
496704     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
496705     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL43_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
496706     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
496707     set EMWS8.AutoNeural43_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural43_OUTFIT;
496708     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
496709     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL43_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
496710     *SEARCH: copy estimates and fit to best buffer;
MPRINT(EM_DIAGRAM):    *SEARCH: copy estimates and fit to best buffer;
496711     ;
MPRINT(EM_DIAGRAM):   ;
496712     data WORK.SAVEDS_AUTONEUR_3IW3VMD;
MPRINT(EM_DIAGRAM):   data WORK.SAVEDS_AUTONEUR_3IW3VMD;
496713     set EMWS8.AutoNeural43_ESTDS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural43_ESTDS;
496714     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.AUTONEURAL43_ESTDS.
NOTE: The data set WORK.SAVEDS_AUTONEUR_3IW3VMD has 1 observations and 344
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
496715     data EMWS8.AutoNeural43_BESTDS;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural43_BESTDS;
496716     set EMWS8.AutoNeural43_ESTDS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural43_ESTDS;
496717     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.AUTONEURAL43_ESTDS.
NOTE: The data set EMWS8.AUTONEURAL43_BESTDS has 1 observations and 344
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
496718     data WORK.BFITDS_AUTONEUR_3IW3VMD;
MPRINT(EM_DIAGRAM):   data WORK.BFITDS_AUTONEUR_3IW3VMD;
496719     set EMWS8.AutoNeural43_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural43_OUTFIT;
496720     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL43_OUTFIT.
NOTE: The data set WORK.BFITDS_AUTONEUR_3IW3VMD has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
496721     * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
496722     ;
MPRINT(EM_DIAGRAM):   ;
496723     data EMWS8.AutoNeural43_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural43_OUTFIT;
496724     set EMWS8.AutoNeural43_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural43_OUTFIT;
496725     length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
496726     _func_ = "LOGISTIC";
MPRINT(EM_DIAGRAM):   _func_ = "LOGISTIC";
496727     _status_ = "candidate";
MPRINT(EM_DIAGRAM):   _status_ = "candidate";
496728     _step_ = "FUNNEL LAYERS 2";
MPRINT(EM_DIAGRAM):   _step_ = "FUNNEL LAYERS 2";
496729     _index_ = 2;
MPRINT(EM_DIAGRAM):   _index_ = 2;
496730     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL43_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL43_OUTFIT has 1 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
496731     data EMWS8.AutoNeural43_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural43_HISTORY;
496732     set EMWS8.AutoNeural43_HISTORY EMWS8.AutoNeural43_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural43_HISTORY EMWS8.AutoNeural43_OUTFIT;
496733     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 7 observations read from the data set
      EMWS8.AUTONEURAL43_HISTORY.
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL43_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL43_HISTORY has 8 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
496734     * SEARCH: recall starting estimates;
MPRINT(EM_DIAGRAM):    * SEARCH: recall starting estimates;
496735     ;
MPRINT(EM_DIAGRAM):   ;
496736     data EMWS8.AutoNeural43_ESTDS;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural43_ESTDS;
496737     set EMWS8.AutoNeural43_BESTDS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural43_BESTDS;
496738     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL43_BESTDS.
NOTE: The data set EMWS8.AUTONEURAL43_ESTDS has 1 observations and 344
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
496739     *;
MPRINT(EM_DIAGRAM):    *;
496740     proc neural data=EM_AutoNeural43 dmdbcat=WORK.AutoNeural43_DMDB
496741     validdata=EMWS8.Meta2_VALIDATE
496742     ;
MPRINT(EM_DIAGRAM):   proc neural data=EM_AutoNeural43
dmdbcat=WORK.AutoNeural43_DMDB validdata=EMWS8.Meta2_VALIDATE ;
496743     *;
MPRINT(EM_DIAGRAM):   *;
496744     nloptions noprint;
MPRINT(EM_DIAGRAM):   nloptions noprint;
496745     performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   input
496746     input %INTINPUTS / level=interval id=interval;
MPRINT(INTINPUTS):   AcceptedCmpTotal Frq Income Mnt MntGoldProds
MntMeatProducts NumCatalogPurchases NumDealsPurchases NumWebVisitsMonth RFMstat
Recency Teenhome Year_Birth
MPRINT(EM_DIAGRAM):   / level=interval id=interval;
MPRINT(EM_DIAGRAM):   input
496747     input %NOMINPUTS / level=nominal id=nominal;
MPRINT(NOMINPUTS):   Marital_Status
MPRINT(EM_DIAGRAM):   / level=nominal id=nominal;
496748     target DepVar / level=NOMINAL id=DepVar
496749     ;
MPRINT(EM_DIAGRAM):   target DepVar / level=NOMINAL id=DepVar ;
496750     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
496751     * Layer #1;
MPRINT(EM_DIAGRAM):   * Layer #1;
496752     ;
MPRINT(EM_DIAGRAM):   ;
496753     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
496754     Hidden 7 / id = H1x1_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 7 / id = H1x1_ act=SOFTMAX;
496755     connect interval H1x1_;
MPRINT(EM_DIAGRAM):   connect interval H1x1_;
496756     connect nominal H1x1_;
MPRINT(EM_DIAGRAM):   connect nominal H1x1_;
496757     Hidden 7 / id = H1x2_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 7 / id = H1x2_ act=SOFTMAX;
496758     connect interval H1x2_;
MPRINT(EM_DIAGRAM):   connect interval H1x2_;
496759     connect nominal H1x2_;
MPRINT(EM_DIAGRAM):   connect nominal H1x2_;
496760     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
496761     * Layer #2;
MPRINT(EM_DIAGRAM):   * Layer #2;
496762     ;
MPRINT(EM_DIAGRAM):   ;
496763     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
496764     Hidden 7 / id = H2x1_ act=SINE;
MPRINT(EM_DIAGRAM):   Hidden 7 / id = H2x1_ act=SINE;
496765     connect H1x1_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x1_ H2x1_;
496766     connect H1x2_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x2_ H2x1_;
496767     connect H2x1_ DepVar;
MPRINT(EM_DIAGRAM):   connect H2x1_ DepVar;
496768     *;
MPRINT(EM_DIAGRAM):   *;
496769     netoptions ranscale = 1;
MPRINT(EM_DIAGRAM):   netoptions ranscale = 1;
496770     *;
MPRINT(EM_DIAGRAM):   *;
496771     initial
496772     inest = EMWS8.AutoNeural43_ESTDS bylabel;
MPRINT(EM_DIAGRAM):   initial inest = EMWS8.AutoNeural43_ESTDS bylabel;
NOTE: The data set EMWS8.AUTONEURAL43_ESTDS has 1 observations and 344
      variables.
496773     ;
MPRINT(EM_DIAGRAM):   ;
496774     *;
MPRINT(EM_DIAGRAM):   *;
496775     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
496776     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_prelim_title  ,NOQUOTE,
496776   ! Search # 2 FUNNEL LAYERS trial # 3 : SINE : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 2 FUNNEL LAYERS trial # 3 : SINE :
Prelim";
496777     prelim 32 outest=_anpre pretime=30 preiter=25
MPRINT(EM_DIAGRAM):   prelim 32 outest=_anpre pretime=30 preiter=25 tech =
Default inest = EMWS8.AutoNeural43_ESTDS bylabel ;
NOTE:  Synchronizing the objectives and the Solution.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
The prelim will run only once. Use the randbias or randout option on the target
layer.
NOTE: The data set WORK._ANPRE has 3 observations and 344 variables.
NOTE: The data set EMWS8.AUTONEURAL43_ESTDS has 1 observations and 344
      variables.
MPRINT(EM_DIAGRAM):   *;
496778     tech = Default
496779     inest = EMWS8.AutoNeural43_ESTDS bylabel
496780     ;
496781     *;
496782     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
496783     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_train_title  ,NOQUOTE,
496783   ! Search # 2 FUNNEL LAYERS trial # 3 : SINE : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 2 FUNNEL LAYERS trial # 3 : SINE :
Training";
MPRINT(EM_DIAGRAM):   train estiter=1 outest=_anest outfit=_anfit maxtime=890
maxiter=50 tech = Default;
WARNING: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 50 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANEST has 53 observations and 344 variables.
NOTE: The data set WORK._ANFIT has 104 observations and 36 variables.
MPRINT(EM_DIAGRAM):   ;
496784     train estiter=1 outest=_anest outfit=_anfit maxtime=890 maxiter=50
MPRINT(EM_DIAGRAM):   run;
496785     tech = Default;
496786     ;
496787     run;
 
NOTE: The data set WORK.EM_AUTONEURAL43 has 2374 observations and 15 variables.
NOTE: The data set EMWS8.META2_VALIDATE has . observations and 45 variables.
NOTE: View EMWS8.META2_VALIDATE.VIEW used (Total process time):
      real time           1.62 seconds
      cpu time            1.62 seconds
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: Closing the Neural Application.
NOTE: The PROCEDURE NEURAL printed page 427.
NOTE: PROCEDURE NEURAL used (Total process time):
      real time           1.62 seconds
      cpu time            1.62 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
496788     *;
496789     proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
MPRINT(EM_DIAGRAM):   proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
496790     var _iter_ _aic_ _averr_ _misc_
496791     _vaverr_ _vmisc_
496792     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
496793     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _name_='OVERALL';
NOTE: The PROCEDURE PRINT printed page 428.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Extract best iteration;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
496794     *------------------------------------------------------------*;
496795     * Extract best iteration;
496796     ;
496797     *------------------------------------------------------------*;
496798     %global _iter;
496799     data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
496800     set _anfit(where=(_NAME_ eq 'OVERALL'));
MPRINT(EM_DIAGRAM):   set _anfit(where=(_NAME_ eq 'OVERALL'));
496801     retain _min 1e+64;
MPRINT(EM_DIAGRAM):   retain _min 1e+64;
496802     if _VMISC_ < _min then do;
MPRINT(EM_DIAGRAM):   if _VMISC_ < _min then do;
496803     _min = _VMISC_;
MPRINT(EM_DIAGRAM):   _min = _VMISC_;
496804     call symput('_iter',put(_ITER_, 6.));
MPRINT(EM_DIAGRAM):   call symput('_iter',put(_ITER_, 6.));
496805     end;
MPRINT(EM_DIAGRAM):   end;
496806     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _NAME_='OVERALL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
496807     *;
 
496808     data EMWS8.AutoNeural43_ESTDS;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural43_ESTDS;
496809     set _anest;
MPRINT(EM_DIAGRAM):   set _anest;
496810     if _ITER_ eq 20 then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 20 then do;
496811     output;
MPRINT(EM_DIAGRAM):   output;
496812     stop;
MPRINT(EM_DIAGRAM):   stop;
496813     end;
MPRINT(EM_DIAGRAM):   end;
496814     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 21 observations read from the data set WORK._ANEST.
NOTE: The data set EMWS8.AUTONEURAL43_ESTDS has 1 observations and 344
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
496815     *;
496816     data EMWS8.AutoNeural43_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural43_OUTFIT;
496817     set _anfit;
MPRINT(EM_DIAGRAM):   set _anfit;
496818     if _ITER_ eq 20 and _NAME_ eq "OVERALL" then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 20 and _NAME_ eq "OVERALL" then do;
496819     output;
MPRINT(EM_DIAGRAM):   output;
496820     stop;
MPRINT(EM_DIAGRAM):   stop;
496821     end;
MPRINT(EM_DIAGRAM):   end;
496822     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 42 observations read from the data set WORK._ANFIT.
NOTE: The data set EMWS8.AUTONEURAL43_OUTFIT has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
496823     *;
MPRINT(EM_DIAGRAM):    *;
496824     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
496825     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_selectediteration_title
496825   ! , NOQUOTE, _VMISC_))";
MPRINT(EM_DIAGRAM):   title10 "Selected Iteration based on _VMISC_";
496826     proc print data=EMWS8.AutoNeural43_OUTFIT noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural43_OUTFIT noobs;
496827     var _iter_ _aic_ _averr_ _misc_
496828     _vaverr_ _vmisc_
496829     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
496830     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL43_OUTFIT.
NOTE: The PROCEDURE PRINT printed page 429.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
496831     title9;
MPRINT(EM_DIAGRAM):   title9;
496832     title10;
MPRINT(EM_DIAGRAM):   title10;
496833     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
496834     set EMWS8.AutoNeural43_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural43_OUTFIT;
496835     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
496836     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL43_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
496837     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
496838     set EMWS8.AutoNeural43_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural43_OUTFIT;
496839     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
496840     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL43_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
496841     * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
496842     ;
MPRINT(EM_DIAGRAM):   ;
496843     data EMWS8.AutoNeural43_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural43_OUTFIT;
496844     set EMWS8.AutoNeural43_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural43_OUTFIT;
496845     length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
496846     _func_ = "SINE";
MPRINT(EM_DIAGRAM):   _func_ = "SINE";
496847     _status_ = "reject";
MPRINT(EM_DIAGRAM):   _status_ = "reject";
496848     _step_ = "FUNNEL LAYERS 2";
MPRINT(EM_DIAGRAM):   _step_ = "FUNNEL LAYERS 2";
496849     _index_ = 2;
MPRINT(EM_DIAGRAM):   _index_ = 2;
496850     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL43_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL43_OUTFIT has 1 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
496851     data EMWS8.AutoNeural43_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural43_HISTORY;
496852     set EMWS8.AutoNeural43_HISTORY EMWS8.AutoNeural43_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural43_HISTORY EMWS8.AutoNeural43_OUTFIT;
496853     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set
      EMWS8.AUTONEURAL43_HISTORY.
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL43_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL43_HISTORY has 9 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
496854     * SEARCH: recall starting estimates;
MPRINT(EM_DIAGRAM):    * SEARCH: recall starting estimates;
496855     ;
MPRINT(EM_DIAGRAM):   ;
496856     data EMWS8.AutoNeural43_ESTDS;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural43_ESTDS;
496857     set EMWS8.AutoNeural43_BESTDS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural43_BESTDS;
496858     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL43_BESTDS.
NOTE: The data set EMWS8.AUTONEURAL43_ESTDS has 1 observations and 344
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
496859     *;
MPRINT(EM_DIAGRAM):    *;
496860     proc neural data=EM_AutoNeural43 dmdbcat=WORK.AutoNeural43_DMDB
496861     validdata=EMWS8.Meta2_VALIDATE
496862     ;
MPRINT(EM_DIAGRAM):   proc neural data=EM_AutoNeural43
dmdbcat=WORK.AutoNeural43_DMDB validdata=EMWS8.Meta2_VALIDATE ;
496863     *;
MPRINT(EM_DIAGRAM):   *;
496864     nloptions noprint;
MPRINT(EM_DIAGRAM):   nloptions noprint;
496865     performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   input
496866     input %INTINPUTS / level=interval id=interval;
MPRINT(INTINPUTS):   AcceptedCmpTotal Frq Income Mnt MntGoldProds
MntMeatProducts NumCatalogPurchases NumDealsPurchases NumWebVisitsMonth RFMstat
Recency Teenhome Year_Birth
MPRINT(EM_DIAGRAM):   / level=interval id=interval;
MPRINT(EM_DIAGRAM):   input
496867     input %NOMINPUTS / level=nominal id=nominal;
MPRINT(NOMINPUTS):   Marital_Status
MPRINT(EM_DIAGRAM):   / level=nominal id=nominal;
496868     target DepVar / level=NOMINAL id=DepVar
496869     ;
MPRINT(EM_DIAGRAM):   target DepVar / level=NOMINAL id=DepVar ;
496870     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
496871     * Layer #1;
MPRINT(EM_DIAGRAM):   * Layer #1;
496872     ;
MPRINT(EM_DIAGRAM):   ;
496873     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
496874     Hidden 7 / id = H1x1_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 7 / id = H1x1_ act=SOFTMAX;
496875     connect interval H1x1_;
MPRINT(EM_DIAGRAM):   connect interval H1x1_;
496876     connect nominal H1x1_;
MPRINT(EM_DIAGRAM):   connect nominal H1x1_;
496877     Hidden 7 / id = H1x2_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 7 / id = H1x2_ act=SOFTMAX;
496878     connect interval H1x2_;
MPRINT(EM_DIAGRAM):   connect interval H1x2_;
496879     connect nominal H1x2_;
MPRINT(EM_DIAGRAM):   connect nominal H1x2_;
496880     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
496881     * Layer #2;
MPRINT(EM_DIAGRAM):   * Layer #2;
496882     ;
MPRINT(EM_DIAGRAM):   ;
496883     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
496884     Hidden 7 / id = H2x1_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 7 / id = H2x1_ act=SOFTMAX;
496885     connect H1x1_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x1_ H2x1_;
496886     connect H1x2_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x2_ H2x1_;
496887     connect H2x1_ DepVar;
MPRINT(EM_DIAGRAM):   connect H2x1_ DepVar;
496888     *;
MPRINT(EM_DIAGRAM):   *;
496889     netoptions ranscale = 1;
MPRINT(EM_DIAGRAM):   netoptions ranscale = 1;
496890     *;
MPRINT(EM_DIAGRAM):   *;
496891     initial
496892     inest = EMWS8.AutoNeural43_ESTDS bylabel;
MPRINT(EM_DIAGRAM):   initial inest = EMWS8.AutoNeural43_ESTDS bylabel;
NOTE: The data set EMWS8.AUTONEURAL43_ESTDS has 1 observations and 344
      variables.
496893     ;
MPRINT(EM_DIAGRAM):   ;
496894     *;
MPRINT(EM_DIAGRAM):   *;
496895     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
496896     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_prelim_title  ,NOQUOTE,
496896   ! Search # 2 FUNNEL LAYERS trial # 4 : SOFTMAX : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 2 FUNNEL LAYERS trial # 4 : SOFTMAX :
Prelim";
496897     prelim 32 outest=_anpre pretime=30 preiter=25
MPRINT(EM_DIAGRAM):   prelim 32 outest=_anpre pretime=30 preiter=25 tech =
Default inest = EMWS8.AutoNeural43_ESTDS bylabel ;
NOTE:  Synchronizing the objectives and the Solution.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
The prelim will run only once. Use the randbias or randout option on the target
layer.
NOTE: The data set WORK._ANPRE has 3 observations and 329 variables.
NOTE: The data set EMWS8.AUTONEURAL43_ESTDS has 1 observations and 344
      variables.
MPRINT(EM_DIAGRAM):   *;
496898     tech = Default
496899     inest = EMWS8.AutoNeural43_ESTDS bylabel
496900     ;
496901     *;
496902     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
496903     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_train_title  ,NOQUOTE,
496903   ! Search # 2 FUNNEL LAYERS trial # 4 : SOFTMAX : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 2 FUNNEL LAYERS trial # 4 : SOFTMAX :
Training";
MPRINT(EM_DIAGRAM):   train estiter=1 outest=_anest outfit=_anfit maxtime=890
maxiter=50 tech = Default;
WARNING: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 50 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANEST has 53 observations and 329 variables.
NOTE: The data set WORK._ANFIT has 104 observations and 36 variables.
MPRINT(EM_DIAGRAM):   ;
496904     train estiter=1 outest=_anest outfit=_anfit maxtime=890 maxiter=50
MPRINT(EM_DIAGRAM):   run;
496905     tech = Default;
496906     ;
496907     run;
 
NOTE: The data set WORK.EM_AUTONEURAL43 has 2374 observations and 15 variables.
NOTE: The data set EMWS8.META2_VALIDATE has . observations and 45 variables.
NOTE: View EMWS8.META2_VALIDATE.VIEW used (Total process time):
      real time           2.42 seconds
      cpu time            1.43 seconds
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: Closing the Neural Application.
NOTE: The PROCEDURE NEURAL printed page 430.
NOTE: PROCEDURE NEURAL used (Total process time):
      real time           2.42 seconds
      cpu time            1.43 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
496908     *;
496909     proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
MPRINT(EM_DIAGRAM):   proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
496910     var _iter_ _aic_ _averr_ _misc_
496911     _vaverr_ _vmisc_
496912     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
496913     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _name_='OVERALL';
NOTE: The PROCEDURE PRINT printed page 431.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Extract best iteration;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
496914     *------------------------------------------------------------*;
496915     * Extract best iteration;
496916     ;
496917     *------------------------------------------------------------*;
496918     %global _iter;
496919     data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
496920     set _anfit(where=(_NAME_ eq 'OVERALL'));
MPRINT(EM_DIAGRAM):   set _anfit(where=(_NAME_ eq 'OVERALL'));
496921     retain _min 1e+64;
MPRINT(EM_DIAGRAM):   retain _min 1e+64;
496922     if _VMISC_ < _min then do;
MPRINT(EM_DIAGRAM):   if _VMISC_ < _min then do;
496923     _min = _VMISC_;
MPRINT(EM_DIAGRAM):   _min = _VMISC_;
496924     call symput('_iter',put(_ITER_, 6.));
MPRINT(EM_DIAGRAM):   call symput('_iter',put(_ITER_, 6.));
496925     end;
MPRINT(EM_DIAGRAM):   end;
496926     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _NAME_='OVERALL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
496927     *;
 
496928     data EMWS8.AutoNeural43_ESTDS;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural43_ESTDS;
496929     set _anest;
MPRINT(EM_DIAGRAM):   set _anest;
496930     if _ITER_ eq 4 then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 4 then do;
496931     output;
MPRINT(EM_DIAGRAM):   output;
496932     stop;
MPRINT(EM_DIAGRAM):   stop;
496933     end;
MPRINT(EM_DIAGRAM):   end;
496934     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 5 observations read from the data set WORK._ANEST.
NOTE: The data set EMWS8.AUTONEURAL43_ESTDS has 1 observations and 329
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
496935     *;
496936     data EMWS8.AutoNeural43_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural43_OUTFIT;
496937     set _anfit;
MPRINT(EM_DIAGRAM):   set _anfit;
496938     if _ITER_ eq 4 and _NAME_ eq "OVERALL" then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 4 and _NAME_ eq "OVERALL" then do;
496939     output;
MPRINT(EM_DIAGRAM):   output;
496940     stop;
MPRINT(EM_DIAGRAM):   stop;
496941     end;
MPRINT(EM_DIAGRAM):   end;
496942     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 10 observations read from the data set WORK._ANFIT.
NOTE: The data set EMWS8.AUTONEURAL43_OUTFIT has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
496943     *;
MPRINT(EM_DIAGRAM):    *;
496944     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
496945     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_selectediteration_title
496945   ! , NOQUOTE, _VMISC_))";
MPRINT(EM_DIAGRAM):   title10 "Selected Iteration based on _VMISC_";
496946     proc print data=EMWS8.AutoNeural43_OUTFIT noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural43_OUTFIT noobs;
496947     var _iter_ _aic_ _averr_ _misc_
496948     _vaverr_ _vmisc_
496949     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
496950     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL43_OUTFIT.
NOTE: The PROCEDURE PRINT printed page 432.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
496951     title9;
MPRINT(EM_DIAGRAM):   title9;
496952     title10;
MPRINT(EM_DIAGRAM):   title10;
496953     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
496954     set EMWS8.AutoNeural43_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural43_OUTFIT;
496955     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
496956     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL43_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
496957     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
496958     set EMWS8.AutoNeural43_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural43_OUTFIT;
496959     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
496960     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL43_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
496961     * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
496962     ;
MPRINT(EM_DIAGRAM):   ;
496963     data EMWS8.AutoNeural43_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural43_OUTFIT;
496964     set EMWS8.AutoNeural43_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural43_OUTFIT;
496965     length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
496966     _func_ = "SOFTMAX";
MPRINT(EM_DIAGRAM):   _func_ = "SOFTMAX";
496967     _status_ = "reject";
MPRINT(EM_DIAGRAM):   _status_ = "reject";
496968     _step_ = "FUNNEL LAYERS 2";
MPRINT(EM_DIAGRAM):   _step_ = "FUNNEL LAYERS 2";
496969     _index_ = 2;
MPRINT(EM_DIAGRAM):   _index_ = 2;
496970     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL43_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL43_OUTFIT has 1 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
496971     data EMWS8.AutoNeural43_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural43_HISTORY;
496972     set EMWS8.AutoNeural43_HISTORY EMWS8.AutoNeural43_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural43_HISTORY EMWS8.AutoNeural43_OUTFIT;
496973     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 9 observations read from the data set
      EMWS8.AUTONEURAL43_HISTORY.
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL43_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL43_HISTORY has 10 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
496974     *SEARCH: recall best estimates and fit;
MPRINT(EM_DIAGRAM):    *SEARCH: recall best estimates and fit;
496975     ;
MPRINT(EM_DIAGRAM):   ;
496976     data EMWS8.AutoNeural43_ESTDS;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural43_ESTDS;
496977     set EMWS8.AutoNeural43_BESTDS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural43_BESTDS;
496978     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL43_BESTDS.
NOTE: The data set EMWS8.AUTONEURAL43_ESTDS has 1 observations and 344
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
496979     data EMWS8.AutoNeural43_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural43_OUTFIT;
496980     set WORK.BFITDS_AUTONEUR_3IW3VMD;
MPRINT(EM_DIAGRAM):   set WORK.BFITDS_AUTONEUR_3IW3VMD;
496981     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      WORK.BFITDS_AUTONEUR_3IW3VMD.
NOTE: The data set EMWS8.AUTONEURAL43_OUTFIT has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
496982     * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
496983     ;
MPRINT(EM_DIAGRAM):   ;
496984     data EMWS8.AutoNeural43_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural43_OUTFIT;
496985     set EMWS8.AutoNeural43_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural43_OUTFIT;
496986     length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
496987     _func_ = "LOGISTIC";
MPRINT(EM_DIAGRAM):   _func_ = "LOGISTIC";
496988     _status_ = "keep";
MPRINT(EM_DIAGRAM):   _status_ = "keep";
496989     _step_ = "FUNNEL LAYERS 2";
MPRINT(EM_DIAGRAM):   _step_ = "FUNNEL LAYERS 2";
496990     _index_ = 2;
MPRINT(EM_DIAGRAM):   _index_ = 2;
496991     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL43_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL43_OUTFIT has 1 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
496992     data EMWS8.AutoNeural43_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural43_HISTORY;
496993     set EMWS8.AutoNeural43_HISTORY EMWS8.AutoNeural43_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural43_HISTORY EMWS8.AutoNeural43_OUTFIT;
496994     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 10 observations read from the data set
      EMWS8.AUTONEURAL43_HISTORY.
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL43_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL43_HISTORY has 11 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
496995     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
496996     set EMWS8.AutoNeural43_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural43_OUTFIT;
496997     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
496998     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL43_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 40 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
496999     *;
MPRINT(EM_DIAGRAM):    *;
497000     proc neural data=EM_AutoNeural43 dmdbcat=WORK.AutoNeural43_DMDB
497001     validdata=EMWS8.Meta2_VALIDATE
497002     ;
MPRINT(EM_DIAGRAM):   proc neural data=EM_AutoNeural43
dmdbcat=WORK.AutoNeural43_DMDB validdata=EMWS8.Meta2_VALIDATE ;
497003     *;
MPRINT(EM_DIAGRAM):   *;
497004     nloptions noprint;
MPRINT(EM_DIAGRAM):   nloptions noprint;
497005     performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   input
497006     input %INTINPUTS / level=interval id=interval;
MPRINT(INTINPUTS):   AcceptedCmpTotal Frq Income Mnt MntGoldProds
MntMeatProducts NumCatalogPurchases NumDealsPurchases NumWebVisitsMonth RFMstat
Recency Teenhome Year_Birth
MPRINT(EM_DIAGRAM):   / level=interval id=interval;
MPRINT(EM_DIAGRAM):   input
497007     input %NOMINPUTS / level=nominal id=nominal;
MPRINT(NOMINPUTS):   Marital_Status
MPRINT(EM_DIAGRAM):   / level=nominal id=nominal;
497008     target DepVar / level=NOMINAL id=DepVar
497009     ;
MPRINT(EM_DIAGRAM):   target DepVar / level=NOMINAL id=DepVar ;
497010     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
497011     * Direct connection;
MPRINT(EM_DIAGRAM):   * Direct connection;
497012     ;
MPRINT(EM_DIAGRAM):   ;
497013     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
497014     connect interval DepVar;
MPRINT(EM_DIAGRAM):   connect interval DepVar;
497015     connect nominal DepVar;
MPRINT(EM_DIAGRAM):   connect nominal DepVar;
497016     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
497017     * Layer #1;
MPRINT(EM_DIAGRAM):   * Layer #1;
497018     ;
MPRINT(EM_DIAGRAM):   ;
497019     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
497020     Hidden 7 / id = H1x1_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 7 / id = H1x1_ act=SOFTMAX;
497021     connect interval H1x1_;
MPRINT(EM_DIAGRAM):   connect interval H1x1_;
497022     connect nominal H1x1_;
MPRINT(EM_DIAGRAM):   connect nominal H1x1_;
497023     Hidden 7 / id = H1x2_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 7 / id = H1x2_ act=SOFTMAX;
497024     connect interval H1x2_;
MPRINT(EM_DIAGRAM):   connect interval H1x2_;
497025     connect nominal H1x2_;
MPRINT(EM_DIAGRAM):   connect nominal H1x2_;
497026     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
497027     * Layer #2;
MPRINT(EM_DIAGRAM):   * Layer #2;
497028     ;
MPRINT(EM_DIAGRAM):   ;
497029     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
497030     Hidden 7 / id = H2x1_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 7 / id = H2x1_ act=LOG;
497031     connect H1x1_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x1_ H2x1_;
497032     connect H1x2_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x2_ H2x1_;
497033     connect H2x1_ DepVar;
MPRINT(EM_DIAGRAM):   connect H2x1_ DepVar;
497034     *;
MPRINT(EM_DIAGRAM):   *;
497035     netoptions ranscale = 1;
MPRINT(EM_DIAGRAM):   netoptions ranscale = 1;
497036     *;
MPRINT(EM_DIAGRAM):   *;
497037     initial
497038     inest = EMWS8.AutoNeural43_ESTDS bylabel;
MPRINT(EM_DIAGRAM):   initial inest = EMWS8.AutoNeural43_ESTDS bylabel;
NOTE: The data set EMWS8.AUTONEURAL43_ESTDS has 1 observations and 344
      variables.
497039     ;
MPRINT(EM_DIAGRAM):   ;
497040     *;
MPRINT(EM_DIAGRAM):   *;
497041     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
497042     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_prelim_title  ,NOQUOTE,
497042   ! Search # 3 FUNNEL LAYERS trial # 1 : DIRECT : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 3 FUNNEL LAYERS trial # 1 : DIRECT :
Prelim";
497043     prelim 32 outest=_anpre pretime=30 preiter=25
MPRINT(EM_DIAGRAM):   prelim 32 outest=_anpre pretime=30 preiter=25 tech =
Default inest = EMWS8.AutoNeural43_ESTDS bylabel ;
NOTE:  Synchronizing the objectives and the Solution.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
The prelim will run only once. Use the randbias or randout option on the target
layer.
NOTE: The data set WORK._ANPRE has 3 observations and 361 variables.
NOTE: The data set EMWS8.AUTONEURAL43_ESTDS has 1 observations and 344
      variables.
MPRINT(EM_DIAGRAM):   *;
497044     tech = Default
497045     inest = EMWS8.AutoNeural43_ESTDS bylabel
497046     ;
497047     *;
497048     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
497049     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_train_title  ,NOQUOTE,
497049   ! Search # 3 FUNNEL LAYERS trial # 1 : DIRECT : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 3 FUNNEL LAYERS trial # 1 : DIRECT :
Training";
MPRINT(EM_DIAGRAM):   train estiter=1 outest=_anest outfit=_anfit maxtime=889
maxiter=50 tech = Default;
WARNING: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 50 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANEST has 53 observations and 361 variables.
NOTE: The data set WORK._ANFIT has 104 observations and 36 variables.
MPRINT(EM_DIAGRAM):   ;
497050     train estiter=1 outest=_anest outfit=_anfit maxtime=889 maxiter=50
MPRINT(EM_DIAGRAM):   run;
497051     tech = Default;
497052     ;
497053     run;
 
NOTE: The data set WORK.EM_AUTONEURAL43 has 2374 observations and 15 variables.
NOTE: The data set EMWS8.META2_VALIDATE has . observations and 45 variables.
NOTE: View EMWS8.META2_VALIDATE.VIEW used (Total process time):
      real time           1.51 seconds
      cpu time            1.52 seconds
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: Closing the Neural Application.
NOTE: The PROCEDURE NEURAL printed page 433.
NOTE: PROCEDURE NEURAL used (Total process time):
      real time           1.51 seconds
      cpu time            1.52 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
497054     *;
497055     proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
MPRINT(EM_DIAGRAM):   proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
497056     var _iter_ _aic_ _averr_ _misc_
497057     _vaverr_ _vmisc_
497058     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
497059     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _name_='OVERALL';
NOTE: The PROCEDURE PRINT printed page 434.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Extract best iteration;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
497060     *------------------------------------------------------------*;
497061     * Extract best iteration;
497062     ;
497063     *------------------------------------------------------------*;
497064     %global _iter;
497065     data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
497066     set _anfit(where=(_NAME_ eq 'OVERALL'));
MPRINT(EM_DIAGRAM):   set _anfit(where=(_NAME_ eq 'OVERALL'));
497067     retain _min 1e+64;
MPRINT(EM_DIAGRAM):   retain _min 1e+64;
497068     if _VMISC_ < _min then do;
MPRINT(EM_DIAGRAM):   if _VMISC_ < _min then do;
497069     _min = _VMISC_;
MPRINT(EM_DIAGRAM):   _min = _VMISC_;
497070     call symput('_iter',put(_ITER_, 6.));
MPRINT(EM_DIAGRAM):   call symput('_iter',put(_ITER_, 6.));
497071     end;
MPRINT(EM_DIAGRAM):   end;
497072     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _NAME_='OVERALL';
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
497073     *;
 
497074     data EMWS8.AutoNeural43_ESTDS;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural43_ESTDS;
497075     set _anest;
MPRINT(EM_DIAGRAM):   set _anest;
497076     if _ITER_ eq 24 then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 24 then do;
497077     output;
MPRINT(EM_DIAGRAM):   output;
497078     stop;
MPRINT(EM_DIAGRAM):   stop;
497079     end;
MPRINT(EM_DIAGRAM):   end;
497080     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 25 observations read from the data set WORK._ANEST.
NOTE: The data set EMWS8.AUTONEURAL43_ESTDS has 1 observations and 361
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
497081     *;
497082     data EMWS8.AutoNeural43_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural43_OUTFIT;
497083     set _anfit;
MPRINT(EM_DIAGRAM):   set _anfit;
497084     if _ITER_ eq 24 and _NAME_ eq "OVERALL" then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 24 and _NAME_ eq "OVERALL" then do;
497085     output;
MPRINT(EM_DIAGRAM):   output;
497086     stop;
MPRINT(EM_DIAGRAM):   stop;
497087     end;
MPRINT(EM_DIAGRAM):   end;
497088     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 50 observations read from the data set WORK._ANFIT.
NOTE: The data set EMWS8.AUTONEURAL43_OUTFIT has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
497089     *;
MPRINT(EM_DIAGRAM):    *;
497090     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
497091     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_selectediteration_title
497091   ! , NOQUOTE, _VMISC_))";
MPRINT(EM_DIAGRAM):   title10 "Selected Iteration based on _VMISC_";
497092     proc print data=EMWS8.AutoNeural43_OUTFIT noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural43_OUTFIT noobs;
497093     var _iter_ _aic_ _averr_ _misc_
497094     _vaverr_ _vmisc_
497095     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
497096     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL43_OUTFIT.
NOTE: The PROCEDURE PRINT printed page 435.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
497097     title9;
MPRINT(EM_DIAGRAM):   title9;
497098     title10;
MPRINT(EM_DIAGRAM):   title10;
497099     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
497100     set EMWS8.AutoNeural43_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural43_OUTFIT;
497101     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
497102     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL43_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
497103     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
497104     set EMWS8.AutoNeural43_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural43_OUTFIT;
497105     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
497106     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL43_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
497107     *SEARCH: copy estimates and fit to best buffer;
MPRINT(EM_DIAGRAM):    *SEARCH: copy estimates and fit to best buffer;
497108     ;
MPRINT(EM_DIAGRAM):   ;
497109     data WORK.SAVEDS_AUTONEUR_3IW3VMD;
MPRINT(EM_DIAGRAM):   data WORK.SAVEDS_AUTONEUR_3IW3VMD;
497110     set EMWS8.AutoNeural43_ESTDS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural43_ESTDS;
497111     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.AUTONEURAL43_ESTDS.
NOTE: The data set WORK.SAVEDS_AUTONEUR_3IW3VMD has 1 observations and 361
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
497112     data EMWS8.AutoNeural43_BESTDS;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural43_BESTDS;
497113     set EMWS8.AutoNeural43_ESTDS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural43_ESTDS;
497114     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.AUTONEURAL43_ESTDS.
NOTE: The data set EMWS8.AUTONEURAL43_BESTDS has 1 observations and 361
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
497115     data WORK.BFITDS_AUTONEUR_3IW3VMD;
MPRINT(EM_DIAGRAM):   data WORK.BFITDS_AUTONEUR_3IW3VMD;
497116     set EMWS8.AutoNeural43_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural43_OUTFIT;
497117     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL43_OUTFIT.
NOTE: The data set WORK.BFITDS_AUTONEUR_3IW3VMD has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
497118     * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
497119     ;
MPRINT(EM_DIAGRAM):   ;
497120     data EMWS8.AutoNeural43_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural43_OUTFIT;
497121     set EMWS8.AutoNeural43_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural43_OUTFIT;
497122     length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
497123     _func_ = "DIRECT";
MPRINT(EM_DIAGRAM):   _func_ = "DIRECT";
497124     _status_ = "candidate";
MPRINT(EM_DIAGRAM):   _status_ = "candidate";
497125     _step_ = "FUNNEL LAYERS 3";
MPRINT(EM_DIAGRAM):   _step_ = "FUNNEL LAYERS 3";
497126     _index_ = 3;
MPRINT(EM_DIAGRAM):   _index_ = 3;
497127     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL43_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL43_OUTFIT has 1 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
497128     data EMWS8.AutoNeural43_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural43_HISTORY;
497129     set EMWS8.AutoNeural43_HISTORY EMWS8.AutoNeural43_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural43_HISTORY EMWS8.AutoNeural43_OUTFIT;
497130     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 11 observations read from the data set
      EMWS8.AUTONEURAL43_HISTORY.
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL43_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL43_HISTORY has 12 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
497131     * SEARCH: recall starting estimates;
MPRINT(EM_DIAGRAM):    * SEARCH: recall starting estimates;
497132     ;
MPRINT(EM_DIAGRAM):   ;
497133     data EMWS8.AutoNeural43_ESTDS;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural43_ESTDS;
497134     set EMWS8.AutoNeural43_BESTDS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural43_BESTDS;
497135     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL43_BESTDS.
NOTE: The data set EMWS8.AUTONEURAL43_ESTDS has 1 observations and 361
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
497136     *;
MPRINT(EM_DIAGRAM):    *;
497137     proc neural data=EM_AutoNeural43 dmdbcat=WORK.AutoNeural43_DMDB
497138     validdata=EMWS8.Meta2_VALIDATE
497139     ;
MPRINT(EM_DIAGRAM):   proc neural data=EM_AutoNeural43
dmdbcat=WORK.AutoNeural43_DMDB validdata=EMWS8.Meta2_VALIDATE ;
497140     *;
MPRINT(EM_DIAGRAM):   *;
497141     nloptions noprint;
MPRINT(EM_DIAGRAM):   nloptions noprint;
497142     performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   input
497143     input %INTINPUTS / level=interval id=interval;
MPRINT(INTINPUTS):   AcceptedCmpTotal Frq Income Mnt MntGoldProds
MntMeatProducts NumCatalogPurchases NumDealsPurchases NumWebVisitsMonth RFMstat
Recency Teenhome Year_Birth
MPRINT(EM_DIAGRAM):   / level=interval id=interval;
MPRINT(EM_DIAGRAM):   input
497144     input %NOMINPUTS / level=nominal id=nominal;
MPRINT(NOMINPUTS):   Marital_Status
MPRINT(EM_DIAGRAM):   / level=nominal id=nominal;
497145     target DepVar / level=NOMINAL id=DepVar
497146     ;
MPRINT(EM_DIAGRAM):   target DepVar / level=NOMINAL id=DepVar ;
497147     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
497148     * Layer #1;
MPRINT(EM_DIAGRAM):   * Layer #1;
497149     ;
MPRINT(EM_DIAGRAM):   ;
497150     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
497151     Hidden 7 / id = H1x1_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 7 / id = H1x1_ act=SOFTMAX;
497152     connect interval H1x1_;
MPRINT(EM_DIAGRAM):   connect interval H1x1_;
497153     connect nominal H1x1_;
MPRINT(EM_DIAGRAM):   connect nominal H1x1_;
497154     Hidden 7 / id = H1x2_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 7 / id = H1x2_ act=SOFTMAX;
497155     connect interval H1x2_;
MPRINT(EM_DIAGRAM):   connect interval H1x2_;
497156     connect nominal H1x2_;
MPRINT(EM_DIAGRAM):   connect nominal H1x2_;
497157     Hidden 7 / id = H1x3_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 7 / id = H1x3_ act=SOFTMAX;
497158     connect interval H1x3_;
MPRINT(EM_DIAGRAM):   connect interval H1x3_;
497159     connect nominal H1x3_;
MPRINT(EM_DIAGRAM):   connect nominal H1x3_;
497160     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
497161     * Layer #2;
MPRINT(EM_DIAGRAM):   * Layer #2;
497162     ;
MPRINT(EM_DIAGRAM):   ;
497163     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
497164     Hidden 7 / id = H2x1_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 7 / id = H2x1_ act=LOG;
497165     connect H1x1_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x1_ H2x1_;
497166     connect H1x2_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x2_ H2x1_;
497167     connect H1x3_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x3_ H2x1_;
497168     Hidden 7 / id = H2x2_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 7 / id = H2x2_ act=LOG;
497169     connect H1x1_ H2x2_;
MPRINT(EM_DIAGRAM):   connect H1x1_ H2x2_;
497170     connect H1x2_ H2x2_;
MPRINT(EM_DIAGRAM):   connect H1x2_ H2x2_;
497171     connect H1x3_ H2x2_;
MPRINT(EM_DIAGRAM):   connect H1x3_ H2x2_;
497172     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
497173     * Layer #3;
MPRINT(EM_DIAGRAM):   * Layer #3;
497174     ;
MPRINT(EM_DIAGRAM):   ;
497175     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
497176     Hidden 7 / id = H3x1_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 7 / id = H3x1_ act=LOG;
497177     connect H2x1_ H3x1_;
MPRINT(EM_DIAGRAM):   connect H2x1_ H3x1_;
497178     connect H2x2_ H3x1_;
MPRINT(EM_DIAGRAM):   connect H2x2_ H3x1_;
497179     connect H3x1_ DepVar;
MPRINT(EM_DIAGRAM):   connect H3x1_ DepVar;
497180     *;
MPRINT(EM_DIAGRAM):   *;
497181     netoptions ranscale = 1;
MPRINT(EM_DIAGRAM):   netoptions ranscale = 1;
497182     *;
MPRINT(EM_DIAGRAM):   *;
497183     initial
497184     inest = EMWS8.AutoNeural43_ESTDS bylabel;
MPRINT(EM_DIAGRAM):   initial inest = EMWS8.AutoNeural43_ESTDS bylabel;
NOTE: The data set EMWS8.AUTONEURAL43_ESTDS has 1 observations and 361
      variables.
497185     ;
MPRINT(EM_DIAGRAM):   ;
497186     *;
MPRINT(EM_DIAGRAM):   *;
497187     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
497188     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_prelim_title  ,NOQUOTE,
497188   ! Search # 3 FUNNEL LAYERS trial # 2 : LOGISTIC : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 3 FUNNEL LAYERS trial # 2 : LOGISTIC :
Prelim";
497189     prelim 32 outest=_anpre pretime=30 preiter=25
MPRINT(EM_DIAGRAM):   prelim 32 outest=_anpre pretime=30 preiter=25 tech =
Default inest = EMWS8.AutoNeural43_ESTDS bylabel ;
NOTE:  Synchronizing the objectives and the Solution.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANPRE has 65 observations and 760 variables.
NOTE: The data set EMWS8.AUTONEURAL43_ESTDS has 1 observations and 361
      variables.
MPRINT(EM_DIAGRAM):   *;
497190     tech = Default
497191     inest = EMWS8.AutoNeural43_ESTDS bylabel
497192     ;
497193     *;
497194     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
497195     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_train_title  ,NOQUOTE,
497195   ! Search # 3 FUNNEL LAYERS trial # 2 : LOGISTIC : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 3 FUNNEL LAYERS trial # 2 : LOGISTIC :
Training";
MPRINT(EM_DIAGRAM):   train estiter=1 outest=_anest outfit=_anfit maxtime=889
maxiter=50 tech = Default;
WARNING: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 50 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANEST has 53 observations and 760 variables.
NOTE: The data set WORK._ANFIT has 104 observations and 36 variables.
MPRINT(EM_DIAGRAM):   ;
497196     train estiter=1 outest=_anest outfit=_anfit maxtime=889 maxiter=50
MPRINT(EM_DIAGRAM):   run;
497197     tech = Default;
497198     ;
497199     run;
 
NOTE: The data set WORK.EM_AUTONEURAL43 has 2374 observations and 15 variables.
NOTE: The data set EMWS8.META2_VALIDATE has . observations and 45 variables.
NOTE: View EMWS8.META2_VALIDATE.VIEW used (Total process time):
      real time           37.32 seconds
      cpu time            37.23 seconds
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: Closing the Neural Application.
NOTE: The PROCEDURE NEURAL printed page 436.
NOTE: PROCEDURE NEURAL used (Total process time):
      real time           37.32 seconds
      cpu time            37.23 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
497200     *;
497201     proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
MPRINT(EM_DIAGRAM):   proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
497202     var _iter_ _aic_ _averr_ _misc_
497203     _vaverr_ _vmisc_
497204     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
497205     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _name_='OVERALL';
NOTE: The PROCEDURE PRINT printed page 437.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Extract best iteration;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
497206     *------------------------------------------------------------*;
497207     * Extract best iteration;
497208     ;
497209     *------------------------------------------------------------*;
497210     %global _iter;
497211     data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
497212     set _anfit(where=(_NAME_ eq 'OVERALL'));
MPRINT(EM_DIAGRAM):   set _anfit(where=(_NAME_ eq 'OVERALL'));
497213     retain _min 1e+64;
MPRINT(EM_DIAGRAM):   retain _min 1e+64;
497214     if _VMISC_ < _min then do;
MPRINT(EM_DIAGRAM):   if _VMISC_ < _min then do;
497215     _min = _VMISC_;
MPRINT(EM_DIAGRAM):   _min = _VMISC_;
497216     call symput('_iter',put(_ITER_, 6.));
MPRINT(EM_DIAGRAM):   call symput('_iter',put(_ITER_, 6.));
497217     end;
MPRINT(EM_DIAGRAM):   end;
497218     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _NAME_='OVERALL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
497219     *;
 
497220     data EMWS8.AutoNeural43_ESTDS;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural43_ESTDS;
497221     set _anest;
MPRINT(EM_DIAGRAM):   set _anest;
497222     if _ITER_ eq 39 then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 39 then do;
497223     output;
MPRINT(EM_DIAGRAM):   output;
497224     stop;
MPRINT(EM_DIAGRAM):   stop;
497225     end;
MPRINT(EM_DIAGRAM):   end;
497226     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 40 observations read from the data set WORK._ANEST.
NOTE: The data set EMWS8.AUTONEURAL43_ESTDS has 1 observations and 760
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
497227     *;
497228     data EMWS8.AutoNeural43_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural43_OUTFIT;
497229     set _anfit;
MPRINT(EM_DIAGRAM):   set _anfit;
497230     if _ITER_ eq 39 and _NAME_ eq "OVERALL" then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 39 and _NAME_ eq "OVERALL" then do;
497231     output;
MPRINT(EM_DIAGRAM):   output;
497232     stop;
MPRINT(EM_DIAGRAM):   stop;
497233     end;
MPRINT(EM_DIAGRAM):   end;
497234     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 80 observations read from the data set WORK._ANFIT.
NOTE: The data set EMWS8.AUTONEURAL43_OUTFIT has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
497235     *;
MPRINT(EM_DIAGRAM):    *;
497236     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
497237     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_selectediteration_title
497237   ! , NOQUOTE, _VMISC_))";
MPRINT(EM_DIAGRAM):   title10 "Selected Iteration based on _VMISC_";
497238     proc print data=EMWS8.AutoNeural43_OUTFIT noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural43_OUTFIT noobs;
497239     var _iter_ _aic_ _averr_ _misc_
497240     _vaverr_ _vmisc_
497241     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
497242     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL43_OUTFIT.
NOTE: The PROCEDURE PRINT printed page 438.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
497243     title9;
MPRINT(EM_DIAGRAM):   title9;
497244     title10;
MPRINT(EM_DIAGRAM):   title10;
497245     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
497246     set EMWS8.AutoNeural43_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural43_OUTFIT;
497247     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
497248     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL43_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
497249     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
497250     set EMWS8.AutoNeural43_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural43_OUTFIT;
497251     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
497252     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL43_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
497253     * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
497254     ;
MPRINT(EM_DIAGRAM):   ;
497255     data EMWS8.AutoNeural43_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural43_OUTFIT;
497256     set EMWS8.AutoNeural43_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural43_OUTFIT;
497257     length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
497258     _func_ = "LOGISTIC";
MPRINT(EM_DIAGRAM):   _func_ = "LOGISTIC";
497259     _status_ = "reject";
MPRINT(EM_DIAGRAM):   _status_ = "reject";
497260     _step_ = "FUNNEL LAYERS 3";
MPRINT(EM_DIAGRAM):   _step_ = "FUNNEL LAYERS 3";
497261     _index_ = 3;
MPRINT(EM_DIAGRAM):   _index_ = 3;
497262     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL43_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL43_OUTFIT has 1 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
497263     data EMWS8.AutoNeural43_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural43_HISTORY;
497264     set EMWS8.AutoNeural43_HISTORY EMWS8.AutoNeural43_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural43_HISTORY EMWS8.AutoNeural43_OUTFIT;
497265     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 12 observations read from the data set
      EMWS8.AUTONEURAL43_HISTORY.
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL43_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL43_HISTORY has 13 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
497266     * SEARCH: recall starting estimates;
MPRINT(EM_DIAGRAM):    * SEARCH: recall starting estimates;
497267     ;
MPRINT(EM_DIAGRAM):   ;
497268     data EMWS8.AutoNeural43_ESTDS;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural43_ESTDS;
497269     set EMWS8.AutoNeural43_BESTDS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural43_BESTDS;
497270     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL43_BESTDS.
NOTE: The data set EMWS8.AUTONEURAL43_ESTDS has 1 observations and 361
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
497271     *;
MPRINT(EM_DIAGRAM):    *;
497272     proc neural data=EM_AutoNeural43 dmdbcat=WORK.AutoNeural43_DMDB
497273     validdata=EMWS8.Meta2_VALIDATE
497274     ;
MPRINT(EM_DIAGRAM):   proc neural data=EM_AutoNeural43
dmdbcat=WORK.AutoNeural43_DMDB validdata=EMWS8.Meta2_VALIDATE ;
497275     *;
MPRINT(EM_DIAGRAM):   *;
497276     nloptions noprint;
MPRINT(EM_DIAGRAM):   nloptions noprint;
497277     performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   input
497278     input %INTINPUTS / level=interval id=interval;
MPRINT(INTINPUTS):   AcceptedCmpTotal Frq Income Mnt MntGoldProds
MntMeatProducts NumCatalogPurchases NumDealsPurchases NumWebVisitsMonth RFMstat
Recency Teenhome Year_Birth
MPRINT(EM_DIAGRAM):   / level=interval id=interval;
MPRINT(EM_DIAGRAM):   input
497279     input %NOMINPUTS / level=nominal id=nominal;
MPRINT(NOMINPUTS):   Marital_Status
MPRINT(EM_DIAGRAM):   / level=nominal id=nominal;
497280     target DepVar / level=NOMINAL id=DepVar
497281     ;
MPRINT(EM_DIAGRAM):   target DepVar / level=NOMINAL id=DepVar ;
497282     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
497283     * Layer #1;
MPRINT(EM_DIAGRAM):   * Layer #1;
497284     ;
MPRINT(EM_DIAGRAM):   ;
497285     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
497286     Hidden 7 / id = H1x1_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 7 / id = H1x1_ act=SOFTMAX;
497287     connect interval H1x1_;
MPRINT(EM_DIAGRAM):   connect interval H1x1_;
497288     connect nominal H1x1_;
MPRINT(EM_DIAGRAM):   connect nominal H1x1_;
497289     Hidden 7 / id = H1x2_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 7 / id = H1x2_ act=SOFTMAX;
497290     connect interval H1x2_;
MPRINT(EM_DIAGRAM):   connect interval H1x2_;
497291     connect nominal H1x2_;
MPRINT(EM_DIAGRAM):   connect nominal H1x2_;
497292     Hidden 7 / id = H1x3_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 7 / id = H1x3_ act=SOFTMAX;
497293     connect interval H1x3_;
MPRINT(EM_DIAGRAM):   connect interval H1x3_;
497294     connect nominal H1x3_;
MPRINT(EM_DIAGRAM):   connect nominal H1x3_;
497295     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
497296     * Layer #2;
MPRINT(EM_DIAGRAM):   * Layer #2;
497297     ;
MPRINT(EM_DIAGRAM):   ;
497298     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
497299     Hidden 7 / id = H2x1_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 7 / id = H2x1_ act=LOG;
497300     connect H1x1_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x1_ H2x1_;
497301     connect H1x2_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x2_ H2x1_;
497302     connect H1x3_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x3_ H2x1_;
497303     Hidden 7 / id = H2x2_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 7 / id = H2x2_ act=LOG;
497304     connect H1x1_ H2x2_;
MPRINT(EM_DIAGRAM):   connect H1x1_ H2x2_;
497305     connect H1x2_ H2x2_;
MPRINT(EM_DIAGRAM):   connect H1x2_ H2x2_;
497306     connect H1x3_ H2x2_;
MPRINT(EM_DIAGRAM):   connect H1x3_ H2x2_;
497307     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
497308     * Layer #3;
MPRINT(EM_DIAGRAM):   * Layer #3;
497309     ;
MPRINT(EM_DIAGRAM):   ;
497310     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
497311     Hidden 7 / id = H3x1_ act=SINE;
MPRINT(EM_DIAGRAM):   Hidden 7 / id = H3x1_ act=SINE;
497312     connect H2x1_ H3x1_;
MPRINT(EM_DIAGRAM):   connect H2x1_ H3x1_;
497313     connect H2x2_ H3x1_;
MPRINT(EM_DIAGRAM):   connect H2x2_ H3x1_;
497314     connect H3x1_ DepVar;
MPRINT(EM_DIAGRAM):   connect H3x1_ DepVar;
497315     *;
MPRINT(EM_DIAGRAM):   *;
497316     netoptions ranscale = 1;
MPRINT(EM_DIAGRAM):   netoptions ranscale = 1;
497317     *;
MPRINT(EM_DIAGRAM):   *;
497318     initial
497319     inest = EMWS8.AutoNeural43_ESTDS bylabel;
MPRINT(EM_DIAGRAM):   initial inest = EMWS8.AutoNeural43_ESTDS bylabel;
NOTE: The data set EMWS8.AUTONEURAL43_ESTDS has 1 observations and 361
      variables.
497320     ;
MPRINT(EM_DIAGRAM):   ;
497321     *;
MPRINT(EM_DIAGRAM):   *;
497322     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
497323     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_prelim_title  ,NOQUOTE,
497323   ! Search # 3 FUNNEL LAYERS trial # 3 : SINE : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 3 FUNNEL LAYERS trial # 3 : SINE :
Prelim";
497324     prelim 32 outest=_anpre pretime=30 preiter=25
MPRINT(EM_DIAGRAM):   prelim 32 outest=_anpre pretime=30 preiter=25 tech =
Default inest = EMWS8.AutoNeural43_ESTDS bylabel ;
NOTE:  Synchronizing the objectives and the Solution.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANPRE has 65 observations and 760 variables.
NOTE: The data set EMWS8.AUTONEURAL43_ESTDS has 1 observations and 361
      variables.
MPRINT(EM_DIAGRAM):   *;
497325     tech = Default
497326     inest = EMWS8.AutoNeural43_ESTDS bylabel
497327     ;
497328     *;
497329     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
497330     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_train_title  ,NOQUOTE,
497330   ! Search # 3 FUNNEL LAYERS trial # 3 : SINE : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 3 FUNNEL LAYERS trial # 3 : SINE :
Training";
MPRINT(EM_DIAGRAM):   train estiter=1 outest=_anest outfit=_anfit maxtime=879
maxiter=50 tech = Default;
WARNING: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 50 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANEST has 53 observations and 760 variables.
NOTE: The data set WORK._ANFIT has 104 observations and 36 variables.
MPRINT(EM_DIAGRAM):   ;
497331     train estiter=1 outest=_anest outfit=_anfit maxtime=879 maxiter=50
MPRINT(EM_DIAGRAM):   run;
497332     tech = Default;
497333     ;
497334     run;
 
NOTE: The data set WORK.EM_AUTONEURAL43 has 2374 observations and 15 variables.
NOTE: The data set EMWS8.META2_VALIDATE has . observations and 45 variables.
NOTE: View EMWS8.META2_VALIDATE.VIEW used (Total process time):
      real time           35.14 seconds
      cpu time            35.06 seconds
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: Closing the Neural Application.
NOTE: The PROCEDURE NEURAL printed page 439.
NOTE: PROCEDURE NEURAL used (Total process time):
      real time           35.14 seconds
      cpu time            35.06 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
497335     *;
497336     proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
MPRINT(EM_DIAGRAM):   proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
497337     var _iter_ _aic_ _averr_ _misc_
497338     _vaverr_ _vmisc_
497339     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
497340     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _name_='OVERALL';
NOTE: The PROCEDURE PRINT printed page 440.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Extract best iteration;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
497341     *------------------------------------------------------------*;
497342     * Extract best iteration;
497343     ;
497344     *------------------------------------------------------------*;
497345     %global _iter;
497346     data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
497347     set _anfit(where=(_NAME_ eq 'OVERALL'));
MPRINT(EM_DIAGRAM):   set _anfit(where=(_NAME_ eq 'OVERALL'));
497348     retain _min 1e+64;
MPRINT(EM_DIAGRAM):   retain _min 1e+64;
497349     if _VMISC_ < _min then do;
MPRINT(EM_DIAGRAM):   if _VMISC_ < _min then do;
497350     _min = _VMISC_;
MPRINT(EM_DIAGRAM):   _min = _VMISC_;
497351     call symput('_iter',put(_ITER_, 6.));
MPRINT(EM_DIAGRAM):   call symput('_iter',put(_ITER_, 6.));
497352     end;
MPRINT(EM_DIAGRAM):   end;
497353     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _NAME_='OVERALL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
497354     *;
 
497355     data EMWS8.AutoNeural43_ESTDS;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural43_ESTDS;
497356     set _anest;
MPRINT(EM_DIAGRAM):   set _anest;
497357     if _ITER_ eq 36 then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 36 then do;
497358     output;
MPRINT(EM_DIAGRAM):   output;
497359     stop;
MPRINT(EM_DIAGRAM):   stop;
497360     end;
MPRINT(EM_DIAGRAM):   end;
497361     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 37 observations read from the data set WORK._ANEST.
NOTE: The data set EMWS8.AUTONEURAL43_ESTDS has 1 observations and 760
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
497362     *;
497363     data EMWS8.AutoNeural43_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural43_OUTFIT;
497364     set _anfit;
MPRINT(EM_DIAGRAM):   set _anfit;
497365     if _ITER_ eq 36 and _NAME_ eq "OVERALL" then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 36 and _NAME_ eq "OVERALL" then do;
497366     output;
MPRINT(EM_DIAGRAM):   output;
497367     stop;
MPRINT(EM_DIAGRAM):   stop;
497368     end;
MPRINT(EM_DIAGRAM):   end;
497369     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 74 observations read from the data set WORK._ANFIT.
NOTE: The data set EMWS8.AUTONEURAL43_OUTFIT has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
497370     *;
MPRINT(EM_DIAGRAM):    *;
497371     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
497372     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_selectediteration_title
497372   ! , NOQUOTE, _VMISC_))";
MPRINT(EM_DIAGRAM):   title10 "Selected Iteration based on _VMISC_";
497373     proc print data=EMWS8.AutoNeural43_OUTFIT noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural43_OUTFIT noobs;
497374     var _iter_ _aic_ _averr_ _misc_
497375     _vaverr_ _vmisc_
497376     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
497377     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL43_OUTFIT.
NOTE: The PROCEDURE PRINT printed page 441.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
497378     title9;
MPRINT(EM_DIAGRAM):   title9;
497379     title10;
MPRINT(EM_DIAGRAM):   title10;
497380     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
497381     set EMWS8.AutoNeural43_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural43_OUTFIT;
497382     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
497383     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL43_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
497384     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
497385     set EMWS8.AutoNeural43_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural43_OUTFIT;
497386     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
497387     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL43_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
497388     * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
497389     ;
MPRINT(EM_DIAGRAM):   ;
497390     data EMWS8.AutoNeural43_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural43_OUTFIT;
497391     set EMWS8.AutoNeural43_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural43_OUTFIT;
497392     length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
497393     _func_ = "SINE";
MPRINT(EM_DIAGRAM):   _func_ = "SINE";
497394     _status_ = "reject";
MPRINT(EM_DIAGRAM):   _status_ = "reject";
497395     _step_ = "FUNNEL LAYERS 3";
MPRINT(EM_DIAGRAM):   _step_ = "FUNNEL LAYERS 3";
497396     _index_ = 3;
MPRINT(EM_DIAGRAM):   _index_ = 3;
497397     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL43_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL43_OUTFIT has 1 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
497398     data EMWS8.AutoNeural43_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural43_HISTORY;
497399     set EMWS8.AutoNeural43_HISTORY EMWS8.AutoNeural43_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural43_HISTORY EMWS8.AutoNeural43_OUTFIT;
497400     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 13 observations read from the data set
      EMWS8.AUTONEURAL43_HISTORY.
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL43_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL43_HISTORY has 14 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
497401     * SEARCH: recall starting estimates;
MPRINT(EM_DIAGRAM):    * SEARCH: recall starting estimates;
497402     ;
MPRINT(EM_DIAGRAM):   ;
497403     data EMWS8.AutoNeural43_ESTDS;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural43_ESTDS;
497404     set EMWS8.AutoNeural43_BESTDS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural43_BESTDS;
497405     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL43_BESTDS.
NOTE: The data set EMWS8.AUTONEURAL43_ESTDS has 1 observations and 361
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
497406     *;
MPRINT(EM_DIAGRAM):    *;
497407     proc neural data=EM_AutoNeural43 dmdbcat=WORK.AutoNeural43_DMDB
497408     validdata=EMWS8.Meta2_VALIDATE
497409     ;
MPRINT(EM_DIAGRAM):   proc neural data=EM_AutoNeural43
dmdbcat=WORK.AutoNeural43_DMDB validdata=EMWS8.Meta2_VALIDATE ;
497410     *;
MPRINT(EM_DIAGRAM):   *;
497411     nloptions noprint;
MPRINT(EM_DIAGRAM):   nloptions noprint;
497412     performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   input
497413     input %INTINPUTS / level=interval id=interval;
MPRINT(INTINPUTS):   AcceptedCmpTotal Frq Income Mnt MntGoldProds
MntMeatProducts NumCatalogPurchases NumDealsPurchases NumWebVisitsMonth RFMstat
Recency Teenhome Year_Birth
MPRINT(EM_DIAGRAM):   / level=interval id=interval;
MPRINT(EM_DIAGRAM):   input
497414     input %NOMINPUTS / level=nominal id=nominal;
MPRINT(NOMINPUTS):   Marital_Status
MPRINT(EM_DIAGRAM):   / level=nominal id=nominal;
497415     target DepVar / level=NOMINAL id=DepVar
497416     ;
MPRINT(EM_DIAGRAM):   target DepVar / level=NOMINAL id=DepVar ;
497417     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
497418     * Layer #1;
MPRINT(EM_DIAGRAM):   * Layer #1;
497419     ;
MPRINT(EM_DIAGRAM):   ;
497420     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
497421     Hidden 7 / id = H1x1_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 7 / id = H1x1_ act=SOFTMAX;
497422     connect interval H1x1_;
MPRINT(EM_DIAGRAM):   connect interval H1x1_;
497423     connect nominal H1x1_;
MPRINT(EM_DIAGRAM):   connect nominal H1x1_;
497424     Hidden 7 / id = H1x2_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 7 / id = H1x2_ act=SOFTMAX;
497425     connect interval H1x2_;
MPRINT(EM_DIAGRAM):   connect interval H1x2_;
497426     connect nominal H1x2_;
MPRINT(EM_DIAGRAM):   connect nominal H1x2_;
497427     Hidden 7 / id = H1x3_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 7 / id = H1x3_ act=SOFTMAX;
497428     connect interval H1x3_;
MPRINT(EM_DIAGRAM):   connect interval H1x3_;
497429     connect nominal H1x3_;
MPRINT(EM_DIAGRAM):   connect nominal H1x3_;
497430     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
497431     * Layer #2;
MPRINT(EM_DIAGRAM):   * Layer #2;
497432     ;
MPRINT(EM_DIAGRAM):   ;
497433     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
497434     Hidden 7 / id = H2x1_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 7 / id = H2x1_ act=LOG;
497435     connect H1x1_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x1_ H2x1_;
497436     connect H1x2_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x2_ H2x1_;
497437     connect H1x3_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x3_ H2x1_;
497438     Hidden 7 / id = H2x2_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 7 / id = H2x2_ act=LOG;
497439     connect H1x1_ H2x2_;
MPRINT(EM_DIAGRAM):   connect H1x1_ H2x2_;
497440     connect H1x2_ H2x2_;
MPRINT(EM_DIAGRAM):   connect H1x2_ H2x2_;
497441     connect H1x3_ H2x2_;
MPRINT(EM_DIAGRAM):   connect H1x3_ H2x2_;
497442     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
497443     * Layer #3;
MPRINT(EM_DIAGRAM):   * Layer #3;
497444     ;
MPRINT(EM_DIAGRAM):   ;
497445     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
497446     Hidden 7 / id = H3x1_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 7 / id = H3x1_ act=SOFTMAX;
497447     connect H2x1_ H3x1_;
MPRINT(EM_DIAGRAM):   connect H2x1_ H3x1_;
497448     connect H2x2_ H3x1_;
MPRINT(EM_DIAGRAM):   connect H2x2_ H3x1_;
497449     connect H3x1_ DepVar;
MPRINT(EM_DIAGRAM):   connect H3x1_ DepVar;
497450     *;
MPRINT(EM_DIAGRAM):   *;
497451     netoptions ranscale = 1;
MPRINT(EM_DIAGRAM):   netoptions ranscale = 1;
497452     *;
MPRINT(EM_DIAGRAM):   *;
497453     initial
497454     inest = EMWS8.AutoNeural43_ESTDS bylabel;
MPRINT(EM_DIAGRAM):   initial inest = EMWS8.AutoNeural43_ESTDS bylabel;
NOTE: The data set EMWS8.AUTONEURAL43_ESTDS has 1 observations and 361
      variables.
497455     ;
MPRINT(EM_DIAGRAM):   ;
497456     *;
MPRINT(EM_DIAGRAM):   *;
497457     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
497458     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_prelim_title  ,NOQUOTE,
497458   ! Search # 3 FUNNEL LAYERS trial # 4 : SOFTMAX : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 3 FUNNEL LAYERS trial # 4 : SOFTMAX :
Prelim";
497459     prelim 32 outest=_anpre pretime=30 preiter=25
MPRINT(EM_DIAGRAM):   prelim 32 outest=_anpre pretime=30 preiter=25 tech =
Default inest = EMWS8.AutoNeural43_ESTDS bylabel ;
NOTE:  Synchronizing the objectives and the Solution.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANPRE has 65 observations and 745 variables.
NOTE: The data set EMWS8.AUTONEURAL43_ESTDS has 1 observations and 361
      variables.
MPRINT(EM_DIAGRAM):   *;
497460     tech = Default
497461     inest = EMWS8.AutoNeural43_ESTDS bylabel
497462     ;
497463     *;
497464     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
497465     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_train_title  ,NOQUOTE,
497465   ! Search # 3 FUNNEL LAYERS trial # 4 : SOFTMAX : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 3 FUNNEL LAYERS trial # 4 : SOFTMAX :
Training";
MPRINT(EM_DIAGRAM):   train estiter=1 outest=_anest outfit=_anfit maxtime=870
maxiter=50 tech = Default;
WARNING: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 50 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANEST has 53 observations and 745 variables.
NOTE: The data set WORK._ANFIT has 104 observations and 36 variables.
MPRINT(EM_DIAGRAM):   ;
497466     train estiter=1 outest=_anest outfit=_anfit maxtime=870 maxiter=50
MPRINT(EM_DIAGRAM):   run;
497467     tech = Default;
497468     ;
497469     run;
 
NOTE: The data set WORK.EM_AUTONEURAL43 has 2374 observations and 15 variables.
NOTE: The data set EMWS8.META2_VALIDATE has . observations and 45 variables.
NOTE: View EMWS8.META2_VALIDATE.VIEW used (Total process time):
      real time           37.79 seconds
      cpu time            37.73 seconds
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: Closing the Neural Application.
NOTE: The PROCEDURE NEURAL printed page 442.
NOTE: PROCEDURE NEURAL used (Total process time):
      real time           37.79 seconds
      cpu time            37.73 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
497470     *;
497471     proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
MPRINT(EM_DIAGRAM):   proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
497472     var _iter_ _aic_ _averr_ _misc_
497473     _vaverr_ _vmisc_
497474     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
497475     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _name_='OVERALL';
NOTE: The PROCEDURE PRINT printed page 443.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Extract best iteration;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
497476     *------------------------------------------------------------*;
497477     * Extract best iteration;
497478     ;
497479     *------------------------------------------------------------*;
497480     %global _iter;
497481     data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
497482     set _anfit(where=(_NAME_ eq 'OVERALL'));
MPRINT(EM_DIAGRAM):   set _anfit(where=(_NAME_ eq 'OVERALL'));
497483     retain _min 1e+64;
MPRINT(EM_DIAGRAM):   retain _min 1e+64;
497484     if _VMISC_ < _min then do;
MPRINT(EM_DIAGRAM):   if _VMISC_ < _min then do;
497485     _min = _VMISC_;
MPRINT(EM_DIAGRAM):   _min = _VMISC_;
497486     call symput('_iter',put(_ITER_, 6.));
MPRINT(EM_DIAGRAM):   call symput('_iter',put(_ITER_, 6.));
497487     end;
MPRINT(EM_DIAGRAM):   end;
497488     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _NAME_='OVERALL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
497489     *;
 
497490     data EMWS8.AutoNeural43_ESTDS;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural43_ESTDS;
497491     set _anest;
MPRINT(EM_DIAGRAM):   set _anest;
497492     if _ITER_ eq 19 then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 19 then do;
497493     output;
MPRINT(EM_DIAGRAM):   output;
497494     stop;
MPRINT(EM_DIAGRAM):   stop;
497495     end;
MPRINT(EM_DIAGRAM):   end;
497496     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 20 observations read from the data set WORK._ANEST.
NOTE: The data set EMWS8.AUTONEURAL43_ESTDS has 1 observations and 745
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
497497     *;
497498     data EMWS8.AutoNeural43_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural43_OUTFIT;
497499     set _anfit;
MPRINT(EM_DIAGRAM):   set _anfit;
497500     if _ITER_ eq 19 and _NAME_ eq "OVERALL" then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 19 and _NAME_ eq "OVERALL" then do;
497501     output;
MPRINT(EM_DIAGRAM):   output;
497502     stop;
MPRINT(EM_DIAGRAM):   stop;
497503     end;
MPRINT(EM_DIAGRAM):   end;
497504     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 40 observations read from the data set WORK._ANFIT.
NOTE: The data set EMWS8.AUTONEURAL43_OUTFIT has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
497505     *;
MPRINT(EM_DIAGRAM):    *;
497506     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
497507     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_selectediteration_title
497507   ! , NOQUOTE, _VMISC_))";
MPRINT(EM_DIAGRAM):   title10 "Selected Iteration based on _VMISC_";
497508     proc print data=EMWS8.AutoNeural43_OUTFIT noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural43_OUTFIT noobs;
497509     var _iter_ _aic_ _averr_ _misc_
497510     _vaverr_ _vmisc_
497511     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
497512     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL43_OUTFIT.
NOTE: The PROCEDURE PRINT printed page 444.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
497513     title9;
MPRINT(EM_DIAGRAM):   title9;
497514     title10;
MPRINT(EM_DIAGRAM):   title10;
497515     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
497516     set EMWS8.AutoNeural43_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural43_OUTFIT;
497517     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
497518     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL43_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
497519     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
497520     set EMWS8.AutoNeural43_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural43_OUTFIT;
497521     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
497522     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL43_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
497523     *SEARCH: copy estimates and fit to best buffer;
MPRINT(EM_DIAGRAM):    *SEARCH: copy estimates and fit to best buffer;
497524     ;
MPRINT(EM_DIAGRAM):   ;
497525     data WORK.SAVEDS_AUTONEUR_3IW3VMD;
MPRINT(EM_DIAGRAM):   data WORK.SAVEDS_AUTONEUR_3IW3VMD;
497526     set EMWS8.AutoNeural43_ESTDS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural43_ESTDS;
497527     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.AUTONEURAL43_ESTDS.
NOTE: The data set WORK.SAVEDS_AUTONEUR_3IW3VMD has 1 observations and 745
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
497528     data EMWS8.AutoNeural43_BESTDS;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural43_BESTDS;
497529     set EMWS8.AutoNeural43_ESTDS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural43_ESTDS;
497530     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.AUTONEURAL43_ESTDS.
NOTE: The data set EMWS8.AUTONEURAL43_BESTDS has 1 observations and 745
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
497531     data WORK.BFITDS_AUTONEUR_3IW3VMD;
MPRINT(EM_DIAGRAM):   data WORK.BFITDS_AUTONEUR_3IW3VMD;
497532     set EMWS8.AutoNeural43_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural43_OUTFIT;
497533     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL43_OUTFIT.
NOTE: The data set WORK.BFITDS_AUTONEUR_3IW3VMD has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
497534     * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
497535     ;
MPRINT(EM_DIAGRAM):   ;
497536     data EMWS8.AutoNeural43_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural43_OUTFIT;
497537     set EMWS8.AutoNeural43_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural43_OUTFIT;
497538     length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
497539     _func_ = "SOFTMAX";
MPRINT(EM_DIAGRAM):   _func_ = "SOFTMAX";
497540     _status_ = "candidate";
MPRINT(EM_DIAGRAM):   _status_ = "candidate";
497541     _step_ = "FUNNEL LAYERS 3";
MPRINT(EM_DIAGRAM):   _step_ = "FUNNEL LAYERS 3";
497542     _index_ = 3;
MPRINT(EM_DIAGRAM):   _index_ = 3;
497543     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL43_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL43_OUTFIT has 1 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
497544     data EMWS8.AutoNeural43_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural43_HISTORY;
497545     set EMWS8.AutoNeural43_HISTORY EMWS8.AutoNeural43_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural43_HISTORY EMWS8.AutoNeural43_OUTFIT;
497546     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 14 observations read from the data set
      EMWS8.AUTONEURAL43_HISTORY.
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL43_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL43_HISTORY has 15 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
497547     *SEARCH: recall best estimates and fit;
MPRINT(EM_DIAGRAM):    *SEARCH: recall best estimates and fit;
497548     ;
MPRINT(EM_DIAGRAM):   ;
497549     data EMWS8.AutoNeural43_ESTDS;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural43_ESTDS;
497550     set EMWS8.AutoNeural43_BESTDS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural43_BESTDS;
497551     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL43_BESTDS.
NOTE: The data set EMWS8.AUTONEURAL43_ESTDS has 1 observations and 745
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
497552     data EMWS8.AutoNeural43_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural43_OUTFIT;
497553     set WORK.BFITDS_AUTONEUR_3IW3VMD;
MPRINT(EM_DIAGRAM):   set WORK.BFITDS_AUTONEUR_3IW3VMD;
497554     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      WORK.BFITDS_AUTONEUR_3IW3VMD.
NOTE: The data set EMWS8.AUTONEURAL43_OUTFIT has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
497555     * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
497556     ;
MPRINT(EM_DIAGRAM):   ;
497557     data EMWS8.AutoNeural43_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural43_OUTFIT;
497558     set EMWS8.AutoNeural43_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural43_OUTFIT;
497559     length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
497560     _func_ = "SOFTMAX";
MPRINT(EM_DIAGRAM):   _func_ = "SOFTMAX";
497561     _status_ = "keep";
MPRINT(EM_DIAGRAM):   _status_ = "keep";
497562     _step_ = "FUNNEL LAYERS 3";
MPRINT(EM_DIAGRAM):   _step_ = "FUNNEL LAYERS 3";
497563     _index_ = 3;
MPRINT(EM_DIAGRAM):   _index_ = 3;
497564     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL43_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL43_OUTFIT has 1 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
497565     data EMWS8.AutoNeural43_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural43_HISTORY;
497566     set EMWS8.AutoNeural43_HISTORY EMWS8.AutoNeural43_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural43_HISTORY EMWS8.AutoNeural43_OUTFIT;
497567     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 15 observations read from the data set
      EMWS8.AUTONEURAL43_HISTORY.
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL43_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL43_HISTORY has 16 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
497568     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
497569     set EMWS8.AutoNeural43_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural43_OUTFIT;
497570     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
497571     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL43_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 40 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
497572     *;
MPRINT(EM_DIAGRAM):    *;
497573     proc neural data=EM_AutoNeural43 dmdbcat=WORK.AutoNeural43_DMDB
497574     validdata=EMWS8.Meta2_VALIDATE
497575     ;
MPRINT(EM_DIAGRAM):   proc neural data=EM_AutoNeural43
dmdbcat=WORK.AutoNeural43_DMDB validdata=EMWS8.Meta2_VALIDATE ;
497576     *;
MPRINT(EM_DIAGRAM):   *;
497577     nloptions noprint;
MPRINT(EM_DIAGRAM):   nloptions noprint;
497578     performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   input
497579     input %INTINPUTS / level=interval id=interval;
MPRINT(INTINPUTS):   AcceptedCmpTotal Frq Income Mnt MntGoldProds
MntMeatProducts NumCatalogPurchases NumDealsPurchases NumWebVisitsMonth RFMstat
Recency Teenhome Year_Birth
MPRINT(EM_DIAGRAM):   / level=interval id=interval;
MPRINT(EM_DIAGRAM):   input
497580     input %NOMINPUTS / level=nominal id=nominal;
MPRINT(NOMINPUTS):   Marital_Status
MPRINT(EM_DIAGRAM):   / level=nominal id=nominal;
497581     target DepVar / level=NOMINAL id=DepVar
497582     ;
MPRINT(EM_DIAGRAM):   target DepVar / level=NOMINAL id=DepVar ;
497583     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
497584     * Direct connection;
MPRINT(EM_DIAGRAM):   * Direct connection;
497585     ;
MPRINT(EM_DIAGRAM):   ;
497586     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
497587     connect interval DepVar;
MPRINT(EM_DIAGRAM):   connect interval DepVar;
497588     connect nominal DepVar;
MPRINT(EM_DIAGRAM):   connect nominal DepVar;
497589     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
497590     * Layer #1;
MPRINT(EM_DIAGRAM):   * Layer #1;
497591     ;
MPRINT(EM_DIAGRAM):   ;
497592     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
497593     Hidden 7 / id = H1x1_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 7 / id = H1x1_ act=SOFTMAX;
497594     connect interval H1x1_;
MPRINT(EM_DIAGRAM):   connect interval H1x1_;
497595     connect nominal H1x1_;
MPRINT(EM_DIAGRAM):   connect nominal H1x1_;
497596     Hidden 7 / id = H1x2_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 7 / id = H1x2_ act=SOFTMAX;
497597     connect interval H1x2_;
MPRINT(EM_DIAGRAM):   connect interval H1x2_;
497598     connect nominal H1x2_;
MPRINT(EM_DIAGRAM):   connect nominal H1x2_;
497599     Hidden 7 / id = H1x3_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 7 / id = H1x3_ act=SOFTMAX;
497600     connect interval H1x3_;
MPRINT(EM_DIAGRAM):   connect interval H1x3_;
497601     connect nominal H1x3_;
MPRINT(EM_DIAGRAM):   connect nominal H1x3_;
497602     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
497603     * Layer #2;
MPRINT(EM_DIAGRAM):   * Layer #2;
497604     ;
MPRINT(EM_DIAGRAM):   ;
497605     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
497606     Hidden 7 / id = H2x1_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 7 / id = H2x1_ act=LOG;
497607     connect H1x1_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x1_ H2x1_;
497608     connect H1x2_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x2_ H2x1_;
497609     connect H1x3_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x3_ H2x1_;
497610     Hidden 7 / id = H2x2_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 7 / id = H2x2_ act=LOG;
497611     connect H1x1_ H2x2_;
MPRINT(EM_DIAGRAM):   connect H1x1_ H2x2_;
497612     connect H1x2_ H2x2_;
MPRINT(EM_DIAGRAM):   connect H1x2_ H2x2_;
497613     connect H1x3_ H2x2_;
MPRINT(EM_DIAGRAM):   connect H1x3_ H2x2_;
497614     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
497615     * Layer #3;
MPRINT(EM_DIAGRAM):   * Layer #3;
497616     ;
MPRINT(EM_DIAGRAM):   ;
497617     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
497618     Hidden 7 / id = H3x1_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 7 / id = H3x1_ act=SOFTMAX;
497619     connect H2x1_ H3x1_;
MPRINT(EM_DIAGRAM):   connect H2x1_ H3x1_;
497620     connect H2x2_ H3x1_;
MPRINT(EM_DIAGRAM):   connect H2x2_ H3x1_;
497621     connect H3x1_ DepVar;
MPRINT(EM_DIAGRAM):   connect H3x1_ DepVar;
497622     *;
MPRINT(EM_DIAGRAM):   *;
497623     netoptions ranscale = 1;
MPRINT(EM_DIAGRAM):   netoptions ranscale = 1;
497624     *;
MPRINT(EM_DIAGRAM):   *;
497625     initial
497626     inest = EMWS8.AutoNeural43_ESTDS bylabel;
MPRINT(EM_DIAGRAM):   initial inest = EMWS8.AutoNeural43_ESTDS bylabel;
NOTE: The data set EMWS8.AUTONEURAL43_ESTDS has 1 observations and 745
      variables.
497627     ;
MPRINT(EM_DIAGRAM):   ;
497628     *;
MPRINT(EM_DIAGRAM):   *;
497629     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
497630     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_prelim_title  ,NOQUOTE,
497630   ! Search # 4 FUNNEL LAYERS trial # 1 : DIRECT : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 4 FUNNEL LAYERS trial # 1 : DIRECT :
Prelim";
497631     prelim 32 outest=_anpre pretime=30 preiter=25
MPRINT(EM_DIAGRAM):   prelim 32 outest=_anpre pretime=30 preiter=25 tech =
Default inest = EMWS8.AutoNeural43_ESTDS bylabel ;
NOTE:  Synchronizing the objectives and the Solution.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
The prelim will run only once. Use the randbias or randout option on the target
layer.
NOTE: The data set WORK._ANPRE has 3 observations and 762 variables.
NOTE: The data set EMWS8.AUTONEURAL43_ESTDS has 1 observations and 745
      variables.
MPRINT(EM_DIAGRAM):   *;
497632     tech = Default
497633     inest = EMWS8.AutoNeural43_ESTDS bylabel
497634     ;
497635     *;
497636     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
497637     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_train_title  ,NOQUOTE,
497637   ! Search # 4 FUNNEL LAYERS trial # 1 : DIRECT : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 4 FUNNEL LAYERS trial # 1 : DIRECT :
Training";
MPRINT(EM_DIAGRAM):   train estiter=1 outest=_anest outfit=_anfit maxtime=861
maxiter=50 tech = Default;
WARNING: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 50 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANEST has 53 observations and 762 variables.
NOTE: The data set WORK._ANFIT has 104 observations and 36 variables.
MPRINT(EM_DIAGRAM):   ;
497638     train estiter=1 outest=_anest outfit=_anfit maxtime=861 maxiter=50
MPRINT(EM_DIAGRAM):   run;
497639     tech = Default;
497640     ;
497641     run;
 
NOTE: The data set WORK.EM_AUTONEURAL43 has 2374 observations and 15 variables.
NOTE: The data set EMWS8.META2_VALIDATE has . observations and 45 variables.
NOTE: View EMWS8.META2_VALIDATE.VIEW used (Total process time):
      real time           3.32 seconds
      cpu time            3.27 seconds
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: Closing the Neural Application.
NOTE: The PROCEDURE NEURAL printed page 445.
NOTE: PROCEDURE NEURAL used (Total process time):
      real time           3.32 seconds
      cpu time            3.27 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
497642     *;
497643     proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
MPRINT(EM_DIAGRAM):   proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
497644     var _iter_ _aic_ _averr_ _misc_
497645     _vaverr_ _vmisc_
497646     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
497647     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _name_='OVERALL';
NOTE: The PROCEDURE PRINT printed page 446.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Extract best iteration;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
497648     *------------------------------------------------------------*;
497649     * Extract best iteration;
497650     ;
497651     *------------------------------------------------------------*;
497652     %global _iter;
497653     data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
497654     set _anfit(where=(_NAME_ eq 'OVERALL'));
MPRINT(EM_DIAGRAM):   set _anfit(where=(_NAME_ eq 'OVERALL'));
497655     retain _min 1e+64;
MPRINT(EM_DIAGRAM):   retain _min 1e+64;
497656     if _VMISC_ < _min then do;
MPRINT(EM_DIAGRAM):   if _VMISC_ < _min then do;
497657     _min = _VMISC_;
MPRINT(EM_DIAGRAM):   _min = _VMISC_;
497658     call symput('_iter',put(_ITER_, 6.));
MPRINT(EM_DIAGRAM):   call symput('_iter',put(_ITER_, 6.));
497659     end;
MPRINT(EM_DIAGRAM):   end;
497660     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _NAME_='OVERALL';
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
497661     *;
 
497662     data EMWS8.AutoNeural43_ESTDS;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural43_ESTDS;
497663     set _anest;
MPRINT(EM_DIAGRAM):   set _anest;
497664     if _ITER_ eq 38 then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 38 then do;
497665     output;
MPRINT(EM_DIAGRAM):   output;
497666     stop;
MPRINT(EM_DIAGRAM):   stop;
497667     end;
MPRINT(EM_DIAGRAM):   end;
497668     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._ANEST.
NOTE: The data set EMWS8.AUTONEURAL43_ESTDS has 1 observations and 762
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
497669     *;
497670     data EMWS8.AutoNeural43_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural43_OUTFIT;
497671     set _anfit;
MPRINT(EM_DIAGRAM):   set _anfit;
497672     if _ITER_ eq 38 and _NAME_ eq "OVERALL" then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 38 and _NAME_ eq "OVERALL" then do;
497673     output;
MPRINT(EM_DIAGRAM):   output;
497674     stop;
MPRINT(EM_DIAGRAM):   stop;
497675     end;
MPRINT(EM_DIAGRAM):   end;
497676     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 78 observations read from the data set WORK._ANFIT.
NOTE: The data set EMWS8.AUTONEURAL43_OUTFIT has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
497677     *;
MPRINT(EM_DIAGRAM):    *;
497678     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
497679     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_selectediteration_title
497679   ! , NOQUOTE, _VMISC_))";
MPRINT(EM_DIAGRAM):   title10 "Selected Iteration based on _VMISC_";
497680     proc print data=EMWS8.AutoNeural43_OUTFIT noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural43_OUTFIT noobs;
497681     var _iter_ _aic_ _averr_ _misc_
497682     _vaverr_ _vmisc_
497683     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
497684     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL43_OUTFIT.
NOTE: The PROCEDURE PRINT printed page 447.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
497685     title9;
MPRINT(EM_DIAGRAM):   title9;
497686     title10;
MPRINT(EM_DIAGRAM):   title10;
497687     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
497688     set EMWS8.AutoNeural43_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural43_OUTFIT;
497689     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
497690     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL43_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
497691     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
497692     set EMWS8.AutoNeural43_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural43_OUTFIT;
497693     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
497694     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL43_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
497695     *SEARCH: copy estimates and fit to best buffer;
MPRINT(EM_DIAGRAM):    *SEARCH: copy estimates and fit to best buffer;
497696     ;
MPRINT(EM_DIAGRAM):   ;
497697     data WORK.SAVEDS_AUTONEUR_3IW3VMD;
MPRINT(EM_DIAGRAM):   data WORK.SAVEDS_AUTONEUR_3IW3VMD;
497698     set EMWS8.AutoNeural43_ESTDS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural43_ESTDS;
497699     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.AUTONEURAL43_ESTDS.
NOTE: The data set WORK.SAVEDS_AUTONEUR_3IW3VMD has 1 observations and 762
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
497700     data EMWS8.AutoNeural43_BESTDS;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural43_BESTDS;
497701     set EMWS8.AutoNeural43_ESTDS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural43_ESTDS;
497702     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.AUTONEURAL43_ESTDS.
NOTE: The data set EMWS8.AUTONEURAL43_BESTDS has 1 observations and 762
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
497703     data WORK.BFITDS_AUTONEUR_3IW3VMD;
MPRINT(EM_DIAGRAM):   data WORK.BFITDS_AUTONEUR_3IW3VMD;
497704     set EMWS8.AutoNeural43_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural43_OUTFIT;
497705     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL43_OUTFIT.
NOTE: The data set WORK.BFITDS_AUTONEUR_3IW3VMD has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
497706     * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
497707     ;
MPRINT(EM_DIAGRAM):   ;
497708     data EMWS8.AutoNeural43_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural43_OUTFIT;
497709     set EMWS8.AutoNeural43_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural43_OUTFIT;
497710     length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
497711     _func_ = "DIRECT";
MPRINT(EM_DIAGRAM):   _func_ = "DIRECT";
497712     _status_ = "candidate";
MPRINT(EM_DIAGRAM):   _status_ = "candidate";
497713     _step_ = "FUNNEL LAYERS 4";
MPRINT(EM_DIAGRAM):   _step_ = "FUNNEL LAYERS 4";
497714     _index_ = 4;
MPRINT(EM_DIAGRAM):   _index_ = 4;
497715     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL43_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL43_OUTFIT has 1 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
497716     data EMWS8.AutoNeural43_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural43_HISTORY;
497717     set EMWS8.AutoNeural43_HISTORY EMWS8.AutoNeural43_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural43_HISTORY EMWS8.AutoNeural43_OUTFIT;
497718     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 16 observations read from the data set
      EMWS8.AUTONEURAL43_HISTORY.
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL43_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL43_HISTORY has 17 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
497719     * SEARCH: recall starting estimates;
MPRINT(EM_DIAGRAM):    * SEARCH: recall starting estimates;
497720     ;
MPRINT(EM_DIAGRAM):   ;
497721     data EMWS8.AutoNeural43_ESTDS;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural43_ESTDS;
497722     set EMWS8.AutoNeural43_BESTDS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural43_BESTDS;
497723     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL43_BESTDS.
NOTE: The data set EMWS8.AUTONEURAL43_ESTDS has 1 observations and 762
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
497724     *;
MPRINT(EM_DIAGRAM):    *;
497725     proc neural data=EM_AutoNeural43 dmdbcat=WORK.AutoNeural43_DMDB
497726     validdata=EMWS8.Meta2_VALIDATE
497727     ;
MPRINT(EM_DIAGRAM):   proc neural data=EM_AutoNeural43
dmdbcat=WORK.AutoNeural43_DMDB validdata=EMWS8.Meta2_VALIDATE ;
497728     *;
MPRINT(EM_DIAGRAM):   *;
497729     nloptions noprint;
MPRINT(EM_DIAGRAM):   nloptions noprint;
497730     performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   input
497731     input %INTINPUTS / level=interval id=interval;
MPRINT(INTINPUTS):   AcceptedCmpTotal Frq Income Mnt MntGoldProds
MntMeatProducts NumCatalogPurchases NumDealsPurchases NumWebVisitsMonth RFMstat
Recency Teenhome Year_Birth
MPRINT(EM_DIAGRAM):   / level=interval id=interval;
MPRINT(EM_DIAGRAM):   input
497732     input %NOMINPUTS / level=nominal id=nominal;
MPRINT(NOMINPUTS):   Marital_Status
MPRINT(EM_DIAGRAM):   / level=nominal id=nominal;
497733     target DepVar / level=NOMINAL id=DepVar
497734     ;
MPRINT(EM_DIAGRAM):   target DepVar / level=NOMINAL id=DepVar ;
497735     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
497736     * Layer #1;
MPRINT(EM_DIAGRAM):   * Layer #1;
497737     ;
MPRINT(EM_DIAGRAM):   ;
497738     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
497739     Hidden 7 / id = H1x1_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 7 / id = H1x1_ act=SOFTMAX;
497740     connect interval H1x1_;
MPRINT(EM_DIAGRAM):   connect interval H1x1_;
497741     connect nominal H1x1_;
MPRINT(EM_DIAGRAM):   connect nominal H1x1_;
497742     Hidden 7 / id = H1x2_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 7 / id = H1x2_ act=SOFTMAX;
497743     connect interval H1x2_;
MPRINT(EM_DIAGRAM):   connect interval H1x2_;
497744     connect nominal H1x2_;
MPRINT(EM_DIAGRAM):   connect nominal H1x2_;
497745     Hidden 7 / id = H1x3_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 7 / id = H1x3_ act=SOFTMAX;
497746     connect interval H1x3_;
MPRINT(EM_DIAGRAM):   connect interval H1x3_;
497747     connect nominal H1x3_;
MPRINT(EM_DIAGRAM):   connect nominal H1x3_;
497748     Hidden 7 / id = H1x4_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 7 / id = H1x4_ act=SOFTMAX;
497749     connect interval H1x4_;
MPRINT(EM_DIAGRAM):   connect interval H1x4_;
497750     connect nominal H1x4_;
MPRINT(EM_DIAGRAM):   connect nominal H1x4_;
497751     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
497752     * Layer #2;
MPRINT(EM_DIAGRAM):   * Layer #2;
497753     ;
MPRINT(EM_DIAGRAM):   ;
497754     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
497755     Hidden 7 / id = H2x1_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 7 / id = H2x1_ act=LOG;
497756     connect H1x1_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x1_ H2x1_;
497757     connect H1x2_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x2_ H2x1_;
497758     connect H1x3_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x3_ H2x1_;
497759     connect H1x4_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x4_ H2x1_;
497760     Hidden 7 / id = H2x2_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 7 / id = H2x2_ act=LOG;
497761     connect H1x1_ H2x2_;
MPRINT(EM_DIAGRAM):   connect H1x1_ H2x2_;
497762     connect H1x2_ H2x2_;
MPRINT(EM_DIAGRAM):   connect H1x2_ H2x2_;
497763     connect H1x3_ H2x2_;
MPRINT(EM_DIAGRAM):   connect H1x3_ H2x2_;
497764     connect H1x4_ H2x2_;
MPRINT(EM_DIAGRAM):   connect H1x4_ H2x2_;
497765     Hidden 7 / id = H2x3_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 7 / id = H2x3_ act=LOG;
497766     connect H1x1_ H2x3_;
MPRINT(EM_DIAGRAM):   connect H1x1_ H2x3_;
497767     connect H1x2_ H2x3_;
MPRINT(EM_DIAGRAM):   connect H1x2_ H2x3_;
497768     connect H1x3_ H2x3_;
MPRINT(EM_DIAGRAM):   connect H1x3_ H2x3_;
497769     connect H1x4_ H2x3_;
MPRINT(EM_DIAGRAM):   connect H1x4_ H2x3_;
497770     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
497771     * Layer #3;
MPRINT(EM_DIAGRAM):   * Layer #3;
497772     ;
MPRINT(EM_DIAGRAM):   ;
497773     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
497774     Hidden 7 / id = H3x1_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 7 / id = H3x1_ act=SOFTMAX;
497775     connect H2x1_ H3x1_;
MPRINT(EM_DIAGRAM):   connect H2x1_ H3x1_;
497776     connect H2x2_ H3x1_;
MPRINT(EM_DIAGRAM):   connect H2x2_ H3x1_;
497777     connect H2x3_ H3x1_;
MPRINT(EM_DIAGRAM):   connect H2x3_ H3x1_;
497778     Hidden 7 / id = H3x2_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 7 / id = H3x2_ act=SOFTMAX;
497779     connect H2x1_ H3x2_;
MPRINT(EM_DIAGRAM):   connect H2x1_ H3x2_;
497780     connect H2x2_ H3x2_;
MPRINT(EM_DIAGRAM):   connect H2x2_ H3x2_;
497781     connect H2x3_ H3x2_;
MPRINT(EM_DIAGRAM):   connect H2x3_ H3x2_;
497782     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
497783     * Layer #4;
MPRINT(EM_DIAGRAM):   * Layer #4;
497784     ;
MPRINT(EM_DIAGRAM):   ;
497785     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
497786     Hidden 7 / id = H4x1_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 7 / id = H4x1_ act=LOG;
497787     connect H3x1_ H4x1_;
MPRINT(EM_DIAGRAM):   connect H3x1_ H4x1_;
497788     connect H3x2_ H4x1_;
MPRINT(EM_DIAGRAM):   connect H3x2_ H4x1_;
497789     connect H4x1_ DepVar;
MPRINT(EM_DIAGRAM):   connect H4x1_ DepVar;
497790     *;
MPRINT(EM_DIAGRAM):   *;
497791     netoptions ranscale = 1;
MPRINT(EM_DIAGRAM):   netoptions ranscale = 1;
497792     *;
MPRINT(EM_DIAGRAM):   *;
497793     initial
The SAS System
 
497794     inest = EMWS8.AutoNeural43_ESTDS bylabel;
MPRINT(EM_DIAGRAM):   initial inest = EMWS8.AutoNeural43_ESTDS bylabel;
NOTE: The data set EMWS8.AUTONEURAL43_ESTDS has 1 observations and 762
      variables.
497795     ;
MPRINT(EM_DIAGRAM):   ;
497796     *;
MPRINT(EM_DIAGRAM):   *;
497797     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
497798     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_prelim_title  ,NOQUOTE,
497798   ! Search # 4 FUNNEL LAYERS trial # 2 : LOGISTIC : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 4 FUNNEL LAYERS trial # 2 : LOGISTIC :
Prelim";
497799     prelim 32 outest=_anpre pretime=30 preiter=25
MPRINT(EM_DIAGRAM):   prelim 32 outest=_anpre pretime=30 preiter=25 tech =
Default inest = EMWS8.AutoNeural43_ESTDS bylabel ;
NOTE:  Synchronizing the objectives and the Solution.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: Convergence criterion (FCONV=0.0001) satisfied.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: Convergence criterion (GCONV=1E-8) satisfied.
NOTE: Convergence criterion (FCONV=0.0001) satisfied.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: Convergence criterion (GCONV=1E-8) satisfied.
NOTE: Convergence criterion (GCONV=1E-8) satisfied.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: Convergence criterion (FCONV=0.0001) satisfied.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: Convergence criterion (GCONV=1E-8) satisfied.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: Convergence criterion (GCONV=1E-8) satisfied.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: Convergence criterion (FCONV=0.0001) satisfied.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: Convergence criterion (GCONV=1E-8) satisfied.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: Convergence criterion (FCONV=0.0001) satisfied.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: Convergence criterion (GCONV=1E-8) satisfied.
NOTE: Convergence criterion (GCONV=1E-8) satisfied.
NOTE: The data set WORK._ANPRE has 65 observations and 1433 variables.
NOTE: The data set EMWS8.AUTONEURAL43_ESTDS has 1 observations and 762
      variables.
MPRINT(EM_DIAGRAM):   *;
497800     tech = Default
497801     inest = EMWS8.AutoNeural43_ESTDS bylabel
497802     ;
497803     *;
497804     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
497805     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_train_title  ,NOQUOTE,
497805   ! Search # 4 FUNNEL LAYERS trial # 2 : LOGISTIC : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 4 FUNNEL LAYERS trial # 2 : LOGISTIC :
Training";
MPRINT(EM_DIAGRAM):   train estiter=1 outest=_anest outfit=_anfit maxtime=860
maxiter=50 tech = Default;
WARNING: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 50 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANEST has 53 observations and 1433 variables.
NOTE: The data set WORK._ANFIT has 104 observations and 36 variables.
MPRINT(EM_DIAGRAM):   ;
497806     train estiter=1 outest=_anest outfit=_anfit maxtime=860 maxiter=50
MPRINT(EM_DIAGRAM):   run;
497807     tech = Default;
497808     ;
497809     run;
 
NOTE: The data set WORK.EM_AUTONEURAL43 has 2374 observations and 15 variables.
NOTE: The data set EMWS8.META2_VALIDATE has . observations and 45 variables.
NOTE: View EMWS8.META2_VALIDATE.VIEW used (Total process time):
      real time           1:09.19
      cpu time            1:09.09
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: Closing the Neural Application.
NOTE: The PROCEDURE NEURAL printed page 448.
NOTE: PROCEDURE NEURAL used (Total process time):
      real time           1:09.20
      cpu time            1:09.10
 
 
MPRINT(EM_DIAGRAM):   *;
497810     *;
497811     proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
MPRINT(EM_DIAGRAM):   proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
497812     var _iter_ _aic_ _averr_ _misc_
497813     _vaverr_ _vmisc_
497814     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
497815     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _name_='OVERALL';
NOTE: The PROCEDURE PRINT printed page 449.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Extract best iteration;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
497816     *------------------------------------------------------------*;
497817     * Extract best iteration;
497818     ;
497819     *------------------------------------------------------------*;
497820     %global _iter;
497821     data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
497822     set _anfit(where=(_NAME_ eq 'OVERALL'));
MPRINT(EM_DIAGRAM):   set _anfit(where=(_NAME_ eq 'OVERALL'));
497823     retain _min 1e+64;
MPRINT(EM_DIAGRAM):   retain _min 1e+64;
497824     if _VMISC_ < _min then do;
MPRINT(EM_DIAGRAM):   if _VMISC_ < _min then do;
497825     _min = _VMISC_;
MPRINT(EM_DIAGRAM):   _min = _VMISC_;
497826     call symput('_iter',put(_ITER_, 6.));
MPRINT(EM_DIAGRAM):   call symput('_iter',put(_ITER_, 6.));
497827     end;
MPRINT(EM_DIAGRAM):   end;
497828     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _NAME_='OVERALL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
497829     *;
 
497830     data EMWS8.AutoNeural43_ESTDS;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural43_ESTDS;
497831     set _anest;
MPRINT(EM_DIAGRAM):   set _anest;
497832     if _ITER_ eq 9 then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 9 then do;
497833     output;
MPRINT(EM_DIAGRAM):   output;
497834     stop;
MPRINT(EM_DIAGRAM):   stop;
497835     end;
MPRINT(EM_DIAGRAM):   end;
497836     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 10 observations read from the data set WORK._ANEST.
NOTE: The data set EMWS8.AUTONEURAL43_ESTDS has 1 observations and 1433
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
497837     *;
497838     data EMWS8.AutoNeural43_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural43_OUTFIT;
497839     set _anfit;
MPRINT(EM_DIAGRAM):   set _anfit;
497840     if _ITER_ eq 9 and _NAME_ eq "OVERALL" then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 9 and _NAME_ eq "OVERALL" then do;
497841     output;
MPRINT(EM_DIAGRAM):   output;
497842     stop;
MPRINT(EM_DIAGRAM):   stop;
497843     end;
MPRINT(EM_DIAGRAM):   end;
497844     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 20 observations read from the data set WORK._ANFIT.
NOTE: The data set EMWS8.AUTONEURAL43_OUTFIT has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
497845     *;
MPRINT(EM_DIAGRAM):    *;
497846     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
497847     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_selectediteration_title
497847   ! , NOQUOTE, _VMISC_))";
MPRINT(EM_DIAGRAM):   title10 "Selected Iteration based on _VMISC_";
497848     proc print data=EMWS8.AutoNeural43_OUTFIT noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural43_OUTFIT noobs;
497849     var _iter_ _aic_ _averr_ _misc_
497850     _vaverr_ _vmisc_
497851     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
497852     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL43_OUTFIT.
NOTE: The PROCEDURE PRINT printed page 450.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
497853     title9;
MPRINT(EM_DIAGRAM):   title9;
497854     title10;
MPRINT(EM_DIAGRAM):   title10;
497855     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
497856     set EMWS8.AutoNeural43_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural43_OUTFIT;
497857     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
497858     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL43_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
497859     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
497860     set EMWS8.AutoNeural43_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural43_OUTFIT;
497861     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
497862     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL43_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
497863     * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
497864     ;
MPRINT(EM_DIAGRAM):   ;
497865     data EMWS8.AutoNeural43_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural43_OUTFIT;
497866     set EMWS8.AutoNeural43_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural43_OUTFIT;
497867     length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
497868     _func_ = "LOGISTIC";
MPRINT(EM_DIAGRAM):   _func_ = "LOGISTIC";
497869     _status_ = "reject";
MPRINT(EM_DIAGRAM):   _status_ = "reject";
497870     _step_ = "FUNNEL LAYERS 4";
MPRINT(EM_DIAGRAM):   _step_ = "FUNNEL LAYERS 4";
497871     _index_ = 4;
MPRINT(EM_DIAGRAM):   _index_ = 4;
497872     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL43_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL43_OUTFIT has 1 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
497873     data EMWS8.AutoNeural43_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural43_HISTORY;
497874     set EMWS8.AutoNeural43_HISTORY EMWS8.AutoNeural43_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural43_HISTORY EMWS8.AutoNeural43_OUTFIT;
497875     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 17 observations read from the data set
      EMWS8.AUTONEURAL43_HISTORY.
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL43_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL43_HISTORY has 18 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
497876     * SEARCH: recall starting estimates;
MPRINT(EM_DIAGRAM):    * SEARCH: recall starting estimates;
497877     ;
MPRINT(EM_DIAGRAM):   ;
497878     data EMWS8.AutoNeural43_ESTDS;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural43_ESTDS;
497879     set EMWS8.AutoNeural43_BESTDS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural43_BESTDS;
497880     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL43_BESTDS.
NOTE: The data set EMWS8.AUTONEURAL43_ESTDS has 1 observations and 762
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
497881     *;
MPRINT(EM_DIAGRAM):    *;
497882     proc neural data=EM_AutoNeural43 dmdbcat=WORK.AutoNeural43_DMDB
497883     validdata=EMWS8.Meta2_VALIDATE
497884     ;
MPRINT(EM_DIAGRAM):   proc neural data=EM_AutoNeural43
dmdbcat=WORK.AutoNeural43_DMDB validdata=EMWS8.Meta2_VALIDATE ;
497885     *;
MPRINT(EM_DIAGRAM):   *;
497886     nloptions noprint;
MPRINT(EM_DIAGRAM):   nloptions noprint;
497887     performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   input
497888     input %INTINPUTS / level=interval id=interval;
MPRINT(INTINPUTS):   AcceptedCmpTotal Frq Income Mnt MntGoldProds
MntMeatProducts NumCatalogPurchases NumDealsPurchases NumWebVisitsMonth RFMstat
Recency Teenhome Year_Birth
MPRINT(EM_DIAGRAM):   / level=interval id=interval;
MPRINT(EM_DIAGRAM):   input
497889     input %NOMINPUTS / level=nominal id=nominal;
MPRINT(NOMINPUTS):   Marital_Status
MPRINT(EM_DIAGRAM):   / level=nominal id=nominal;
497890     target DepVar / level=NOMINAL id=DepVar
497891     ;
MPRINT(EM_DIAGRAM):   target DepVar / level=NOMINAL id=DepVar ;
497892     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
497893     * Layer #1;
MPRINT(EM_DIAGRAM):   * Layer #1;
497894     ;
MPRINT(EM_DIAGRAM):   ;
497895     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
497896     Hidden 7 / id = H1x1_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 7 / id = H1x1_ act=SOFTMAX;
497897     connect interval H1x1_;
MPRINT(EM_DIAGRAM):   connect interval H1x1_;
497898     connect nominal H1x1_;
MPRINT(EM_DIAGRAM):   connect nominal H1x1_;
497899     Hidden 7 / id = H1x2_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 7 / id = H1x2_ act=SOFTMAX;
497900     connect interval H1x2_;
MPRINT(EM_DIAGRAM):   connect interval H1x2_;
497901     connect nominal H1x2_;
MPRINT(EM_DIAGRAM):   connect nominal H1x2_;
497902     Hidden 7 / id = H1x3_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 7 / id = H1x3_ act=SOFTMAX;
497903     connect interval H1x3_;
MPRINT(EM_DIAGRAM):   connect interval H1x3_;
497904     connect nominal H1x3_;
MPRINT(EM_DIAGRAM):   connect nominal H1x3_;
497905     Hidden 7 / id = H1x4_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 7 / id = H1x4_ act=SOFTMAX;
497906     connect interval H1x4_;
MPRINT(EM_DIAGRAM):   connect interval H1x4_;
497907     connect nominal H1x4_;
MPRINT(EM_DIAGRAM):   connect nominal H1x4_;
497908     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
497909     * Layer #2;
MPRINT(EM_DIAGRAM):   * Layer #2;
497910     ;
MPRINT(EM_DIAGRAM):   ;
497911     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
497912     Hidden 7 / id = H2x1_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 7 / id = H2x1_ act=LOG;
497913     connect H1x1_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x1_ H2x1_;
497914     connect H1x2_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x2_ H2x1_;
497915     connect H1x3_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x3_ H2x1_;
497916     connect H1x4_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x4_ H2x1_;
497917     Hidden 7 / id = H2x2_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 7 / id = H2x2_ act=LOG;
497918     connect H1x1_ H2x2_;
MPRINT(EM_DIAGRAM):   connect H1x1_ H2x2_;
497919     connect H1x2_ H2x2_;
MPRINT(EM_DIAGRAM):   connect H1x2_ H2x2_;
497920     connect H1x3_ H2x2_;
MPRINT(EM_DIAGRAM):   connect H1x3_ H2x2_;
497921     connect H1x4_ H2x2_;
MPRINT(EM_DIAGRAM):   connect H1x4_ H2x2_;
497922     Hidden 7 / id = H2x3_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 7 / id = H2x3_ act=LOG;
497923     connect H1x1_ H2x3_;
MPRINT(EM_DIAGRAM):   connect H1x1_ H2x3_;
497924     connect H1x2_ H2x3_;
MPRINT(EM_DIAGRAM):   connect H1x2_ H2x3_;
497925     connect H1x3_ H2x3_;
MPRINT(EM_DIAGRAM):   connect H1x3_ H2x3_;
497926     connect H1x4_ H2x3_;
MPRINT(EM_DIAGRAM):   connect H1x4_ H2x3_;
497927     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
497928     * Layer #3;
MPRINT(EM_DIAGRAM):   * Layer #3;
497929     ;
MPRINT(EM_DIAGRAM):   ;
497930     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
497931     Hidden 7 / id = H3x1_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 7 / id = H3x1_ act=SOFTMAX;
497932     connect H2x1_ H3x1_;
MPRINT(EM_DIAGRAM):   connect H2x1_ H3x1_;
497933     connect H2x2_ H3x1_;
MPRINT(EM_DIAGRAM):   connect H2x2_ H3x1_;
497934     connect H2x3_ H3x1_;
MPRINT(EM_DIAGRAM):   connect H2x3_ H3x1_;
497935     Hidden 7 / id = H3x2_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 7 / id = H3x2_ act=SOFTMAX;
497936     connect H2x1_ H3x2_;
MPRINT(EM_DIAGRAM):   connect H2x1_ H3x2_;
497937     connect H2x2_ H3x2_;
MPRINT(EM_DIAGRAM):   connect H2x2_ H3x2_;
497938     connect H2x3_ H3x2_;
MPRINT(EM_DIAGRAM):   connect H2x3_ H3x2_;
497939     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
497940     * Layer #4;
MPRINT(EM_DIAGRAM):   * Layer #4;
497941     ;
MPRINT(EM_DIAGRAM):   ;
497942     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
497943     Hidden 7 / id = H4x1_ act=SINE;
MPRINT(EM_DIAGRAM):   Hidden 7 / id = H4x1_ act=SINE;
497944     connect H3x1_ H4x1_;
MPRINT(EM_DIAGRAM):   connect H3x1_ H4x1_;
497945     connect H3x2_ H4x1_;
MPRINT(EM_DIAGRAM):   connect H3x2_ H4x1_;
497946     connect H4x1_ DepVar;
MPRINT(EM_DIAGRAM):   connect H4x1_ DepVar;
497947     *;
MPRINT(EM_DIAGRAM):   *;
497948     netoptions ranscale = 1;
MPRINT(EM_DIAGRAM):   netoptions ranscale = 1;
497949     *;
MPRINT(EM_DIAGRAM):   *;
497950     initial
497951     inest = EMWS8.AutoNeural43_ESTDS bylabel;
MPRINT(EM_DIAGRAM):   initial inest = EMWS8.AutoNeural43_ESTDS bylabel;
NOTE: The data set EMWS8.AUTONEURAL43_ESTDS has 1 observations and 762
      variables.
497952     ;
MPRINT(EM_DIAGRAM):   ;
497953     *;
MPRINT(EM_DIAGRAM):   *;
497954     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
497955     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_prelim_title  ,NOQUOTE,
497955   ! Search # 4 FUNNEL LAYERS trial # 3 : SINE : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 4 FUNNEL LAYERS trial # 3 : SINE :
Prelim";
497956     prelim 32 outest=_anpre pretime=30 preiter=25
MPRINT(EM_DIAGRAM):   prelim 32 outest=_anpre pretime=30 preiter=25 tech =
Default inest = EMWS8.AutoNeural43_ESTDS bylabel ;
NOTE:  Synchronizing the objectives and the Solution.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANPRE has 65 observations and 1433 variables.
NOTE: The data set EMWS8.AUTONEURAL43_ESTDS has 1 observations and 762
      variables.
MPRINT(EM_DIAGRAM):   *;
497957     tech = Default
497958     inest = EMWS8.AutoNeural43_ESTDS bylabel
497959     ;
497960     *;
497961     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
497962     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_train_title  ,NOQUOTE,
497962   ! Search # 4 FUNNEL LAYERS trial # 3 : SINE : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 4 FUNNEL LAYERS trial # 3 : SINE :
Training";
MPRINT(EM_DIAGRAM):   train estiter=1 outest=_anest outfit=_anfit maxtime=843
maxiter=50 tech = Default;
WARNING: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 50 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANEST has 53 observations and 1433 variables.
NOTE: The data set WORK._ANFIT has 104 observations and 36 variables.
MPRINT(EM_DIAGRAM):   ;
497963     train estiter=1 outest=_anest outfit=_anfit maxtime=843 maxiter=50
MPRINT(EM_DIAGRAM):   run;
497964     tech = Default;
497965     ;
497966     run;
 
NOTE: The data set WORK.EM_AUTONEURAL43 has 2374 observations and 15 variables.
NOTE: The data set EMWS8.META2_VALIDATE has . observations and 45 variables.
NOTE: View EMWS8.META2_VALIDATE.VIEW used (Total process time):
      real time           1:03.29
      cpu time            1:03.17
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: Closing the Neural Application.
NOTE: The PROCEDURE NEURAL printed page 451.
NOTE: PROCEDURE NEURAL used (Total process time):
      real time           1:03.29
      cpu time            1:03.17
 
 
MPRINT(EM_DIAGRAM):   *;
497967     *;
497968     proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
MPRINT(EM_DIAGRAM):   proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
497969     var _iter_ _aic_ _averr_ _misc_
497970     _vaverr_ _vmisc_
497971     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
497972     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _name_='OVERALL';
NOTE: The PROCEDURE PRINT printed page 452.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Extract best iteration;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
497973     *------------------------------------------------------------*;
497974     * Extract best iteration;
497975     ;
497976     *------------------------------------------------------------*;
497977     %global _iter;
497978     data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
497979     set _anfit(where=(_NAME_ eq 'OVERALL'));
MPRINT(EM_DIAGRAM):   set _anfit(where=(_NAME_ eq 'OVERALL'));
497980     retain _min 1e+64;
MPRINT(EM_DIAGRAM):   retain _min 1e+64;
497981     if _VMISC_ < _min then do;
MPRINT(EM_DIAGRAM):   if _VMISC_ < _min then do;
497982     _min = _VMISC_;
MPRINT(EM_DIAGRAM):   _min = _VMISC_;
497983     call symput('_iter',put(_ITER_, 6.));
MPRINT(EM_DIAGRAM):   call symput('_iter',put(_ITER_, 6.));
497984     end;
MPRINT(EM_DIAGRAM):   end;
497985     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _NAME_='OVERALL';
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
497986     *;
 
497987     data EMWS8.AutoNeural43_ESTDS;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural43_ESTDS;
497988     set _anest;
MPRINT(EM_DIAGRAM):   set _anest;
497989     if _ITER_ eq 0 then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 0 then do;
497990     output;
MPRINT(EM_DIAGRAM):   output;
497991     stop;
MPRINT(EM_DIAGRAM):   stop;
497992     end;
MPRINT(EM_DIAGRAM):   end;
497993     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK._ANEST.
NOTE: The data set EMWS8.AUTONEURAL43_ESTDS has 1 observations and 1433
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
497994     *;
497995     data EMWS8.AutoNeural43_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural43_OUTFIT;
497996     set _anfit;
MPRINT(EM_DIAGRAM):   set _anfit;
497997     if _ITER_ eq 0 and _NAME_ eq "OVERALL" then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 0 and _NAME_ eq "OVERALL" then do;
497998     output;
MPRINT(EM_DIAGRAM):   output;
497999     stop;
MPRINT(EM_DIAGRAM):   stop;
498000     end;
MPRINT(EM_DIAGRAM):   end;
498001     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set WORK._ANFIT.
NOTE: The data set EMWS8.AUTONEURAL43_OUTFIT has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
498002     *;
MPRINT(EM_DIAGRAM):    *;
498003     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
498004     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_selectediteration_title
498004   ! , NOQUOTE, _VMISC_))";
MPRINT(EM_DIAGRAM):   title10 "Selected Iteration based on _VMISC_";
498005     proc print data=EMWS8.AutoNeural43_OUTFIT noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural43_OUTFIT noobs;
498006     var _iter_ _aic_ _averr_ _misc_
498007     _vaverr_ _vmisc_
498008     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
498009     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL43_OUTFIT.
NOTE: The PROCEDURE PRINT printed page 453.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
498010     title9;
MPRINT(EM_DIAGRAM):   title9;
498011     title10;
MPRINT(EM_DIAGRAM):   title10;
498012     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
498013     set EMWS8.AutoNeural43_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural43_OUTFIT;
498014     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
498015     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL43_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
498016     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
498017     set EMWS8.AutoNeural43_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural43_OUTFIT;
498018     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
498019     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL43_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
498020     * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
498021     ;
MPRINT(EM_DIAGRAM):   ;
498022     data EMWS8.AutoNeural43_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural43_OUTFIT;
498023     set EMWS8.AutoNeural43_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural43_OUTFIT;
498024     length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
498025     _func_ = "SINE";
MPRINT(EM_DIAGRAM):   _func_ = "SINE";
498026     _status_ = "reject";
MPRINT(EM_DIAGRAM):   _status_ = "reject";
498027     _step_ = "FUNNEL LAYERS 4";
MPRINT(EM_DIAGRAM):   _step_ = "FUNNEL LAYERS 4";
498028     _index_ = 4;
MPRINT(EM_DIAGRAM):   _index_ = 4;
498029     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL43_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL43_OUTFIT has 1 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
498030     data EMWS8.AutoNeural43_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural43_HISTORY;
498031     set EMWS8.AutoNeural43_HISTORY EMWS8.AutoNeural43_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural43_HISTORY EMWS8.AutoNeural43_OUTFIT;
498032     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 18 observations read from the data set
      EMWS8.AUTONEURAL43_HISTORY.
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL43_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL43_HISTORY has 19 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
498033     * SEARCH: recall starting estimates;
MPRINT(EM_DIAGRAM):    * SEARCH: recall starting estimates;
498034     ;
MPRINT(EM_DIAGRAM):   ;
498035     data EMWS8.AutoNeural43_ESTDS;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural43_ESTDS;
498036     set EMWS8.AutoNeural43_BESTDS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural43_BESTDS;
498037     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL43_BESTDS.
NOTE: The data set EMWS8.AUTONEURAL43_ESTDS has 1 observations and 762
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
498038     *;
MPRINT(EM_DIAGRAM):    *;
498039     proc neural data=EM_AutoNeural43 dmdbcat=WORK.AutoNeural43_DMDB
498040     validdata=EMWS8.Meta2_VALIDATE
498041     ;
MPRINT(EM_DIAGRAM):   proc neural data=EM_AutoNeural43
dmdbcat=WORK.AutoNeural43_DMDB validdata=EMWS8.Meta2_VALIDATE ;
498042     *;
MPRINT(EM_DIAGRAM):   *;
498043     nloptions noprint;
MPRINT(EM_DIAGRAM):   nloptions noprint;
498044     performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   input
498045     input %INTINPUTS / level=interval id=interval;
MPRINT(INTINPUTS):   AcceptedCmpTotal Frq Income Mnt MntGoldProds
MntMeatProducts NumCatalogPurchases NumDealsPurchases NumWebVisitsMonth RFMstat
Recency Teenhome Year_Birth
MPRINT(EM_DIAGRAM):   / level=interval id=interval;
MPRINT(EM_DIAGRAM):   input
498046     input %NOMINPUTS / level=nominal id=nominal;
MPRINT(NOMINPUTS):   Marital_Status
MPRINT(EM_DIAGRAM):   / level=nominal id=nominal;
498047     target DepVar / level=NOMINAL id=DepVar
498048     ;
MPRINT(EM_DIAGRAM):   target DepVar / level=NOMINAL id=DepVar ;
498049     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
498050     * Layer #1;
MPRINT(EM_DIAGRAM):   * Layer #1;
498051     ;
MPRINT(EM_DIAGRAM):   ;
498052     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
498053     Hidden 7 / id = H1x1_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 7 / id = H1x1_ act=SOFTMAX;
498054     connect interval H1x1_;
MPRINT(EM_DIAGRAM):   connect interval H1x1_;
498055     connect nominal H1x1_;
MPRINT(EM_DIAGRAM):   connect nominal H1x1_;
498056     Hidden 7 / id = H1x2_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 7 / id = H1x2_ act=SOFTMAX;
498057     connect interval H1x2_;
MPRINT(EM_DIAGRAM):   connect interval H1x2_;
498058     connect nominal H1x2_;
MPRINT(EM_DIAGRAM):   connect nominal H1x2_;
498059     Hidden 7 / id = H1x3_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 7 / id = H1x3_ act=SOFTMAX;
498060     connect interval H1x3_;
MPRINT(EM_DIAGRAM):   connect interval H1x3_;
498061     connect nominal H1x3_;
MPRINT(EM_DIAGRAM):   connect nominal H1x3_;
498062     Hidden 7 / id = H1x4_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 7 / id = H1x4_ act=SOFTMAX;
498063     connect interval H1x4_;
MPRINT(EM_DIAGRAM):   connect interval H1x4_;
498064     connect nominal H1x4_;
MPRINT(EM_DIAGRAM):   connect nominal H1x4_;
498065     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
498066     * Layer #2;
MPRINT(EM_DIAGRAM):   * Layer #2;
498067     ;
MPRINT(EM_DIAGRAM):   ;
498068     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
498069     Hidden 7 / id = H2x1_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 7 / id = H2x1_ act=LOG;
498070     connect H1x1_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x1_ H2x1_;
498071     connect H1x2_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x2_ H2x1_;
498072     connect H1x3_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x3_ H2x1_;
498073     connect H1x4_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x4_ H2x1_;
498074     Hidden 7 / id = H2x2_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 7 / id = H2x2_ act=LOG;
498075     connect H1x1_ H2x2_;
MPRINT(EM_DIAGRAM):   connect H1x1_ H2x2_;
498076     connect H1x2_ H2x2_;
MPRINT(EM_DIAGRAM):   connect H1x2_ H2x2_;
498077     connect H1x3_ H2x2_;
MPRINT(EM_DIAGRAM):   connect H1x3_ H2x2_;
498078     connect H1x4_ H2x2_;
MPRINT(EM_DIAGRAM):   connect H1x4_ H2x2_;
498079     Hidden 7 / id = H2x3_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 7 / id = H2x3_ act=LOG;
498080     connect H1x1_ H2x3_;
MPRINT(EM_DIAGRAM):   connect H1x1_ H2x3_;
498081     connect H1x2_ H2x3_;
MPRINT(EM_DIAGRAM):   connect H1x2_ H2x3_;
498082     connect H1x3_ H2x3_;
MPRINT(EM_DIAGRAM):   connect H1x3_ H2x3_;
498083     connect H1x4_ H2x3_;
MPRINT(EM_DIAGRAM):   connect H1x4_ H2x3_;
498084     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
498085     * Layer #3;
MPRINT(EM_DIAGRAM):   * Layer #3;
498086     ;
MPRINT(EM_DIAGRAM):   ;
498087     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
498088     Hidden 7 / id = H3x1_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 7 / id = H3x1_ act=SOFTMAX;
498089     connect H2x1_ H3x1_;
MPRINT(EM_DIAGRAM):   connect H2x1_ H3x1_;
498090     connect H2x2_ H3x1_;
MPRINT(EM_DIAGRAM):   connect H2x2_ H3x1_;
498091     connect H2x3_ H3x1_;
MPRINT(EM_DIAGRAM):   connect H2x3_ H3x1_;
498092     Hidden 7 / id = H3x2_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 7 / id = H3x2_ act=SOFTMAX;
498093     connect H2x1_ H3x2_;
MPRINT(EM_DIAGRAM):   connect H2x1_ H3x2_;
498094     connect H2x2_ H3x2_;
MPRINT(EM_DIAGRAM):   connect H2x2_ H3x2_;
498095     connect H2x3_ H3x2_;
MPRINT(EM_DIAGRAM):   connect H2x3_ H3x2_;
498096     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
498097     * Layer #4;
MPRINT(EM_DIAGRAM):   * Layer #4;
498098     ;
MPRINT(EM_DIAGRAM):   ;
498099     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
498100     Hidden 7 / id = H4x1_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 7 / id = H4x1_ act=SOFTMAX;
498101     connect H3x1_ H4x1_;
MPRINT(EM_DIAGRAM):   connect H3x1_ H4x1_;
498102     connect H3x2_ H4x1_;
MPRINT(EM_DIAGRAM):   connect H3x2_ H4x1_;
498103     connect H4x1_ DepVar;
MPRINT(EM_DIAGRAM):   connect H4x1_ DepVar;
498104     *;
MPRINT(EM_DIAGRAM):   *;
498105     netoptions ranscale = 1;
MPRINT(EM_DIAGRAM):   netoptions ranscale = 1;
498106     *;
MPRINT(EM_DIAGRAM):   *;
498107     initial
498108     inest = EMWS8.AutoNeural43_ESTDS bylabel;
MPRINT(EM_DIAGRAM):   initial inest = EMWS8.AutoNeural43_ESTDS bylabel;
NOTE: The data set EMWS8.AUTONEURAL43_ESTDS has 1 observations and 762
      variables.
498109     ;
MPRINT(EM_DIAGRAM):   ;
498110     *;
MPRINT(EM_DIAGRAM):   *;
498111     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
498112     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_prelim_title  ,NOQUOTE,
498112   ! Search # 4 FUNNEL LAYERS trial # 4 : SOFTMAX : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 4 FUNNEL LAYERS trial # 4 : SOFTMAX :
Prelim";
498113     prelim 32 outest=_anpre pretime=30 preiter=25
MPRINT(EM_DIAGRAM):   prelim 32 outest=_anpre pretime=30 preiter=25 tech =
Default inest = EMWS8.AutoNeural43_ESTDS bylabel ;
NOTE:  Synchronizing the objectives and the Solution.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANPRE has 65 observations and 1418 variables.
NOTE: The data set EMWS8.AUTONEURAL43_ESTDS has 1 observations and 762
      variables.
MPRINT(EM_DIAGRAM):   *;
498114     tech = Default
498115     inest = EMWS8.AutoNeural43_ESTDS bylabel
498116     ;
498117     *;
498118     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
498119     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_train_title  ,NOQUOTE,
498119   ! Search # 4 FUNNEL LAYERS trial # 4 : SOFTMAX : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 4 FUNNEL LAYERS trial # 4 : SOFTMAX :
Training";
MPRINT(EM_DIAGRAM):   train estiter=1 outest=_anest outfit=_anfit maxtime=827
maxiter=50 tech = Default;
WARNING: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 50 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANEST has 53 observations and 1418 variables.
NOTE: The data set WORK._ANFIT has 104 observations and 36 variables.
MPRINT(EM_DIAGRAM):   ;
498120     train estiter=1 outest=_anest outfit=_anfit maxtime=827 maxiter=50
MPRINT(EM_DIAGRAM):   run;
498121     tech = Default;
498122     ;
498123     run;
 
NOTE: The data set WORK.EM_AUTONEURAL43 has 2374 observations and 15 variables.
NOTE: The data set EMWS8.META2_VALIDATE has . observations and 45 variables.
NOTE: View EMWS8.META2_VALIDATE.VIEW used (Total process time):
      real time           1:09.41
      cpu time            1:09.34
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: Closing the Neural Application.
NOTE: The PROCEDURE NEURAL printed page 454.
NOTE: PROCEDURE NEURAL used (Total process time):
      real time           1:09.43
      cpu time            1:09.35
 
 
MPRINT(EM_DIAGRAM):   *;
498124     *;
498125     proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
MPRINT(EM_DIAGRAM):   proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
498126     var _iter_ _aic_ _averr_ _misc_
498127     _vaverr_ _vmisc_
498128     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
498129     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _name_='OVERALL';
NOTE: The PROCEDURE PRINT printed page 455.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Extract best iteration;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
498130     *------------------------------------------------------------*;
498131     * Extract best iteration;
498132     ;
498133     *------------------------------------------------------------*;
498134     %global _iter;
498135     data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
498136     set _anfit(where=(_NAME_ eq 'OVERALL'));
MPRINT(EM_DIAGRAM):   set _anfit(where=(_NAME_ eq 'OVERALL'));
498137     retain _min 1e+64;
MPRINT(EM_DIAGRAM):   retain _min 1e+64;
498138     if _VMISC_ < _min then do;
MPRINT(EM_DIAGRAM):   if _VMISC_ < _min then do;
498139     _min = _VMISC_;
MPRINT(EM_DIAGRAM):   _min = _VMISC_;
498140     call symput('_iter',put(_ITER_, 6.));
MPRINT(EM_DIAGRAM):   call symput('_iter',put(_ITER_, 6.));
498141     end;
MPRINT(EM_DIAGRAM):   end;
498142     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _NAME_='OVERALL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
498143     *;
 
498144     data EMWS8.AutoNeural43_ESTDS;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural43_ESTDS;
498145     set _anest;
MPRINT(EM_DIAGRAM):   set _anest;
498146     if _ITER_ eq 23 then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 23 then do;
498147     output;
MPRINT(EM_DIAGRAM):   output;
498148     stop;
MPRINT(EM_DIAGRAM):   stop;
498149     end;
MPRINT(EM_DIAGRAM):   end;
498150     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 24 observations read from the data set WORK._ANEST.
NOTE: The data set EMWS8.AUTONEURAL43_ESTDS has 1 observations and 1418
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
498151     *;
498152     data EMWS8.AutoNeural43_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural43_OUTFIT;
498153     set _anfit;
MPRINT(EM_DIAGRAM):   set _anfit;
498154     if _ITER_ eq 23 and _NAME_ eq "OVERALL" then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 23 and _NAME_ eq "OVERALL" then do;
498155     output;
MPRINT(EM_DIAGRAM):   output;
498156     stop;
MPRINT(EM_DIAGRAM):   stop;
498157     end;
MPRINT(EM_DIAGRAM):   end;
498158     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 48 observations read from the data set WORK._ANFIT.
NOTE: The data set EMWS8.AUTONEURAL43_OUTFIT has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
498159     *;
MPRINT(EM_DIAGRAM):    *;
498160     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
498161     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_selectediteration_title
498161   ! , NOQUOTE, _VMISC_))";
MPRINT(EM_DIAGRAM):   title10 "Selected Iteration based on _VMISC_";
498162     proc print data=EMWS8.AutoNeural43_OUTFIT noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural43_OUTFIT noobs;
498163     var _iter_ _aic_ _averr_ _misc_
498164     _vaverr_ _vmisc_
498165     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
498166     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL43_OUTFIT.
NOTE: The PROCEDURE PRINT printed page 456.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
498167     title9;
MPRINT(EM_DIAGRAM):   title9;
498168     title10;
MPRINT(EM_DIAGRAM):   title10;
498169     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
498170     set EMWS8.AutoNeural43_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural43_OUTFIT;
498171     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
498172     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL43_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
498173     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
498174     set EMWS8.AutoNeural43_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural43_OUTFIT;
498175     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
498176     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL43_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
498177     * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
498178     ;
MPRINT(EM_DIAGRAM):   ;
498179     data EMWS8.AutoNeural43_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural43_OUTFIT;
498180     set EMWS8.AutoNeural43_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural43_OUTFIT;
498181     length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
498182     _func_ = "SOFTMAX";
MPRINT(EM_DIAGRAM):   _func_ = "SOFTMAX";
498183     _status_ = "reject";
MPRINT(EM_DIAGRAM):   _status_ = "reject";
498184     _step_ = "FUNNEL LAYERS 4";
MPRINT(EM_DIAGRAM):   _step_ = "FUNNEL LAYERS 4";
498185     _index_ = 4;
MPRINT(EM_DIAGRAM):   _index_ = 4;
498186     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL43_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL43_OUTFIT has 1 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
498187     data EMWS8.AutoNeural43_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural43_HISTORY;
498188     set EMWS8.AutoNeural43_HISTORY EMWS8.AutoNeural43_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural43_HISTORY EMWS8.AutoNeural43_OUTFIT;
498189     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 19 observations read from the data set
      EMWS8.AUTONEURAL43_HISTORY.
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL43_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL43_HISTORY has 20 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
498190     *SEARCH: recall best estimates and fit;
MPRINT(EM_DIAGRAM):    *SEARCH: recall best estimates and fit;
498191     ;
MPRINT(EM_DIAGRAM):   ;
498192     data EMWS8.AutoNeural43_ESTDS;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural43_ESTDS;
498193     set EMWS8.AutoNeural43_BESTDS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural43_BESTDS;
498194     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL43_BESTDS.
NOTE: The data set EMWS8.AUTONEURAL43_ESTDS has 1 observations and 762
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
498195     data EMWS8.AutoNeural43_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural43_OUTFIT;
498196     set WORK.BFITDS_AUTONEUR_3IW3VMD;
MPRINT(EM_DIAGRAM):   set WORK.BFITDS_AUTONEUR_3IW3VMD;
498197     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      WORK.BFITDS_AUTONEUR_3IW3VMD.
NOTE: The data set EMWS8.AUTONEURAL43_OUTFIT has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
498198     * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
498199     ;
MPRINT(EM_DIAGRAM):   ;
498200     data EMWS8.AutoNeural43_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural43_OUTFIT;
498201     set EMWS8.AutoNeural43_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural43_OUTFIT;
498202     length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
498203     _func_ = "DIRECT";
MPRINT(EM_DIAGRAM):   _func_ = "DIRECT";
498204     _status_ = "keep";
MPRINT(EM_DIAGRAM):   _status_ = "keep";
498205     _step_ = "FUNNEL LAYERS 4";
MPRINT(EM_DIAGRAM):   _step_ = "FUNNEL LAYERS 4";
498206     _index_ = 4;
MPRINT(EM_DIAGRAM):   _index_ = 4;
498207     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL43_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL43_OUTFIT has 1 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
498208     data EMWS8.AutoNeural43_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural43_HISTORY;
498209     set EMWS8.AutoNeural43_HISTORY EMWS8.AutoNeural43_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural43_HISTORY EMWS8.AutoNeural43_OUTFIT;
498210     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 20 observations read from the data set
      EMWS8.AUTONEURAL43_HISTORY.
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL43_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL43_HISTORY has 21 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
498211     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
498212     set EMWS8.AutoNeural43_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural43_OUTFIT;
498213     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
498214     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL43_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 40 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
498215     *;
MPRINT(EM_DIAGRAM):    *;
498216     proc neural data=EM_AutoNeural43 dmdbcat=WORK.AutoNeural43_DMDB
498217     validdata=EMWS8.Meta2_VALIDATE
498218     ;
MPRINT(EM_DIAGRAM):   proc neural data=EM_AutoNeural43
dmdbcat=WORK.AutoNeural43_DMDB validdata=EMWS8.Meta2_VALIDATE ;
498219     *;
MPRINT(EM_DIAGRAM):   *;
498220     nloptions noprint;
MPRINT(EM_DIAGRAM):   nloptions noprint;
498221     performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   input
498222     input %INTINPUTS / level=interval id=interval;
MPRINT(INTINPUTS):   AcceptedCmpTotal Frq Income Mnt MntGoldProds
MntMeatProducts NumCatalogPurchases NumDealsPurchases NumWebVisitsMonth RFMstat
Recency Teenhome Year_Birth
MPRINT(EM_DIAGRAM):   / level=interval id=interval;
MPRINT(EM_DIAGRAM):   input
498223     input %NOMINPUTS / level=nominal id=nominal;
MPRINT(NOMINPUTS):   Marital_Status
MPRINT(EM_DIAGRAM):   / level=nominal id=nominal;
498224     target DepVar / level=NOMINAL id=DepVar
498225     ;
MPRINT(EM_DIAGRAM):   target DepVar / level=NOMINAL id=DepVar ;
498226     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
498227     * Direct connection;
MPRINT(EM_DIAGRAM):   * Direct connection;
498228     ;
MPRINT(EM_DIAGRAM):   ;
498229     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
498230     connect interval DepVar;
MPRINT(EM_DIAGRAM):   connect interval DepVar;
498231     connect nominal DepVar;
MPRINT(EM_DIAGRAM):   connect nominal DepVar;
498232     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
498233     * Layer #1;
MPRINT(EM_DIAGRAM):   * Layer #1;
498234     ;
MPRINT(EM_DIAGRAM):   ;
498235     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
498236     Hidden 7 / id = H1x1_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 7 / id = H1x1_ act=SOFTMAX;
498237     connect interval H1x1_;
MPRINT(EM_DIAGRAM):   connect interval H1x1_;
498238     connect nominal H1x1_;
MPRINT(EM_DIAGRAM):   connect nominal H1x1_;
498239     Hidden 7 / id = H1x2_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 7 / id = H1x2_ act=SOFTMAX;
498240     connect interval H1x2_;
MPRINT(EM_DIAGRAM):   connect interval H1x2_;
498241     connect nominal H1x2_;
MPRINT(EM_DIAGRAM):   connect nominal H1x2_;
498242     Hidden 7 / id = H1x3_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 7 / id = H1x3_ act=SOFTMAX;
498243     connect interval H1x3_;
MPRINT(EM_DIAGRAM):   connect interval H1x3_;
498244     connect nominal H1x3_;
MPRINT(EM_DIAGRAM):   connect nominal H1x3_;
498245     Hidden 7 / id = H1x4_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 7 / id = H1x4_ act=SOFTMAX;
498246     connect interval H1x4_;
MPRINT(EM_DIAGRAM):   connect interval H1x4_;
498247     connect nominal H1x4_;
MPRINT(EM_DIAGRAM):   connect nominal H1x4_;
498248     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
498249     * Layer #2;
MPRINT(EM_DIAGRAM):   * Layer #2;
498250     ;
MPRINT(EM_DIAGRAM):   ;
498251     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
498252     Hidden 7 / id = H2x1_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 7 / id = H2x1_ act=LOG;
498253     connect H1x1_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x1_ H2x1_;
498254     connect H1x2_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x2_ H2x1_;
498255     connect H1x3_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x3_ H2x1_;
498256     connect H1x4_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x4_ H2x1_;
498257     Hidden 7 / id = H2x2_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 7 / id = H2x2_ act=LOG;
498258     connect H1x1_ H2x2_;
MPRINT(EM_DIAGRAM):   connect H1x1_ H2x2_;
498259     connect H1x2_ H2x2_;
MPRINT(EM_DIAGRAM):   connect H1x2_ H2x2_;
498260     connect H1x3_ H2x2_;
MPRINT(EM_DIAGRAM):   connect H1x3_ H2x2_;
498261     connect H1x4_ H2x2_;
MPRINT(EM_DIAGRAM):   connect H1x4_ H2x2_;
498262     Hidden 7 / id = H2x3_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 7 / id = H2x3_ act=LOG;
498263     connect H1x1_ H2x3_;
MPRINT(EM_DIAGRAM):   connect H1x1_ H2x3_;
498264     connect H1x2_ H2x3_;
MPRINT(EM_DIAGRAM):   connect H1x2_ H2x3_;
498265     connect H1x3_ H2x3_;
MPRINT(EM_DIAGRAM):   connect H1x3_ H2x3_;
498266     connect H1x4_ H2x3_;
MPRINT(EM_DIAGRAM):   connect H1x4_ H2x3_;
498267     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
498268     * Layer #3;
MPRINT(EM_DIAGRAM):   * Layer #3;
498269     ;
MPRINT(EM_DIAGRAM):   ;
498270     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
498271     Hidden 7 / id = H3x1_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 7 / id = H3x1_ act=SOFTMAX;
498272     connect H2x1_ H3x1_;
MPRINT(EM_DIAGRAM):   connect H2x1_ H3x1_;
498273     connect H2x2_ H3x1_;
MPRINT(EM_DIAGRAM):   connect H2x2_ H3x1_;
498274     connect H2x3_ H3x1_;
MPRINT(EM_DIAGRAM):   connect H2x3_ H3x1_;
498275     Hidden 7 / id = H3x2_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 7 / id = H3x2_ act=SOFTMAX;
498276     connect H2x1_ H3x2_;
MPRINT(EM_DIAGRAM):   connect H2x1_ H3x2_;
498277     connect H2x2_ H3x2_;
MPRINT(EM_DIAGRAM):   connect H2x2_ H3x2_;
498278     connect H2x3_ H3x2_;
MPRINT(EM_DIAGRAM):   connect H2x3_ H3x2_;
498279     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
498280     * Layer #4;
MPRINT(EM_DIAGRAM):   * Layer #4;
498281     ;
MPRINT(EM_DIAGRAM):   ;
498282     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
498283     Hidden 7 / id = H4x1_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 7 / id = H4x1_ act=LOG;
498284     connect H3x1_ H4x1_;
MPRINT(EM_DIAGRAM):   connect H3x1_ H4x1_;
498285     connect H3x2_ H4x1_;
MPRINT(EM_DIAGRAM):   connect H3x2_ H4x1_;
498286     connect H4x1_ DepVar;
MPRINT(EM_DIAGRAM):   connect H4x1_ DepVar;
498287     *;
MPRINT(EM_DIAGRAM):   *;
498288     netoptions ranscale = 1;
MPRINT(EM_DIAGRAM):   netoptions ranscale = 1;
498289     *;
MPRINT(EM_DIAGRAM):   *;
498290     initial
498291     inest = EMWS8.AutoNeural43_ESTDS bylabel;
MPRINT(EM_DIAGRAM):   initial inest = EMWS8.AutoNeural43_ESTDS bylabel;
NOTE: The data set EMWS8.AUTONEURAL43_ESTDS has 1 observations and 762
      variables.
498292     ;
MPRINT(EM_DIAGRAM):   ;
498293     *;
MPRINT(EM_DIAGRAM):   *;
498294     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
498295     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_prelim_title  ,NOQUOTE,
498295   ! Search # 5 FUNNEL LAYERS trial # 1 : LOGISTIC : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 5 FUNNEL LAYERS trial # 1 : LOGISTIC :
Prelim";
498296     prelim 32 outest=_anpre pretime=30 preiter=25
MPRINT(EM_DIAGRAM):   prelim 32 outest=_anpre pretime=30 preiter=25 tech =
Default inest = EMWS8.AutoNeural43_ESTDS bylabel ;
NOTE:  Synchronizing the objectives and the Solution.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANPRE has 65 observations and 1450 variables.
NOTE: The data set EMWS8.AUTONEURAL43_ESTDS has 1 observations and 762
      variables.
MPRINT(EM_DIAGRAM):   *;
498297     tech = Default
498298     inest = EMWS8.AutoNeural43_ESTDS bylabel
498299     ;
498300     *;
498301     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
498302     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_train_title  ,NOQUOTE,
498302   ! Search # 5 FUNNEL LAYERS trial # 1 : LOGISTIC : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 5 FUNNEL LAYERS trial # 1 : LOGISTIC :
Training";
MPRINT(EM_DIAGRAM):   train estiter=1 outest=_anest outfit=_anfit maxtime=809
maxiter=50 tech = Default;
WARNING: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 50 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANEST has 53 observations and 1450 variables.
NOTE: The data set WORK._ANFIT has 104 observations and 36 variables.
MPRINT(EM_DIAGRAM):   ;
498303     train estiter=1 outest=_anest outfit=_anfit maxtime=809 maxiter=50
MPRINT(EM_DIAGRAM):   run;
498304     tech = Default;
498305     ;
498306     run;
 
NOTE: The data set WORK.EM_AUTONEURAL43 has 2374 observations and 15 variables.
NOTE: The data set EMWS8.META2_VALIDATE has . observations and 45 variables.
NOTE: View EMWS8.META2_VALIDATE.VIEW used (Total process time):
      real time           1:24.53
      cpu time            1:24.47
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: Closing the Neural Application.
NOTE: The PROCEDURE NEURAL printed page 457.
NOTE: PROCEDURE NEURAL used (Total process time):
      real time           1:24.53
      cpu time            1:24.47
 
 
MPRINT(EM_DIAGRAM):   *;
498307     *;
498308     proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
MPRINT(EM_DIAGRAM):   proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
498309     var _iter_ _aic_ _averr_ _misc_
498310     _vaverr_ _vmisc_
498311     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
498312     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _name_='OVERALL';
NOTE: The PROCEDURE PRINT printed page 458.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Extract best iteration;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
498313     *------------------------------------------------------------*;
498314     * Extract best iteration;
498315     ;
498316     *------------------------------------------------------------*;
498317     %global _iter;
498318     data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
498319     set _anfit(where=(_NAME_ eq 'OVERALL'));
MPRINT(EM_DIAGRAM):   set _anfit(where=(_NAME_ eq 'OVERALL'));
498320     retain _min 1e+64;
MPRINT(EM_DIAGRAM):   retain _min 1e+64;
498321     if _VMISC_ < _min then do;
MPRINT(EM_DIAGRAM):   if _VMISC_ < _min then do;
498322     _min = _VMISC_;
MPRINT(EM_DIAGRAM):   _min = _VMISC_;
498323     call symput('_iter',put(_ITER_, 6.));
MPRINT(EM_DIAGRAM):   call symput('_iter',put(_ITER_, 6.));
498324     end;
MPRINT(EM_DIAGRAM):   end;
498325     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _NAME_='OVERALL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
498326     *;
 
498327     data EMWS8.AutoNeural43_ESTDS;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural43_ESTDS;
498328     set _anest;
MPRINT(EM_DIAGRAM):   set _anest;
498329     if _ITER_ eq 8 then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 8 then do;
498330     output;
MPRINT(EM_DIAGRAM):   output;
498331     stop;
MPRINT(EM_DIAGRAM):   stop;
498332     end;
MPRINT(EM_DIAGRAM):   end;
498333     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 9 observations read from the data set WORK._ANEST.
NOTE: The data set EMWS8.AUTONEURAL43_ESTDS has 1 observations and 1450
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
498334     *;
498335     data EMWS8.AutoNeural43_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural43_OUTFIT;
498336     set _anfit;
MPRINT(EM_DIAGRAM):   set _anfit;
498337     if _ITER_ eq 8 and _NAME_ eq "OVERALL" then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 8 and _NAME_ eq "OVERALL" then do;
498338     output;
MPRINT(EM_DIAGRAM):   output;
498339     stop;
MPRINT(EM_DIAGRAM):   stop;
498340     end;
MPRINT(EM_DIAGRAM):   end;
498341     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 18 observations read from the data set WORK._ANFIT.
NOTE: The data set EMWS8.AUTONEURAL43_OUTFIT has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
498342     *;
MPRINT(EM_DIAGRAM):    *;
498343     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
498344     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_selectediteration_title
498344   ! , NOQUOTE, _VMISC_))";
MPRINT(EM_DIAGRAM):   title10 "Selected Iteration based on _VMISC_";
498345     proc print data=EMWS8.AutoNeural43_OUTFIT noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural43_OUTFIT noobs;
498346     var _iter_ _aic_ _averr_ _misc_
498347     _vaverr_ _vmisc_
498348     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
498349     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL43_OUTFIT.
NOTE: The PROCEDURE PRINT printed page 459.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
498350     title9;
MPRINT(EM_DIAGRAM):   title9;
498351     title10;
MPRINT(EM_DIAGRAM):   title10;
498352     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
498353     set EMWS8.AutoNeural43_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural43_OUTFIT;
498354     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
498355     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL43_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
498356     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
498357     set EMWS8.AutoNeural43_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural43_OUTFIT;
498358     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
498359     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL43_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
498360     * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
498361     ;
MPRINT(EM_DIAGRAM):   ;
498362     data EMWS8.AutoNeural43_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural43_OUTFIT;
498363     set EMWS8.AutoNeural43_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural43_OUTFIT;
498364     length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
498365     _func_ = "LOGISTIC";
MPRINT(EM_DIAGRAM):   _func_ = "LOGISTIC";
498366     _status_ = "reject";
MPRINT(EM_DIAGRAM):   _status_ = "reject";
498367     _step_ = "FUNNEL LAYERS 5";
MPRINT(EM_DIAGRAM):   _step_ = "FUNNEL LAYERS 5";
498368     _index_ = 5;
MPRINT(EM_DIAGRAM):   _index_ = 5;
498369     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL43_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL43_OUTFIT has 1 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
498370     data EMWS8.AutoNeural43_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural43_HISTORY;
498371     set EMWS8.AutoNeural43_HISTORY EMWS8.AutoNeural43_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural43_HISTORY EMWS8.AutoNeural43_OUTFIT;
498372     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 21 observations read from the data set
      EMWS8.AUTONEURAL43_HISTORY.
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL43_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL43_HISTORY has 22 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
498373     * SEARCH: recall starting estimates;
MPRINT(EM_DIAGRAM):    * SEARCH: recall starting estimates;
498374     ;
MPRINT(EM_DIAGRAM):   ;
498375     data EMWS8.AutoNeural43_ESTDS;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural43_ESTDS;
498376     set EMWS8.AutoNeural43_BESTDS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural43_BESTDS;
498377     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL43_BESTDS.
NOTE: The data set EMWS8.AUTONEURAL43_ESTDS has 1 observations and 762
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
498378     *;
MPRINT(EM_DIAGRAM):    *;
498379     proc neural data=EM_AutoNeural43 dmdbcat=WORK.AutoNeural43_DMDB
498380     validdata=EMWS8.Meta2_VALIDATE
498381     ;
MPRINT(EM_DIAGRAM):   proc neural data=EM_AutoNeural43
dmdbcat=WORK.AutoNeural43_DMDB validdata=EMWS8.Meta2_VALIDATE ;
498382     *;
MPRINT(EM_DIAGRAM):   *;
498383     nloptions noprint;
MPRINT(EM_DIAGRAM):   nloptions noprint;
498384     performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   input
498385     input %INTINPUTS / level=interval id=interval;
MPRINT(INTINPUTS):   AcceptedCmpTotal Frq Income Mnt MntGoldProds
MntMeatProducts NumCatalogPurchases NumDealsPurchases NumWebVisitsMonth RFMstat
Recency Teenhome Year_Birth
MPRINT(EM_DIAGRAM):   / level=interval id=interval;
MPRINT(EM_DIAGRAM):   input
498386     input %NOMINPUTS / level=nominal id=nominal;
MPRINT(NOMINPUTS):   Marital_Status
MPRINT(EM_DIAGRAM):   / level=nominal id=nominal;
498387     target DepVar / level=NOMINAL id=DepVar
498388     ;
MPRINT(EM_DIAGRAM):   target DepVar / level=NOMINAL id=DepVar ;
498389     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
498390     * Direct connection;
MPRINT(EM_DIAGRAM):   * Direct connection;
498391     ;
MPRINT(EM_DIAGRAM):   ;
498392     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
498393     connect interval DepVar;
MPRINT(EM_DIAGRAM):   connect interval DepVar;
498394     connect nominal DepVar;
MPRINT(EM_DIAGRAM):   connect nominal DepVar;
498395     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
498396     * Layer #1;
MPRINT(EM_DIAGRAM):   * Layer #1;
498397     ;
MPRINT(EM_DIAGRAM):   ;
498398     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
498399     Hidden 7 / id = H1x1_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 7 / id = H1x1_ act=SOFTMAX;
498400     connect interval H1x1_;
MPRINT(EM_DIAGRAM):   connect interval H1x1_;
498401     connect nominal H1x1_;
MPRINT(EM_DIAGRAM):   connect nominal H1x1_;
498402     Hidden 7 / id = H1x2_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 7 / id = H1x2_ act=SOFTMAX;
498403     connect interval H1x2_;
MPRINT(EM_DIAGRAM):   connect interval H1x2_;
498404     connect nominal H1x2_;
MPRINT(EM_DIAGRAM):   connect nominal H1x2_;
498405     Hidden 7 / id = H1x3_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 7 / id = H1x3_ act=SOFTMAX;
498406     connect interval H1x3_;
MPRINT(EM_DIAGRAM):   connect interval H1x3_;
498407     connect nominal H1x3_;
MPRINT(EM_DIAGRAM):   connect nominal H1x3_;
498408     Hidden 7 / id = H1x4_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 7 / id = H1x4_ act=SOFTMAX;
498409     connect interval H1x4_;
MPRINT(EM_DIAGRAM):   connect interval H1x4_;
498410     connect nominal H1x4_;
MPRINT(EM_DIAGRAM):   connect nominal H1x4_;
498411     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
498412     * Layer #2;
MPRINT(EM_DIAGRAM):   * Layer #2;
498413     ;
MPRINT(EM_DIAGRAM):   ;
498414     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
498415     Hidden 7 / id = H2x1_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 7 / id = H2x1_ act=LOG;
498416     connect H1x1_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x1_ H2x1_;
498417     connect H1x2_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x2_ H2x1_;
498418     connect H1x3_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x3_ H2x1_;
498419     connect H1x4_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x4_ H2x1_;
498420     Hidden 7 / id = H2x2_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 7 / id = H2x2_ act=LOG;
498421     connect H1x1_ H2x2_;
MPRINT(EM_DIAGRAM):   connect H1x1_ H2x2_;
498422     connect H1x2_ H2x2_;
MPRINT(EM_DIAGRAM):   connect H1x2_ H2x2_;
498423     connect H1x3_ H2x2_;
MPRINT(EM_DIAGRAM):   connect H1x3_ H2x2_;
498424     connect H1x4_ H2x2_;
MPRINT(EM_DIAGRAM):   connect H1x4_ H2x2_;
498425     Hidden 7 / id = H2x3_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 7 / id = H2x3_ act=LOG;
498426     connect H1x1_ H2x3_;
MPRINT(EM_DIAGRAM):   connect H1x1_ H2x3_;
498427     connect H1x2_ H2x3_;
MPRINT(EM_DIAGRAM):   connect H1x2_ H2x3_;
498428     connect H1x3_ H2x3_;
MPRINT(EM_DIAGRAM):   connect H1x3_ H2x3_;
498429     connect H1x4_ H2x3_;
MPRINT(EM_DIAGRAM):   connect H1x4_ H2x3_;
498430     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
498431     * Layer #3;
MPRINT(EM_DIAGRAM):   * Layer #3;
498432     ;
MPRINT(EM_DIAGRAM):   ;
498433     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
498434     Hidden 7 / id = H3x1_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 7 / id = H3x1_ act=SOFTMAX;
498435     connect H2x1_ H3x1_;
MPRINT(EM_DIAGRAM):   connect H2x1_ H3x1_;
498436     connect H2x2_ H3x1_;
MPRINT(EM_DIAGRAM):   connect H2x2_ H3x1_;
498437     connect H2x3_ H3x1_;
MPRINT(EM_DIAGRAM):   connect H2x3_ H3x1_;
498438     Hidden 7 / id = H3x2_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 7 / id = H3x2_ act=SOFTMAX;
498439     connect H2x1_ H3x2_;
MPRINT(EM_DIAGRAM):   connect H2x1_ H3x2_;
498440     connect H2x2_ H3x2_;
MPRINT(EM_DIAGRAM):   connect H2x2_ H3x2_;
498441     connect H2x3_ H3x2_;
MPRINT(EM_DIAGRAM):   connect H2x3_ H3x2_;
498442     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
498443     * Layer #4;
MPRINT(EM_DIAGRAM):   * Layer #4;
498444     ;
MPRINT(EM_DIAGRAM):   ;
498445     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
498446     Hidden 7 / id = H4x1_ act=SINE;
MPRINT(EM_DIAGRAM):   Hidden 7 / id = H4x1_ act=SINE;
498447     connect H3x1_ H4x1_;
MPRINT(EM_DIAGRAM):   connect H3x1_ H4x1_;
498448     connect H3x2_ H4x1_;
MPRINT(EM_DIAGRAM):   connect H3x2_ H4x1_;
498449     connect H4x1_ DepVar;
MPRINT(EM_DIAGRAM):   connect H4x1_ DepVar;
498450     *;
MPRINT(EM_DIAGRAM):   *;
498451     netoptions ranscale = 1;
MPRINT(EM_DIAGRAM):   netoptions ranscale = 1;
498452     *;
MPRINT(EM_DIAGRAM):   *;
498453     initial
498454     inest = EMWS8.AutoNeural43_ESTDS bylabel;
MPRINT(EM_DIAGRAM):   initial inest = EMWS8.AutoNeural43_ESTDS bylabel;
NOTE: The data set EMWS8.AUTONEURAL43_ESTDS has 1 observations and 762
      variables.
498455     ;
MPRINT(EM_DIAGRAM):   ;
498456     *;
MPRINT(EM_DIAGRAM):   *;
498457     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
498458     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_prelim_title  ,NOQUOTE,
498458   ! Search # 5 FUNNEL LAYERS trial # 2 : SINE : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 5 FUNNEL LAYERS trial # 2 : SINE :
Prelim";
498459     prelim 32 outest=_anpre pretime=30 preiter=25
MPRINT(EM_DIAGRAM):   prelim 32 outest=_anpre pretime=30 preiter=25 tech =
Default inest = EMWS8.AutoNeural43_ESTDS bylabel ;
NOTE:  Synchronizing the objectives and the Solution.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANPRE has 65 observations and 1450 variables.
NOTE: The data set EMWS8.AUTONEURAL43_ESTDS has 1 observations and 762
      variables.
MPRINT(EM_DIAGRAM):   *;
498460     tech = Default
498461     inest = EMWS8.AutoNeural43_ESTDS bylabel
498462     ;
498463     *;
498464     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
498465     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_train_title  ,NOQUOTE,
498465   ! Search # 5 FUNNEL LAYERS trial # 2 : SINE : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 5 FUNNEL LAYERS trial # 2 : SINE :
Training";
MPRINT(EM_DIAGRAM):   train estiter=1 outest=_anest outfit=_anfit maxtime=788
maxiter=50 tech = Default;
WARNING: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 50 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANEST has 53 observations and 1450 variables.
NOTE: The data set WORK._ANFIT has 104 observations and 36 variables.
MPRINT(EM_DIAGRAM):   ;
498466     train estiter=1 outest=_anest outfit=_anfit maxtime=788 maxiter=50
MPRINT(EM_DIAGRAM):   run;
498467     tech = Default;
498468     ;
498469     run;
 
NOTE: The data set WORK.EM_AUTONEURAL43 has 2374 observations and 15 variables.
NOTE: The data set EMWS8.META2_VALIDATE has . observations and 45 variables.
NOTE: View EMWS8.META2_VALIDATE.VIEW used (Total process time):
      real time           1:00.36
      cpu time            1:00.26
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: Closing the Neural Application.
NOTE: The PROCEDURE NEURAL printed page 460.
NOTE: PROCEDURE NEURAL used (Total process time):
      real time           1:00.36
      cpu time            1:00.26
 
 
MPRINT(EM_DIAGRAM):   *;
498470     *;
498471     proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
MPRINT(EM_DIAGRAM):   proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
498472     var _iter_ _aic_ _averr_ _misc_
498473     _vaverr_ _vmisc_
498474     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
498475     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _name_='OVERALL';
NOTE: The PROCEDURE PRINT printed page 461.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Extract best iteration;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
498476     *------------------------------------------------------------*;
498477     * Extract best iteration;
498478     ;
498479     *------------------------------------------------------------*;
498480     %global _iter;
498481     data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
498482     set _anfit(where=(_NAME_ eq 'OVERALL'));
MPRINT(EM_DIAGRAM):   set _anfit(where=(_NAME_ eq 'OVERALL'));
498483     retain _min 1e+64;
MPRINT(EM_DIAGRAM):   retain _min 1e+64;
498484     if _VMISC_ < _min then do;
MPRINT(EM_DIAGRAM):   if _VMISC_ < _min then do;
498485     _min = _VMISC_;
MPRINT(EM_DIAGRAM):   _min = _VMISC_;
498486     call symput('_iter',put(_ITER_, 6.));
MPRINT(EM_DIAGRAM):   call symput('_iter',put(_ITER_, 6.));
498487     end;
MPRINT(EM_DIAGRAM):   end;
498488     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _NAME_='OVERALL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
498489     *;
 
498490     data EMWS8.AutoNeural43_ESTDS;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural43_ESTDS;
498491     set _anest;
MPRINT(EM_DIAGRAM):   set _anest;
498492     if _ITER_ eq 43 then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 43 then do;
498493     output;
MPRINT(EM_DIAGRAM):   output;
498494     stop;
MPRINT(EM_DIAGRAM):   stop;
498495     end;
MPRINT(EM_DIAGRAM):   end;
498496     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set WORK._ANEST.
NOTE: The data set EMWS8.AUTONEURAL43_ESTDS has 1 observations and 1450
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
498497     *;
498498     data EMWS8.AutoNeural43_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural43_OUTFIT;
498499     set _anfit;
MPRINT(EM_DIAGRAM):   set _anfit;
498500     if _ITER_ eq 43 and _NAME_ eq "OVERALL" then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 43 and _NAME_ eq "OVERALL" then do;
498501     output;
MPRINT(EM_DIAGRAM):   output;
498502     stop;
MPRINT(EM_DIAGRAM):   stop;
498503     end;
MPRINT(EM_DIAGRAM):   end;
498504     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 88 observations read from the data set WORK._ANFIT.
NOTE: The data set EMWS8.AUTONEURAL43_OUTFIT has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
498505     *;
MPRINT(EM_DIAGRAM):    *;
498506     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
498507     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_selectediteration_title
498507   ! , NOQUOTE, _VMISC_))";
MPRINT(EM_DIAGRAM):   title10 "Selected Iteration based on _VMISC_";
498508     proc print data=EMWS8.AutoNeural43_OUTFIT noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural43_OUTFIT noobs;
498509     var _iter_ _aic_ _averr_ _misc_
498510     _vaverr_ _vmisc_
498511     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
498512     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL43_OUTFIT.
NOTE: The PROCEDURE PRINT printed page 462.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
498513     title9;
MPRINT(EM_DIAGRAM):   title9;
498514     title10;
MPRINT(EM_DIAGRAM):   title10;
498515     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
498516     set EMWS8.AutoNeural43_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural43_OUTFIT;
498517     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
498518     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL43_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
498519     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
498520     set EMWS8.AutoNeural43_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural43_OUTFIT;
498521     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
498522     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL43_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
498523     * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
498524     ;
MPRINT(EM_DIAGRAM):   ;
498525     data EMWS8.AutoNeural43_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural43_OUTFIT;
498526     set EMWS8.AutoNeural43_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural43_OUTFIT;
498527     length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
498528     _func_ = "SINE";
MPRINT(EM_DIAGRAM):   _func_ = "SINE";
498529     _status_ = "reject";
MPRINT(EM_DIAGRAM):   _status_ = "reject";
498530     _step_ = "FUNNEL LAYERS 5";
MPRINT(EM_DIAGRAM):   _step_ = "FUNNEL LAYERS 5";
498531     _index_ = 5;
MPRINT(EM_DIAGRAM):   _index_ = 5;
498532     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL43_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL43_OUTFIT has 1 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
498533     data EMWS8.AutoNeural43_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural43_HISTORY;
498534     set EMWS8.AutoNeural43_HISTORY EMWS8.AutoNeural43_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural43_HISTORY EMWS8.AutoNeural43_OUTFIT;
498535     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 22 observations read from the data set
      EMWS8.AUTONEURAL43_HISTORY.
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL43_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL43_HISTORY has 23 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
498536     * SEARCH: recall starting estimates;
MPRINT(EM_DIAGRAM):    * SEARCH: recall starting estimates;
498537     ;
MPRINT(EM_DIAGRAM):   ;
498538     data EMWS8.AutoNeural43_ESTDS;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural43_ESTDS;
498539     set EMWS8.AutoNeural43_BESTDS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural43_BESTDS;
498540     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL43_BESTDS.
NOTE: The data set EMWS8.AUTONEURAL43_ESTDS has 1 observations and 762
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
498541     *;
MPRINT(EM_DIAGRAM):    *;
498542     proc neural data=EM_AutoNeural43 dmdbcat=WORK.AutoNeural43_DMDB
498543     validdata=EMWS8.Meta2_VALIDATE
498544     ;
MPRINT(EM_DIAGRAM):   proc neural data=EM_AutoNeural43
dmdbcat=WORK.AutoNeural43_DMDB validdata=EMWS8.Meta2_VALIDATE ;
498545     *;
MPRINT(EM_DIAGRAM):   *;
498546     nloptions noprint;
MPRINT(EM_DIAGRAM):   nloptions noprint;
498547     performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   input
498548     input %INTINPUTS / level=interval id=interval;
MPRINT(INTINPUTS):   AcceptedCmpTotal Frq Income Mnt MntGoldProds
MntMeatProducts NumCatalogPurchases NumDealsPurchases NumWebVisitsMonth RFMstat
Recency Teenhome Year_Birth
MPRINT(EM_DIAGRAM):   / level=interval id=interval;
MPRINT(EM_DIAGRAM):   input
498549     input %NOMINPUTS / level=nominal id=nominal;
MPRINT(NOMINPUTS):   Marital_Status
MPRINT(EM_DIAGRAM):   / level=nominal id=nominal;
498550     target DepVar / level=NOMINAL id=DepVar
498551     ;
MPRINT(EM_DIAGRAM):   target DepVar / level=NOMINAL id=DepVar ;
498552     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
498553     * Direct connection;
MPRINT(EM_DIAGRAM):   * Direct connection;
498554     ;
MPRINT(EM_DIAGRAM):   ;
498555     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
498556     connect interval DepVar;
MPRINT(EM_DIAGRAM):   connect interval DepVar;
498557     connect nominal DepVar;
MPRINT(EM_DIAGRAM):   connect nominal DepVar;
498558     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
498559     * Layer #1;
MPRINT(EM_DIAGRAM):   * Layer #1;
498560     ;
MPRINT(EM_DIAGRAM):   ;
498561     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
498562     Hidden 7 / id = H1x1_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 7 / id = H1x1_ act=SOFTMAX;
498563     connect interval H1x1_;
MPRINT(EM_DIAGRAM):   connect interval H1x1_;
498564     connect nominal H1x1_;
MPRINT(EM_DIAGRAM):   connect nominal H1x1_;
498565     Hidden 7 / id = H1x2_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 7 / id = H1x2_ act=SOFTMAX;
498566     connect interval H1x2_;
MPRINT(EM_DIAGRAM):   connect interval H1x2_;
498567     connect nominal H1x2_;
MPRINT(EM_DIAGRAM):   connect nominal H1x2_;
498568     Hidden 7 / id = H1x3_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 7 / id = H1x3_ act=SOFTMAX;
498569     connect interval H1x3_;
MPRINT(EM_DIAGRAM):   connect interval H1x3_;
498570     connect nominal H1x3_;
MPRINT(EM_DIAGRAM):   connect nominal H1x3_;
498571     Hidden 7 / id = H1x4_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 7 / id = H1x4_ act=SOFTMAX;
498572     connect interval H1x4_;
MPRINT(EM_DIAGRAM):   connect interval H1x4_;
498573     connect nominal H1x4_;
MPRINT(EM_DIAGRAM):   connect nominal H1x4_;
498574     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
498575     * Layer #2;
MPRINT(EM_DIAGRAM):   * Layer #2;
498576     ;
MPRINT(EM_DIAGRAM):   ;
498577     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
498578     Hidden 7 / id = H2x1_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 7 / id = H2x1_ act=LOG;
498579     connect H1x1_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x1_ H2x1_;
498580     connect H1x2_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x2_ H2x1_;
498581     connect H1x3_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x3_ H2x1_;
498582     connect H1x4_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x4_ H2x1_;
498583     Hidden 7 / id = H2x2_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 7 / id = H2x2_ act=LOG;
498584     connect H1x1_ H2x2_;
MPRINT(EM_DIAGRAM):   connect H1x1_ H2x2_;
498585     connect H1x2_ H2x2_;
MPRINT(EM_DIAGRAM):   connect H1x2_ H2x2_;
498586     connect H1x3_ H2x2_;
MPRINT(EM_DIAGRAM):   connect H1x3_ H2x2_;
498587     connect H1x4_ H2x2_;
MPRINT(EM_DIAGRAM):   connect H1x4_ H2x2_;
498588     Hidden 7 / id = H2x3_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 7 / id = H2x3_ act=LOG;
498589     connect H1x1_ H2x3_;
MPRINT(EM_DIAGRAM):   connect H1x1_ H2x3_;
498590     connect H1x2_ H2x3_;
MPRINT(EM_DIAGRAM):   connect H1x2_ H2x3_;
498591     connect H1x3_ H2x3_;
MPRINT(EM_DIAGRAM):   connect H1x3_ H2x3_;
498592     connect H1x4_ H2x3_;
MPRINT(EM_DIAGRAM):   connect H1x4_ H2x3_;
498593     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
498594     * Layer #3;
MPRINT(EM_DIAGRAM):   * Layer #3;
498595     ;
MPRINT(EM_DIAGRAM):   ;
498596     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
498597     Hidden 7 / id = H3x1_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 7 / id = H3x1_ act=SOFTMAX;
498598     connect H2x1_ H3x1_;
MPRINT(EM_DIAGRAM):   connect H2x1_ H3x1_;
498599     connect H2x2_ H3x1_;
MPRINT(EM_DIAGRAM):   connect H2x2_ H3x1_;
498600     connect H2x3_ H3x1_;
MPRINT(EM_DIAGRAM):   connect H2x3_ H3x1_;
498601     Hidden 7 / id = H3x2_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 7 / id = H3x2_ act=SOFTMAX;
498602     connect H2x1_ H3x2_;
MPRINT(EM_DIAGRAM):   connect H2x1_ H3x2_;
498603     connect H2x2_ H3x2_;
MPRINT(EM_DIAGRAM):   connect H2x2_ H3x2_;
498604     connect H2x3_ H3x2_;
MPRINT(EM_DIAGRAM):   connect H2x3_ H3x2_;
498605     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
498606     * Layer #4;
MPRINT(EM_DIAGRAM):   * Layer #4;
498607     ;
MPRINT(EM_DIAGRAM):   ;
498608     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
498609     Hidden 7 / id = H4x1_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 7 / id = H4x1_ act=SOFTMAX;
498610     connect H3x1_ H4x1_;
MPRINT(EM_DIAGRAM):   connect H3x1_ H4x1_;
498611     connect H3x2_ H4x1_;
MPRINT(EM_DIAGRAM):   connect H3x2_ H4x1_;
498612     connect H4x1_ DepVar;
MPRINT(EM_DIAGRAM):   connect H4x1_ DepVar;
498613     *;
MPRINT(EM_DIAGRAM):   *;
498614     netoptions ranscale = 1;
MPRINT(EM_DIAGRAM):   netoptions ranscale = 1;
498615     *;
MPRINT(EM_DIAGRAM):   *;
498616     initial
498617     inest = EMWS8.AutoNeural43_ESTDS bylabel;
MPRINT(EM_DIAGRAM):   initial inest = EMWS8.AutoNeural43_ESTDS bylabel;
NOTE: The data set EMWS8.AUTONEURAL43_ESTDS has 1 observations and 762
      variables.
498618     ;
MPRINT(EM_DIAGRAM):   ;
498619     *;
MPRINT(EM_DIAGRAM):   *;
498620     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
498621     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_prelim_title  ,NOQUOTE,
498621   ! Search # 5 FUNNEL LAYERS trial # 3 : SOFTMAX : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 5 FUNNEL LAYERS trial # 3 : SOFTMAX :
Prelim";
498622     prelim 32 outest=_anpre pretime=30 preiter=25
MPRINT(EM_DIAGRAM):   prelim 32 outest=_anpre pretime=30 preiter=25 tech =
Default inest = EMWS8.AutoNeural43_ESTDS bylabel ;
NOTE:  Synchronizing the objectives and the Solution.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANPRE has 65 observations and 1435 variables.
NOTE: The data set EMWS8.AUTONEURAL43_ESTDS has 1 observations and 762
      variables.
MPRINT(EM_DIAGRAM):   *;
498623     tech = Default
498624     inest = EMWS8.AutoNeural43_ESTDS bylabel
498625     ;
498626     *;
498627     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
498628     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_train_title  ,NOQUOTE,
498628   ! Search # 5 FUNNEL LAYERS trial # 3 : SOFTMAX : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 5 FUNNEL LAYERS trial # 3 : SOFTMAX :
Training";
MPRINT(EM_DIAGRAM):   train estiter=1 outest=_anest outfit=_anfit maxtime=773
maxiter=50 tech = Default;
WARNING: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 50 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANEST has 53 observations and 1435 variables.
NOTE: The data set WORK._ANFIT has 104 observations and 36 variables.
MPRINT(EM_DIAGRAM):   ;
498629     train estiter=1 outest=_anest outfit=_anfit maxtime=773 maxiter=50
MPRINT(EM_DIAGRAM):   run;
498630     tech = Default;
498631     ;
498632     run;
 
NOTE: The data set WORK.EM_AUTONEURAL43 has 2374 observations and 15 variables.
NOTE: The data set EMWS8.META2_VALIDATE has . observations and 45 variables.
NOTE: View EMWS8.META2_VALIDATE.VIEW used (Total process time):
      real time           1:16.21
      cpu time            1:16.14
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: Closing the Neural Application.
NOTE: The PROCEDURE NEURAL printed page 463.
NOTE: PROCEDURE NEURAL used (Total process time):
      real time           1:16.21
      cpu time            1:16.14
 
 
MPRINT(EM_DIAGRAM):   *;
498633     *;
498634     proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
MPRINT(EM_DIAGRAM):   proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
498635     var _iter_ _aic_ _averr_ _misc_
498636     _vaverr_ _vmisc_
498637     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
498638     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _name_='OVERALL';
NOTE: The PROCEDURE PRINT printed page 464.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Extract best iteration;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
498639     *------------------------------------------------------------*;
498640     * Extract best iteration;
498641     ;
498642     *------------------------------------------------------------*;
498643     %global _iter;
498644     data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
498645     set _anfit(where=(_NAME_ eq 'OVERALL'));
MPRINT(EM_DIAGRAM):   set _anfit(where=(_NAME_ eq 'OVERALL'));
498646     retain _min 1e+64;
MPRINT(EM_DIAGRAM):   retain _min 1e+64;
498647     if _VMISC_ < _min then do;
MPRINT(EM_DIAGRAM):   if _VMISC_ < _min then do;
498648     _min = _VMISC_;
MPRINT(EM_DIAGRAM):   _min = _VMISC_;
498649     call symput('_iter',put(_ITER_, 6.));
MPRINT(EM_DIAGRAM):   call symput('_iter',put(_ITER_, 6.));
498650     end;
MPRINT(EM_DIAGRAM):   end;
498651     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _NAME_='OVERALL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
498652     *;
 
498653     data EMWS8.AutoNeural43_ESTDS;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural43_ESTDS;
498654     set _anest;
MPRINT(EM_DIAGRAM):   set _anest;
498655     if _ITER_ eq 46 then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 46 then do;
498656     output;
MPRINT(EM_DIAGRAM):   output;
498657     stop;
MPRINT(EM_DIAGRAM):   stop;
498658     end;
MPRINT(EM_DIAGRAM):   end;
498659     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 47 observations read from the data set WORK._ANEST.
NOTE: The data set EMWS8.AUTONEURAL43_ESTDS has 1 observations and 1435
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
498660     *;
498661     data EMWS8.AutoNeural43_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural43_OUTFIT;
498662     set _anfit;
MPRINT(EM_DIAGRAM):   set _anfit;
498663     if _ITER_ eq 46 and _NAME_ eq "OVERALL" then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 46 and _NAME_ eq "OVERALL" then do;
498664     output;
MPRINT(EM_DIAGRAM):   output;
498665     stop;
MPRINT(EM_DIAGRAM):   stop;
498666     end;
MPRINT(EM_DIAGRAM):   end;
498667     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 94 observations read from the data set WORK._ANFIT.
NOTE: The data set EMWS8.AUTONEURAL43_OUTFIT has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
498668     *;
MPRINT(EM_DIAGRAM):    *;
498669     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
498670     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_selectediteration_title
498670   ! , NOQUOTE, _VMISC_))";
MPRINT(EM_DIAGRAM):   title10 "Selected Iteration based on _VMISC_";
498671     proc print data=EMWS8.AutoNeural43_OUTFIT noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural43_OUTFIT noobs;
498672     var _iter_ _aic_ _averr_ _misc_
498673     _vaverr_ _vmisc_
498674     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
498675     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL43_OUTFIT.
NOTE: The PROCEDURE PRINT printed page 465.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
498676     title9;
MPRINT(EM_DIAGRAM):   title9;
498677     title10;
MPRINT(EM_DIAGRAM):   title10;
498678     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
498679     set EMWS8.AutoNeural43_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural43_OUTFIT;
498680     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
498681     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL43_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
498682     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
498683     set EMWS8.AutoNeural43_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural43_OUTFIT;
498684     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
498685     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL43_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
498686     * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
498687     ;
MPRINT(EM_DIAGRAM):   ;
498688     data EMWS8.AutoNeural43_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural43_OUTFIT;
498689     set EMWS8.AutoNeural43_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural43_OUTFIT;
498690     length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
498691     _func_ = "SOFTMAX";
MPRINT(EM_DIAGRAM):   _func_ = "SOFTMAX";
498692     _status_ = "reject";
MPRINT(EM_DIAGRAM):   _status_ = "reject";
498693     _step_ = "FUNNEL LAYERS 5";
MPRINT(EM_DIAGRAM):   _step_ = "FUNNEL LAYERS 5";
498694     _index_ = 5;
MPRINT(EM_DIAGRAM):   _index_ = 5;
498695     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL43_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL43_OUTFIT has 1 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
498696     data EMWS8.AutoNeural43_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural43_HISTORY;
498697     set EMWS8.AutoNeural43_HISTORY EMWS8.AutoNeural43_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural43_HISTORY EMWS8.AutoNeural43_OUTFIT;
498698     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 23 observations read from the data set
      EMWS8.AUTONEURAL43_HISTORY.
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL43_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL43_HISTORY has 24 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
498699     data EMWS8.AutoNeural43_ESTDS;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural43_ESTDS;
498700     set WORK.SAVEDS_AUTONEUR_3IW3VMD;
MPRINT(EM_DIAGRAM):   set WORK.SAVEDS_AUTONEUR_3IW3VMD;
498701     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      WORK.SAVEDS_AUTONEUR_3IW3VMD.
NOTE: The data set EMWS8.AUTONEURAL43_ESTDS has 1 observations and 762
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
498702     *;
MPRINT(EM_DIAGRAM):    *;
498703     proc neural data=EM_AutoNeural43 dmdbcat=WORK.AutoNeural43_DMDB
498704     validdata=EMWS8.Meta2_VALIDATE
498705     ;
MPRINT(EM_DIAGRAM):   proc neural data=EM_AutoNeural43
dmdbcat=WORK.AutoNeural43_DMDB validdata=EMWS8.Meta2_VALIDATE ;
498706     *;
MPRINT(EM_DIAGRAM):   *;
498707     nloptions noprint;
MPRINT(EM_DIAGRAM):   nloptions noprint;
498708     performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   input
498709     input %INTINPUTS / level=interval id=interval;
MPRINT(INTINPUTS):   AcceptedCmpTotal Frq Income Mnt MntGoldProds
MntMeatProducts NumCatalogPurchases NumDealsPurchases NumWebVisitsMonth RFMstat
Recency Teenhome Year_Birth
MPRINT(EM_DIAGRAM):   / level=interval id=interval;
MPRINT(EM_DIAGRAM):   input
498710     input %NOMINPUTS / level=nominal id=nominal;
MPRINT(NOMINPUTS):   Marital_Status
MPRINT(EM_DIAGRAM):   / level=nominal id=nominal;
498711     target DepVar / level=NOMINAL id=DepVar
498712     ;
MPRINT(EM_DIAGRAM):   target DepVar / level=NOMINAL id=DepVar ;
498713     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
498714     * Direct connection;
MPRINT(EM_DIAGRAM):   * Direct connection;
498715     ;
MPRINT(EM_DIAGRAM):   ;
498716     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
498717     connect interval DepVar;
MPRINT(EM_DIAGRAM):   connect interval DepVar;
498718     connect nominal DepVar;
MPRINT(EM_DIAGRAM):   connect nominal DepVar;
498719     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
498720     * Layer #1;
MPRINT(EM_DIAGRAM):   * Layer #1;
498721     ;
MPRINT(EM_DIAGRAM):   ;
498722     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
498723     Hidden 7 / id = H1x1_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 7 / id = H1x1_ act=SOFTMAX;
498724     connect interval H1x1_;
MPRINT(EM_DIAGRAM):   connect interval H1x1_;
498725     connect nominal H1x1_;
MPRINT(EM_DIAGRAM):   connect nominal H1x1_;
498726     Hidden 7 / id = H1x2_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 7 / id = H1x2_ act=SOFTMAX;
498727     connect interval H1x2_;
MPRINT(EM_DIAGRAM):   connect interval H1x2_;
498728     connect nominal H1x2_;
MPRINT(EM_DIAGRAM):   connect nominal H1x2_;
498729     Hidden 7 / id = H1x3_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 7 / id = H1x3_ act=SOFTMAX;
498730     connect interval H1x3_;
MPRINT(EM_DIAGRAM):   connect interval H1x3_;
498731     connect nominal H1x3_;
MPRINT(EM_DIAGRAM):   connect nominal H1x3_;
498732     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
498733     * Layer #2;
MPRINT(EM_DIAGRAM):   * Layer #2;
498734     ;
MPRINT(EM_DIAGRAM):   ;
498735     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
498736     Hidden 7 / id = H2x1_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 7 / id = H2x1_ act=LOG;
498737     connect H1x1_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x1_ H2x1_;
498738     connect H1x2_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x2_ H2x1_;
498739     connect H1x3_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x3_ H2x1_;
498740     Hidden 7 / id = H2x2_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 7 / id = H2x2_ act=LOG;
498741     connect H1x1_ H2x2_;
MPRINT(EM_DIAGRAM):   connect H1x1_ H2x2_;
498742     connect H1x2_ H2x2_;
MPRINT(EM_DIAGRAM):   connect H1x2_ H2x2_;
498743     connect H1x3_ H2x2_;
MPRINT(EM_DIAGRAM):   connect H1x3_ H2x2_;
498744     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
498745     * Layer #3;
MPRINT(EM_DIAGRAM):   * Layer #3;
498746     ;
MPRINT(EM_DIAGRAM):   ;
498747     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
498748     Hidden 7 / id = H3x1_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 7 / id = H3x1_ act=SOFTMAX;
498749     connect H2x1_ H3x1_;
MPRINT(EM_DIAGRAM):   connect H2x1_ H3x1_;
498750     connect H2x2_ H3x1_;
MPRINT(EM_DIAGRAM):   connect H2x2_ H3x1_;
498751     connect H3x1_ DepVar;
MPRINT(EM_DIAGRAM):   connect H3x1_ DepVar;
498752     *;
MPRINT(EM_DIAGRAM):   *;
498753     netoptions ranscale = 1;
MPRINT(EM_DIAGRAM):   netoptions ranscale = 1;
498754     *;
MPRINT(EM_DIAGRAM):   *;
498755     initial
498756     inest = EMWS8.AutoNeural43_ESTDS bylabel;
MPRINT(EM_DIAGRAM):   initial inest = EMWS8.AutoNeural43_ESTDS bylabel;
NOTE: The data set EMWS8.AUTONEURAL43_ESTDS has 1 observations and 762
      variables.
498757     ;
MPRINT(EM_DIAGRAM):   ;
498758     *;
MPRINT(EM_DIAGRAM):   *;
498759     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
498760     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_prelim_title  ,NOQUOTE,
498760   ! Final Training))";
MPRINT(EM_DIAGRAM):   title10 "Final Training Prelim";
498761     prelim 32 outest=_anpre pretime=30 preiter=25
MPRINT(EM_DIAGRAM):   prelim 32 outest=_anpre pretime=30 preiter=25 tech =
Default inest = EMWS8.AutoNeural43_ESTDS bylabel ;
NOTE:  Synchronizing the objectives and the Solution.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
The prelim will run only once. Use the randbias or randout option on the target
layer.
NOTE: The data set WORK._ANPRE has 3 observations and 762 variables.
NOTE: The data set EMWS8.AUTONEURAL43_ESTDS has 1 observations and 762
      variables.
MPRINT(EM_DIAGRAM):   *;
498762     tech = Default
498763     inest = EMWS8.AutoNeural43_ESTDS bylabel
498764     ;
498765     *;
498766     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
498767     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_train_title  ,NOQUOTE,
498767   ! Final Training))";
MPRINT(EM_DIAGRAM):   title10 "Final Training Training";
MPRINT(EM_DIAGRAM):   train estiter=1 outest=_anest outfit=_anfit maxtime=754
maxiter=5 tech = Default;
WARNING: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 5 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANEST has 8 observations and 762 variables.
NOTE: The data set WORK._ANFIT has 14 observations and 36 variables.
MPRINT(EM_DIAGRAM):   ;
498768     train estiter=1 outest=_anest outfit=_anfit maxtime=754 maxiter=5
MPRINT(EM_DIAGRAM):   run;
498769     tech = Default;
498770     ;
498771     run;
 
NOTE: The data set WORK.EM_AUTONEURAL43 has 2374 observations and 15 variables.
NOTE: The data set EMWS8.META2_VALIDATE has . observations and 45 variables.
NOTE: View EMWS8.META2_VALIDATE.VIEW used (Total process time):
      real time           1.45 seconds
      cpu time            1.43 seconds
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: Closing the Neural Application.
NOTE: The PROCEDURE NEURAL printed page 466.
NOTE: PROCEDURE NEURAL used (Total process time):
      real time           1.45 seconds
      cpu time            1.43 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
498772     *;
498773     proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
MPRINT(EM_DIAGRAM):   proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
498774     var _iter_ _aic_ _averr_ _misc_
498775     _vaverr_ _vmisc_
498776     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
498777     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 7 observations read from the data set WORK._ANFIT.
      WHERE _name_='OVERALL';
NOTE: The PROCEDURE PRINT printed page 467.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Extract best iteration;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
498778     *------------------------------------------------------------*;
498779     * Extract best iteration;
498780     ;
498781     *------------------------------------------------------------*;
498782     %global _iter;
498783     data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
498784     set _anfit(where=(_NAME_ eq 'OVERALL'));
MPRINT(EM_DIAGRAM):   set _anfit(where=(_NAME_ eq 'OVERALL'));
498785     retain _min 1e+64;
MPRINT(EM_DIAGRAM):   retain _min 1e+64;
498786     if _VMISC_ < _min then do;
MPRINT(EM_DIAGRAM):   if _VMISC_ < _min then do;
498787     _min = _VMISC_;
MPRINT(EM_DIAGRAM):   _min = _VMISC_;
498788     call symput('_iter',put(_ITER_, 6.));
MPRINT(EM_DIAGRAM):   call symput('_iter',put(_ITER_, 6.));
498789     end;
MPRINT(EM_DIAGRAM):   end;
498790     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 7 observations read from the data set WORK._ANFIT.
      WHERE _NAME_='OVERALL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
498791     *;
 
498792     data EMWS8.AutoNeural43_ESTDS;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural43_ESTDS;
498793     set _anest;
MPRINT(EM_DIAGRAM):   set _anest;
498794     if _ITER_ eq 3 then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 3 then do;
498795     output;
MPRINT(EM_DIAGRAM):   output;
498796     stop;
MPRINT(EM_DIAGRAM):   stop;
498797     end;
MPRINT(EM_DIAGRAM):   end;
498798     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._ANEST.
NOTE: The data set EMWS8.AUTONEURAL43_ESTDS has 1 observations and 762
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
498799     *;
498800     data EMWS8.AutoNeural43_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural43_OUTFIT;
498801     set _anfit;
MPRINT(EM_DIAGRAM):   set _anfit;
498802     if _ITER_ eq 3 and _NAME_ eq "OVERALL" then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 3 and _NAME_ eq "OVERALL" then do;
498803     output;
MPRINT(EM_DIAGRAM):   output;
498804     stop;
MPRINT(EM_DIAGRAM):   stop;
498805     end;
MPRINT(EM_DIAGRAM):   end;
498806     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set WORK._ANFIT.
NOTE: The data set EMWS8.AUTONEURAL43_OUTFIT has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
498807     *;
MPRINT(EM_DIAGRAM):    *;
498808     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
498809     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_selectediteration_title
498809   ! , NOQUOTE, _VMISC_))";
MPRINT(EM_DIAGRAM):   title10 "Selected Iteration based on _VMISC_";
498810     proc print data=EMWS8.AutoNeural43_OUTFIT noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural43_OUTFIT noobs;
498811     var _iter_ _aic_ _averr_ _misc_
498812     _vaverr_ _vmisc_
498813     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
498814     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL43_OUTFIT.
NOTE: The PROCEDURE PRINT printed page 468.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
498815     title9;
MPRINT(EM_DIAGRAM):   title9;
498816     title10;
MPRINT(EM_DIAGRAM):   title10;
498817     * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
498818     ;
MPRINT(EM_DIAGRAM):   ;
498819     data EMWS8.AutoNeural43_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural43_OUTFIT;
498820     set EMWS8.AutoNeural43_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural43_OUTFIT;
498821     length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
498822     _func_ = "";
MPRINT(EM_DIAGRAM):   _func_ = "";
498823     _status_ = "Final";
MPRINT(EM_DIAGRAM):   _status_ = "Final";
498824     _step_ = "";
MPRINT(EM_DIAGRAM):   _step_ = "";
498825     _index_ = 4;
MPRINT(EM_DIAGRAM):   _index_ = 4;
498826     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL43_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL43_OUTFIT has 1 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
498827     data EMWS8.AutoNeural43_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural43_HISTORY;
498828     set EMWS8.AutoNeural43_HISTORY EMWS8.AutoNeural43_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural43_HISTORY EMWS8.AutoNeural43_OUTFIT;
498829     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 24 observations read from the data set
      EMWS8.AUTONEURAL43_HISTORY.
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL43_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL43_HISTORY has 25 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
498830     title9 " ";
MPRINT(EM_DIAGRAM):    title9 " ";
498831     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_finaltrainhistory_title
498831   ! , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Final Training History";
498832     proc print data=EMWS8.AutoNeural43_HISTORY noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural43_HISTORY noobs;
498833     var _step_ _func_ _status_ _iter_ _averr_ _misc_ _aic_
498834     _vaverr_ _vmisc_
498835     ;
MPRINT(EM_DIAGRAM):   var _step_ _func_ _status_ _iter_ _averr_ _misc_ _aic_
_vaverr_ _vmisc_ ;
498836     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 25 observations read from the data set
      EMWS8.AUTONEURAL43_HISTORY.
NOTE: The PROCEDURE PRINT printed page 469.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
498837     data work.keep_history;
MPRINT(EM_DIAGRAM):   data work.keep_history;
498838     set EMWS8.AutoNeural43_HISTORY;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural43_HISTORY;
498839     if _status_='keep';
MPRINT(EM_DIAGRAM):   if _status_='keep';
498840     if _func_='DIRECT' then neurons=0;
MPRINT(EM_DIAGRAM):   if _func_='DIRECT' then neurons=0;
498841     else neurons=7;
MPRINT(EM_DIAGRAM):   else neurons=7;
498842     label neurons="%sysfunc(sasmsg(sashelp.dmine,
498842   ! rpt_numberneurons_vlabel  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   label neurons= "Number of Neurons";
498843     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 25 observations read from the data set
      EMWS8.AUTONEURAL43_HISTORY.
NOTE: The data set WORK.KEEP_HISTORY has 4 observations and 41 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
498844     title8 " ";
MPRINT(EM_DIAGRAM):   title8 " ";
498845     title9 "%sysfunc(sasmsg(sashelp.dmine, rpt_finalmodel_title  ,
498845   ! NOQUOTE))";
MPRINT(EM_DIAGRAM):   title9 "Final Model";
498846     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_stopping_title  ,
498846   ! NOQUOTE, %nrbquote(Termination criteria were satisfied: overfitting
498846   ! based on _VMISC_)))";
MPRINT(EM_DIAGRAM):   title10 "Stopping: Termination criteria were satisfied:
overfitting based on _VMISC_";
498847     proc print data=work.keep_history noobs;
MPRINT(EM_DIAGRAM):   proc print data=work.keep_history noobs;
498848     var _func_ _averr_
498849     _vaverr_
498850     neurons;
MPRINT(EM_DIAGRAM):   var _func_ _averr_ _vaverr_ neurons;
498851     sum neurons;
MPRINT(EM_DIAGRAM):   sum neurons;
498852     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK.KEEP_HISTORY.
NOTE: The PROCEDURE PRINT printed page 470.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
498853     title8;
MPRINT(EM_DIAGRAM):   title8;
498854     title9;
MPRINT(EM_DIAGRAM):   title9;
498855     title10;
MPRINT(EM_DIAGRAM):   title10;
498856     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
498857     * AutoNeural Final Network;
MPRINT(EM_DIAGRAM):   * AutoNeural Final Network;
498858     ;
MPRINT(EM_DIAGRAM):   ;
498859     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
498860     *;
MPRINT(EM_DIAGRAM):   *;
498861     proc neural data=EM_AutoNeural43 dmdbcat=WORK.AutoNeural43_DMDB
498862     validdata=EMWS8.Meta2_VALIDATE
498863     ;
MPRINT(EM_DIAGRAM):   proc neural data=EM_AutoNeural43
dmdbcat=WORK.AutoNeural43_DMDB validdata=EMWS8.Meta2_VALIDATE ;
498864     *;
MPRINT(EM_DIAGRAM):   *;
498865     nloptions noprint;
MPRINT(EM_DIAGRAM):   nloptions noprint;
498866     performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   input
498867     input %INTINPUTS / level=interval id=interval;
MPRINT(INTINPUTS):   AcceptedCmpTotal Frq Income Mnt MntGoldProds
MntMeatProducts NumCatalogPurchases NumDealsPurchases NumWebVisitsMonth RFMstat
Recency Teenhome Year_Birth
MPRINT(EM_DIAGRAM):   / level=interval id=interval;
MPRINT(EM_DIAGRAM):   input
498868     input %NOMINPUTS / level=nominal id=nominal;
MPRINT(NOMINPUTS):   Marital_Status
MPRINT(EM_DIAGRAM):   / level=nominal id=nominal;
498869     target DepVar / level=NOMINAL id=DepVar
498870     ;
MPRINT(EM_DIAGRAM):   target DepVar / level=NOMINAL id=DepVar ;
498871     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
498872     * Layer #1;
MPRINT(EM_DIAGRAM):   * Layer #1;
498873     ;
MPRINT(EM_DIAGRAM):   ;
498874     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
498875     Hidden 7 / id = H1x1_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 7 / id = H1x1_ act=SOFTMAX;
498876     connect interval H1x1_;
MPRINT(EM_DIAGRAM):   connect interval H1x1_;
498877     connect nominal H1x1_;
MPRINT(EM_DIAGRAM):   connect nominal H1x1_;
498878     Hidden 7 / id = H1x2_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 7 / id = H1x2_ act=SOFTMAX;
498879     connect interval H1x2_;
MPRINT(EM_DIAGRAM):   connect interval H1x2_;
498880     connect nominal H1x2_;
MPRINT(EM_DIAGRAM):   connect nominal H1x2_;
498881     Hidden 7 / id = H1x3_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 7 / id = H1x3_ act=SOFTMAX;
498882     connect interval H1x3_;
MPRINT(EM_DIAGRAM):   connect interval H1x3_;
498883     connect nominal H1x3_;
MPRINT(EM_DIAGRAM):   connect nominal H1x3_;
498884     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
498885     * Layer #2;
MPRINT(EM_DIAGRAM):   * Layer #2;
498886     ;
MPRINT(EM_DIAGRAM):   ;
498887     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
498888     Hidden 7 / id = H2x1_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 7 / id = H2x1_ act=LOG;
498889     connect H1x1_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x1_ H2x1_;
498890     connect H1x2_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x2_ H2x1_;
498891     connect H1x3_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x3_ H2x1_;
498892     Hidden 7 / id = H2x2_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 7 / id = H2x2_ act=LOG;
498893     connect H1x1_ H2x2_;
MPRINT(EM_DIAGRAM):   connect H1x1_ H2x2_;
498894     connect H1x2_ H2x2_;
MPRINT(EM_DIAGRAM):   connect H1x2_ H2x2_;
498895     connect H1x3_ H2x2_;
MPRINT(EM_DIAGRAM):   connect H1x3_ H2x2_;
498896     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
498897     * Layer #3;
MPRINT(EM_DIAGRAM):   * Layer #3;
498898     ;
MPRINT(EM_DIAGRAM):   ;
498899     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
498900     Hidden 7 / id = H3x1_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 7 / id = H3x1_ act=SOFTMAX;
498901     connect H2x1_ H3x1_;
MPRINT(EM_DIAGRAM):   connect H2x1_ H3x1_;
498902     connect H2x2_ H3x1_;
MPRINT(EM_DIAGRAM):   connect H2x2_ H3x1_;
498903     connect H3x1_ DepVar;
MPRINT(EM_DIAGRAM):   connect H3x1_ DepVar;
498904     *;
MPRINT(EM_DIAGRAM):   *;
498905     initial inest= EMWS8.AutoNeural43_ESTDS bylabel;
MPRINT(EM_DIAGRAM):   initial inest= EMWS8.AutoNeural43_ESTDS bylabel;
NOTE: The data set EMWS8.AUTONEURAL43_ESTDS has 1 observations and 762
      variables.
498906     train tech=none;
MPRINT(EM_DIAGRAM):   train tech=none;
NOTE: No optimization performed.
498907     code
498907   ! file="C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural43\SCO
498907   ! RECODE.sas"
498908     group=AutoNeural43
498909     ;
MPRINT(EM_DIAGRAM):   code
file="C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural43\SCORECODE.sas"
 group=AutoNeural43 ;
NOTE: External file
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural43\SCORECODE.sas
      opened.
498910     ;
MPRINT(EM_DIAGRAM):   ;
498911     code
498911   ! file="C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural43\RES
498911   ! IDUALSCORECODE.sas"
498912     group=AutoNeural43
498913     residual
498914     ;
MPRINT(EM_DIAGRAM):   code
file="C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural43\RESIDUALSCOREC
ODE.sas" group=AutoNeural43 residual ;
NOTE: External file
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural43\RESIDUALSCOREC
      ODE.sas opened.
498915     ;
MPRINT(EM_DIAGRAM):   ;
498916     score data=EMWS8.Meta2_TRAIN out=_NULL_
NOTE: View EMWS8.META2_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
498917     outfit=WORK.FIT1
498918     role=TRAIN
498919     outkey=EMWS8.AutoNeural43_OUTKEY;
MPRINT(EM_DIAGRAM):   score data=EMWS8.Meta2_TRAIN out=_NULL_ outfit=WORK.FIT1
role=TRAIN outkey=EMWS8.AutoNeural43_OUTKEY;
NOTE: The data set EMWS8.AUTONEURAL43_OUTKEY has 71 observations and 8
      variables.
NOTE: The data set EMWS8.META2_TRAIN has . observations and 45 variables.
NOTE: There were 2374 observations read from the data set EMWS8.PART_TRAIN.
NOTE: The data set WORK.FIT1 has 2 observations and 23 variables.
498920     score data=EMWS8.Meta2_VALIDATE out=_NULL_
NOTE: View EMWS8.META2_VALIDATE.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
498921     outfit=WORK.FIT2
498922     outkey=EMWS8.AutoNeural43_OUTKEY;
MPRINT(EM_DIAGRAM):   score data=EMWS8.Meta2_VALIDATE out=_NULL_
outfit=WORK.FIT2 outkey=EMWS8.AutoNeural43_OUTKEY;
NOTE: The data set EMWS8.AUTONEURAL43_OUTKEY has 71 observations and 8
      variables.
NOTE: The data set EMWS8.META2_VALIDATE has . observations and 45 variables.
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: The data set WORK.FIT2 has 2 observations and 15 variables.
498923     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK.EM_AUTONEURAL43 has 2374 observations and 15 variables.
NOTE: The data set EMWS8.META2_VALIDATE has . observations and 45 variables.
NOTE: View EMWS8.META2_VALIDATE.VIEW used (Total process time):
      real time           0.26 seconds
      cpu time            0.26 seconds
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: Closing the Neural Application.
NOTE: PROCEDURE NEURAL used (Total process time):
      real time           0.26 seconds
      cpu time            0.26 seconds
 
 
498924     data EMWS8.AutoNeural43_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural43_OUTFIT;
498925     merge WORK.FIT1 WORK.FIT2;
MPRINT(EM_DIAGRAM):   merge WORK.FIT1 WORK.FIT2;
498926     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set WORK.FIT1.
NOTE: There were 2 observations read from the data set WORK.FIT2.
NOTE: The data set EMWS8.AUTONEURAL43_OUTFIT has 2 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
498927     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
498928     * Generate Weights Plotting data set;
MPRINT(EM_DIAGRAM):   * Generate Weights Plotting data set;
498929     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
498930     data tempweight ( drop = _tech_ _decay_ _seed_ _nobj_ _obj_ _objerr_
498930   ! _averr_ _p_num_ where= (_type_ eq "PARMS"));
MPRINT(EM_DIAGRAM):   data tempweight ( drop = _tech_ _decay_ _seed_ _nobj_
_obj_ _objerr_ _averr_ _p_num_ where= (_type_ eq "PARMS"));
498931     set EMWS8.AutoNeural43_ESTDS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural43_ESTDS;
498932     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.AUTONEURAL43_ESTDS.
NOTE: The data set WORK.TEMPWEIGHT has 1 observations and 754 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
498933     proc sort;
MPRINT(EM_DIAGRAM):   proc sort;
498934     by _name_;
MPRINT(EM_DIAGRAM):   by _name_;
498935     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK.TEMPWEIGHT.
NOTE: The data set WORK.TEMPWEIGHT has 1 observations and 754 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
498936     proc transpose data=tempweight out=EMWS8.AutoNeural43_WEIGHTS;
MPRINT(EM_DIAGRAM):   proc transpose data=tempweight
out=EMWS8.AutoNeural43_WEIGHTS;
498937     by _name_;
MPRINT(EM_DIAGRAM):   by _name_;
498938     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK.TEMPWEIGHT.
NOTE: The data set EMWS8.AUTONEURAL43_WEIGHTS has 752 observations and 3
      variables.
NOTE: PROCEDURE TRANSPOSE used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
498939     data EMWS8.AutoNeural43_WEIGHTS;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural43_WEIGHTS;
498940     set EMWS8.AutoNeural43_WEIGHTS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural43_WEIGHTS;
498941     FROM = ktrim(kleft(kscan(_LABEL_, 1, '-->')));
MPRINT(EM_DIAGRAM):   FROM = ktrim(kleft(kscan(_LABEL_, 1, '-->')));
498942     TO = ktrim(kleft(kscan(_LABEL_, 2, '>')));
MPRINT(EM_DIAGRAM):   TO = ktrim(kleft(kscan(_LABEL_, 2, '>')));
498943     WEIGHT = COL1;
MPRINT(EM_DIAGRAM):   WEIGHT = COL1;
498944     if (TO eq '') or (FROM eq '') then delete;
MPRINT(EM_DIAGRAM):   if (TO eq '') or (FROM eq '') then delete;
498945     label _LABEL_ ="%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel  ,
498945   ! NOQUOTE))" FROM = "%sysfunc(sasmsg(sashelp.dmine, rpt_from_vlabel  ,
498945   ! NOQUOTE))" TO = "%sysfunc(sasmsg(sashelp.dmine, rpt_into_vlabel  ,
498945   ! NOQUOTE))" WEIGHT =
498946        "%sysfunc(sasmsg(sashelp.dmine, rpt_weight_vlabel  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _LABEL_ = "Label" FROM = "From" TO = "Into" WEIGHT
= "Weight";
498947     keep FROM TO WEIGHT _LABEL_;
MPRINT(EM_DIAGRAM):   keep FROM TO WEIGHT _LABEL_;
498948     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 752 observations read from the data set
      EMWS8.AUTONEURAL43_WEIGHTS.
NOTE: The data set EMWS8.AUTONEURAL43_WEIGHTS has 747 observations and 4
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   * restore printing options;
MPRINT(EM_DIAGRAM):   ;
498949     * restore printing options;
498950     ;
498951     title10;
MPRINT(EM_DIAGRAM):   title10;
498952     options linesize=95;
MPRINT(EM_DIAGRAM):   options linesize=95;
498953     options pagesize=10000;
MPRINT(EM_DIAGRAM):   options pagesize=10000;
498954     options nonumber;
MPRINT(EM_DIAGRAM):   options nonumber;
498955     options nocenter;
MPRINT(EM_DIAGRAM):   options nocenter;
498956     options nodate;
MPRINT(EM_DIAGRAM):   options nodate;
MPRINT(EM_DIAGRAM):   *;
498957     *;
498958     proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
498959     delete EM_AutoNeural43;
MPRINT(EM_DIAGRAM):   delete EM_AutoNeural43;
498960     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Deleting WORK.EM_AUTONEURAL43 (memtype=DATA).
498961     quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
498962     data EMWS8.AutoNeural43_HISTORY;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural43_HISTORY;
498963     set EMWS8.AutoNeural43_HISTORY;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural43_HISTORY;
498964     label _T_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_trainstep_vlabel  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _T_ = "Training Step";
498965     label _iter_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_trainiterations_vlabel  ,
498965   ! NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _iter_ = "Training Iterations";
498966     _T_ = _N_ -1;
MPRINT(EM_DIAGRAM):   _T_ = _N_ -1;
498967     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 25 observations read from the data set EMWS8.AUTONEURAL43_HISTORY.
NOTE: The data set EMWS8.AUTONEURAL43_HISTORY has 25 observations and 41 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "28. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "19.50 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                28. April 2016
Time:                19.50 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O1YPCFLX
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural43\EMSCORE.out" encoding="UTF-8"
NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O1YPCFLX new;
MPRINT(EM_DIAGRAM):   run;
499069     filename emflow
499069   ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural43\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural43\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * AutoNeural43: Scoring DATA data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
499070     *------------------------------------------------------------*;
499071     * AutoNeural43: Scoring DATA data;
499072     *------------------------------------------------------------*;
499073     data EMWS8.AutoNeural43_TRAIN
499074     / view=EMWS8.AutoNeural43_TRAIN
499075     ;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural43_TRAIN / view=EMWS8.AutoNeural43_TRAIN ;
499076     set EMWS8.Meta2_TRAIN
499077     ;
MPRINT(EM_DIAGRAM):   set EMWS8.Meta2_TRAIN ;
499078     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural43\EMFLOWSCORE.sas.
499079    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
499080    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
499081    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
499082    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
499083    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
499084    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
499085    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
499086    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
499087    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
499088    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
499089    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
499090    +LENGTH _WARN_ $4
499091    +      F_DepVar  $ 12
499092    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
499093    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
499094    +
499095    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
499096    +
499097    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
499098    +
499099    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
499100    +
499101    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
499102    +
499103    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
499104    +
499105    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
499106    +
499107    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
499108    +
499109    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
499110    +
499111    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
499112    +
499113    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
499114    +
499115    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
499116    +
499117    +      label S_Year_Birth = 'Standard: Year_Birth' ;
MPRINT(EM_DIAGRAM):   label S_Year_Birth = 'Standard: Year_Birth' ;
499118    +
499119    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
499120    +
499121    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
499122    +
499123    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
499124    +
499125    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
499126    +
499127    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
499128    +
499129    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
499130    +
499131    +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
499132    +
499133    +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
499134    +
499135    +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
499136    +
499137    +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
499138    +
499139    +      label H1x1_7 = 'Hidden: H1x1_=7' ;
MPRINT(EM_DIAGRAM):   label H1x1_7 = 'Hidden: H1x1_=7' ;
499140    +
499141    +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
499142    +
499143    +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
499144    +
499145    +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
499146    +
499147    +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
499148    +
499149    +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
499150    +
499151    +      label H1x2_6 = 'Hidden: H1x2_=6' ;
MPRINT(EM_DIAGRAM):   label H1x2_6 = 'Hidden: H1x2_=6' ;
499152    +
499153    +      label H1x2_7 = 'Hidden: H1x2_=7' ;
MPRINT(EM_DIAGRAM):   label H1x2_7 = 'Hidden: H1x2_=7' ;
499154    +
499155    +      label H1x3_1 = 'Hidden: H1x3_=1' ;
MPRINT(EM_DIAGRAM):   label H1x3_1 = 'Hidden: H1x3_=1' ;
499156    +
499157    +      label H1x3_2 = 'Hidden: H1x3_=2' ;
MPRINT(EM_DIAGRAM):   label H1x3_2 = 'Hidden: H1x3_=2' ;
499158    +
499159    +      label H1x3_3 = 'Hidden: H1x3_=3' ;
MPRINT(EM_DIAGRAM):   label H1x3_3 = 'Hidden: H1x3_=3' ;
499160    +
499161    +      label H1x3_4 = 'Hidden: H1x3_=4' ;
MPRINT(EM_DIAGRAM):   label H1x3_4 = 'Hidden: H1x3_=4' ;
499162    +
499163    +      label H1x3_5 = 'Hidden: H1x3_=5' ;
MPRINT(EM_DIAGRAM):   label H1x3_5 = 'Hidden: H1x3_=5' ;
499164    +
499165    +      label H1x3_6 = 'Hidden: H1x3_=6' ;
MPRINT(EM_DIAGRAM):   label H1x3_6 = 'Hidden: H1x3_=6' ;
499166    +
499167    +      label H1x3_7 = 'Hidden: H1x3_=7' ;
MPRINT(EM_DIAGRAM):   label H1x3_7 = 'Hidden: H1x3_=7' ;
499168    +
499169    +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
499170    +
499171    +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
499172    +
499173    +      label H2x1_3 = 'Hidden: H2x1_=3' ;
MPRINT(EM_DIAGRAM):   label H2x1_3 = 'Hidden: H2x1_=3' ;
499174    +
499175    +      label H2x1_4 = 'Hidden: H2x1_=4' ;
MPRINT(EM_DIAGRAM):   label H2x1_4 = 'Hidden: H2x1_=4' ;
499176    +
499177    +      label H2x1_5 = 'Hidden: H2x1_=5' ;
MPRINT(EM_DIAGRAM):   label H2x1_5 = 'Hidden: H2x1_=5' ;
499178    +
499179    +      label H2x1_6 = 'Hidden: H2x1_=6' ;
MPRINT(EM_DIAGRAM):   label H2x1_6 = 'Hidden: H2x1_=6' ;
499180    +
499181    +      label H2x1_7 = 'Hidden: H2x1_=7' ;
MPRINT(EM_DIAGRAM):   label H2x1_7 = 'Hidden: H2x1_=7' ;
499182    +
499183    +      label H2x2_1 = 'Hidden: H2x2_=1' ;
MPRINT(EM_DIAGRAM):   label H2x2_1 = 'Hidden: H2x2_=1' ;
499184    +
499185    +      label H2x2_2 = 'Hidden: H2x2_=2' ;
MPRINT(EM_DIAGRAM):   label H2x2_2 = 'Hidden: H2x2_=2' ;
499186    +
499187    +      label H2x2_3 = 'Hidden: H2x2_=3' ;
MPRINT(EM_DIAGRAM):   label H2x2_3 = 'Hidden: H2x2_=3' ;
499188    +
499189    +      label H2x2_4 = 'Hidden: H2x2_=4' ;
MPRINT(EM_DIAGRAM):   label H2x2_4 = 'Hidden: H2x2_=4' ;
499190    +
499191    +      label H2x2_5 = 'Hidden: H2x2_=5' ;
MPRINT(EM_DIAGRAM):   label H2x2_5 = 'Hidden: H2x2_=5' ;
499192    +
499193    +      label H2x2_6 = 'Hidden: H2x2_=6' ;
MPRINT(EM_DIAGRAM):   label H2x2_6 = 'Hidden: H2x2_=6' ;
499194    +
499195    +      label H2x2_7 = 'Hidden: H2x2_=7' ;
MPRINT(EM_DIAGRAM):   label H2x2_7 = 'Hidden: H2x2_=7' ;
499196    +
499197    +      label H3x1_1 = 'Hidden: H3x1_=1' ;
MPRINT(EM_DIAGRAM):   label H3x1_1 = 'Hidden: H3x1_=1' ;
499198    +
499199    +      label H3x1_2 = 'Hidden: H3x1_=2' ;
MPRINT(EM_DIAGRAM):   label H3x1_2 = 'Hidden: H3x1_=2' ;
499200    +
499201    +      label H3x1_3 = 'Hidden: H3x1_=3' ;
MPRINT(EM_DIAGRAM):   label H3x1_3 = 'Hidden: H3x1_=3' ;
499202    +
499203    +      label H3x1_4 = 'Hidden: H3x1_=4' ;
MPRINT(EM_DIAGRAM):   label H3x1_4 = 'Hidden: H3x1_=4' ;
499204    +
499205    +      label H3x1_5 = 'Hidden: H3x1_=5' ;
MPRINT(EM_DIAGRAM):   label H3x1_5 = 'Hidden: H3x1_=5' ;
499206    +
499207    +      label H3x1_6 = 'Hidden: H3x1_=6' ;
MPRINT(EM_DIAGRAM):   label H3x1_6 = 'Hidden: H3x1_=6' ;
499208    +
499209    +      label H3x1_7 = 'Hidden: H3x1_=7' ;
MPRINT(EM_DIAGRAM):   label H3x1_7 = 'Hidden: H3x1_=7' ;
499210    +
499211    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
499212    +
499213    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
499214    +
499215    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
499216    +
499217    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
499218    +
499219    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
499220    +
499221    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
499222    +
499223    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
499224    +
499225    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
499226    +
499227    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
499228    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
499229    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
499230    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
499231    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
499232    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
499233    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
499234    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
499235    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
499236    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
499237    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
499238    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
499239    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
499240    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
499241    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
499242    +end;
MPRINT(EM_DIAGRAM):   end;
499243    +else do;
MPRINT(EM_DIAGRAM):   else do;
499244    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
499245    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
499246    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
499247    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
499248    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
499249    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
499250    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
499251    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
499252    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
499253    +         end;
MPRINT(EM_DIAGRAM):   end;
499254    +         else do;
MPRINT(EM_DIAGRAM):   else do;
499255    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
499256    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
499257    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
499258    +            end;
MPRINT(EM_DIAGRAM):   end;
499259    +         end;
MPRINT(EM_DIAGRAM):   end;
499260    +      end;
MPRINT(EM_DIAGRAM):   end;
499261    +      else do;
MPRINT(EM_DIAGRAM):   else do;
499262    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
499263    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
499264    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
499265    +         end;
MPRINT(EM_DIAGRAM):   end;
499266    +      end;
MPRINT(EM_DIAGRAM):   end;
499267    +   end;
MPRINT(EM_DIAGRAM):   end;
499268    +   else do;
MPRINT(EM_DIAGRAM):   else do;
499269    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
499270    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
499271    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
499272    +      end;
MPRINT(EM_DIAGRAM):   end;
499273    +      else do;
MPRINT(EM_DIAGRAM):   else do;
499274    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
499275    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
499276    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
499277    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
499278    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
499279    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
499280    +         end;
MPRINT(EM_DIAGRAM):   end;
499281    +      end;
MPRINT(EM_DIAGRAM):   end;
499282    +   end;
MPRINT(EM_DIAGRAM):   end;
499283    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
499284    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
499285    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
499286    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
499287    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
499288    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
499289    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
499290    +   end;
MPRINT(EM_DIAGRAM):   end;
499291    +end;
MPRINT(EM_DIAGRAM):   end;
499292    +
499293    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
499294    +*** Checking missing input Interval
499295    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
499296    +
499297    +IF NMISS(
499298    +   AcceptedCmpTotal ,
499299    +   Frq ,
499300    +   Income ,
499301    +   Mnt ,
499302    +   MntGoldProds ,
499303    +   MntMeatProducts ,
499304    +   NumCatalogPurchases ,
499305    +   NumDealsPurchases ,
499306    +   NumWebVisitsMonth ,
499307    +   RFMstat ,
499308    +   Recency ,
499309    +   Teenhome ,
499310    +   Year_Birth   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Income , Mnt , MntGoldProds ,
MntMeatProducts , NumCatalogPurchases , NumDealsPurchases , NumWebVisitsMonth , RFMstat ,
Recency , Teenhome , Year_Birth ) THEN DO;
499311    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
499312    +
499313    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
499314    +END;
MPRINT(EM_DIAGRAM):   END;
499315    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
499316    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
499317    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
499318    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
499319    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
499320    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
499321    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
499322    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
499323    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
499324    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
499325    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
499326    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
499327    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
499328    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
499329    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
499330    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
499331    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
499332    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
499333    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
499334    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
499335    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
499336    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
499337    +   S_Year_Birth  =    -163.205330145852 +     0.08289609202864 * Year_Birth ;
MPRINT(EM_DIAGRAM):   S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
499338    +END;
MPRINT(EM_DIAGRAM):   END;
499339    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
499340    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
499341    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
499342    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
499343    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
499344    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
499345    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
499346    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
499347    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
499348    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
499349    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
499350    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
499351    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
499352    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
499353    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
499354    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
499355    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
499356    +   ELSE S_NumCatalogPurchases
499357    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
499358    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
499359    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
499360    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
499361    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
499362    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
499363    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
499364    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
499365    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
499366    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
499367    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
499368    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
499369    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
499370    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
499371    +   IF MISSING( Year_Birth ) THEN S_Year_Birth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Year_Birth ) THEN S_Year_Birth = . ;
499372    +   ELSE S_Year_Birth  =    -163.205330145852 +     0.08289609202864 *
499373    +        Year_Birth ;
MPRINT(EM_DIAGRAM):   ELSE S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
499374    +END;
MPRINT(EM_DIAGRAM):   END;
499375    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
499376    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
499377    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
499378    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
499379    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
499380    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
499381    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
499382    +   H1x1_1  =    -0.29618919413806 * S_AcceptedCmpTotal
499383    +          +     0.65621237028757 * S_Frq  +     0.03418945976327 * S_Income
499384    +          +     1.44880456678399 * S_Mnt  +     0.74166093949552 *
499385    +        S_MntGoldProds  +     1.02706876663519 * S_MntMeatProducts
499386    +          +    -0.82528424139262 * S_NumCatalogPurchases
499387    +          +      0.5929046965244 * S_NumDealsPurchases
499388    +          +    -0.52362488197384 * S_NumWebVisitsMonth
499389    +          +     0.37882892269923 * S_RFMstat  +     2.12340115344155 *
499390    +        S_Recency  +    -0.83670225777249 * S_Teenhome
499391    +          +     0.53976656905831 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.29618919413806 * S_AcceptedCmpTotal + 0.65621237028757 *
S_Frq + 0.03418945976327 * S_Income + 1.44880456678399 * S_Mnt + 0.74166093949552 *
S_MntGoldProds + 1.02706876663519 * S_MntMeatProducts + -0.82528424139262 *
S_NumCatalogPurchases + 0.5929046965244 * S_NumDealsPurchases + -0.52362488197384 *
S_NumWebVisitsMonth + 0.37882892269923 * S_RFMstat + 2.12340115344155 * S_Recency +
-0.83670225777249 * S_Teenhome + 0.53976656905831 * S_Year_Birth ;
499392    +   H1x1_2  =     0.29962396390652 * S_AcceptedCmpTotal
499393    +          +     -2.5902198016826 * S_Frq  +    -0.18776639473475 * S_Income
499394    +          +    -2.77524252217737 * S_Mnt  +     0.96018065616836 *
499395    +        S_MntGoldProds  +     3.16907172523474 * S_MntMeatProducts
499396    +          +    -0.60117742307807 * S_NumCatalogPurchases
499397    +          +     1.09806082321711 * S_NumDealsPurchases
499398    +          +     1.26617704720444 * S_NumWebVisitsMonth
499399    +          +     1.08444062320284 * S_RFMstat  +     1.05523311776937 *
499400    +        S_Recency  +     -0.2630764341314 * S_Teenhome
499401    +          +    -0.42373178164016 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.29962396390652 * S_AcceptedCmpTotal + -2.5902198016826 *
S_Frq + -0.18776639473475 * S_Income + -2.77524252217737 * S_Mnt + 0.96018065616836 *
S_MntGoldProds + 3.16907172523474 * S_MntMeatProducts + -0.60117742307807 *
S_NumCatalogPurchases + 1.09806082321711 * S_NumDealsPurchases + 1.26617704720444 *
S_NumWebVisitsMonth + 1.08444062320284 * S_RFMstat + 1.05523311776937 * S_Recency +
-0.2630764341314 * S_Teenhome + -0.42373178164016 * S_Year_Birth ;
499402    +   H1x1_3  =     2.31041583450369 * S_AcceptedCmpTotal
499403    +          +    -1.96810851023784 * S_Frq  +     0.93795839333407 * S_Income
499404    +          +    -1.55337331547216 * S_Mnt  +     1.13417428979776 *
499405    +        S_MntGoldProds  +     3.70573651287077 * S_MntMeatProducts
499406    +          +     1.63075268570383 * S_NumCatalogPurchases
499407    +          +     0.62057902628545 * S_NumDealsPurchases
499408    +          +     1.85944172136218 * S_NumWebVisitsMonth
499409    +          +     0.51474936656536 * S_RFMstat  +    -2.17922024885571 *
499410    +        S_Recency  +    -0.78663308544854 * S_Teenhome
499411    +          +    -0.08719031066365 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 2.31041583450369 * S_AcceptedCmpTotal + -1.96810851023784 *
S_Frq + 0.93795839333407 * S_Income + -1.55337331547216 * S_Mnt + 1.13417428979776 *
S_MntGoldProds + 3.70573651287077 * S_MntMeatProducts + 1.63075268570383 *
S_NumCatalogPurchases + 0.62057902628545 * S_NumDealsPurchases + 1.85944172136218 *
S_NumWebVisitsMonth + 0.51474936656536 * S_RFMstat + -2.17922024885571 * S_Recency +
-0.78663308544854 * S_Teenhome + -0.08719031066365 * S_Year_Birth ;
499412    +   H1x1_4  =     -0.0390409024382 * S_AcceptedCmpTotal
499413    +          +     2.11606776858073 * S_Frq  +     -0.3817450995856 * S_Income
499414    +          +     0.40531492299483 * S_Mnt  +     0.54341985868017 *
499415    +        S_MntGoldProds  +    -5.50809183295151 * S_MntMeatProducts
499416    +          +    -2.59032878085972 * S_NumCatalogPurchases
499417    +          +    -0.44146008176644 * S_NumDealsPurchases
499418    +          +     1.16377649939583 * S_NumWebVisitsMonth
499419    +          +    -0.40950445519308 * S_RFMstat  +     1.44701615363875 *
499420    +        S_Recency  +    -0.44721505258044 * S_Teenhome
499421    +          +    -0.53780522701747 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -0.0390409024382 * S_AcceptedCmpTotal + 2.11606776858073 *
S_Frq + -0.3817450995856 * S_Income + 0.40531492299483 * S_Mnt + 0.54341985868017 *
S_MntGoldProds + -5.50809183295151 * S_MntMeatProducts + -2.59032878085972 *
S_NumCatalogPurchases + -0.44146008176644 * S_NumDealsPurchases + 1.16377649939583 *
S_NumWebVisitsMonth + -0.40950445519308 * S_RFMstat + 1.44701615363875 * S_Recency +
-0.44721505258044 * S_Teenhome + -0.53780522701747 * S_Year_Birth ;
499422    +   H1x1_5  =    -0.96249689474011 * S_AcceptedCmpTotal
499423    +          +     1.18171571446591 * S_Frq  +     0.15643078933994 * S_Income
499424    +          +      1.1855275327594 * S_Mnt  +    -0.31882188338593 *
499425    +        S_MntGoldProds  +    -0.17799046807331 * S_MntMeatProducts
499426    +          +    -2.88423926492169 * S_NumCatalogPurchases
499427    +          +     0.76448279454687 * S_NumDealsPurchases
499428    +          +     0.63782718366339 * S_NumWebVisitsMonth
499429    +          +    -1.52311206450608 * S_RFMstat  +     2.66138322599513 *
499430    +        S_Recency  +     0.19809045233143 * S_Teenhome
499431    +          +    -0.11944673598308 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -0.96249689474011 * S_AcceptedCmpTotal + 1.18171571446591 *
S_Frq + 0.15643078933994 * S_Income + 1.1855275327594 * S_Mnt + -0.31882188338593 *
S_MntGoldProds + -0.17799046807331 * S_MntMeatProducts + -2.88423926492169 *
S_NumCatalogPurchases + 0.76448279454687 * S_NumDealsPurchases + 0.63782718366339 *
S_NumWebVisitsMonth + -1.52311206450608 * S_RFMstat + 2.66138322599513 * S_Recency +
0.19809045233143 * S_Teenhome + -0.11944673598308 * S_Year_Birth ;
499432    +   H1x1_6  =     1.48018319811202 * S_AcceptedCmpTotal
499433    +          +    -2.35201132061873 * S_Frq  +     1.49549206730687 * S_Income
499434    +          +    -0.92311571755706 * S_Mnt  +    -0.17036386789536 *
499435    +        S_MntGoldProds  +     2.42959371021324 * S_MntMeatProducts
499436    +          +     1.71243370379543 * S_NumCatalogPurchases
499437    +          +     1.59034024362028 * S_NumDealsPurchases
499438    +          +     2.43090724707282 * S_NumWebVisitsMonth
499439    +          +    -1.84934930083177 * S_RFMstat  +    -1.10219728762745 *
499440    +        S_Recency  +    -1.20398234836557 * S_Teenhome
499441    +          +    -0.04071326663204 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_6 = 1.48018319811202 * S_AcceptedCmpTotal + -2.35201132061873 *
S_Frq + 1.49549206730687 * S_Income + -0.92311571755706 * S_Mnt + -0.17036386789536 *
S_MntGoldProds + 2.42959371021324 * S_MntMeatProducts + 1.71243370379543 *
S_NumCatalogPurchases + 1.59034024362028 * S_NumDealsPurchases + 2.43090724707282 *
S_NumWebVisitsMonth + -1.84934930083177 * S_RFMstat + -1.10219728762745 * S_Recency +
-1.20398234836557 * S_Teenhome + -0.04071326663204 * S_Year_Birth ;
499442    +   H1x1_1  = H1x1_1  +    -1.53952272056325 * Marital_StatusDivorced
499443    +          +     1.90782989914192 * Marital_StatusMarried
499444    +          +    -1.16189886119693 * Marital_StatusSingle
499445    +          +     1.42717413956591 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -1.53952272056325 * Marital_StatusDivorced +
1.90782989914192 * Marital_StatusMarried + -1.16189886119693 * Marital_StatusSingle +
1.42717413956591 * Marital_StatusTogether ;
499446    +   H1x1_2  = H1x1_2  +     0.65814869063598 * Marital_StatusDivorced
499447    +          +     0.30468777490799 * Marital_StatusMarried
499448    +          +     0.61978761938746 * Marital_StatusSingle
499449    +          +    -0.78873321292122 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.65814869063598 * Marital_StatusDivorced +
0.30468777490799 * Marital_StatusMarried + 0.61978761938746 * Marital_StatusSingle +
-0.78873321292122 * Marital_StatusTogether ;
499450    +   H1x1_3  = H1x1_3  +      0.1292120736254 * Marital_StatusDivorced
499451    +          +    -1.73477859605124 * Marital_StatusMarried
499452    +          +     1.32595981126289 * Marital_StatusSingle
499453    +          +    -1.40161784211243 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.1292120736254 * Marital_StatusDivorced +
-1.73477859605124 * Marital_StatusMarried + 1.32595981126289 * Marital_StatusSingle +
-1.40161784211243 * Marital_StatusTogether ;
499454    +   H1x1_4  = H1x1_4  +     0.20617554754163 * Marital_StatusDivorced
499455    +          +     0.06077392213964 * Marital_StatusMarried
499456    +          +     0.21115279121703 * Marital_StatusSingle
499457    +          +    -0.61340758151821 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + 0.20617554754163 * Marital_StatusDivorced +
0.06077392213964 * Marital_StatusMarried + 0.21115279121703 * Marital_StatusSingle +
-0.61340758151821 * Marital_StatusTogether ;
499458    +   H1x1_5  = H1x1_5  +    -0.69141266071894 * Marital_StatusDivorced
499459    +          +    -0.24067068377767 * Marital_StatusMarried
499460    +          +      0.2728964145401 * Marital_StatusSingle
499461    +          +    -0.61614895252648 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.69141266071894 * Marital_StatusDivorced +
-0.24067068377767 * Marital_StatusMarried + 0.2728964145401 * Marital_StatusSingle +
-0.61614895252648 * Marital_StatusTogether ;
499462    +   H1x1_6  = H1x1_6  +    -0.81455860225062 * Marital_StatusDivorced
499463    +          +    -0.15640287278595 * Marital_StatusMarried
499464    +          +     0.54159395450762 * Marital_StatusSingle
499465    +          +    -0.43264862434738 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + -0.81455860225062 * Marital_StatusDivorced +
-0.15640287278595 * Marital_StatusMarried + 0.54159395450762 * Marital_StatusSingle +
-0.43264862434738 * Marital_StatusTogether ;
499466    +   H1x1_1  =    -0.36385036888345 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.36385036888345 + H1x1_1 ;
499467    +   H1x1_2  =     0.02663558500629 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.02663558500629 + H1x1_2 ;
499468    +   H1x1_3  =    -3.50526409213811 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -3.50526409213811 + H1x1_3 ;
499469    +   H1x1_4  =     0.63048769294892 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.63048769294892 + H1x1_4 ;
499470    +   H1x1_5  =     1.21111796976731 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 1.21111796976731 + H1x1_5 ;
499471    +   H1x1_6  =    -1.76174187739611 + H1x1_6 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = -1.76174187739611 + H1x1_6 ;
499472    +   H1x1_7  = 0;
MPRINT(EM_DIAGRAM):   H1x1_7 = 0;
499473    +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 , H1x1_7
499474    +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 ,
H1x1_7 );
499475    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
499476    +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
499477    +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
499478    +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
499479    +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
499480    +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
499481    +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
499482    +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
499483    +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
499484    +   H1x1_5  = EXP(H1x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_5 = EXP(H1x1_5 - _MAX_);
499485    +   _SUM_ = _SUM_ + H1x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_5 ;
499486    +   H1x1_6  = EXP(H1x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_6 = EXP(H1x1_6 - _MAX_);
499487    +   _SUM_ = _SUM_ + H1x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_6 ;
499488    +   H1x1_7  = EXP(H1x1_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_7 = EXP(H1x1_7 - _MAX_);
499489    +   _SUM_ = _SUM_ + H1x1_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_7 ;
499490    +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
499491    +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
499492    +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
499493    +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
499494    +   H1x1_5  = H1x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 / _SUM_;
499495    +   H1x1_6  = H1x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 / _SUM_;
499496    +   H1x1_7  = H1x1_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_7 = H1x1_7 / _SUM_;
499497    +END;
MPRINT(EM_DIAGRAM):   END;
499498    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
499499    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
499500    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
499501    +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
499502    +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
499503    +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
499504    +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
499505    +   H1x1_7  = .;
MPRINT(EM_DIAGRAM):   H1x1_7 = .;
499506    +END;
MPRINT(EM_DIAGRAM):   END;
499507    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
499508    +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
499509    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
499510    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
499511    +   H1x2_1  =     0.51589041180152 * S_AcceptedCmpTotal
499512    +          +     -0.6498311499195 * S_Frq  +    -1.08182644925044 * S_Income
499513    +          +    -1.19064228379044 * S_Mnt  +    -1.27287496888491 *
499514    +        S_MntGoldProds  +    -1.33897837883991 * S_MntMeatProducts
499515    +          +     0.14209124492657 * S_NumCatalogPurchases
499516    +          +    -1.31625106509803 * S_NumDealsPurchases
499517    +          +     2.35745588368331 * S_NumWebVisitsMonth
499518    +          +    -1.28657356976181 * S_RFMstat  +     0.25408650330935 *
499519    +        S_Recency  +     1.23527100408525 * S_Teenhome
499520    +          +    -1.87183507669176 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.51589041180152 * S_AcceptedCmpTotal + -0.6498311499195 *
S_Frq + -1.08182644925044 * S_Income + -1.19064228379044 * S_Mnt + -1.27287496888491 *
S_MntGoldProds + -1.33897837883991 * S_MntMeatProducts + 0.14209124492657 *
S_NumCatalogPurchases + -1.31625106509803 * S_NumDealsPurchases + 2.35745588368331 *
S_NumWebVisitsMonth + -1.28657356976181 * S_RFMstat + 0.25408650330935 * S_Recency +
1.23527100408525 * S_Teenhome + -1.87183507669176 * S_Year_Birth ;
499521    +   H1x2_2  =    -1.23424462482032 * S_AcceptedCmpTotal
499522    +          +     1.46358102529667 * S_Frq  +     1.75790517593121 * S_Income
499523    +          +      -0.424881586919 * S_Mnt  +     -0.9331242135447 *
499524    +        S_MntGoldProds  +     0.54942904780681 * S_MntMeatProducts
499525    +          +     1.18605040958794 * S_NumCatalogPurchases
499526    +          +    -0.89798157472835 * S_NumDealsPurchases
499527    +          +    -0.09236646871049 * S_NumWebVisitsMonth
499528    +          +    -1.29341547638046 * S_RFMstat  +     1.66853355984342 *
499529    +        S_Recency  +    -0.50770218335102 * S_Teenhome
499530    +          +    -1.07353749220663 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -1.23424462482032 * S_AcceptedCmpTotal + 1.46358102529667 *
S_Frq + 1.75790517593121 * S_Income + -0.424881586919 * S_Mnt + -0.9331242135447 *
S_MntGoldProds + 0.54942904780681 * S_MntMeatProducts + 1.18605040958794 *
S_NumCatalogPurchases + -0.89798157472835 * S_NumDealsPurchases + -0.09236646871049 *
S_NumWebVisitsMonth + -1.29341547638046 * S_RFMstat + 1.66853355984342 * S_Recency +
-0.50770218335102 * S_Teenhome + -1.07353749220663 * S_Year_Birth ;
499531    +   H1x2_3  =     0.77624009560593 * S_AcceptedCmpTotal
499532    +          +    -0.52739784343536 * S_Frq  +     0.03893675518591 * S_Income
499533    +          +     2.17484611279249 * S_Mnt  +    -0.17952459801341 *
499534    +        S_MntGoldProds  +     0.34588410829653 * S_MntMeatProducts
499535    +          +    -1.53424308314822 * S_NumCatalogPurchases
499536    +          +    -0.80590323269981 * S_NumDealsPurchases
499537    +          +    -1.40104490662303 * S_NumWebVisitsMonth
499538    +          +     1.66586308350968 * S_RFMstat  +    -0.47553614859646 *
499539    +        S_Recency  +     0.96086280467056 * S_Teenhome
499540    +          +    -1.77672596886127 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x2_3 = 0.77624009560593 * S_AcceptedCmpTotal + -0.52739784343536 *
S_Frq + 0.03893675518591 * S_Income + 2.17484611279249 * S_Mnt + -0.17952459801341 *
S_MntGoldProds + 0.34588410829653 * S_MntMeatProducts + -1.53424308314822 *
S_NumCatalogPurchases + -0.80590323269981 * S_NumDealsPurchases + -1.40104490662303 *
S_NumWebVisitsMonth + 1.66586308350968 * S_RFMstat + -0.47553614859646 * S_Recency +
0.96086280467056 * S_Teenhome + -1.77672596886127 * S_Year_Birth ;
499541    +   H1x2_4  =     0.58137966699652 * S_AcceptedCmpTotal
499542    +          +      1.4040418295752 * S_Frq  +    -0.24832517883948 * S_Income
499543    +          +    -0.61141424736299 * S_Mnt  +     0.20471254162898 *
499544    +        S_MntGoldProds  +     0.44314427658514 * S_MntMeatProducts
499545    +          +    -1.25862219948587 * S_NumCatalogPurchases
499546    +          +     1.95015982914109 * S_NumDealsPurchases
499547    +          +     0.64320281589594 * S_NumWebVisitsMonth
499548    +          +     0.79165027029588 * S_RFMstat  +     0.66988554846863 *
499549    +        S_Recency  +    -0.00184949563812 * S_Teenhome
499550    +          +    -0.90548552271817 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 0.58137966699652 * S_AcceptedCmpTotal + 1.4040418295752 * S_Frq
+ -0.24832517883948 * S_Income + -0.61141424736299 * S_Mnt + 0.20471254162898 * S_MntGoldProds
+ 0.44314427658514 * S_MntMeatProducts + -1.25862219948587 * S_NumCatalogPurchases +
1.95015982914109 * S_NumDealsPurchases + 0.64320281589594 * S_NumWebVisitsMonth +
0.79165027029588 * S_RFMstat + 0.66988554846863 * S_Recency + -0.00184949563812 * S_Teenhome +
-0.90548552271817 * S_Year_Birth ;
499551    +   H1x2_5  =      0.5931660751286 * S_AcceptedCmpTotal
499552    +          +     0.58645753040534 * S_Frq  +     1.15236353289832 * S_Income
499553    +          +     0.33853280493921 * S_Mnt  +    -0.34695797092699 *
499554    +        S_MntGoldProds  +     2.24596975589576 * S_MntMeatProducts
499555    +          +     0.30573893169917 * S_NumCatalogPurchases
499556    +          +     0.93169788380491 * S_NumDealsPurchases
499557    +          +     0.04516037232248 * S_NumWebVisitsMonth
499558    +          +     0.56461660789519 * S_RFMstat  +    -0.73850030816559 *
499559    +        S_Recency  +      0.1429120113072 * S_Teenhome
499560    +          +     0.57728849891114 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 0.5931660751286 * S_AcceptedCmpTotal + 0.58645753040534 * S_Frq
+ 1.15236353289832 * S_Income + 0.33853280493921 * S_Mnt + -0.34695797092699 * S_MntGoldProds
+ 2.24596975589576 * S_MntMeatProducts + 0.30573893169917 * S_NumCatalogPurchases +
0.93169788380491 * S_NumDealsPurchases + 0.04516037232248 * S_NumWebVisitsMonth +
0.56461660789519 * S_RFMstat + -0.73850030816559 * S_Recency + 0.1429120113072 * S_Teenhome +
0.57728849891114 * S_Year_Birth ;
499561    +   H1x2_6  =    -0.61564457275113 * S_AcceptedCmpTotal
499562    +          +     0.25558411574917 * S_Frq  +      0.1079727446126 * S_Income
499563    +          +    -1.20360633098467 * S_Mnt  +     1.72797334940475 *
499564    +        S_MntGoldProds  +    -1.65210775934619 * S_MntMeatProducts
499565    +          +      0.2704422632168 * S_NumCatalogPurchases
499566    +          +      2.3389342094366 * S_NumDealsPurchases
499567    +          +     0.01076302858809 * S_NumWebVisitsMonth
499568    +          +    -2.36764292681458 * S_RFMstat  +     1.10196533018748 *
499569    +        S_Recency  +     0.68455094392125 * S_Teenhome
499570    +          +     1.22292273319927 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x2_6 = -0.61564457275113 * S_AcceptedCmpTotal + 0.25558411574917 *
S_Frq + 0.1079727446126 * S_Income + -1.20360633098467 * S_Mnt + 1.72797334940475 *
S_MntGoldProds + -1.65210775934619 * S_MntMeatProducts + 0.2704422632168 *
S_NumCatalogPurchases + 2.3389342094366 * S_NumDealsPurchases + 0.01076302858809 *
S_NumWebVisitsMonth + -2.36764292681458 * S_RFMstat + 1.10196533018748 * S_Recency +
0.68455094392125 * S_Teenhome + 1.22292273319927 * S_Year_Birth ;
499571    +   H1x2_1  = H1x2_1  +    -2.04566893512123 * Marital_StatusDivorced
499572    +          +      0.8255833782513 * Marital_StatusMarried
499573    +          +    -0.48959165020896 * Marital_StatusSingle
499574    +          +     2.83781371812098 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -2.04566893512123 * Marital_StatusDivorced +
0.8255833782513 * Marital_StatusMarried + -0.48959165020896 * Marital_StatusSingle +
2.83781371812098 * Marital_StatusTogether ;
499575    +   H1x2_2  = H1x2_2  +     0.67000557197818 * Marital_StatusDivorced
499576    +          +    -0.36405013930464 * Marital_StatusMarried
499577    +          +    -0.11895921007246 * Marital_StatusSingle
499578    +          +    -0.94713834966834 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 0.67000557197818 * Marital_StatusDivorced +
-0.36405013930464 * Marital_StatusMarried + -0.11895921007246 * Marital_StatusSingle +
-0.94713834966834 * Marital_StatusTogether ;
499579    +   H1x2_3  = H1x2_3  +     0.26597574107473 * Marital_StatusDivorced
499580    +          +    -1.38902793752658 * Marital_StatusMarried
499581    +          +     0.47104623132568 * Marital_StatusSingle
499582    +          +    -0.55354712799424 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 0.26597574107473 * Marital_StatusDivorced +
-1.38902793752658 * Marital_StatusMarried + 0.47104623132568 * Marital_StatusSingle +
-0.55354712799424 * Marital_StatusTogether ;
499583    +   H1x2_4  = H1x2_4  +    -1.69625977318234 * Marital_StatusDivorced
499584    +          +     0.03793816986941 * Marital_StatusMarried
499585    +          +     0.32286910605532 * Marital_StatusSingle
499586    +          +    -1.44817209305758 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + -1.69625977318234 * Marital_StatusDivorced +
0.03793816986941 * Marital_StatusMarried + 0.32286910605532 * Marital_StatusSingle +
-1.44817209305758 * Marital_StatusTogether ;
499587    +   H1x2_5  = H1x2_5  +     0.19745523338489 * Marital_StatusDivorced
499588    +          +    -0.60013237897988 * Marital_StatusMarried
499589    +          +    -1.54090744803073 * Marital_StatusSingle
499590    +          +    -2.24346446510302 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 0.19745523338489 * Marital_StatusDivorced +
-0.60013237897988 * Marital_StatusMarried + -1.54090744803073 * Marital_StatusSingle +
-2.24346446510302 * Marital_StatusTogether ;
499591    +   H1x2_6  = H1x2_6  +     0.47464108124928 * Marital_StatusDivorced
499592    +          +     2.39490119482132 * Marital_StatusMarried
499593    +          +     0.73080073298893 * Marital_StatusSingle
499594    +          +    -0.62296432915598 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 + 0.47464108124928 * Marital_StatusDivorced +
2.39490119482132 * Marital_StatusMarried + 0.73080073298893 * Marital_StatusSingle +
-0.62296432915598 * Marital_StatusTogether ;
499595    +   H1x2_1  =     1.03099135229255 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.03099135229255 + H1x2_1 ;
499596    +   H1x2_2  =     -0.9436150278938 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -0.9436150278938 + H1x2_2 ;
499597    +   H1x2_3  =    -0.17327523864686 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.17327523864686 + H1x2_3 ;
499598    +   H1x2_4  =     0.30103807123555 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 0.30103807123555 + H1x2_4 ;
499599    +   H1x2_5  =    -2.06815743640812 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -2.06815743640812 + H1x2_5 ;
499600    +   H1x2_6  =     1.90356790294644 + H1x2_6 ;
MPRINT(EM_DIAGRAM):   H1x2_6 = 1.90356790294644 + H1x2_6 ;
499601    +   H1x2_7  = 0;
MPRINT(EM_DIAGRAM):   H1x2_7 = 0;
499602    +   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 , H1x2_7
499603    +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 ,
H1x2_7 );
499604    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
499605    +   H1x2_1  = EXP(H1x2_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_1 = EXP(H1x2_1 - _MAX_);
499606    +   _SUM_ = _SUM_ + H1x2_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_1 ;
499607    +   H1x2_2  = EXP(H1x2_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_2 = EXP(H1x2_2 - _MAX_);
499608    +   _SUM_ = _SUM_ + H1x2_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_2 ;
499609    +   H1x2_3  = EXP(H1x2_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_3 = EXP(H1x2_3 - _MAX_);
499610    +   _SUM_ = _SUM_ + H1x2_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_3 ;
499611    +   H1x2_4  = EXP(H1x2_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_4 = EXP(H1x2_4 - _MAX_);
499612    +   _SUM_ = _SUM_ + H1x2_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_4 ;
499613    +   H1x2_5  = EXP(H1x2_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_5 = EXP(H1x2_5 - _MAX_);
499614    +   _SUM_ = _SUM_ + H1x2_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_5 ;
499615    +   H1x2_6  = EXP(H1x2_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_6 = EXP(H1x2_6 - _MAX_);
499616    +   _SUM_ = _SUM_ + H1x2_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_6 ;
499617    +   H1x2_7  = EXP(H1x2_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_7 = EXP(H1x2_7 - _MAX_);
499618    +   _SUM_ = _SUM_ + H1x2_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_7 ;
499619    +   H1x2_1  = H1x2_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 / _SUM_;
499620    +   H1x2_2  = H1x2_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 / _SUM_;
499621    +   H1x2_3  = H1x2_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 / _SUM_;
499622    +   H1x2_4  = H1x2_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 / _SUM_;
499623    +   H1x2_5  = H1x2_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 / _SUM_;
499624    +   H1x2_6  = H1x2_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 / _SUM_;
499625    +   H1x2_7  = H1x2_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_7 = H1x2_7 / _SUM_;
499626    +END;
MPRINT(EM_DIAGRAM):   END;
499627    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
499628    +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
499629    +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
499630    +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
499631    +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
499632    +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
499633    +   H1x2_6  = .;
MPRINT(EM_DIAGRAM):   H1x2_6 = .;
499634    +   H1x2_7  = .;
MPRINT(EM_DIAGRAM):   H1x2_7 = .;
499635    +END;
MPRINT(EM_DIAGRAM):   END;
499636    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
499637    +*** Writing the Node H1x3_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x3_ ;
499638    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
499639    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
499640    +   H1x3_1  =    -0.02577999703823 * S_AcceptedCmpTotal
499641    +          +     1.15166430232754 * S_Frq  +     0.14876168620543 * S_Income
499642    +          +    -0.18380736633059 * S_Mnt  +     0.50048252433262 *
499643    +        S_MntGoldProds  +    -0.33191625929347 * S_MntMeatProducts
499644    +          +     2.25334156596167 * S_NumCatalogPurchases
499645    +          +     1.11206221926547 * S_NumDealsPurchases
499646    +          +    -0.86546062057987 * S_NumWebVisitsMonth
499647    +          +    -0.98321051175326 * S_RFMstat  +     1.25274008829299 *
499648    +        S_Recency  +    -1.57916593034924 * S_Teenhome
499649    +          +    -2.06345344469395 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x3_1 = -0.02577999703823 * S_AcceptedCmpTotal + 1.15166430232754 *
S_Frq + 0.14876168620543 * S_Income + -0.18380736633059 * S_Mnt + 0.50048252433262 *
S_MntGoldProds + -0.33191625929347 * S_MntMeatProducts + 2.25334156596167 *
S_NumCatalogPurchases + 1.11206221926547 * S_NumDealsPurchases + -0.86546062057987 *
S_NumWebVisitsMonth + -0.98321051175326 * S_RFMstat + 1.25274008829299 * S_Recency +
-1.57916593034924 * S_Teenhome + -2.06345344469395 * S_Year_Birth ;
499650    +   H1x3_2  =    -1.17329843303132 * S_AcceptedCmpTotal
499651    +          +     1.78916673039241 * S_Frq  +    -0.84674133842717 * S_Income
499652    +          +     0.28484675606294 * S_Mnt  +     0.63187019772354 *
499653    +        S_MntGoldProds  +    -0.96245535082151 * S_MntMeatProducts
499654    +          +    -0.72830662589886 * S_NumCatalogPurchases
499655    +          +    -1.43194640925705 * S_NumDealsPurchases
499656    +          +     0.27875145672985 * S_NumWebVisitsMonth
499657    +          +    -2.03430995128807 * S_RFMstat  +    -0.52413738058555 *
499658    +        S_Recency  +    -1.01056905981073 * S_Teenhome
499659    +          +     0.00830584207402 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x3_2 = -1.17329843303132 * S_AcceptedCmpTotal + 1.78916673039241 *
S_Frq + -0.84674133842717 * S_Income + 0.28484675606294 * S_Mnt + 0.63187019772354 *
S_MntGoldProds + -0.96245535082151 * S_MntMeatProducts + -0.72830662589886 *
S_NumCatalogPurchases + -1.43194640925705 * S_NumDealsPurchases + 0.27875145672985 *
S_NumWebVisitsMonth + -2.03430995128807 * S_RFMstat + -0.52413738058555 * S_Recency +
-1.01056905981073 * S_Teenhome + 0.00830584207402 * S_Year_Birth ;
499660    +   H1x3_3  =    -1.51193899177395 * S_AcceptedCmpTotal
499661    +          +    -1.18260896990859 * S_Frq  +    -0.95243122164169 * S_Income
499662    +          +    -0.18792820239336 * S_Mnt  +    -0.06982279743147 *
499663    +        S_MntGoldProds  +    -1.14763783870634 * S_MntMeatProducts
499664    +          +    -0.29577972728188 * S_NumCatalogPurchases
499665    +          +    -0.09204036503823 * S_NumDealsPurchases
499666    +          +     1.09127760712522 * S_NumWebVisitsMonth
499667    +          +     0.67251355869104 * S_RFMstat  +     0.02406054275944 *
499668    +        S_Recency  +    -1.61269837976842 * S_Teenhome
499669    +          +     1.49645524045306 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x3_3 = -1.51193899177395 * S_AcceptedCmpTotal + -1.18260896990859 *
S_Frq + -0.95243122164169 * S_Income + -0.18792820239336 * S_Mnt + -0.06982279743147 *
S_MntGoldProds + -1.14763783870634 * S_MntMeatProducts + -0.29577972728188 *
S_NumCatalogPurchases + -0.09204036503823 * S_NumDealsPurchases + 1.09127760712522 *
S_NumWebVisitsMonth + 0.67251355869104 * S_RFMstat + 0.02406054275944 * S_Recency +
-1.61269837976842 * S_Teenhome + 1.49645524045306 * S_Year_Birth ;
499670    +   H1x3_4  =      0.0300271349218 * S_AcceptedCmpTotal
499671    +          +     0.92676949944979 * S_Frq  +    -0.43729227407729 * S_Income
499672    +          +     0.20149694045928 * S_Mnt  +    -0.72339995493149 *
499673    +        S_MntGoldProds  +     0.79792093415572 * S_MntMeatProducts
499674    +          +     0.74771164805463 * S_NumCatalogPurchases
499675    +          +     1.48674373289951 * S_NumDealsPurchases
499676    +          +    -0.43724934700095 * S_NumWebVisitsMonth
499677    +          +    -0.83295997374079 * S_RFMstat  +    -0.78737099754706 *
499678    +        S_Recency  +      1.5969237416548 * S_Teenhome
499679    +          +     -0.1539761100948 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x3_4 = 0.0300271349218 * S_AcceptedCmpTotal + 0.92676949944979 * S_Frq
+ -0.43729227407729 * S_Income + 0.20149694045928 * S_Mnt + -0.72339995493149 * S_MntGoldProds
+ 0.79792093415572 * S_MntMeatProducts + 0.74771164805463 * S_NumCatalogPurchases +
1.48674373289951 * S_NumDealsPurchases + -0.43724934700095 * S_NumWebVisitsMonth +
-0.83295997374079 * S_RFMstat + -0.78737099754706 * S_Recency + 1.5969237416548 * S_Teenhome +
-0.1539761100948 * S_Year_Birth ;
499680    +   H1x3_5  =     0.10850479066736 * S_AcceptedCmpTotal
499681    +          +    -0.69523987336905 * S_Frq  +    -1.03313846128362 * S_Income
499682    +          +     0.25026080496919 * S_Mnt  +    -0.97357883151863 *
499683    +        S_MntGoldProds  +    -0.61754054300662 * S_MntMeatProducts
499684    +          +     0.32607897654777 * S_NumCatalogPurchases
499685    +          +    -0.05989936582211 * S_NumDealsPurchases
499686    +          +     -0.8863628882594 * S_NumWebVisitsMonth
499687    +          +      1.1124532739734 * S_RFMstat  +    -0.38719199193265 *
499688    +        S_Recency  +      1.1633098880037 * S_Teenhome
499689    +          +    -1.12745203473451 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x3_5 = 0.10850479066736 * S_AcceptedCmpTotal + -0.69523987336905 *
S_Frq + -1.03313846128362 * S_Income + 0.25026080496919 * S_Mnt + -0.97357883151863 *
S_MntGoldProds + -0.61754054300662 * S_MntMeatProducts + 0.32607897654777 *
S_NumCatalogPurchases + -0.05989936582211 * S_NumDealsPurchases + -0.8863628882594 *
S_NumWebVisitsMonth + 1.1124532739734 * S_RFMstat + -0.38719199193265 * S_Recency +
1.1633098880037 * S_Teenhome + -1.12745203473451 * S_Year_Birth ;
499690    +   H1x3_6  =    -0.11588080697234 * S_AcceptedCmpTotal
499691    +          +     0.62360534366171 * S_Frq  +     0.05171263107667 * S_Income
499692    +          +    -2.09517372359855 * S_Mnt  +     1.82275072298905 *
499693    +        S_MntGoldProds  +    -0.20222711303443 * S_MntMeatProducts
499694    +          +    -0.32855091358254 * S_NumCatalogPurchases
499695    +          +    -0.04262624947945 * S_NumDealsPurchases
499696    +          +     0.34844893542429 * S_NumWebVisitsMonth
499697    +          +     1.02395415516187 * S_RFMstat  +     0.72163010188304 *
499698    +        S_Recency  +     0.25374922499465 * S_Teenhome
499699    +          +    -0.26482823596248 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x3_6 = -0.11588080697234 * S_AcceptedCmpTotal + 0.62360534366171 *
S_Frq + 0.05171263107667 * S_Income + -2.09517372359855 * S_Mnt + 1.82275072298905 *
S_MntGoldProds + -0.20222711303443 * S_MntMeatProducts + -0.32855091358254 *
S_NumCatalogPurchases + -0.04262624947945 * S_NumDealsPurchases + 0.34844893542429 *
S_NumWebVisitsMonth + 1.02395415516187 * S_RFMstat + 0.72163010188304 * S_Recency +
0.25374922499465 * S_Teenhome + -0.26482823596248 * S_Year_Birth ;
499700    +   H1x3_1  = H1x3_1  +     0.22579923464903 * Marital_StatusDivorced
499701    +          +    -1.19357131519861 * Marital_StatusMarried
499702    +          +     1.01104838285626 * Marital_StatusSingle
499703    +          +    -1.80955917142309 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + 0.22579923464903 * Marital_StatusDivorced +
-1.19357131519861 * Marital_StatusMarried + 1.01104838285626 * Marital_StatusSingle +
-1.80955917142309 * Marital_StatusTogether ;
499704    +   H1x3_2  = H1x3_2  +    -0.94571479472535 * Marital_StatusDivorced
499705    +          +     0.41518199668826 * Marital_StatusMarried
499706    +          +     1.03267293059069 * Marital_StatusSingle
499707    +          +    -0.66743874470855 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 + -0.94571479472535 * Marital_StatusDivorced +
0.41518199668826 * Marital_StatusMarried + 1.03267293059069 * Marital_StatusSingle +
-0.66743874470855 * Marital_StatusTogether ;
499708    +   H1x3_3  = H1x3_3  +    -0.15213926695809 * Marital_StatusDivorced
499709    +          +     0.56306179671807 * Marital_StatusMarried
499710    +          +    -1.20896369649342 * Marital_StatusSingle
499711    +          +      0.2381860290523 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_3 = H1x3_3 + -0.15213926695809 * Marital_StatusDivorced +
0.56306179671807 * Marital_StatusMarried + -1.20896369649342 * Marital_StatusSingle +
0.2381860290523 * Marital_StatusTogether ;
499712    +   H1x3_4  = H1x3_4  +      1.0736711015636 * Marital_StatusDivorced
499713    +          +    -2.56951757071166 * Marital_StatusMarried
499714    +          +     0.89024254219017 * Marital_StatusSingle
499715    +          +    -1.38303524163943 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_4 = H1x3_4 + 1.0736711015636 * Marital_StatusDivorced +
-2.56951757071166 * Marital_StatusMarried + 0.89024254219017 * Marital_StatusSingle +
-1.38303524163943 * Marital_StatusTogether ;
499716    +   H1x3_5  = H1x3_5  +     2.33108578518176 * Marital_StatusDivorced
499717    +          +    -0.82560993254767 * Marital_StatusMarried
499718    +          +     0.67892086377875 * Marital_StatusSingle
499719    +          +    -0.99872502550085 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_5 = H1x3_5 + 2.33108578518176 * Marital_StatusDivorced +
-0.82560993254767 * Marital_StatusMarried + 0.67892086377875 * Marital_StatusSingle +
-0.99872502550085 * Marital_StatusTogether ;
499720    +   H1x3_6  = H1x3_6  +    -1.46724646572707 * Marital_StatusDivorced
499721    +          +     1.62783448403167 * Marital_StatusMarried
499722    +          +     0.73020544049082 * Marital_StatusSingle
499723    +          +    -0.22473120319236 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_6 = H1x3_6 + -1.46724646572707 * Marital_StatusDivorced +
1.62783448403167 * Marital_StatusMarried + 0.73020544049082 * Marital_StatusSingle +
-0.22473120319236 * Marital_StatusTogether ;
499724    +   H1x3_1  =     0.67900930500511 + H1x3_1 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 0.67900930500511 + H1x3_1 ;
499725    +   H1x3_2  =     1.40060666199115 + H1x3_2 ;
MPRINT(EM_DIAGRAM):   H1x3_2 = 1.40060666199115 + H1x3_2 ;
499726    +   H1x3_3  =     0.29463847527526 + H1x3_3 ;
MPRINT(EM_DIAGRAM):   H1x3_3 = 0.29463847527526 + H1x3_3 ;
499727    +   H1x3_4  =    -0.04357875847579 + H1x3_4 ;
MPRINT(EM_DIAGRAM):   H1x3_4 = -0.04357875847579 + H1x3_4 ;
499728    +   H1x3_5  =      0.8612643972197 + H1x3_5 ;
MPRINT(EM_DIAGRAM):   H1x3_5 = 0.8612643972197 + H1x3_5 ;
499729    +   H1x3_6  =    -1.88380703730164 + H1x3_6 ;
MPRINT(EM_DIAGRAM):   H1x3_6 = -1.88380703730164 + H1x3_6 ;
499730    +   H1x3_7  = 0;
MPRINT(EM_DIAGRAM):   H1x3_7 = 0;
499731    +   _MAX_ = MAX (H1x3_1 , H1x3_2 , H1x3_3 , H1x3_4 , H1x3_5 , H1x3_6 , H1x3_7
499732    +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x3_1 , H1x3_2 , H1x3_3 , H1x3_4 , H1x3_5 , H1x3_6 ,
H1x3_7 );
499733    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
499734    +   H1x3_1  = EXP(H1x3_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_1 = EXP(H1x3_1 - _MAX_);
499735    +   _SUM_ = _SUM_ + H1x3_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_1 ;
499736    +   H1x3_2  = EXP(H1x3_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_2 = EXP(H1x3_2 - _MAX_);
499737    +   _SUM_ = _SUM_ + H1x3_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_2 ;
499738    +   H1x3_3  = EXP(H1x3_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_3 = EXP(H1x3_3 - _MAX_);
499739    +   _SUM_ = _SUM_ + H1x3_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_3 ;
499740    +   H1x3_4  = EXP(H1x3_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_4 = EXP(H1x3_4 - _MAX_);
499741    +   _SUM_ = _SUM_ + H1x3_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_4 ;
499742    +   H1x3_5  = EXP(H1x3_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_5 = EXP(H1x3_5 - _MAX_);
499743    +   _SUM_ = _SUM_ + H1x3_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_5 ;
499744    +   H1x3_6  = EXP(H1x3_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_6 = EXP(H1x3_6 - _MAX_);
499745    +   _SUM_ = _SUM_ + H1x3_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_6 ;
499746    +   H1x3_7  = EXP(H1x3_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_7 = EXP(H1x3_7 - _MAX_);
499747    +   _SUM_ = _SUM_ + H1x3_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_7 ;
499748    +   H1x3_1  = H1x3_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 / _SUM_;
499749    +   H1x3_2  = H1x3_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 / _SUM_;
499750    +   H1x3_3  = H1x3_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_3 = H1x3_3 / _SUM_;
499751    +   H1x3_4  = H1x3_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_4 = H1x3_4 / _SUM_;
499752    +   H1x3_5  = H1x3_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_5 = H1x3_5 / _SUM_;
499753    +   H1x3_6  = H1x3_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_6 = H1x3_6 / _SUM_;
499754    +   H1x3_7  = H1x3_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_7 = H1x3_7 / _SUM_;
499755    +END;
MPRINT(EM_DIAGRAM):   END;
499756    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
499757    +   H1x3_1  = .;
MPRINT(EM_DIAGRAM):   H1x3_1 = .;
499758    +   H1x3_2  = .;
MPRINT(EM_DIAGRAM):   H1x3_2 = .;
499759    +   H1x3_3  = .;
MPRINT(EM_DIAGRAM):   H1x3_3 = .;
499760    +   H1x3_4  = .;
MPRINT(EM_DIAGRAM):   H1x3_4 = .;
499761    +   H1x3_5  = .;
MPRINT(EM_DIAGRAM):   H1x3_5 = .;
499762    +   H1x3_6  = .;
MPRINT(EM_DIAGRAM):   H1x3_6 = .;
499763    +   H1x3_7  = .;
MPRINT(EM_DIAGRAM):   H1x3_7 = .;
499764    +END;
MPRINT(EM_DIAGRAM):   END;
499765    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
499766    +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
499767    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
499768    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
499769    +   H2x1_1  =    -0.95656178134917 * H1x1_1  +     1.37796748135739 * H1x1_2
499770    +          +     1.78756036673938 * H1x1_3  +     -0.8439546201475 * H1x1_4
499771    +          +    -1.03166099242293 * H1x1_5  +     0.52943703441707 * H1x1_6
499772    +          +     0.59795148287931 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -0.95656178134917 * H1x1_1 + 1.37796748135739 * H1x1_2 +
1.78756036673938 * H1x1_3 + -0.8439546201475 * H1x1_4 + -1.03166099242293 * H1x1_5 +
0.52943703441707 * H1x1_6 + 0.59795148287931 * H1x1_7 ;
499773    +   H2x1_2  =     1.91190798936382 * H1x1_1  +      -0.175949167006 * H1x1_2
499774    +          +    -0.20010954623703 * H1x1_3  +    -1.12168184279533 * H1x1_4
499775    +          +     0.35517508917627 * H1x1_5  +    -0.45519619936571 * H1x1_6
499776    +          +     1.08432924744886 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.91190798936382 * H1x1_1 + -0.175949167006 * H1x1_2 +
-0.20010954623703 * H1x1_3 + -1.12168184279533 * H1x1_4 + 0.35517508917627 * H1x1_5 +
-0.45519619936571 * H1x1_6 + 1.08432924744886 * H1x1_7 ;
499777    +   H2x1_3  =    -0.27236838695598 * H1x1_1  +     2.63546136140352 * H1x1_2
499778    +          +     1.80045649255758 * H1x1_3  +    -2.98830892061373 * H1x1_4
499779    +          +    -2.46045881589621 * H1x1_5  +     3.22396803549708 * H1x1_6
499780    +          +    -2.34667330067152 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -0.27236838695598 * H1x1_1 + 2.63546136140352 * H1x1_2 +
1.80045649255758 * H1x1_3 + -2.98830892061373 * H1x1_4 + -2.46045881589621 * H1x1_5 +
3.22396803549708 * H1x1_6 + -2.34667330067152 * H1x1_7 ;
499781    +   H2x1_4  =    -3.13210205675036 * H1x1_1  +     3.91450403558871 * H1x1_2
499782    +          +       4.933279615521 * H1x1_3  +    -2.59282514986249 * H1x1_4
499783    +          +    -2.03653671740081 * H1x1_5  +       4.064405082461 * H1x1_6
499784    +          +    -2.60526325926954 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = -3.13210205675036 * H1x1_1 + 3.91450403558871 * H1x1_2 +
4.933279615521 * H1x1_3 + -2.59282514986249 * H1x1_4 + -2.03653671740081 * H1x1_5 +
4.064405082461 * H1x1_6 + -2.60526325926954 * H1x1_7 ;
499785    +   H2x1_5  =    -0.63232084982839 * H1x1_1  +     0.33718773947492 * H1x1_2
499786    +          +     1.29296448887546 * H1x1_3  +     1.12889621039023 * H1x1_4
499787    +          +     2.18934908118237 * H1x1_5  +     0.87862098785892 * H1x1_6
499788    +          +     0.91832061749569 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = -0.63232084982839 * H1x1_1 + 0.33718773947492 * H1x1_2 +
1.29296448887546 * H1x1_3 + 1.12889621039023 * H1x1_4 + 2.18934908118237 * H1x1_5 +
0.87862098785892 * H1x1_6 + 0.91832061749569 * H1x1_7 ;
499789    +   H2x1_6  =     1.81043244413035 * H1x1_1  +      1.4777958998418 * H1x1_2
499790    +          +     2.53190667102186 * H1x1_3  +      0.4670787906688 * H1x1_4
499791    +          +    -0.00303664790933 * H1x1_5  +     0.21078497178324 * H1x1_6
499792    +          +     0.34792900678934 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = 1.81043244413035 * H1x1_1 + 1.4777958998418 * H1x1_2 +
2.53190667102186 * H1x1_3 + 0.4670787906688 * H1x1_4 + -0.00303664790933 * H1x1_5 +
0.21078497178324 * H1x1_6 + 0.34792900678934 * H1x1_7 ;
499793    +   H2x1_7  =      2.7297431384039 * H1x1_1  +    -1.30829815853208 * H1x1_2
499794    +          +    -0.74317234707744 * H1x1_3  +     0.02621795882884 * H1x1_4
499795    +          +     1.92641283593631 * H1x1_5  +     0.32006968332264 * H1x1_6
499796    +          +     0.87129000431049 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_7 = 2.7297431384039 * H1x1_1 + -1.30829815853208 * H1x1_2 +
-0.74317234707744 * H1x1_3 + 0.02621795882884 * H1x1_4 + 1.92641283593631 * H1x1_5 +
0.32006968332264 * H1x1_6 + 0.87129000431049 * H1x1_7 ;
499797    +   H2x1_1  = H2x1_1  +     -2.1938127062121 * H1x2_1
499798    +          +     0.21780666650637 * H1x2_2  +    -0.59195589593425 * H1x2_3
499799    +          +     0.38436245185742 * H1x2_4  +     0.62573807049092 * H1x2_5
499800    +          +    -0.61319348011502 * H1x2_6  +     0.47203210338015 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -2.1938127062121 * H1x2_1 + 0.21780666650637 * H1x2_2
+ -0.59195589593425 * H1x2_3 + 0.38436245185742 * H1x2_4 + 0.62573807049092 * H1x2_5 +
-0.61319348011502 * H1x2_6 + 0.47203210338015 * H1x2_7 ;
499801    +   H2x1_2  = H2x1_2  +    -0.26087177829438 * H1x2_1
499802    +          +      1.5809361009025 * H1x2_2  +     1.48270435958935 * H1x2_3
499803    +          +    -0.08943866833208 * H1x2_4  +     1.06601866330059 * H1x2_5
499804    +          +     0.65908674086625 * H1x2_6  +    -0.41138217409507 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + -0.26087177829438 * H1x2_1 + 1.5809361009025 * H1x2_2
+ 1.48270435958935 * H1x2_3 + -0.08943866833208 * H1x2_4 + 1.06601866330059 * H1x2_5 +
0.65908674086625 * H1x2_6 + -0.41138217409507 * H1x2_7 ;
499805    +   H2x1_3  = H2x1_3  +     0.38416253176813 * H1x2_1
499806    +          +    -0.18005172775158 * H1x2_2  +    -0.64477973121074 * H1x2_3
499807    +          +    -0.89326621554735 * H1x2_4  +     2.10808351608759 * H1x2_5
499808    +          +    -0.79701502540522 * H1x2_6  +     0.12564972289045 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + 0.38416253176813 * H1x2_1 + -0.18005172775158 * H1x2_2
+ -0.64477973121074 * H1x2_3 + -0.89326621554735 * H1x2_4 + 2.10808351608759 * H1x2_5 +
-0.79701502540522 * H1x2_6 + 0.12564972289045 * H1x2_7 ;
499809    +   H2x1_4  = H2x1_4  +     0.45607666975085 * H1x2_1
499810    +          +     0.66281103175614 * H1x2_2  +     -2.2042052849244 * H1x2_3
499811    +          +    -0.88338513539567 * H1x2_4  +      0.8444719755129 * H1x2_5
499812    +          +    -1.34699546034909 * H1x2_6  +    -0.92256004986079 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + 0.45607666975085 * H1x2_1 + 0.66281103175614 * H1x2_2
+ -2.2042052849244 * H1x2_3 + -0.88338513539567 * H1x2_4 + 0.8444719755129 * H1x2_5 +
-1.34699546034909 * H1x2_6 + -0.92256004986079 * H1x2_7 ;
499813    +   H2x1_5  = H2x1_5  +    -1.36966827041497 * H1x2_1
499814    +          +    -0.50899589190563 * H1x2_2  +    -1.06117764109728 * H1x2_3
499815    +          +    -0.15325014700397 * H1x2_4  +     0.77845029985607 * H1x2_5
499816    +          +     0.15661838238861 * H1x2_6  +    -1.46533717081069 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + -1.36966827041497 * H1x2_1 + -0.50899589190563 *
H1x2_2 + -1.06117764109728 * H1x2_3 + -0.15325014700397 * H1x2_4 + 0.77845029985607 * H1x2_5 +
0.15661838238861 * H1x2_6 + -1.46533717081069 * H1x2_7 ;
499817    +   H2x1_6  = H2x1_6  +    -1.39055542164691 * H1x2_1
499818    +          +    -0.58359991825266 * H1x2_2  +     1.77147289208184 * H1x2_3
499819    +          +    -0.35342441714416 * H1x2_4  +     0.33680205236698 * H1x2_5
499820    +          +    -0.30165800401137 * H1x2_6  +    -1.49792110543314 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 + -1.39055542164691 * H1x2_1 + -0.58359991825266 *
H1x2_2 + 1.77147289208184 * H1x2_3 + -0.35342441714416 * H1x2_4 + 0.33680205236698 * H1x2_5 +
-0.30165800401137 * H1x2_6 + -1.49792110543314 * H1x2_7 ;
499821    +   H2x1_7  = H2x1_7  +     0.20334369322498 * H1x2_1
499822    +          +    -0.56117684469389 * H1x2_2  +     1.27451151893116 * H1x2_3
499823    +          +    -0.39759641471947 * H1x2_4  +    -0.48424888739695 * H1x2_5
499824    +          +      0.5776601194378 * H1x2_6  +    -0.11343742791086 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_7 = H2x1_7 + 0.20334369322498 * H1x2_1 + -0.56117684469389 * H1x2_2
+ 1.27451151893116 * H1x2_3 + -0.39759641471947 * H1x2_4 + -0.48424888739695 * H1x2_5 +
0.5776601194378 * H1x2_6 + -0.11343742791086 * H1x2_7 ;
499825    +   H2x1_1  = H2x1_1  +    -0.06990804266869 * H1x3_1
499826    +          +     1.59179747886577 * H1x3_2  +     -0.3658160611529 * H1x3_3
499827    +          +    -0.16177521959465 * H1x3_4  +     0.23353693967535 * H1x3_5
499828    +          +     0.96164596504173 * H1x3_6  +    -0.49996390114171 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -0.06990804266869 * H1x3_1 + 1.59179747886577 * H1x3_2
+ -0.3658160611529 * H1x3_3 + -0.16177521959465 * H1x3_4 + 0.23353693967535 * H1x3_5 +
0.96164596504173 * H1x3_6 + -0.49996390114171 * H1x3_7 ;
499829    +   H2x1_2  = H2x1_2  +    -1.34775541988885 * H1x3_1
499830    +          +    -0.94185062200477 * H1x3_2  +     2.40002799790884 * H1x3_3
499831    +          +      1.3228491036493 * H1x3_4  +    -2.27212522601702 * H1x3_5
499832    +          +     0.22676652176348 * H1x3_6  +     0.96810343094913 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + -1.34775541988885 * H1x3_1 + -0.94185062200477 *
H1x3_2 + 2.40002799790884 * H1x3_3 + 1.3228491036493 * H1x3_4 + -2.27212522601702 * H1x3_5 +
0.22676652176348 * H1x3_6 + 0.96810343094913 * H1x3_7 ;
499833    +   H2x1_3  = H2x1_3  +    -0.68382731119741 * H1x3_1
499834    +          +    -0.90388882694092 * H1x3_2  +     0.51668393396039 * H1x3_3
499835    +          +     0.45716345972756 * H1x3_4  +    -0.49320936872992 * H1x3_5
499836    +          +     0.11919896076076 * H1x3_6  +    -0.14288859595709 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + -0.68382731119741 * H1x3_1 + -0.90388882694092 *
H1x3_2 + 0.51668393396039 * H1x3_3 + 0.45716345972756 * H1x3_4 + -0.49320936872992 * H1x3_5 +
0.11919896076076 * H1x3_6 + -0.14288859595709 * H1x3_7 ;
499837    +   H2x1_4  = H2x1_4  +    -0.68614915242276 * H1x3_1
499838    +          +     0.55556081003484 * H1x3_2  +     0.26058803548386 * H1x3_3
499839    +          +     0.44653924204999 * H1x3_4  +    -0.97704608173388 * H1x3_5
499840    +          +    -0.04291306465274 * H1x3_6  +    -0.70203538063923 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + -0.68614915242276 * H1x3_1 + 0.55556081003484 * H1x3_2
+ 0.26058803548386 * H1x3_3 + 0.44653924204999 * H1x3_4 + -0.97704608173388 * H1x3_5 +
-0.04291306465274 * H1x3_6 + -0.70203538063923 * H1x3_7 ;
499841    +   H2x1_5  = H2x1_5  +     0.58123765973845 * H1x3_1
499842    +          +     0.48842685419846 * H1x3_2  +     1.59951720976688 * H1x3_3
499843    +          +     0.39804915100427 * H1x3_4  +    -0.47629764750379 * H1x3_5
499844    +          +    -1.56133001160202 * H1x3_6  +     1.12232825939123 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + 0.58123765973845 * H1x3_1 + 0.48842685419846 * H1x3_2
+ 1.59951720976688 * H1x3_3 + 0.39804915100427 * H1x3_4 + -0.47629764750379 * H1x3_5 +
-1.56133001160202 * H1x3_6 + 1.12232825939123 * H1x3_7 ;
499845    +   H2x1_6  = H2x1_6  +    -0.35903530664944 * H1x3_1
499846    +          +    -1.21870303791063 * H1x3_2  +     -0.0358958118983 * H1x3_3
499847    +          +     1.71577031345204 * H1x3_4  +    -0.29111463093854 * H1x3_5
499848    +          +    -1.77383444462785 * H1x3_6  +    -0.93379473274206 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 + -0.35903530664944 * H1x3_1 + -1.21870303791063 *
H1x3_2 + -0.0358958118983 * H1x3_3 + 1.71577031345204 * H1x3_4 + -0.29111463093854 * H1x3_5 +
-1.77383444462785 * H1x3_6 + -0.93379473274206 * H1x3_7 ;
499849    +   H2x1_7  = H2x1_7  +     0.79356954272121 * H1x3_1
499850    +          +    -2.23344635077437 * H1x3_2  +     0.01459894574902 * H1x3_3
499851    +          +    -1.76556734796059 * H1x3_4  +     0.55679401249834 * H1x3_5
499852    +          +    -0.00867866380584 * H1x3_6  +     1.61311341603142 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x1_7 = H2x1_7 + 0.79356954272121 * H1x3_1 + -2.23344635077437 * H1x3_2
+ 0.01459894574902 * H1x3_3 + -1.76556734796059 * H1x3_4 + 0.55679401249834 * H1x3_5 +
-0.00867866380584 * H1x3_6 + 1.61311341603142 * H1x3_7 ;
499853    +   H2x1_1  =     0.45495097945606 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 0.45495097945606 + H2x1_1 ;
499854    +   H2x1_2  =    -0.00150409200191 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -0.00150409200191 + H2x1_2 ;
499855    +   H2x1_3  =     0.06766385008662 + H2x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = 0.06766385008662 + H2x1_3 ;
499856    +   H2x1_4  =    -0.15767488957433 + H2x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = -0.15767488957433 + H2x1_4 ;
499857    +   H2x1_5  =     3.00862692955968 + H2x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = 3.00862692955968 + H2x1_5 ;
499858    +   H2x1_6  =     1.46151036473661 + H2x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = 1.46151036473661 + H2x1_6 ;
499859    +   H2x1_7  =    -1.14350195577506 + H2x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_7 = -1.14350195577506 + H2x1_7 ;
499860    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
499861    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
499862    +   H2x1_1  = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
499863    +   H2x1_2  = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
499864    +   H2x1_3  = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_3 = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
499865    +   H2x1_4  = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_4 = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
499866    +   H2x1_5  = 1.0 / (1.0 + EXP(MIN( - H2x1_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_5 = 1.0 / (1.0 + EXP(MIN( - H2x1_5 , _EXP_BAR)));
499867    +   H2x1_6  = 1.0 / (1.0 + EXP(MIN( - H2x1_6 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_6 = 1.0 / (1.0 + EXP(MIN( - H2x1_6 , _EXP_BAR)));
499868    +   H2x1_7  = 1.0 / (1.0 + EXP(MIN( - H2x1_7 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_7 = 1.0 / (1.0 + EXP(MIN( - H2x1_7 , _EXP_BAR)));
499869    +END;
MPRINT(EM_DIAGRAM):   END;
499870    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
499871    +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
499872    +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
499873    +   H2x1_3  = .;
MPRINT(EM_DIAGRAM):   H2x1_3 = .;
499874    +   H2x1_4  = .;
MPRINT(EM_DIAGRAM):   H2x1_4 = .;
499875    +   H2x1_5  = .;
MPRINT(EM_DIAGRAM):   H2x1_5 = .;
499876    +   H2x1_6  = .;
MPRINT(EM_DIAGRAM):   H2x1_6 = .;
499877    +   H2x1_7  = .;
MPRINT(EM_DIAGRAM):   H2x1_7 = .;
499878    +END;
MPRINT(EM_DIAGRAM):   END;
499879    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
499880    +*** Writing the Node H2x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x2_ ;
499881    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
499882    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
499883    +   H2x2_1  =     -0.6098073780758 * H1x1_1  +    -0.36212005078054 * H1x1_2
499884    +          +     0.06355695656592 * H1x1_3  +     0.42978415336514 * H1x1_4
499885    +          +     1.73171637681701 * H1x1_5  +    -0.19499247120261 * H1x1_6
499886    +          +     0.74015079276747 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = -0.6098073780758 * H1x1_1 + -0.36212005078054 * H1x1_2 +
0.06355695656592 * H1x1_3 + 0.42978415336514 * H1x1_4 + 1.73171637681701 * H1x1_5 +
-0.19499247120261 * H1x1_6 + 0.74015079276747 * H1x1_7 ;
499887    +   H2x2_2  =     0.94291268086892 * H1x1_1  +    -0.57821086705904 * H1x1_2
499888    +          +     1.78126629448091 * H1x1_3  +    -1.19267460568433 * H1x1_4
499889    +          +    -0.23111688249081 * H1x1_5  +     0.48499259969431 * H1x1_6
499890    +          +    -1.56999349458897 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = 0.94291268086892 * H1x1_1 + -0.57821086705904 * H1x1_2 +
1.78126629448091 * H1x1_3 + -1.19267460568433 * H1x1_4 + -0.23111688249081 * H1x1_5 +
0.48499259969431 * H1x1_6 + -1.56999349458897 * H1x1_7 ;
499891    +   H2x2_3  =    -0.83943846185187 * H1x1_1  +     0.07494097035466 * H1x1_2
499892    +          +    -0.22510824455886 * H1x1_3  +     0.73702100581613 * H1x1_4
499893    +          +     0.84717434356729 * H1x1_5  +      1.1890648131813 * H1x1_6
499894    +          +    -0.69985750736721 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = -0.83943846185187 * H1x1_1 + 0.07494097035466 * H1x1_2 +
-0.22510824455886 * H1x1_3 + 0.73702100581613 * H1x1_4 + 0.84717434356729 * H1x1_5 +
1.1890648131813 * H1x1_6 + -0.69985750736721 * H1x1_7 ;
499895    +   H2x2_4  =     1.34186573490327 * H1x1_1  +     0.10476556384336 * H1x1_2
499896    +          +    -0.07073923857851 * H1x1_3  +     0.49865386241422 * H1x1_4
499897    +          +     1.20386613863792 * H1x1_5  +     0.13033316874168 * H1x1_6
499898    +          +     0.36095712511699 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = 1.34186573490327 * H1x1_1 + 0.10476556384336 * H1x1_2 +
-0.07073923857851 * H1x1_3 + 0.49865386241422 * H1x1_4 + 1.20386613863792 * H1x1_5 +
0.13033316874168 * H1x1_6 + 0.36095712511699 * H1x1_7 ;
499899    +   H2x2_5  =     0.18683850895928 * H1x1_1  +     0.14087720385762 * H1x1_2
499900    +          +     0.39026989292984 * H1x1_3  +     0.40839626117338 * H1x1_4
499901    +          +     0.17816964710989 * H1x1_5  +     0.64340089705428 * H1x1_6
499902    +          +    -1.27363167094111 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x2_5 = 0.18683850895928 * H1x1_1 + 0.14087720385762 * H1x1_2 +
0.39026989292984 * H1x1_3 + 0.40839626117338 * H1x1_4 + 0.17816964710989 * H1x1_5 +
0.64340089705428 * H1x1_6 + -1.27363167094111 * H1x1_7 ;
499903    +   H2x2_6  =     0.67895838050616 * H1x1_1  +     0.23794862788395 * H1x1_2
499904    +          +     1.47625698143483 * H1x1_3  +    -0.78874578699705 * H1x1_4
499905    +          +     0.11576168045678 * H1x1_5  +     0.44470888441177 * H1x1_6
499906    +          +     1.87629961612594 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x2_6 = 0.67895838050616 * H1x1_1 + 0.23794862788395 * H1x1_2 +
1.47625698143483 * H1x1_3 + -0.78874578699705 * H1x1_4 + 0.11576168045678 * H1x1_5 +
0.44470888441177 * H1x1_6 + 1.87629961612594 * H1x1_7 ;
499907    +   H2x2_7  =     0.68721855914482 * H1x1_1  +    -0.49548906059129 * H1x1_2
499908    +          +    -0.95479435424814 * H1x1_3  +    -0.39636357013457 * H1x1_4
499909    +          +     1.05784760554335 * H1x1_5  +     0.55302681608178 * H1x1_6
499910    +          +     0.46646041474723 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x2_7 = 0.68721855914482 * H1x1_1 + -0.49548906059129 * H1x1_2 +
-0.95479435424814 * H1x1_3 + -0.39636357013457 * H1x1_4 + 1.05784760554335 * H1x1_5 +
0.55302681608178 * H1x1_6 + 0.46646041474723 * H1x1_7 ;
499911    +   H2x2_1  = H2x2_1  +    -0.27434389803517 * H1x2_1
499912    +          +    -0.02074671287693 * H1x2_2  +    -1.51155778758517 * H1x2_3
499913    +          +    -1.19011584420542 * H1x2_4  +     -0.8540083688408 * H1x2_5
499914    +          +    -0.51772310023527 * H1x2_6  +     -0.0192399267251 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + -0.27434389803517 * H1x2_1 + -0.02074671287693 *
H1x2_2 + -1.51155778758517 * H1x2_3 + -1.19011584420542 * H1x2_4 + -0.8540083688408 * H1x2_5 +
-0.51772310023527 * H1x2_6 + -0.0192399267251 * H1x2_7 ;
499915    +   H2x2_2  = H2x2_2  +      -1.312525087163 * H1x2_1
499916    +          +     1.19175487774401 * H1x2_2  +    -1.10903746388023 * H1x2_3
499917    +          +      0.2627511726941 * H1x2_4  +    -1.49474705736936 * H1x2_5
499918    +          +     0.79354329450131 * H1x2_6  +    -0.48676510074213 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 + -1.312525087163 * H1x2_1 + 1.19175487774401 * H1x2_2 +
-1.10903746388023 * H1x2_3 + 0.2627511726941 * H1x2_4 + -1.49474705736936 * H1x2_5 +
0.79354329450131 * H1x2_6 + -0.48676510074213 * H1x2_7 ;
499919    +   H2x2_3  = H2x2_3  +     0.36715282986404 * H1x2_1
499920    +          +    -1.54691354420052 * H1x2_2  +     0.58334429972967 * H1x2_3
499921    +          +     3.32026929025218 * H1x2_4  +     0.08578287392048 * H1x2_5
499922    +          +     0.66591130534429 * H1x2_6  +     0.57559013181145 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = H2x2_3 + 0.36715282986404 * H1x2_1 + -1.54691354420052 * H1x2_2
+ 0.58334429972967 * H1x2_3 + 3.32026929025218 * H1x2_4 + 0.08578287392048 * H1x2_5 +
0.66591130534429 * H1x2_6 + 0.57559013181145 * H1x2_7 ;
499923    +   H2x2_4  = H2x2_4  +     1.28239253398808 * H1x2_1
499924    +          +     0.06662925242621 * H1x2_2  +     0.49967984015316 * H1x2_3
499925    +          +     0.65508978056742 * H1x2_4  +    -0.28141359636508 * H1x2_5
499926    +          +    -0.11787887977724 * H1x2_6  +     -0.6607325871171 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = H2x2_4 + 1.28239253398808 * H1x2_1 + 0.06662925242621 * H1x2_2
+ 0.49967984015316 * H1x2_3 + 0.65508978056742 * H1x2_4 + -0.28141359636508 * H1x2_5 +
-0.11787887977724 * H1x2_6 + -0.6607325871171 * H1x2_7 ;
499927    +   H2x2_5  = H2x2_5  +    -0.49511046906315 * H1x2_1
499928    +          +    -1.88759923025868 * H1x2_2  +    -0.99578805432186 * H1x2_3
499929    +          +     0.47300607025135 * H1x2_4  +     0.73725488149784 * H1x2_5
499930    +          +     0.56107930260304 * H1x2_6  +     -0.6618265083723 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x2_5 = H2x2_5 + -0.49511046906315 * H1x2_1 + -1.88759923025868 *
H1x2_2 + -0.99578805432186 * H1x2_3 + 0.47300607025135 * H1x2_4 + 0.73725488149784 * H1x2_5 +
0.56107930260304 * H1x2_6 + -0.6618265083723 * H1x2_7 ;
499931    +   H2x2_6  = H2x2_6  +    -0.56511063846684 * H1x2_1
499932    +          +      0.1682036403191 * H1x2_2  +     -0.7835100270482 * H1x2_3
499933    +          +    -0.05926261017522 * H1x2_4  +     0.28303530518131 * H1x2_5
499934    +          +     1.57291802723543 * H1x2_6  +    -1.59403373749444 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x2_6 = H2x2_6 + -0.56511063846684 * H1x2_1 + 0.1682036403191 * H1x2_2
+ -0.7835100270482 * H1x2_3 + -0.05926261017522 * H1x2_4 + 0.28303530518131 * H1x2_5 +
1.57291802723543 * H1x2_6 + -1.59403373749444 * H1x2_7 ;
499935    +   H2x2_7  = H2x2_7  +    -1.06397759700592 * H1x2_1
499936    +          +    -0.21206214531111 * H1x2_2  +     1.52697813698804 * H1x2_3
499937    +          +    -0.03132126915438 * H1x2_4  +     0.11910805580916 * H1x2_5
499938    +          +     1.03394382602734 * H1x2_6  +    -0.28139834412941 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x2_7 = H2x2_7 + -1.06397759700592 * H1x2_1 + -0.21206214531111 *
H1x2_2 + 1.52697813698804 * H1x2_3 + -0.03132126915438 * H1x2_4 + 0.11910805580916 * H1x2_5 +
1.03394382602734 * H1x2_6 + -0.28139834412941 * H1x2_7 ;
499939    +   H2x2_1  = H2x2_1  +    -1.18028681022903 * H1x3_1
499940    +          +    -0.56354962807969 * H1x3_2  +    -0.32071823564038 * H1x3_3
499941    +          +    -1.14868021494554 * H1x3_4  +     0.50491385711883 * H1x3_5
499942    +          +      0.3595638799915 * H1x3_6  +    -1.04253859844314 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + -1.18028681022903 * H1x3_1 + -0.56354962807969 *
H1x3_2 + -0.32071823564038 * H1x3_3 + -1.14868021494554 * H1x3_4 + 0.50491385711883 * H1x3_5 +
0.3595638799915 * H1x3_6 + -1.04253859844314 * H1x3_7 ;
499943    +   H2x2_2  = H2x2_2  +     1.10237781244945 * H1x3_1
499944    +          +     1.08171284637926 * H1x3_2  +     0.51153068676713 * H1x3_3
499945    +          +     -0.0106772728333 * H1x3_4  +     0.21777593557961 * H1x3_5
499946    +          +     0.10772516691825 * H1x3_6  +    -0.91346091248416 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 + 1.10237781244945 * H1x3_1 + 1.08171284637926 * H1x3_2
+ 0.51153068676713 * H1x3_3 + -0.0106772728333 * H1x3_4 + 0.21777593557961 * H1x3_5 +
0.10772516691825 * H1x3_6 + -0.91346091248416 * H1x3_7 ;
499947    +   H2x2_3  = H2x2_3  +    -0.71132206215234 * H1x3_1
499948    +          +     0.60006902706544 * H1x3_2  +      -0.471170925786 * H1x3_3
499949    +          +     0.07477379311969 * H1x3_4  +    -0.34034195429991 * H1x3_5
499950    +          +     1.63429052967629 * H1x3_6  +     0.13697740143754 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = H2x2_3 + -0.71132206215234 * H1x3_1 + 0.60006902706544 * H1x3_2
+ -0.471170925786 * H1x3_3 + 0.07477379311969 * H1x3_4 + -0.34034195429991 * H1x3_5 +
1.63429052967629 * H1x3_6 + 0.13697740143754 * H1x3_7 ;
499951    +   H2x2_4  = H2x2_4  +     0.76338339806809 * H1x3_1
499952    +          +     0.34600443003632 * H1x3_2  +    -0.60707577837208 * H1x3_3
499953    +          +     1.37001034857478 * H1x3_4  +    -1.24749521510775 * H1x3_5
499954    +          +    -1.45784349983015 * H1x3_6  +     0.12879195100917 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = H2x2_4 + 0.76338339806809 * H1x3_1 + 0.34600443003632 * H1x3_2
+ -0.60707577837208 * H1x3_3 + 1.37001034857478 * H1x3_4 + -1.24749521510775 * H1x3_5 +
-1.45784349983015 * H1x3_6 + 0.12879195100917 * H1x3_7 ;
499955    +   H2x2_5  = H2x2_5  +    -2.33392280718246 * H1x3_1
499956    +          +    -0.48123076018945 * H1x3_2  +    -0.76638732765894 * H1x3_3
499957    +          +    -1.76560846551209 * H1x3_4  +     1.62249911960883 * H1x3_5
499958    +          +    -0.31271093507345 * H1x3_6  +    -0.34748800562391 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x2_5 = H2x2_5 + -2.33392280718246 * H1x3_1 + -0.48123076018945 *
H1x3_2 + -0.76638732765894 * H1x3_3 + -1.76560846551209 * H1x3_4 + 1.62249911960883 * H1x3_5 +
-0.31271093507345 * H1x3_6 + -0.34748800562391 * H1x3_7 ;
499959    +   H2x2_6  = H2x2_6  +     0.53202536648562 * H1x3_1
499960    +          +     0.36605088046069 * H1x3_2  +     -1.7626773020241 * H1x3_3
499961    +          +     0.14681062331369 * H1x3_4  +     0.10699108516053 * H1x3_5
499962    +          +     2.24609371442936 * H1x3_6  +    -0.59076884674419 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x2_6 = H2x2_6 + 0.53202536648562 * H1x3_1 + 0.36605088046069 * H1x3_2
+ -1.7626773020241 * H1x3_3 + 0.14681062331369 * H1x3_4 + 0.10699108516053 * H1x3_5 +
2.24609371442936 * H1x3_6 + -0.59076884674419 * H1x3_7 ;
499963    +   H2x2_7  = H2x2_7  +    -0.05290923023086 * H1x3_1
499964    +          +    -0.30472796298249 * H1x3_2  +     1.89100111779461 * H1x3_3
499965    +          +     0.51110284119421 * H1x3_4  +     -0.2014479939412 * H1x3_5
499966    +          +     1.02507111515379 * H1x3_6  +    -0.63211120065975 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x2_7 = H2x2_7 + -0.05290923023086 * H1x3_1 + -0.30472796298249 *
H1x3_2 + 1.89100111779461 * H1x3_3 + 0.51110284119421 * H1x3_4 + -0.2014479939412 * H1x3_5 +
1.02507111515379 * H1x3_6 + -0.63211120065975 * H1x3_7 ;
499967    +   H2x2_1  =    -2.15023760884419 + H2x2_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = -2.15023760884419 + H2x2_1 ;
499968    +   H2x2_2  =    -1.03542203438136 + H2x2_2 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = -1.03542203438136 + H2x2_2 ;
499969    +   H2x2_3  =    -1.03202542428687 + H2x2_3 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = -1.03202542428687 + H2x2_3 ;
499970    +   H2x2_4  =     0.79380822765375 + H2x2_4 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = 0.79380822765375 + H2x2_4 ;
499971    +   H2x2_5  =    -0.37637686056399 + H2x2_5 ;
MPRINT(EM_DIAGRAM):   H2x2_5 = -0.37637686056399 + H2x2_5 ;
499972    +   H2x2_6  =    -0.12032383488066 + H2x2_6 ;
MPRINT(EM_DIAGRAM):   H2x2_6 = -0.12032383488066 + H2x2_6 ;
499973    +   H2x2_7  =     0.84544057856735 + H2x2_7 ;
MPRINT(EM_DIAGRAM):   H2x2_7 = 0.84544057856735 + H2x2_7 ;
499974    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
499975    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
499976    +   H2x2_1  = 1.0 / (1.0 + EXP(MIN( - H2x2_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x2_1 = 1.0 / (1.0 + EXP(MIN( - H2x2_1 , _EXP_BAR)));
499977    +   H2x2_2  = 1.0 / (1.0 + EXP(MIN( - H2x2_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x2_2 = 1.0 / (1.0 + EXP(MIN( - H2x2_2 , _EXP_BAR)));
499978    +   H2x2_3  = 1.0 / (1.0 + EXP(MIN( - H2x2_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x2_3 = 1.0 / (1.0 + EXP(MIN( - H2x2_3 , _EXP_BAR)));
499979    +   H2x2_4  = 1.0 / (1.0 + EXP(MIN( - H2x2_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x2_4 = 1.0 / (1.0 + EXP(MIN( - H2x2_4 , _EXP_BAR)));
499980    +   H2x2_5  = 1.0 / (1.0 + EXP(MIN( - H2x2_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x2_5 = 1.0 / (1.0 + EXP(MIN( - H2x2_5 , _EXP_BAR)));
499981    +   H2x2_6  = 1.0 / (1.0 + EXP(MIN( - H2x2_6 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x2_6 = 1.0 / (1.0 + EXP(MIN( - H2x2_6 , _EXP_BAR)));
499982    +   H2x2_7  = 1.0 / (1.0 + EXP(MIN( - H2x2_7 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x2_7 = 1.0 / (1.0 + EXP(MIN( - H2x2_7 , _EXP_BAR)));
499983    +END;
MPRINT(EM_DIAGRAM):   END;
499984    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
499985    +   H2x2_1  = .;
MPRINT(EM_DIAGRAM):   H2x2_1 = .;
499986    +   H2x2_2  = .;
MPRINT(EM_DIAGRAM):   H2x2_2 = .;
499987    +   H2x2_3  = .;
MPRINT(EM_DIAGRAM):   H2x2_3 = .;
499988    +   H2x2_4  = .;
MPRINT(EM_DIAGRAM):   H2x2_4 = .;
499989    +   H2x2_5  = .;
MPRINT(EM_DIAGRAM):   H2x2_5 = .;
499990    +   H2x2_6  = .;
MPRINT(EM_DIAGRAM):   H2x2_6 = .;
499991    +   H2x2_7  = .;
MPRINT(EM_DIAGRAM):   H2x2_7 = .;
499992    +END;
MPRINT(EM_DIAGRAM):   END;
499993    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
499994    +*** Writing the Node H3x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H3x1_ ;
499995    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
499996    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
499997    +   H3x1_1  =    -0.90634182479211 * H2x1_1  +    -0.09135307681655 * H2x1_2
499998    +          +     -1.1697186659188 * H2x1_3  +    -1.58089509972168 * H2x1_4
499999    +          +    -0.36298075828987 * H2x1_5  +     -0.1512750341775 * H2x1_6
500000    +          +    -0.95333639415651 * H2x1_7 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = -0.90634182479211 * H2x1_1 + -0.09135307681655 * H2x1_2 +
-1.1697186659188 * H2x1_3 + -1.58089509972168 * H2x1_4 + -0.36298075828987 * H2x1_5 +
-0.1512750341775 * H2x1_6 + -0.95333639415651 * H2x1_7 ;
500001    +   H3x1_2  =     0.55686365647701 * H2x1_1  +      1.5696753982442 * H2x1_2
500002    +          +    -0.32250855602992 * H2x1_3  +     0.19455668370146 * H2x1_4
500003    +          +     0.44351097086868 * H2x1_5  +     0.27358852097745 * H2x1_6
500004    +          +      0.4281879736941 * H2x1_7 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = 0.55686365647701 * H2x1_1 + 1.5696753982442 * H2x1_2 +
-0.32250855602992 * H2x1_3 + 0.19455668370146 * H2x1_4 + 0.44351097086868 * H2x1_5 +
0.27358852097745 * H2x1_6 + 0.4281879736941 * H2x1_7 ;
500005    +   H3x1_3  =     0.12633341645489 * H2x1_1  +    -0.66899185238366 * H2x1_2
500006    +          +    -2.56536949854372 * H2x1_3  +    -1.44702955697377 * H2x1_4
500007    +          +    -2.12726548877297 * H2x1_5  +     0.98860110338896 * H2x1_6
500008    +          +    -1.81290069415788 * H2x1_7 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = 0.12633341645489 * H2x1_1 + -0.66899185238366 * H2x1_2 +
-2.56536949854372 * H2x1_3 + -1.44702955697377 * H2x1_4 + -2.12726548877297 * H2x1_5 +
0.98860110338896 * H2x1_6 + -1.81290069415788 * H2x1_7 ;
500009    +   H3x1_4  =     -1.5244883189849 * H2x1_1  +     -0.8795974458787 * H2x1_2
500010    +          +    -0.90961705850703 * H2x1_3  +    -0.41256891447907 * H2x1_4
500011    +          +    -1.55913982799805 * H2x1_5  +     -0.9171280329681 * H2x1_6
500012    +          +    -0.70506147827449 * H2x1_7 ;
MPRINT(EM_DIAGRAM):   H3x1_4 = -1.5244883189849 * H2x1_1 + -0.8795974458787 * H2x1_2 +
-0.90961705850703 * H2x1_3 + -0.41256891447907 * H2x1_4 + -1.55913982799805 * H2x1_5 +
-0.9171280329681 * H2x1_6 + -0.70506147827449 * H2x1_7 ;
500013    +   H3x1_5  =     0.35217616707387 * H2x1_1  +    -1.16700891298034 * H2x1_2
500014    +          +      0.5371834401358 * H2x1_3  +     2.90147333104132 * H2x1_4
500015    +          +     0.77800792666349 * H2x1_5  +     0.78250225671691 * H2x1_6
500016    +          +    -0.59091463760785 * H2x1_7 ;
MPRINT(EM_DIAGRAM):   H3x1_5 = 0.35217616707387 * H2x1_1 + -1.16700891298034 * H2x1_2 +
0.5371834401358 * H2x1_3 + 2.90147333104132 * H2x1_4 + 0.77800792666349 * H2x1_5 +
0.78250225671691 * H2x1_6 + -0.59091463760785 * H2x1_7 ;
500017    +   H3x1_6  =    -0.44929632444778 * H2x1_1  +    -0.78833736143978 * H2x1_2
500018    +          +    -2.25458905584756 * H2x1_3  +    -1.94571232358746 * H2x1_4
500019    +          +     1.80055450278469 * H2x1_5  +     1.56927477052283 * H2x1_6
500020    +          +     0.56206783006188 * H2x1_7 ;
MPRINT(EM_DIAGRAM):   H3x1_6 = -0.44929632444778 * H2x1_1 + -0.78833736143978 * H2x1_2 +
-2.25458905584756 * H2x1_3 + -1.94571232358746 * H2x1_4 + 1.80055450278469 * H2x1_5 +
1.56927477052283 * H2x1_6 + 0.56206783006188 * H2x1_7 ;
500021    +   H3x1_1  = H3x1_1  +    -1.50414812258238 * H2x2_1
500022    +          +     2.71183535634521 * H2x2_2  +     0.92780495410356 * H2x2_3
500023    +          +     1.94819401410825 * H2x2_4  +     0.85505273909828 * H2x2_5
500024    +          +    -0.66540689026991 * H2x2_6  +    -0.32749055872531 * H2x2_7 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = H3x1_1 + -1.50414812258238 * H2x2_1 + 2.71183535634521 * H2x2_2
+ 0.92780495410356 * H2x2_3 + 1.94819401410825 * H2x2_4 + 0.85505273909828 * H2x2_5 +
-0.66540689026991 * H2x2_6 + -0.32749055872531 * H2x2_7 ;
500025    +   H3x1_2  = H3x1_2  +     0.55540470737424 * H2x2_1
500026    +          +    -1.17598972209898 * H2x2_2  +    -0.16619065810258 * H2x2_3
500027    +          +    -0.58955298520043 * H2x2_4  +     1.04029871696373 * H2x2_5
500028    +          +    -0.71430896416332 * H2x2_6  +    -1.57031773170963 * H2x2_7 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = H3x1_2 + 0.55540470737424 * H2x2_1 + -1.17598972209898 * H2x2_2
+ -0.16619065810258 * H2x2_3 + -0.58955298520043 * H2x2_4 + 1.04029871696373 * H2x2_5 +
-0.71430896416332 * H2x2_6 + -1.57031773170963 * H2x2_7 ;
500029    +   H3x1_3  = H3x1_3  +    -1.83796456414338 * H2x2_1
500030    +          +     1.49146311784803 * H2x2_2  +     0.05550989818961 * H2x2_3
500031    +          +    -0.08016006878981 * H2x2_4  +    -1.41328284571945 * H2x2_5
500032    +          +    -0.58920642563444 * H2x2_6  +     1.30950353008631 * H2x2_7 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = H3x1_3 + -1.83796456414338 * H2x2_1 + 1.49146311784803 * H2x2_2
+ 0.05550989818961 * H2x2_3 + -0.08016006878981 * H2x2_4 + -1.41328284571945 * H2x2_5 +
-0.58920642563444 * H2x2_6 + 1.30950353008631 * H2x2_7 ;
500033    +   H3x1_4  = H3x1_4  +     0.91384399854626 * H2x2_1
500034    +          +     -0.0377841204978 * H2x2_2  +     0.67274196472005 * H2x2_3
500035    +          +     0.76900504900432 * H2x2_4  +     0.71823373480501 * H2x2_5
500036    +          +    -0.04199535362683 * H2x2_6  +    -0.23501610033448 * H2x2_7 ;
MPRINT(EM_DIAGRAM):   H3x1_4 = H3x1_4 + 0.91384399854626 * H2x2_1 + -0.0377841204978 * H2x2_2
+ 0.67274196472005 * H2x2_3 + 0.76900504900432 * H2x2_4 + 0.71823373480501 * H2x2_5 +
-0.04199535362683 * H2x2_6 + -0.23501610033448 * H2x2_7 ;
500037    +   H3x1_5  = H3x1_5  +    -0.06769558303335 * H2x2_1
500038    +          +    -0.95662890382057 * H2x2_2  +    -0.56314830579562 * H2x2_3
500039    +          +    -0.17355939108245 * H2x2_4  +     0.49684441057813 * H2x2_5
500040    +          +    -0.27220440010331 * H2x2_6  +     1.13747855812864 * H2x2_7 ;
MPRINT(EM_DIAGRAM):   H3x1_5 = H3x1_5 + -0.06769558303335 * H2x2_1 + -0.95662890382057 *
H2x2_2 + -0.56314830579562 * H2x2_3 + -0.17355939108245 * H2x2_4 + 0.49684441057813 * H2x2_5 +
-0.27220440010331 * H2x2_6 + 1.13747855812864 * H2x2_7 ;
500041    +   H3x1_6  = H3x1_6  +    -0.58306849781773 * H2x2_1
500042    +          +    -1.96921645645113 * H2x2_2  +     0.09529919260054 * H2x2_3
500043    +          +     1.84321935581989 * H2x2_4  +     1.90621049776113 * H2x2_5
500044    +          +     0.22735961476244 * H2x2_6  +      1.7681869270915 * H2x2_7 ;
MPRINT(EM_DIAGRAM):   H3x1_6 = H3x1_6 + -0.58306849781773 * H2x2_1 + -1.96921645645113 *
H2x2_2 + 0.09529919260054 * H2x2_3 + 1.84321935581989 * H2x2_4 + 1.90621049776113 * H2x2_5 +
0.22735961476244 * H2x2_6 + 1.7681869270915 * H2x2_7 ;
500045    +   H3x1_1  =     0.84072071725045 + H3x1_1 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = 0.84072071725045 + H3x1_1 ;
500046    +   H3x1_2  =    -0.84331420680493 + H3x1_2 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = -0.84331420680493 + H3x1_2 ;
500047    +   H3x1_3  =    -1.15131491327763 + H3x1_3 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = -1.15131491327763 + H3x1_3 ;
500048    +   H3x1_4  =    -0.56905094914727 + H3x1_4 ;
MPRINT(EM_DIAGRAM):   H3x1_4 = -0.56905094914727 + H3x1_4 ;
500049    +   H3x1_5  =     1.29747074025762 + H3x1_5 ;
MPRINT(EM_DIAGRAM):   H3x1_5 = 1.29747074025762 + H3x1_5 ;
500050    +   H3x1_6  =     1.70771922783336 + H3x1_6 ;
MPRINT(EM_DIAGRAM):   H3x1_6 = 1.70771922783336 + H3x1_6 ;
500051    +   H3x1_7  = 0;
MPRINT(EM_DIAGRAM):   H3x1_7 = 0;
500052    +   _MAX_ = MAX (H3x1_1 , H3x1_2 , H3x1_3 , H3x1_4 , H3x1_5 , H3x1_6 , H3x1_7
500053    +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H3x1_1 , H3x1_2 , H3x1_3 , H3x1_4 , H3x1_5 , H3x1_6 ,
H3x1_7 );
500054    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
500055    +   H3x1_1  = EXP(H3x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_1 = EXP(H3x1_1 - _MAX_);
500056    +   _SUM_ = _SUM_ + H3x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_1 ;
500057    +   H3x1_2  = EXP(H3x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_2 = EXP(H3x1_2 - _MAX_);
500058    +   _SUM_ = _SUM_ + H3x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_2 ;
500059    +   H3x1_3  = EXP(H3x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_3 = EXP(H3x1_3 - _MAX_);
500060    +   _SUM_ = _SUM_ + H3x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_3 ;
500061    +   H3x1_4  = EXP(H3x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_4 = EXP(H3x1_4 - _MAX_);
500062    +   _SUM_ = _SUM_ + H3x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_4 ;
500063    +   H3x1_5  = EXP(H3x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_5 = EXP(H3x1_5 - _MAX_);
500064    +   _SUM_ = _SUM_ + H3x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_5 ;
500065    +   H3x1_6  = EXP(H3x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_6 = EXP(H3x1_6 - _MAX_);
500066    +   _SUM_ = _SUM_ + H3x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_6 ;
500067    +   H3x1_7  = EXP(H3x1_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_7 = EXP(H3x1_7 - _MAX_);
500068    +   _SUM_ = _SUM_ + H3x1_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_7 ;
500069    +   H3x1_1  = H3x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_1 = H3x1_1 / _SUM_;
500070    +   H3x1_2  = H3x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_2 = H3x1_2 / _SUM_;
500071    +   H3x1_3  = H3x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_3 = H3x1_3 / _SUM_;
500072    +   H3x1_4  = H3x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_4 = H3x1_4 / _SUM_;
500073    +   H3x1_5  = H3x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_5 = H3x1_5 / _SUM_;
500074    +   H3x1_6  = H3x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_6 = H3x1_6 / _SUM_;
500075    +   H3x1_7  = H3x1_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_7 = H3x1_7 / _SUM_;
500076    +END;
MPRINT(EM_DIAGRAM):   END;
500077    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
500078    +   H3x1_1  = .;
MPRINT(EM_DIAGRAM):   H3x1_1 = .;
500079    +   H3x1_2  = .;
MPRINT(EM_DIAGRAM):   H3x1_2 = .;
500080    +   H3x1_3  = .;
MPRINT(EM_DIAGRAM):   H3x1_3 = .;
500081    +   H3x1_4  = .;
MPRINT(EM_DIAGRAM):   H3x1_4 = .;
500082    +   H3x1_5  = .;
MPRINT(EM_DIAGRAM):   H3x1_5 = .;
500083    +   H3x1_6  = .;
MPRINT(EM_DIAGRAM):   H3x1_6 = .;
500084    +   H3x1_7  = .;
MPRINT(EM_DIAGRAM):   H3x1_7 = .;
500085    +END;
MPRINT(EM_DIAGRAM):   END;
500086    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
500087    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
500088    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
500089    +
500090    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
500091    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
500092    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
500093    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
500094    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
500095    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
500096    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
500097    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
500098    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
500099    +end;
MPRINT(EM_DIAGRAM):   end;
500100    +else do;
MPRINT(EM_DIAGRAM):   else do;
500101    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
500102    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
500103    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
500104    +   end;
MPRINT(EM_DIAGRAM):   end;
500105    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
500106    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
500107    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
500108    +   end;
MPRINT(EM_DIAGRAM):   end;
500109    +   else do;
MPRINT(EM_DIAGRAM):   else do;
500110    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
500111    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
500112    +   end;
MPRINT(EM_DIAGRAM):   end;
500113    +end;
MPRINT(EM_DIAGRAM):   end;
500114    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
500115    +   P_DepVar1  =    -10.5125772193731 * H3x1_1  +     0.35682915649078 * H3x1_2
500116    +          +    -0.04349805114958 * H3x1_3  +    -0.04491244667008 * H3x1_4
500117    +          +     34.5477259369591 * H3x1_5  +    -16.5063579573423 * H3x1_6
500118    +          +     0.83421675743806 * H3x1_7 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -10.5125772193731 * H3x1_1 + 0.35682915649078 * H3x1_2 +
-0.04349805114958 * H3x1_3 + -0.04491244667008 * H3x1_4 + 34.5477259369591 * H3x1_5 +
-16.5063579573423 * H3x1_6 + 0.83421675743806 * H3x1_7 ;
500119    +   P_DepVar1  =     6.85864742009761 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 6.85864742009761 + P_DepVar1 ;
500120    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
500121    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
500122    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
500123    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
500124    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
500125    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
500126    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
500127    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
500128    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
500129    +END;
MPRINT(EM_DIAGRAM):   END;
500130    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
500131    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
500132    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
500133    +END;
MPRINT(EM_DIAGRAM):   END;
500134    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
500135    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
500136    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
500137    +END;
MPRINT(EM_DIAGRAM):   END;
500138    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
500139    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
500140    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
500141    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
500142    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
500143    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
500144    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
500145    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
500146    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
500147    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
500148    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
500149    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
500150    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
500151    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
500152    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
500153    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
500154    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
500155    +END;
MPRINT(EM_DIAGRAM):   END;
500156    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
500157    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
500158    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
500159    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
500160     run;
 
NOTE: DATA STEP view saved on file EMWS8.AUTONEURAL43_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.META2_TRAIN.VIEW used (Total process time):
      real time           1.49 seconds
      cpu time            0.04 seconds
 
NOTE: DATA statement used (Total process time):
      real time           1.49 seconds
      cpu time            0.04 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
500161     quit;
500162     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
500163     filename emflow
500163   ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural43\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural43\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * AutoNeural43: Scoring VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
500164     *------------------------------------------------------------*;
500165     * AutoNeural43: Scoring VALIDATE data;
500166     *------------------------------------------------------------*;
500167     data EMWS8.AutoNeural43_VALIDATE
500168     / view=EMWS8.AutoNeural43_VALIDATE
500169     ;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural43_VALIDATE / view=EMWS8.AutoNeural43_VALIDATE ;
500170     set EMWS8.Meta2_VALIDATE
500171     ;
MPRINT(EM_DIAGRAM):   set EMWS8.Meta2_VALIDATE ;
500172     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural43\EMFLOWSCORE.sas.
500173    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
500174    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
500175    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
500176    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
500177    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
500178    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
500179    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
500180    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
500181    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
500182    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
500183    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
500184    +LENGTH _WARN_ $4
500185    +      F_DepVar  $ 12
500186    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
500187    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
500188    +
500189    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
500190    +
500191    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
500192    +
500193    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
500194    +
500195    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
500196    +
500197    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
500198    +
500199    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
500200    +
500201    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
500202    +
500203    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
500204    +
500205    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
500206    +
500207    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
500208    +
500209    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
500210    +
500211    +      label S_Year_Birth = 'Standard: Year_Birth' ;
MPRINT(EM_DIAGRAM):   label S_Year_Birth = 'Standard: Year_Birth' ;
500212    +
500213    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
500214    +
500215    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
500216    +
500217    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
500218    +
500219    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
500220    +
500221    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
500222    +
500223    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
500224    +
500225    +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
500226    +
500227    +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
500228    +
500229    +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
500230    +
500231    +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
500232    +
500233    +      label H1x1_7 = 'Hidden: H1x1_=7' ;
MPRINT(EM_DIAGRAM):   label H1x1_7 = 'Hidden: H1x1_=7' ;
500234    +
500235    +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
500236    +
500237    +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
500238    +
500239    +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
500240    +
500241    +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
500242    +
500243    +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
500244    +
500245    +      label H1x2_6 = 'Hidden: H1x2_=6' ;
MPRINT(EM_DIAGRAM):   label H1x2_6 = 'Hidden: H1x2_=6' ;
500246    +
500247    +      label H1x2_7 = 'Hidden: H1x2_=7' ;
MPRINT(EM_DIAGRAM):   label H1x2_7 = 'Hidden: H1x2_=7' ;
500248    +
500249    +      label H1x3_1 = 'Hidden: H1x3_=1' ;
MPRINT(EM_DIAGRAM):   label H1x3_1 = 'Hidden: H1x3_=1' ;
500250    +
500251    +      label H1x3_2 = 'Hidden: H1x3_=2' ;
MPRINT(EM_DIAGRAM):   label H1x3_2 = 'Hidden: H1x3_=2' ;
500252    +
500253    +      label H1x3_3 = 'Hidden: H1x3_=3' ;
MPRINT(EM_DIAGRAM):   label H1x3_3 = 'Hidden: H1x3_=3' ;
500254    +
500255    +      label H1x3_4 = 'Hidden: H1x3_=4' ;
MPRINT(EM_DIAGRAM):   label H1x3_4 = 'Hidden: H1x3_=4' ;
500256    +
500257    +      label H1x3_5 = 'Hidden: H1x3_=5' ;
MPRINT(EM_DIAGRAM):   label H1x3_5 = 'Hidden: H1x3_=5' ;
500258    +
500259    +      label H1x3_6 = 'Hidden: H1x3_=6' ;
MPRINT(EM_DIAGRAM):   label H1x3_6 = 'Hidden: H1x3_=6' ;
500260    +
500261    +      label H1x3_7 = 'Hidden: H1x3_=7' ;
MPRINT(EM_DIAGRAM):   label H1x3_7 = 'Hidden: H1x3_=7' ;
500262    +
500263    +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
500264    +
500265    +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
500266    +
500267    +      label H2x1_3 = 'Hidden: H2x1_=3' ;
MPRINT(EM_DIAGRAM):   label H2x1_3 = 'Hidden: H2x1_=3' ;
500268    +
500269    +      label H2x1_4 = 'Hidden: H2x1_=4' ;
MPRINT(EM_DIAGRAM):   label H2x1_4 = 'Hidden: H2x1_=4' ;
500270    +
500271    +      label H2x1_5 = 'Hidden: H2x1_=5' ;
MPRINT(EM_DIAGRAM):   label H2x1_5 = 'Hidden: H2x1_=5' ;
500272    +
500273    +      label H2x1_6 = 'Hidden: H2x1_=6' ;
MPRINT(EM_DIAGRAM):   label H2x1_6 = 'Hidden: H2x1_=6' ;
500274    +
500275    +      label H2x1_7 = 'Hidden: H2x1_=7' ;
MPRINT(EM_DIAGRAM):   label H2x1_7 = 'Hidden: H2x1_=7' ;
500276    +
500277    +      label H2x2_1 = 'Hidden: H2x2_=1' ;
MPRINT(EM_DIAGRAM):   label H2x2_1 = 'Hidden: H2x2_=1' ;
500278    +
500279    +      label H2x2_2 = 'Hidden: H2x2_=2' ;
MPRINT(EM_DIAGRAM):   label H2x2_2 = 'Hidden: H2x2_=2' ;
500280    +
500281    +      label H2x2_3 = 'Hidden: H2x2_=3' ;
MPRINT(EM_DIAGRAM):   label H2x2_3 = 'Hidden: H2x2_=3' ;
500282    +
500283    +      label H2x2_4 = 'Hidden: H2x2_=4' ;
MPRINT(EM_DIAGRAM):   label H2x2_4 = 'Hidden: H2x2_=4' ;
500284    +
500285    +      label H2x2_5 = 'Hidden: H2x2_=5' ;
MPRINT(EM_DIAGRAM):   label H2x2_5 = 'Hidden: H2x2_=5' ;
500286    +
500287    +      label H2x2_6 = 'Hidden: H2x2_=6' ;
MPRINT(EM_DIAGRAM):   label H2x2_6 = 'Hidden: H2x2_=6' ;
500288    +
500289    +      label H2x2_7 = 'Hidden: H2x2_=7' ;
MPRINT(EM_DIAGRAM):   label H2x2_7 = 'Hidden: H2x2_=7' ;
500290    +
500291    +      label H3x1_1 = 'Hidden: H3x1_=1' ;
MPRINT(EM_DIAGRAM):   label H3x1_1 = 'Hidden: H3x1_=1' ;
500292    +
500293    +      label H3x1_2 = 'Hidden: H3x1_=2' ;
MPRINT(EM_DIAGRAM):   label H3x1_2 = 'Hidden: H3x1_=2' ;
500294    +
500295    +      label H3x1_3 = 'Hidden: H3x1_=3' ;
MPRINT(EM_DIAGRAM):   label H3x1_3 = 'Hidden: H3x1_=3' ;
500296    +
500297    +      label H3x1_4 = 'Hidden: H3x1_=4' ;
MPRINT(EM_DIAGRAM):   label H3x1_4 = 'Hidden: H3x1_=4' ;
500298    +
500299    +      label H3x1_5 = 'Hidden: H3x1_=5' ;
MPRINT(EM_DIAGRAM):   label H3x1_5 = 'Hidden: H3x1_=5' ;
500300    +
500301    +      label H3x1_6 = 'Hidden: H3x1_=6' ;
MPRINT(EM_DIAGRAM):   label H3x1_6 = 'Hidden: H3x1_=6' ;
500302    +
500303    +      label H3x1_7 = 'Hidden: H3x1_=7' ;
MPRINT(EM_DIAGRAM):   label H3x1_7 = 'Hidden: H3x1_=7' ;
500304    +
500305    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
500306    +
500307    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
500308    +
500309    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
500310    +
500311    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
500312    +
500313    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
500314    +
500315    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
500316    +
500317    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
500318    +
500319    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
500320    +
500321    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
500322    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
500323    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
500324    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
500325    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
500326    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
500327    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
500328    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
500329    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
500330    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
500331    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
500332    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
500333    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
500334    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
500335    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
500336    +end;
MPRINT(EM_DIAGRAM):   end;
500337    +else do;
MPRINT(EM_DIAGRAM):   else do;
500338    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
500339    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
500340    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
500341    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
500342    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
500343    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
500344    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
500345    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
500346    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
500347    +         end;
MPRINT(EM_DIAGRAM):   end;
500348    +         else do;
MPRINT(EM_DIAGRAM):   else do;
500349    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
500350    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
500351    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
500352    +            end;
MPRINT(EM_DIAGRAM):   end;
500353    +         end;
MPRINT(EM_DIAGRAM):   end;
500354    +      end;
MPRINT(EM_DIAGRAM):   end;
500355    +      else do;
MPRINT(EM_DIAGRAM):   else do;
500356    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
500357    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
500358    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
500359    +         end;
MPRINT(EM_DIAGRAM):   end;
500360    +      end;
MPRINT(EM_DIAGRAM):   end;
500361    +   end;
MPRINT(EM_DIAGRAM):   end;
500362    +   else do;
MPRINT(EM_DIAGRAM):   else do;
500363    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
500364    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
500365    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
500366    +      end;
MPRINT(EM_DIAGRAM):   end;
500367    +      else do;
MPRINT(EM_DIAGRAM):   else do;
500368    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
500369    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
500370    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
500371    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
500372    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
500373    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
500374    +         end;
MPRINT(EM_DIAGRAM):   end;
500375    +      end;
MPRINT(EM_DIAGRAM):   end;
500376    +   end;
MPRINT(EM_DIAGRAM):   end;
500377    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
500378    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
500379    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
500380    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
500381    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
500382    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
500383    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
500384    +   end;
MPRINT(EM_DIAGRAM):   end;
500385    +end;
MPRINT(EM_DIAGRAM):   end;
500386    +
500387    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
500388    +*** Checking missing input Interval
500389    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
500390    +
500391    +IF NMISS(
500392    +   AcceptedCmpTotal ,
500393    +   Frq ,
500394    +   Income ,
500395    +   Mnt ,
500396    +   MntGoldProds ,
500397    +   MntMeatProducts ,
500398    +   NumCatalogPurchases ,
500399    +   NumDealsPurchases ,
500400    +   NumWebVisitsMonth ,
500401    +   RFMstat ,
500402    +   Recency ,
500403    +   Teenhome ,
500404    +   Year_Birth   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Income , Mnt , MntGoldProds ,
MntMeatProducts , NumCatalogPurchases , NumDealsPurchases , NumWebVisitsMonth , RFMstat ,
Recency , Teenhome , Year_Birth ) THEN DO;
500405    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
500406    +
500407    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
500408    +END;
MPRINT(EM_DIAGRAM):   END;
500409    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
500410    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
500411    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
500412    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
500413    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
500414    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
500415    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
500416    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
500417    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
500418    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
500419    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
500420    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
500421    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
500422    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
500423    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
500424    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
500425    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
500426    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
500427    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
500428    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
500429    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
500430    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
500431    +   S_Year_Birth  =    -163.205330145852 +     0.08289609202864 * Year_Birth ;
MPRINT(EM_DIAGRAM):   S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
500432    +END;
MPRINT(EM_DIAGRAM):   END;
500433    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
500434    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
500435    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
500436    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
500437    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
500438    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
500439    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
500440    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
500441    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
500442    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
500443    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
500444    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
500445    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
500446    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
500447    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
500448    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
500449    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
500450    +   ELSE S_NumCatalogPurchases
500451    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
500452    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
500453    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
500454    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
500455    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
500456    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
500457    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
500458    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
500459    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
500460    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
500461    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
500462    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
500463    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
500464    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
500465    +   IF MISSING( Year_Birth ) THEN S_Year_Birth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Year_Birth ) THEN S_Year_Birth = . ;
500466    +   ELSE S_Year_Birth  =    -163.205330145852 +     0.08289609202864 *
500467    +        Year_Birth ;
MPRINT(EM_DIAGRAM):   ELSE S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
500468    +END;
MPRINT(EM_DIAGRAM):   END;
500469    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
500470    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
500471    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
500472    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
500473    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
500474    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
500475    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
500476    +   H1x1_1  =    -0.29618919413806 * S_AcceptedCmpTotal
500477    +          +     0.65621237028757 * S_Frq  +     0.03418945976327 * S_Income
500478    +          +     1.44880456678399 * S_Mnt  +     0.74166093949552 *
500479    +        S_MntGoldProds  +     1.02706876663519 * S_MntMeatProducts
500480    +          +    -0.82528424139262 * S_NumCatalogPurchases
500481    +          +      0.5929046965244 * S_NumDealsPurchases
500482    +          +    -0.52362488197384 * S_NumWebVisitsMonth
500483    +          +     0.37882892269923 * S_RFMstat  +     2.12340115344155 *
500484    +        S_Recency  +    -0.83670225777249 * S_Teenhome
500485    +          +     0.53976656905831 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.29618919413806 * S_AcceptedCmpTotal + 0.65621237028757 *
S_Frq + 0.03418945976327 * S_Income + 1.44880456678399 * S_Mnt + 0.74166093949552 *
S_MntGoldProds + 1.02706876663519 * S_MntMeatProducts + -0.82528424139262 *
S_NumCatalogPurchases + 0.5929046965244 * S_NumDealsPurchases + -0.52362488197384 *
S_NumWebVisitsMonth + 0.37882892269923 * S_RFMstat + 2.12340115344155 * S_Recency +
-0.83670225777249 * S_Teenhome + 0.53976656905831 * S_Year_Birth ;
500486    +   H1x1_2  =     0.29962396390652 * S_AcceptedCmpTotal
500487    +          +     -2.5902198016826 * S_Frq  +    -0.18776639473475 * S_Income
500488    +          +    -2.77524252217737 * S_Mnt  +     0.96018065616836 *
500489    +        S_MntGoldProds  +     3.16907172523474 * S_MntMeatProducts
500490    +          +    -0.60117742307807 * S_NumCatalogPurchases
500491    +          +     1.09806082321711 * S_NumDealsPurchases
500492    +          +     1.26617704720444 * S_NumWebVisitsMonth
500493    +          +     1.08444062320284 * S_RFMstat  +     1.05523311776937 *
500494    +        S_Recency  +     -0.2630764341314 * S_Teenhome
500495    +          +    -0.42373178164016 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.29962396390652 * S_AcceptedCmpTotal + -2.5902198016826 *
S_Frq + -0.18776639473475 * S_Income + -2.77524252217737 * S_Mnt + 0.96018065616836 *
S_MntGoldProds + 3.16907172523474 * S_MntMeatProducts + -0.60117742307807 *
S_NumCatalogPurchases + 1.09806082321711 * S_NumDealsPurchases + 1.26617704720444 *
S_NumWebVisitsMonth + 1.08444062320284 * S_RFMstat + 1.05523311776937 * S_Recency +
-0.2630764341314 * S_Teenhome + -0.42373178164016 * S_Year_Birth ;
500496    +   H1x1_3  =     2.31041583450369 * S_AcceptedCmpTotal
500497    +          +    -1.96810851023784 * S_Frq  +     0.93795839333407 * S_Income
500498    +          +    -1.55337331547216 * S_Mnt  +     1.13417428979776 *
500499    +        S_MntGoldProds  +     3.70573651287077 * S_MntMeatProducts
500500    +          +     1.63075268570383 * S_NumCatalogPurchases
500501    +          +     0.62057902628545 * S_NumDealsPurchases
500502    +          +     1.85944172136218 * S_NumWebVisitsMonth
500503    +          +     0.51474936656536 * S_RFMstat  +    -2.17922024885571 *
500504    +        S_Recency  +    -0.78663308544854 * S_Teenhome
500505    +          +    -0.08719031066365 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 2.31041583450369 * S_AcceptedCmpTotal + -1.96810851023784 *
S_Frq + 0.93795839333407 * S_Income + -1.55337331547216 * S_Mnt + 1.13417428979776 *
S_MntGoldProds + 3.70573651287077 * S_MntMeatProducts + 1.63075268570383 *
S_NumCatalogPurchases + 0.62057902628545 * S_NumDealsPurchases + 1.85944172136218 *
S_NumWebVisitsMonth + 0.51474936656536 * S_RFMstat + -2.17922024885571 * S_Recency +
-0.78663308544854 * S_Teenhome + -0.08719031066365 * S_Year_Birth ;
500506    +   H1x1_4  =     -0.0390409024382 * S_AcceptedCmpTotal
500507    +          +     2.11606776858073 * S_Frq  +     -0.3817450995856 * S_Income
500508    +          +     0.40531492299483 * S_Mnt  +     0.54341985868017 *
500509    +        S_MntGoldProds  +    -5.50809183295151 * S_MntMeatProducts
500510    +          +    -2.59032878085972 * S_NumCatalogPurchases
500511    +          +    -0.44146008176644 * S_NumDealsPurchases
500512    +          +     1.16377649939583 * S_NumWebVisitsMonth
500513    +          +    -0.40950445519308 * S_RFMstat  +     1.44701615363875 *
500514    +        S_Recency  +    -0.44721505258044 * S_Teenhome
500515    +          +    -0.53780522701747 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -0.0390409024382 * S_AcceptedCmpTotal + 2.11606776858073 *
S_Frq + -0.3817450995856 * S_Income + 0.40531492299483 * S_Mnt + 0.54341985868017 *
S_MntGoldProds + -5.50809183295151 * S_MntMeatProducts + -2.59032878085972 *
S_NumCatalogPurchases + -0.44146008176644 * S_NumDealsPurchases + 1.16377649939583 *
S_NumWebVisitsMonth + -0.40950445519308 * S_RFMstat + 1.44701615363875 * S_Recency +
-0.44721505258044 * S_Teenhome + -0.53780522701747 * S_Year_Birth ;
500516    +   H1x1_5  =    -0.96249689474011 * S_AcceptedCmpTotal
500517    +          +     1.18171571446591 * S_Frq  +     0.15643078933994 * S_Income
500518    +          +      1.1855275327594 * S_Mnt  +    -0.31882188338593 *
500519    +        S_MntGoldProds  +    -0.17799046807331 * S_MntMeatProducts
500520    +          +    -2.88423926492169 * S_NumCatalogPurchases
500521    +          +     0.76448279454687 * S_NumDealsPurchases
500522    +          +     0.63782718366339 * S_NumWebVisitsMonth
500523    +          +    -1.52311206450608 * S_RFMstat  +     2.66138322599513 *
500524    +        S_Recency  +     0.19809045233143 * S_Teenhome
500525    +          +    -0.11944673598308 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -0.96249689474011 * S_AcceptedCmpTotal + 1.18171571446591 *
S_Frq + 0.15643078933994 * S_Income + 1.1855275327594 * S_Mnt + -0.31882188338593 *
S_MntGoldProds + -0.17799046807331 * S_MntMeatProducts + -2.88423926492169 *
S_NumCatalogPurchases + 0.76448279454687 * S_NumDealsPurchases + 0.63782718366339 *
S_NumWebVisitsMonth + -1.52311206450608 * S_RFMstat + 2.66138322599513 * S_Recency +
0.19809045233143 * S_Teenhome + -0.11944673598308 * S_Year_Birth ;
500526    +   H1x1_6  =     1.48018319811202 * S_AcceptedCmpTotal
500527    +          +    -2.35201132061873 * S_Frq  +     1.49549206730687 * S_Income
500528    +          +    -0.92311571755706 * S_Mnt  +    -0.17036386789536 *
500529    +        S_MntGoldProds  +     2.42959371021324 * S_MntMeatProducts
500530    +          +     1.71243370379543 * S_NumCatalogPurchases
500531    +          +     1.59034024362028 * S_NumDealsPurchases
500532    +          +     2.43090724707282 * S_NumWebVisitsMonth
500533    +          +    -1.84934930083177 * S_RFMstat  +    -1.10219728762745 *
500534    +        S_Recency  +    -1.20398234836557 * S_Teenhome
500535    +          +    -0.04071326663204 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_6 = 1.48018319811202 * S_AcceptedCmpTotal + -2.35201132061873 *
S_Frq + 1.49549206730687 * S_Income + -0.92311571755706 * S_Mnt + -0.17036386789536 *
S_MntGoldProds + 2.42959371021324 * S_MntMeatProducts + 1.71243370379543 *
S_NumCatalogPurchases + 1.59034024362028 * S_NumDealsPurchases + 2.43090724707282 *
S_NumWebVisitsMonth + -1.84934930083177 * S_RFMstat + -1.10219728762745 * S_Recency +
-1.20398234836557 * S_Teenhome + -0.04071326663204 * S_Year_Birth ;
500536    +   H1x1_1  = H1x1_1  +    -1.53952272056325 * Marital_StatusDivorced
500537    +          +     1.90782989914192 * Marital_StatusMarried
500538    +          +    -1.16189886119693 * Marital_StatusSingle
500539    +          +     1.42717413956591 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -1.53952272056325 * Marital_StatusDivorced +
1.90782989914192 * Marital_StatusMarried + -1.16189886119693 * Marital_StatusSingle +
1.42717413956591 * Marital_StatusTogether ;
500540    +   H1x1_2  = H1x1_2  +     0.65814869063598 * Marital_StatusDivorced
500541    +          +     0.30468777490799 * Marital_StatusMarried
500542    +          +     0.61978761938746 * Marital_StatusSingle
500543    +          +    -0.78873321292122 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.65814869063598 * Marital_StatusDivorced +
0.30468777490799 * Marital_StatusMarried + 0.61978761938746 * Marital_StatusSingle +
-0.78873321292122 * Marital_StatusTogether ;
500544    +   H1x1_3  = H1x1_3  +      0.1292120736254 * Marital_StatusDivorced
500545    +          +    -1.73477859605124 * Marital_StatusMarried
500546    +          +     1.32595981126289 * Marital_StatusSingle
500547    +          +    -1.40161784211243 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.1292120736254 * Marital_StatusDivorced +
-1.73477859605124 * Marital_StatusMarried + 1.32595981126289 * Marital_StatusSingle +
-1.40161784211243 * Marital_StatusTogether ;
500548    +   H1x1_4  = H1x1_4  +     0.20617554754163 * Marital_StatusDivorced
500549    +          +     0.06077392213964 * Marital_StatusMarried
500550    +          +     0.21115279121703 * Marital_StatusSingle
500551    +          +    -0.61340758151821 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + 0.20617554754163 * Marital_StatusDivorced +
0.06077392213964 * Marital_StatusMarried + 0.21115279121703 * Marital_StatusSingle +
-0.61340758151821 * Marital_StatusTogether ;
500552    +   H1x1_5  = H1x1_5  +    -0.69141266071894 * Marital_StatusDivorced
500553    +          +    -0.24067068377767 * Marital_StatusMarried
500554    +          +      0.2728964145401 * Marital_StatusSingle
500555    +          +    -0.61614895252648 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.69141266071894 * Marital_StatusDivorced +
-0.24067068377767 * Marital_StatusMarried + 0.2728964145401 * Marital_StatusSingle +
-0.61614895252648 * Marital_StatusTogether ;
500556    +   H1x1_6  = H1x1_6  +    -0.81455860225062 * Marital_StatusDivorced
500557    +          +    -0.15640287278595 * Marital_StatusMarried
500558    +          +     0.54159395450762 * Marital_StatusSingle
500559    +          +    -0.43264862434738 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + -0.81455860225062 * Marital_StatusDivorced +
-0.15640287278595 * Marital_StatusMarried + 0.54159395450762 * Marital_StatusSingle +
-0.43264862434738 * Marital_StatusTogether ;
500560    +   H1x1_1  =    -0.36385036888345 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.36385036888345 + H1x1_1 ;
500561    +   H1x1_2  =     0.02663558500629 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.02663558500629 + H1x1_2 ;
500562    +   H1x1_3  =    -3.50526409213811 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -3.50526409213811 + H1x1_3 ;
500563    +   H1x1_4  =     0.63048769294892 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.63048769294892 + H1x1_4 ;
500564    +   H1x1_5  =     1.21111796976731 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 1.21111796976731 + H1x1_5 ;
500565    +   H1x1_6  =    -1.76174187739611 + H1x1_6 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = -1.76174187739611 + H1x1_6 ;
500566    +   H1x1_7  = 0;
MPRINT(EM_DIAGRAM):   H1x1_7 = 0;
500567    +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 , H1x1_7
500568    +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 ,
H1x1_7 );
500569    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
500570    +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
500571    +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
500572    +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
500573    +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
500574    +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
500575    +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
500576    +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
500577    +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
500578    +   H1x1_5  = EXP(H1x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_5 = EXP(H1x1_5 - _MAX_);
500579    +   _SUM_ = _SUM_ + H1x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_5 ;
500580    +   H1x1_6  = EXP(H1x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_6 = EXP(H1x1_6 - _MAX_);
500581    +   _SUM_ = _SUM_ + H1x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_6 ;
500582    +   H1x1_7  = EXP(H1x1_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_7 = EXP(H1x1_7 - _MAX_);
500583    +   _SUM_ = _SUM_ + H1x1_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_7 ;
500584    +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
500585    +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
500586    +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
500587    +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
500588    +   H1x1_5  = H1x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 / _SUM_;
500589    +   H1x1_6  = H1x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 / _SUM_;
500590    +   H1x1_7  = H1x1_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_7 = H1x1_7 / _SUM_;
500591    +END;
MPRINT(EM_DIAGRAM):   END;
500592    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
500593    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
500594    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
500595    +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
500596    +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
500597    +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
500598    +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
500599    +   H1x1_7  = .;
MPRINT(EM_DIAGRAM):   H1x1_7 = .;
500600    +END;
MPRINT(EM_DIAGRAM):   END;
500601    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
500602    +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
500603    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
500604    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
500605    +   H1x2_1  =     0.51589041180152 * S_AcceptedCmpTotal
500606    +          +     -0.6498311499195 * S_Frq  +    -1.08182644925044 * S_Income
500607    +          +    -1.19064228379044 * S_Mnt  +    -1.27287496888491 *
500608    +        S_MntGoldProds  +    -1.33897837883991 * S_MntMeatProducts
500609    +          +     0.14209124492657 * S_NumCatalogPurchases
500610    +          +    -1.31625106509803 * S_NumDealsPurchases
500611    +          +     2.35745588368331 * S_NumWebVisitsMonth
500612    +          +    -1.28657356976181 * S_RFMstat  +     0.25408650330935 *
500613    +        S_Recency  +     1.23527100408525 * S_Teenhome
500614    +          +    -1.87183507669176 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.51589041180152 * S_AcceptedCmpTotal + -0.6498311499195 *
S_Frq + -1.08182644925044 * S_Income + -1.19064228379044 * S_Mnt + -1.27287496888491 *
S_MntGoldProds + -1.33897837883991 * S_MntMeatProducts + 0.14209124492657 *
S_NumCatalogPurchases + -1.31625106509803 * S_NumDealsPurchases + 2.35745588368331 *
S_NumWebVisitsMonth + -1.28657356976181 * S_RFMstat + 0.25408650330935 * S_Recency +
1.23527100408525 * S_Teenhome + -1.87183507669176 * S_Year_Birth ;
500615    +   H1x2_2  =    -1.23424462482032 * S_AcceptedCmpTotal
500616    +          +     1.46358102529667 * S_Frq  +     1.75790517593121 * S_Income
500617    +          +      -0.424881586919 * S_Mnt  +     -0.9331242135447 *
500618    +        S_MntGoldProds  +     0.54942904780681 * S_MntMeatProducts
500619    +          +     1.18605040958794 * S_NumCatalogPurchases
500620    +          +    -0.89798157472835 * S_NumDealsPurchases
500621    +          +    -0.09236646871049 * S_NumWebVisitsMonth
500622    +          +    -1.29341547638046 * S_RFMstat  +     1.66853355984342 *
500623    +        S_Recency  +    -0.50770218335102 * S_Teenhome
500624    +          +    -1.07353749220663 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -1.23424462482032 * S_AcceptedCmpTotal + 1.46358102529667 *
S_Frq + 1.75790517593121 * S_Income + -0.424881586919 * S_Mnt + -0.9331242135447 *
S_MntGoldProds + 0.54942904780681 * S_MntMeatProducts + 1.18605040958794 *
S_NumCatalogPurchases + -0.89798157472835 * S_NumDealsPurchases + -0.09236646871049 *
S_NumWebVisitsMonth + -1.29341547638046 * S_RFMstat + 1.66853355984342 * S_Recency +
-0.50770218335102 * S_Teenhome + -1.07353749220663 * S_Year_Birth ;
500625    +   H1x2_3  =     0.77624009560593 * S_AcceptedCmpTotal
500626    +          +    -0.52739784343536 * S_Frq  +     0.03893675518591 * S_Income
500627    +          +     2.17484611279249 * S_Mnt  +    -0.17952459801341 *
500628    +        S_MntGoldProds  +     0.34588410829653 * S_MntMeatProducts
500629    +          +    -1.53424308314822 * S_NumCatalogPurchases
500630    +          +    -0.80590323269981 * S_NumDealsPurchases
500631    +          +    -1.40104490662303 * S_NumWebVisitsMonth
500632    +          +     1.66586308350968 * S_RFMstat  +    -0.47553614859646 *
500633    +        S_Recency  +     0.96086280467056 * S_Teenhome
500634    +          +    -1.77672596886127 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x2_3 = 0.77624009560593 * S_AcceptedCmpTotal + -0.52739784343536 *
S_Frq + 0.03893675518591 * S_Income + 2.17484611279249 * S_Mnt + -0.17952459801341 *
S_MntGoldProds + 0.34588410829653 * S_MntMeatProducts + -1.53424308314822 *
S_NumCatalogPurchases + -0.80590323269981 * S_NumDealsPurchases + -1.40104490662303 *
S_NumWebVisitsMonth + 1.66586308350968 * S_RFMstat + -0.47553614859646 * S_Recency +
0.96086280467056 * S_Teenhome + -1.77672596886127 * S_Year_Birth ;
500635    +   H1x2_4  =     0.58137966699652 * S_AcceptedCmpTotal
500636    +          +      1.4040418295752 * S_Frq  +    -0.24832517883948 * S_Income
500637    +          +    -0.61141424736299 * S_Mnt  +     0.20471254162898 *
500638    +        S_MntGoldProds  +     0.44314427658514 * S_MntMeatProducts
500639    +          +    -1.25862219948587 * S_NumCatalogPurchases
500640    +          +     1.95015982914109 * S_NumDealsPurchases
500641    +          +     0.64320281589594 * S_NumWebVisitsMonth
500642    +          +     0.79165027029588 * S_RFMstat  +     0.66988554846863 *
500643    +        S_Recency  +    -0.00184949563812 * S_Teenhome
500644    +          +    -0.90548552271817 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 0.58137966699652 * S_AcceptedCmpTotal + 1.4040418295752 * S_Frq
+ -0.24832517883948 * S_Income + -0.61141424736299 * S_Mnt + 0.20471254162898 * S_MntGoldProds
+ 0.44314427658514 * S_MntMeatProducts + -1.25862219948587 * S_NumCatalogPurchases +
1.95015982914109 * S_NumDealsPurchases + 0.64320281589594 * S_NumWebVisitsMonth +
0.79165027029588 * S_RFMstat + 0.66988554846863 * S_Recency + -0.00184949563812 * S_Teenhome +
-0.90548552271817 * S_Year_Birth ;
500645    +   H1x2_5  =      0.5931660751286 * S_AcceptedCmpTotal
500646    +          +     0.58645753040534 * S_Frq  +     1.15236353289832 * S_Income
500647    +          +     0.33853280493921 * S_Mnt  +    -0.34695797092699 *
500648    +        S_MntGoldProds  +     2.24596975589576 * S_MntMeatProducts
500649    +          +     0.30573893169917 * S_NumCatalogPurchases
500650    +          +     0.93169788380491 * S_NumDealsPurchases
500651    +          +     0.04516037232248 * S_NumWebVisitsMonth
500652    +          +     0.56461660789519 * S_RFMstat  +    -0.73850030816559 *
500653    +        S_Recency  +      0.1429120113072 * S_Teenhome
500654    +          +     0.57728849891114 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 0.5931660751286 * S_AcceptedCmpTotal + 0.58645753040534 * S_Frq
+ 1.15236353289832 * S_Income + 0.33853280493921 * S_Mnt + -0.34695797092699 * S_MntGoldProds
+ 2.24596975589576 * S_MntMeatProducts + 0.30573893169917 * S_NumCatalogPurchases +
0.93169788380491 * S_NumDealsPurchases + 0.04516037232248 * S_NumWebVisitsMonth +
0.56461660789519 * S_RFMstat + -0.73850030816559 * S_Recency + 0.1429120113072 * S_Teenhome +
0.57728849891114 * S_Year_Birth ;
500655    +   H1x2_6  =    -0.61564457275113 * S_AcceptedCmpTotal
500656    +          +     0.25558411574917 * S_Frq  +      0.1079727446126 * S_Income
500657    +          +    -1.20360633098467 * S_Mnt  +     1.72797334940475 *
500658    +        S_MntGoldProds  +    -1.65210775934619 * S_MntMeatProducts
500659    +          +      0.2704422632168 * S_NumCatalogPurchases
500660    +          +      2.3389342094366 * S_NumDealsPurchases
500661    +          +     0.01076302858809 * S_NumWebVisitsMonth
500662    +          +    -2.36764292681458 * S_RFMstat  +     1.10196533018748 *
500663    +        S_Recency  +     0.68455094392125 * S_Teenhome
500664    +          +     1.22292273319927 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x2_6 = -0.61564457275113 * S_AcceptedCmpTotal + 0.25558411574917 *
S_Frq + 0.1079727446126 * S_Income + -1.20360633098467 * S_Mnt + 1.72797334940475 *
S_MntGoldProds + -1.65210775934619 * S_MntMeatProducts + 0.2704422632168 *
S_NumCatalogPurchases + 2.3389342094366 * S_NumDealsPurchases + 0.01076302858809 *
S_NumWebVisitsMonth + -2.36764292681458 * S_RFMstat + 1.10196533018748 * S_Recency +
0.68455094392125 * S_Teenhome + 1.22292273319927 * S_Year_Birth ;
500665    +   H1x2_1  = H1x2_1  +    -2.04566893512123 * Marital_StatusDivorced
500666    +          +      0.8255833782513 * Marital_StatusMarried
500667    +          +    -0.48959165020896 * Marital_StatusSingle
500668    +          +     2.83781371812098 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -2.04566893512123 * Marital_StatusDivorced +
0.8255833782513 * Marital_StatusMarried + -0.48959165020896 * Marital_StatusSingle +
2.83781371812098 * Marital_StatusTogether ;
500669    +   H1x2_2  = H1x2_2  +     0.67000557197818 * Marital_StatusDivorced
500670    +          +    -0.36405013930464 * Marital_StatusMarried
500671    +          +    -0.11895921007246 * Marital_StatusSingle
500672    +          +    -0.94713834966834 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 0.67000557197818 * Marital_StatusDivorced +
-0.36405013930464 * Marital_StatusMarried + -0.11895921007246 * Marital_StatusSingle +
-0.94713834966834 * Marital_StatusTogether ;
500673    +   H1x2_3  = H1x2_3  +     0.26597574107473 * Marital_StatusDivorced
500674    +          +    -1.38902793752658 * Marital_StatusMarried
500675    +          +     0.47104623132568 * Marital_StatusSingle
500676    +          +    -0.55354712799424 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 0.26597574107473 * Marital_StatusDivorced +
-1.38902793752658 * Marital_StatusMarried + 0.47104623132568 * Marital_StatusSingle +
-0.55354712799424 * Marital_StatusTogether ;
500677    +   H1x2_4  = H1x2_4  +    -1.69625977318234 * Marital_StatusDivorced
500678    +          +     0.03793816986941 * Marital_StatusMarried
500679    +          +     0.32286910605532 * Marital_StatusSingle
500680    +          +    -1.44817209305758 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + -1.69625977318234 * Marital_StatusDivorced +
0.03793816986941 * Marital_StatusMarried + 0.32286910605532 * Marital_StatusSingle +
-1.44817209305758 * Marital_StatusTogether ;
500681    +   H1x2_5  = H1x2_5  +     0.19745523338489 * Marital_StatusDivorced
500682    +          +    -0.60013237897988 * Marital_StatusMarried
500683    +          +    -1.54090744803073 * Marital_StatusSingle
500684    +          +    -2.24346446510302 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 0.19745523338489 * Marital_StatusDivorced +
-0.60013237897988 * Marital_StatusMarried + -1.54090744803073 * Marital_StatusSingle +
-2.24346446510302 * Marital_StatusTogether ;
500685    +   H1x2_6  = H1x2_6  +     0.47464108124928 * Marital_StatusDivorced
500686    +          +     2.39490119482132 * Marital_StatusMarried
500687    +          +     0.73080073298893 * Marital_StatusSingle
500688    +          +    -0.62296432915598 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 + 0.47464108124928 * Marital_StatusDivorced +
2.39490119482132 * Marital_StatusMarried + 0.73080073298893 * Marital_StatusSingle +
-0.62296432915598 * Marital_StatusTogether ;
500689    +   H1x2_1  =     1.03099135229255 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.03099135229255 + H1x2_1 ;
500690    +   H1x2_2  =     -0.9436150278938 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -0.9436150278938 + H1x2_2 ;
500691    +   H1x2_3  =    -0.17327523864686 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.17327523864686 + H1x2_3 ;
500692    +   H1x2_4  =     0.30103807123555 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 0.30103807123555 + H1x2_4 ;
500693    +   H1x2_5  =    -2.06815743640812 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -2.06815743640812 + H1x2_5 ;
500694    +   H1x2_6  =     1.90356790294644 + H1x2_6 ;
MPRINT(EM_DIAGRAM):   H1x2_6 = 1.90356790294644 + H1x2_6 ;
500695    +   H1x2_7  = 0;
MPRINT(EM_DIAGRAM):   H1x2_7 = 0;
500696    +   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 , H1x2_7
500697    +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 ,
H1x2_7 );
500698    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
500699    +   H1x2_1  = EXP(H1x2_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_1 = EXP(H1x2_1 - _MAX_);
500700    +   _SUM_ = _SUM_ + H1x2_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_1 ;
500701    +   H1x2_2  = EXP(H1x2_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_2 = EXP(H1x2_2 - _MAX_);
500702    +   _SUM_ = _SUM_ + H1x2_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_2 ;
500703    +   H1x2_3  = EXP(H1x2_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_3 = EXP(H1x2_3 - _MAX_);
500704    +   _SUM_ = _SUM_ + H1x2_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_3 ;
500705    +   H1x2_4  = EXP(H1x2_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_4 = EXP(H1x2_4 - _MAX_);
500706    +   _SUM_ = _SUM_ + H1x2_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_4 ;
500707    +   H1x2_5  = EXP(H1x2_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_5 = EXP(H1x2_5 - _MAX_);
500708    +   _SUM_ = _SUM_ + H1x2_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_5 ;
500709    +   H1x2_6  = EXP(H1x2_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_6 = EXP(H1x2_6 - _MAX_);
500710    +   _SUM_ = _SUM_ + H1x2_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_6 ;
500711    +   H1x2_7  = EXP(H1x2_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_7 = EXP(H1x2_7 - _MAX_);
500712    +   _SUM_ = _SUM_ + H1x2_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_7 ;
500713    +   H1x2_1  = H1x2_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 / _SUM_;
500714    +   H1x2_2  = H1x2_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 / _SUM_;
500715    +   H1x2_3  = H1x2_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 / _SUM_;
500716    +   H1x2_4  = H1x2_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 / _SUM_;
500717    +   H1x2_5  = H1x2_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 / _SUM_;
500718    +   H1x2_6  = H1x2_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 / _SUM_;
500719    +   H1x2_7  = H1x2_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_7 = H1x2_7 / _SUM_;
500720    +END;
MPRINT(EM_DIAGRAM):   END;
500721    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
500722    +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
500723    +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
500724    +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
500725    +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
500726    +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
500727    +   H1x2_6  = .;
MPRINT(EM_DIAGRAM):   H1x2_6 = .;
500728    +   H1x2_7  = .;
MPRINT(EM_DIAGRAM):   H1x2_7 = .;
500729    +END;
MPRINT(EM_DIAGRAM):   END;
500730    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
500731    +*** Writing the Node H1x3_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x3_ ;
500732    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
500733    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
500734    +   H1x3_1  =    -0.02577999703823 * S_AcceptedCmpTotal
500735    +          +     1.15166430232754 * S_Frq  +     0.14876168620543 * S_Income
500736    +          +    -0.18380736633059 * S_Mnt  +     0.50048252433262 *
500737    +        S_MntGoldProds  +    -0.33191625929347 * S_MntMeatProducts
500738    +          +     2.25334156596167 * S_NumCatalogPurchases
500739    +          +     1.11206221926547 * S_NumDealsPurchases
500740    +          +    -0.86546062057987 * S_NumWebVisitsMonth
500741    +          +    -0.98321051175326 * S_RFMstat  +     1.25274008829299 *
500742    +        S_Recency  +    -1.57916593034924 * S_Teenhome
500743    +          +    -2.06345344469395 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x3_1 = -0.02577999703823 * S_AcceptedCmpTotal + 1.15166430232754 *
S_Frq + 0.14876168620543 * S_Income + -0.18380736633059 * S_Mnt + 0.50048252433262 *
S_MntGoldProds + -0.33191625929347 * S_MntMeatProducts + 2.25334156596167 *
S_NumCatalogPurchases + 1.11206221926547 * S_NumDealsPurchases + -0.86546062057987 *
S_NumWebVisitsMonth + -0.98321051175326 * S_RFMstat + 1.25274008829299 * S_Recency +
-1.57916593034924 * S_Teenhome + -2.06345344469395 * S_Year_Birth ;
500744    +   H1x3_2  =    -1.17329843303132 * S_AcceptedCmpTotal
500745    +          +     1.78916673039241 * S_Frq  +    -0.84674133842717 * S_Income
500746    +          +     0.28484675606294 * S_Mnt  +     0.63187019772354 *
500747    +        S_MntGoldProds  +    -0.96245535082151 * S_MntMeatProducts
500748    +          +    -0.72830662589886 * S_NumCatalogPurchases
500749    +          +    -1.43194640925705 * S_NumDealsPurchases
500750    +          +     0.27875145672985 * S_NumWebVisitsMonth
500751    +          +    -2.03430995128807 * S_RFMstat  +    -0.52413738058555 *
500752    +        S_Recency  +    -1.01056905981073 * S_Teenhome
500753    +          +     0.00830584207402 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x3_2 = -1.17329843303132 * S_AcceptedCmpTotal + 1.78916673039241 *
S_Frq + -0.84674133842717 * S_Income + 0.28484675606294 * S_Mnt + 0.63187019772354 *
S_MntGoldProds + -0.96245535082151 * S_MntMeatProducts + -0.72830662589886 *
S_NumCatalogPurchases + -1.43194640925705 * S_NumDealsPurchases + 0.27875145672985 *
S_NumWebVisitsMonth + -2.03430995128807 * S_RFMstat + -0.52413738058555 * S_Recency +
-1.01056905981073 * S_Teenhome + 0.00830584207402 * S_Year_Birth ;
500754    +   H1x3_3  =    -1.51193899177395 * S_AcceptedCmpTotal
500755    +          +    -1.18260896990859 * S_Frq  +    -0.95243122164169 * S_Income
500756    +          +    -0.18792820239336 * S_Mnt  +    -0.06982279743147 *
500757    +        S_MntGoldProds  +    -1.14763783870634 * S_MntMeatProducts
500758    +          +    -0.29577972728188 * S_NumCatalogPurchases
500759    +          +    -0.09204036503823 * S_NumDealsPurchases
500760    +          +     1.09127760712522 * S_NumWebVisitsMonth
500761    +          +     0.67251355869104 * S_RFMstat  +     0.02406054275944 *
500762    +        S_Recency  +    -1.61269837976842 * S_Teenhome
500763    +          +     1.49645524045306 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x3_3 = -1.51193899177395 * S_AcceptedCmpTotal + -1.18260896990859 *
S_Frq + -0.95243122164169 * S_Income + -0.18792820239336 * S_Mnt + -0.06982279743147 *
S_MntGoldProds + -1.14763783870634 * S_MntMeatProducts + -0.29577972728188 *
S_NumCatalogPurchases + -0.09204036503823 * S_NumDealsPurchases + 1.09127760712522 *
S_NumWebVisitsMonth + 0.67251355869104 * S_RFMstat + 0.02406054275944 * S_Recency +
-1.61269837976842 * S_Teenhome + 1.49645524045306 * S_Year_Birth ;
500764    +   H1x3_4  =      0.0300271349218 * S_AcceptedCmpTotal
500765    +          +     0.92676949944979 * S_Frq  +    -0.43729227407729 * S_Income
500766    +          +     0.20149694045928 * S_Mnt  +    -0.72339995493149 *
500767    +        S_MntGoldProds  +     0.79792093415572 * S_MntMeatProducts
500768    +          +     0.74771164805463 * S_NumCatalogPurchases
500769    +          +     1.48674373289951 * S_NumDealsPurchases
500770    +          +    -0.43724934700095 * S_NumWebVisitsMonth
500771    +          +    -0.83295997374079 * S_RFMstat  +    -0.78737099754706 *
500772    +        S_Recency  +      1.5969237416548 * S_Teenhome
500773    +          +     -0.1539761100948 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x3_4 = 0.0300271349218 * S_AcceptedCmpTotal + 0.92676949944979 * S_Frq
+ -0.43729227407729 * S_Income + 0.20149694045928 * S_Mnt + -0.72339995493149 * S_MntGoldProds
+ 0.79792093415572 * S_MntMeatProducts + 0.74771164805463 * S_NumCatalogPurchases +
1.48674373289951 * S_NumDealsPurchases + -0.43724934700095 * S_NumWebVisitsMonth +
-0.83295997374079 * S_RFMstat + -0.78737099754706 * S_Recency + 1.5969237416548 * S_Teenhome +
-0.1539761100948 * S_Year_Birth ;
500774    +   H1x3_5  =     0.10850479066736 * S_AcceptedCmpTotal
500775    +          +    -0.69523987336905 * S_Frq  +    -1.03313846128362 * S_Income
500776    +          +     0.25026080496919 * S_Mnt  +    -0.97357883151863 *
500777    +        S_MntGoldProds  +    -0.61754054300662 * S_MntMeatProducts
500778    +          +     0.32607897654777 * S_NumCatalogPurchases
500779    +          +    -0.05989936582211 * S_NumDealsPurchases
500780    +          +     -0.8863628882594 * S_NumWebVisitsMonth
500781    +          +      1.1124532739734 * S_RFMstat  +    -0.38719199193265 *
500782    +        S_Recency  +      1.1633098880037 * S_Teenhome
500783    +          +    -1.12745203473451 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x3_5 = 0.10850479066736 * S_AcceptedCmpTotal + -0.69523987336905 *
S_Frq + -1.03313846128362 * S_Income + 0.25026080496919 * S_Mnt + -0.97357883151863 *
S_MntGoldProds + -0.61754054300662 * S_MntMeatProducts + 0.32607897654777 *
S_NumCatalogPurchases + -0.05989936582211 * S_NumDealsPurchases + -0.8863628882594 *
S_NumWebVisitsMonth + 1.1124532739734 * S_RFMstat + -0.38719199193265 * S_Recency +
1.1633098880037 * S_Teenhome + -1.12745203473451 * S_Year_Birth ;
500784    +   H1x3_6  =    -0.11588080697234 * S_AcceptedCmpTotal
500785    +          +     0.62360534366171 * S_Frq  +     0.05171263107667 * S_Income
500786    +          +    -2.09517372359855 * S_Mnt  +     1.82275072298905 *
500787    +        S_MntGoldProds  +    -0.20222711303443 * S_MntMeatProducts
500788    +          +    -0.32855091358254 * S_NumCatalogPurchases
500789    +          +    -0.04262624947945 * S_NumDealsPurchases
500790    +          +     0.34844893542429 * S_NumWebVisitsMonth
500791    +          +     1.02395415516187 * S_RFMstat  +     0.72163010188304 *
500792    +        S_Recency  +     0.25374922499465 * S_Teenhome
500793    +          +    -0.26482823596248 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x3_6 = -0.11588080697234 * S_AcceptedCmpTotal + 0.62360534366171 *
S_Frq + 0.05171263107667 * S_Income + -2.09517372359855 * S_Mnt + 1.82275072298905 *
S_MntGoldProds + -0.20222711303443 * S_MntMeatProducts + -0.32855091358254 *
S_NumCatalogPurchases + -0.04262624947945 * S_NumDealsPurchases + 0.34844893542429 *
S_NumWebVisitsMonth + 1.02395415516187 * S_RFMstat + 0.72163010188304 * S_Recency +
0.25374922499465 * S_Teenhome + -0.26482823596248 * S_Year_Birth ;
500794    +   H1x3_1  = H1x3_1  +     0.22579923464903 * Marital_StatusDivorced
500795    +          +    -1.19357131519861 * Marital_StatusMarried
500796    +          +     1.01104838285626 * Marital_StatusSingle
500797    +          +    -1.80955917142309 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + 0.22579923464903 * Marital_StatusDivorced +
-1.19357131519861 * Marital_StatusMarried + 1.01104838285626 * Marital_StatusSingle +
-1.80955917142309 * Marital_StatusTogether ;
500798    +   H1x3_2  = H1x3_2  +    -0.94571479472535 * Marital_StatusDivorced
500799    +          +     0.41518199668826 * Marital_StatusMarried
500800    +          +     1.03267293059069 * Marital_StatusSingle
500801    +          +    -0.66743874470855 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 + -0.94571479472535 * Marital_StatusDivorced +
0.41518199668826 * Marital_StatusMarried + 1.03267293059069 * Marital_StatusSingle +
-0.66743874470855 * Marital_StatusTogether ;
500802    +   H1x3_3  = H1x3_3  +    -0.15213926695809 * Marital_StatusDivorced
500803    +          +     0.56306179671807 * Marital_StatusMarried
500804    +          +    -1.20896369649342 * Marital_StatusSingle
500805    +          +      0.2381860290523 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_3 = H1x3_3 + -0.15213926695809 * Marital_StatusDivorced +
0.56306179671807 * Marital_StatusMarried + -1.20896369649342 * Marital_StatusSingle +
0.2381860290523 * Marital_StatusTogether ;
500806    +   H1x3_4  = H1x3_4  +      1.0736711015636 * Marital_StatusDivorced
500807    +          +    -2.56951757071166 * Marital_StatusMarried
500808    +          +     0.89024254219017 * Marital_StatusSingle
500809    +          +    -1.38303524163943 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_4 = H1x3_4 + 1.0736711015636 * Marital_StatusDivorced +
-2.56951757071166 * Marital_StatusMarried + 0.89024254219017 * Marital_StatusSingle +
-1.38303524163943 * Marital_StatusTogether ;
500810    +   H1x3_5  = H1x3_5  +     2.33108578518176 * Marital_StatusDivorced
500811    +          +    -0.82560993254767 * Marital_StatusMarried
500812    +          +     0.67892086377875 * Marital_StatusSingle
500813    +          +    -0.99872502550085 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_5 = H1x3_5 + 2.33108578518176 * Marital_StatusDivorced +
-0.82560993254767 * Marital_StatusMarried + 0.67892086377875 * Marital_StatusSingle +
-0.99872502550085 * Marital_StatusTogether ;
500814    +   H1x3_6  = H1x3_6  +    -1.46724646572707 * Marital_StatusDivorced
500815    +          +     1.62783448403167 * Marital_StatusMarried
500816    +          +     0.73020544049082 * Marital_StatusSingle
500817    +          +    -0.22473120319236 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_6 = H1x3_6 + -1.46724646572707 * Marital_StatusDivorced +
1.62783448403167 * Marital_StatusMarried + 0.73020544049082 * Marital_StatusSingle +
-0.22473120319236 * Marital_StatusTogether ;
500818    +   H1x3_1  =     0.67900930500511 + H1x3_1 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 0.67900930500511 + H1x3_1 ;
500819    +   H1x3_2  =     1.40060666199115 + H1x3_2 ;
MPRINT(EM_DIAGRAM):   H1x3_2 = 1.40060666199115 + H1x3_2 ;
500820    +   H1x3_3  =     0.29463847527526 + H1x3_3 ;
MPRINT(EM_DIAGRAM):   H1x3_3 = 0.29463847527526 + H1x3_3 ;
500821    +   H1x3_4  =    -0.04357875847579 + H1x3_4 ;
MPRINT(EM_DIAGRAM):   H1x3_4 = -0.04357875847579 + H1x3_4 ;
500822    +   H1x3_5  =      0.8612643972197 + H1x3_5 ;
MPRINT(EM_DIAGRAM):   H1x3_5 = 0.8612643972197 + H1x3_5 ;
500823    +   H1x3_6  =    -1.88380703730164 + H1x3_6 ;
MPRINT(EM_DIAGRAM):   H1x3_6 = -1.88380703730164 + H1x3_6 ;
500824    +   H1x3_7  = 0;
MPRINT(EM_DIAGRAM):   H1x3_7 = 0;
500825    +   _MAX_ = MAX (H1x3_1 , H1x3_2 , H1x3_3 , H1x3_4 , H1x3_5 , H1x3_6 , H1x3_7
500826    +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x3_1 , H1x3_2 , H1x3_3 , H1x3_4 , H1x3_5 , H1x3_6 ,
H1x3_7 );
500827    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
500828    +   H1x3_1  = EXP(H1x3_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_1 = EXP(H1x3_1 - _MAX_);
500829    +   _SUM_ = _SUM_ + H1x3_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_1 ;
500830    +   H1x3_2  = EXP(H1x3_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_2 = EXP(H1x3_2 - _MAX_);
500831    +   _SUM_ = _SUM_ + H1x3_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_2 ;
500832    +   H1x3_3  = EXP(H1x3_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_3 = EXP(H1x3_3 - _MAX_);
500833    +   _SUM_ = _SUM_ + H1x3_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_3 ;
500834    +   H1x3_4  = EXP(H1x3_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_4 = EXP(H1x3_4 - _MAX_);
500835    +   _SUM_ = _SUM_ + H1x3_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_4 ;
500836    +   H1x3_5  = EXP(H1x3_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_5 = EXP(H1x3_5 - _MAX_);
500837    +   _SUM_ = _SUM_ + H1x3_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_5 ;
500838    +   H1x3_6  = EXP(H1x3_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_6 = EXP(H1x3_6 - _MAX_);
500839    +   _SUM_ = _SUM_ + H1x3_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_6 ;
500840    +   H1x3_7  = EXP(H1x3_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_7 = EXP(H1x3_7 - _MAX_);
500841    +   _SUM_ = _SUM_ + H1x3_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_7 ;
500842    +   H1x3_1  = H1x3_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 / _SUM_;
500843    +   H1x3_2  = H1x3_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 / _SUM_;
500844    +   H1x3_3  = H1x3_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_3 = H1x3_3 / _SUM_;
500845    +   H1x3_4  = H1x3_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_4 = H1x3_4 / _SUM_;
500846    +   H1x3_5  = H1x3_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_5 = H1x3_5 / _SUM_;
500847    +   H1x3_6  = H1x3_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_6 = H1x3_6 / _SUM_;
500848    +   H1x3_7  = H1x3_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_7 = H1x3_7 / _SUM_;
500849    +END;
MPRINT(EM_DIAGRAM):   END;
500850    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
500851    +   H1x3_1  = .;
MPRINT(EM_DIAGRAM):   H1x3_1 = .;
500852    +   H1x3_2  = .;
MPRINT(EM_DIAGRAM):   H1x3_2 = .;
500853    +   H1x3_3  = .;
MPRINT(EM_DIAGRAM):   H1x3_3 = .;
500854    +   H1x3_4  = .;
MPRINT(EM_DIAGRAM):   H1x3_4 = .;
500855    +   H1x3_5  = .;
MPRINT(EM_DIAGRAM):   H1x3_5 = .;
500856    +   H1x3_6  = .;
MPRINT(EM_DIAGRAM):   H1x3_6 = .;
500857    +   H1x3_7  = .;
MPRINT(EM_DIAGRAM):   H1x3_7 = .;
500858    +END;
MPRINT(EM_DIAGRAM):   END;
500859    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
500860    +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
500861    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
500862    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
500863    +   H2x1_1  =    -0.95656178134917 * H1x1_1  +     1.37796748135739 * H1x1_2
500864    +          +     1.78756036673938 * H1x1_3  +     -0.8439546201475 * H1x1_4
500865    +          +    -1.03166099242293 * H1x1_5  +     0.52943703441707 * H1x1_6
500866    +          +     0.59795148287931 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -0.95656178134917 * H1x1_1 + 1.37796748135739 * H1x1_2 +
1.78756036673938 * H1x1_3 + -0.8439546201475 * H1x1_4 + -1.03166099242293 * H1x1_5 +
0.52943703441707 * H1x1_6 + 0.59795148287931 * H1x1_7 ;
500867    +   H2x1_2  =     1.91190798936382 * H1x1_1  +      -0.175949167006 * H1x1_2
500868    +          +    -0.20010954623703 * H1x1_3  +    -1.12168184279533 * H1x1_4
500869    +          +     0.35517508917627 * H1x1_5  +    -0.45519619936571 * H1x1_6
500870    +          +     1.08432924744886 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.91190798936382 * H1x1_1 + -0.175949167006 * H1x1_2 +
-0.20010954623703 * H1x1_3 + -1.12168184279533 * H1x1_4 + 0.35517508917627 * H1x1_5 +
-0.45519619936571 * H1x1_6 + 1.08432924744886 * H1x1_7 ;
500871    +   H2x1_3  =    -0.27236838695598 * H1x1_1  +     2.63546136140352 * H1x1_2
500872    +          +     1.80045649255758 * H1x1_3  +    -2.98830892061373 * H1x1_4
500873    +          +    -2.46045881589621 * H1x1_5  +     3.22396803549708 * H1x1_6
500874    +          +    -2.34667330067152 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -0.27236838695598 * H1x1_1 + 2.63546136140352 * H1x1_2 +
1.80045649255758 * H1x1_3 + -2.98830892061373 * H1x1_4 + -2.46045881589621 * H1x1_5 +
3.22396803549708 * H1x1_6 + -2.34667330067152 * H1x1_7 ;
500875    +   H2x1_4  =    -3.13210205675036 * H1x1_1  +     3.91450403558871 * H1x1_2
500876    +          +       4.933279615521 * H1x1_3  +    -2.59282514986249 * H1x1_4
500877    +          +    -2.03653671740081 * H1x1_5  +       4.064405082461 * H1x1_6
500878    +          +    -2.60526325926954 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = -3.13210205675036 * H1x1_1 + 3.91450403558871 * H1x1_2 +
4.933279615521 * H1x1_3 + -2.59282514986249 * H1x1_4 + -2.03653671740081 * H1x1_5 +
4.064405082461 * H1x1_6 + -2.60526325926954 * H1x1_7 ;
500879    +   H2x1_5  =    -0.63232084982839 * H1x1_1  +     0.33718773947492 * H1x1_2
500880    +          +     1.29296448887546 * H1x1_3  +     1.12889621039023 * H1x1_4
500881    +          +     2.18934908118237 * H1x1_5  +     0.87862098785892 * H1x1_6
500882    +          +     0.91832061749569 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = -0.63232084982839 * H1x1_1 + 0.33718773947492 * H1x1_2 +
1.29296448887546 * H1x1_3 + 1.12889621039023 * H1x1_4 + 2.18934908118237 * H1x1_5 +
0.87862098785892 * H1x1_6 + 0.91832061749569 * H1x1_7 ;
500883    +   H2x1_6  =     1.81043244413035 * H1x1_1  +      1.4777958998418 * H1x1_2
500884    +          +     2.53190667102186 * H1x1_3  +      0.4670787906688 * H1x1_4
500885    +          +    -0.00303664790933 * H1x1_5  +     0.21078497178324 * H1x1_6
500886    +          +     0.34792900678934 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = 1.81043244413035 * H1x1_1 + 1.4777958998418 * H1x1_2 +
2.53190667102186 * H1x1_3 + 0.4670787906688 * H1x1_4 + -0.00303664790933 * H1x1_5 +
0.21078497178324 * H1x1_6 + 0.34792900678934 * H1x1_7 ;
500887    +   H2x1_7  =      2.7297431384039 * H1x1_1  +    -1.30829815853208 * H1x1_2
500888    +          +    -0.74317234707744 * H1x1_3  +     0.02621795882884 * H1x1_4
500889    +          +     1.92641283593631 * H1x1_5  +     0.32006968332264 * H1x1_6
500890    +          +     0.87129000431049 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_7 = 2.7297431384039 * H1x1_1 + -1.30829815853208 * H1x1_2 +
-0.74317234707744 * H1x1_3 + 0.02621795882884 * H1x1_4 + 1.92641283593631 * H1x1_5 +
0.32006968332264 * H1x1_6 + 0.87129000431049 * H1x1_7 ;
500891    +   H2x1_1  = H2x1_1  +     -2.1938127062121 * H1x2_1
500892    +          +     0.21780666650637 * H1x2_2  +    -0.59195589593425 * H1x2_3
500893    +          +     0.38436245185742 * H1x2_4  +     0.62573807049092 * H1x2_5
500894    +          +    -0.61319348011502 * H1x2_6  +     0.47203210338015 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -2.1938127062121 * H1x2_1 + 0.21780666650637 * H1x2_2
+ -0.59195589593425 * H1x2_3 + 0.38436245185742 * H1x2_4 + 0.62573807049092 * H1x2_5 +
-0.61319348011502 * H1x2_6 + 0.47203210338015 * H1x2_7 ;
500895    +   H2x1_2  = H2x1_2  +    -0.26087177829438 * H1x2_1
500896    +          +      1.5809361009025 * H1x2_2  +     1.48270435958935 * H1x2_3
500897    +          +    -0.08943866833208 * H1x2_4  +     1.06601866330059 * H1x2_5
500898    +          +     0.65908674086625 * H1x2_6  +    -0.41138217409507 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + -0.26087177829438 * H1x2_1 + 1.5809361009025 * H1x2_2
+ 1.48270435958935 * H1x2_3 + -0.08943866833208 * H1x2_4 + 1.06601866330059 * H1x2_5 +
0.65908674086625 * H1x2_6 + -0.41138217409507 * H1x2_7 ;
500899    +   H2x1_3  = H2x1_3  +     0.38416253176813 * H1x2_1
500900    +          +    -0.18005172775158 * H1x2_2  +    -0.64477973121074 * H1x2_3
500901    +          +    -0.89326621554735 * H1x2_4  +     2.10808351608759 * H1x2_5
500902    +          +    -0.79701502540522 * H1x2_6  +     0.12564972289045 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + 0.38416253176813 * H1x2_1 + -0.18005172775158 * H1x2_2
+ -0.64477973121074 * H1x2_3 + -0.89326621554735 * H1x2_4 + 2.10808351608759 * H1x2_5 +
-0.79701502540522 * H1x2_6 + 0.12564972289045 * H1x2_7 ;
500903    +   H2x1_4  = H2x1_4  +     0.45607666975085 * H1x2_1
500904    +          +     0.66281103175614 * H1x2_2  +     -2.2042052849244 * H1x2_3
500905    +          +    -0.88338513539567 * H1x2_4  +      0.8444719755129 * H1x2_5
500906    +          +    -1.34699546034909 * H1x2_6  +    -0.92256004986079 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + 0.45607666975085 * H1x2_1 + 0.66281103175614 * H1x2_2
+ -2.2042052849244 * H1x2_3 + -0.88338513539567 * H1x2_4 + 0.8444719755129 * H1x2_5 +
-1.34699546034909 * H1x2_6 + -0.92256004986079 * H1x2_7 ;
500907    +   H2x1_5  = H2x1_5  +    -1.36966827041497 * H1x2_1
500908    +          +    -0.50899589190563 * H1x2_2  +    -1.06117764109728 * H1x2_3
500909    +          +    -0.15325014700397 * H1x2_4  +     0.77845029985607 * H1x2_5
500910    +          +     0.15661838238861 * H1x2_6  +    -1.46533717081069 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + -1.36966827041497 * H1x2_1 + -0.50899589190563 *
H1x2_2 + -1.06117764109728 * H1x2_3 + -0.15325014700397 * H1x2_4 + 0.77845029985607 * H1x2_5 +
0.15661838238861 * H1x2_6 + -1.46533717081069 * H1x2_7 ;
500911    +   H2x1_6  = H2x1_6  +    -1.39055542164691 * H1x2_1
500912    +          +    -0.58359991825266 * H1x2_2  +     1.77147289208184 * H1x2_3
500913    +          +    -0.35342441714416 * H1x2_4  +     0.33680205236698 * H1x2_5
500914    +          +    -0.30165800401137 * H1x2_6  +    -1.49792110543314 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 + -1.39055542164691 * H1x2_1 + -0.58359991825266 *
H1x2_2 + 1.77147289208184 * H1x2_3 + -0.35342441714416 * H1x2_4 + 0.33680205236698 * H1x2_5 +
-0.30165800401137 * H1x2_6 + -1.49792110543314 * H1x2_7 ;
500915    +   H2x1_7  = H2x1_7  +     0.20334369322498 * H1x2_1
500916    +          +    -0.56117684469389 * H1x2_2  +     1.27451151893116 * H1x2_3
500917    +          +    -0.39759641471947 * H1x2_4  +    -0.48424888739695 * H1x2_5
500918    +          +      0.5776601194378 * H1x2_6  +    -0.11343742791086 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_7 = H2x1_7 + 0.20334369322498 * H1x2_1 + -0.56117684469389 * H1x2_2
+ 1.27451151893116 * H1x2_3 + -0.39759641471947 * H1x2_4 + -0.48424888739695 * H1x2_5 +
0.5776601194378 * H1x2_6 + -0.11343742791086 * H1x2_7 ;
500919    +   H2x1_1  = H2x1_1  +    -0.06990804266869 * H1x3_1
500920    +          +     1.59179747886577 * H1x3_2  +     -0.3658160611529 * H1x3_3
500921    +          +    -0.16177521959465 * H1x3_4  +     0.23353693967535 * H1x3_5
500922    +          +     0.96164596504173 * H1x3_6  +    -0.49996390114171 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -0.06990804266869 * H1x3_1 + 1.59179747886577 * H1x3_2
+ -0.3658160611529 * H1x3_3 + -0.16177521959465 * H1x3_4 + 0.23353693967535 * H1x3_5 +
0.96164596504173 * H1x3_6 + -0.49996390114171 * H1x3_7 ;
500923    +   H2x1_2  = H2x1_2  +    -1.34775541988885 * H1x3_1
500924    +          +    -0.94185062200477 * H1x3_2  +     2.40002799790884 * H1x3_3
500925    +          +      1.3228491036493 * H1x3_4  +    -2.27212522601702 * H1x3_5
500926    +          +     0.22676652176348 * H1x3_6  +     0.96810343094913 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + -1.34775541988885 * H1x3_1 + -0.94185062200477 *
H1x3_2 + 2.40002799790884 * H1x3_3 + 1.3228491036493 * H1x3_4 + -2.27212522601702 * H1x3_5 +
0.22676652176348 * H1x3_6 + 0.96810343094913 * H1x3_7 ;
500927    +   H2x1_3  = H2x1_3  +    -0.68382731119741 * H1x3_1
500928    +          +    -0.90388882694092 * H1x3_2  +     0.51668393396039 * H1x3_3
500929    +          +     0.45716345972756 * H1x3_4  +    -0.49320936872992 * H1x3_5
500930    +          +     0.11919896076076 * H1x3_6  +    -0.14288859595709 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + -0.68382731119741 * H1x3_1 + -0.90388882694092 *
H1x3_2 + 0.51668393396039 * H1x3_3 + 0.45716345972756 * H1x3_4 + -0.49320936872992 * H1x3_5 +
0.11919896076076 * H1x3_6 + -0.14288859595709 * H1x3_7 ;
500931    +   H2x1_4  = H2x1_4  +    -0.68614915242276 * H1x3_1
500932    +          +     0.55556081003484 * H1x3_2  +     0.26058803548386 * H1x3_3
500933    +          +     0.44653924204999 * H1x3_4  +    -0.97704608173388 * H1x3_5
500934    +          +    -0.04291306465274 * H1x3_6  +    -0.70203538063923 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + -0.68614915242276 * H1x3_1 + 0.55556081003484 * H1x3_2
+ 0.26058803548386 * H1x3_3 + 0.44653924204999 * H1x3_4 + -0.97704608173388 * H1x3_5 +
-0.04291306465274 * H1x3_6 + -0.70203538063923 * H1x3_7 ;
500935    +   H2x1_5  = H2x1_5  +     0.58123765973845 * H1x3_1
500936    +          +     0.48842685419846 * H1x3_2  +     1.59951720976688 * H1x3_3
500937    +          +     0.39804915100427 * H1x3_4  +    -0.47629764750379 * H1x3_5
500938    +          +    -1.56133001160202 * H1x3_6  +     1.12232825939123 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + 0.58123765973845 * H1x3_1 + 0.48842685419846 * H1x3_2
+ 1.59951720976688 * H1x3_3 + 0.39804915100427 * H1x3_4 + -0.47629764750379 * H1x3_5 +
-1.56133001160202 * H1x3_6 + 1.12232825939123 * H1x3_7 ;
500939    +   H2x1_6  = H2x1_6  +    -0.35903530664944 * H1x3_1
500940    +          +    -1.21870303791063 * H1x3_2  +     -0.0358958118983 * H1x3_3
500941    +          +     1.71577031345204 * H1x3_4  +    -0.29111463093854 * H1x3_5
500942    +          +    -1.77383444462785 * H1x3_6  +    -0.93379473274206 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 + -0.35903530664944 * H1x3_1 + -1.21870303791063 *
H1x3_2 + -0.0358958118983 * H1x3_3 + 1.71577031345204 * H1x3_4 + -0.29111463093854 * H1x3_5 +
-1.77383444462785 * H1x3_6 + -0.93379473274206 * H1x3_7 ;
500943    +   H2x1_7  = H2x1_7  +     0.79356954272121 * H1x3_1
500944    +          +    -2.23344635077437 * H1x3_2  +     0.01459894574902 * H1x3_3
500945    +          +    -1.76556734796059 * H1x3_4  +     0.55679401249834 * H1x3_5
500946    +          +    -0.00867866380584 * H1x3_6  +     1.61311341603142 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x1_7 = H2x1_7 + 0.79356954272121 * H1x3_1 + -2.23344635077437 * H1x3_2
+ 0.01459894574902 * H1x3_3 + -1.76556734796059 * H1x3_4 + 0.55679401249834 * H1x3_5 +
-0.00867866380584 * H1x3_6 + 1.61311341603142 * H1x3_7 ;
500947    +   H2x1_1  =     0.45495097945606 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 0.45495097945606 + H2x1_1 ;
500948    +   H2x1_2  =    -0.00150409200191 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -0.00150409200191 + H2x1_2 ;
500949    +   H2x1_3  =     0.06766385008662 + H2x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = 0.06766385008662 + H2x1_3 ;
500950    +   H2x1_4  =    -0.15767488957433 + H2x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = -0.15767488957433 + H2x1_4 ;
500951    +   H2x1_5  =     3.00862692955968 + H2x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = 3.00862692955968 + H2x1_5 ;
500952    +   H2x1_6  =     1.46151036473661 + H2x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = 1.46151036473661 + H2x1_6 ;
500953    +   H2x1_7  =    -1.14350195577506 + H2x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_7 = -1.14350195577506 + H2x1_7 ;
500954    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
500955    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
500956    +   H2x1_1  = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
500957    +   H2x1_2  = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
500958    +   H2x1_3  = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_3 = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
500959    +   H2x1_4  = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_4 = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
500960    +   H2x1_5  = 1.0 / (1.0 + EXP(MIN( - H2x1_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_5 = 1.0 / (1.0 + EXP(MIN( - H2x1_5 , _EXP_BAR)));
500961    +   H2x1_6  = 1.0 / (1.0 + EXP(MIN( - H2x1_6 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_6 = 1.0 / (1.0 + EXP(MIN( - H2x1_6 , _EXP_BAR)));
500962    +   H2x1_7  = 1.0 / (1.0 + EXP(MIN( - H2x1_7 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_7 = 1.0 / (1.0 + EXP(MIN( - H2x1_7 , _EXP_BAR)));
500963    +END;
MPRINT(EM_DIAGRAM):   END;
500964    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
500965    +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
500966    +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
500967    +   H2x1_3  = .;
MPRINT(EM_DIAGRAM):   H2x1_3 = .;
500968    +   H2x1_4  = .;
MPRINT(EM_DIAGRAM):   H2x1_4 = .;
500969    +   H2x1_5  = .;
MPRINT(EM_DIAGRAM):   H2x1_5 = .;
500970    +   H2x1_6  = .;
MPRINT(EM_DIAGRAM):   H2x1_6 = .;
500971    +   H2x1_7  = .;
MPRINT(EM_DIAGRAM):   H2x1_7 = .;
500972    +END;
MPRINT(EM_DIAGRAM):   END;
500973    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
500974    +*** Writing the Node H2x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x2_ ;
500975    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
500976    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
500977    +   H2x2_1  =     -0.6098073780758 * H1x1_1  +    -0.36212005078054 * H1x1_2
500978    +          +     0.06355695656592 * H1x1_3  +     0.42978415336514 * H1x1_4
500979    +          +     1.73171637681701 * H1x1_5  +    -0.19499247120261 * H1x1_6
500980    +          +     0.74015079276747 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = -0.6098073780758 * H1x1_1 + -0.36212005078054 * H1x1_2 +
0.06355695656592 * H1x1_3 + 0.42978415336514 * H1x1_4 + 1.73171637681701 * H1x1_5 +
-0.19499247120261 * H1x1_6 + 0.74015079276747 * H1x1_7 ;
500981    +   H2x2_2  =     0.94291268086892 * H1x1_1  +    -0.57821086705904 * H1x1_2
500982    +          +     1.78126629448091 * H1x1_3  +    -1.19267460568433 * H1x1_4
500983    +          +    -0.23111688249081 * H1x1_5  +     0.48499259969431 * H1x1_6
500984    +          +    -1.56999349458897 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = 0.94291268086892 * H1x1_1 + -0.57821086705904 * H1x1_2 +
1.78126629448091 * H1x1_3 + -1.19267460568433 * H1x1_4 + -0.23111688249081 * H1x1_5 +
0.48499259969431 * H1x1_6 + -1.56999349458897 * H1x1_7 ;
500985    +   H2x2_3  =    -0.83943846185187 * H1x1_1  +     0.07494097035466 * H1x1_2
500986    +          +    -0.22510824455886 * H1x1_3  +     0.73702100581613 * H1x1_4
500987    +          +     0.84717434356729 * H1x1_5  +      1.1890648131813 * H1x1_6
500988    +          +    -0.69985750736721 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = -0.83943846185187 * H1x1_1 + 0.07494097035466 * H1x1_2 +
-0.22510824455886 * H1x1_3 + 0.73702100581613 * H1x1_4 + 0.84717434356729 * H1x1_5 +
1.1890648131813 * H1x1_6 + -0.69985750736721 * H1x1_7 ;
500989    +   H2x2_4  =     1.34186573490327 * H1x1_1  +     0.10476556384336 * H1x1_2
500990    +          +    -0.07073923857851 * H1x1_3  +     0.49865386241422 * H1x1_4
500991    +          +     1.20386613863792 * H1x1_5  +     0.13033316874168 * H1x1_6
500992    +          +     0.36095712511699 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = 1.34186573490327 * H1x1_1 + 0.10476556384336 * H1x1_2 +
-0.07073923857851 * H1x1_3 + 0.49865386241422 * H1x1_4 + 1.20386613863792 * H1x1_5 +
0.13033316874168 * H1x1_6 + 0.36095712511699 * H1x1_7 ;
500993    +   H2x2_5  =     0.18683850895928 * H1x1_1  +     0.14087720385762 * H1x1_2
500994    +          +     0.39026989292984 * H1x1_3  +     0.40839626117338 * H1x1_4
500995    +          +     0.17816964710989 * H1x1_5  +     0.64340089705428 * H1x1_6
500996    +          +    -1.27363167094111 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x2_5 = 0.18683850895928 * H1x1_1 + 0.14087720385762 * H1x1_2 +
0.39026989292984 * H1x1_3 + 0.40839626117338 * H1x1_4 + 0.17816964710989 * H1x1_5 +
0.64340089705428 * H1x1_6 + -1.27363167094111 * H1x1_7 ;
500997    +   H2x2_6  =     0.67895838050616 * H1x1_1  +     0.23794862788395 * H1x1_2
500998    +          +     1.47625698143483 * H1x1_3  +    -0.78874578699705 * H1x1_4
500999    +          +     0.11576168045678 * H1x1_5  +     0.44470888441177 * H1x1_6
501000    +          +     1.87629961612594 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x2_6 = 0.67895838050616 * H1x1_1 + 0.23794862788395 * H1x1_2 +
1.47625698143483 * H1x1_3 + -0.78874578699705 * H1x1_4 + 0.11576168045678 * H1x1_5 +
0.44470888441177 * H1x1_6 + 1.87629961612594 * H1x1_7 ;
501001    +   H2x2_7  =     0.68721855914482 * H1x1_1  +    -0.49548906059129 * H1x1_2
501002    +          +    -0.95479435424814 * H1x1_3  +    -0.39636357013457 * H1x1_4
501003    +          +     1.05784760554335 * H1x1_5  +     0.55302681608178 * H1x1_6
501004    +          +     0.46646041474723 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x2_7 = 0.68721855914482 * H1x1_1 + -0.49548906059129 * H1x1_2 +
-0.95479435424814 * H1x1_3 + -0.39636357013457 * H1x1_4 + 1.05784760554335 * H1x1_5 +
0.55302681608178 * H1x1_6 + 0.46646041474723 * H1x1_7 ;
501005    +   H2x2_1  = H2x2_1  +    -0.27434389803517 * H1x2_1
501006    +          +    -0.02074671287693 * H1x2_2  +    -1.51155778758517 * H1x2_3
501007    +          +    -1.19011584420542 * H1x2_4  +     -0.8540083688408 * H1x2_5
501008    +          +    -0.51772310023527 * H1x2_6  +     -0.0192399267251 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + -0.27434389803517 * H1x2_1 + -0.02074671287693 *
H1x2_2 + -1.51155778758517 * H1x2_3 + -1.19011584420542 * H1x2_4 + -0.8540083688408 * H1x2_5 +
-0.51772310023527 * H1x2_6 + -0.0192399267251 * H1x2_7 ;
501009    +   H2x2_2  = H2x2_2  +      -1.312525087163 * H1x2_1
501010    +          +     1.19175487774401 * H1x2_2  +    -1.10903746388023 * H1x2_3
501011    +          +      0.2627511726941 * H1x2_4  +    -1.49474705736936 * H1x2_5
501012    +          +     0.79354329450131 * H1x2_6  +    -0.48676510074213 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 + -1.312525087163 * H1x2_1 + 1.19175487774401 * H1x2_2 +
-1.10903746388023 * H1x2_3 + 0.2627511726941 * H1x2_4 + -1.49474705736936 * H1x2_5 +
0.79354329450131 * H1x2_6 + -0.48676510074213 * H1x2_7 ;
501013    +   H2x2_3  = H2x2_3  +     0.36715282986404 * H1x2_1
501014    +          +    -1.54691354420052 * H1x2_2  +     0.58334429972967 * H1x2_3
501015    +          +     3.32026929025218 * H1x2_4  +     0.08578287392048 * H1x2_5
501016    +          +     0.66591130534429 * H1x2_6  +     0.57559013181145 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = H2x2_3 + 0.36715282986404 * H1x2_1 + -1.54691354420052 * H1x2_2
+ 0.58334429972967 * H1x2_3 + 3.32026929025218 * H1x2_4 + 0.08578287392048 * H1x2_5 +
0.66591130534429 * H1x2_6 + 0.57559013181145 * H1x2_7 ;
501017    +   H2x2_4  = H2x2_4  +     1.28239253398808 * H1x2_1
501018    +          +     0.06662925242621 * H1x2_2  +     0.49967984015316 * H1x2_3
501019    +          +     0.65508978056742 * H1x2_4  +    -0.28141359636508 * H1x2_5
501020    +          +    -0.11787887977724 * H1x2_6  +     -0.6607325871171 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = H2x2_4 + 1.28239253398808 * H1x2_1 + 0.06662925242621 * H1x2_2
+ 0.49967984015316 * H1x2_3 + 0.65508978056742 * H1x2_4 + -0.28141359636508 * H1x2_5 +
-0.11787887977724 * H1x2_6 + -0.6607325871171 * H1x2_7 ;
501021    +   H2x2_5  = H2x2_5  +    -0.49511046906315 * H1x2_1
501022    +          +    -1.88759923025868 * H1x2_2  +    -0.99578805432186 * H1x2_3
501023    +          +     0.47300607025135 * H1x2_4  +     0.73725488149784 * H1x2_5
501024    +          +     0.56107930260304 * H1x2_6  +     -0.6618265083723 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x2_5 = H2x2_5 + -0.49511046906315 * H1x2_1 + -1.88759923025868 *
H1x2_2 + -0.99578805432186 * H1x2_3 + 0.47300607025135 * H1x2_4 + 0.73725488149784 * H1x2_5 +
0.56107930260304 * H1x2_6 + -0.6618265083723 * H1x2_7 ;
501025    +   H2x2_6  = H2x2_6  +    -0.56511063846684 * H1x2_1
501026    +          +      0.1682036403191 * H1x2_2  +     -0.7835100270482 * H1x2_3
501027    +          +    -0.05926261017522 * H1x2_4  +     0.28303530518131 * H1x2_5
501028    +          +     1.57291802723543 * H1x2_6  +    -1.59403373749444 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x2_6 = H2x2_6 + -0.56511063846684 * H1x2_1 + 0.1682036403191 * H1x2_2
+ -0.7835100270482 * H1x2_3 + -0.05926261017522 * H1x2_4 + 0.28303530518131 * H1x2_5 +
1.57291802723543 * H1x2_6 + -1.59403373749444 * H1x2_7 ;
501029    +   H2x2_7  = H2x2_7  +    -1.06397759700592 * H1x2_1
501030    +          +    -0.21206214531111 * H1x2_2  +     1.52697813698804 * H1x2_3
501031    +          +    -0.03132126915438 * H1x2_4  +     0.11910805580916 * H1x2_5
501032    +          +     1.03394382602734 * H1x2_6  +    -0.28139834412941 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x2_7 = H2x2_7 + -1.06397759700592 * H1x2_1 + -0.21206214531111 *
H1x2_2 + 1.52697813698804 * H1x2_3 + -0.03132126915438 * H1x2_4 + 0.11910805580916 * H1x2_5 +
1.03394382602734 * H1x2_6 + -0.28139834412941 * H1x2_7 ;
501033    +   H2x2_1  = H2x2_1  +    -1.18028681022903 * H1x3_1
501034    +          +    -0.56354962807969 * H1x3_2  +    -0.32071823564038 * H1x3_3
501035    +          +    -1.14868021494554 * H1x3_4  +     0.50491385711883 * H1x3_5
501036    +          +      0.3595638799915 * H1x3_6  +    -1.04253859844314 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + -1.18028681022903 * H1x3_1 + -0.56354962807969 *
H1x3_2 + -0.32071823564038 * H1x3_3 + -1.14868021494554 * H1x3_4 + 0.50491385711883 * H1x3_5 +
0.3595638799915 * H1x3_6 + -1.04253859844314 * H1x3_7 ;
501037    +   H2x2_2  = H2x2_2  +     1.10237781244945 * H1x3_1
501038    +          +     1.08171284637926 * H1x3_2  +     0.51153068676713 * H1x3_3
501039    +          +     -0.0106772728333 * H1x3_4  +     0.21777593557961 * H1x3_5
501040    +          +     0.10772516691825 * H1x3_6  +    -0.91346091248416 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 + 1.10237781244945 * H1x3_1 + 1.08171284637926 * H1x3_2
+ 0.51153068676713 * H1x3_3 + -0.0106772728333 * H1x3_4 + 0.21777593557961 * H1x3_5 +
0.10772516691825 * H1x3_6 + -0.91346091248416 * H1x3_7 ;
501041    +   H2x2_3  = H2x2_3  +    -0.71132206215234 * H1x3_1
501042    +          +     0.60006902706544 * H1x3_2  +      -0.471170925786 * H1x3_3
501043    +          +     0.07477379311969 * H1x3_4  +    -0.34034195429991 * H1x3_5
501044    +          +     1.63429052967629 * H1x3_6  +     0.13697740143754 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = H2x2_3 + -0.71132206215234 * H1x3_1 + 0.60006902706544 * H1x3_2
+ -0.471170925786 * H1x3_3 + 0.07477379311969 * H1x3_4 + -0.34034195429991 * H1x3_5 +
1.63429052967629 * H1x3_6 + 0.13697740143754 * H1x3_7 ;
501045    +   H2x2_4  = H2x2_4  +     0.76338339806809 * H1x3_1
501046    +          +     0.34600443003632 * H1x3_2  +    -0.60707577837208 * H1x3_3
501047    +          +     1.37001034857478 * H1x3_4  +    -1.24749521510775 * H1x3_5
501048    +          +    -1.45784349983015 * H1x3_6  +     0.12879195100917 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = H2x2_4 + 0.76338339806809 * H1x3_1 + 0.34600443003632 * H1x3_2
+ -0.60707577837208 * H1x3_3 + 1.37001034857478 * H1x3_4 + -1.24749521510775 * H1x3_5 +
-1.45784349983015 * H1x3_6 + 0.12879195100917 * H1x3_7 ;
501049    +   H2x2_5  = H2x2_5  +    -2.33392280718246 * H1x3_1
501050    +          +    -0.48123076018945 * H1x3_2  +    -0.76638732765894 * H1x3_3
501051    +          +    -1.76560846551209 * H1x3_4  +     1.62249911960883 * H1x3_5
501052    +          +    -0.31271093507345 * H1x3_6  +    -0.34748800562391 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x2_5 = H2x2_5 + -2.33392280718246 * H1x3_1 + -0.48123076018945 *
H1x3_2 + -0.76638732765894 * H1x3_3 + -1.76560846551209 * H1x3_4 + 1.62249911960883 * H1x3_5 +
-0.31271093507345 * H1x3_6 + -0.34748800562391 * H1x3_7 ;
501053    +   H2x2_6  = H2x2_6  +     0.53202536648562 * H1x3_1
501054    +          +     0.36605088046069 * H1x3_2  +     -1.7626773020241 * H1x3_3
501055    +          +     0.14681062331369 * H1x3_4  +     0.10699108516053 * H1x3_5
501056    +          +     2.24609371442936 * H1x3_6  +    -0.59076884674419 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x2_6 = H2x2_6 + 0.53202536648562 * H1x3_1 + 0.36605088046069 * H1x3_2
+ -1.7626773020241 * H1x3_3 + 0.14681062331369 * H1x3_4 + 0.10699108516053 * H1x3_5 +
2.24609371442936 * H1x3_6 + -0.59076884674419 * H1x3_7 ;
501057    +   H2x2_7  = H2x2_7  +    -0.05290923023086 * H1x3_1
501058    +          +    -0.30472796298249 * H1x3_2  +     1.89100111779461 * H1x3_3
501059    +          +     0.51110284119421 * H1x3_4  +     -0.2014479939412 * H1x3_5
501060    +          +     1.02507111515379 * H1x3_6  +    -0.63211120065975 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x2_7 = H2x2_7 + -0.05290923023086 * H1x3_1 + -0.30472796298249 *
H1x3_2 + 1.89100111779461 * H1x3_3 + 0.51110284119421 * H1x3_4 + -0.2014479939412 * H1x3_5 +
1.02507111515379 * H1x3_6 + -0.63211120065975 * H1x3_7 ;
501061    +   H2x2_1  =    -2.15023760884419 + H2x2_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = -2.15023760884419 + H2x2_1 ;
501062    +   H2x2_2  =    -1.03542203438136 + H2x2_2 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = -1.03542203438136 + H2x2_2 ;
501063    +   H2x2_3  =    -1.03202542428687 + H2x2_3 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = -1.03202542428687 + H2x2_3 ;
501064    +   H2x2_4  =     0.79380822765375 + H2x2_4 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = 0.79380822765375 + H2x2_4 ;
501065    +   H2x2_5  =    -0.37637686056399 + H2x2_5 ;
MPRINT(EM_DIAGRAM):   H2x2_5 = -0.37637686056399 + H2x2_5 ;
501066    +   H2x2_6  =    -0.12032383488066 + H2x2_6 ;
MPRINT(EM_DIAGRAM):   H2x2_6 = -0.12032383488066 + H2x2_6 ;
501067    +   H2x2_7  =     0.84544057856735 + H2x2_7 ;
MPRINT(EM_DIAGRAM):   H2x2_7 = 0.84544057856735 + H2x2_7 ;
501068    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
501069    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
501070    +   H2x2_1  = 1.0 / (1.0 + EXP(MIN( - H2x2_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x2_1 = 1.0 / (1.0 + EXP(MIN( - H2x2_1 , _EXP_BAR)));
501071    +   H2x2_2  = 1.0 / (1.0 + EXP(MIN( - H2x2_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x2_2 = 1.0 / (1.0 + EXP(MIN( - H2x2_2 , _EXP_BAR)));
501072    +   H2x2_3  = 1.0 / (1.0 + EXP(MIN( - H2x2_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x2_3 = 1.0 / (1.0 + EXP(MIN( - H2x2_3 , _EXP_BAR)));
501073    +   H2x2_4  = 1.0 / (1.0 + EXP(MIN( - H2x2_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x2_4 = 1.0 / (1.0 + EXP(MIN( - H2x2_4 , _EXP_BAR)));
501074    +   H2x2_5  = 1.0 / (1.0 + EXP(MIN( - H2x2_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x2_5 = 1.0 / (1.0 + EXP(MIN( - H2x2_5 , _EXP_BAR)));
501075    +   H2x2_6  = 1.0 / (1.0 + EXP(MIN( - H2x2_6 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x2_6 = 1.0 / (1.0 + EXP(MIN( - H2x2_6 , _EXP_BAR)));
501076    +   H2x2_7  = 1.0 / (1.0 + EXP(MIN( - H2x2_7 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x2_7 = 1.0 / (1.0 + EXP(MIN( - H2x2_7 , _EXP_BAR)));
501077    +END;
MPRINT(EM_DIAGRAM):   END;
501078    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
501079    +   H2x2_1  = .;
MPRINT(EM_DIAGRAM):   H2x2_1 = .;
501080    +   H2x2_2  = .;
MPRINT(EM_DIAGRAM):   H2x2_2 = .;
501081    +   H2x2_3  = .;
MPRINT(EM_DIAGRAM):   H2x2_3 = .;
501082    +   H2x2_4  = .;
MPRINT(EM_DIAGRAM):   H2x2_4 = .;
501083    +   H2x2_5  = .;
MPRINT(EM_DIAGRAM):   H2x2_5 = .;
501084    +   H2x2_6  = .;
MPRINT(EM_DIAGRAM):   H2x2_6 = .;
501085    +   H2x2_7  = .;
MPRINT(EM_DIAGRAM):   H2x2_7 = .;
501086    +END;
MPRINT(EM_DIAGRAM):   END;
501087    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
501088    +*** Writing the Node H3x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H3x1_ ;
501089    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
501090    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
501091    +   H3x1_1  =    -0.90634182479211 * H2x1_1  +    -0.09135307681655 * H2x1_2
501092    +          +     -1.1697186659188 * H2x1_3  +    -1.58089509972168 * H2x1_4
501093    +          +    -0.36298075828987 * H2x1_5  +     -0.1512750341775 * H2x1_6
501094    +          +    -0.95333639415651 * H2x1_7 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = -0.90634182479211 * H2x1_1 + -0.09135307681655 * H2x1_2 +
-1.1697186659188 * H2x1_3 + -1.58089509972168 * H2x1_4 + -0.36298075828987 * H2x1_5 +
-0.1512750341775 * H2x1_6 + -0.95333639415651 * H2x1_7 ;
501095    +   H3x1_2  =     0.55686365647701 * H2x1_1  +      1.5696753982442 * H2x1_2
501096    +          +    -0.32250855602992 * H2x1_3  +     0.19455668370146 * H2x1_4
501097    +          +     0.44351097086868 * H2x1_5  +     0.27358852097745 * H2x1_6
501098    +          +      0.4281879736941 * H2x1_7 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = 0.55686365647701 * H2x1_1 + 1.5696753982442 * H2x1_2 +
-0.32250855602992 * H2x1_3 + 0.19455668370146 * H2x1_4 + 0.44351097086868 * H2x1_5 +
0.27358852097745 * H2x1_6 + 0.4281879736941 * H2x1_7 ;
501099    +   H3x1_3  =     0.12633341645489 * H2x1_1  +    -0.66899185238366 * H2x1_2
501100    +          +    -2.56536949854372 * H2x1_3  +    -1.44702955697377 * H2x1_4
501101    +          +    -2.12726548877297 * H2x1_5  +     0.98860110338896 * H2x1_6
501102    +          +    -1.81290069415788 * H2x1_7 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = 0.12633341645489 * H2x1_1 + -0.66899185238366 * H2x1_2 +
-2.56536949854372 * H2x1_3 + -1.44702955697377 * H2x1_4 + -2.12726548877297 * H2x1_5 +
0.98860110338896 * H2x1_6 + -1.81290069415788 * H2x1_7 ;
501103    +   H3x1_4  =     -1.5244883189849 * H2x1_1  +     -0.8795974458787 * H2x1_2
501104    +          +    -0.90961705850703 * H2x1_3  +    -0.41256891447907 * H2x1_4
501105    +          +    -1.55913982799805 * H2x1_5  +     -0.9171280329681 * H2x1_6
501106    +          +    -0.70506147827449 * H2x1_7 ;
MPRINT(EM_DIAGRAM):   H3x1_4 = -1.5244883189849 * H2x1_1 + -0.8795974458787 * H2x1_2 +
-0.90961705850703 * H2x1_3 + -0.41256891447907 * H2x1_4 + -1.55913982799805 * H2x1_5 +
-0.9171280329681 * H2x1_6 + -0.70506147827449 * H2x1_7 ;
501107    +   H3x1_5  =     0.35217616707387 * H2x1_1  +    -1.16700891298034 * H2x1_2
501108    +          +      0.5371834401358 * H2x1_3  +     2.90147333104132 * H2x1_4
501109    +          +     0.77800792666349 * H2x1_5  +     0.78250225671691 * H2x1_6
501110    +          +    -0.59091463760785 * H2x1_7 ;
MPRINT(EM_DIAGRAM):   H3x1_5 = 0.35217616707387 * H2x1_1 + -1.16700891298034 * H2x1_2 +
0.5371834401358 * H2x1_3 + 2.90147333104132 * H2x1_4 + 0.77800792666349 * H2x1_5 +
0.78250225671691 * H2x1_6 + -0.59091463760785 * H2x1_7 ;
501111    +   H3x1_6  =    -0.44929632444778 * H2x1_1  +    -0.78833736143978 * H2x1_2
501112    +          +    -2.25458905584756 * H2x1_3  +    -1.94571232358746 * H2x1_4
501113    +          +     1.80055450278469 * H2x1_5  +     1.56927477052283 * H2x1_6
501114    +          +     0.56206783006188 * H2x1_7 ;
MPRINT(EM_DIAGRAM):   H3x1_6 = -0.44929632444778 * H2x1_1 + -0.78833736143978 * H2x1_2 +
-2.25458905584756 * H2x1_3 + -1.94571232358746 * H2x1_4 + 1.80055450278469 * H2x1_5 +
1.56927477052283 * H2x1_6 + 0.56206783006188 * H2x1_7 ;
501115    +   H3x1_1  = H3x1_1  +    -1.50414812258238 * H2x2_1
501116    +          +     2.71183535634521 * H2x2_2  +     0.92780495410356 * H2x2_3
501117    +          +     1.94819401410825 * H2x2_4  +     0.85505273909828 * H2x2_5
501118    +          +    -0.66540689026991 * H2x2_6  +    -0.32749055872531 * H2x2_7 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = H3x1_1 + -1.50414812258238 * H2x2_1 + 2.71183535634521 * H2x2_2
+ 0.92780495410356 * H2x2_3 + 1.94819401410825 * H2x2_4 + 0.85505273909828 * H2x2_5 +
-0.66540689026991 * H2x2_6 + -0.32749055872531 * H2x2_7 ;
501119    +   H3x1_2  = H3x1_2  +     0.55540470737424 * H2x2_1
501120    +          +    -1.17598972209898 * H2x2_2  +    -0.16619065810258 * H2x2_3
501121    +          +    -0.58955298520043 * H2x2_4  +     1.04029871696373 * H2x2_5
501122    +          +    -0.71430896416332 * H2x2_6  +    -1.57031773170963 * H2x2_7 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = H3x1_2 + 0.55540470737424 * H2x2_1 + -1.17598972209898 * H2x2_2
+ -0.16619065810258 * H2x2_3 + -0.58955298520043 * H2x2_4 + 1.04029871696373 * H2x2_5 +
-0.71430896416332 * H2x2_6 + -1.57031773170963 * H2x2_7 ;
501123    +   H3x1_3  = H3x1_3  +    -1.83796456414338 * H2x2_1
501124    +          +     1.49146311784803 * H2x2_2  +     0.05550989818961 * H2x2_3
501125    +          +    -0.08016006878981 * H2x2_4  +    -1.41328284571945 * H2x2_5
501126    +          +    -0.58920642563444 * H2x2_6  +     1.30950353008631 * H2x2_7 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = H3x1_3 + -1.83796456414338 * H2x2_1 + 1.49146311784803 * H2x2_2
+ 0.05550989818961 * H2x2_3 + -0.08016006878981 * H2x2_4 + -1.41328284571945 * H2x2_5 +
-0.58920642563444 * H2x2_6 + 1.30950353008631 * H2x2_7 ;
501127    +   H3x1_4  = H3x1_4  +     0.91384399854626 * H2x2_1
501128    +          +     -0.0377841204978 * H2x2_2  +     0.67274196472005 * H2x2_3
501129    +          +     0.76900504900432 * H2x2_4  +     0.71823373480501 * H2x2_5
501130    +          +    -0.04199535362683 * H2x2_6  +    -0.23501610033448 * H2x2_7 ;
MPRINT(EM_DIAGRAM):   H3x1_4 = H3x1_4 + 0.91384399854626 * H2x2_1 + -0.0377841204978 * H2x2_2
+ 0.67274196472005 * H2x2_3 + 0.76900504900432 * H2x2_4 + 0.71823373480501 * H2x2_5 +
-0.04199535362683 * H2x2_6 + -0.23501610033448 * H2x2_7 ;
501131    +   H3x1_5  = H3x1_5  +    -0.06769558303335 * H2x2_1
501132    +          +    -0.95662890382057 * H2x2_2  +    -0.56314830579562 * H2x2_3
501133    +          +    -0.17355939108245 * H2x2_4  +     0.49684441057813 * H2x2_5
501134    +          +    -0.27220440010331 * H2x2_6  +     1.13747855812864 * H2x2_7 ;
MPRINT(EM_DIAGRAM):   H3x1_5 = H3x1_5 + -0.06769558303335 * H2x2_1 + -0.95662890382057 *
H2x2_2 + -0.56314830579562 * H2x2_3 + -0.17355939108245 * H2x2_4 + 0.49684441057813 * H2x2_5 +
-0.27220440010331 * H2x2_6 + 1.13747855812864 * H2x2_7 ;
501135    +   H3x1_6  = H3x1_6  +    -0.58306849781773 * H2x2_1
501136    +          +    -1.96921645645113 * H2x2_2  +     0.09529919260054 * H2x2_3
501137    +          +     1.84321935581989 * H2x2_4  +     1.90621049776113 * H2x2_5
501138    +          +     0.22735961476244 * H2x2_6  +      1.7681869270915 * H2x2_7 ;
MPRINT(EM_DIAGRAM):   H3x1_6 = H3x1_6 + -0.58306849781773 * H2x2_1 + -1.96921645645113 *
H2x2_2 + 0.09529919260054 * H2x2_3 + 1.84321935581989 * H2x2_4 + 1.90621049776113 * H2x2_5 +
0.22735961476244 * H2x2_6 + 1.7681869270915 * H2x2_7 ;
501139    +   H3x1_1  =     0.84072071725045 + H3x1_1 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = 0.84072071725045 + H3x1_1 ;
501140    +   H3x1_2  =    -0.84331420680493 + H3x1_2 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = -0.84331420680493 + H3x1_2 ;
501141    +   H3x1_3  =    -1.15131491327763 + H3x1_3 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = -1.15131491327763 + H3x1_3 ;
501142    +   H3x1_4  =    -0.56905094914727 + H3x1_4 ;
MPRINT(EM_DIAGRAM):   H3x1_4 = -0.56905094914727 + H3x1_4 ;
501143    +   H3x1_5  =     1.29747074025762 + H3x1_5 ;
MPRINT(EM_DIAGRAM):   H3x1_5 = 1.29747074025762 + H3x1_5 ;
501144    +   H3x1_6  =     1.70771922783336 + H3x1_6 ;
MPRINT(EM_DIAGRAM):   H3x1_6 = 1.70771922783336 + H3x1_6 ;
501145    +   H3x1_7  = 0;
MPRINT(EM_DIAGRAM):   H3x1_7 = 0;
501146    +   _MAX_ = MAX (H3x1_1 , H3x1_2 , H3x1_3 , H3x1_4 , H3x1_5 , H3x1_6 , H3x1_7
501147    +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H3x1_1 , H3x1_2 , H3x1_3 , H3x1_4 , H3x1_5 , H3x1_6 ,
H3x1_7 );
501148    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
501149    +   H3x1_1  = EXP(H3x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_1 = EXP(H3x1_1 - _MAX_);
501150    +   _SUM_ = _SUM_ + H3x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_1 ;
501151    +   H3x1_2  = EXP(H3x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_2 = EXP(H3x1_2 - _MAX_);
501152    +   _SUM_ = _SUM_ + H3x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_2 ;
501153    +   H3x1_3  = EXP(H3x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_3 = EXP(H3x1_3 - _MAX_);
501154    +   _SUM_ = _SUM_ + H3x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_3 ;
501155    +   H3x1_4  = EXP(H3x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_4 = EXP(H3x1_4 - _MAX_);
501156    +   _SUM_ = _SUM_ + H3x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_4 ;
501157    +   H3x1_5  = EXP(H3x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_5 = EXP(H3x1_5 - _MAX_);
501158    +   _SUM_ = _SUM_ + H3x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_5 ;
501159    +   H3x1_6  = EXP(H3x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_6 = EXP(H3x1_6 - _MAX_);
501160    +   _SUM_ = _SUM_ + H3x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_6 ;
501161    +   H3x1_7  = EXP(H3x1_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_7 = EXP(H3x1_7 - _MAX_);
501162    +   _SUM_ = _SUM_ + H3x1_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_7 ;
501163    +   H3x1_1  = H3x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_1 = H3x1_1 / _SUM_;
501164    +   H3x1_2  = H3x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_2 = H3x1_2 / _SUM_;
501165    +   H3x1_3  = H3x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_3 = H3x1_3 / _SUM_;
501166    +   H3x1_4  = H3x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_4 = H3x1_4 / _SUM_;
501167    +   H3x1_5  = H3x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_5 = H3x1_5 / _SUM_;
501168    +   H3x1_6  = H3x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_6 = H3x1_6 / _SUM_;
501169    +   H3x1_7  = H3x1_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_7 = H3x1_7 / _SUM_;
501170    +END;
MPRINT(EM_DIAGRAM):   END;
501171    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
501172    +   H3x1_1  = .;
MPRINT(EM_DIAGRAM):   H3x1_1 = .;
501173    +   H3x1_2  = .;
MPRINT(EM_DIAGRAM):   H3x1_2 = .;
501174    +   H3x1_3  = .;
MPRINT(EM_DIAGRAM):   H3x1_3 = .;
501175    +   H3x1_4  = .;
MPRINT(EM_DIAGRAM):   H3x1_4 = .;
501176    +   H3x1_5  = .;
MPRINT(EM_DIAGRAM):   H3x1_5 = .;
501177    +   H3x1_6  = .;
MPRINT(EM_DIAGRAM):   H3x1_6 = .;
501178    +   H3x1_7  = .;
MPRINT(EM_DIAGRAM):   H3x1_7 = .;
501179    +END;
MPRINT(EM_DIAGRAM):   END;
501180    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
501181    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
501182    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
501183    +
501184    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
501185    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
501186    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
501187    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
501188    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
501189    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
501190    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
501191    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
501192    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
501193    +end;
MPRINT(EM_DIAGRAM):   end;
501194    +else do;
MPRINT(EM_DIAGRAM):   else do;
501195    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
501196    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
501197    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
501198    +   end;
MPRINT(EM_DIAGRAM):   end;
501199    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
501200    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
501201    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
501202    +   end;
MPRINT(EM_DIAGRAM):   end;
501203    +   else do;
MPRINT(EM_DIAGRAM):   else do;
501204    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
501205    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
501206    +   end;
MPRINT(EM_DIAGRAM):   end;
501207    +end;
MPRINT(EM_DIAGRAM):   end;
501208    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
501209    +   P_DepVar1  =    -10.5125772193731 * H3x1_1  +     0.35682915649078 * H3x1_2
501210    +          +    -0.04349805114958 * H3x1_3  +    -0.04491244667008 * H3x1_4
501211    +          +     34.5477259369591 * H3x1_5  +    -16.5063579573423 * H3x1_6
501212    +          +     0.83421675743806 * H3x1_7 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -10.5125772193731 * H3x1_1 + 0.35682915649078 * H3x1_2 +
-0.04349805114958 * H3x1_3 + -0.04491244667008 * H3x1_4 + 34.5477259369591 * H3x1_5 +
-16.5063579573423 * H3x1_6 + 0.83421675743806 * H3x1_7 ;
501213    +   P_DepVar1  =     6.85864742009761 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 6.85864742009761 + P_DepVar1 ;
501214    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
501215    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
501216    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
501217    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
501218    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
501219    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
501220    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
501221    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
501222    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
501223    +END;
MPRINT(EM_DIAGRAM):   END;
501224    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
501225    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
501226    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
501227    +END;
MPRINT(EM_DIAGRAM):   END;
501228    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
501229    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
501230    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
501231    +END;
MPRINT(EM_DIAGRAM):   END;
501232    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
501233    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
501234    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
501235    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
501236    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
501237    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
501238    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
501239    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
501240    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
501241    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
501242    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
501243    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
501244    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
501245    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
501246    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
501247    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
501248    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
501249    +END;
MPRINT(EM_DIAGRAM):   END;
501250    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
501251    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
501252    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
501253    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
501254     run;
 
NOTE: DATA STEP view saved on file EMWS8.AUTONEURAL43_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.META2_VALIDATE.VIEW used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
501255     quit;
501256     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
501257     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
501258     * AutoNeural43: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * AutoNeural43: Computing metadata for TRAIN data;
501259     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
 
NOTE: View EMWS8.AUTONEURAL43_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural43\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS8.AutoNeural43_TRAIN out=_tempAdvisor
noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS8.AutoNeural43_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS8.AutoNeural43_TRAIN out=WORK.M360H0J4
noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M360H0J4;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20
INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M360H0J4(keep=name type length label format formatl
formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then format = strip(format)!!strip(put(formatl,
best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd,
best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then informat =
strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl,
best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M360H0J4;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M360H0J4;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M085RZG3 NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M085RZG3;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M085RZG3;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2OC9D21(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M085RZG3;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M085RZG3;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32
FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M085RZG3;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN"
"MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO"
"QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" "YEAR" "YYMMDD" "YYMON"
"YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD"
"EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" ))
formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype =
"DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" ))
formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT"
"NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB"
"SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType =
"DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then
level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA',
'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W',
'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_
('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL',
'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT',
'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M085RZG3;
MPRINT(EMADVISECOLUMNS):   set WORK.M085RZG3;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL=
"Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY=
"Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower limit" UPPERLIMIT=
"Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL=
"Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Meta2_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Meta2_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural43_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT
LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "AutoNeural43";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("P_DEPVAR1") creator = "AutoNeural43";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR1") creator = "AutoNeural43";
MPRINT(EM_DIAGRAM):   when("P_DEPVAR0") creator = "AutoNeural43";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR0") creator = "AutoNeural43";
MPRINT(EM_DIAGRAM):   when("F_DEPVAR") creator = "AutoNeural43";
MPRINT(EM_DIAGRAM):   when("I_DEPVAR") creator = "AutoNeural43";
MPRINT(EM_DIAGRAM):   when("U_DEPVAR") creator = "AutoNeural43";
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "AutoNeural43";
MPRINT(EM_DIAGRAM):   when("DEPVAR") model = "AutoNeural43";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * AutoNeural43: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
501571     data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
501572     set EMWS8.AutoNeural43_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural43_EMINFO;
501573     where DATA='AutoNeural43' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='AutoNeural43' and KEY ^in('DECDATA', 'DECMETA',
'IMPORTANCE', 'MODEL');
501574     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.AUTONEURAL43_EMINFO.
      WHERE (DATA='AutoNeural43') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
501575     data EMWS8.AutoNeural43_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural43_EMINFO;
501576     length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
501577     input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
501578     cards;
MPRINT(EM_DIAGRAM):   cards;
 
NOTE: The data set EMWS8.AUTONEURAL43_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   run;
501582     run;
501583     data EMWS8.AutoNeural43_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural43_EMINFO;
501584     set EMWS8.AutoNeural43_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural43_EMINFO WORK.MODELTEMP_INFO;
501585     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set EMWS8.AUTONEURAL43_EMINFO.
NOTE: There were 0 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS8.AUTONEURAL43_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
501586     proc sort data = EMWS8.AutoNeural43_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.AutoNeural43_EMINFO NOTHREADS;
501587     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
501588     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set EMWS8.AUTONEURAL43_EMINFO.
NOTE: The data set EMWS8.AUTONEURAL43_EMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
501589     proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
501590     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
501591     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.FIMPORT_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 1 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
501592     proc sort data = EMWS8.AutoNeural43_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS8.AutoNeural43_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
501593     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
501594     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 3 observations read from the data set EMWS8.AUTONEURAL43_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
501595     data EMWS8.AutoNeural43_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural43_EMINFO;
501596     merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
501597     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
501598     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 3 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS8.AUTONEURAL43_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
501599     proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
501600     delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
501601     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
501602     quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
NOTE: View EMWS8.AUTONEURAL43_TRAIN.VIEW used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
NOTE: View EMWS8.AUTONEURAL43_VALIDATE.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "28. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "19.50 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Report Log
Date:                28. April 2016
Time:                19.50 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O0Z8FVWK
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural43\EMREPORT.out" encoding="UTF-8"
NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O0Z8FVWK new;
MPRINT(EM_DIAGRAM):   run;
501626     proc sort data=EMWS8.AutoNeural43_OUTFIT nodupkey;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS8.AutoNeural43_OUTFIT nodupkey;
501627     by _NAME_;
MPRINT(EM_DIAGRAM):   by _NAME_;
501628     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set EMWS8.AUTONEURAL43_OUTFIT.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set EMWS8.AUTONEURAL43_OUTFIT has 2 observations and 36 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
501629     data EMWS8.AutoNeural43_EMOUTFIT(rename=(_NAME_=TARGET));
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural43_EMOUTFIT(rename=(_NAME_=TARGET));
501630     set EMWS8.AutoNeural43_OUTFIT(where=(_NAME_ eq 'OVERALL'));
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural43_OUTFIT(where=(_NAME_ eq 'OVERALL'));
501631     label _NAME_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _NAME_ = "Target";
501632     if _NAME_='OVERALL' then _NAME_='DepVar';
MPRINT(EM_DIAGRAM):   if _NAME_='OVERALL' then _NAME_='DepVar';
501633     drop _ITER_;
MPRINT(EM_DIAGRAM):   drop _ITER_;
501634     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.AUTONEURAL43_OUTFIT.
      WHERE _NAME_='OVERALL';
NOTE: The data set EMWS8.AUTONEURAL43_EMOUTFIT has 1 observations and 35 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
501635     data EMWS8.AutoNeural43_EMOUTFIT;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural43_EMOUTFIT;
501636     set EMWS8.AutoNeural43_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural43_EMOUTFIT;
501637     length TargetLabel $200;
MPRINT(EM_DIAGRAM):   length TargetLabel $200;
501638     label targetLabel = "%sysfunc(sasmsg(sashelp.dmine, meta_targetlabel_vlabel,
501638   ! NOQUOTE))";
MPRINT(EM_DIAGRAM):   label targetLabel = "Target Label";
501639     if upcase(TARGET) eq "DEPVAR" then TargetLabel = 'DepVar';
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TargetLabel = 'DepVar';
501640     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.AUTONEURAL43_EMOUTFIT.
NOTE: The data set EMWS8.AUTONEURAL43_EMOUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
501641     proc sort data=EMWS8.AutoNeural43_EMREPORTFIT nothreads;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS8.AutoNeural43_EMREPORTFIT nothreads;
501642     by TARGET;
MPRINT(EM_DIAGRAM):   by TARGET;
501643     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 21 observations read from the data set EMWS8.AUTONEURAL43_EMREPORTFIT.
NOTE: The data set EMWS8.AUTONEURAL43_EMREPORTFIT has 21 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
501644     %let _EMwarndup = 0;
501645     %let _EMtargetdup =;
501646     %let _EMASEtargetdup =;
501647     data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
501648     set EMWS8.AutoNeural43_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural43_EMOUTFIT;
501649     if .<_ASE_<0.000001 then do;
MPRINT(EM_DIAGRAM):   if .<_ASE_<0.000001 then do;
501650     call symput('_EMwarndup', '1');
MPRINT(EM_DIAGRAM):   call symput('_EMwarndup', '1');
501651     call symput('_EMtargetdup', target);
MPRINT(EM_DIAGRAM):   call symput('_EMtargetdup', target);
501652     call symput('_EMASEtargetdup', put(_ASE_, best.));
MPRINT(EM_DIAGRAM):   call symput('_EMASEtargetdup', put(_ASE_, best.));
501653     end;
MPRINT(EM_DIAGRAM):   end;
501654     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.AUTONEURAL43_EMOUTFIT.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
501655     proc sort data=EMWS8.Meta2_CMeta_TRAIN out=WORK.SUBSETINMETA;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS8.Meta2_CMeta_TRAIN out=WORK.SUBSETINMETA;
501656     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
501657     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 36 observations read from the data set EMWS8.META2_CMETA_TRAIN.
NOTE: The data set WORK.SUBSETINMETA has 36 observations and 20 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
501658     proc sort data=EMWS8.AutoNeural43_VariableSet out=WORK.SUBSETVARSET(keep=NAME
501658   ! REPORT);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural43_VariableSet
out=WORK.SUBSETVARSET(keep=NAME REPORT);
501659     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
501660     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set EMWS8.AUTONEURAL43_VARIABLESET.
NOTE: The data set WORK.SUBSETVARSET has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
501661     data WORK.ASSESS_META;
MPRINT(EM_DIAGRAM):   data WORK.ASSESS_META;
501662     merge WORK.SUBSETINMETA WORK.SUBSETVARSET;
MPRINT(EM_DIAGRAM):   merge WORK.SUBSETINMETA WORK.SUBSETVARSET;
501663     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
501664     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 36 observations read from the data set WORK.SUBSETINMETA.
NOTE: There were 34 observations read from the data set WORK.SUBSETVARSET.
NOTE: The data set WORK.ASSESS_META has 36 observations and 20 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
501665     data EM_temp_assessMeta;
MPRINT(EM_DIAGRAM):    data EM_temp_assessMeta;
501666     set EMWS8.AutoNeural43_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural43_CMeta_TRAIN;
501667     where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION', 'ASSESS', 'COST')
501667   ! ;
MPRINT(EM_DIAGRAM):   where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION',
'ASSESS', 'COST');
501668     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set EMWS8.AUTONEURAL43_CMETA_TRAIN.
      WHERE role in ('ASSESS', 'CLASSIFICATION', 'COST', 'DECISION', 'PREDICT', 'RESIDUAL');
NOTE: The data set WORK.EM_TEMP_ASSESSMETA has 8 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
501669     data EM_temp_assessdata;
MPRINT(EM_DIAGRAM):    data EM_temp_assessdata;
501670     set EMWS8.AutoNeural43_TRAIN(keep=
501671     F_DepVar
501672     I_DepVar
501673     P_DepVar0
501674     P_DepVar1
501675     R_DepVar0
501676     R_DepVar1
501677     U_DepVar
501678     _WARN_
501679     DepVar
501680     );
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural43_TRAIN(keep= F_DepVar I_DepVar P_DepVar0 P_DepVar1
R_DepVar0 R_DepVar1 U_DepVar _WARN_ DepVar );
501681     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2374 observations read from the data set EMWS8.PART_TRAIN.
NOTE: View EMWS8.AUTONEURAL43_TRAIN.VIEW used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
 
NOTE: There were 2374 observations read from the data set EMWS8.META2_TRAIN.
NOTE: There were 2374 observations read from the data set EMWS8.AUTONEURAL43_TRAIN.
NOTE: The data set WORK.EM_TEMP_ASSESSDATA has 2374 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.07 seconds
      cpu time            0.07 seconds
 
 
MPRINT(EM_DIAGRAM):    proc freq data=EM_temp_assessdata noprint;
MPRINT(EM_DIAGRAM):   table I_DepVar*F_DepVar / out = WORK.AutoNeural43_18UWZV6 nocol norow
outpct;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.AutoNeural43_18UWZV6;
MPRINT(EM_DIAGRAM):   length _TYPE_ $10 DATAROLE TARGET $32 TARGETLABEL $200 FROM INTO $32
CORRECTTEXT $40 ;
MPRINT(EM_DIAGRAM):   label _TYPE_ = "Outcome Type";
MPRINT(EM_DIAGRAM):   label DATAROLE = "Data Role";
MPRINT(EM_DIAGRAM):   label TARGET = "Target Variable";
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   label FROM = "Target";
MPRINT(EM_DIAGRAM):   label INTO = "Outcome";
MPRINT(EM_DIAGRAM):   label PCT_ROW = "Target Percentage";
MPRINT(EM_DIAGRAM):   label PCT_COL = "Outcome Percentage";
MPRINT(EM_DIAGRAM):   label COUNT = "Frequency Count";
MPRINT(EM_DIAGRAM):   label PERCENT = "Total Percentage";
MPRINT(EM_DIAGRAM):   label CORRECTTEXT = "Correct Text";
MPRINT(EM_DIAGRAM):   label CORRECT = "Correct";
MPRINT(EM_DIAGRAM):   set WORK.AutoNeural43_18UWZV6(rename=(F_DepVar=FROM I_DepVar=INTO));
MPRINT(EM_DIAGRAM):   retain _TYPE_ 'PREDICTION' DATAROLE "TRAIN" TARGET "DepVar";
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TARGETLABEL = 'DepVar';
MPRINT(EM_DIAGRAM):   if FROM eq INTO then do;
MPRINT(EM_DIAGRAM):   CORRECT = 0;
MPRINT(EM_DIAGRAM):   CORRECTTEXT="Correct";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   CORRECT = 1;
MPRINT(EM_DIAGRAM):   CORRECTTEXT="Incorrect";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural43_EMCLASSIFICATION;
MPRINT(EM_DIAGRAM):   set WORK.AutoNeural43_18UWZV6;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   set WORK.AutoNeural43_18UWZV6;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.MISCREPORT(drop=INTO FROM _TYPE_);
MPRINT(EM_DIAGRAM):   set WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   length MISC $12;
MPRINT(EM_DIAGRAM):   if FROM='1' and INTO='1' then MISC='TRUEEVENT';
MPRINT(EM_DIAGRAM):   else if FROM='1' and INTO ne '1' then MISC='FALSENEVENT';
MPRINT(EM_DIAGRAM):   else if FROM ne '1' and INTO='1' then MISC='FALSEEVENT';
MPRINT(EM_DIAGRAM):   else if FROM ne'1' and INTO ne '1' then MISC='TRUENEVENT';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.MISCREPORT nothreads;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc summary data=WORK.MISCREPORT NWAY;
MPRINT(EM_DIAGRAM):   output out=WORK.MISCCOUNT(drop=_FREQ_ _TYPE_) SUM=COUNT;
MPRINT(EM_DIAGRAM):   CLASS MISC;
MPRINT(EM_DIAGRAM):   VAR COUNT;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc transpose data=WORK.MISCCOUNT out=WORK.MISCREPORT(drop=_NAME_
_LABEL_);
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   ID MISC;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural43_EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   length TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TARGETLABEL = 'DepVar';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data ASSESS_REPORTMETA;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural43_VariableSet;
MPRINT(EM_DIAGRAM):   where REPORT='Y';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename temp catalog 'sashelp.emassmt.em_assess.source';
MPRINT(EM_DIAGRAM):   filename temp;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural43_DepVar_DM;
MPRINT(EM_DIAGRAM):   where _TYPE_="TARGET";
MPRINT(EM_DIAGRAM):   call symput('ASSMT_EVENT', strip(event));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):
MPRINT(EM_ASSESS):   data _ea_tmpdata;
MPRINT(EM_ASSESS):   set EM_temp_assessdata;
MPRINT(EM_ASSESS):   _tmpfreqvar_=1;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_CHECKEMSETINIT):   DATA _NULL_;
MPRINT(EM_CHECKEMSETINIT):   EM_SETINIT = 'N';
MPRINT(EM_CHECKEMSETINIT):   IF SYSPROD('PRODNUM50') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM448') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM102') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM103') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   CALL SYMPUT('EM_SETINIT', EM_SETINIT);
MPRINT(EM_CHECKEMSETINIT):   RUN;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Reading in reporting data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET ASSESS_REPORTMETA END = EOF;
MPRINT(EM_ASSESS):   IF TYPE = "C" OR UPCASE (LEVEL) IN ("NOMINAL", "BINARY" , "ORDINAL") THEN
DO;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) NE UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   NUMCTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTC" || LEFT (PUT (NUMCTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "C");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF UPCASE(NAME) NE UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   NUMNTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTN" || LEFT (PUT (NUMNTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMNTOREPORT", NUMNTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMCTOREPORT", NUMCTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMTOREPORT", SUM (NUMNTOREPORT, NUMCTOREPORT));
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   PROC DMDB DATA = _ea_tmpdata VAROUT = VAROUT DMDBCAT = _D CLASSOUT =
_ASSMT_CLASSOUT;
MPRINT(EM_ASSESS):   CLASS F_DepVar ;
 
MPRINT(EM_ASSESS):   VAR P_DepVar1 _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_;
MPRINT(EM_ASSESS):   RUN ;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   PROC SORT DATA = _ASSMT_CLASSOUT;
MPRINT(EM_ASSESS):   BY NAME;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _auxeventname (keep = __event__) ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ...FLAG0_1 = ..... TARGET IS 0, 1 & EVENT = 1;
 
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   length __event__ $ 32;
MPRINT(EM_ASSESS):   RETAIN FLAG0_1 1 NUM1 . NUM0 . __event__ "_missing_" ;
 
MPRINT(EM_ASSESS):   SET _ASSMT_CLASSOUT END = EOF;
MPRINT(EM_ASSESS):   BY NAME;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ....... LEVEL = BINARY OR NOMINAL OR ORDINAL;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   IF UPCASE(NAME) = UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   CUMFREQ + FREQUENCY;
MPRINT(EM_ASSESS):   IF LEVEL NE "." THEN DO;
MPRINT(EM_ASSESS):   N1 + 1;
MPRINT(EM_ASSESS):   IF (NRAW NE 0 AND NRAW NE 1) OR TYPE NE "N" OR "" > " " THEN FLAG0_1 = 0;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ......................... IF EVENT NE BLANK;
MPRINT(EM_ASSESS):   * ....................LEVEL IS CHAR VAR ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   IF UPCASE("1") = UPCASE(LEVEL) THEN DO;
MPRINT(EM_ASSESS):   NUM1 = FREQUENCY;
MPRINT(EM_ASSESS):   IF TYPE = "C" THEN do;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("EVENTVALUERAW", CRAW );
MPRINT(EM_ASSESS):   __event__ = craw;
MPRINT(EM_ASSESS):   end;
MPRINT(EM_ASSESS):   ELSE do;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("EVENTVALUERAW", NRAW );
MPRINT(EM_ASSESS):   __event__ = nraw;
MPRINT(EM_ASSESS):   end;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF LAST.NAME THEN DO;
 
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * .............. IN NOMINAL CASE, NEED TO GROUP ALL '0' ;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   NUM0 = SUM (CUMFREQ, - NUM1);
MPRINT(EM_ASSESS):   IF NUM0 < 0 THEN NUM0 = 0;
MPRINT(EM_ASSESS):   IF NUM1 = . THEN NUM1 = 0;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUM0", NUM0 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUM1", NUM1);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PNUM1", NUM1 / CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PNUM0", (CUMFREQ - NUM1) / CUMFREQ);
MPRINT(EM_ASSESS):   IF TYPE = "C" THEN DO;
MPRINT(EM_ASSESS):   FLAG0_1 = 0;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "C" );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF "" = " " THEN DO;
MPRINT(EM_ASSESS):   IF "1" NE "1" THEN FLAG0_1 = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "N" );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ................... IF TYPE = N;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("FLAG0_1", FLAG0_1 );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..................IF LAST.NAME ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ...............IF LEVEL NE '.' ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * .............. IF NAME = TARGET;
MPRINT(EM_ASSESS):   ELSE IF "" > " " AND UPCASE(NAME) = UPCASE("") THEN DO;
MPRINT(EM_ASSESS):   NUMDECISIONS + 1;
MPRINT(EM_ASSESS):   LEVEL = TRANSLATE (LEVEL, "_", "'", "_", '"');
MPRINT(EM_ASSESS):   CALL SYMPUTX ("D_LABEL" || LEFT (PUT (NUMDECISIONS, 3.)), LEVEL );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..................... ELSE IF UPCASE;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   output _auxeventname;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMOBS", CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMDECISIONS", NUMDECISIONS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET VAROUT END = EOF;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) = UPCASE ("P_DepVar1") THEN DO;
MPRINT(EM_ASSESS):   IF N = 0 THEN DO;
MPRINT(EM_ASSESS):   PUT //// "          Warning: All posterior probabilities are missing
values ";
MPRINT(EM_ASSESS):   PUT ///;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("ALLMISS", 1);
MPRINT(EM_ASSESS):   STOP;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("ALLMISS", 0);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB", MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB", MAX);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("DIFF", MAX - MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NMISSPROB", NMISS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF UPCASE (NAME) = UPCASE ("_tmpfreqvar_") THEN DO;
MPRINT(EM_ASSESS):   AUXMIN = MIN - INT (MIN);
MPRINT(EM_ASSESS):   AUXMAX = MAX - INT (MAX);
MPRINT(EM_ASSESS):   IF AUXMIN > 0 OR AUXMAX > 0 THEN CALL SYMPUTX ("USEWEIGHT", "Y");
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("USEWEIGHT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _ANY0;
MPRINT(EM_ASSESS):   SET _ea_tmpdata (KEEP = F_DepVar P_DepVar1 _tmpfreqvar_ );
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................... No Formats;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF LEFT ( F_DepVar ) = "1" THEN NTARGET = 1;
MPRINT(EM_ASSESS):   ELSE NTARGET = 0;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .............. Before proc summary of binary case;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC SUMMARY DATA = _ANY0 (KEEP = P_DepVar1 NTARGET _tmpfreqvar_ WHERE =
(NTARGET > . )) NWAY MISSING;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   CLASS P_DepVar1 ;
MPRINT(EM_ASSESS):   VAR NTARGET ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   OUTPUT OUT = ANYSUM (DROP = _TYPE_) MEAN = _MEANTARGET _MEANFREQVAR ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... Main Data Set Processing, Binary case;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK (KEEP = BASECAPC BASECAP __EVENT__ BASEEVENTS
BASEGAIN BASELIFT BASERESP BASERESPC BESTCAP BESTCAPC BESTGAIN BESTLIFT BESTLIFTC
BESTNUMEVENTS BESTRESP BESTRESPC BIN CBASELIFT C_LIFT C_P_CAPT_RESP C_P_RESP GAIN LIFT MAXPROB
MINPROB MNPROB NUMNONRESP NUMOBS NUMRESP PERCENTILE P_CAPT_RESP P_RESP ) WORK._TEMPSCOREDIST
(KEEP = BIN LOWERPROB UPPERPROB EVENTVALUE SCR_NUMEVENTS MODELSCORE SCR_NUMNONEVENTS RANGE
NUMOBSINGROUP PERCOBSINGROUP C_PERCOBSINGROUP SCR_P_EVENTS SCR_CP_EVENTS SCR_P_NONEVENTS
SCR_CP_NONEVENTS SCR_MNPROB SCR_MINPROB SCR_MAXPROB ) ;
 
MPRINT(EM_ASSESS):   SET ANYSUM END = EOF;
 
MPRINT(EM_ASSESS):   IF _N_ = 1 THEN SET _AUXEVENTNAME;
 
MPRINT(EM_ASSESS):   RETAIN MINPROB1 - MINPROB20 1 MAXPROB1 - MAXPROB20 0 MNPROB1 - MNPROB20 0
NUMOBS1 - NUMOBS20 0 NUMRESP1 - NUMRESP20 0 TRUEPOS1 - TRUEPOS100 0 TRUENEG1 - TRUENEG100 0
FALSEPOS1 - FALSEPOS100 0 FALSENEG1 - FALSENEG100 0 EVENTS1 - EVENTS100 NONEVENTS1 -
NONEVENTS100 0 FIRSTIN1 - FIRSTIN100 . LASTIN1 - LASTIN100 . RESPRATE 0.151221567 _NEVENTS 359
_NNONEVENTS 2015 TARGET "NTARGET" ;
MPRINT(EM_ASSESS):   ARRAY MINPROBS (20) MINPROB1 - MINPROB20;
MPRINT(EM_ASSESS):   ARRAY MAXPROBS (20) MAXPROB1 - MAXPROB20;
MPRINT(EM_ASSESS):   ARRAY MNPROBS (20) MNPROB1 - MNPROB20;
MPRINT(EM_ASSESS):   ARRAY NUMOBSS (20) NUMOBS1 - NUMOBS20;
MPRINT(EM_ASSESS):   ARRAY NUMRESPS (20) NUMRESP1 - NUMRESP20;
MPRINT(EM_ASSESS):   ARRAY TRUEPOSX (100) TRUEPOS1 - TRUEPOS100;
MPRINT(EM_ASSESS):   ARRAY FALSEPOSX (100) FALSEPOS1 - FALSEPOS100;
MPRINT(EM_ASSESS):   ARRAY FALSENEGX (100) FALSENEG1 - FALSENEG100;
MPRINT(EM_ASSESS):   ARRAY TRUENEGX (100) TRUENEG1 - TRUENEG100;
MPRINT(EM_ASSESS):   ARRAY _EVENTS (100) EVENTS1 - EVENTS100;
MPRINT(EM_ASSESS):   ARRAY NONEVENTS (100) NONEVENTS1 - NONEVENTS100;
MPRINT(EM_ASSESS):   ARRAY FIRSTIN (100) FIRSTIN1 - FIRSTIN100;
MPRINT(EM_ASSESS):   ARRAY LASTIN (100) LASTIN1 - LASTIN100;
MPRINT(EM_ASSESS):   RETAIN SCR_MNPROB1 - SCR_MNPROB100 0 SCR_MINPROB1 - SCR_MINPROB100 1
SCR_MAXPROB1 - SCR_MAXPROB100 0;
MPRINT(EM_ASSESS):   ARRAY SCR_MNPROBS (100) SCR_MNPROB1 - SCR_MNPROB100;
MPRINT(EM_ASSESS):   ARRAY SCR_MINPROBS (100) SCR_MINPROB1 - SCR_MINPROB100;
MPRINT(EM_ASSESS):   ARRAY SCR_MAXPROBS (100) SCR_MAXPROB1 - SCR_MAXPROB100;
MPRINT(EM_ASSESS):   DROP SCR_MINPROB1 - SCR_MINPROB100 SCR_MAXPROB1 - SCR_MAXPROB100
SCR_MNPROB1 - SCR_MNPROB100 ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...... Area For 8 Financials ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF _MEANTARGET = . THEN _MEANTARGET = RESPRATE;
MPRINT(EM_ASSESS):   DROP N1 _K SUMWEIGHTS ;
MPRINT(EM_ASSESS):   SUMWEIGHTS = 1;
 
MPRINT(EM_ASSESS):   DO _K = 1 TO CEIL (_FREQ_);
MPRINT(EM_ASSESS):   IF _K = CEIL (_FREQ_) THEN DO;
MPRINT(EM_ASSESS):   IF _FREQ_ < CEIL (_FREQ_) THEN _WEIGHT = _FREQ_ - FLOOR (_FREQ_);
MPRINT(EM_ASSESS):   ELSE _WEIGHT = 1;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE _WEIGHT = 1;
MPRINT(EM_ASSESS):   N1 + _WEIGHT;
MPRINT(EM_ASSESS):   NTARGET = _MEANTARGET ;
MPRINT(EM_ASSESS):   DECILE = MIN (20, CEIL (N1 * 20 / 2374));
MPRINT(EM_ASSESS):   MINPROBS ( DECILE) = MIN (MINPROBS ( DECILE), P_DepVar1 );
MPRINT(EM_ASSESS):   MAXPROBS ( DECILE) = MAX (MAXPROBS ( DECILE), P_DepVar1 );
MPRINT(EM_ASSESS):   MNPROBS ( DECILE) = SUM (MNPROBS ( DECILE), P_DepVar1 * _WEIGHT);
MPRINT(EM_ASSESS):   NUMOBSS ( DECILE) = NUMOBSS ( DECILE) + _WEIGHT;
MPRINT(EM_ASSESS):   NUMRESPS ( DECILE) = NUMRESPS ( DECILE) + _MEANTARGET * _WEIGHT;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ outside of do loop, Area for final ROC;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   RANKDELTA = (ROUND ( _FREQ_ ) + 1) / 2;
MPRINT(EM_ASSESS):   RANK = UNTIEDRANK + RANKDELTA;
MPRINT(EM_ASSESS):   DROP RANK ;
MPRINT(EM_ASSESS):   SUMRANK1 + RANK * ROUND (_MEANTARGET * _FREQ_, .0000001);
MPRINT(EM_ASSESS):   UNTIEDRANK + ROUND (_FREQ_, .00000001);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Area For ROC Curve;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DO _K = 1 TO 100;
MPRINT(EM_ASSESS):   IF P_DepVar1 * 100 >= _K THEN DO;
MPRINT(EM_ASSESS):   TRUEPOSX ( _K ) + _FREQ_ * _MEANTARGET ;
MPRINT(EM_ASSESS):   FALSEPOSX ( _K ) + _FREQ_ * (1 - _MEANTARGET) ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   TRUENEGX ( _K ) + _FREQ_ * ( 1 - _MEANTARGET) ;
MPRINT(EM_ASSESS):   FALSENEGX ( _K ) + _FREQ_ * _MEANTARGET ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   SLOT = MIN (MAX (CEIL (P_DepVar1 * 100), 1), 100) ;
MPRINT(EM_ASSESS):   DROP SLOT;
MPRINT(EM_ASSESS):   FIRSTIN ( SLOT ) = MIN ( FIRSTIN ( SLOT ), P_DepVar1);
MPRINT(EM_ASSESS):   LASTIN ( SLOT ) = MAX ( LASTIN ( SLOT ), P_DepVar1);
MPRINT(EM_ASSESS):   _EVENTS ( SLOT) = _EVENTS ( SLOT) + _FREQ_ * _MEANTARGET;
MPRINT(EM_ASSESS):   NONEVENTS ( SLOT) = NONEVENTS ( SLOT) + _FREQ_ * (1 - _MEANTARGET);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ START OF OUTDIST IN BINARY CASE MAIN DATA STEP ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   SCR_MNPROBS ( SLOT ) = SUM (SCR_MNPROBS (SLOT), P_DepVar1 * _FREQ_ );
MPRINT(EM_ASSESS):   SCR_MINPROBS ( SLOT ) = MIN (SCR_MINPROBS (SLOT), P_DepVar1 );
MPRINT(EM_ASSESS):   SCR_MAXPROBS ( SLOT ) = MAX (SCR_MAXPROBS (SLOT), P_DepVar1 );
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ End of Outdist in Binary case main DATA STEP ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   PUT //;
MPRINT(EM_ASSESS):   DO K = 1 TO 20;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LENGTH EVENTVALUE $ 32;
MPRINT(EM_ASSESS):   RETAIN EVENTVALUE "1" ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ......... Start of EOF area of BINARY processing of main data set ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SUMRANK1", SUMRANK1);
MPRINT(EM_ASSESS):   LENGTH DATAROLE $ 10;
MPRINT(EM_ASSESS):   RETAIN DATAROLE "TRAIN" ;
MPRINT(EM_ASSESS):   RETAIN OVLMIN 0.0000743387 OVLMAX 1 ;
MPRINT(EM_ASSESS):   DROP OVLMIN OVLMAX ;
MPRINT(EM_ASSESS):   C_NUMOBS = 0;
MPRINT(EM_ASSESS):   C_NUM_RESP = 0;
MPRINT(EM_ASSESS):   C_NUM_NONRESP = 0;
MPRINT(EM_ASSESS):   C_P_RESP = 0;
MPRINT(EM_ASSESS):   P_CAPT_RESP = 0;
MPRINT(EM_ASSESS):   C_P_CAPT_RESP = 0;
MPRINT(EM_ASSESS):   PREVIOUSPROFIT = 0;
MPRINT(EM_ASSESS):   MAXPROFIT = 0;
MPRINT(EM_ASSESS):   _KS_BIN_ = 0;
MPRINT(EM_ASSESS):   DROP _KS_BIN_;
MPRINT(EM_ASSESS):   AVGNUMRESP = _NEVENTS / 20;
MPRINT(EM_ASSESS):   BASERESP = 100 * RESPRATE;
MPRINT(EM_ASSESS):   BASERESPC = BASERESP;
MPRINT(EM_ASSESS):   BASECAP = 100 / 20;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................Start OF Gainschart = Outranks Area;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   _KS_BIN_PROB = 0;
MPRINT(EM_ASSESS):   DO GROUP = 20 TO 1 BY -1;
 
MPRINT(EM_ASSESS):   BASECAPC + BASECAP;
MPRINT(EM_ASSESS):   PERCENTILE = GROUP * (100 / 20);
MPRINT(EM_ASSESS):   MINPROB = MINPROBS ( GROUP);
MPRINT(EM_ASSESS):   MAXPROB = MAXPROBS ( GROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB" || LEFT ( PUT (GROUP, 3.)), MINPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB" || LEFT ( PUT (GROUP, 3.)), MAXPROB);
MPRINT(EM_ASSESS):   NUMOBS = NUMOBSS ( GROUP);
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN MNPROB = MNPROBS ( GROUP) / NUMOBS;
MPRINT(EM_ASSESS):   ELSE MNPROB = .;
MPRINT(EM_ASSESS):   C_NUMOBS = SUM (NUMOBS, C_NUMOBS);
MPRINT(EM_ASSESS):   NUMRESP = NUMRESPS ( GROUP);
MPRINT(EM_ASSESS):   NUMNONRESP = NUMOBS - NUMRESP;
MPRINT(EM_ASSESS):   C_AVGNUM_RESP + AVGNUMRESP;
MPRINT(EM_ASSESS):   IF C_NUMOBS <= _NEVENTS THEN DO;
MPRINT(EM_ASSESS):   BESTNUMEVENTS = NUMOBS;
MPRINT(EM_ASSESS):   BESTCAPC = C_NUMOBS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   BASEEVENTS = _NEVENTS / 20;
MPRINT(EM_ASSESS):   BASENONEVENTS = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   FLAG + 1;
MPRINT(EM_ASSESS):   DROP FLAG;
MPRINT(EM_ASSESS):   BESTNUMEVENTS = _NEVENTS - C_NUMOBS + NUMOBS;
MPRINT(EM_ASSESS):   IF FLAG > 1 THEN BESTNUMEVENTS = 0;
MPRINT(EM_ASSESS):   BESTCAPC = 100;
MPRINT(EM_ASSESS):   IF C_NUMOBS - _NEVENTS <= NUMOBS THEN DO;
MPRINT(EM_ASSESS):   BASEEVENTS = C_NUMOBS - _NEVENTS;
MPRINT(EM_ASSESS):   BASENONEVENTS = NUMOBS - C_NUMOBS + _NEVENTS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BASEEVENTS = 0;
MPRINT(EM_ASSESS):   BASENONEVENTS = NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   BESTCAP = BESTNUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   BESTLIFT = BESTNUMEVENTS / AVGNUMRESP;
MPRINT(EM_ASSESS):   C_BESTNUMEVENTS + BESTNUMEVENTS;
MPRINT(EM_ASSESS):   DROP C_BESTNUMEVENTS;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN BESTLIFTC = C_BESTNUMEVENTS / (_NEVENTS / 2374 *
C_NUMOBS);
MPRINT(EM_ASSESS):   ELSE BESTLIFTC = .;
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BESTRESP = BESTNUMEVENTS * 100 / NUMOBS;
MPRINT(EM_ASSESS):   P_RESP = NUMRESP * 100 / NUMOBS;
MPRINT(EM_ASSESS):   P_NONRESP = NUMNONRESP * 100 / NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTRESP = .;
MPRINT(EM_ASSESS):   P_RESP = .;
MPRINT(EM_ASSESS):   P_NONRESP = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BESTRESPC = C_BESTNUMEVENTS * 100 / C_NUMOBS;
MPRINT(EM_ASSESS):   BESTGAIN = MAX (0, ((C_BESTNUMEVENTS / C_NUMOBS ) / ( AVGNUMRESP /
NUMOBS) - 1) * 100);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTRESPC = .;
MPRINT(EM_ASSESS):   BESTGAIN = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF NUMNONRESP > 0 THEN ODDS = NUMRESP / NUMNONRESP;
MPRINT(EM_ASSESS):   ELSE ODDS = .;
MPRINT(EM_ASSESS):   C_NUM_RESP = SUM (C_NUM_RESP , NUMRESP );
MPRINT(EM_ASSESS):   C_NUM_NONRESP = SUM (C_NUM_NONRESP, NUMNONRESP );
MPRINT(EM_ASSESS):   IF C_NUM_NONRESP > 0 THEN C_ODDS = C_NUM_RESP / C_NUM_NONRESP;
MPRINT(EM_ASSESS):   ELSE C_ODDS = .;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   C_P_RESP = C_NUM_RESP * 100 / C_NUMOBS;
MPRINT(EM_ASSESS):   GAIN = ABS(100 * (((C_NUM_RESP / C_NUMOBS ) / (_NEVENTS / 2374)) - 1));
MPRINT(EM_ASSESS):   BASEGAIN = 100 * (( (C_AVGNUM_RESP / C_NUMOBS) / ( AVGNUMRESP / NUMOBS))
- 1);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   GAIN = .;
MPRINT(EM_ASSESS):   BASEGAIN = .;
MPRINT(EM_ASSESS):   C_P_RESP = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF BASEGAIN <= 0 THEN BASEGAIN = 0;
MPRINT(EM_ASSESS):   P_CAPT_RESP = NUMRESP * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   P_CAPT_NONRESP = NUMNONRESP * 100 / ( 2374 - _NEVENTS);
MPRINT(EM_ASSESS):   C_P_CAPT_RESP = C_NUM_RESP * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   C_P_CAPT_NONRESP = C_NUM_NONRESP * 100 / ( 2374 - _NEVENTS);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Area For Binned KS in Outranks area;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   _DIFFERENCE = C_P_CAPT_RESP - C_P_CAPT_NONRESP ;
MPRINT(EM_ASSESS):   IF _KS_BIN_ < _DIFFERENCE THEN DO;
MPRINT(EM_ASSESS):   _KS_BIN_ = _DIFFERENCE;
MPRINT(EM_ASSESS):   _KS_BIN_PROB = MINPROB + (MAXPROB - MINPROB) / 2 ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LIFT = P_RESP * .01 / RESPRATE ;
MPRINT(EM_ASSESS):   C_LIFT = C_P_RESP * .01 / RESPRATE;
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BASELIFT = AVGNUMRESP / ( RESPRATE * NUMOBS );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE BASELIFT = .;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN CBASELIFT = C_AVGNUM_RESP / (RESPRATE * C_NUMOBS);
MPRINT(EM_ASSESS):   ELSE CBASELIFT = .;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ WITHIN DO LOOP FOR OUTRANKS;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   BIN = 20 + 1 - GROUP;
MPRINT(EM_ASSESS):   PERCENTILE = BIN * (100 / 20);
MPRINT(EM_ASSESS):   B_C_P_RESP = PERCENTILE;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPRANK ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................ END OF GAINSCHART = OUTRANKS AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROFITGROUP" , MAXPROFITGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROFIT" , MAXPROFIT );
MPRINT(EM_ASSESS):   KS_ABSDIFF = 0 ;
MPRINT(EM_ASSESS):   MINPRECTPR = 9999;
MPRINT(EM_ASSESS):   Y0 = 1 - RESPRATE;
MPRINT(EM_ASSESS):   Y1 = RESPRATE;
MPRINT(EM_ASSESS):   MAXMUTUAL = 0;
MPRINT(EM_ASSESS):   DROP MAXMUTUAL KSPROB Y0 Y1 KS_ABSDIFF MINPRECTPR;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .....................About to start Processing Outroc ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................... Finished Processing Outroc ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .............. Outdist ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   BIN = 20 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS96 - EVENTS100 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS96 - NONEVENTS100);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB96 -
SCR_MNPROB100) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB96 - SCR_MINPROB100) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB96 - SCR_MAXPROB100) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 20;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 19 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS91 - EVENTS95 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS91 - NONEVENTS95);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB91 -
SCR_MNPROB95) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB91 - SCR_MINPROB95) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB91 - SCR_MAXPROB95) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 19;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 18 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS86 - EVENTS90 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS86 - NONEVENTS90);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB86 -
SCR_MNPROB90) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB86 - SCR_MINPROB90) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB86 - SCR_MAXPROB90) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 18;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 17 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS81 - EVENTS85 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS81 - NONEVENTS85);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB81 -
SCR_MNPROB85) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB81 - SCR_MINPROB85) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB81 - SCR_MAXPROB85) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 17;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 16 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS76 - EVENTS80 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS76 - NONEVENTS80);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB76 -
SCR_MNPROB80) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB76 - SCR_MINPROB80) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB76 - SCR_MAXPROB80) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 16;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 15 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS71 - EVENTS75 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS71 - NONEVENTS75);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB71 -
SCR_MNPROB75) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB71 - SCR_MINPROB75) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB71 - SCR_MAXPROB75) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 15;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 14 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS66 - EVENTS70 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS66 - NONEVENTS70);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB66 -
SCR_MNPROB70) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB66 - SCR_MINPROB70) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB66 - SCR_MAXPROB70) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 14;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 13 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS61 - EVENTS65 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS61 - NONEVENTS65);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB61 -
SCR_MNPROB65) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB61 - SCR_MINPROB65) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB61 - SCR_MAXPROB65) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 13;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 12 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS56 - EVENTS60 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS56 - NONEVENTS60);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB56 -
SCR_MNPROB60) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB56 - SCR_MINPROB60) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB56 - SCR_MAXPROB60) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 12;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 11 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS51 - EVENTS55 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS51 - NONEVENTS55);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB51 -
SCR_MNPROB55) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB51 - SCR_MINPROB55) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB51 - SCR_MAXPROB55) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 11;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 10 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS46 - EVENTS50 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS46 - NONEVENTS50);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB46 -
SCR_MNPROB50) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB46 - SCR_MINPROB50) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB46 - SCR_MAXPROB50) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 10;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 9 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS41 - EVENTS45 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS41 - NONEVENTS45);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB41 -
SCR_MNPROB45) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB41 - SCR_MINPROB45) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB41 - SCR_MAXPROB45) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 9;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 8 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS36 - EVENTS40 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS36 - NONEVENTS40);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB36 -
SCR_MNPROB40) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB36 - SCR_MINPROB40) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB36 - SCR_MAXPROB40) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 8;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 7 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS31 - EVENTS35 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS31 - NONEVENTS35);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB31 -
SCR_MNPROB35) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB31 - SCR_MINPROB35) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB31 - SCR_MAXPROB35) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 7;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 6 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS26 - EVENTS30 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS26 - NONEVENTS30);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB26 -
SCR_MNPROB30) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB26 - SCR_MINPROB30) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB26 - SCR_MAXPROB30) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 6;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 5 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS21 - EVENTS25 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS21 - NONEVENTS25);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB21 -
SCR_MNPROB25) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB21 - SCR_MINPROB25) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB21 - SCR_MAXPROB25) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 5;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 4 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS16 - EVENTS20 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS16 - NONEVENTS20);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB16 -
SCR_MNPROB20) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB16 - SCR_MINPROB20) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB16 - SCR_MAXPROB20) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 4;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 3 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS11 - EVENTS15 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS11 - NONEVENTS15);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB11 -
SCR_MNPROB15) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB11 - SCR_MINPROB15) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB11 - SCR_MAXPROB15) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 3;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 2 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS6 - EVENTS10 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS6 - NONEVENTS10);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB6 -
SCR_MNPROB10) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB6 - SCR_MINPROB10) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB6 - SCR_MAXPROB10) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 2;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 1 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS1 - EVENTS5 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS1 - NONEVENTS5);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB1 - SCR_MNPROB5)
/ NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB1 - SCR_MINPROB5) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB1 - SCR_MAXPROB5) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 1;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("KSPROB" , PUT (KSPROB, 5.3 ) );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("_KS_BIN_PROB" , _KS_BIN_PROB );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("_KS_BIN_" , _KS_BIN_ / 100 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("KSDIFF" , KS_ABSDIFF );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PRECTPR" , PRECTPR );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXMUTUALPROB" , MAXMUTUALPROB);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LABEL __EVENT__ = "Event" DECILE = "Depth" BIN = "Bin" NUMOBS = "Number
of Observations" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * RUN for large data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST;
MPRINT(EM_ASSESS):   DELETE _AUXEVENTNAME;
MPRINT(EM_ASSESS):   QUIT;
 
MPRINT(EM_ASSESS):   OPTION NOCENTER LS = 95;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Report Vars Area.;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start OF Outdist Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPSCOREDIST;
MPRINT(EM_ASSESS):   RENAME MODELSCORE = SCORE UPPERPROB = UPPOSTERIOR SCR_CP_EVENTS =
CUMULATIVEPERCENTAGEOFEVENTS SCR_CP_NONEVENTS = CUMULATIVEPERCENTAGEOFNONEVENTS EVENTVALUE =
EVENT LOWERPROB = LOWPOSTERIOR NUMOBSINGROUP = N PERCOBSINGROUP = PERCENTAGE SCR_MINPROB =
_MINP_ SCR_MAXPROB = _MAXP_ SCR_MNPROB = _MEANP_ RANGE = P_LABEL C_PERCOBSINGROUP =
CUMULATIVEPERCENTAGE SCR_NUMEVENTS = NUMBEROFEVENTS SCR_NUMNONEVENTS = NUMBEROFNONEVENTS
SCR_P_EVENTS = PERCENTAGEOFEVENTS SCR_P_NONEVENTS = PERCENTAGEOFNONEVENTS ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... OUTDIST MODIFICATION LABEL AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL BIN = "Bin" N = "Number of Observations" P_LABEL = "Posterior
Probability Range" EVENT = "Event" LOWPOSTERIOR = "Lower Bound Posterior Probability"
PERCENTAGEOFEVENTS = "Percentage of Events" CUMULATIVEPERCENTAGEOFNONEVENTS = "Cumulative
Percentage of Nonevents" CUMULATIVEPERCENTAGE = "Cumulative Percentage" PERCENTAGEOFEVENTS =
"Percentage of Events" PERCENTAGEOFNONEVENTS = "Percentage of Nonevents"
CUMULATIVEPERCENTAGEOFEVENTS = "Cumulative Percentage of Events" UPPOSTERIOR = "Upper Bound
Posterior Probability" NUMBEROFEVENTS = "Number of Events" PERCENTAGE = "Percentage"
NUMBEROFNONEVENTS = "Number of Nonevents" _MEANP_ = "Mean Posterior Probability" _MINP_ = "Min
Posterior Probability" _MAXP_ = "Max Posterior Probability" SCORE = "Model Score" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   SET WORK._TEMPSCOREDIST (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........... END OF OUTDIST MODIFICATION;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start of OUTRANKS Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPRANK;
MPRINT(EM_ASSESS):   RENAME __EVENT__ = EVENT P_RESP = RESP C_P_CAPT_RESP = CAPC P_CAPT_RESP =
CAP NUMNONRESP = NUMNEVENT NUMRESP = NUMEVENT BASEEVENTS = BASENUMBEROFEVENTS BESTNUMEVENTS =
BESTNUMBEROFEVENTS MAXPROB = _MAXP_ MINPROB = _MINP_ CBASELIFT = BASELIFTC C_LIFT = LIFTC
MNPROB = _MEANP_ PERCENTILE = DECILE NUMOBS = N NUMEVENT = NUMBEROFEVENTS C_P_RESP = RESPC ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................. OUTRANKS;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL _MAXP_ = "Max Posterior Probability" _MINP_ = "Min Posterior
Probability" _MEANP_ = "Mean Posterior Probability" BASECAP = "Baseline % Captured Response"
BASECAPC = "Baseline Cumulative % Captured Response" BASENUMBEROFEVENTS = "Baseline Number of
Events" BASEGAIN = "Baseline Gain" BASELIFT = "Baseline Lift" BASELIFTC = "Baseline Cumulative
Lift" BASERESP = "Baseline % Response" BASERESPC = "Baseline Cumulative % Response" BASELIFTC
= "Baseline Cumulative Lift" BESTCAP = "Best % Captured Response" BESTCAPC = "Best Cumulative
% Captured Response" BESTGAIN = "Best Gain" BESTRESP = "Best % Response" BESTRESPC = "Best
Cumulative % Response" BESTLIFT = "Best Lift" BESTLIFTC = "Best Cumulative Lift"
BESTNUMBEROFEVENTS = "Best Number of Events" CAP = "% Captured Response" CAPC = "Cumulative %
Captured Response" DECILE = "Depth" GAIN = "Gain" LIFT = "Lift" LIFTC = "Cumulative Lift"
NUMNEVENT = "Number of Nonevents" N = "Number of Observations" EVENT = "Event" RESPC =
"Cumulative % Response" NUMBEROFEVENTS = "Number of Events" RESP = "% Response" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK;
MPRINT(EM_ASSESS):   SET WORK._TEMPRANK (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   proc datasets lib=work nolist;
MPRINT(EM_ASSESS):   delete _ea_tmpdata;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_ASSESS):   quit;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   OPTION ERRORS = 20;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):    data WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   retain target "DepVar";
MPRINT(EM_DIAGRAM):   retain TARGETLABEL 'DepVar';
MPRINT(EM_DIAGRAM):   retain dataRole "TRAIN";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural43_EMRANK;
MPRINT(EM_DIAGRAM):   set WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   retain target "DepVar";
MPRINT(EM_DIAGRAM):   retain TARGETLABEL 'DepVar';
MPRINT(EM_DIAGRAM):   retain dataRole "TRAIN";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural43_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   set WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   run;
505947     data EM_temp_assessMeta;
MPRINT(EM_DIAGRAM):    data EM_temp_assessMeta;
505948     set EMWS8.AutoNeural43_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural43_CMeta_TRAIN;
505949     where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION', 'ASSESS', 'COST')
505949   ! ;
MPRINT(EM_DIAGRAM):   where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION',
'ASSESS', 'COST');
505950     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set EMWS8.AUTONEURAL43_CMETA_TRAIN.
      WHERE role in ('ASSESS', 'CLASSIFICATION', 'COST', 'DECISION', 'PREDICT', 'RESIDUAL');
NOTE: The data set WORK.EM_TEMP_ASSESSMETA has 8 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
505951     data EM_temp_assessdata;
MPRINT(EM_DIAGRAM):    data EM_temp_assessdata;
505952     set EMWS8.AutoNeural43_VALIDATE(keep=
505953     F_DepVar
505954     I_DepVar
505955     P_DepVar0
505956     P_DepVar1
505957     R_DepVar0
505958     R_DepVar1
505959     U_DepVar
505960     _WARN_
505961     DepVar
505962     );
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural43_VALIDATE(keep= F_DepVar I_DepVar P_DepVar0
P_DepVar1 R_DepVar0 R_DepVar1 U_DepVar _WARN_ DepVar );
505963     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: View EMWS8.AUTONEURAL43_VALIDATE.VIEW used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
 
NOTE: There were 1018 observations read from the data set EMWS8.META2_VALIDATE.
NOTE: There were 1018 observations read from the data set EMWS8.AUTONEURAL43_VALIDATE.
NOTE: The data set WORK.EM_TEMP_ASSESSDATA has 1018 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.07 seconds
      cpu time            0.07 seconds
 
 
MPRINT(EM_DIAGRAM):    proc freq data=EM_temp_assessdata noprint;
MPRINT(EM_DIAGRAM):   table I_DepVar*F_DepVar / out = WORK.AutoNeural43_2S0A5PT nocol norow
outpct;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.AutoNeural43_2S0A5PT;
MPRINT(EM_DIAGRAM):   length _TYPE_ $10 DATAROLE TARGET $32 TARGETLABEL $200 FROM INTO $32
CORRECTTEXT $40 ;
MPRINT(EM_DIAGRAM):   label _TYPE_ = "Outcome Type";
MPRINT(EM_DIAGRAM):   label DATAROLE = "Data Role";
MPRINT(EM_DIAGRAM):   label TARGET = "Target Variable";
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   label FROM = "Target";
MPRINT(EM_DIAGRAM):   label INTO = "Outcome";
MPRINT(EM_DIAGRAM):   label PCT_ROW = "Target Percentage";
MPRINT(EM_DIAGRAM):   label PCT_COL = "Outcome Percentage";
MPRINT(EM_DIAGRAM):   label COUNT = "Frequency Count";
MPRINT(EM_DIAGRAM):   label PERCENT = "Total Percentage";
MPRINT(EM_DIAGRAM):   label CORRECTTEXT = "Correct Text";
MPRINT(EM_DIAGRAM):   label CORRECT = "Correct";
MPRINT(EM_DIAGRAM):   set WORK.AutoNeural43_2S0A5PT(rename=(F_DepVar=FROM I_DepVar=INTO));
MPRINT(EM_DIAGRAM):   retain _TYPE_ 'PREDICTION' DATAROLE "VALIDATE" TARGET "DepVar";
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TARGETLABEL = 'DepVar';
MPRINT(EM_DIAGRAM):   if FROM eq INTO then do;
MPRINT(EM_DIAGRAM):   CORRECT = 0;
MPRINT(EM_DIAGRAM):   CORRECTTEXT="Correct";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   CORRECT = 1;
MPRINT(EM_DIAGRAM):   CORRECTTEXT="Incorrect";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural43_EMCLASSIFICATION;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural43_EMCLASSIFICATION WORK.AutoNeural43_2S0A5PT;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   set WORK.AutoNeural43_2S0A5PT;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.MISCREPORT(drop=INTO FROM _TYPE_);
MPRINT(EM_DIAGRAM):   set WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   length MISC $12;
MPRINT(EM_DIAGRAM):   if FROM='1' and INTO='1' then MISC='TRUEEVENT';
MPRINT(EM_DIAGRAM):   else if FROM='1' and INTO ne '1' then MISC='FALSENEVENT';
MPRINT(EM_DIAGRAM):   else if FROM ne '1' and INTO='1' then MISC='FALSEEVENT';
MPRINT(EM_DIAGRAM):   else if FROM ne'1' and INTO ne '1' then MISC='TRUENEVENT';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.MISCREPORT nothreads;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc summary data=WORK.MISCREPORT NWAY;
MPRINT(EM_DIAGRAM):   output out=WORK.MISCCOUNT(drop=_FREQ_ _TYPE_) SUM=COUNT;
MPRINT(EM_DIAGRAM):   CLASS MISC;
MPRINT(EM_DIAGRAM):   VAR COUNT;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc transpose data=WORK.MISCCOUNT out=WORK.MISCREPORT(drop=_NAME_
_LABEL_);
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   ID MISC;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural43_EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   length TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural43_EMEVENTREPORT WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TARGETLABEL = 'DepVar';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data ASSESS_REPORTMETA;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural43_VariableSet;
MPRINT(EM_DIAGRAM):   where REPORT='Y';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename temp catalog 'sashelp.emassmt.em_assess.source';
MPRINT(EM_DIAGRAM):   filename temp;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural43_DepVar_DM;
MPRINT(EM_DIAGRAM):   where _TYPE_="TARGET";
MPRINT(EM_DIAGRAM):   call symput('ASSMT_EVENT', strip(event));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):
MPRINT(EM_ASSESS):   data _ea_tmpdata;
MPRINT(EM_ASSESS):   set EM_temp_assessdata;
MPRINT(EM_ASSESS):   _tmpfreqvar_=1;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_CHECKEMSETINIT):   DATA _NULL_;
MPRINT(EM_CHECKEMSETINIT):   EM_SETINIT = 'N';
MPRINT(EM_CHECKEMSETINIT):   IF SYSPROD('PRODNUM50') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM448') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM102') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM103') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   CALL SYMPUT('EM_SETINIT', EM_SETINIT);
MPRINT(EM_CHECKEMSETINIT):   RUN;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Reading in reporting data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET ASSESS_REPORTMETA END = EOF;
MPRINT(EM_ASSESS):   IF TYPE = "C" OR UPCASE (LEVEL) IN ("NOMINAL", "BINARY" , "ORDINAL") THEN
DO;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) NE UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   NUMCTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTC" || LEFT (PUT (NUMCTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "C");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF UPCASE(NAME) NE UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   NUMNTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTN" || LEFT (PUT (NUMNTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMNTOREPORT", NUMNTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMCTOREPORT", NUMCTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMTOREPORT", SUM (NUMNTOREPORT, NUMCTOREPORT));
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   PROC DMDB DATA = _ea_tmpdata VAROUT = VAROUT DMDBCAT = _D CLASSOUT =
_ASSMT_CLASSOUT;
MPRINT(EM_ASSESS):   CLASS F_DepVar ;
 
MPRINT(EM_ASSESS):   VAR P_DepVar1 _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_;
MPRINT(EM_ASSESS):   RUN ;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   PROC SORT DATA = _ASSMT_CLASSOUT;
MPRINT(EM_ASSESS):   BY NAME;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _auxeventname (keep = __event__) ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ...FLAG0_1 = ..... TARGET IS 0, 1 & EVENT = 1;
 
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   length __event__ $ 32;
MPRINT(EM_ASSESS):   RETAIN FLAG0_1 1 NUM1 . NUM0 . __event__ "_missing_" ;
 
MPRINT(EM_ASSESS):   SET _ASSMT_CLASSOUT END = EOF;
MPRINT(EM_ASSESS):   BY NAME;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ....... LEVEL = BINARY OR NOMINAL OR ORDINAL;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   IF UPCASE(NAME) = UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   CUMFREQ + FREQUENCY;
MPRINT(EM_ASSESS):   IF LEVEL NE "." THEN DO;
MPRINT(EM_ASSESS):   N1 + 1;
MPRINT(EM_ASSESS):   IF (NRAW NE 0 AND NRAW NE 1) OR TYPE NE "N" OR "" > " " THEN FLAG0_1 = 0;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ......................... IF EVENT NE BLANK;
MPRINT(EM_ASSESS):   * ....................LEVEL IS CHAR VAR ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   IF UPCASE("1") = UPCASE(LEVEL) THEN DO;
MPRINT(EM_ASSESS):   NUM1 = FREQUENCY;
MPRINT(EM_ASSESS):   IF TYPE = "C" THEN do;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("EVENTVALUERAW", CRAW );
MPRINT(EM_ASSESS):   __event__ = craw;
MPRINT(EM_ASSESS):   end;
MPRINT(EM_ASSESS):   ELSE do;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("EVENTVALUERAW", NRAW );
MPRINT(EM_ASSESS):   __event__ = nraw;
MPRINT(EM_ASSESS):   end;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF LAST.NAME THEN DO;
 
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * .............. IN NOMINAL CASE, NEED TO GROUP ALL '0' ;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   NUM0 = SUM (CUMFREQ, - NUM1);
MPRINT(EM_ASSESS):   IF NUM0 < 0 THEN NUM0 = 0;
MPRINT(EM_ASSESS):   IF NUM1 = . THEN NUM1 = 0;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUM0", NUM0 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUM1", NUM1);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PNUM1", NUM1 / CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PNUM0", (CUMFREQ - NUM1) / CUMFREQ);
MPRINT(EM_ASSESS):   IF TYPE = "C" THEN DO;
MPRINT(EM_ASSESS):   FLAG0_1 = 0;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "C" );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF "" = " " THEN DO;
MPRINT(EM_ASSESS):   IF "1" NE "1" THEN FLAG0_1 = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "N" );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ................... IF TYPE = N;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("FLAG0_1", FLAG0_1 );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..................IF LAST.NAME ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ...............IF LEVEL NE '.' ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * .............. IF NAME = TARGET;
MPRINT(EM_ASSESS):   ELSE IF "" > " " AND UPCASE(NAME) = UPCASE("") THEN DO;
MPRINT(EM_ASSESS):   NUMDECISIONS + 1;
MPRINT(EM_ASSESS):   LEVEL = TRANSLATE (LEVEL, "_", "'", "_", '"');
MPRINT(EM_ASSESS):   CALL SYMPUTX ("D_LABEL" || LEFT (PUT (NUMDECISIONS, 3.)), LEVEL );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..................... ELSE IF UPCASE;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   output _auxeventname;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMOBS", CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMDECISIONS", NUMDECISIONS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET VAROUT END = EOF;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) = UPCASE ("P_DepVar1") THEN DO;
MPRINT(EM_ASSESS):   IF N = 0 THEN DO;
MPRINT(EM_ASSESS):   PUT //// "          Warning: All posterior probabilities are missing
values ";
MPRINT(EM_ASSESS):   PUT ///;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("ALLMISS", 1);
MPRINT(EM_ASSESS):   STOP;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("ALLMISS", 0);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB", MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB", MAX);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("DIFF", MAX - MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NMISSPROB", NMISS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF UPCASE (NAME) = UPCASE ("_tmpfreqvar_") THEN DO;
MPRINT(EM_ASSESS):   AUXMIN = MIN - INT (MIN);
MPRINT(EM_ASSESS):   AUXMAX = MAX - INT (MAX);
MPRINT(EM_ASSESS):   IF AUXMIN > 0 OR AUXMAX > 0 THEN CALL SYMPUTX ("USEWEIGHT", "Y");
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("USEWEIGHT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _ANY0;
MPRINT(EM_ASSESS):   SET _ea_tmpdata (KEEP = F_DepVar P_DepVar1 _tmpfreqvar_ );
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................... No Formats;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF LEFT ( F_DepVar ) = "1" THEN NTARGET = 1;
MPRINT(EM_ASSESS):   ELSE NTARGET = 0;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .............. Before proc summary of binary case;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC SUMMARY DATA = _ANY0 (KEEP = P_DepVar1 NTARGET _tmpfreqvar_ WHERE =
The SAS System
 
(NTARGET > . )) NWAY MISSING;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   CLASS P_DepVar1 ;
MPRINT(EM_ASSESS):   VAR NTARGET ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   OUTPUT OUT = ANYSUM (DROP = _TYPE_) MEAN = _MEANTARGET _MEANFREQVAR ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... Main Data Set Processing, Binary case;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK (KEEP = BASECAPC BASECAP __EVENT__ BASEEVENTS
BASEGAIN BASELIFT BASERESP BASERESPC BESTCAP BESTCAPC BESTGAIN BESTLIFT BESTLIFTC
BESTNUMEVENTS BESTRESP BESTRESPC BIN CBASELIFT C_LIFT C_P_CAPT_RESP C_P_RESP GAIN LIFT MAXPROB
MINPROB MNPROB NUMNONRESP NUMOBS NUMRESP PERCENTILE P_CAPT_RESP P_RESP ) WORK._TEMPSCOREDIST
(KEEP = BIN LOWERPROB UPPERPROB EVENTVALUE SCR_NUMEVENTS MODELSCORE SCR_NUMNONEVENTS RANGE
NUMOBSINGROUP PERCOBSINGROUP C_PERCOBSINGROUP SCR_P_EVENTS SCR_CP_EVENTS SCR_P_NONEVENTS
SCR_CP_NONEVENTS SCR_MNPROB SCR_MINPROB SCR_MAXPROB ) ;
 
MPRINT(EM_ASSESS):   SET ANYSUM END = EOF;
 
MPRINT(EM_ASSESS):   IF _N_ = 1 THEN SET _AUXEVENTNAME;
 
MPRINT(EM_ASSESS):   RETAIN MINPROB1 - MINPROB20 1 MAXPROB1 - MAXPROB20 0 MNPROB1 - MNPROB20 0
NUMOBS1 - NUMOBS20 0 NUMRESP1 - NUMRESP20 0 TRUEPOS1 - TRUEPOS100 0 TRUENEG1 - TRUENEG100 0
FALSEPOS1 - FALSEPOS100 0 FALSENEG1 - FALSENEG100 0 EVENTS1 - EVENTS100 NONEVENTS1 -
NONEVENTS100 0 FIRSTIN1 - FIRSTIN100 . LASTIN1 - LASTIN100 . RESPRATE 0.152259332 _NEVENTS 155
_NNONEVENTS 863 TARGET "NTARGET" ;
MPRINT(EM_ASSESS):   ARRAY MINPROBS (20) MINPROB1 - MINPROB20;
MPRINT(EM_ASSESS):   ARRAY MAXPROBS (20) MAXPROB1 - MAXPROB20;
MPRINT(EM_ASSESS):   ARRAY MNPROBS (20) MNPROB1 - MNPROB20;
MPRINT(EM_ASSESS):   ARRAY NUMOBSS (20) NUMOBS1 - NUMOBS20;
MPRINT(EM_ASSESS):   ARRAY NUMRESPS (20) NUMRESP1 - NUMRESP20;
MPRINT(EM_ASSESS):   ARRAY TRUEPOSX (100) TRUEPOS1 - TRUEPOS100;
MPRINT(EM_ASSESS):   ARRAY FALSEPOSX (100) FALSEPOS1 - FALSEPOS100;
MPRINT(EM_ASSESS):   ARRAY FALSENEGX (100) FALSENEG1 - FALSENEG100;
MPRINT(EM_ASSESS):   ARRAY TRUENEGX (100) TRUENEG1 - TRUENEG100;
MPRINT(EM_ASSESS):   ARRAY _EVENTS (100) EVENTS1 - EVENTS100;
MPRINT(EM_ASSESS):   ARRAY NONEVENTS (100) NONEVENTS1 - NONEVENTS100;
MPRINT(EM_ASSESS):   ARRAY FIRSTIN (100) FIRSTIN1 - FIRSTIN100;
MPRINT(EM_ASSESS):   ARRAY LASTIN (100) LASTIN1 - LASTIN100;
MPRINT(EM_ASSESS):   RETAIN SCR_MNPROB1 - SCR_MNPROB100 0 SCR_MINPROB1 - SCR_MINPROB100 1
SCR_MAXPROB1 - SCR_MAXPROB100 0;
MPRINT(EM_ASSESS):   ARRAY SCR_MNPROBS (100) SCR_MNPROB1 - SCR_MNPROB100;
MPRINT(EM_ASSESS):   ARRAY SCR_MINPROBS (100) SCR_MINPROB1 - SCR_MINPROB100;
MPRINT(EM_ASSESS):   ARRAY SCR_MAXPROBS (100) SCR_MAXPROB1 - SCR_MAXPROB100;
MPRINT(EM_ASSESS):   DROP SCR_MINPROB1 - SCR_MINPROB100 SCR_MAXPROB1 - SCR_MAXPROB100
SCR_MNPROB1 - SCR_MNPROB100 ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...... Area For 8 Financials ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF _MEANTARGET = . THEN _MEANTARGET = RESPRATE;
MPRINT(EM_ASSESS):   DROP N1 _K SUMWEIGHTS ;
MPRINT(EM_ASSESS):   SUMWEIGHTS = 1;
 
MPRINT(EM_ASSESS):   DO _K = 1 TO CEIL (_FREQ_);
MPRINT(EM_ASSESS):   IF _K = CEIL (_FREQ_) THEN DO;
MPRINT(EM_ASSESS):   IF _FREQ_ < CEIL (_FREQ_) THEN _WEIGHT = _FREQ_ - FLOOR (_FREQ_);
MPRINT(EM_ASSESS):   ELSE _WEIGHT = 1;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE _WEIGHT = 1;
MPRINT(EM_ASSESS):   N1 + _WEIGHT;
MPRINT(EM_ASSESS):   NTARGET = _MEANTARGET ;
MPRINT(EM_ASSESS):   DECILE = MIN (20, CEIL (N1 * 20 / 1018));
MPRINT(EM_ASSESS):   MINPROBS ( DECILE) = MIN (MINPROBS ( DECILE), P_DepVar1 );
MPRINT(EM_ASSESS):   MAXPROBS ( DECILE) = MAX (MAXPROBS ( DECILE), P_DepVar1 );
MPRINT(EM_ASSESS):   MNPROBS ( DECILE) = SUM (MNPROBS ( DECILE), P_DepVar1 * _WEIGHT);
MPRINT(EM_ASSESS):   NUMOBSS ( DECILE) = NUMOBSS ( DECILE) + _WEIGHT;
MPRINT(EM_ASSESS):   NUMRESPS ( DECILE) = NUMRESPS ( DECILE) + _MEANTARGET * _WEIGHT;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ outside of do loop, Area for final ROC;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   RANKDELTA = (ROUND ( _FREQ_ ) + 1) / 2;
MPRINT(EM_ASSESS):   RANK = UNTIEDRANK + RANKDELTA;
MPRINT(EM_ASSESS):   DROP RANK ;
MPRINT(EM_ASSESS):   SUMRANK1 + RANK * ROUND (_MEANTARGET * _FREQ_, .0000001);
MPRINT(EM_ASSESS):   UNTIEDRANK + ROUND (_FREQ_, .00000001);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Area For ROC Curve;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DO _K = 1 TO 100;
MPRINT(EM_ASSESS):   IF P_DepVar1 * 100 >= _K THEN DO;
MPRINT(EM_ASSESS):   TRUEPOSX ( _K ) + _FREQ_ * _MEANTARGET ;
MPRINT(EM_ASSESS):   FALSEPOSX ( _K ) + _FREQ_ * (1 - _MEANTARGET) ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   TRUENEGX ( _K ) + _FREQ_ * ( 1 - _MEANTARGET) ;
MPRINT(EM_ASSESS):   FALSENEGX ( _K ) + _FREQ_ * _MEANTARGET ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   SLOT = MIN (MAX (CEIL (P_DepVar1 * 100), 1), 100) ;
MPRINT(EM_ASSESS):   DROP SLOT;
MPRINT(EM_ASSESS):   FIRSTIN ( SLOT ) = MIN ( FIRSTIN ( SLOT ), P_DepVar1);
MPRINT(EM_ASSESS):   LASTIN ( SLOT ) = MAX ( LASTIN ( SLOT ), P_DepVar1);
MPRINT(EM_ASSESS):   _EVENTS ( SLOT) = _EVENTS ( SLOT) + _FREQ_ * _MEANTARGET;
MPRINT(EM_ASSESS):   NONEVENTS ( SLOT) = NONEVENTS ( SLOT) + _FREQ_ * (1 - _MEANTARGET);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ START OF OUTDIST IN BINARY CASE MAIN DATA STEP ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   SCR_MNPROBS ( SLOT ) = SUM (SCR_MNPROBS (SLOT), P_DepVar1 * _FREQ_ );
MPRINT(EM_ASSESS):   SCR_MINPROBS ( SLOT ) = MIN (SCR_MINPROBS (SLOT), P_DepVar1 );
MPRINT(EM_ASSESS):   SCR_MAXPROBS ( SLOT ) = MAX (SCR_MAXPROBS (SLOT), P_DepVar1 );
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ End of Outdist in Binary case main DATA STEP ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   PUT //;
MPRINT(EM_ASSESS):   DO K = 1 TO 20;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LENGTH EVENTVALUE $ 32;
MPRINT(EM_ASSESS):   RETAIN EVENTVALUE "1" ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ......... Start of EOF area of BINARY processing of main data set ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SUMRANK1", SUMRANK1);
MPRINT(EM_ASSESS):   LENGTH DATAROLE $ 10;
MPRINT(EM_ASSESS):   RETAIN DATAROLE "VALIDATE" ;
MPRINT(EM_ASSESS):   RETAIN OVLMIN 0.0000734508 OVLMAX 1 ;
MPRINT(EM_ASSESS):   DROP OVLMIN OVLMAX ;
MPRINT(EM_ASSESS):   C_NUMOBS = 0;
MPRINT(EM_ASSESS):   C_NUM_RESP = 0;
MPRINT(EM_ASSESS):   C_NUM_NONRESP = 0;
MPRINT(EM_ASSESS):   C_P_RESP = 0;
MPRINT(EM_ASSESS):   P_CAPT_RESP = 0;
MPRINT(EM_ASSESS):   C_P_CAPT_RESP = 0;
MPRINT(EM_ASSESS):   PREVIOUSPROFIT = 0;
MPRINT(EM_ASSESS):   MAXPROFIT = 0;
MPRINT(EM_ASSESS):   _KS_BIN_ = 0;
MPRINT(EM_ASSESS):   DROP _KS_BIN_;
MPRINT(EM_ASSESS):   AVGNUMRESP = _NEVENTS / 20;
MPRINT(EM_ASSESS):   BASERESP = 100 * RESPRATE;
MPRINT(EM_ASSESS):   BASERESPC = BASERESP;
MPRINT(EM_ASSESS):   BASECAP = 100 / 20;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................Start OF Gainschart = Outranks Area;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   _KS_BIN_PROB = 0;
MPRINT(EM_ASSESS):   DO GROUP = 20 TO 1 BY -1;
 
MPRINT(EM_ASSESS):   BASECAPC + BASECAP;
MPRINT(EM_ASSESS):   PERCENTILE = GROUP * (100 / 20);
MPRINT(EM_ASSESS):   MINPROB = MINPROBS ( GROUP);
MPRINT(EM_ASSESS):   MAXPROB = MAXPROBS ( GROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB" || LEFT ( PUT (GROUP, 3.)), MINPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB" || LEFT ( PUT (GROUP, 3.)), MAXPROB);
MPRINT(EM_ASSESS):   NUMOBS = NUMOBSS ( GROUP);
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN MNPROB = MNPROBS ( GROUP) / NUMOBS;
MPRINT(EM_ASSESS):   ELSE MNPROB = .;
MPRINT(EM_ASSESS):   C_NUMOBS = SUM (NUMOBS, C_NUMOBS);
MPRINT(EM_ASSESS):   NUMRESP = NUMRESPS ( GROUP);
MPRINT(EM_ASSESS):   NUMNONRESP = NUMOBS - NUMRESP;
MPRINT(EM_ASSESS):   C_AVGNUM_RESP + AVGNUMRESP;
MPRINT(EM_ASSESS):   IF C_NUMOBS <= _NEVENTS THEN DO;
MPRINT(EM_ASSESS):   BESTNUMEVENTS = NUMOBS;
MPRINT(EM_ASSESS):   BESTCAPC = C_NUMOBS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   BASEEVENTS = _NEVENTS / 20;
MPRINT(EM_ASSESS):   BASENONEVENTS = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   FLAG + 1;
MPRINT(EM_ASSESS):   DROP FLAG;
MPRINT(EM_ASSESS):   BESTNUMEVENTS = _NEVENTS - C_NUMOBS + NUMOBS;
MPRINT(EM_ASSESS):   IF FLAG > 1 THEN BESTNUMEVENTS = 0;
MPRINT(EM_ASSESS):   BESTCAPC = 100;
MPRINT(EM_ASSESS):   IF C_NUMOBS - _NEVENTS <= NUMOBS THEN DO;
MPRINT(EM_ASSESS):   BASEEVENTS = C_NUMOBS - _NEVENTS;
MPRINT(EM_ASSESS):   BASENONEVENTS = NUMOBS - C_NUMOBS + _NEVENTS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BASEEVENTS = 0;
MPRINT(EM_ASSESS):   BASENONEVENTS = NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   BESTCAP = BESTNUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   BESTLIFT = BESTNUMEVENTS / AVGNUMRESP;
MPRINT(EM_ASSESS):   C_BESTNUMEVENTS + BESTNUMEVENTS;
MPRINT(EM_ASSESS):   DROP C_BESTNUMEVENTS;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN BESTLIFTC = C_BESTNUMEVENTS / (_NEVENTS / 1018 *
C_NUMOBS);
MPRINT(EM_ASSESS):   ELSE BESTLIFTC = .;
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BESTRESP = BESTNUMEVENTS * 100 / NUMOBS;
MPRINT(EM_ASSESS):   P_RESP = NUMRESP * 100 / NUMOBS;
MPRINT(EM_ASSESS):   P_NONRESP = NUMNONRESP * 100 / NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTRESP = .;
MPRINT(EM_ASSESS):   P_RESP = .;
MPRINT(EM_ASSESS):   P_NONRESP = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BESTRESPC = C_BESTNUMEVENTS * 100 / C_NUMOBS;
MPRINT(EM_ASSESS):   BESTGAIN = MAX (0, ((C_BESTNUMEVENTS / C_NUMOBS ) / ( AVGNUMRESP /
NUMOBS) - 1) * 100);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTRESPC = .;
MPRINT(EM_ASSESS):   BESTGAIN = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF NUMNONRESP > 0 THEN ODDS = NUMRESP / NUMNONRESP;
MPRINT(EM_ASSESS):   ELSE ODDS = .;
MPRINT(EM_ASSESS):   C_NUM_RESP = SUM (C_NUM_RESP , NUMRESP );
MPRINT(EM_ASSESS):   C_NUM_NONRESP = SUM (C_NUM_NONRESP, NUMNONRESP );
MPRINT(EM_ASSESS):   IF C_NUM_NONRESP > 0 THEN C_ODDS = C_NUM_RESP / C_NUM_NONRESP;
MPRINT(EM_ASSESS):   ELSE C_ODDS = .;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   C_P_RESP = C_NUM_RESP * 100 / C_NUMOBS;
MPRINT(EM_ASSESS):   GAIN = ABS(100 * (((C_NUM_RESP / C_NUMOBS ) / (_NEVENTS / 1018)) - 1));
MPRINT(EM_ASSESS):   BASEGAIN = 100 * (( (C_AVGNUM_RESP / C_NUMOBS) / ( AVGNUMRESP / NUMOBS))
- 1);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   GAIN = .;
MPRINT(EM_ASSESS):   BASEGAIN = .;
MPRINT(EM_ASSESS):   C_P_RESP = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF BASEGAIN <= 0 THEN BASEGAIN = 0;
MPRINT(EM_ASSESS):   P_CAPT_RESP = NUMRESP * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   P_CAPT_NONRESP = NUMNONRESP * 100 / ( 1018 - _NEVENTS);
MPRINT(EM_ASSESS):   C_P_CAPT_RESP = C_NUM_RESP * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   C_P_CAPT_NONRESP = C_NUM_NONRESP * 100 / ( 1018 - _NEVENTS);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Area For Binned KS in Outranks area;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   _DIFFERENCE = C_P_CAPT_RESP - C_P_CAPT_NONRESP ;
MPRINT(EM_ASSESS):   IF _KS_BIN_ < _DIFFERENCE THEN DO;
MPRINT(EM_ASSESS):   _KS_BIN_ = _DIFFERENCE;
MPRINT(EM_ASSESS):   _KS_BIN_PROB = MINPROB + (MAXPROB - MINPROB) / 2 ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LIFT = P_RESP * .01 / RESPRATE ;
MPRINT(EM_ASSESS):   C_LIFT = C_P_RESP * .01 / RESPRATE;
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BASELIFT = AVGNUMRESP / ( RESPRATE * NUMOBS );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE BASELIFT = .;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN CBASELIFT = C_AVGNUM_RESP / (RESPRATE * C_NUMOBS);
MPRINT(EM_ASSESS):   ELSE CBASELIFT = .;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ WITHIN DO LOOP FOR OUTRANKS;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   BIN = 20 + 1 - GROUP;
MPRINT(EM_ASSESS):   PERCENTILE = BIN * (100 / 20);
MPRINT(EM_ASSESS):   B_C_P_RESP = PERCENTILE;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPRANK ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................ END OF GAINSCHART = OUTRANKS AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROFITGROUP" , MAXPROFITGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROFIT" , MAXPROFIT );
MPRINT(EM_ASSESS):   KS_ABSDIFF = 0 ;
MPRINT(EM_ASSESS):   MINPRECTPR = 9999;
MPRINT(EM_ASSESS):   Y0 = 1 - RESPRATE;
MPRINT(EM_ASSESS):   Y1 = RESPRATE;
MPRINT(EM_ASSESS):   MAXMUTUAL = 0;
MPRINT(EM_ASSESS):   DROP MAXMUTUAL KSPROB Y0 Y1 KS_ABSDIFF MINPRECTPR;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .....................About to start Processing Outroc ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................... Finished Processing Outroc ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .............. Outdist ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   BIN = 20 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS96 - EVENTS100 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS96 - NONEVENTS100);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB96 -
SCR_MNPROB100) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB96 - SCR_MINPROB100) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB96 - SCR_MAXPROB100) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 20;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 19 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS91 - EVENTS95 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS91 - NONEVENTS95);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB91 -
SCR_MNPROB95) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB91 - SCR_MINPROB95) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB91 - SCR_MAXPROB95) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 19;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 18 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS86 - EVENTS90 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS86 - NONEVENTS90);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB86 -
SCR_MNPROB90) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB86 - SCR_MINPROB90) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB86 - SCR_MAXPROB90) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 18;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 17 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS81 - EVENTS85 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS81 - NONEVENTS85);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB81 -
SCR_MNPROB85) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB81 - SCR_MINPROB85) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB81 - SCR_MAXPROB85) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 17;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 16 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS76 - EVENTS80 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS76 - NONEVENTS80);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB76 -
SCR_MNPROB80) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB76 - SCR_MINPROB80) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB76 - SCR_MAXPROB80) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 16;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 15 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS71 - EVENTS75 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS71 - NONEVENTS75);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB71 -
SCR_MNPROB75) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB71 - SCR_MINPROB75) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB71 - SCR_MAXPROB75) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 15;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 14 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS66 - EVENTS70 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS66 - NONEVENTS70);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB66 -
SCR_MNPROB70) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB66 - SCR_MINPROB70) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB66 - SCR_MAXPROB70) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 14;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 13 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS61 - EVENTS65 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS61 - NONEVENTS65);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB61 -
SCR_MNPROB65) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB61 - SCR_MINPROB65) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB61 - SCR_MAXPROB65) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 13;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 12 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS56 - EVENTS60 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS56 - NONEVENTS60);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB56 -
SCR_MNPROB60) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB56 - SCR_MINPROB60) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB56 - SCR_MAXPROB60) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 12;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 11 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS51 - EVENTS55 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS51 - NONEVENTS55);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB51 -
SCR_MNPROB55) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB51 - SCR_MINPROB55) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB51 - SCR_MAXPROB55) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 11;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 10 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS46 - EVENTS50 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS46 - NONEVENTS50);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB46 -
SCR_MNPROB50) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB46 - SCR_MINPROB50) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB46 - SCR_MAXPROB50) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 10;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 9 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS41 - EVENTS45 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS41 - NONEVENTS45);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB41 -
SCR_MNPROB45) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB41 - SCR_MINPROB45) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB41 - SCR_MAXPROB45) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 9;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 8 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS36 - EVENTS40 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS36 - NONEVENTS40);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB36 -
SCR_MNPROB40) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB36 - SCR_MINPROB40) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB36 - SCR_MAXPROB40) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 8;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 7 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS31 - EVENTS35 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS31 - NONEVENTS35);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB31 -
SCR_MNPROB35) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB31 - SCR_MINPROB35) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB31 - SCR_MAXPROB35) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 7;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 6 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS26 - EVENTS30 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS26 - NONEVENTS30);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB26 -
SCR_MNPROB30) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB26 - SCR_MINPROB30) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB26 - SCR_MAXPROB30) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 6;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 5 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS21 - EVENTS25 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS21 - NONEVENTS25);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB21 -
SCR_MNPROB25) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB21 - SCR_MINPROB25) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB21 - SCR_MAXPROB25) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 5;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 4 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS16 - EVENTS20 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS16 - NONEVENTS20);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB16 -
SCR_MNPROB20) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB16 - SCR_MINPROB20) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB16 - SCR_MAXPROB20) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 4;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 3 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS11 - EVENTS15 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS11 - NONEVENTS15);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB11 -
SCR_MNPROB15) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB11 - SCR_MINPROB15) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB11 - SCR_MAXPROB15) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 3;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 2 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS6 - EVENTS10 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS6 - NONEVENTS10);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB6 -
SCR_MNPROB10) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB6 - SCR_MINPROB10) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB6 - SCR_MAXPROB10) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 2;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 1 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS1 - EVENTS5 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS1 - NONEVENTS5);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB1 - SCR_MNPROB5)
/ NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB1 - SCR_MINPROB5) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB1 - SCR_MAXPROB5) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 1;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("KSPROB" , PUT (KSPROB, 5.3 ) );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("_KS_BIN_PROB" , _KS_BIN_PROB );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("_KS_BIN_" , _KS_BIN_ / 100 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("KSDIFF" , KS_ABSDIFF );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PRECTPR" , PRECTPR );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXMUTUALPROB" , MAXMUTUALPROB);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LABEL __EVENT__ = "Event" DECILE = "Depth" BIN = "Bin" NUMOBS = "Number
of Observations" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * RUN for large data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST;
MPRINT(EM_ASSESS):   DELETE _AUXEVENTNAME;
MPRINT(EM_ASSESS):   QUIT;
 
MPRINT(EM_ASSESS):   OPTION NOCENTER LS = 95;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Report Vars Area.;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start OF Outdist Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPSCOREDIST;
MPRINT(EM_ASSESS):   RENAME MODELSCORE = SCORE UPPERPROB = UPPOSTERIOR SCR_CP_EVENTS =
CUMULATIVEPERCENTAGEOFEVENTS SCR_CP_NONEVENTS = CUMULATIVEPERCENTAGEOFNONEVENTS EVENTVALUE =
EVENT LOWERPROB = LOWPOSTERIOR NUMOBSINGROUP = N PERCOBSINGROUP = PERCENTAGE SCR_MINPROB =
_MINP_ SCR_MAXPROB = _MAXP_ SCR_MNPROB = _MEANP_ RANGE = P_LABEL C_PERCOBSINGROUP =
CUMULATIVEPERCENTAGE SCR_NUMEVENTS = NUMBEROFEVENTS SCR_NUMNONEVENTS = NUMBEROFNONEVENTS
SCR_P_EVENTS = PERCENTAGEOFEVENTS SCR_P_NONEVENTS = PERCENTAGEOFNONEVENTS ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... OUTDIST MODIFICATION LABEL AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL BIN = "Bin" N = "Number of Observations" P_LABEL = "Posterior
Probability Range" EVENT = "Event" LOWPOSTERIOR = "Lower Bound Posterior Probability"
PERCENTAGEOFEVENTS = "Percentage of Events" CUMULATIVEPERCENTAGEOFNONEVENTS = "Cumulative
Percentage of Nonevents" CUMULATIVEPERCENTAGE = "Cumulative Percentage" PERCENTAGEOFEVENTS =
"Percentage of Events" PERCENTAGEOFNONEVENTS = "Percentage of Nonevents"
CUMULATIVEPERCENTAGEOFEVENTS = "Cumulative Percentage of Events" UPPOSTERIOR = "Upper Bound
Posterior Probability" NUMBEROFEVENTS = "Number of Events" PERCENTAGE = "Percentage"
NUMBEROFNONEVENTS = "Number of Nonevents" _MEANP_ = "Mean Posterior Probability" _MINP_ = "Min
Posterior Probability" _MAXP_ = "Max Posterior Probability" SCORE = "Model Score" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   SET WORK._TEMPSCOREDIST (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........... END OF OUTDIST MODIFICATION;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start of OUTRANKS Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPRANK;
MPRINT(EM_ASSESS):   RENAME __EVENT__ = EVENT P_RESP = RESP C_P_CAPT_RESP = CAPC P_CAPT_RESP =
CAP NUMNONRESP = NUMNEVENT NUMRESP = NUMEVENT BASEEVENTS = BASENUMBEROFEVENTS BESTNUMEVENTS =
BESTNUMBEROFEVENTS MAXPROB = _MAXP_ MINPROB = _MINP_ CBASELIFT = BASELIFTC C_LIFT = LIFTC
MNPROB = _MEANP_ PERCENTILE = DECILE NUMOBS = N NUMEVENT = NUMBEROFEVENTS C_P_RESP = RESPC ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................. OUTRANKS;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL _MAXP_ = "Max Posterior Probability" _MINP_ = "Min Posterior
Probability" _MEANP_ = "Mean Posterior Probability" BASECAP = "Baseline % Captured Response"
BASECAPC = "Baseline Cumulative % Captured Response" BASENUMBEROFEVENTS = "Baseline Number of
Events" BASEGAIN = "Baseline Gain" BASELIFT = "Baseline Lift" BASELIFTC = "Baseline Cumulative
Lift" BASERESP = "Baseline % Response" BASERESPC = "Baseline Cumulative % Response" BASELIFTC
= "Baseline Cumulative Lift" BESTCAP = "Best % Captured Response" BESTCAPC = "Best Cumulative
% Captured Response" BESTGAIN = "Best Gain" BESTRESP = "Best % Response" BESTRESPC = "Best
Cumulative % Response" BESTLIFT = "Best Lift" BESTLIFTC = "Best Cumulative Lift"
BESTNUMBEROFEVENTS = "Best Number of Events" CAP = "% Captured Response" CAPC = "Cumulative %
Captured Response" DECILE = "Depth" GAIN = "Gain" LIFT = "Lift" LIFTC = "Cumulative Lift"
NUMNEVENT = "Number of Nonevents" N = "Number of Observations" EVENT = "Event" RESPC =
"Cumulative % Response" NUMBEROFEVENTS = "Number of Events" RESP = "% Response" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK;
MPRINT(EM_ASSESS):   SET WORK._TEMPRANK (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   proc datasets lib=work nolist;
MPRINT(EM_ASSESS):   delete _ea_tmpdata;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_ASSESS):   quit;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   OPTION ERRORS = 20;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):    data WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   retain target "DepVar";
MPRINT(EM_DIAGRAM):   retain TARGETLABEL 'DepVar';
MPRINT(EM_DIAGRAM):   retain dataRole "VALIDATE";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural43_EMRANK;
MPRINT(EM_DIAGRAM):   length target $32;
MPRINT(EM_DIAGRAM):   length TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   length dataRole $20;
MPRINT(EM_DIAGRAM):   length EVENT $32;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural43_EMRANK WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   retain target "DepVar";
MPRINT(EM_DIAGRAM):   retain TARGETLABEL 'DepVar';
MPRINT(EM_DIAGRAM):   retain dataRole "VALIDATE";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural43_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   length target $32;
MPRINT(EM_DIAGRAM):   length TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   length dataRole $20;
MPRINT(EM_DIAGRAM):   length EVENT $32;
MPRINT(EM_DIAGRAM):   length P_LABEL $9;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural43_EMSCOREDIST WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   run;
510238     %let _cn = %sysfunc(getoption(CENTER));
510239     options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
510240     proc print data=EMWS8.AutoNeural43_EMREPORTFIT noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural43_EMREPORTFIT noobs label;
510241     var STAT LABEL TRAIN
510242     VALIDATE
510243     ;
MPRINT(EM_DIAGRAM):   var STAT LABEL TRAIN VALIDATE ;
510244     by TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by TARGET TARGETLABEL;
510245     title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
510246     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_fitstat_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Fit Statistics";
MPRINT(EM_DIAGRAM):   run;
510247     run;
 
NOTE: There were 21 observations read from the data set EMWS8.AUTONEURAL43_EMREPORTFIT.
NOTE: The PROCEDURE PRINT printed page 471.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
510248     title10;
MPRINT(EM_DIAGRAM):   title10;
510249     options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
510250     proc sort data=EMWS8.AutoNeural43_EMCLASSIFICATION nothreads;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS8.AutoNeural43_EMCLASSIFICATION nothreads;
510251     by DATAROLE TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET TARGETLABEL;
510252     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 7 observations read from the data set EMWS8.AUTONEURAL43_EMCLASSIFICATION.
NOTE: The data set EMWS8.AUTONEURAL43_EMCLASSIFICATION has 7 observations and 12 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
510253     %let _cn = %sysfunc(getoption(CENTER));
510254     options nocenter;
MPRINT(EM_DIAGRAM):   options nocenter;
510255     proc print data=EMWS8.AutoNeural43_EMCLASSIFICATION noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural43_EMCLASSIFICATION noobs label;
510256     var from into pct_row pct_col count percent
510257     ;
MPRINT(EM_DIAGRAM):   var from into pct_row pct_col count percent ;
510258     by DATAROLE TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET TARGETLABEL;
510259     label FROM = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel ,     NOQUOTE))";
MPRINT(EM_DIAGRAM):   label FROM = "Target";
510260     label INTO = "%sysfunc(sasmsg(sashelp.dmine, rpt_outcome_vlabel ,    NOQUOTE))";
MPRINT(EM_DIAGRAM):   label INTO = "Outcome";
510261     label PCT_ROW = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetpct_vlabel ,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PCT_ROW = "Target Percentage";
510262     label PCT_COL = "%sysfunc(sasmsg(sashelp.dmine, rpt_outcomepct_vlabel , NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PCT_COL = "Outcome Percentage";
510263     label COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel ,      NOQUOTE))";
MPRINT(EM_DIAGRAM):   label COUNT = "Frequency Count";
510264     label PERCENT = "%sysfunc(sasmsg(sashelp.dmine, rpt_totalpct_vlabel ,   NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PERCENT = "Total Percentage";
510265     where _TYPE_='PREDICTION';
MPRINT(EM_DIAGRAM):   where _TYPE_='PREDICTION';
510266     title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
510267     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_classification_title    , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Classification Table";
MPRINT(EM_DIAGRAM):   run;
510268     run;
 
NOTE: There were 7 observations read from the data set EMWS8.AUTONEURAL43_EMCLASSIFICATION.
      WHERE _TYPE_='PREDICTION';
NOTE: The PROCEDURE PRINT printed page 472.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
510269     title9;
MPRINT(EM_DIAGRAM):   title9;
510270     title10;
MPRINT(EM_DIAGRAM):   title10;
510271     options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
510272     %let _cn = %sysfunc(getoption(CENTER));
510273     options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
510274     data EMWS8.AutoNeural43_EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural43_EMEVENTREPORT;
510275     length DATAROLE TARGET $32 TARGETLABEL $200 FALSENEVENT TRUENEVENT FALSEEVENT
510275   ! TRUEEVENT 8;
MPRINT(EM_DIAGRAM):   length DATAROLE TARGET $32 TARGETLABEL $200 FALSENEVENT TRUENEVENT
FALSEEVENT TRUEEVENT 8;
510276     label DATAROLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))"
510276   !  TARGET = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel ,      NOQUOTE))"
510276   ! TARGETLABEL = "%sysfunc(sasmsg(sashelp.dmine, meta_targetlabel_vlabel, NOQUOTE))"
510276   ! FALSEEVENT
510277     = "%sysfunc(sasmsg(sashelp.dmine, rpt_falseevent_vlabel ,  NOQUOTE))" FALSENEVENT =
510277   ! "%sysfunc(sasmsg(sashelp.dmine, rpt_falsenevent_vlabel , NOQUOTE))" TRUEEVENT =
510277   ! "%sysfunc(sasmsg(sashelp.dmine, rpt_trueevent_vlabel ,   NOQUOTE))" TRUENEVENT =
510278        "%sysfunc(sasmsg(sashelp.dmine, rpt_truenevent_vlabel ,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label DATAROLE = "Data Role" TARGET = "Target" TARGETLABEL = "Target
Label" FALSEEVENT = "False Positive" FALSENEVENT = "False Negative" TRUEEVENT = "True
Positive" TRUENEVENT = "True Negative";
510279     FALSEEVENT=0;
MPRINT(EM_DIAGRAM):   FALSEEVENT=0;
510280     FALSENEVENT=0;
MPRINT(EM_DIAGRAM):   FALSENEVENT=0;
510281     TRUEEVENT=0;
MPRINT(EM_DIAGRAM):   TRUEEVENT=0;
510282     TRUENEVENT=0;
MPRINT(EM_DIAGRAM):   TRUENEVENT=0;
510283     set EMWS8.AutoNeural43_EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural43_EMEVENTREPORT;
510284     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set EMWS8.AUTONEURAL43_EMEVENTREPORT.
NOTE: The data set EMWS8.AUTONEURAL43_EMEVENTREPORT has 2 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
510285     proc print data=EMWS8.AutoNeural43_EMEVENTREPORT noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural43_EMEVENTREPORT noobs label;
510286     title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
510287     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_eventtable_title    , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Event Classification Table";
MPRINT(EM_DIAGRAM):   by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL;
MPRINT(EM_DIAGRAM):   run;
510288     by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL;
510289     run;
 
NOTE: There were 2 observations read from the data set EMWS8.AUTONEURAL43_EMEVENTREPORT.
NOTE: The PROCEDURE PRINT printed page 473.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
510290     title10;
MPRINT(EM_DIAGRAM):   title10;
510291     options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
510292     proc datasets library=EMWS8 nolist;
MPRINT(EM_DIAGRAM):    proc datasets library=EMWS8 nolist;
510293     modify AutoNeural43_EMRANK;
MPRINT(EM_DIAGRAM):   modify AutoNeural43_EMRANK;
MPRINT(EM_DIAGRAM):   label target = "Target Variable";
510294     label target = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetvar_vlabel ,   NOQUOTE))";
MPRINT(EM_DIAGRAM):   label datarole = "Data Role";
510295     label datarole = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))"
510295   ! ;
MPRINT(EM_DIAGRAM):   run;
510296     run;
 
NOTE: MODIFY was successful for EMWS8.AUTONEURAL43_EMRANK.DATA.
510297     quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.15 seconds
      cpu time            0.15 seconds
 
 
510298     %let _cn = %sysfunc(getoption(CENTER));
510299     options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
510300     proc print data=EMWS8.AutoNeural43_EMRANK label noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural43_EMRANK label noobs;
510301     var
510302     decile gain lift liftc resp respc N _meanP_;
MPRINT(EM_DIAGRAM):   var decile gain lift liftc resp respc N _meanP_;
510303     by
510304     notsorted DATAROLE
510305     notsorted TARGET
510306     notsorted TARGETLABEL
510307     ;
MPRINT(EM_DIAGRAM):   by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL ;
510308     title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
510309     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_scoreranking_title , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Assessment Score Rankings";
MPRINT(EM_DIAGRAM):   run;
510310     run;
 
NOTE: There were 40 observations read from the data set EMWS8.AUTONEURAL43_EMRANK.
NOTE: The PROCEDURE PRINT printed page 474.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
510311     title10;
MPRINT(EM_DIAGRAM):   title10;
510312     options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
510313     proc datasets library=EMWS8 nolist;
MPRINT(EM_DIAGRAM):    proc datasets library=EMWS8 nolist;
510314     modify AutoNeural43_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   modify AutoNeural43_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   label target = "Target Variable";
510315     label target = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetvar_vlabel ,
510315   ! NOQUOTE))";
MPRINT(EM_DIAGRAM):   label datarole = "Data Role";
510316     label datarole = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))"
510316   ! ;
MPRINT(EM_DIAGRAM):   run;
510317     run;
 
NOTE: MODIFY was successful for EMWS8.AUTONEURAL43_EMSCOREDIST.DATA.
510318     quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.17 seconds
      cpu time            0.17 seconds
 
 
MPRINT(EM_DIAGRAM):    options nocenter;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural43_EMSCOREDIST label noobs;
MPRINT(EM_DIAGRAM):   var p_label numberOfEvents numberOfNonEvents _meanp_ percentage;
MPRINT(EM_DIAGRAM):   by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL ;
MPRINT(EM_DIAGRAM):   where TARGET in( "DepVar" );
MPRINT(EM_DIAGRAM):   title9 ' ';
MPRINT(EM_DIAGRAM):   title10 "Assessment Score Distribution";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   title10;
MPRINT(EM_DIAGRAM):   options NOCENTER;
MPRINT(EM_DIAGRAM):   proc printto;
MPRINT(EM_DIAGRAM):   run;
