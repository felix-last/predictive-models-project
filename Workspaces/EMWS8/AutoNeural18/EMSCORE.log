MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "28. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "09.44 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                28. April 2016
Time:                09.44 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O1ZCABQ6 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural18\EMSCORE.out" encoding="UTF-8" 
NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O1ZCABQ6 new;
MPRINT(EM_DIAGRAM):   run;
1674806    filename emflow
1674806  ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural18\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural18\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * AutoNeural18: Scoring DATA data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1674807    *------------------------------------------------------------*;
1674808    * AutoNeural18: Scoring DATA data;
1674809    *------------------------------------------------------------*;
1674810    data EMWS8.AutoNeural18_TRAIN
1674811    / view=EMWS8.AutoNeural18_TRAIN
1674812    ;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural18_TRAIN / view=EMWS8.AutoNeural18_TRAIN ;
1674813    set EMWS8.PRINCOMP_TRAIN
1674814    ;
MPRINT(EM_DIAGRAM):   set EMWS8.PRINCOMP_TRAIN ;
1674815    %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural18\EMFLOWSCORE.sas.
1674816   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1674817   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1674818   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1674819   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1674820   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1674821   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1674822   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1674823   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1674824   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1674825   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1674826   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1674827   +LENGTH _WARN_ $4
1674828   +      F_DepVar  $ 12
1674829   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1674830   +      label S_PC_1 = 'Standard: PC_1' ;
MPRINT(EM_DIAGRAM):   label S_PC_1 = 'Standard: PC_1' ;
1674831   +
1674832   +      label S_PC_10 = 'Standard: PC_10' ;
MPRINT(EM_DIAGRAM):   label S_PC_10 = 'Standard: PC_10' ;
1674833   +
1674834   +      label S_PC_11 = 'Standard: PC_11' ;
MPRINT(EM_DIAGRAM):   label S_PC_11 = 'Standard: PC_11' ;
1674835   +
1674836   +      label S_PC_12 = 'Standard: PC_12' ;
MPRINT(EM_DIAGRAM):   label S_PC_12 = 'Standard: PC_12' ;
1674837   +
1674838   +      label S_PC_13 = 'Standard: PC_13' ;
MPRINT(EM_DIAGRAM):   label S_PC_13 = 'Standard: PC_13' ;
1674839   +
1674840   +      label S_PC_14 = 'Standard: PC_14' ;
MPRINT(EM_DIAGRAM):   label S_PC_14 = 'Standard: PC_14' ;
1674841   +
1674842   +      label S_PC_15 = 'Standard: PC_15' ;
MPRINT(EM_DIAGRAM):   label S_PC_15 = 'Standard: PC_15' ;
1674843   +
1674844   +      label S_PC_16 = 'Standard: PC_16' ;
MPRINT(EM_DIAGRAM):   label S_PC_16 = 'Standard: PC_16' ;
1674845   +
1674846   +      label S_PC_17 = 'Standard: PC_17' ;
MPRINT(EM_DIAGRAM):   label S_PC_17 = 'Standard: PC_17' ;
1674847   +
1674848   +      label S_PC_2 = 'Standard: PC_2' ;
MPRINT(EM_DIAGRAM):   label S_PC_2 = 'Standard: PC_2' ;
1674849   +
1674850   +      label S_PC_3 = 'Standard: PC_3' ;
MPRINT(EM_DIAGRAM):   label S_PC_3 = 'Standard: PC_3' ;
1674851   +
1674852   +      label S_PC_4 = 'Standard: PC_4' ;
MPRINT(EM_DIAGRAM):   label S_PC_4 = 'Standard: PC_4' ;
1674853   +
1674854   +      label S_PC_5 = 'Standard: PC_5' ;
MPRINT(EM_DIAGRAM):   label S_PC_5 = 'Standard: PC_5' ;
1674855   +
1674856   +      label S_PC_6 = 'Standard: PC_6' ;
MPRINT(EM_DIAGRAM):   label S_PC_6 = 'Standard: PC_6' ;
1674857   +
1674858   +      label S_PC_7 = 'Standard: PC_7' ;
MPRINT(EM_DIAGRAM):   label S_PC_7 = 'Standard: PC_7' ;
1674859   +
1674860   +      label S_PC_8 = 'Standard: PC_8' ;
MPRINT(EM_DIAGRAM):   label S_PC_8 = 'Standard: PC_8' ;
1674861   +
1674862   +      label S_PC_9 = 'Standard: PC_9' ;
MPRINT(EM_DIAGRAM):   label S_PC_9 = 'Standard: PC_9' ;
1674863   +
1674864   +      label S_Year_Birth = 'Standard: Year_Birth' ;
MPRINT(EM_DIAGRAM):   label S_Year_Birth = 'Standard: Year_Birth' ;
1674865   +
1674866   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
1674867   +
1674868   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
1674869   +
1674870   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
1674871   +
1674872   +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
1674873   +
1674874   +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
1674875   +
1674876   +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
1674877   +
1674878   +      label H1x3_1 = 'Hidden: H1x3_=1' ;
MPRINT(EM_DIAGRAM):   label H1x3_1 = 'Hidden: H1x3_=1' ;
1674879   +
1674880   +      label H1x3_2 = 'Hidden: H1x3_=2' ;
MPRINT(EM_DIAGRAM):   label H1x3_2 = 'Hidden: H1x3_=2' ;
1674881   +
1674882   +      label H1x3_3 = 'Hidden: H1x3_=3' ;
MPRINT(EM_DIAGRAM):   label H1x3_3 = 'Hidden: H1x3_=3' ;
1674883   +
1674884   +      label H1x4_1 = 'Hidden: H1x4_=1' ;
MPRINT(EM_DIAGRAM):   label H1x4_1 = 'Hidden: H1x4_=1' ;
1674885   +
1674886   +      label H1x4_2 = 'Hidden: H1x4_=2' ;
MPRINT(EM_DIAGRAM):   label H1x4_2 = 'Hidden: H1x4_=2' ;
1674887   +
1674888   +      label H1x4_3 = 'Hidden: H1x4_=3' ;
MPRINT(EM_DIAGRAM):   label H1x4_3 = 'Hidden: H1x4_=3' ;
1674889   +
1674890   +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
1674891   +
1674892   +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
1674893   +
1674894   +      label H2x1_3 = 'Hidden: H2x1_=3' ;
MPRINT(EM_DIAGRAM):   label H2x1_3 = 'Hidden: H2x1_=3' ;
1674895   +
1674896   +      label H2x2_1 = 'Hidden: H2x2_=1' ;
MPRINT(EM_DIAGRAM):   label H2x2_1 = 'Hidden: H2x2_=1' ;
1674897   +
1674898   +      label H2x2_2 = 'Hidden: H2x2_=2' ;
MPRINT(EM_DIAGRAM):   label H2x2_2 = 'Hidden: H2x2_=2' ;
1674899   +
1674900   +      label H2x2_3 = 'Hidden: H2x2_=3' ;
MPRINT(EM_DIAGRAM):   label H2x2_3 = 'Hidden: H2x2_=3' ;
1674901   +
1674902   +      label H2x3_1 = 'Hidden: H2x3_=1' ;
MPRINT(EM_DIAGRAM):   label H2x3_1 = 'Hidden: H2x3_=1' ;
1674903   +
1674904   +      label H2x3_2 = 'Hidden: H2x3_=2' ;
MPRINT(EM_DIAGRAM):   label H2x3_2 = 'Hidden: H2x3_=2' ;
1674905   +
1674906   +      label H2x3_3 = 'Hidden: H2x3_=3' ;
MPRINT(EM_DIAGRAM):   label H2x3_3 = 'Hidden: H2x3_=3' ;
1674907   +
1674908   +      label H3x1_1 = 'Hidden: H3x1_=1' ;
MPRINT(EM_DIAGRAM):   label H3x1_1 = 'Hidden: H3x1_=1' ;
1674909   +
1674910   +      label H3x1_2 = 'Hidden: H3x1_=2' ;
MPRINT(EM_DIAGRAM):   label H3x1_2 = 'Hidden: H3x1_=2' ;
1674911   +
1674912   +      label H3x1_3 = 'Hidden: H3x1_=3' ;
MPRINT(EM_DIAGRAM):   label H3x1_3 = 'Hidden: H3x1_=3' ;
1674913   +
1674914   +      label H3x2_1 = 'Hidden: H3x2_=1' ;
MPRINT(EM_DIAGRAM):   label H3x2_1 = 'Hidden: H3x2_=1' ;
1674915   +
1674916   +      label H3x2_2 = 'Hidden: H3x2_=2' ;
MPRINT(EM_DIAGRAM):   label H3x2_2 = 'Hidden: H3x2_=2' ;
1674917   +
1674918   +      label H3x2_3 = 'Hidden: H3x2_=3' ;
MPRINT(EM_DIAGRAM):   label H3x2_3 = 'Hidden: H3x2_=3' ;
1674919   +
1674920   +      label H4x1_1 = 'Hidden: H4x1_=1' ;
MPRINT(EM_DIAGRAM):   label H4x1_1 = 'Hidden: H4x1_=1' ;
1674921   +
1674922   +      label H4x1_2 = 'Hidden: H4x1_=2' ;
MPRINT(EM_DIAGRAM):   label H4x1_2 = 'Hidden: H4x1_=2' ;
1674923   +
1674924   +      label H4x1_3 = 'Hidden: H4x1_=3' ;
MPRINT(EM_DIAGRAM):   label H4x1_3 = 'Hidden: H4x1_=3' ;
1674925   +
1674926   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1674927   +
1674928   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1674929   +
1674930   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1674931   +
1674932   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1674933   +
1674934   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1674935   +
1674936   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1674937   +
1674938   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1674939   +
1674940   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1674941   +
1674942   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1674943   +*** Checking missing input Interval
1674944   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1674945   +
1674946   +IF NMISS(
1674947   +   PC_1 ,
1674948   +   PC_10 ,
1674949   +   PC_11 ,
1674950   +   PC_12 ,
1674951   +   PC_13 ,
1674952   +   PC_14 ,
1674953   +   PC_15 ,
1674954   +   PC_16 ,
1674955   +   PC_17 ,
1674956   +   PC_2 ,
1674957   +   PC_3 ,
1674958   +   PC_4 ,
1674959   +   PC_5 ,
1674960   +   PC_6 ,
1674961   +   PC_7 ,
1674962   +   PC_8 ,
1674963   +   PC_9 ,
1674964   +   Year_Birth   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( PC_1 , PC_10 , PC_11 , PC_12 , PC_13 , PC_14 , PC_15 , PC_16 , 
PC_17 , PC_2 , PC_3 , PC_4 , PC_5 , PC_6 , PC_7 , PC_8 , PC_9 , Year_Birth ) THEN DO;
1674965   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1674966   +
1674967   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1674968   +END;
MPRINT(EM_DIAGRAM):   END;
1674969   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1674970   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
1674971   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1674972   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1674973   +   S_PC_1  =  -3.567597872154E-15 +     0.29892739052271 * PC_1 ;
MPRINT(EM_DIAGRAM):   S_PC_1 = -3.567597872154E-15 + 0.29892739052271 * PC_1 ;
1674974   +   S_PC_10  = -6.0346468636081E-15 +     0.82173953858445 * PC_10 ;
MPRINT(EM_DIAGRAM):   S_PC_10 = -6.0346468636081E-15 + 0.82173953858445 * PC_10 ;
1674975   +   S_PC_11  =   6.055841017477E-15 +     0.85619046033275 * PC_11 ;
MPRINT(EM_DIAGRAM):   S_PC_11 = 6.055841017477E-15 + 0.85619046033275 * PC_11 ;
1674976   +   S_PC_12  = -3.9570415662911E-15 +     0.88816580619395 * PC_12 ;
MPRINT(EM_DIAGRAM):   S_PC_12 = -3.9570415662911E-15 + 0.88816580619395 * PC_12 ;
1674977   +   S_PC_13  =  1.4807903817941E-15 +     0.89679040249719 * PC_13 ;
MPRINT(EM_DIAGRAM):   S_PC_13 = 1.4807903817941E-15 + 0.89679040249719 * PC_13 ;
1674978   +   S_PC_14  = -6.1940871521205E-15 +     0.90336543119982 * PC_14 ;
MPRINT(EM_DIAGRAM):   S_PC_14 = -6.1940871521205E-15 + 0.90336543119982 * PC_14 ;
1674979   +   S_PC_15  =   -3.45147395417E-16 +     0.92997960877389 * PC_15 ;
MPRINT(EM_DIAGRAM):   S_PC_15 = -3.45147395417E-16 + 0.92997960877389 * PC_15 ;
1674980   +   S_PC_16  = -2.0832890955173E-15 +     0.95096832834142 * PC_16 ;
MPRINT(EM_DIAGRAM):   S_PC_16 = -2.0832890955173E-15 + 0.95096832834142 * PC_16 ;
1674981   +   S_PC_17  =  4.0710461992609E-15 +     0.99882451143041 * PC_17 ;
MPRINT(EM_DIAGRAM):   S_PC_17 = 4.0710461992609E-15 + 0.99882451143041 * PC_17 ;
1674982   +   S_PC_2  =  6.4589631283016E-15 +      0.5437311140029 * PC_2 ;
MPRINT(EM_DIAGRAM):   S_PC_2 = 6.4589631283016E-15 + 0.5437311140029 * PC_2 ;
1674983   +   S_PC_3  =  2.2833690425384E-15 +     0.55367740285547 * PC_3 ;
MPRINT(EM_DIAGRAM):   S_PC_3 = 2.2833690425384E-15 + 0.55367740285547 * PC_3 ;
1674984   +   S_PC_4  = -3.6725092169592E-15 +     0.63698127005552 * PC_4 ;
MPRINT(EM_DIAGRAM):   S_PC_4 = -3.6725092169592E-15 + 0.63698127005552 * PC_4 ;
1674985   +   S_PC_5  = -4.6355038408768E-15 +     0.66670299180006 * PC_5 ;
MPRINT(EM_DIAGRAM):   S_PC_5 = -4.6355038408768E-15 + 0.66670299180006 * PC_5 ;
1674986   +   S_PC_6  =  1.5846922792836E-15 +     0.70534791664737 * PC_6 ;
MPRINT(EM_DIAGRAM):   S_PC_6 = 1.5846922792836E-15 + 0.70534791664737 * PC_6 ;
1674987   +   S_PC_7  =  6.7268179657212E-16 +     0.74932361381713 * PC_7 ;
MPRINT(EM_DIAGRAM):   S_PC_7 = 6.7268179657212E-16 + 0.74932361381713 * PC_7 ;
1674988   +   S_PC_8  = -2.3246545307055E-15 +     0.77161638976627 * PC_8 ;
MPRINT(EM_DIAGRAM):   S_PC_8 = -2.3246545307055E-15 + 0.77161638976627 * PC_8 ;
1674989   +   S_PC_9  = -3.7729896578756E-15 +     0.80831761659605 * PC_9 ;
MPRINT(EM_DIAGRAM):   S_PC_9 = -3.7729896578756E-15 + 0.80831761659605 * PC_9 ;
1674990   +   S_Year_Birth  =    -163.205330145852 +     0.08289609202864 * Year_Birth ;
MPRINT(EM_DIAGRAM):   S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
1674991   +END;
MPRINT(EM_DIAGRAM):   END;
1674992   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1674993   +   IF MISSING( PC_1 ) THEN S_PC_1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_1 ) THEN S_PC_1 = . ;
1674994   +   ELSE S_PC_1  =  -3.567597872154E-15 +     0.29892739052271 * PC_1 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_1 = -3.567597872154E-15 + 0.29892739052271 * PC_1 ;
1674995   +   IF MISSING( PC_10 ) THEN S_PC_10  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_10 ) THEN S_PC_10 = . ;
1674996   +   ELSE S_PC_10  = -6.0346468636081E-15 +     0.82173953858445 * PC_10 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_10 = -6.0346468636081E-15 + 0.82173953858445 * PC_10 ;
1674997   +   IF MISSING( PC_11 ) THEN S_PC_11  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_11 ) THEN S_PC_11 = . ;
1674998   +   ELSE S_PC_11  =   6.055841017477E-15 +     0.85619046033275 * PC_11 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_11 = 6.055841017477E-15 + 0.85619046033275 * PC_11 ;
1674999   +   IF MISSING( PC_12 ) THEN S_PC_12  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_12 ) THEN S_PC_12 = . ;
1675000   +   ELSE S_PC_12  = -3.9570415662911E-15 +     0.88816580619395 * PC_12 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_12 = -3.9570415662911E-15 + 0.88816580619395 * PC_12 ;
1675001   +   IF MISSING( PC_13 ) THEN S_PC_13  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_13 ) THEN S_PC_13 = . ;
1675002   +   ELSE S_PC_13  =  1.4807903817941E-15 +     0.89679040249719 * PC_13 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_13 = 1.4807903817941E-15 + 0.89679040249719 * PC_13 ;
1675003   +   IF MISSING( PC_14 ) THEN S_PC_14  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_14 ) THEN S_PC_14 = . ;
1675004   +   ELSE S_PC_14  = -6.1940871521205E-15 +     0.90336543119982 * PC_14 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_14 = -6.1940871521205E-15 + 0.90336543119982 * PC_14 ;
1675005   +   IF MISSING( PC_15 ) THEN S_PC_15  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_15 ) THEN S_PC_15 = . ;
1675006   +   ELSE S_PC_15  =   -3.45147395417E-16 +     0.92997960877389 * PC_15 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_15 = -3.45147395417E-16 + 0.92997960877389 * PC_15 ;
1675007   +   IF MISSING( PC_16 ) THEN S_PC_16  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_16 ) THEN S_PC_16 = . ;
1675008   +   ELSE S_PC_16  = -2.0832890955173E-15 +     0.95096832834142 * PC_16 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_16 = -2.0832890955173E-15 + 0.95096832834142 * PC_16 ;
1675009   +   IF MISSING( PC_17 ) THEN S_PC_17  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_17 ) THEN S_PC_17 = . ;
1675010   +   ELSE S_PC_17  =  4.0710461992609E-15 +     0.99882451143041 * PC_17 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_17 = 4.0710461992609E-15 + 0.99882451143041 * PC_17 ;
1675011   +   IF MISSING( PC_2 ) THEN S_PC_2  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_2 ) THEN S_PC_2 = . ;
1675012   +   ELSE S_PC_2  =  6.4589631283016E-15 +      0.5437311140029 * PC_2 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_2 = 6.4589631283016E-15 + 0.5437311140029 * PC_2 ;
1675013   +   IF MISSING( PC_3 ) THEN S_PC_3  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_3 ) THEN S_PC_3 = . ;
1675014   +   ELSE S_PC_3  =  2.2833690425384E-15 +     0.55367740285547 * PC_3 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_3 = 2.2833690425384E-15 + 0.55367740285547 * PC_3 ;
1675015   +   IF MISSING( PC_4 ) THEN S_PC_4  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_4 ) THEN S_PC_4 = . ;
1675016   +   ELSE S_PC_4  = -3.6725092169592E-15 +     0.63698127005552 * PC_4 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_4 = -3.6725092169592E-15 + 0.63698127005552 * PC_4 ;
1675017   +   IF MISSING( PC_5 ) THEN S_PC_5  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_5 ) THEN S_PC_5 = . ;
1675018   +   ELSE S_PC_5  = -4.6355038408768E-15 +     0.66670299180006 * PC_5 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_5 = -4.6355038408768E-15 + 0.66670299180006 * PC_5 ;
1675019   +   IF MISSING( PC_6 ) THEN S_PC_6  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_6 ) THEN S_PC_6 = . ;
1675020   +   ELSE S_PC_6  =  1.5846922792836E-15 +     0.70534791664737 * PC_6 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_6 = 1.5846922792836E-15 + 0.70534791664737 * PC_6 ;
1675021   +   IF MISSING( PC_7 ) THEN S_PC_7  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_7 ) THEN S_PC_7 = . ;
1675022   +   ELSE S_PC_7  =  6.7268179657212E-16 +     0.74932361381713 * PC_7 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_7 = 6.7268179657212E-16 + 0.74932361381713 * PC_7 ;
1675023   +   IF MISSING( PC_8 ) THEN S_PC_8  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_8 ) THEN S_PC_8 = . ;
1675024   +   ELSE S_PC_8  = -2.3246545307055E-15 +     0.77161638976627 * PC_8 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_8 = -2.3246545307055E-15 + 0.77161638976627 * PC_8 ;
1675025   +   IF MISSING( PC_9 ) THEN S_PC_9  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_9 ) THEN S_PC_9 = . ;
1675026   +   ELSE S_PC_9  = -3.7729896578756E-15 +     0.80831761659605 * PC_9 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_9 = -3.7729896578756E-15 + 0.80831761659605 * PC_9 ;
1675027   +   IF MISSING( Year_Birth ) THEN S_Year_Birth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Year_Birth ) THEN S_Year_Birth = . ;
1675028   +   ELSE S_Year_Birth  =    -163.205330145852 +     0.08289609202864 *
1675029   +        Year_Birth ;
MPRINT(EM_DIAGRAM):   ELSE S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
1675030   +END;
MPRINT(EM_DIAGRAM):   END;
1675031   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1675032   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
1675033   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1675034   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1675035   +   H1x1_1  =     0.07723269924752 * S_PC_1  +     0.43743330545012 * S_PC_10
1675036   +          +      1.6693115657792 * S_PC_11  +    -0.64722248381133 * S_PC_12
1675037   +          +    -1.14011516948896 * S_PC_13  +     0.13365171033005 * S_PC_14
1675038   +          +    -0.87932467478542 * S_PC_15  +      0.1891397274897 * S_PC_16
1675039   +          +     0.93293917054445 * S_PC_17  +    -6.03439059205619 * S_PC_2
1675040   +          +    -2.87849566755714 * S_PC_3  +     3.62710637032582 * S_PC_4
1675041   +          +     0.18299783411397 * S_PC_5  +    -0.57854626628773 * S_PC_6
1675042   +          +     1.53212873074737 * S_PC_7  +    -4.58356670489514 * S_PC_8
1675043   +          +    -1.33584602395783 * S_PC_9  +     0.27972685229597 *
1675044   +        S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.07723269924752 * S_PC_1 + 0.43743330545012 * S_PC_10 + 
1.6693115657792 * S_PC_11 + -0.64722248381133 * S_PC_12 + -1.14011516948896 * S_PC_13 + 
0.13365171033005 * S_PC_14 + -0.87932467478542 * S_PC_15 + 0.1891397274897 * S_PC_16 + 
0.93293917054445 * S_PC_17 + -6.03439059205619 * S_PC_2 + -2.87849566755714 * S_PC_3 + 
3.62710637032582 * S_PC_4 + 0.18299783411397 * S_PC_5 + -0.57854626628773 * S_PC_6 + 
1.53212873074737 * S_PC_7 + -4.58356670489514 * S_PC_8 + -1.33584602395783 * S_PC_9 + 
0.27972685229597 * S_Year_Birth ;
1675045   +   H1x1_2  =      0.4295062431615 * S_PC_1  +     1.74475330655505 * S_PC_10
1675046   +          +     2.23910233765174 * S_PC_11  +    -1.25371934636809 * S_PC_12
1675047   +          +    -0.75166168153719 * S_PC_13  +     0.30586217171617 * S_PC_14
1675048   +          +    -0.14707761142861 * S_PC_15  +     0.06789179881861 * S_PC_16
1675049   +          +     0.15708065500364 * S_PC_17  +    -3.27197596660455 * S_PC_2
1675050   +          +    -1.83455401439583 * S_PC_3  +    -1.33583150986124 * S_PC_4
1675051   +          +     3.76700369809262 * S_PC_5  +     3.87817856654224 * S_PC_6
1675052   +          +      1.3460326103488 * S_PC_7  +    -5.95757633892394 * S_PC_8
1675053   +          +    -1.37588259826469 * S_PC_9  +     0.28058850697694 *
1675054   +        S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.4295062431615 * S_PC_1 + 1.74475330655505 * S_PC_10 + 
2.23910233765174 * S_PC_11 + -1.25371934636809 * S_PC_12 + -0.75166168153719 * S_PC_13 + 
0.30586217171617 * S_PC_14 + -0.14707761142861 * S_PC_15 + 0.06789179881861 * S_PC_16 + 
0.15708065500364 * S_PC_17 + -3.27197596660455 * S_PC_2 + -1.83455401439583 * S_PC_3 + 
-1.33583150986124 * S_PC_4 + 3.76700369809262 * S_PC_5 + 3.87817856654224 * S_PC_6 + 
1.3460326103488 * S_PC_7 + -5.95757633892394 * S_PC_8 + -1.37588259826469 * S_PC_9 + 
0.28058850697694 * S_Year_Birth ;
1675055   +   H1x1_1  =     1.57200769060994 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.57200769060994 + H1x1_1 ;
1675056   +   H1x1_2  =     0.00854073179305 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.00854073179305 + H1x1_2 ;
1675057   +   H1x1_3  = 0;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0;
1675058   +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 );
1675059   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1675060   +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
1675061   +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
1675062   +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
1675063   +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
1675064   +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
1675065   +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
1675066   +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
1675067   +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
1675068   +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
1675069   +END;
MPRINT(EM_DIAGRAM):   END;
1675070   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1675071   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
1675072   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
1675073   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
1675074   +END;
MPRINT(EM_DIAGRAM):   END;
1675075   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1675076   +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
1675077   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1675078   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1675079   +   H1x2_1  =    -2.09077003382313 * S_PC_1  +    -2.68998470873609 * S_PC_10
1675080   +          +     1.22193300919824 * S_PC_11  +     1.69229496424731 * S_PC_12
1675081   +          +    -0.70219302099638 * S_PC_13  +     0.71691278821801 * S_PC_14
1675082   +          +    -0.79717444166607 * S_PC_15  +     0.75087952429581 * S_PC_16
1675083   +          +    -0.63761714428085 * S_PC_17  +     3.05570889853319 * S_PC_2
1675084   +          +    -0.67965194572009 * S_PC_3  +     0.27216947842522 * S_PC_4
1675085   +          +    -0.30605214794042 * S_PC_5  +     4.15429282676847 * S_PC_6
1675086   +          +    -0.29813935151942 * S_PC_7  +    -0.51866797567812 * S_PC_8
1675087   +          +    -0.87253914316211 * S_PC_9  +     0.83340951033676 *
1675088   +        S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -2.09077003382313 * S_PC_1 + -2.68998470873609 * S_PC_10 + 
1.22193300919824 * S_PC_11 + 1.69229496424731 * S_PC_12 + -0.70219302099638 * S_PC_13 + 
0.71691278821801 * S_PC_14 + -0.79717444166607 * S_PC_15 + 0.75087952429581 * S_PC_16 + 
-0.63761714428085 * S_PC_17 + 3.05570889853319 * S_PC_2 + -0.67965194572009 * S_PC_3 + 
0.27216947842522 * S_PC_4 + -0.30605214794042 * S_PC_5 + 4.15429282676847 * S_PC_6 + 
-0.29813935151942 * S_PC_7 + -0.51866797567812 * S_PC_8 + -0.87253914316211 * S_PC_9 + 
0.83340951033676 * S_Year_Birth ;
1675089   +   H1x2_2  =    -0.72679656462034 * S_PC_1  +     1.54950514971273 * S_PC_10
1675090   +          +    -0.24794354545961 * S_PC_11  +     -0.2336090989613 * S_PC_12
1675091   +          +     2.22361254868991 * S_PC_13  +    -0.65402788192767 * S_PC_14
1675092   +          +     0.69937232509444 * S_PC_15  +    -0.50976658559197 * S_PC_16
1675093   +          +    -0.04331993112708 * S_PC_17  +     1.33721375032267 * S_PC_2
1675094   +          +    -0.46941753497909 * S_PC_3  +      0.0318756188075 * S_PC_4
1675095   +          +     0.18416014255651 * S_PC_5  +    -0.54651907811311 * S_PC_6
1675096   +          +     0.19643924756506 * S_PC_7  +    -0.16327677617544 * S_PC_8
1675097   +          +    -0.63026861876226 * S_PC_9  +    -0.20733722446633 *
1675098   +        S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -0.72679656462034 * S_PC_1 + 1.54950514971273 * S_PC_10 + 
-0.24794354545961 * S_PC_11 + -0.2336090989613 * S_PC_12 + 2.22361254868991 * S_PC_13 + 
-0.65402788192767 * S_PC_14 + 0.69937232509444 * S_PC_15 + -0.50976658559197 * S_PC_16 + 
-0.04331993112708 * S_PC_17 + 1.33721375032267 * S_PC_2 + -0.46941753497909 * S_PC_3 + 
0.0318756188075 * S_PC_4 + 0.18416014255651 * S_PC_5 + -0.54651907811311 * S_PC_6 + 
0.19643924756506 * S_PC_7 + -0.16327677617544 * S_PC_8 + -0.63026861876226 * S_PC_9 + 
-0.20733722446633 * S_Year_Birth ;
1675099   +   H1x2_1  =    -0.45484074595841 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -0.45484074595841 + H1x2_1 ;
1675100   +   H1x2_2  =     1.65544923473661 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 1.65544923473661 + H1x2_2 ;
1675101   +   H1x2_3  = 0;
MPRINT(EM_DIAGRAM):   H1x2_3 = 0;
1675102   +   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 );
1675103   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1675104   +   H1x2_1  = EXP(H1x2_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_1 = EXP(H1x2_1 - _MAX_);
1675105   +   _SUM_ = _SUM_ + H1x2_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_1 ;
1675106   +   H1x2_2  = EXP(H1x2_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_2 = EXP(H1x2_2 - _MAX_);
1675107   +   _SUM_ = _SUM_ + H1x2_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_2 ;
1675108   +   H1x2_3  = EXP(H1x2_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_3 = EXP(H1x2_3 - _MAX_);
1675109   +   _SUM_ = _SUM_ + H1x2_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_3 ;
1675110   +   H1x2_1  = H1x2_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 / _SUM_;
1675111   +   H1x2_2  = H1x2_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 / _SUM_;
1675112   +   H1x2_3  = H1x2_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 / _SUM_;
1675113   +END;
MPRINT(EM_DIAGRAM):   END;
1675114   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1675115   +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
1675116   +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
1675117   +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
1675118   +END;
MPRINT(EM_DIAGRAM):   END;
1675119   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1675120   +*** Writing the Node H1x3_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x3_ ;
1675121   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1675122   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1675123   +   H1x3_1  =     1.48114761979115 * S_PC_1  +    -0.77808542245614 * S_PC_10
1675124   +          +    -0.30819901448035 * S_PC_11  +     0.56026788023458 * S_PC_12
1675125   +          +     1.47931516853408 * S_PC_13  +     0.00542792617507 * S_PC_14
1675126   +          +    -1.73236906231289 * S_PC_15  +    -0.83926333373259 * S_PC_16
1675127   +          +     1.11418743009677 * S_PC_17  +     1.20202383644325 * S_PC_2
1675128   +          +     0.04213393267284 * S_PC_3  +     2.27162803788709 * S_PC_4
1675129   +          +      0.2901263213926 * S_PC_5  +     1.96650957669993 * S_PC_6
1675130   +          +    -0.25353965539248 * S_PC_7  +    -1.87254461218534 * S_PC_8
1675131   +          +    -1.60867246668536 * S_PC_9  +    -1.81517523903099 *
1675132   +        S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 1.48114761979115 * S_PC_1 + -0.77808542245614 * S_PC_10 + 
-0.30819901448035 * S_PC_11 + 0.56026788023458 * S_PC_12 + 1.47931516853408 * S_PC_13 + 
0.00542792617507 * S_PC_14 + -1.73236906231289 * S_PC_15 + -0.83926333373259 * S_PC_16 + 
1.11418743009677 * S_PC_17 + 1.20202383644325 * S_PC_2 + 0.04213393267284 * S_PC_3 + 
2.27162803788709 * S_PC_4 + 0.2901263213926 * S_PC_5 + 1.96650957669993 * S_PC_6 + 
-0.25353965539248 * S_PC_7 + -1.87254461218534 * S_PC_8 + -1.60867246668536 * S_PC_9 + 
-1.81517523903099 * S_Year_Birth ;
1675133   +   H1x3_2  =     1.57346661513148 * S_PC_1  +     0.43195496243177 * S_PC_10
1675134   +          +      0.8633889943093 * S_PC_11  +     0.19899107002304 * S_PC_12
1675135   +          +     0.89004694351718 * S_PC_13  +     0.20427645322052 * S_PC_14
1675136   +          +     1.59337923843551 * S_PC_15  +     1.67691489307996 * S_PC_16
1675137   +          +     1.00334157857434 * S_PC_17  +    -1.05358529225436 * S_PC_2
1675138   +          +    -1.83367619193431 * S_PC_3  +     2.70866972328632 * S_PC_4
1675139   +          +    -0.21267354790891 * S_PC_5  +     -1.3443463775433 * S_PC_6
1675140   +          +     1.11114248765341 * S_PC_7  +     0.97676765396811 * S_PC_8
1675141   +          +     0.06263998354893 * S_PC_9  +    -1.81223070920192 *
1675142   +        S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x3_2 = 1.57346661513148 * S_PC_1 + 0.43195496243177 * S_PC_10 + 
0.8633889943093 * S_PC_11 + 0.19899107002304 * S_PC_12 + 0.89004694351718 * S_PC_13 + 
0.20427645322052 * S_PC_14 + 1.59337923843551 * S_PC_15 + 1.67691489307996 * S_PC_16 + 
1.00334157857434 * S_PC_17 + -1.05358529225436 * S_PC_2 + -1.83367619193431 * S_PC_3 + 
2.70866972328632 * S_PC_4 + -0.21267354790891 * S_PC_5 + -1.3443463775433 * S_PC_6 + 
1.11114248765341 * S_PC_7 + 0.97676765396811 * S_PC_8 + 0.06263998354893 * S_PC_9 + 
-1.81223070920192 * S_Year_Birth ;
1675143   +   H1x3_1  =    -1.38533008257086 + H1x3_1 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = -1.38533008257086 + H1x3_1 ;
1675144   +   H1x3_2  =     1.12341983705313 + H1x3_2 ;
MPRINT(EM_DIAGRAM):   H1x3_2 = 1.12341983705313 + H1x3_2 ;
1675145   +   H1x3_3  = 0;
MPRINT(EM_DIAGRAM):   H1x3_3 = 0;
1675146   +   _MAX_ = MAX (H1x3_1 , H1x3_2 , H1x3_3 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x3_1 , H1x3_2 , H1x3_3 );
1675147   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1675148   +   H1x3_1  = EXP(H1x3_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_1 = EXP(H1x3_1 - _MAX_);
1675149   +   _SUM_ = _SUM_ + H1x3_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_1 ;
1675150   +   H1x3_2  = EXP(H1x3_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_2 = EXP(H1x3_2 - _MAX_);
1675151   +   _SUM_ = _SUM_ + H1x3_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_2 ;
1675152   +   H1x3_3  = EXP(H1x3_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_3 = EXP(H1x3_3 - _MAX_);
1675153   +   _SUM_ = _SUM_ + H1x3_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_3 ;
1675154   +   H1x3_1  = H1x3_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 / _SUM_;
1675155   +   H1x3_2  = H1x3_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 / _SUM_;
1675156   +   H1x3_3  = H1x3_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_3 = H1x3_3 / _SUM_;
1675157   +END;
MPRINT(EM_DIAGRAM):   END;
1675158   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1675159   +   H1x3_1  = .;
MPRINT(EM_DIAGRAM):   H1x3_1 = .;
1675160   +   H1x3_2  = .;
MPRINT(EM_DIAGRAM):   H1x3_2 = .;
1675161   +   H1x3_3  = .;
MPRINT(EM_DIAGRAM):   H1x3_3 = .;
1675162   +END;
MPRINT(EM_DIAGRAM):   END;
1675163   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1675164   +*** Writing the Node H1x4_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x4_ ;
1675165   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1675166   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1675167   +   H1x4_1  =    -0.80016530267676 * S_PC_1  +     0.61481990683794 * S_PC_10
1675168   +          +     0.98014276653455 * S_PC_11  +     0.96774210975431 * S_PC_12
1675169   +          +    -0.24220452892914 * S_PC_13  +    -1.51001392301164 * S_PC_14
1675170   +          +     0.87644450132968 * S_PC_15  +    -0.38985062946846 * S_PC_16
1675171   +          +    -0.54364633571498 * S_PC_17  +    -0.53950247180635 * S_PC_2
1675172   +          +    -1.81008396411344 * S_PC_3  +     0.14770896241053 * S_PC_4
1675173   +          +     0.29429972379263 * S_PC_5  +      0.5432632338697 * S_PC_6
1675174   +          +     0.81795185751595 * S_PC_7  +      1.7101808517267 * S_PC_8
1675175   +          +    -0.72272176691606 * S_PC_9  +     2.21178075137818 *
1675176   +        S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x4_1 = -0.80016530267676 * S_PC_1 + 0.61481990683794 * S_PC_10 + 
0.98014276653455 * S_PC_11 + 0.96774210975431 * S_PC_12 + -0.24220452892914 * S_PC_13 + 
-1.51001392301164 * S_PC_14 + 0.87644450132968 * S_PC_15 + -0.38985062946846 * S_PC_16 + 
-0.54364633571498 * S_PC_17 + -0.53950247180635 * S_PC_2 + -1.81008396411344 * S_PC_3 + 
0.14770896241053 * S_PC_4 + 0.29429972379263 * S_PC_5 + 0.5432632338697 * S_PC_6 + 
0.81795185751595 * S_PC_7 + 1.7101808517267 * S_PC_8 + -0.72272176691606 * S_PC_9 + 
2.21178075137818 * S_Year_Birth ;
1675177   +   H1x4_2  =     2.94582724887707 * S_PC_1  +    -1.04477313406074 * S_PC_10
1675178   +          +     -2.4839961217725 * S_PC_11  +     0.20099584530937 * S_PC_12
1675179   +          +    -0.06864475460031 * S_PC_13  +     0.19225464743494 * S_PC_14
1675180   +          +     0.61674704994894 * S_PC_15  +     0.80994823370663 * S_PC_16
1675181   +          +     1.36897006856312 * S_PC_17  +      0.3486096099276 * S_PC_2
1675182   +          +     1.23622183682513 * S_PC_3  +      0.7033453624158 * S_PC_4
1675183   +          +     0.40583140737089 * S_PC_5  +     -0.3056392458601 * S_PC_6
1675184   +          +    -1.01410157426394 * S_PC_7  +    -1.13889506022266 * S_PC_8
1675185   +          +    -0.70945228861297 * S_PC_9  +        1.60977491949 *
1675186   +        S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x4_2 = 2.94582724887707 * S_PC_1 + -1.04477313406074 * S_PC_10 + 
-2.4839961217725 * S_PC_11 + 0.20099584530937 * S_PC_12 + -0.06864475460031 * S_PC_13 + 
0.19225464743494 * S_PC_14 + 0.61674704994894 * S_PC_15 + 0.80994823370663 * S_PC_16 + 
1.36897006856312 * S_PC_17 + 0.3486096099276 * S_PC_2 + 1.23622183682513 * S_PC_3 + 
0.7033453624158 * S_PC_4 + 0.40583140737089 * S_PC_5 + -0.3056392458601 * S_PC_6 + 
-1.01410157426394 * S_PC_7 + -1.13889506022266 * S_PC_8 + -0.70945228861297 * S_PC_9 + 
1.60977491949 * S_Year_Birth ;
1675187   +   H1x4_1  =    -0.31373086905649 + H1x4_1 ;
MPRINT(EM_DIAGRAM):   H1x4_1 = -0.31373086905649 + H1x4_1 ;
1675188   +   H1x4_2  =    -0.23423875584785 + H1x4_2 ;
MPRINT(EM_DIAGRAM):   H1x4_2 = -0.23423875584785 + H1x4_2 ;
1675189   +   H1x4_3  = 0;
MPRINT(EM_DIAGRAM):   H1x4_3 = 0;
1675190   +   _MAX_ = MAX (H1x4_1 , H1x4_2 , H1x4_3 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x4_1 , H1x4_2 , H1x4_3 );
1675191   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1675192   +   H1x4_1  = EXP(H1x4_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x4_1 = EXP(H1x4_1 - _MAX_);
1675193   +   _SUM_ = _SUM_ + H1x4_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x4_1 ;
1675194   +   H1x4_2  = EXP(H1x4_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x4_2 = EXP(H1x4_2 - _MAX_);
1675195   +   _SUM_ = _SUM_ + H1x4_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x4_2 ;
1675196   +   H1x4_3  = EXP(H1x4_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x4_3 = EXP(H1x4_3 - _MAX_);
1675197   +   _SUM_ = _SUM_ + H1x4_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x4_3 ;
1675198   +   H1x4_1  = H1x4_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x4_1 = H1x4_1 / _SUM_;
1675199   +   H1x4_2  = H1x4_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x4_2 = H1x4_2 / _SUM_;
1675200   +   H1x4_3  = H1x4_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x4_3 = H1x4_3 / _SUM_;
1675201   +END;
MPRINT(EM_DIAGRAM):   END;
1675202   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1675203   +   H1x4_1  = .;
MPRINT(EM_DIAGRAM):   H1x4_1 = .;
1675204   +   H1x4_2  = .;
MPRINT(EM_DIAGRAM):   H1x4_2 = .;
1675205   +   H1x4_3  = .;
MPRINT(EM_DIAGRAM):   H1x4_3 = .;
1675206   +END;
MPRINT(EM_DIAGRAM):   END;
1675207   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1675208   +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
1675209   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1675210   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1675211   +   H2x1_1  =     -0.6133143841405 * H1x1_1  +    -3.83938070262105 * H1x1_2
1675212   +          +     2.97647348719096 * H1x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -0.6133143841405 * H1x1_1 + -3.83938070262105 * H1x1_2 + 
2.97647348719096 * H1x1_3 ;
1675213   +   H2x1_2  =     0.84627847563363 * H1x1_1  +    -3.73586519813465 * H1x1_2
1675214   +          +     1.28953521079844 * H1x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = 0.84627847563363 * H1x1_1 + -3.73586519813465 * H1x1_2 + 
1.28953521079844 * H1x1_3 ;
1675215   +   H2x1_1  = H2x1_1  +    -3.07535111907469 * H1x2_1
1675216   +          +    -1.10008927410552 * H1x2_2  +     5.30803737772439 * H1x2_3 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -3.07535111907469 * H1x2_1 + -1.10008927410552 * 
H1x2_2 + 5.30803737772439 * H1x2_3 ;
1675217   +   H2x1_2  = H2x1_2  +     1.98363965238625 * H1x2_1
1675218   +          +    -0.95287434555938 * H1x2_2  +    -1.11784150106077 * H1x2_3 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + 1.98363965238625 * H1x2_1 + -0.95287434555938 * H1x2_2 
+ -1.11784150106077 * H1x2_3 ;
1675219   +   H2x1_1  = H2x1_1  +      0.5063143580136 * H1x3_1
1675220   +          +    -0.34731032997063 * H1x3_2  +     0.17242916251088 * H1x3_3 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + 0.5063143580136 * H1x3_1 + -0.34731032997063 * H1x3_2 
+ 0.17242916251088 * H1x3_3 ;
1675221   +   H2x1_2  = H2x1_2  +    -1.49859177763656 * H1x3_1
1675222   +          +    -0.47439550056563 * H1x3_2  +     0.98620031562872 * H1x3_3 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + -1.49859177763656 * H1x3_1 + -0.47439550056563 * 
H1x3_2 + 0.98620031562872 * H1x3_3 ;
1675223   +   H2x1_1  = H2x1_1  +     1.66849180018854 * H1x4_1
1675224   +          +    -1.05465412898618 * H1x4_2  +    -0.76816922190923 * H1x4_3 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + 1.66849180018854 * H1x4_1 + -1.05465412898618 * H1x4_2 
+ -0.76816922190923 * H1x4_3 ;
1675225   +   H2x1_2  = H2x1_2  +    -0.64156638450484 * H1x4_1
1675226   +          +     1.44483282099634 * H1x4_2  +     1.18433408020201 * H1x4_3 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + -0.64156638450484 * H1x4_1 + 1.44483282099634 * H1x4_2 
+ 1.18433408020201 * H1x4_3 ;
1675227   +   H2x1_1  =    -1.35727593871832 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -1.35727593871832 + H2x1_1 ;
1675228   +   H2x1_2  =    -2.02415682222477 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -2.02415682222477 + H2x1_2 ;
1675229   +   H2x1_3  = 0;
MPRINT(EM_DIAGRAM):   H2x1_3 = 0;
1675230   +   _MAX_ = MAX (H2x1_1 , H2x1_2 , H2x1_3 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H2x1_1 , H2x1_2 , H2x1_3 );
1675231   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1675232   +   H2x1_1  = EXP(H2x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_1 = EXP(H2x1_1 - _MAX_);
1675233   +   _SUM_ = _SUM_ + H2x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_1 ;
1675234   +   H2x1_2  = EXP(H2x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_2 = EXP(H2x1_2 - _MAX_);
1675235   +   _SUM_ = _SUM_ + H2x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_2 ;
1675236   +   H2x1_3  = EXP(H2x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_3 = EXP(H2x1_3 - _MAX_);
1675237   +   _SUM_ = _SUM_ + H2x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_3 ;
1675238   +   H2x1_1  = H2x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 / _SUM_;
1675239   +   H2x1_2  = H2x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 / _SUM_;
1675240   +   H2x1_3  = H2x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 / _SUM_;
1675241   +END;
MPRINT(EM_DIAGRAM):   END;
1675242   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1675243   +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
1675244   +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
1675245   +   H2x1_3  = .;
MPRINT(EM_DIAGRAM):   H2x1_3 = .;
1675246   +END;
MPRINT(EM_DIAGRAM):   END;
1675247   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1675248   +*** Writing the Node H2x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x2_ ;
1675249   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1675250   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1675251   +   H2x2_1  =     0.63449405645229 * H1x1_1  +     0.84446115465645 * H1x1_2
1675252   +          +    -1.56766627360236 * H1x1_3 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = 0.63449405645229 * H1x1_1 + 0.84446115465645 * H1x1_2 + 
-1.56766627360236 * H1x1_3 ;
1675253   +   H2x2_2  =    -0.19705467445914 * H1x1_1  +     0.20974772543551 * H1x1_2
1675254   +          +    -1.09606243724394 * H1x1_3 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = -0.19705467445914 * H1x1_1 + 0.20974772543551 * H1x1_2 + 
-1.09606243724394 * H1x1_3 ;
1675255   +   H2x2_1  = H2x2_1  +     0.45623308628354 * H1x2_1
1675256   +          +     0.75010274028191 * H1x2_2  +     1.20173965917267 * H1x2_3 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + 0.45623308628354 * H1x2_1 + 0.75010274028191 * H1x2_2 
+ 1.20173965917267 * H1x2_3 ;
1675257   +   H2x2_2  = H2x2_2  +     0.56802075860421 * H1x2_1
1675258   +          +     2.59062219455668 * H1x2_2  +    -0.90632723812936 * H1x2_3 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 + 0.56802075860421 * H1x2_1 + 2.59062219455668 * H1x2_2 
+ -0.90632723812936 * H1x2_3 ;
1675259   +   H2x2_1  = H2x2_1  +    -0.39791324115597 * H1x3_1
1675260   +          +     1.07686108370009 * H1x3_2  +     -0.1809775985606 * H1x3_3 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + -0.39791324115597 * H1x3_1 + 1.07686108370009 * H1x3_2 
+ -0.1809775985606 * H1x3_3 ;
1675261   +   H2x2_2  = H2x2_2  +    -1.96666697492206 * H1x3_1
1675262   +          +     1.55275173372121 * H1x3_2  +    -0.09342611528757 * H1x3_3 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 + -1.96666697492206 * H1x3_1 + 1.55275173372121 * H1x3_2 
+ -0.09342611528757 * H1x3_3 ;
1675263   +   H2x2_1  = H2x2_1  +    -2.28201609611728 * H1x4_1
1675264   +          +    -1.36632864073452 * H1x4_2  +    -0.78166079848897 * H1x4_3 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + -2.28201609611728 * H1x4_1 + -1.36632864073452 * 
H1x4_2 + -0.78166079848897 * H1x4_3 ;
1675265   +   H2x2_2  = H2x2_2  +     0.87133348497961 * H1x4_1
1675266   +          +    -0.82975118122828 * H1x4_2  +    -1.70213780111439 * H1x4_3 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 + 0.87133348497961 * H1x4_1 + -0.82975118122828 * H1x4_2 
+ -1.70213780111439 * H1x4_3 ;
1675267   +   H2x2_1  =    -1.49163500349922 + H2x2_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = -1.49163500349922 + H2x2_1 ;
1675268   +   H2x2_2  =     -0.0405622301927 + H2x2_2 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = -0.0405622301927 + H2x2_2 ;
1675269   +   H2x2_3  = 0;
MPRINT(EM_DIAGRAM):   H2x2_3 = 0;
1675270   +   _MAX_ = MAX (H2x2_1 , H2x2_2 , H2x2_3 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H2x2_1 , H2x2_2 , H2x2_3 );
1675271   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1675272   +   H2x2_1  = EXP(H2x2_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_1 = EXP(H2x2_1 - _MAX_);
1675273   +   _SUM_ = _SUM_ + H2x2_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_1 ;
1675274   +   H2x2_2  = EXP(H2x2_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_2 = EXP(H2x2_2 - _MAX_);
1675275   +   _SUM_ = _SUM_ + H2x2_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_2 ;
1675276   +   H2x2_3  = EXP(H2x2_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_3 = EXP(H2x2_3 - _MAX_);
1675277   +   _SUM_ = _SUM_ + H2x2_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_3 ;
1675278   +   H2x2_1  = H2x2_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 / _SUM_;
1675279   +   H2x2_2  = H2x2_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 / _SUM_;
1675280   +   H2x2_3  = H2x2_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_3 = H2x2_3 / _SUM_;
1675281   +END;
MPRINT(EM_DIAGRAM):   END;
1675282   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1675283   +   H2x2_1  = .;
MPRINT(EM_DIAGRAM):   H2x2_1 = .;
1675284   +   H2x2_2  = .;
MPRINT(EM_DIAGRAM):   H2x2_2 = .;
1675285   +   H2x2_3  = .;
MPRINT(EM_DIAGRAM):   H2x2_3 = .;
1675286   +END;
MPRINT(EM_DIAGRAM):   END;
1675287   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1675288   +*** Writing the Node H2x3_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x3_ ;
1675289   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1675290   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1675291   +   H2x3_1  =    -0.00478986250364 * H1x1_1  +     1.94512729287583 * H1x1_2
1675292   +          +    -0.54574044877188 * H1x1_3 ;
MPRINT(EM_DIAGRAM):   H2x3_1 = -0.00478986250364 * H1x1_1 + 1.94512729287583 * H1x1_2 + 
-0.54574044877188 * H1x1_3 ;
1675293   +   H2x3_2  =    -0.35130412480513 * H1x1_1  +     -0.5687847994534 * H1x1_2
1675294   +          +     0.00304400166261 * H1x1_3 ;
MPRINT(EM_DIAGRAM):   H2x3_2 = -0.35130412480513 * H1x1_1 + -0.5687847994534 * H1x1_2 + 
0.00304400166261 * H1x1_3 ;
1675295   +   H2x3_1  = H2x3_1  +    -0.01368566150766 * H1x2_1
1675296   +          +    -0.45146944846621 * H1x2_2  +    -0.67213884593612 * H1x2_3 ;
MPRINT(EM_DIAGRAM):   H2x3_1 = H2x3_1 + -0.01368566150766 * H1x2_1 + -0.45146944846621 * 
H1x2_2 + -0.67213884593612 * H1x2_3 ;
1675297   +   H2x3_2  = H2x3_2  +    -1.18855975344434 * H1x2_1
1675298   +          +     -0.9722196735443 * H1x2_2  +      -0.355434381432 * H1x2_3 ;
MPRINT(EM_DIAGRAM):   H2x3_2 = H2x3_2 + -1.18855975344434 * H1x2_1 + -0.9722196735443 * H1x2_2 
+ -0.355434381432 * H1x2_3 ;
1675299   +   H2x3_1  = H2x3_1  +    -0.45509153654361 * H1x3_1
1675300   +          +    -1.71140374695887 * H1x3_2  +    -0.20303329938338 * H1x3_3 ;
MPRINT(EM_DIAGRAM):   H2x3_1 = H2x3_1 + -0.45509153654361 * H1x3_1 + -1.71140374695887 * 
H1x3_2 + -0.20303329938338 * H1x3_3 ;
1675301   +   H2x3_2  = H2x3_2  +     1.04869232313058 * H1x3_1
1675302   +          +     -1.0692296884809 * H1x3_2  +    -0.52352255264688 * H1x3_3 ;
MPRINT(EM_DIAGRAM):   H2x3_2 = H2x3_2 + 1.04869232313058 * H1x3_1 + -1.0692296884809 * H1x3_2 
+ -0.52352255264688 * H1x3_3 ;
1675303   +   H2x3_1  = H2x3_1  +     0.14078396505176 * H1x4_1
1675304   +          +     0.15304402404578 * H1x4_2  +    -0.63915963465509 * H1x4_3 ;
MPRINT(EM_DIAGRAM):   H2x3_1 = H2x3_1 + 0.14078396505176 * H1x4_1 + 0.15304402404578 * H1x4_2 
+ -0.63915963465509 * H1x4_3 ;
1675305   +   H2x3_2  = H2x3_2  +    -0.36362065391576 * H1x4_1
1675306   +          +    -0.01953827604863 * H1x4_2  +      0.8236573437559 * H1x4_3 ;
MPRINT(EM_DIAGRAM):   H2x3_2 = H2x3_2 + -0.36362065391576 * H1x4_1 + -0.01953827604863 * 
H1x4_2 + 0.8236573437559 * H1x4_3 ;
1675307   +   H2x3_1  =    -1.45925755580396 + H2x3_1 ;
MPRINT(EM_DIAGRAM):   H2x3_1 = -1.45925755580396 + H2x3_1 ;
1675308   +   H2x3_2  =    -2.11509373325296 + H2x3_2 ;
MPRINT(EM_DIAGRAM):   H2x3_2 = -2.11509373325296 + H2x3_2 ;
1675309   +   H2x3_3  = 0;
MPRINT(EM_DIAGRAM):   H2x3_3 = 0;
1675310   +   _MAX_ = MAX (H2x3_1 , H2x3_2 , H2x3_3 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H2x3_1 , H2x3_2 , H2x3_3 );
1675311   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1675312   +   H2x3_1  = EXP(H2x3_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x3_1 = EXP(H2x3_1 - _MAX_);
1675313   +   _SUM_ = _SUM_ + H2x3_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x3_1 ;
1675314   +   H2x3_2  = EXP(H2x3_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x3_2 = EXP(H2x3_2 - _MAX_);
1675315   +   _SUM_ = _SUM_ + H2x3_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x3_2 ;
1675316   +   H2x3_3  = EXP(H2x3_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x3_3 = EXP(H2x3_3 - _MAX_);
1675317   +   _SUM_ = _SUM_ + H2x3_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x3_3 ;
1675318   +   H2x3_1  = H2x3_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x3_1 = H2x3_1 / _SUM_;
1675319   +   H2x3_2  = H2x3_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x3_2 = H2x3_2 / _SUM_;
1675320   +   H2x3_3  = H2x3_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x3_3 = H2x3_3 / _SUM_;
1675321   +END;
MPRINT(EM_DIAGRAM):   END;
1675322   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1675323   +   H2x3_1  = .;
MPRINT(EM_DIAGRAM):   H2x3_1 = .;
1675324   +   H2x3_2  = .;
MPRINT(EM_DIAGRAM):   H2x3_2 = .;
1675325   +   H2x3_3  = .;
MPRINT(EM_DIAGRAM):   H2x3_3 = .;
1675326   +END;
MPRINT(EM_DIAGRAM):   END;
1675327   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1675328   +*** Writing the Node H3x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H3x1_ ;
1675329   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1675330   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1675331   +   H3x1_1  =    -3.08764799088394 * H2x1_1  +    -1.91738631410822 * H2x1_2
1675332   +          +     6.38437371946773 * H2x1_3 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = -3.08764799088394 * H2x1_1 + -1.91738631410822 * H2x1_2 + 
6.38437371946773 * H2x1_3 ;
1675333   +   H3x1_2  =    -2.95950103736455 * H2x1_1  +    -1.44269952634242 * H2x1_2
1675334   +          +     0.99008255139162 * H2x1_3 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = -2.95950103736455 * H2x1_1 + -1.44269952634242 * H2x1_2 + 
0.99008255139162 * H2x1_3 ;
1675335   +   H3x1_3  =    -2.74395762122593 * H2x1_1  +    -1.81036147116037 * H2x1_2
1675336   +          +     3.01489730027742 * H2x1_3 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = -2.74395762122593 * H2x1_1 + -1.81036147116037 * H2x1_2 + 
3.01489730027742 * H2x1_3 ;
1675337   +   H3x1_1  = H3x1_1  +     0.73548918886018 * H2x2_1
1675338   +          +     0.80208488351218 * H2x2_2  +    -1.27461254024898 * H2x2_3 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = H3x1_1 + 0.73548918886018 * H2x2_1 + 0.80208488351218 * H2x2_2 
+ -1.27461254024898 * H2x2_3 ;
1675339   +   H3x1_2  = H3x1_2  +    -1.22577938531859 * H2x2_1
1675340   +          +    -1.57729949542124 * H2x2_2  +    -0.20653566807302 * H2x2_3 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = H3x1_2 + -1.22577938531859 * H2x2_1 + -1.57729949542124 * 
H2x2_2 + -0.20653566807302 * H2x2_3 ;
1675341   +   H3x1_3  = H3x1_3  +    -0.94220166137452 * H2x2_1
1675342   +          +    -2.23997375895636 * H2x2_2  +    -0.69569779790922 * H2x2_3 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = H3x1_3 + -0.94220166137452 * H2x2_1 + -2.23997375895636 * 
H2x2_2 + -0.69569779790922 * H2x2_3 ;
1675343   +   H3x1_1  = H3x1_1  +     0.47459821701313 * H2x3_1
1675344   +          +     0.33884611641605 * H2x3_2  +     0.28384294800104 * H2x3_3 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = H3x1_1 + 0.47459821701313 * H2x3_1 + 0.33884611641605 * H2x3_2 
+ 0.28384294800104 * H2x3_3 ;
1675345   +   H3x1_2  = H3x1_2  +    -1.16110643375006 * H2x3_1
1675346   +          +     1.66935308512585 * H2x3_2  +    -4.14568195267233 * H2x3_3 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = H3x1_2 + -1.16110643375006 * H2x3_1 + 1.66935308512585 * H2x3_2 
+ -4.14568195267233 * H2x3_3 ;
1675347   +   H3x1_3  = H3x1_3  +     1.49959471068751 * H2x3_1
1675348   +          +    -0.59915928675297 * H2x3_2  +    -0.94983228816155 * H2x3_3 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = H3x1_3 + 1.49959471068751 * H2x3_1 + -0.59915928675297 * H2x3_2 
+ -0.94983228816155 * H2x3_3 ;
1675349   +   H3x1_1  =     0.63125998861833 + H3x1_1 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = 0.63125998861833 + H3x1_1 ;
1675350   +   H3x1_2  =    -2.73537618207087 + H3x1_2 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = -2.73537618207087 + H3x1_2 ;
1675351   +   H3x1_3  =    -1.10962396550321 + H3x1_3 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = -1.10962396550321 + H3x1_3 ;
1675352   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
1675353   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
1675354   +   H3x1_1  = 1.0 / (1.0 + EXP(MIN( - H3x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H3x1_1 = 1.0 / (1.0 + EXP(MIN( - H3x1_1 , _EXP_BAR)));
1675355   +   H3x1_2  = 1.0 / (1.0 + EXP(MIN( - H3x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H3x1_2 = 1.0 / (1.0 + EXP(MIN( - H3x1_2 , _EXP_BAR)));
1675356   +   H3x1_3  = 1.0 / (1.0 + EXP(MIN( - H3x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H3x1_3 = 1.0 / (1.0 + EXP(MIN( - H3x1_3 , _EXP_BAR)));
1675357   +END;
MPRINT(EM_DIAGRAM):   END;
1675358   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1675359   +   H3x1_1  = .;
MPRINT(EM_DIAGRAM):   H3x1_1 = .;
1675360   +   H3x1_2  = .;
MPRINT(EM_DIAGRAM):   H3x1_2 = .;
1675361   +   H3x1_3  = .;
MPRINT(EM_DIAGRAM):   H3x1_3 = .;
1675362   +END;
MPRINT(EM_DIAGRAM):   END;
1675363   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1675364   +*** Writing the Node H3x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H3x2_ ;
1675365   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1675366   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1675367   +   H3x2_1  =    -1.04084973012353 * H2x1_1  +     0.54757336755543 * H2x1_2
1675368   +          +    -2.42465723446458 * H2x1_3 ;
MPRINT(EM_DIAGRAM):   H3x2_1 = -1.04084973012353 * H2x1_1 + 0.54757336755543 * H2x1_2 + 
-2.42465723446458 * H2x1_3 ;
1675369   +   H3x2_2  =    -0.44745304665935 * H2x1_1  +    -1.41662797767631 * H2x1_2
1675370   +          +     1.61722186878847 * H2x1_3 ;
MPRINT(EM_DIAGRAM):   H3x2_2 = -0.44745304665935 * H2x1_1 + -1.41662797767631 * H2x1_2 + 
1.61722186878847 * H2x1_3 ;
1675371   +   H3x2_3  =    -2.03529954461846 * H2x1_1  +    -0.91129650681067 * H2x1_2
1675372   +          +     2.85673907226574 * H2x1_3 ;
MPRINT(EM_DIAGRAM):   H3x2_3 = -2.03529954461846 * H2x1_1 + -0.91129650681067 * H2x1_2 + 
2.85673907226574 * H2x1_3 ;
1675373   +   H3x2_1  = H3x2_1  +    -0.27496745838336 * H2x2_1
1675374   +          +     0.33713690467933 * H2x2_2  +    -0.33482440946593 * H2x2_3 ;
MPRINT(EM_DIAGRAM):   H3x2_1 = H3x2_1 + -0.27496745838336 * H2x2_1 + 0.33713690467933 * H2x2_2 
+ -0.33482440946593 * H2x2_3 ;
1675375   +   H3x2_2  = H3x2_2  +     0.62817233761682 * H2x2_1
1675376   +          +     0.01449619139944 * H2x2_2  +      0.2220823792987 * H2x2_3 ;
MPRINT(EM_DIAGRAM):   H3x2_2 = H3x2_2 + 0.62817233761682 * H2x2_1 + 0.01449619139944 * H2x2_2 
+ 0.2220823792987 * H2x2_3 ;
1675377   +   H3x2_3  = H3x2_3  +     0.46121367972148 * H2x2_1
1675378   +          +      1.5218429261845 * H2x2_2  +    -0.94334784031802 * H2x2_3 ;
MPRINT(EM_DIAGRAM):   H3x2_3 = H3x2_3 + 0.46121367972148 * H2x2_1 + 1.5218429261845 * H2x2_2 + 
-0.94334784031802 * H2x2_3 ;
1675379   +   H3x2_1  = H3x2_1  +    -0.67640713318239 * H2x3_1
1675380   +          +    -0.72620562367005 * H2x3_2  +    -0.30414945049952 * H2x3_3 ;
MPRINT(EM_DIAGRAM):   H3x2_1 = H3x2_1 + -0.67640713318239 * H2x3_1 + -0.72620562367005 * 
H2x3_2 + -0.30414945049952 * H2x3_3 ;
1675381   +   H3x2_2  = H3x2_2  +    -0.44352623923272 * H2x3_1
1675382   +          +      0.8085697022422 * H2x3_2  +    -1.69896322767729 * H2x3_3 ;
MPRINT(EM_DIAGRAM):   H3x2_2 = H3x2_2 + -0.44352623923272 * H2x3_1 + 0.8085697022422 * H2x3_2 
+ -1.69896322767729 * H2x3_3 ;
1675383   +   H3x2_3  = H3x2_3  +     0.41104293419747 * H2x3_1
1675384   +          +     0.28818262195501 * H2x3_2  +    -1.50518858912381 * H2x3_3 ;
MPRINT(EM_DIAGRAM):   H3x2_3 = H3x2_3 + 0.41104293419747 * H2x3_1 + 0.28818262195501 * H2x3_2 
+ -1.50518858912381 * H2x3_3 ;
1675385   +   H3x2_1  =     1.16161310309265 + H3x2_1 ;
MPRINT(EM_DIAGRAM):   H3x2_1 = 1.16161310309265 + H3x2_1 ;
1675386   +   H3x2_2  =    -0.09024108300764 + H3x2_2 ;
MPRINT(EM_DIAGRAM):   H3x2_2 = -0.09024108300764 + H3x2_2 ;
1675387   +   H3x2_3  =    -0.25581784952458 + H3x2_3 ;
MPRINT(EM_DIAGRAM):   H3x2_3 = -0.25581784952458 + H3x2_3 ;
1675388   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
1675389   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
1675390   +   H3x2_1  = 1.0 / (1.0 + EXP(MIN( - H3x2_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H3x2_1 = 1.0 / (1.0 + EXP(MIN( - H3x2_1 , _EXP_BAR)));
1675391   +   H3x2_2  = 1.0 / (1.0 + EXP(MIN( - H3x2_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H3x2_2 = 1.0 / (1.0 + EXP(MIN( - H3x2_2 , _EXP_BAR)));
1675392   +   H3x2_3  = 1.0 / (1.0 + EXP(MIN( - H3x2_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H3x2_3 = 1.0 / (1.0 + EXP(MIN( - H3x2_3 , _EXP_BAR)));
1675393   +END;
MPRINT(EM_DIAGRAM):   END;
1675394   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1675395   +   H3x2_1  = .;
MPRINT(EM_DIAGRAM):   H3x2_1 = .;
1675396   +   H3x2_2  = .;
MPRINT(EM_DIAGRAM):   H3x2_2 = .;
1675397   +   H3x2_3  = .;
MPRINT(EM_DIAGRAM):   H3x2_3 = .;
1675398   +END;
MPRINT(EM_DIAGRAM):   END;
1675399   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1675400   +*** Writing the Node H4x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H4x1_ ;
1675401   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1675402   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1675403   +   H4x1_1  =     0.21480063273209 * H3x1_1  +     0.40295874754542 * H3x1_2
1675404   +          +    -0.46652932842091 * H3x1_3 ;
MPRINT(EM_DIAGRAM):   H4x1_1 = 0.21480063273209 * H3x1_1 + 0.40295874754542 * H3x1_2 + 
-0.46652932842091 * H3x1_3 ;
1675405   +   H4x1_2  =     -0.6309991089273 * H3x1_1  +     0.94714102572045 * H3x1_2
1675406   +          +     2.14147287324939 * H3x1_3 ;
MPRINT(EM_DIAGRAM):   H4x1_2 = -0.6309991089273 * H3x1_1 + 0.94714102572045 * H3x1_2 + 
2.14147287324939 * H3x1_3 ;
1675407   +   H4x1_3  =     7.08271783155536 * H3x1_1  +     5.80365896837882 * H3x1_2
1675408   +          +     9.39096371789355 * H3x1_3 ;
MPRINT(EM_DIAGRAM):   H4x1_3 = 7.08271783155536 * H3x1_1 + 5.80365896837882 * H3x1_2 + 
9.39096371789355 * H3x1_3 ;
1675409   +   H4x1_1  = H4x1_1  +     0.53462819743794 * H3x2_1
1675410   +          +    -1.20381600795509 * H3x2_2  +    -0.84571712717491 * H3x2_3 ;
MPRINT(EM_DIAGRAM):   H4x1_1 = H4x1_1 + 0.53462819743794 * H3x2_1 + -1.20381600795509 * H3x2_2 
+ -0.84571712717491 * H3x2_3 ;
1675411   +   H4x1_2  = H4x1_2  +    -0.40059252904061 * H3x2_1
1675412   +          +    -0.33184237889707 * H3x2_2  +    -3.44450406377857 * H3x2_3 ;
MPRINT(EM_DIAGRAM):   H4x1_2 = H4x1_2 + -0.40059252904061 * H3x2_1 + -0.33184237889707 * 
H3x2_2 + -3.44450406377857 * H3x2_3 ;
1675413   +   H4x1_3  = H4x1_3  +    -2.56473440384479 * H3x2_1
1675414   +          +     3.01233247745394 * H3x2_2  +    -3.53948797131919 * H3x2_3 ;
MPRINT(EM_DIAGRAM):   H4x1_3 = H4x1_3 + -2.56473440384479 * H3x2_1 + 3.01233247745394 * H3x2_2 
+ -3.53948797131919 * H3x2_3 ;
1675415   +   H4x1_1  =    -1.40104706050408 + H4x1_1 ;
MPRINT(EM_DIAGRAM):   H4x1_1 = -1.40104706050408 + H4x1_1 ;
1675416   +   H4x1_2  =    -1.48584087284959 + H4x1_2 ;
MPRINT(EM_DIAGRAM):   H4x1_2 = -1.48584087284959 + H4x1_2 ;
1675417   +   H4x1_3  =    -5.00937717463052 + H4x1_3 ;
MPRINT(EM_DIAGRAM):   H4x1_3 = -5.00937717463052 + H4x1_3 ;
1675418   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
1675419   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
1675420   +   H4x1_1  = 1.0 / (1.0 + EXP(MIN( - H4x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H4x1_1 = 1.0 / (1.0 + EXP(MIN( - H4x1_1 , _EXP_BAR)));
1675421   +   H4x1_2  = 1.0 / (1.0 + EXP(MIN( - H4x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H4x1_2 = 1.0 / (1.0 + EXP(MIN( - H4x1_2 , _EXP_BAR)));
1675422   +   H4x1_3  = 1.0 / (1.0 + EXP(MIN( - H4x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H4x1_3 = 1.0 / (1.0 + EXP(MIN( - H4x1_3 , _EXP_BAR)));
1675423   +END;
MPRINT(EM_DIAGRAM):   END;
1675424   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1675425   +   H4x1_1  = .;
MPRINT(EM_DIAGRAM):   H4x1_1 = .;
1675426   +   H4x1_2  = .;
MPRINT(EM_DIAGRAM):   H4x1_2 = .;
1675427   +   H4x1_3  = .;
MPRINT(EM_DIAGRAM):   H4x1_3 = .;
1675428   +END;
MPRINT(EM_DIAGRAM):   END;
1675429   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1675430   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1675431   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1675432   +
1675433   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1675434   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1675435   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1675436   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1675437   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1675438   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1675439   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1675440   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1675441   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1675442   +end;
MPRINT(EM_DIAGRAM):   end;
1675443   +else do;
MPRINT(EM_DIAGRAM):   else do;
1675444   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1675445   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1675446   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1675447   +   end;
MPRINT(EM_DIAGRAM):   end;
1675448   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1675449   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1675450   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1675451   +   end;
MPRINT(EM_DIAGRAM):   end;
1675452   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1675453   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1675454   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1675455   +   end;
MPRINT(EM_DIAGRAM):   end;
1675456   +end;
MPRINT(EM_DIAGRAM):   end;
1675457   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1675458   +   P_DepVar1  =     1.90607652900326 * H4x1_1  +     5.01913964820729 * H4x1_2
1675459   +          +    -10.0265113542494 * H4x1_3 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 1.90607652900326 * H4x1_1 + 5.01913964820729 * H4x1_2 + 
-10.0265113542494 * H4x1_3 ;
1675460   +   P_DepVar1  =     2.91350688930984 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 2.91350688930984 + P_DepVar1 ;
1675461   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1675462   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1675463   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1675464   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1675465   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1675466   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1675467   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1675468   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1675469   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1675470   +END;
MPRINT(EM_DIAGRAM):   END;
1675471   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1675472   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1675473   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1675474   +END;
MPRINT(EM_DIAGRAM):   END;
1675475   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1675476   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1675477   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1675478   +END;
MPRINT(EM_DIAGRAM):   END;
1675479   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1675480   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1675481   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1675482   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1675483   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1675484   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1675485   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1675486   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1675487   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1675488   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1675489   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1675490   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1675491   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1675492   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1675493   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1675494   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1675495   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1675496   +END;
MPRINT(EM_DIAGRAM):   END;
1675497   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1675498   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1675499   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1675500   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1675501    run;

NOTE: DATA STEP view saved on file EMWS8.AUTONEURAL18_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.PRINCOMP_TRAIN.VIEW used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1675502    quit;
1675503    filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
1675504    filename emflow
1675504  ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural18\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural18\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * AutoNeural18: Scoring VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1675505    *------------------------------------------------------------*;
1675506    * AutoNeural18: Scoring VALIDATE data;
1675507    *------------------------------------------------------------*;
1675508    data EMWS8.AutoNeural18_VALIDATE
1675509    / view=EMWS8.AutoNeural18_VALIDATE
1675510    ;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural18_VALIDATE / view=EMWS8.AutoNeural18_VALIDATE ;
1675511    set EMWS8.PRINCOMP_VALIDATE
1675512    ;
MPRINT(EM_DIAGRAM):   set EMWS8.PRINCOMP_VALIDATE ;
1675513    %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural18\EMFLOWSCORE.sas.
1675514   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1675515   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1675516   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1675517   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1675518   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1675519   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1675520   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1675521   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1675522   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1675523   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1675524   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1675525   +LENGTH _WARN_ $4
1675526   +      F_DepVar  $ 12
1675527   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1675528   +      label S_PC_1 = 'Standard: PC_1' ;
MPRINT(EM_DIAGRAM):   label S_PC_1 = 'Standard: PC_1' ;
1675529   +
1675530   +      label S_PC_10 = 'Standard: PC_10' ;
MPRINT(EM_DIAGRAM):   label S_PC_10 = 'Standard: PC_10' ;
1675531   +
1675532   +      label S_PC_11 = 'Standard: PC_11' ;
MPRINT(EM_DIAGRAM):   label S_PC_11 = 'Standard: PC_11' ;
1675533   +
1675534   +      label S_PC_12 = 'Standard: PC_12' ;
MPRINT(EM_DIAGRAM):   label S_PC_12 = 'Standard: PC_12' ;
1675535   +
1675536   +      label S_PC_13 = 'Standard: PC_13' ;
MPRINT(EM_DIAGRAM):   label S_PC_13 = 'Standard: PC_13' ;
1675537   +
1675538   +      label S_PC_14 = 'Standard: PC_14' ;
MPRINT(EM_DIAGRAM):   label S_PC_14 = 'Standard: PC_14' ;
1675539   +
1675540   +      label S_PC_15 = 'Standard: PC_15' ;
MPRINT(EM_DIAGRAM):   label S_PC_15 = 'Standard: PC_15' ;
1675541   +
1675542   +      label S_PC_16 = 'Standard: PC_16' ;
MPRINT(EM_DIAGRAM):   label S_PC_16 = 'Standard: PC_16' ;
1675543   +
1675544   +      label S_PC_17 = 'Standard: PC_17' ;
MPRINT(EM_DIAGRAM):   label S_PC_17 = 'Standard: PC_17' ;
1675545   +
1675546   +      label S_PC_2 = 'Standard: PC_2' ;
MPRINT(EM_DIAGRAM):   label S_PC_2 = 'Standard: PC_2' ;
1675547   +
1675548   +      label S_PC_3 = 'Standard: PC_3' ;
MPRINT(EM_DIAGRAM):   label S_PC_3 = 'Standard: PC_3' ;
1675549   +
1675550   +      label S_PC_4 = 'Standard: PC_4' ;
MPRINT(EM_DIAGRAM):   label S_PC_4 = 'Standard: PC_4' ;
1675551   +
1675552   +      label S_PC_5 = 'Standard: PC_5' ;
MPRINT(EM_DIAGRAM):   label S_PC_5 = 'Standard: PC_5' ;
1675553   +
1675554   +      label S_PC_6 = 'Standard: PC_6' ;
MPRINT(EM_DIAGRAM):   label S_PC_6 = 'Standard: PC_6' ;
1675555   +
1675556   +      label S_PC_7 = 'Standard: PC_7' ;
MPRINT(EM_DIAGRAM):   label S_PC_7 = 'Standard: PC_7' ;
1675557   +
1675558   +      label S_PC_8 = 'Standard: PC_8' ;
MPRINT(EM_DIAGRAM):   label S_PC_8 = 'Standard: PC_8' ;
1675559   +
1675560   +      label S_PC_9 = 'Standard: PC_9' ;
MPRINT(EM_DIAGRAM):   label S_PC_9 = 'Standard: PC_9' ;
1675561   +
1675562   +      label S_Year_Birth = 'Standard: Year_Birth' ;
MPRINT(EM_DIAGRAM):   label S_Year_Birth = 'Standard: Year_Birth' ;
1675563   +
1675564   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
1675565   +
1675566   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
1675567   +
1675568   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
1675569   +
1675570   +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
1675571   +
1675572   +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
1675573   +
1675574   +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
1675575   +
1675576   +      label H1x3_1 = 'Hidden: H1x3_=1' ;
MPRINT(EM_DIAGRAM):   label H1x3_1 = 'Hidden: H1x3_=1' ;
1675577   +
1675578   +      label H1x3_2 = 'Hidden: H1x3_=2' ;
MPRINT(EM_DIAGRAM):   label H1x3_2 = 'Hidden: H1x3_=2' ;
1675579   +
1675580   +      label H1x3_3 = 'Hidden: H1x3_=3' ;
MPRINT(EM_DIAGRAM):   label H1x3_3 = 'Hidden: H1x3_=3' ;
1675581   +
1675582   +      label H1x4_1 = 'Hidden: H1x4_=1' ;
MPRINT(EM_DIAGRAM):   label H1x4_1 = 'Hidden: H1x4_=1' ;
1675583   +
1675584   +      label H1x4_2 = 'Hidden: H1x4_=2' ;
MPRINT(EM_DIAGRAM):   label H1x4_2 = 'Hidden: H1x4_=2' ;
1675585   +
1675586   +      label H1x4_3 = 'Hidden: H1x4_=3' ;
MPRINT(EM_DIAGRAM):   label H1x4_3 = 'Hidden: H1x4_=3' ;
1675587   +
1675588   +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
1675589   +
1675590   +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
1675591   +
1675592   +      label H2x1_3 = 'Hidden: H2x1_=3' ;
MPRINT(EM_DIAGRAM):   label H2x1_3 = 'Hidden: H2x1_=3' ;
1675593   +
1675594   +      label H2x2_1 = 'Hidden: H2x2_=1' ;
MPRINT(EM_DIAGRAM):   label H2x2_1 = 'Hidden: H2x2_=1' ;
1675595   +
1675596   +      label H2x2_2 = 'Hidden: H2x2_=2' ;
MPRINT(EM_DIAGRAM):   label H2x2_2 = 'Hidden: H2x2_=2' ;
1675597   +
1675598   +      label H2x2_3 = 'Hidden: H2x2_=3' ;
MPRINT(EM_DIAGRAM):   label H2x2_3 = 'Hidden: H2x2_=3' ;
1675599   +
1675600   +      label H2x3_1 = 'Hidden: H2x3_=1' ;
MPRINT(EM_DIAGRAM):   label H2x3_1 = 'Hidden: H2x3_=1' ;
1675601   +
1675602   +      label H2x3_2 = 'Hidden: H2x3_=2' ;
MPRINT(EM_DIAGRAM):   label H2x3_2 = 'Hidden: H2x3_=2' ;
1675603   +
1675604   +      label H2x3_3 = 'Hidden: H2x3_=3' ;
MPRINT(EM_DIAGRAM):   label H2x3_3 = 'Hidden: H2x3_=3' ;
1675605   +
1675606   +      label H3x1_1 = 'Hidden: H3x1_=1' ;
MPRINT(EM_DIAGRAM):   label H3x1_1 = 'Hidden: H3x1_=1' ;
1675607   +
1675608   +      label H3x1_2 = 'Hidden: H3x1_=2' ;
MPRINT(EM_DIAGRAM):   label H3x1_2 = 'Hidden: H3x1_=2' ;
1675609   +
1675610   +      label H3x1_3 = 'Hidden: H3x1_=3' ;
MPRINT(EM_DIAGRAM):   label H3x1_3 = 'Hidden: H3x1_=3' ;
1675611   +
1675612   +      label H3x2_1 = 'Hidden: H3x2_=1' ;
MPRINT(EM_DIAGRAM):   label H3x2_1 = 'Hidden: H3x2_=1' ;
1675613   +
1675614   +      label H3x2_2 = 'Hidden: H3x2_=2' ;
MPRINT(EM_DIAGRAM):   label H3x2_2 = 'Hidden: H3x2_=2' ;
1675615   +
1675616   +      label H3x2_3 = 'Hidden: H3x2_=3' ;
MPRINT(EM_DIAGRAM):   label H3x2_3 = 'Hidden: H3x2_=3' ;
1675617   +
1675618   +      label H4x1_1 = 'Hidden: H4x1_=1' ;
MPRINT(EM_DIAGRAM):   label H4x1_1 = 'Hidden: H4x1_=1' ;
1675619   +
1675620   +      label H4x1_2 = 'Hidden: H4x1_=2' ;
MPRINT(EM_DIAGRAM):   label H4x1_2 = 'Hidden: H4x1_=2' ;
1675621   +
1675622   +      label H4x1_3 = 'Hidden: H4x1_=3' ;
MPRINT(EM_DIAGRAM):   label H4x1_3 = 'Hidden: H4x1_=3' ;
1675623   +
1675624   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1675625   +
1675626   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1675627   +
1675628   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1675629   +
1675630   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1675631   +
1675632   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1675633   +
1675634   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1675635   +
1675636   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1675637   +
1675638   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1675639   +
1675640   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1675641   +*** Checking missing input Interval
1675642   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1675643   +
1675644   +IF NMISS(
1675645   +   PC_1 ,
1675646   +   PC_10 ,
1675647   +   PC_11 ,
1675648   +   PC_12 ,
1675649   +   PC_13 ,
1675650   +   PC_14 ,
1675651   +   PC_15 ,
1675652   +   PC_16 ,
1675653   +   PC_17 ,
1675654   +   PC_2 ,
1675655   +   PC_3 ,
1675656   +   PC_4 ,
1675657   +   PC_5 ,
1675658   +   PC_6 ,
1675659   +   PC_7 ,
1675660   +   PC_8 ,
1675661   +   PC_9 ,
1675662   +   Year_Birth   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( PC_1 , PC_10 , PC_11 , PC_12 , PC_13 , PC_14 , PC_15 , PC_16 , 
PC_17 , PC_2 , PC_3 , PC_4 , PC_5 , PC_6 , PC_7 , PC_8 , PC_9 , Year_Birth ) THEN DO;
1675663   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1675664   +
1675665   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1675666   +END;
MPRINT(EM_DIAGRAM):   END;
1675667   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1675668   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
1675669   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1675670   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1675671   +   S_PC_1  =  -3.567597872154E-15 +     0.29892739052271 * PC_1 ;
MPRINT(EM_DIAGRAM):   S_PC_1 = -3.567597872154E-15 + 0.29892739052271 * PC_1 ;
1675672   +   S_PC_10  = -6.0346468636081E-15 +     0.82173953858445 * PC_10 ;
MPRINT(EM_DIAGRAM):   S_PC_10 = -6.0346468636081E-15 + 0.82173953858445 * PC_10 ;
1675673   +   S_PC_11  =   6.055841017477E-15 +     0.85619046033275 * PC_11 ;
MPRINT(EM_DIAGRAM):   S_PC_11 = 6.055841017477E-15 + 0.85619046033275 * PC_11 ;
1675674   +   S_PC_12  = -3.9570415662911E-15 +     0.88816580619395 * PC_12 ;
MPRINT(EM_DIAGRAM):   S_PC_12 = -3.9570415662911E-15 + 0.88816580619395 * PC_12 ;
1675675   +   S_PC_13  =  1.4807903817941E-15 +     0.89679040249719 * PC_13 ;
MPRINT(EM_DIAGRAM):   S_PC_13 = 1.4807903817941E-15 + 0.89679040249719 * PC_13 ;
1675676   +   S_PC_14  = -6.1940871521205E-15 +     0.90336543119982 * PC_14 ;
MPRINT(EM_DIAGRAM):   S_PC_14 = -6.1940871521205E-15 + 0.90336543119982 * PC_14 ;
1675677   +   S_PC_15  =   -3.45147395417E-16 +     0.92997960877389 * PC_15 ;
MPRINT(EM_DIAGRAM):   S_PC_15 = -3.45147395417E-16 + 0.92997960877389 * PC_15 ;
1675678   +   S_PC_16  = -2.0832890955173E-15 +     0.95096832834142 * PC_16 ;
MPRINT(EM_DIAGRAM):   S_PC_16 = -2.0832890955173E-15 + 0.95096832834142 * PC_16 ;
1675679   +   S_PC_17  =  4.0710461992609E-15 +     0.99882451143041 * PC_17 ;
MPRINT(EM_DIAGRAM):   S_PC_17 = 4.0710461992609E-15 + 0.99882451143041 * PC_17 ;
1675680   +   S_PC_2  =  6.4589631283016E-15 +      0.5437311140029 * PC_2 ;
MPRINT(EM_DIAGRAM):   S_PC_2 = 6.4589631283016E-15 + 0.5437311140029 * PC_2 ;
1675681   +   S_PC_3  =  2.2833690425384E-15 +     0.55367740285547 * PC_3 ;
MPRINT(EM_DIAGRAM):   S_PC_3 = 2.2833690425384E-15 + 0.55367740285547 * PC_3 ;
1675682   +   S_PC_4  = -3.6725092169592E-15 +     0.63698127005552 * PC_4 ;
MPRINT(EM_DIAGRAM):   S_PC_4 = -3.6725092169592E-15 + 0.63698127005552 * PC_4 ;
1675683   +   S_PC_5  = -4.6355038408768E-15 +     0.66670299180006 * PC_5 ;
MPRINT(EM_DIAGRAM):   S_PC_5 = -4.6355038408768E-15 + 0.66670299180006 * PC_5 ;
1675684   +   S_PC_6  =  1.5846922792836E-15 +     0.70534791664737 * PC_6 ;
MPRINT(EM_DIAGRAM):   S_PC_6 = 1.5846922792836E-15 + 0.70534791664737 * PC_6 ;
1675685   +   S_PC_7  =  6.7268179657212E-16 +     0.74932361381713 * PC_7 ;
MPRINT(EM_DIAGRAM):   S_PC_7 = 6.7268179657212E-16 + 0.74932361381713 * PC_7 ;
1675686   +   S_PC_8  = -2.3246545307055E-15 +     0.77161638976627 * PC_8 ;
MPRINT(EM_DIAGRAM):   S_PC_8 = -2.3246545307055E-15 + 0.77161638976627 * PC_8 ;
1675687   +   S_PC_9  = -3.7729896578756E-15 +     0.80831761659605 * PC_9 ;
MPRINT(EM_DIAGRAM):   S_PC_9 = -3.7729896578756E-15 + 0.80831761659605 * PC_9 ;
1675688   +   S_Year_Birth  =    -163.205330145852 +     0.08289609202864 * Year_Birth ;
MPRINT(EM_DIAGRAM):   S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
1675689   +END;
MPRINT(EM_DIAGRAM):   END;
1675690   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1675691   +   IF MISSING( PC_1 ) THEN S_PC_1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_1 ) THEN S_PC_1 = . ;
1675692   +   ELSE S_PC_1  =  -3.567597872154E-15 +     0.29892739052271 * PC_1 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_1 = -3.567597872154E-15 + 0.29892739052271 * PC_1 ;
1675693   +   IF MISSING( PC_10 ) THEN S_PC_10  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_10 ) THEN S_PC_10 = . ;
1675694   +   ELSE S_PC_10  = -6.0346468636081E-15 +     0.82173953858445 * PC_10 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_10 = -6.0346468636081E-15 + 0.82173953858445 * PC_10 ;
1675695   +   IF MISSING( PC_11 ) THEN S_PC_11  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_11 ) THEN S_PC_11 = . ;
1675696   +   ELSE S_PC_11  =   6.055841017477E-15 +     0.85619046033275 * PC_11 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_11 = 6.055841017477E-15 + 0.85619046033275 * PC_11 ;
1675697   +   IF MISSING( PC_12 ) THEN S_PC_12  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_12 ) THEN S_PC_12 = . ;
1675698   +   ELSE S_PC_12  = -3.9570415662911E-15 +     0.88816580619395 * PC_12 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_12 = -3.9570415662911E-15 + 0.88816580619395 * PC_12 ;
1675699   +   IF MISSING( PC_13 ) THEN S_PC_13  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_13 ) THEN S_PC_13 = . ;
1675700   +   ELSE S_PC_13  =  1.4807903817941E-15 +     0.89679040249719 * PC_13 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_13 = 1.4807903817941E-15 + 0.89679040249719 * PC_13 ;
1675701   +   IF MISSING( PC_14 ) THEN S_PC_14  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_14 ) THEN S_PC_14 = . ;
1675702   +   ELSE S_PC_14  = -6.1940871521205E-15 +     0.90336543119982 * PC_14 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_14 = -6.1940871521205E-15 + 0.90336543119982 * PC_14 ;
1675703   +   IF MISSING( PC_15 ) THEN S_PC_15  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_15 ) THEN S_PC_15 = . ;
1675704   +   ELSE S_PC_15  =   -3.45147395417E-16 +     0.92997960877389 * PC_15 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_15 = -3.45147395417E-16 + 0.92997960877389 * PC_15 ;
1675705   +   IF MISSING( PC_16 ) THEN S_PC_16  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_16 ) THEN S_PC_16 = . ;
1675706   +   ELSE S_PC_16  = -2.0832890955173E-15 +     0.95096832834142 * PC_16 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_16 = -2.0832890955173E-15 + 0.95096832834142 * PC_16 ;
1675707   +   IF MISSING( PC_17 ) THEN S_PC_17  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_17 ) THEN S_PC_17 = . ;
1675708   +   ELSE S_PC_17  =  4.0710461992609E-15 +     0.99882451143041 * PC_17 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_17 = 4.0710461992609E-15 + 0.99882451143041 * PC_17 ;
1675709   +   IF MISSING( PC_2 ) THEN S_PC_2  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_2 ) THEN S_PC_2 = . ;
1675710   +   ELSE S_PC_2  =  6.4589631283016E-15 +      0.5437311140029 * PC_2 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_2 = 6.4589631283016E-15 + 0.5437311140029 * PC_2 ;
1675711   +   IF MISSING( PC_3 ) THEN S_PC_3  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_3 ) THEN S_PC_3 = . ;
1675712   +   ELSE S_PC_3  =  2.2833690425384E-15 +     0.55367740285547 * PC_3 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_3 = 2.2833690425384E-15 + 0.55367740285547 * PC_3 ;
1675713   +   IF MISSING( PC_4 ) THEN S_PC_4  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_4 ) THEN S_PC_4 = . ;
1675714   +   ELSE S_PC_4  = -3.6725092169592E-15 +     0.63698127005552 * PC_4 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_4 = -3.6725092169592E-15 + 0.63698127005552 * PC_4 ;
1675715   +   IF MISSING( PC_5 ) THEN S_PC_5  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_5 ) THEN S_PC_5 = . ;
1675716   +   ELSE S_PC_5  = -4.6355038408768E-15 +     0.66670299180006 * PC_5 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_5 = -4.6355038408768E-15 + 0.66670299180006 * PC_5 ;
1675717   +   IF MISSING( PC_6 ) THEN S_PC_6  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_6 ) THEN S_PC_6 = . ;
1675718   +   ELSE S_PC_6  =  1.5846922792836E-15 +     0.70534791664737 * PC_6 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_6 = 1.5846922792836E-15 + 0.70534791664737 * PC_6 ;
1675719   +   IF MISSING( PC_7 ) THEN S_PC_7  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_7 ) THEN S_PC_7 = . ;
1675720   +   ELSE S_PC_7  =  6.7268179657212E-16 +     0.74932361381713 * PC_7 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_7 = 6.7268179657212E-16 + 0.74932361381713 * PC_7 ;
1675721   +   IF MISSING( PC_8 ) THEN S_PC_8  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_8 ) THEN S_PC_8 = . ;
1675722   +   ELSE S_PC_8  = -2.3246545307055E-15 +     0.77161638976627 * PC_8 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_8 = -2.3246545307055E-15 + 0.77161638976627 * PC_8 ;
1675723   +   IF MISSING( PC_9 ) THEN S_PC_9  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_9 ) THEN S_PC_9 = . ;
1675724   +   ELSE S_PC_9  = -3.7729896578756E-15 +     0.80831761659605 * PC_9 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_9 = -3.7729896578756E-15 + 0.80831761659605 * PC_9 ;
1675725   +   IF MISSING( Year_Birth ) THEN S_Year_Birth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Year_Birth ) THEN S_Year_Birth = . ;
1675726   +   ELSE S_Year_Birth  =    -163.205330145852 +     0.08289609202864 *
1675727   +        Year_Birth ;
MPRINT(EM_DIAGRAM):   ELSE S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
1675728   +END;
MPRINT(EM_DIAGRAM):   END;
1675729   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1675730   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
1675731   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1675732   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1675733   +   H1x1_1  =     0.07723269924752 * S_PC_1  +     0.43743330545012 * S_PC_10
1675734   +          +      1.6693115657792 * S_PC_11  +    -0.64722248381133 * S_PC_12
1675735   +          +    -1.14011516948896 * S_PC_13  +     0.13365171033005 * S_PC_14
1675736   +          +    -0.87932467478542 * S_PC_15  +      0.1891397274897 * S_PC_16
1675737   +          +     0.93293917054445 * S_PC_17  +    -6.03439059205619 * S_PC_2
1675738   +          +    -2.87849566755714 * S_PC_3  +     3.62710637032582 * S_PC_4
1675739   +          +     0.18299783411397 * S_PC_5  +    -0.57854626628773 * S_PC_6
1675740   +          +     1.53212873074737 * S_PC_7  +    -4.58356670489514 * S_PC_8
1675741   +          +    -1.33584602395783 * S_PC_9  +     0.27972685229597 *
1675742   +        S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.07723269924752 * S_PC_1 + 0.43743330545012 * S_PC_10 + 
1.6693115657792 * S_PC_11 + -0.64722248381133 * S_PC_12 + -1.14011516948896 * S_PC_13 + 
0.13365171033005 * S_PC_14 + -0.87932467478542 * S_PC_15 + 0.1891397274897 * S_PC_16 + 
0.93293917054445 * S_PC_17 + -6.03439059205619 * S_PC_2 + -2.87849566755714 * S_PC_3 + 
3.62710637032582 * S_PC_4 + 0.18299783411397 * S_PC_5 + -0.57854626628773 * S_PC_6 + 
1.53212873074737 * S_PC_7 + -4.58356670489514 * S_PC_8 + -1.33584602395783 * S_PC_9 + 
0.27972685229597 * S_Year_Birth ;
1675743   +   H1x1_2  =      0.4295062431615 * S_PC_1  +     1.74475330655505 * S_PC_10
1675744   +          +     2.23910233765174 * S_PC_11  +    -1.25371934636809 * S_PC_12
1675745   +          +    -0.75166168153719 * S_PC_13  +     0.30586217171617 * S_PC_14
1675746   +          +    -0.14707761142861 * S_PC_15  +     0.06789179881861 * S_PC_16
1675747   +          +     0.15708065500364 * S_PC_17  +    -3.27197596660455 * S_PC_2
1675748   +          +    -1.83455401439583 * S_PC_3  +    -1.33583150986124 * S_PC_4
1675749   +          +     3.76700369809262 * S_PC_5  +     3.87817856654224 * S_PC_6
1675750   +          +      1.3460326103488 * S_PC_7  +    -5.95757633892394 * S_PC_8
1675751   +          +    -1.37588259826469 * S_PC_9  +     0.28058850697694 *
1675752   +        S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.4295062431615 * S_PC_1 + 1.74475330655505 * S_PC_10 + 
2.23910233765174 * S_PC_11 + -1.25371934636809 * S_PC_12 + -0.75166168153719 * S_PC_13 + 
0.30586217171617 * S_PC_14 + -0.14707761142861 * S_PC_15 + 0.06789179881861 * S_PC_16 + 
0.15708065500364 * S_PC_17 + -3.27197596660455 * S_PC_2 + -1.83455401439583 * S_PC_3 + 
-1.33583150986124 * S_PC_4 + 3.76700369809262 * S_PC_5 + 3.87817856654224 * S_PC_6 + 
1.3460326103488 * S_PC_7 + -5.95757633892394 * S_PC_8 + -1.37588259826469 * S_PC_9 + 
0.28058850697694 * S_Year_Birth ;
1675753   +   H1x1_1  =     1.57200769060994 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.57200769060994 + H1x1_1 ;
1675754   +   H1x1_2  =     0.00854073179305 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.00854073179305 + H1x1_2 ;
1675755   +   H1x1_3  = 0;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0;
1675756   +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 );
1675757   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1675758   +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
1675759   +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
1675760   +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
1675761   +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
1675762   +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
1675763   +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
1675764   +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
1675765   +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
1675766   +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
1675767   +END;
MPRINT(EM_DIAGRAM):   END;
1675768   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1675769   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
1675770   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
1675771   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
1675772   +END;
MPRINT(EM_DIAGRAM):   END;
1675773   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1675774   +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
1675775   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1675776   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1675777   +   H1x2_1  =    -2.09077003382313 * S_PC_1  +    -2.68998470873609 * S_PC_10
1675778   +          +     1.22193300919824 * S_PC_11  +     1.69229496424731 * S_PC_12
1675779   +          +    -0.70219302099638 * S_PC_13  +     0.71691278821801 * S_PC_14
1675780   +          +    -0.79717444166607 * S_PC_15  +     0.75087952429581 * S_PC_16
1675781   +          +    -0.63761714428085 * S_PC_17  +     3.05570889853319 * S_PC_2
1675782   +          +    -0.67965194572009 * S_PC_3  +     0.27216947842522 * S_PC_4
1675783   +          +    -0.30605214794042 * S_PC_5  +     4.15429282676847 * S_PC_6
1675784   +          +    -0.29813935151942 * S_PC_7  +    -0.51866797567812 * S_PC_8
1675785   +          +    -0.87253914316211 * S_PC_9  +     0.83340951033676 *
1675786   +        S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -2.09077003382313 * S_PC_1 + -2.68998470873609 * S_PC_10 + 
1.22193300919824 * S_PC_11 + 1.69229496424731 * S_PC_12 + -0.70219302099638 * S_PC_13 + 
0.71691278821801 * S_PC_14 + -0.79717444166607 * S_PC_15 + 0.75087952429581 * S_PC_16 + 
-0.63761714428085 * S_PC_17 + 3.05570889853319 * S_PC_2 + -0.67965194572009 * S_PC_3 + 
0.27216947842522 * S_PC_4 + -0.30605214794042 * S_PC_5 + 4.15429282676847 * S_PC_6 + 
-0.29813935151942 * S_PC_7 + -0.51866797567812 * S_PC_8 + -0.87253914316211 * S_PC_9 + 
0.83340951033676 * S_Year_Birth ;
1675787   +   H1x2_2  =    -0.72679656462034 * S_PC_1  +     1.54950514971273 * S_PC_10
1675788   +          +    -0.24794354545961 * S_PC_11  +     -0.2336090989613 * S_PC_12
1675789   +          +     2.22361254868991 * S_PC_13  +    -0.65402788192767 * S_PC_14
1675790   +          +     0.69937232509444 * S_PC_15  +    -0.50976658559197 * S_PC_16
1675791   +          +    -0.04331993112708 * S_PC_17  +     1.33721375032267 * S_PC_2
1675792   +          +    -0.46941753497909 * S_PC_3  +      0.0318756188075 * S_PC_4
1675793   +          +     0.18416014255651 * S_PC_5  +    -0.54651907811311 * S_PC_6
1675794   +          +     0.19643924756506 * S_PC_7  +    -0.16327677617544 * S_PC_8
1675795   +          +    -0.63026861876226 * S_PC_9  +    -0.20733722446633 *
1675796   +        S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -0.72679656462034 * S_PC_1 + 1.54950514971273 * S_PC_10 + 
-0.24794354545961 * S_PC_11 + -0.2336090989613 * S_PC_12 + 2.22361254868991 * S_PC_13 + 
-0.65402788192767 * S_PC_14 + 0.69937232509444 * S_PC_15 + -0.50976658559197 * S_PC_16 + 
-0.04331993112708 * S_PC_17 + 1.33721375032267 * S_PC_2 + -0.46941753497909 * S_PC_3 + 
0.0318756188075 * S_PC_4 + 0.18416014255651 * S_PC_5 + -0.54651907811311 * S_PC_6 + 
0.19643924756506 * S_PC_7 + -0.16327677617544 * S_PC_8 + -0.63026861876226 * S_PC_9 + 
-0.20733722446633 * S_Year_Birth ;
1675797   +   H1x2_1  =    -0.45484074595841 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -0.45484074595841 + H1x2_1 ;
1675798   +   H1x2_2  =     1.65544923473661 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 1.65544923473661 + H1x2_2 ;
1675799   +   H1x2_3  = 0;
MPRINT(EM_DIAGRAM):   H1x2_3 = 0;
1675800   +   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 );
1675801   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1675802   +   H1x2_1  = EXP(H1x2_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_1 = EXP(H1x2_1 - _MAX_);
1675803   +   _SUM_ = _SUM_ + H1x2_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_1 ;
1675804   +   H1x2_2  = EXP(H1x2_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_2 = EXP(H1x2_2 - _MAX_);
1675805   +   _SUM_ = _SUM_ + H1x2_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_2 ;
1675806   +   H1x2_3  = EXP(H1x2_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_3 = EXP(H1x2_3 - _MAX_);
1675807   +   _SUM_ = _SUM_ + H1x2_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_3 ;
1675808   +   H1x2_1  = H1x2_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 / _SUM_;
1675809   +   H1x2_2  = H1x2_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 / _SUM_;
1675810   +   H1x2_3  = H1x2_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 / _SUM_;
1675811   +END;
MPRINT(EM_DIAGRAM):   END;
1675812   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1675813   +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
1675814   +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
1675815   +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
1675816   +END;
MPRINT(EM_DIAGRAM):   END;
1675817   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1675818   +*** Writing the Node H1x3_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x3_ ;
1675819   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1675820   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1675821   +   H1x3_1  =     1.48114761979115 * S_PC_1  +    -0.77808542245614 * S_PC_10
1675822   +          +    -0.30819901448035 * S_PC_11  +     0.56026788023458 * S_PC_12
1675823   +          +     1.47931516853408 * S_PC_13  +     0.00542792617507 * S_PC_14
1675824   +          +    -1.73236906231289 * S_PC_15  +    -0.83926333373259 * S_PC_16
1675825   +          +     1.11418743009677 * S_PC_17  +     1.20202383644325 * S_PC_2
1675826   +          +     0.04213393267284 * S_PC_3  +     2.27162803788709 * S_PC_4
1675827   +          +      0.2901263213926 * S_PC_5  +     1.96650957669993 * S_PC_6
1675828   +          +    -0.25353965539248 * S_PC_7  +    -1.87254461218534 * S_PC_8
1675829   +          +    -1.60867246668536 * S_PC_9  +    -1.81517523903099 *
1675830   +        S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 1.48114761979115 * S_PC_1 + -0.77808542245614 * S_PC_10 + 
-0.30819901448035 * S_PC_11 + 0.56026788023458 * S_PC_12 + 1.47931516853408 * S_PC_13 + 
0.00542792617507 * S_PC_14 + -1.73236906231289 * S_PC_15 + -0.83926333373259 * S_PC_16 + 
1.11418743009677 * S_PC_17 + 1.20202383644325 * S_PC_2 + 0.04213393267284 * S_PC_3 + 
2.27162803788709 * S_PC_4 + 0.2901263213926 * S_PC_5 + 1.96650957669993 * S_PC_6 + 
-0.25353965539248 * S_PC_7 + -1.87254461218534 * S_PC_8 + -1.60867246668536 * S_PC_9 + 
-1.81517523903099 * S_Year_Birth ;
1675831   +   H1x3_2  =     1.57346661513148 * S_PC_1  +     0.43195496243177 * S_PC_10
1675832   +          +      0.8633889943093 * S_PC_11  +     0.19899107002304 * S_PC_12
1675833   +          +     0.89004694351718 * S_PC_13  +     0.20427645322052 * S_PC_14
1675834   +          +     1.59337923843551 * S_PC_15  +     1.67691489307996 * S_PC_16
1675835   +          +     1.00334157857434 * S_PC_17  +    -1.05358529225436 * S_PC_2
1675836   +          +    -1.83367619193431 * S_PC_3  +     2.70866972328632 * S_PC_4
1675837   +          +    -0.21267354790891 * S_PC_5  +     -1.3443463775433 * S_PC_6
1675838   +          +     1.11114248765341 * S_PC_7  +     0.97676765396811 * S_PC_8
1675839   +          +     0.06263998354893 * S_PC_9  +    -1.81223070920192 *
1675840   +        S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x3_2 = 1.57346661513148 * S_PC_1 + 0.43195496243177 * S_PC_10 + 
0.8633889943093 * S_PC_11 + 0.19899107002304 * S_PC_12 + 0.89004694351718 * S_PC_13 + 
0.20427645322052 * S_PC_14 + 1.59337923843551 * S_PC_15 + 1.67691489307996 * S_PC_16 + 
1.00334157857434 * S_PC_17 + -1.05358529225436 * S_PC_2 + -1.83367619193431 * S_PC_3 + 
2.70866972328632 * S_PC_4 + -0.21267354790891 * S_PC_5 + -1.3443463775433 * S_PC_6 + 
1.11114248765341 * S_PC_7 + 0.97676765396811 * S_PC_8 + 0.06263998354893 * S_PC_9 + 
-1.81223070920192 * S_Year_Birth ;
1675841   +   H1x3_1  =    -1.38533008257086 + H1x3_1 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = -1.38533008257086 + H1x3_1 ;
1675842   +   H1x3_2  =     1.12341983705313 + H1x3_2 ;
MPRINT(EM_DIAGRAM):   H1x3_2 = 1.12341983705313 + H1x3_2 ;
1675843   +   H1x3_3  = 0;
MPRINT(EM_DIAGRAM):   H1x3_3 = 0;
1675844   +   _MAX_ = MAX (H1x3_1 , H1x3_2 , H1x3_3 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x3_1 , H1x3_2 , H1x3_3 );
1675845   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1675846   +   H1x3_1  = EXP(H1x3_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_1 = EXP(H1x3_1 - _MAX_);
1675847   +   _SUM_ = _SUM_ + H1x3_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_1 ;
1675848   +   H1x3_2  = EXP(H1x3_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_2 = EXP(H1x3_2 - _MAX_);
1675849   +   _SUM_ = _SUM_ + H1x3_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_2 ;
1675850   +   H1x3_3  = EXP(H1x3_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_3 = EXP(H1x3_3 - _MAX_);
1675851   +   _SUM_ = _SUM_ + H1x3_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_3 ;
1675852   +   H1x3_1  = H1x3_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 / _SUM_;
1675853   +   H1x3_2  = H1x3_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 / _SUM_;
1675854   +   H1x3_3  = H1x3_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_3 = H1x3_3 / _SUM_;
1675855   +END;
MPRINT(EM_DIAGRAM):   END;
1675856   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1675857   +   H1x3_1  = .;
MPRINT(EM_DIAGRAM):   H1x3_1 = .;
1675858   +   H1x3_2  = .;
MPRINT(EM_DIAGRAM):   H1x3_2 = .;
1675859   +   H1x3_3  = .;
MPRINT(EM_DIAGRAM):   H1x3_3 = .;
1675860   +END;
MPRINT(EM_DIAGRAM):   END;
1675861   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1675862   +*** Writing the Node H1x4_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x4_ ;
1675863   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1675864   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1675865   +   H1x4_1  =    -0.80016530267676 * S_PC_1  +     0.61481990683794 * S_PC_10
1675866   +          +     0.98014276653455 * S_PC_11  +     0.96774210975431 * S_PC_12
1675867   +          +    -0.24220452892914 * S_PC_13  +    -1.51001392301164 * S_PC_14
1675868   +          +     0.87644450132968 * S_PC_15  +    -0.38985062946846 * S_PC_16
1675869   +          +    -0.54364633571498 * S_PC_17  +    -0.53950247180635 * S_PC_2
1675870   +          +    -1.81008396411344 * S_PC_3  +     0.14770896241053 * S_PC_4
1675871   +          +     0.29429972379263 * S_PC_5  +      0.5432632338697 * S_PC_6
1675872   +          +     0.81795185751595 * S_PC_7  +      1.7101808517267 * S_PC_8
1675873   +          +    -0.72272176691606 * S_PC_9  +     2.21178075137818 *
1675874   +        S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x4_1 = -0.80016530267676 * S_PC_1 + 0.61481990683794 * S_PC_10 + 
0.98014276653455 * S_PC_11 + 0.96774210975431 * S_PC_12 + -0.24220452892914 * S_PC_13 + 
-1.51001392301164 * S_PC_14 + 0.87644450132968 * S_PC_15 + -0.38985062946846 * S_PC_16 + 
-0.54364633571498 * S_PC_17 + -0.53950247180635 * S_PC_2 + -1.81008396411344 * S_PC_3 + 
0.14770896241053 * S_PC_4 + 0.29429972379263 * S_PC_5 + 0.5432632338697 * S_PC_6 + 
0.81795185751595 * S_PC_7 + 1.7101808517267 * S_PC_8 + -0.72272176691606 * S_PC_9 + 
2.21178075137818 * S_Year_Birth ;
1675875   +   H1x4_2  =     2.94582724887707 * S_PC_1  +    -1.04477313406074 * S_PC_10
1675876   +          +     -2.4839961217725 * S_PC_11  +     0.20099584530937 * S_PC_12
1675877   +          +    -0.06864475460031 * S_PC_13  +     0.19225464743494 * S_PC_14
1675878   +          +     0.61674704994894 * S_PC_15  +     0.80994823370663 * S_PC_16
1675879   +          +     1.36897006856312 * S_PC_17  +      0.3486096099276 * S_PC_2
1675880   +          +     1.23622183682513 * S_PC_3  +      0.7033453624158 * S_PC_4
1675881   +          +     0.40583140737089 * S_PC_5  +     -0.3056392458601 * S_PC_6
1675882   +          +    -1.01410157426394 * S_PC_7  +    -1.13889506022266 * S_PC_8
1675883   +          +    -0.70945228861297 * S_PC_9  +        1.60977491949 *
1675884   +        S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x4_2 = 2.94582724887707 * S_PC_1 + -1.04477313406074 * S_PC_10 + 
-2.4839961217725 * S_PC_11 + 0.20099584530937 * S_PC_12 + -0.06864475460031 * S_PC_13 + 
0.19225464743494 * S_PC_14 + 0.61674704994894 * S_PC_15 + 0.80994823370663 * S_PC_16 + 
1.36897006856312 * S_PC_17 + 0.3486096099276 * S_PC_2 + 1.23622183682513 * S_PC_3 + 
0.7033453624158 * S_PC_4 + 0.40583140737089 * S_PC_5 + -0.3056392458601 * S_PC_6 + 
-1.01410157426394 * S_PC_7 + -1.13889506022266 * S_PC_8 + -0.70945228861297 * S_PC_9 + 
1.60977491949 * S_Year_Birth ;
1675885   +   H1x4_1  =    -0.31373086905649 + H1x4_1 ;
MPRINT(EM_DIAGRAM):   H1x4_1 = -0.31373086905649 + H1x4_1 ;
1675886   +   H1x4_2  =    -0.23423875584785 + H1x4_2 ;
MPRINT(EM_DIAGRAM):   H1x4_2 = -0.23423875584785 + H1x4_2 ;
1675887   +   H1x4_3  = 0;
MPRINT(EM_DIAGRAM):   H1x4_3 = 0;
1675888   +   _MAX_ = MAX (H1x4_1 , H1x4_2 , H1x4_3 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x4_1 , H1x4_2 , H1x4_3 );
1675889   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1675890   +   H1x4_1  = EXP(H1x4_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x4_1 = EXP(H1x4_1 - _MAX_);
1675891   +   _SUM_ = _SUM_ + H1x4_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x4_1 ;
1675892   +   H1x4_2  = EXP(H1x4_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x4_2 = EXP(H1x4_2 - _MAX_);
1675893   +   _SUM_ = _SUM_ + H1x4_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x4_2 ;
1675894   +   H1x4_3  = EXP(H1x4_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x4_3 = EXP(H1x4_3 - _MAX_);
1675895   +   _SUM_ = _SUM_ + H1x4_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x4_3 ;
1675896   +   H1x4_1  = H1x4_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x4_1 = H1x4_1 / _SUM_;
1675897   +   H1x4_2  = H1x4_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x4_2 = H1x4_2 / _SUM_;
1675898   +   H1x4_3  = H1x4_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x4_3 = H1x4_3 / _SUM_;
1675899   +END;
MPRINT(EM_DIAGRAM):   END;
1675900   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1675901   +   H1x4_1  = .;
MPRINT(EM_DIAGRAM):   H1x4_1 = .;
1675902   +   H1x4_2  = .;
MPRINT(EM_DIAGRAM):   H1x4_2 = .;
1675903   +   H1x4_3  = .;
MPRINT(EM_DIAGRAM):   H1x4_3 = .;
1675904   +END;
MPRINT(EM_DIAGRAM):   END;
1675905   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1675906   +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
1675907   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1675908   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1675909   +   H2x1_1  =     -0.6133143841405 * H1x1_1  +    -3.83938070262105 * H1x1_2
1675910   +          +     2.97647348719096 * H1x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -0.6133143841405 * H1x1_1 + -3.83938070262105 * H1x1_2 + 
2.97647348719096 * H1x1_3 ;
1675911   +   H2x1_2  =     0.84627847563363 * H1x1_1  +    -3.73586519813465 * H1x1_2
1675912   +          +     1.28953521079844 * H1x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = 0.84627847563363 * H1x1_1 + -3.73586519813465 * H1x1_2 + 
1.28953521079844 * H1x1_3 ;
1675913   +   H2x1_1  = H2x1_1  +    -3.07535111907469 * H1x2_1
1675914   +          +    -1.10008927410552 * H1x2_2  +     5.30803737772439 * H1x2_3 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -3.07535111907469 * H1x2_1 + -1.10008927410552 * 
H1x2_2 + 5.30803737772439 * H1x2_3 ;
1675915   +   H2x1_2  = H2x1_2  +     1.98363965238625 * H1x2_1
1675916   +          +    -0.95287434555938 * H1x2_2  +    -1.11784150106077 * H1x2_3 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + 1.98363965238625 * H1x2_1 + -0.95287434555938 * H1x2_2 
+ -1.11784150106077 * H1x2_3 ;
1675917   +   H2x1_1  = H2x1_1  +      0.5063143580136 * H1x3_1
1675918   +          +    -0.34731032997063 * H1x3_2  +     0.17242916251088 * H1x3_3 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + 0.5063143580136 * H1x3_1 + -0.34731032997063 * H1x3_2 
+ 0.17242916251088 * H1x3_3 ;
1675919   +   H2x1_2  = H2x1_2  +    -1.49859177763656 * H1x3_1
1675920   +          +    -0.47439550056563 * H1x3_2  +     0.98620031562872 * H1x3_3 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + -1.49859177763656 * H1x3_1 + -0.47439550056563 * 
H1x3_2 + 0.98620031562872 * H1x3_3 ;
1675921   +   H2x1_1  = H2x1_1  +     1.66849180018854 * H1x4_1
1675922   +          +    -1.05465412898618 * H1x4_2  +    -0.76816922190923 * H1x4_3 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + 1.66849180018854 * H1x4_1 + -1.05465412898618 * H1x4_2 
+ -0.76816922190923 * H1x4_3 ;
1675923   +   H2x1_2  = H2x1_2  +    -0.64156638450484 * H1x4_1
1675924   +          +     1.44483282099634 * H1x4_2  +     1.18433408020201 * H1x4_3 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + -0.64156638450484 * H1x4_1 + 1.44483282099634 * H1x4_2 
+ 1.18433408020201 * H1x4_3 ;
1675925   +   H2x1_1  =    -1.35727593871832 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -1.35727593871832 + H2x1_1 ;
1675926   +   H2x1_2  =    -2.02415682222477 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -2.02415682222477 + H2x1_2 ;
1675927   +   H2x1_3  = 0;
MPRINT(EM_DIAGRAM):   H2x1_3 = 0;
1675928   +   _MAX_ = MAX (H2x1_1 , H2x1_2 , H2x1_3 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H2x1_1 , H2x1_2 , H2x1_3 );
1675929   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1675930   +   H2x1_1  = EXP(H2x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_1 = EXP(H2x1_1 - _MAX_);
1675931   +   _SUM_ = _SUM_ + H2x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_1 ;
1675932   +   H2x1_2  = EXP(H2x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_2 = EXP(H2x1_2 - _MAX_);
1675933   +   _SUM_ = _SUM_ + H2x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_2 ;
1675934   +   H2x1_3  = EXP(H2x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_3 = EXP(H2x1_3 - _MAX_);
1675935   +   _SUM_ = _SUM_ + H2x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_3 ;
1675936   +   H2x1_1  = H2x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 / _SUM_;
1675937   +   H2x1_2  = H2x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 / _SUM_;
1675938   +   H2x1_3  = H2x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 / _SUM_;
1675939   +END;
MPRINT(EM_DIAGRAM):   END;
1675940   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1675941   +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
1675942   +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
1675943   +   H2x1_3  = .;
MPRINT(EM_DIAGRAM):   H2x1_3 = .;
1675944   +END;
MPRINT(EM_DIAGRAM):   END;
1675945   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1675946   +*** Writing the Node H2x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x2_ ;
1675947   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1675948   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1675949   +   H2x2_1  =     0.63449405645229 * H1x1_1  +     0.84446115465645 * H1x1_2
1675950   +          +    -1.56766627360236 * H1x1_3 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = 0.63449405645229 * H1x1_1 + 0.84446115465645 * H1x1_2 + 
-1.56766627360236 * H1x1_3 ;
1675951   +   H2x2_2  =    -0.19705467445914 * H1x1_1  +     0.20974772543551 * H1x1_2
1675952   +          +    -1.09606243724394 * H1x1_3 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = -0.19705467445914 * H1x1_1 + 0.20974772543551 * H1x1_2 + 
-1.09606243724394 * H1x1_3 ;
1675953   +   H2x2_1  = H2x2_1  +     0.45623308628354 * H1x2_1
1675954   +          +     0.75010274028191 * H1x2_2  +     1.20173965917267 * H1x2_3 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + 0.45623308628354 * H1x2_1 + 0.75010274028191 * H1x2_2 
+ 1.20173965917267 * H1x2_3 ;
1675955   +   H2x2_2  = H2x2_2  +     0.56802075860421 * H1x2_1
1675956   +          +     2.59062219455668 * H1x2_2  +    -0.90632723812936 * H1x2_3 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 + 0.56802075860421 * H1x2_1 + 2.59062219455668 * H1x2_2 
+ -0.90632723812936 * H1x2_3 ;
1675957   +   H2x2_1  = H2x2_1  +    -0.39791324115597 * H1x3_1
1675958   +          +     1.07686108370009 * H1x3_2  +     -0.1809775985606 * H1x3_3 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + -0.39791324115597 * H1x3_1 + 1.07686108370009 * H1x3_2 
+ -0.1809775985606 * H1x3_3 ;
1675959   +   H2x2_2  = H2x2_2  +    -1.96666697492206 * H1x3_1
1675960   +          +     1.55275173372121 * H1x3_2  +    -0.09342611528757 * H1x3_3 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 + -1.96666697492206 * H1x3_1 + 1.55275173372121 * H1x3_2 
+ -0.09342611528757 * H1x3_3 ;
1675961   +   H2x2_1  = H2x2_1  +    -2.28201609611728 * H1x4_1
1675962   +          +    -1.36632864073452 * H1x4_2  +    -0.78166079848897 * H1x4_3 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + -2.28201609611728 * H1x4_1 + -1.36632864073452 * 
H1x4_2 + -0.78166079848897 * H1x4_3 ;
1675963   +   H2x2_2  = H2x2_2  +     0.87133348497961 * H1x4_1
1675964   +          +    -0.82975118122828 * H1x4_2  +    -1.70213780111439 * H1x4_3 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 + 0.87133348497961 * H1x4_1 + -0.82975118122828 * H1x4_2 
+ -1.70213780111439 * H1x4_3 ;
1675965   +   H2x2_1  =    -1.49163500349922 + H2x2_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = -1.49163500349922 + H2x2_1 ;
1675966   +   H2x2_2  =     -0.0405622301927 + H2x2_2 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = -0.0405622301927 + H2x2_2 ;
1675967   +   H2x2_3  = 0;
MPRINT(EM_DIAGRAM):   H2x2_3 = 0;
1675968   +   _MAX_ = MAX (H2x2_1 , H2x2_2 , H2x2_3 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H2x2_1 , H2x2_2 , H2x2_3 );
1675969   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1675970   +   H2x2_1  = EXP(H2x2_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_1 = EXP(H2x2_1 - _MAX_);
1675971   +   _SUM_ = _SUM_ + H2x2_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_1 ;
1675972   +   H2x2_2  = EXP(H2x2_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_2 = EXP(H2x2_2 - _MAX_);
1675973   +   _SUM_ = _SUM_ + H2x2_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_2 ;
1675974   +   H2x2_3  = EXP(H2x2_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_3 = EXP(H2x2_3 - _MAX_);
1675975   +   _SUM_ = _SUM_ + H2x2_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_3 ;
1675976   +   H2x2_1  = H2x2_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 / _SUM_;
1675977   +   H2x2_2  = H2x2_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 / _SUM_;
1675978   +   H2x2_3  = H2x2_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_3 = H2x2_3 / _SUM_;
1675979   +END;
MPRINT(EM_DIAGRAM):   END;
1675980   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1675981   +   H2x2_1  = .;
MPRINT(EM_DIAGRAM):   H2x2_1 = .;
1675982   +   H2x2_2  = .;
MPRINT(EM_DIAGRAM):   H2x2_2 = .;
1675983   +   H2x2_3  = .;
MPRINT(EM_DIAGRAM):   H2x2_3 = .;
1675984   +END;
MPRINT(EM_DIAGRAM):   END;
1675985   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1675986   +*** Writing the Node H2x3_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x3_ ;
1675987   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1675988   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1675989   +   H2x3_1  =    -0.00478986250364 * H1x1_1  +     1.94512729287583 * H1x1_2
1675990   +          +    -0.54574044877188 * H1x1_3 ;
MPRINT(EM_DIAGRAM):   H2x3_1 = -0.00478986250364 * H1x1_1 + 1.94512729287583 * H1x1_2 + 
-0.54574044877188 * H1x1_3 ;
1675991   +   H2x3_2  =    -0.35130412480513 * H1x1_1  +     -0.5687847994534 * H1x1_2
1675992   +          +     0.00304400166261 * H1x1_3 ;
MPRINT(EM_DIAGRAM):   H2x3_2 = -0.35130412480513 * H1x1_1 + -0.5687847994534 * H1x1_2 + 
0.00304400166261 * H1x1_3 ;
1675993   +   H2x3_1  = H2x3_1  +    -0.01368566150766 * H1x2_1
1675994   +          +    -0.45146944846621 * H1x2_2  +    -0.67213884593612 * H1x2_3 ;
MPRINT(EM_DIAGRAM):   H2x3_1 = H2x3_1 + -0.01368566150766 * H1x2_1 + -0.45146944846621 * 
H1x2_2 + -0.67213884593612 * H1x2_3 ;
1675995   +   H2x3_2  = H2x3_2  +    -1.18855975344434 * H1x2_1
1675996   +          +     -0.9722196735443 * H1x2_2  +      -0.355434381432 * H1x2_3 ;
MPRINT(EM_DIAGRAM):   H2x3_2 = H2x3_2 + -1.18855975344434 * H1x2_1 + -0.9722196735443 * H1x2_2 
+ -0.355434381432 * H1x2_3 ;
1675997   +   H2x3_1  = H2x3_1  +    -0.45509153654361 * H1x3_1
1675998   +          +    -1.71140374695887 * H1x3_2  +    -0.20303329938338 * H1x3_3 ;
MPRINT(EM_DIAGRAM):   H2x3_1 = H2x3_1 + -0.45509153654361 * H1x3_1 + -1.71140374695887 * 
H1x3_2 + -0.20303329938338 * H1x3_3 ;
1675999   +   H2x3_2  = H2x3_2  +     1.04869232313058 * H1x3_1
1676000   +          +     -1.0692296884809 * H1x3_2  +    -0.52352255264688 * H1x3_3 ;
MPRINT(EM_DIAGRAM):   H2x3_2 = H2x3_2 + 1.04869232313058 * H1x3_1 + -1.0692296884809 * H1x3_2 
+ -0.52352255264688 * H1x3_3 ;
1676001   +   H2x3_1  = H2x3_1  +     0.14078396505176 * H1x4_1
1676002   +          +     0.15304402404578 * H1x4_2  +    -0.63915963465509 * H1x4_3 ;
MPRINT(EM_DIAGRAM):   H2x3_1 = H2x3_1 + 0.14078396505176 * H1x4_1 + 0.15304402404578 * H1x4_2 
+ -0.63915963465509 * H1x4_3 ;
1676003   +   H2x3_2  = H2x3_2  +    -0.36362065391576 * H1x4_1
1676004   +          +    -0.01953827604863 * H1x4_2  +      0.8236573437559 * H1x4_3 ;
MPRINT(EM_DIAGRAM):   H2x3_2 = H2x3_2 + -0.36362065391576 * H1x4_1 + -0.01953827604863 * 
H1x4_2 + 0.8236573437559 * H1x4_3 ;
1676005   +   H2x3_1  =    -1.45925755580396 + H2x3_1 ;
MPRINT(EM_DIAGRAM):   H2x3_1 = -1.45925755580396 + H2x3_1 ;
1676006   +   H2x3_2  =    -2.11509373325296 + H2x3_2 ;
MPRINT(EM_DIAGRAM):   H2x3_2 = -2.11509373325296 + H2x3_2 ;
1676007   +   H2x3_3  = 0;
MPRINT(EM_DIAGRAM):   H2x3_3 = 0;
1676008   +   _MAX_ = MAX (H2x3_1 , H2x3_2 , H2x3_3 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H2x3_1 , H2x3_2 , H2x3_3 );
1676009   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1676010   +   H2x3_1  = EXP(H2x3_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x3_1 = EXP(H2x3_1 - _MAX_);
1676011   +   _SUM_ = _SUM_ + H2x3_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x3_1 ;
1676012   +   H2x3_2  = EXP(H2x3_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x3_2 = EXP(H2x3_2 - _MAX_);
1676013   +   _SUM_ = _SUM_ + H2x3_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x3_2 ;
1676014   +   H2x3_3  = EXP(H2x3_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x3_3 = EXP(H2x3_3 - _MAX_);
1676015   +   _SUM_ = _SUM_ + H2x3_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x3_3 ;
1676016   +   H2x3_1  = H2x3_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x3_1 = H2x3_1 / _SUM_;
1676017   +   H2x3_2  = H2x3_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x3_2 = H2x3_2 / _SUM_;
1676018   +   H2x3_3  = H2x3_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x3_3 = H2x3_3 / _SUM_;
1676019   +END;
MPRINT(EM_DIAGRAM):   END;
1676020   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1676021   +   H2x3_1  = .;
MPRINT(EM_DIAGRAM):   H2x3_1 = .;
1676022   +   H2x3_2  = .;
MPRINT(EM_DIAGRAM):   H2x3_2 = .;
1676023   +   H2x3_3  = .;
MPRINT(EM_DIAGRAM):   H2x3_3 = .;
1676024   +END;
MPRINT(EM_DIAGRAM):   END;
1676025   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1676026   +*** Writing the Node H3x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H3x1_ ;
1676027   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1676028   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1676029   +   H3x1_1  =    -3.08764799088394 * H2x1_1  +    -1.91738631410822 * H2x1_2
1676030   +          +     6.38437371946773 * H2x1_3 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = -3.08764799088394 * H2x1_1 + -1.91738631410822 * H2x1_2 + 
6.38437371946773 * H2x1_3 ;
1676031   +   H3x1_2  =    -2.95950103736455 * H2x1_1  +    -1.44269952634242 * H2x1_2
1676032   +          +     0.99008255139162 * H2x1_3 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = -2.95950103736455 * H2x1_1 + -1.44269952634242 * H2x1_2 + 
0.99008255139162 * H2x1_3 ;
1676033   +   H3x1_3  =    -2.74395762122593 * H2x1_1  +    -1.81036147116037 * H2x1_2
1676034   +          +     3.01489730027742 * H2x1_3 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = -2.74395762122593 * H2x1_1 + -1.81036147116037 * H2x1_2 + 
3.01489730027742 * H2x1_3 ;
1676035   +   H3x1_1  = H3x1_1  +     0.73548918886018 * H2x2_1
1676036   +          +     0.80208488351218 * H2x2_2  +    -1.27461254024898 * H2x2_3 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = H3x1_1 + 0.73548918886018 * H2x2_1 + 0.80208488351218 * H2x2_2 
+ -1.27461254024898 * H2x2_3 ;
1676037   +   H3x1_2  = H3x1_2  +    -1.22577938531859 * H2x2_1
1676038   +          +    -1.57729949542124 * H2x2_2  +    -0.20653566807302 * H2x2_3 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = H3x1_2 + -1.22577938531859 * H2x2_1 + -1.57729949542124 * 
H2x2_2 + -0.20653566807302 * H2x2_3 ;
1676039   +   H3x1_3  = H3x1_3  +    -0.94220166137452 * H2x2_1
1676040   +          +    -2.23997375895636 * H2x2_2  +    -0.69569779790922 * H2x2_3 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = H3x1_3 + -0.94220166137452 * H2x2_1 + -2.23997375895636 * 
H2x2_2 + -0.69569779790922 * H2x2_3 ;
1676041   +   H3x1_1  = H3x1_1  +     0.47459821701313 * H2x3_1
1676042   +          +     0.33884611641605 * H2x3_2  +     0.28384294800104 * H2x3_3 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = H3x1_1 + 0.47459821701313 * H2x3_1 + 0.33884611641605 * H2x3_2 
+ 0.28384294800104 * H2x3_3 ;
1676043   +   H3x1_2  = H3x1_2  +    -1.16110643375006 * H2x3_1
1676044   +          +     1.66935308512585 * H2x3_2  +    -4.14568195267233 * H2x3_3 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = H3x1_2 + -1.16110643375006 * H2x3_1 + 1.66935308512585 * H2x3_2 
+ -4.14568195267233 * H2x3_3 ;
1676045   +   H3x1_3  = H3x1_3  +     1.49959471068751 * H2x3_1
1676046   +          +    -0.59915928675297 * H2x3_2  +    -0.94983228816155 * H2x3_3 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = H3x1_3 + 1.49959471068751 * H2x3_1 + -0.59915928675297 * H2x3_2 
+ -0.94983228816155 * H2x3_3 ;
1676047   +   H3x1_1  =     0.63125998861833 + H3x1_1 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = 0.63125998861833 + H3x1_1 ;
1676048   +   H3x1_2  =    -2.73537618207087 + H3x1_2 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = -2.73537618207087 + H3x1_2 ;
1676049   +   H3x1_3  =    -1.10962396550321 + H3x1_3 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = -1.10962396550321 + H3x1_3 ;
1676050   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
1676051   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
1676052   +   H3x1_1  = 1.0 / (1.0 + EXP(MIN( - H3x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H3x1_1 = 1.0 / (1.0 + EXP(MIN( - H3x1_1 , _EXP_BAR)));
1676053   +   H3x1_2  = 1.0 / (1.0 + EXP(MIN( - H3x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H3x1_2 = 1.0 / (1.0 + EXP(MIN( - H3x1_2 , _EXP_BAR)));
1676054   +   H3x1_3  = 1.0 / (1.0 + EXP(MIN( - H3x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H3x1_3 = 1.0 / (1.0 + EXP(MIN( - H3x1_3 , _EXP_BAR)));
1676055   +END;
MPRINT(EM_DIAGRAM):   END;
1676056   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1676057   +   H3x1_1  = .;
MPRINT(EM_DIAGRAM):   H3x1_1 = .;
1676058   +   H3x1_2  = .;
MPRINT(EM_DIAGRAM):   H3x1_2 = .;
1676059   +   H3x1_3  = .;
MPRINT(EM_DIAGRAM):   H3x1_3 = .;
1676060   +END;
MPRINT(EM_DIAGRAM):   END;
1676061   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1676062   +*** Writing the Node H3x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H3x2_ ;
1676063   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1676064   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1676065   +   H3x2_1  =    -1.04084973012353 * H2x1_1  +     0.54757336755543 * H2x1_2
1676066   +          +    -2.42465723446458 * H2x1_3 ;
MPRINT(EM_DIAGRAM):   H3x2_1 = -1.04084973012353 * H2x1_1 + 0.54757336755543 * H2x1_2 + 
-2.42465723446458 * H2x1_3 ;
1676067   +   H3x2_2  =    -0.44745304665935 * H2x1_1  +    -1.41662797767631 * H2x1_2
1676068   +          +     1.61722186878847 * H2x1_3 ;
MPRINT(EM_DIAGRAM):   H3x2_2 = -0.44745304665935 * H2x1_1 + -1.41662797767631 * H2x1_2 + 
1.61722186878847 * H2x1_3 ;
1676069   +   H3x2_3  =    -2.03529954461846 * H2x1_1  +    -0.91129650681067 * H2x1_2
1676070   +          +     2.85673907226574 * H2x1_3 ;
MPRINT(EM_DIAGRAM):   H3x2_3 = -2.03529954461846 * H2x1_1 + -0.91129650681067 * H2x1_2 + 
2.85673907226574 * H2x1_3 ;
1676071   +   H3x2_1  = H3x2_1  +    -0.27496745838336 * H2x2_1
1676072   +          +     0.33713690467933 * H2x2_2  +    -0.33482440946593 * H2x2_3 ;
MPRINT(EM_DIAGRAM):   H3x2_1 = H3x2_1 + -0.27496745838336 * H2x2_1 + 0.33713690467933 * H2x2_2 
+ -0.33482440946593 * H2x2_3 ;
1676073   +   H3x2_2  = H3x2_2  +     0.62817233761682 * H2x2_1
1676074   +          +     0.01449619139944 * H2x2_2  +      0.2220823792987 * H2x2_3 ;
MPRINT(EM_DIAGRAM):   H3x2_2 = H3x2_2 + 0.62817233761682 * H2x2_1 + 0.01449619139944 * H2x2_2 
+ 0.2220823792987 * H2x2_3 ;
1676075   +   H3x2_3  = H3x2_3  +     0.46121367972148 * H2x2_1
1676076   +          +      1.5218429261845 * H2x2_2  +    -0.94334784031802 * H2x2_3 ;
MPRINT(EM_DIAGRAM):   H3x2_3 = H3x2_3 + 0.46121367972148 * H2x2_1 + 1.5218429261845 * H2x2_2 + 
-0.94334784031802 * H2x2_3 ;
1676077   +   H3x2_1  = H3x2_1  +    -0.67640713318239 * H2x3_1
1676078   +          +    -0.72620562367005 * H2x3_2  +    -0.30414945049952 * H2x3_3 ;
MPRINT(EM_DIAGRAM):   H3x2_1 = H3x2_1 + -0.67640713318239 * H2x3_1 + -0.72620562367005 * 
H2x3_2 + -0.30414945049952 * H2x3_3 ;
1676079   +   H3x2_2  = H3x2_2  +    -0.44352623923272 * H2x3_1
1676080   +          +      0.8085697022422 * H2x3_2  +    -1.69896322767729 * H2x3_3 ;
MPRINT(EM_DIAGRAM):   H3x2_2 = H3x2_2 + -0.44352623923272 * H2x3_1 + 0.8085697022422 * H2x3_2 
+ -1.69896322767729 * H2x3_3 ;
1676081   +   H3x2_3  = H3x2_3  +     0.41104293419747 * H2x3_1
1676082   +          +     0.28818262195501 * H2x3_2  +    -1.50518858912381 * H2x3_3 ;
MPRINT(EM_DIAGRAM):   H3x2_3 = H3x2_3 + 0.41104293419747 * H2x3_1 + 0.28818262195501 * H2x3_2 
+ -1.50518858912381 * H2x3_3 ;
1676083   +   H3x2_1  =     1.16161310309265 + H3x2_1 ;
MPRINT(EM_DIAGRAM):   H3x2_1 = 1.16161310309265 + H3x2_1 ;
1676084   +   H3x2_2  =    -0.09024108300764 + H3x2_2 ;
MPRINT(EM_DIAGRAM):   H3x2_2 = -0.09024108300764 + H3x2_2 ;
1676085   +   H3x2_3  =    -0.25581784952458 + H3x2_3 ;
MPRINT(EM_DIAGRAM):   H3x2_3 = -0.25581784952458 + H3x2_3 ;
1676086   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
1676087   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
1676088   +   H3x2_1  = 1.0 / (1.0 + EXP(MIN( - H3x2_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H3x2_1 = 1.0 / (1.0 + EXP(MIN( - H3x2_1 , _EXP_BAR)));
1676089   +   H3x2_2  = 1.0 / (1.0 + EXP(MIN( - H3x2_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H3x2_2 = 1.0 / (1.0 + EXP(MIN( - H3x2_2 , _EXP_BAR)));
1676090   +   H3x2_3  = 1.0 / (1.0 + EXP(MIN( - H3x2_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H3x2_3 = 1.0 / (1.0 + EXP(MIN( - H3x2_3 , _EXP_BAR)));
1676091   +END;
MPRINT(EM_DIAGRAM):   END;
1676092   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1676093   +   H3x2_1  = .;
MPRINT(EM_DIAGRAM):   H3x2_1 = .;
1676094   +   H3x2_2  = .;
MPRINT(EM_DIAGRAM):   H3x2_2 = .;
1676095   +   H3x2_3  = .;
MPRINT(EM_DIAGRAM):   H3x2_3 = .;
1676096   +END;
MPRINT(EM_DIAGRAM):   END;
1676097   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1676098   +*** Writing the Node H4x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H4x1_ ;
1676099   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1676100   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1676101   +   H4x1_1  =     0.21480063273209 * H3x1_1  +     0.40295874754542 * H3x1_2
1676102   +          +    -0.46652932842091 * H3x1_3 ;
MPRINT(EM_DIAGRAM):   H4x1_1 = 0.21480063273209 * H3x1_1 + 0.40295874754542 * H3x1_2 + 
-0.46652932842091 * H3x1_3 ;
1676103   +   H4x1_2  =     -0.6309991089273 * H3x1_1  +     0.94714102572045 * H3x1_2
1676104   +          +     2.14147287324939 * H3x1_3 ;
MPRINT(EM_DIAGRAM):   H4x1_2 = -0.6309991089273 * H3x1_1 + 0.94714102572045 * H3x1_2 + 
2.14147287324939 * H3x1_3 ;
1676105   +   H4x1_3  =     7.08271783155536 * H3x1_1  +     5.80365896837882 * H3x1_2
1676106   +          +     9.39096371789355 * H3x1_3 ;
MPRINT(EM_DIAGRAM):   H4x1_3 = 7.08271783155536 * H3x1_1 + 5.80365896837882 * H3x1_2 + 
9.39096371789355 * H3x1_3 ;
1676107   +   H4x1_1  = H4x1_1  +     0.53462819743794 * H3x2_1
1676108   +          +    -1.20381600795509 * H3x2_2  +    -0.84571712717491 * H3x2_3 ;
MPRINT(EM_DIAGRAM):   H4x1_1 = H4x1_1 + 0.53462819743794 * H3x2_1 + -1.20381600795509 * H3x2_2 
+ -0.84571712717491 * H3x2_3 ;
1676109   +   H4x1_2  = H4x1_2  +    -0.40059252904061 * H3x2_1
1676110   +          +    -0.33184237889707 * H3x2_2  +    -3.44450406377857 * H3x2_3 ;
MPRINT(EM_DIAGRAM):   H4x1_2 = H4x1_2 + -0.40059252904061 * H3x2_1 + -0.33184237889707 * 
H3x2_2 + -3.44450406377857 * H3x2_3 ;
1676111   +   H4x1_3  = H4x1_3  +    -2.56473440384479 * H3x2_1
1676112   +          +     3.01233247745394 * H3x2_2  +    -3.53948797131919 * H3x2_3 ;
MPRINT(EM_DIAGRAM):   H4x1_3 = H4x1_3 + -2.56473440384479 * H3x2_1 + 3.01233247745394 * H3x2_2 
+ -3.53948797131919 * H3x2_3 ;
1676113   +   H4x1_1  =    -1.40104706050408 + H4x1_1 ;
MPRINT(EM_DIAGRAM):   H4x1_1 = -1.40104706050408 + H4x1_1 ;
1676114   +   H4x1_2  =    -1.48584087284959 + H4x1_2 ;
MPRINT(EM_DIAGRAM):   H4x1_2 = -1.48584087284959 + H4x1_2 ;
1676115   +   H4x1_3  =    -5.00937717463052 + H4x1_3 ;
MPRINT(EM_DIAGRAM):   H4x1_3 = -5.00937717463052 + H4x1_3 ;
1676116   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
1676117   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
1676118   +   H4x1_1  = 1.0 / (1.0 + EXP(MIN( - H4x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H4x1_1 = 1.0 / (1.0 + EXP(MIN( - H4x1_1 , _EXP_BAR)));
1676119   +   H4x1_2  = 1.0 / (1.0 + EXP(MIN( - H4x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H4x1_2 = 1.0 / (1.0 + EXP(MIN( - H4x1_2 , _EXP_BAR)));
1676120   +   H4x1_3  = 1.0 / (1.0 + EXP(MIN( - H4x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H4x1_3 = 1.0 / (1.0 + EXP(MIN( - H4x1_3 , _EXP_BAR)));
1676121   +END;
MPRINT(EM_DIAGRAM):   END;
1676122   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1676123   +   H4x1_1  = .;
MPRINT(EM_DIAGRAM):   H4x1_1 = .;
1676124   +   H4x1_2  = .;
MPRINT(EM_DIAGRAM):   H4x1_2 = .;
1676125   +   H4x1_3  = .;
MPRINT(EM_DIAGRAM):   H4x1_3 = .;
1676126   +END;
MPRINT(EM_DIAGRAM):   END;
1676127   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1676128   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1676129   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1676130   +
1676131   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1676132   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1676133   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1676134   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1676135   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1676136   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1676137   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1676138   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1676139   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1676140   +end;
MPRINT(EM_DIAGRAM):   end;
1676141   +else do;
MPRINT(EM_DIAGRAM):   else do;
1676142   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1676143   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1676144   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1676145   +   end;
MPRINT(EM_DIAGRAM):   end;
1676146   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1676147   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1676148   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1676149   +   end;
MPRINT(EM_DIAGRAM):   end;
1676150   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1676151   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1676152   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1676153   +   end;
MPRINT(EM_DIAGRAM):   end;
1676154   +end;
MPRINT(EM_DIAGRAM):   end;
1676155   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1676156   +   P_DepVar1  =     1.90607652900326 * H4x1_1  +     5.01913964820729 * H4x1_2
1676157   +          +    -10.0265113542494 * H4x1_3 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 1.90607652900326 * H4x1_1 + 5.01913964820729 * H4x1_2 + 
-10.0265113542494 * H4x1_3 ;
1676158   +   P_DepVar1  =     2.91350688930984 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 2.91350688930984 + P_DepVar1 ;
1676159   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1676160   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1676161   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1676162   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1676163   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1676164   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1676165   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1676166   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1676167   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1676168   +END;
MPRINT(EM_DIAGRAM):   END;
1676169   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1676170   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1676171   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1676172   +END;
MPRINT(EM_DIAGRAM):   END;
1676173   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1676174   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1676175   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1676176   +END;
MPRINT(EM_DIAGRAM):   END;
1676177   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1676178   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1676179   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1676180   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1676181   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1676182   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1676183   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1676184   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1676185   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1676186   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1676187   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1676188   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1676189   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1676190   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1676191   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1676192   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1676193   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1676194   +END;
MPRINT(EM_DIAGRAM):   END;
1676195   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1676196   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1676197   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1676198   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1676199    run;

NOTE: DATA STEP view saved on file EMWS8.AUTONEURAL18_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.PRINCOMP_VALIDATE.VIEW used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.06 seconds
      cpu time            0.07 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1676200    quit;
1676201    filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
1676202    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
1676203    * AutoNeural18: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * AutoNeural18: Computing metadata for TRAIN data;
1676204    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;

NOTE: View EMWS8.AUTONEURAL18_TRAIN.VIEW used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural18\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS8.AutoNeural18_TRAIN out=_tempAdvisor 
noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS8.AutoNeural18_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS8.AutoNeural18_TRAIN out=WORK.M0WMB61I 
noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0WMB61I;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20 
INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M0WMB61I(keep=name type length label format formatl 
formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then format = strip(format)!!strip(put(formatl, 
best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, 
best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then informat = 
strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, 
best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0WMB61I;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M0WMB61I;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M1LVON2N NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1LVON2N;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M1LVON2N;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M16RTD05(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M1LVON2N;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1LVON2N;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 
FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M1LVON2N;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" 
"MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" 
"QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" "YEAR" "YYMMDD" "YYMON" 
"YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" 
"EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) 
formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = 
"DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) 
formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" 
"NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" 
"SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = 
"DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then 
level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 
'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 
'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ 
('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 
'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 
'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1LVON2N;
MPRINT(EMADVISECOLUMNS):   set WORK.M1LVON2N;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= 
"Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= 
"Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower limit" UPPERLIMIT= 
"Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= 
"Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.PRINCOMP_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.PRINCOMP_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural18_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT 
LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "AutoNeural18";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("P_DEPVAR1") creator = "AutoNeural18";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR1") creator = "AutoNeural18";
MPRINT(EM_DIAGRAM):   when("P_DEPVAR0") creator = "AutoNeural18";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR0") creator = "AutoNeural18";
MPRINT(EM_DIAGRAM):   when("F_DEPVAR") creator = "AutoNeural18";
MPRINT(EM_DIAGRAM):   when("I_DEPVAR") creator = "AutoNeural18";
MPRINT(EM_DIAGRAM):   when("U_DEPVAR") creator = "AutoNeural18";
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "AutoNeural18";
MPRINT(EM_DIAGRAM):   when("DEPVAR") model = "AutoNeural18";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * AutoNeural18: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
1676516    data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
1676517    set EMWS8.AutoNeural18_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural18_EMINFO;
1676518    where DATA='AutoNeural18' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='AutoNeural18' and KEY ^in('DECDATA', 'DECMETA', 
'IMPORTANCE', 'MODEL');
1676519    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.AUTONEURAL18_EMINFO.
      WHERE (DATA='AutoNeural18') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1676520    data EMWS8.AutoNeural18_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural18_EMINFO;
1676521    length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
1676522    input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
1676523    cards;
MPRINT(EM_DIAGRAM):   cards;

NOTE: The data set EMWS8.AUTONEURAL18_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   run;
1676527    run;
1676528    data EMWS8.AutoNeural18_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural18_EMINFO;
1676529    set EMWS8.AutoNeural18_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural18_EMINFO WORK.MODELTEMP_INFO;
1676530    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.AUTONEURAL18_EMINFO.
NOTE: There were 0 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS8.AUTONEURAL18_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1676531    proc sort data = EMWS8.AutoNeural18_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.AutoNeural18_EMINFO NOTHREADS;
1676532    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
1676533    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.AUTONEURAL18_EMINFO.
NOTE: The data set EMWS8.AUTONEURAL18_EMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1676534    proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
1676535    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
1676536    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set EMWS8.FIMPORT_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 1 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1676537    proc sort data = EMWS8.AutoNeural18_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS8.AutoNeural18_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
1676538    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
1676539    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 3 observations read from the data set EMWS8.AUTONEURAL18_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1676540    data EMWS8.AutoNeural18_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural18_EMINFO;
1676541    merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
1676542    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
1676543    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 3 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS8.AUTONEURAL18_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1676544    proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
1676545    delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
1676546    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
1676547    quit;
MPRINT(EM_DIAGRAM):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

NOTE: View EMWS8.AUTONEURAL18_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
      
NOTE: View EMWS8.AUTONEURAL18_VALIDATE.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
