MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "19. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "17.36 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Training Log
Date:                19. April 2016
Time:                17.36 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O37V_XXE 
"C:\\predictive-models-project\Workspaces\EMWS8\Score\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O37V_XXE new;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOG 
"C:\\predictive-models-project\Workspaces\EMWS8\Score\EMLOG.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "19. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "17.36 Uhr" );
MPRINT(EM_DIAGRAM):   file _LOG;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                Lukas Fahr";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "Site:                70107571";
MPRINT(EM_DIAGRAM):   put "Platform:            X64_7PRO";
MPRINT(EM_DIAGRAM):   put "Maintenance Release: 9.03.01M2P081512";
MPRINT(EM_DIAGRAM):   put "EM Version:          12.1";
MPRINT(EM_DIAGRAM):   put "* ";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN 
"C:\\predictive-models-project\Workspaces\EMWS8\Score\EMTRAIN.log" encoding="UTF-8" NOBOM;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _LOG MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_LOGIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _LOGIN 
"C:\\predictive-models-project\Workspaces\EMWS8\Score\EMSCORE.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN 
"C:\\predictive-models-project\Workspaces\EMWS8\Score\EMREPORT.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    filename _LOG;
MPRINT(EM_DIAGRAM):    filename _OUT 
"C:\\predictive-models-project\Workspaces\EMWS8\Score\EMOUTPUT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "19. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "17.36 Uhr" );
MPRINT(EM_DIAGRAM):   file _OUT;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                Lukas Fahr";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN 
"C:\\predictive-models-project\Workspaces\EMWS8\Score\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _OUT MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_OUTIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN 
"C:\\predictive-models-project\Workspaces\EMWS8\Score\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN 
"C:\\predictive-models-project\Workspaces\EMWS8\Score\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    filename _OUT;
MPRINT(EM_DIAGRAM):    filename _emtool_ 
'C:\\predictive-models-project\Workspaces\EMWS8\Score\EMRUNSTATUS.xml' encoding="UTF-8" NOBOM;
2088736    proc freq data=EMWS8.Score_VariableSet noprint;
MPRINT(EM_DIAGRAM):    proc freq data=EMWS8.Score_VariableSet noprint;
2088737    table ROLE*LEVEL/out=WORK.ScoreMETA;
MPRINT(EM_DIAGRAM):   table ROLE*LEVEL/out=WORK.ScoreMETA;
2088738    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set EMWS8.SCORE_VARIABLESET.
NOTE: The data set WORK.SCOREMETA has 1 observations and 4 variables.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

2088739    proc print data=WORK.ScoreMETA label noobs;
MPRINT(EM_DIAGRAM):   proc print data=WORK.ScoreMETA label noobs;
2088740    var ROLE LEVEL COUNT;
MPRINT(EM_DIAGRAM):   var ROLE LEVEL COUNT;
2088741    label ROLE = "%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel, NOQUOTE))" LEVEL =
2088741  ! "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" COUNT =
2088741  ! "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label ROLE = "Role" LEVEL = "Measurement Level" COUNT = "Frequency 
Count";
2088742    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
2088743    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_varSummary_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Variable Summary";
MPRINT(EM_DIAGRAM):   run;
2088744    run;

NOTE: There were 1 observations read from the data set WORK.SCOREMETA.
NOTE: The PROCEDURE PRINT printed page 1229.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

2088745    title10;
MPRINT(EM_DIAGRAM):   title10;
2088746    %let groupid =;
2088747    %let endGroupid =;
2088748    %let prescoreid =;
2088749    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
2088750    set EMWS8.Ensmbl32_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl32_EMINFO;
2088751    where key in('PRESCORECODE','ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO',
2088751  ! 'TARGETINFO', 'INDEXINFO');
MPRINT(EM_DIAGRAM):   where key in('PRESCORECODE','ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 
'BAGINFO', 'TARGETINFO', 'INDEXINFO');
2088752    select(key);
MPRINT(EM_DIAGRAM):   select(key);
2088753    when('PRESCORECODE') call symput('prescoreId', DATA);
MPRINT(EM_DIAGRAM):   when('PRESCORECODE') call symput('prescoreId', DATA);
2088754    when('ENDGROUP') call symput('endGroupId', DATA);
MPRINT(EM_DIAGRAM):   when('ENDGROUP') call symput('endGroupId', DATA);
2088755    otherwise call symput('groupId', DATA);
MPRINT(EM_DIAGRAM):   otherwise call symput('groupId', DATA);
2088756    end;
MPRINT(EM_DIAGRAM):   end;
2088757    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.ENSMBL32_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'ENDGROUP', 'GROUPINFO', 'INDEXINFO', 
      'PRESCORECODE', 'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _INIT >> 
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL setMetaData >> 
NOTE: There were 1 observations read from the data set EMWS8.ENSMBL32_EMINFO.
      WHERE (TARGET='DepVar') and (KEY='MODEL');
NOTE: The data set WORK.EMINFO406KF8BB has 1 observations and 3 variables.
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL NUMELEMENTS >> 
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _term >> 
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _INIT >> 
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL setMetaData >> 
NOTE: There were 1 observations read from the data set EMWS8.ENSMBL32_EMINFO.
      WHERE (TARGET='DepVar') and (KEY='DECMETA');
NOTE: The data set WORK.EMINFO404Z3921 has 1 observations and 3 variables.
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >> 
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >> 
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _term >> 
MPRINT(EM_DIAGRAM):    data EMWS8.Score_SCORE;
MPRINT(EM_DIAGRAM):   set EMWS8.FIMPORT2_train;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * EM SCORE CODE;
MPRINT(EM_DIAGRAM):   * EM Version: 12.1;
MPRINT(EM_DIAGRAM):   * SAS Release: 9.03.01M2P081512;
MPRINT(EM_DIAGRAM):   * Host: WN7LF-Leave;
MPRINT(EM_DIAGRAM):   * Encoding: wlatin1;
MPRINT(EM_DIAGRAM):   * Locale: de_DE;
MPRINT(EM_DIAGRAM):   * Project Path: C:\;
MPRINT(EM_DIAGRAM):   * Project Name: predictive-models-project;
MPRINT(EM_DIAGRAM):   * Diagram Id: EMWS8;
MPRINT(EM_DIAGRAM):   * Diagram Name: Predictive Models;
MPRINT(EM_DIAGRAM):   * Generated by: Lukas Fahr;
MPRINT(EM_DIAGRAM):   * Date: 19APR2016:17:36:12;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TOOL: Ensemble;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * NODE: Ensmbl32;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl32: Combine model for DepVar;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl32: Scoring Code of model 1 of 5;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TOOL: Extension Class;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * NODE: FIMPORT;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TOOL: Statistics Exploration;
MPRINT(EM_DIAGRAM):   * TYPE: EXPLORE;
MPRINT(EM_DIAGRAM):   * NODE: Stat;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TOOL: Filtering;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * NODE: Filter;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * NODE: EMCODE4;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TOOL: Transform;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * NODE: Trans;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Formula Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TOOL: Partition Class;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * NODE: Part;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TOOL: Metadata Node;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * NODE: Meta;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * NODE: Neural10;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   ***********************************;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   ***********************************;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H17 = 'Hidden: H1=7' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   Complain0 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   Complain0 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   H11 = -0.52904974622826 * S_AcceptedCmpTotal + -0.20085204286633 * S_Age 
+ 0.27263192457895 * S_Frq + -0.13124051139098 * S_Income + -0.43070069114587 * S_Kidhome + 
0.04042751562548 * S_Mnt + 0.38295925040888 * S_MntFishProducts + -0.04727298094677 * 
S_MntFruits + -0.2266349260857 * S_MntGoldProds + -1.08008074034622 * S_MntMeatProducts + 
0.03054296802806 * S_MntSweetProducts + 0.37563940714811 * S_MntWines + 0.06275745445744 * 
S_MonthsAsCustomer + -0.52327978028254 * S_NumCatalogPurchases + -0.21858146166244 * 
S_NumDealsPurchases + 0.18409991080913 * S_NumDistPurchases + 0.35683163455594 * 
S_NumStorePurchases + 0.24429183714976 * S_NumWebPurchases + -0.1263739191616 * 
S_NumWebVisitsMonth + -0.25263656216606 * S_RFMstat + -0.14210230656146 * S_RMntFrq + 
0.3452503815146 * S_Recency + 0.39191700774485 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -0.33531070327107 * S_AcceptedCmpTotal + 0.13834284885787 * S_Age 
+ 0.21191150830062 * S_Frq + -0.12928809774631 * S_Income + 0.24623934031778 * S_Kidhome + 
0.47729973765863 * S_Mnt + 0.02575407384014 * S_MntFishProducts + 0.04190479040514 * 
S_MntFruits + -0.23088098149594 * S_MntGoldProds + -0.82239191276327 * S_MntMeatProducts + 
0.13371979061174 * S_MntSweetProducts + 0.58743684755748 * S_MntWines + 0.20341302032996 * 
S_MonthsAsCustomer + -0.17695216321883 * S_NumCatalogPurchases + -0.08125614129909 * 
S_NumDealsPurchases + 0.38003696656333 * S_NumDistPurchases + 0.22006494588298 * 
S_NumStorePurchases + 0.26217639358993 * S_NumWebPurchases + -0.56905781005459 * 
S_NumWebVisitsMonth + -0.13322776297975 * S_RFMstat + 0.30014052185362 * S_RMntFrq + 
0.33060213336674 * S_Recency + 0.23323216528048 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = -0.62352511085341 * S_AcceptedCmpTotal + -0.10549202596489 * S_Age 
+ 0.05953282210685 * S_Frq + -0.21981583872173 * S_Income + 0.18597632724783 * S_Kidhome + 
-0.14155072883483 * S_Mnt + -0.48144143185181 * S_MntFishProducts + -0.13673430260224 * 
S_MntFruits + 0.11219170806382 * S_MntGoldProds + 0.32321105875036 * S_MntMeatProducts + 
-0.31138776324434 * S_MntSweetProducts + 0.0542661634927 * S_MntWines + 0.04695198015025 * 
S_MonthsAsCustomer + 0.02894984069652 * S_NumCatalogPurchases + 0.08121213946217 * 
S_NumDealsPurchases + -0.04963282234139 * S_NumDistPurchases + -0.09521586837775 * 
S_NumStorePurchases + 0.00630626523742 * S_NumWebPurchases + -0.03891587920939 * 
S_NumWebVisitsMonth + -0.19177541069142 * S_RFMstat + -0.06514218596343 * S_RMntFrq + 
-0.09135545756466 * S_Recency + 0.0734076165534 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = 0.56336598514797 * S_AcceptedCmpTotal + 0.01592059294406 * S_Age + 
0.2311888901482 * S_Frq + 0.1259439937434 * S_Income + 0.25356767518099 * S_Kidhome + 
0.2503736815042 * S_Mnt + -0.18728261744667 * S_MntFishProducts + -0.00224513484971 * 
S_MntFruits + -0.03512046714564 * S_MntGoldProds + 1.85911419211818 * S_MntMeatProducts + 
0.27013231005995 * S_MntSweetProducts + -0.67506389769578 * S_MntWines + 0.00739074848154 * 
S_MonthsAsCustomer + 1.68736779543695 * S_NumCatalogPurchases + 0.83749876944877 * 
S_NumDealsPurchases + 0.29636537008068 * S_NumDistPurchases + -0.61202052257506 * 
S_NumStorePurchases + -0.96921731415369 * S_NumWebPurchases + 0.10056455703323 * 
S_NumWebVisitsMonth + 0.31239399742734 * S_RFMstat + -0.00768176891356 * S_RMntFrq + 
-0.36934667860476 * S_Recency + -0.01407913120571 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H15 = 0.53899189431072 * S_AcceptedCmpTotal + -0.02149258783783 * S_Age 
+ -0.17934707082289 * S_Frq + 0.68550165336551 * S_Income + -0.66239517276633 * S_Kidhome + 
0.05458774654031 * S_Mnt + 0.04764733798509 * S_MntFishProducts + -0.0991733005642 * 
S_MntFruits + -0.10679427479927 * S_MntGoldProds + 0.87627582401159 * S_MntMeatProducts + 
-0.05714601619366 * S_MntSweetProducts + -0.42917375241394 * S_MntWines + -0.00264308606557 * 
S_MonthsAsCustomer + 0.662405922892 * S_NumCatalogPurchases + 0.63122884753912 * 
S_NumDealsPurchases + 0.00285388491049 * S_NumDistPurchases + -0.76222252593182 * 
S_NumStorePurchases + -0.71485070772733 * S_NumWebPurchases + 1.59020450778179 * 
S_NumWebVisitsMonth + 0.05337807789806 * S_RFMstat + -0.44355440632461 * S_RMntFrq + 
-1.32400243058807 * S_Recency + -0.29635849268914 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H16 = -0.14331331777313 * S_AcceptedCmpTotal + 0.326569466151 * S_Age + 
0.21732309554124 * S_Frq + 0.23097635949917 * S_Income + -0.22662005590555 * S_Kidhome + 
0.01964147118737 * S_Mnt + -0.03143791536828 * S_MntFishProducts + 0.02737445722412 * 
S_MntFruits + 0.11059205146763 * S_MntGoldProds + -0.08436826969721 * S_MntMeatProducts + 
-0.148582368111 * S_MntSweetProducts + -0.28478577108463 * S_MntWines + 0.20162256683377 * 
S_MonthsAsCustomer + 0.20640237241268 * S_NumCatalogPurchases + -0.28143084367284 * 
S_NumDealsPurchases + 0.09640746756361 * S_NumDistPurchases + 0.1754994442449 * 
S_NumStorePurchases + 0.14321475617403 * S_NumWebPurchases + -0.1908048876137 * 
S_NumWebVisitsMonth + -0.21951647431328 * S_RFMstat + -0.07602978491607 * S_RMntFrq + 
0.02280616139018 * S_Recency + -0.28295848950411 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H17 = 0.18370302299854 * S_AcceptedCmpTotal + -0.09232025426951 * S_Age 
+ 0.01688986476064 * S_Frq + 0.40684920957133 * S_Income + -0.45643247613458 * S_Kidhome + 
0.13044714407259 * S_Mnt + -0.27140663796303 * S_MntFishProducts + -0.0437857904473 * 
S_MntFruits + 0.09407739192941 * S_MntGoldProds + -0.02422597123766 * S_MntMeatProducts + 
0.02947846512042 * S_MntSweetProducts + 0.06248788510568 * S_MntWines + -0.09330232042055 * 
S_MonthsAsCustomer + 0.33149769704548 * S_NumCatalogPurchases + -0.14623073736275 * 
S_NumDealsPurchases + 0.1591142102614 * S_NumDistPurchases + 0.10364624011419 * 
S_NumStorePurchases + 0.21545343951201 * S_NumWebPurchases + 0.61096997379603 * 
S_NumWebVisitsMonth + 0.10919719280364 * S_RFMstat + 0.13467793881271 * S_RMntFrq + 
-1.05615926539796 * S_Recency + -0.46191152095723 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.14669521207274 * AcceptedCmp10 + 0.05688242299477 * 
AcceptedCmp20 + -0.11541836067088 * AcceptedCmp30 + -0.09531487990179 * AcceptedCmp40 + 
0.03436086529019 * AcceptedCmp50 + -0.25037209640985 * Complain0 + -0.01220476871917 * 
HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.00308183800269 * AcceptedCmp10 + 0.15117897721859 * 
AcceptedCmp20 + 0.38978626739284 * AcceptedCmp30 + -0.34510242965707 * AcceptedCmp40 + 
0.34476185415358 * AcceptedCmp50 + -0.0471191058463 * Complain0 + -0.35479552944875 * 
HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.23075329493142 * AcceptedCmp10 + 0.05372430688076 * 
AcceptedCmp20 + -0.04133305832004 * AcceptedCmp30 + -0.26034389808875 * AcceptedCmp40 + 
-0.05202595947121 * AcceptedCmp50 + 0.04096250305323 * Complain0 + -0.0263055703884 * 
HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.30215996271638 * AcceptedCmp10 + -0.13069612609583 * 
AcceptedCmp20 + 0.12488001880335 * AcceptedCmp30 + 0.24159090886491 * AcceptedCmp40 + 
-0.08339247170749 * AcceptedCmp50 + 0.06197061431371 * Complain0 + -0.02864684261279 * 
HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + -0.24231601484314 * AcceptedCmp10 + -0.15783436385069 * 
AcceptedCmp20 + -0.165123406448 * AcceptedCmp30 + -0.3461179061711 * AcceptedCmp40 + 
-0.30496192781021 * AcceptedCmp50 + 0.03253519247022 * Complain0 + -0.2564790261773 * 
HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.00566559307299 * AcceptedCmp10 + 0.0400978993045 * 
AcceptedCmp20 + -0.04851680976127 * AcceptedCmp30 + -0.01898973094389 * AcceptedCmp40 + 
-0.06157043443006 * AcceptedCmp50 + -0.06854763648385 * Complain0 + 0.231458542974 * 
HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H17 = H17 + 0.00742278673712 * AcceptedCmp10 + -0.13192500326249 * 
AcceptedCmp20 + -0.24131013943598 * AcceptedCmp30 + -0.25857782968649 * AcceptedCmp40 + 
-0.13787093911938 * AcceptedCmp50 + -0.12068746341015 * Complain0 + 0.32673931939454 * 
HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.05243340575835 * Education2n_Cycle + 0.2858024846941 * 
EducationBasic + 0.29283586600213 * EducationGraduation + 0.00389495660452 * EducationMaster + 
0.39856598367829 * Marital_StatusDivorced + -0.45922754552461 * Marital_StatusMarried + 
0.41270195301891 * Marital_StatusSingle + -0.3347569949443 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.1439126887147 * Education2n_Cycle + 0.01375267748784 * 
EducationBasic + -0.0685054608094 * EducationGraduation + 0.2609956614651 * EducationMaster + 
0.12002180366932 * Marital_StatusDivorced + 0.50693056076018 * Marital_StatusMarried + 
-0.40828651697464 * Marital_StatusSingle + 0.56470794856864 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.07270351166078 * Education2n_Cycle + 0.2300721709066 * 
EducationBasic + -0.0970787196329 * EducationGraduation + 0.20017847825938 * EducationMaster + 
-0.05075621283629 * Marital_StatusDivorced + 0.06731276969307 * Marital_StatusMarried + 
0.20458391966582 * Marital_StatusSingle + 0.21684345970572 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.13092252219357 * Education2n_Cycle + 0.09676029686792 * 
EducationBasic + -0.01011537602592 * EducationGraduation + 0.28829384238085 * EducationMaster 
+ -0.37925185401218 * Marital_StatusDivorced + 0.62971134740586 * Marital_StatusMarried + 
-0.36562351730859 * Marital_StatusSingle + 0.60975879843489 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.14853068375135 * Education2n_Cycle + -0.26227404762566 * 
EducationBasic + 0.28447825800836 * EducationGraduation + -0.18997526501932 * EducationMaster 
+ 0.84382044664305 * Marital_StatusDivorced + -0.84062627203871 * Marital_StatusMarried + 
0.74100406031127 * Marital_StatusSingle + -0.89212407744137 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.05307544081323 * Education2n_Cycle + -0.3363359320385 * 
EducationBasic + -0.12190951749416 * EducationGraduation + -0.13296903086061 * EducationMaster 
+ -0.1195105091383 * Marital_StatusDivorced + -0.13486422945269 * Marital_StatusMarried + 
0.33592403429156 * Marital_StatusSingle + -0.09546680831082 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H17 = H17 + 0.03357678121775 * Education2n_Cycle + -0.22726086970399 * 
EducationBasic + -0.11782756185529 * EducationGraduation + -0.09885314861537 * EducationMaster 
+ 0.14792293029589 * Marital_StatusDivorced + -0.96003393582564 * Marital_StatusMarried + 
0.64637652355384 * Marital_StatusSingle + -0.58916183983394 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = 0.0373794432192 + H11 ;
MPRINT(EM_DIAGRAM):   H12 = -0.5845216209459 + H12 ;
MPRINT(EM_DIAGRAM):   H13 = -1.04344126813006 + H13 ;
MPRINT(EM_DIAGRAM):   H14 = 0.82776882532161 + H14 ;
MPRINT(EM_DIAGRAM):   H15 = -0.40623724255035 + H15 ;
MPRINT(EM_DIAGRAM):   H16 = -1.77614778612014 + H16 ;
MPRINT(EM_DIAGRAM):   H17 = -1.58554944042482 + H17 ;
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
MPRINT(EM_DIAGRAM):   H17 = TANH(H17 );
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   H11 = .;
MPRINT(EM_DIAGRAM):   H12 = .;
MPRINT(EM_DIAGRAM):   H13 = .;
MPRINT(EM_DIAGRAM):   H14 = .;
MPRINT(EM_DIAGRAM):   H15 = .;
MPRINT(EM_DIAGRAM):   H16 = .;
MPRINT(EM_DIAGRAM):   H17 = .;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.53970344507045 * H11 + -1.52046732791776 * H12 + 
0.3207833789301 * H13 + 3.10068524893786 * H14 + 3.52160869913468 * H15 + 0.53642243400965 * 
H16 + 2.0380168893605 * H17 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.17260158358189 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ********************************;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   ********************************;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 H17 ;
MPRINT(EM_DIAGRAM):   drop S_:;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural10;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural10;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   drop Neural10_P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural10_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural10_P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural10_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Renaming Into variables for Neural10;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   length Neural10_I_DepVar $32;
MPRINT(EM_DIAGRAM):   drop Neural10_I_DepVar;
MPRINT(EM_DIAGRAM):   Neural10_I_DepVar = I_DepVar;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural10;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   length Neural10_WARN_ $4;
MPRINT(EM_DIAGRAM):   drop Neural10_WARN_;
MPRINT(EM_DIAGRAM):   Neural10_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
The SAS System

MPRINT(EM_DIAGRAM):   * Ensmbl32: Scoring Code of model 2 of 5;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * NODE: Neural9;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   ***********************************;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   ***********************************;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   Complain0 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   Complain0 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   H11 = 0.13561897368917 * S_AcceptedCmpTotal + -0.32772545836794 * S_Age 
+ -0.38398034861903 * S_Frq + -0.26977539373888 * S_Income + -0.14142658616971 * S_Kidhome + 
0.0989055198532 * S_Mnt + -0.02522005306968 * S_MntFishProducts + -0.12344455762016 * 
S_MntFruits + 0.06422500584481 * S_MntGoldProds + 1.06758158504307 * S_MntMeatProducts + 
-0.23902734890811 * S_MntSweetProducts + -0.30623759563522 * S_MntWines + -0.00016362973479 * 
S_MonthsAsCustomer + 0.55545319032721 * S_NumCatalogPurchases + 0.96837841774168 * 
S_NumDealsPurchases + 0.2846105381881 * S_NumDistPurchases + -0.69514041792943 * 
S_NumStorePurchases + -0.96425407351749 * S_NumWebPurchases + 0.79545449599683 * 
S_NumWebVisitsMonth + 0.49367889229155 * S_RFMstat + -0.0709743399293 * S_RMntFrq + 
-0.86057075960565 * S_Recency + 0.14939396415431 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = 0.62153817830372 * S_AcceptedCmpTotal + 0.11000838320023 * S_Age + 
-0.43905714814627 * S_Frq + 0.4627921513743 * S_Income + -0.55432195959203 * S_Kidhome + 
-0.20868947702573 * S_Mnt + -0.04791610917449 * S_MntFishProducts + -0.18250759820717 * 
S_MntFruits + -0.04325930692478 * S_MntGoldProds + 0.58323535101492 * S_MntMeatProducts + 
0.04921270742083 * S_MntSweetProducts + -0.39974265327363 * S_MntWines + -0.05607601548004 * 
S_MonthsAsCustomer + 0.3012811961076 * S_NumCatalogPurchases + 0.2190184330724 * 
S_NumDealsPurchases + -0.01682909442896 * S_NumDistPurchases + -0.70244951048552 * 
S_NumStorePurchases + -0.3057457659316 * S_NumWebPurchases + 0.95928538762715 * 
S_NumWebVisitsMonth + 0.05894343416718 * S_RFMstat + -0.10056410044429 * S_RMntFrq + 
-0.8406665241206 * S_Recency + -0.35297412201687 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = 0.06733651290741 * S_AcceptedCmpTotal + -0.40242244330352 * S_Age 
+ 0.00779419067769 * S_Frq + -0.39275723422465 * S_Income + -0.06354861159882 * S_Kidhome + 
-0.0526962194301 * S_Mnt + 0.22795791930382 * S_MntFishProducts + 0.155952558453 * S_MntFruits 
+ -0.05338294725533 * S_MntGoldProds + 0.27696958404211 * S_MntMeatProducts + 0.45382327602276 
* S_MntSweetProducts + 0.08944669240843 * S_MntWines + 0.05073400334181 * S_MonthsAsCustomer + 
-0.21502812614453 * S_NumCatalogPurchases + -0.21394230159696 * S_NumDealsPurchases + 
-0.23833771124663 * S_NumDistPurchases + 0.45832031017813 * S_NumStorePurchases + 
-0.30226952040179 * S_NumWebPurchases + -0.29796387184481 * S_NumWebVisitsMonth + 
-0.47457772771567 * S_RFMstat + 0.02623437469504 * S_RMntFrq + 0.87067423045258 * S_Recency + 
-0.04579179879137 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = 0.0100821240579 * S_AcceptedCmpTotal + 0.06650171037949 * S_Age + 
0.07437437345976 * S_Frq + -0.60858783914323 * S_Income + -0.04839586846715 * S_Kidhome + 
0.0498689835853 * S_Mnt + -0.19232042751963 * S_MntFishProducts + -0.0934621532732 * 
S_MntFruits + -0.23123184317801 * S_MntGoldProds + -0.73001093719713 * S_MntMeatProducts + 
-0.00941386350496 * S_MntSweetProducts + 0.53093647457485 * S_MntWines + 0.25999444904416 * 
S_MonthsAsCustomer + -0.64356932247243 * S_NumCatalogPurchases + -0.43749647771198 * 
S_NumDealsPurchases + 0.21263473847472 * S_NumDistPurchases + 0.26102168039141 * 
S_NumStorePurchases + 0.54921725943657 * S_NumWebPurchases + -0.75685843498122 * 
S_NumWebVisitsMonth + 0.27936321897064 * S_RFMstat + -0.02993148267083 * S_RMntFrq + 
0.80536256822347 * S_Recency + 0.29599728227233 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H15 = -0.08671490381299 * S_AcceptedCmpTotal + 0.06582961248691 * S_Age 
+ -0.31028674605164 * S_Frq + -0.75498700429145 * S_Income + 0.71499527198653 * S_Kidhome + 
-0.09511483339215 * S_Mnt + 0.12995766208562 * S_MntFishProducts + 0.03365861966415 * 
S_MntFruits + 0.10989750322838 * S_MntGoldProds + -0.5915075857888 * S_MntMeatProducts + 
0.06560450377445 * S_MntSweetProducts + 0.21362770075701 * S_MntWines + -0.09939364366816 * 
S_MonthsAsCustomer + -0.61410179474601 * S_NumCatalogPurchases + 0.09436067776126 * 
S_NumDealsPurchases + -0.02824201859641 * S_NumDistPurchases + -0.06770433780564 * 
S_NumStorePurchases + -0.07177620319715 * S_NumWebPurchases + -0.75589979685266 * 
S_NumWebVisitsMonth + -0.03604464190626 * S_RFMstat + 0.17925089667944 * S_RMntFrq + 
0.94408788011429 * S_Recency + 0.41530214227619 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H16 = -0.39917411634723 * S_AcceptedCmpTotal + 0.03925725158826 * S_Age 
+ -0.41370994963942 * S_Frq + -0.42480967809347 * S_Income + -0.63474522042341 * S_Kidhome + 
-0.26213982180471 * S_Mnt + 0.18685818695791 * S_MntFishProducts + 0.04605858526078 * 
S_MntFruits + -0.16330204827669 * S_MntGoldProds + -0.29864450244187 * S_MntMeatProducts + 
-0.1818801035467 * S_MntSweetProducts + -0.01848203970119 * S_MntWines + -0.38039400989409 * 
S_MonthsAsCustomer + -0.7050267965821 * S_NumCatalogPurchases + -0.51154511343396 * 
S_NumDealsPurchases + -0.52422915823572 * S_NumDistPurchases + 0.30305498422357 * 
S_NumStorePurchases + 0.12197321559338 * S_NumWebPurchases + -0.10520335422769 * 
S_NumWebVisitsMonth + -0.08455403770298 * S_RFMstat + -0.0746666450533 * S_RMntFrq + 
-0.01666787115039 * S_Recency + -0.0878584797536 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.90961987146896 * AcceptedCmp10 + -0.43883226747411 * 
AcceptedCmp20 + -0.33111359726838 * AcceptedCmp30 + -0.56836514169806 * AcceptedCmp40 + 
-0.35293284248651 * AcceptedCmp50 + -0.21637194677498 * Complain0 + 0.04763871212094 * 
HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.1030990687939 * AcceptedCmp10 + 0.00122242086508 * 
AcceptedCmp20 + -0.20164062706951 * AcceptedCmp30 + -0.18080173131042 * AcceptedCmp40 + 
-0.29605640354834 * AcceptedCmp50 + 0.05316734050672 * Complain0 + 0.03310322649598 * 
HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.19903845466874 * AcceptedCmp10 + 0.05770332479555 * 
AcceptedCmp20 + 0.18259425424285 * AcceptedCmp30 + -0.1972581314722 * AcceptedCmp40 + 
0.07810166818705 * AcceptedCmp50 + 0.0588314244014 * Complain0 + 0.52386444165611 * 
HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.25712989150916 * AcceptedCmp10 + 0.10002773433896 * 
AcceptedCmp20 + 0.22713279091354 * AcceptedCmp30 + -0.3908577443881 * AcceptedCmp40 + 
0.26942267903717 * AcceptedCmp50 + -0.06022694623669 * Complain0 + 0.05521579061999 * 
HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.38919159206493 * AcceptedCmp10 + 0.58837620734384 * 
AcceptedCmp20 + 0.43219005719576 * AcceptedCmp30 + 0.44013713415724 * AcceptedCmp40 + 
0.21616210575893 * AcceptedCmp50 + 0.22563135687374 * Complain0 + -0.26680262675523 * 
HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.20851064493691 * AcceptedCmp10 + 0.04947084224566 * 
AcceptedCmp20 + 0.13383157945653 * AcceptedCmp30 + -0.04649385360034 * AcceptedCmp40 + 
0.22456192437835 * AcceptedCmp50 + 0.09861465204268 * Complain0 + 0.52759393238257 * 
HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.17149044990916 * Education2n_Cycle + -0.10901150601282 * 
EducationBasic + 0.08956382506778 * EducationGraduation + -0.02263887301789 * EducationMaster 
+ 0.10234616400375 * Marital_StatusDivorced + 0.27961650739075 * Marital_StatusMarried + 
-0.40239488723767 * Marital_StatusSingle + 0.08313574864343 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.05425155386264 * Education2n_Cycle + -0.29410781678759 * 
EducationBasic + 0.23986214400803 * EducationGraduation + -0.14831422332134 * EducationMaster 
+ 0.46385792428023 * Marital_StatusDivorced + -0.62344590646391 * Marital_StatusMarried + 
0.61767209252062 * Marital_StatusSingle + -0.48335726597768 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.02436261022421 * Education2n_Cycle + 0.25859718044561 * 
EducationBasic + -0.27291277319608 * EducationGraduation + -0.08922741430112 * EducationMaster 
+ -0.07839612590836 * Marital_StatusDivorced + 0.35316864062221 * Marital_StatusMarried + 
-0.10730136429834 * Marital_StatusSingle + 0.17593603209099 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.24964520343799 * Education2n_Cycle + -0.01893498177516 * 
EducationBasic + 0.15063494078927 * EducationGraduation + -0.0741586921665 * EducationMaster + 
-0.09942175269886 * Marital_StatusDivorced + 0.24385460865335 * Marital_StatusMarried + 
-0.33658955096296 * Marital_StatusSingle + 0.56050963700382 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.01382474147934 * Education2n_Cycle + -0.45490268571245 * 
EducationBasic + 0.16592751946825 * EducationGraduation + 0.37352174719748 * EducationMaster + 
-0.08047852561096 * Marital_StatusDivorced + 1.16485862694561 * Marital_StatusMarried + 
-0.94140251178566 * Marital_StatusSingle + 0.70332254595446 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H16 = H16 + -0.23552122269934 * Education2n_Cycle + -0.24160689278663 * 
EducationBasic + -0.15570122212206 * EducationGraduation + -0.17067956037934 * EducationMaster 
+ -0.16621963893391 * Marital_StatusDivorced + -0.44542186297324 * Marital_StatusMarried + 
0.42176133228308 * Marital_StatusSingle + -0.3191529098756 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = -0.08072695414295 + H11 ;
MPRINT(EM_DIAGRAM):   H12 = 0.35226882164117 + H12 ;
MPRINT(EM_DIAGRAM):   H13 = -1.39195207519632 + H13 ;
MPRINT(EM_DIAGRAM):   H14 = 1.37641938752783 + H14 ;
MPRINT(EM_DIAGRAM):   H15 = 0.91842694601067 + H15 ;
MPRINT(EM_DIAGRAM):   H16 = -2.0930022603803 + H16 ;
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   H11 = .;
MPRINT(EM_DIAGRAM):   H12 = .;
MPRINT(EM_DIAGRAM):   H13 = .;
MPRINT(EM_DIAGRAM):   H14 = .;
MPRINT(EM_DIAGRAM):   H15 = .;
MPRINT(EM_DIAGRAM):   H16 = .;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 2.03370101048476 * H11 + 2.66531855617884 * H12 + 
-1.85942573260565 * H13 + -1.90574749832357 * H14 + -3.11388767967909 * H15 + 
-2.20829136620638 * H16 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.07329738382548 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ********************************;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   ********************************;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 ;
MPRINT(EM_DIAGRAM):   drop S_:;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural9;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural9;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   drop Neural9_P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural9_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural9_P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural9_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Renaming Into variables for Neural9;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   length Neural9_I_DepVar $32;
MPRINT(EM_DIAGRAM):   drop Neural9_I_DepVar;
MPRINT(EM_DIAGRAM):   Neural9_I_DepVar = I_DepVar;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural9;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   length Neural9_WARN_ $4;
MPRINT(EM_DIAGRAM):   drop Neural9_WARN_;
MPRINT(EM_DIAGRAM):   Neural9_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl32: Scoring Code of model 3 of 5;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * NODE: Neural3;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   ***********************************;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   ***********************************;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   Complain0 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   Complain0 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   H11 = 0.83781385787802 * S_AcceptedCmpTotal + -0.24139142678243 * S_Age 
+ 0.06099821217041 * S_Frq + 0.40208633787615 * S_Income + 0.51123266106809 * S_Kidhome + 
-0.16199331018171 * S_Mnt + 0.01907816065296 * S_MntFishProducts + -0.3821919957066 * 
S_MntFruits + -0.03370551533515 * S_MntGoldProds + 1.07281355981991 * S_MntMeatProducts + 
-0.13640457355292 * S_MntSweetProducts + -1.07230822345452 * S_MntWines + 0.1487724512445 * 
S_MonthsAsCustomer + 1.00223132386414 * S_NumCatalogPurchases + 1.34095732961105 * 
S_NumDealsPurchases + 0.16605991333252 * S_NumDistPurchases + -0.61746267736536 * 
S_NumStorePurchases + -0.61812800689506 * S_NumWebPurchases + 1.44649145055387 * 
S_NumWebVisitsMonth + 0.71065354084884 * S_RFMstat + 0.16160177747086 * S_RMntFrq + 
-0.9427457293884 * S_Recency + 0.02731657981524 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -0.90907441149587 * S_AcceptedCmpTotal + -0.0457783940034 * S_Age 
+ 0.27413524344715 * S_Frq + -0.43786159455637 * S_Income + 0.52295323651199 * S_Kidhome + 
0.16720640871174 * S_Mnt + 0.90930001391122 * S_MntFishProducts + -0.05099919369902 * 
S_MntFruits + -0.17081601037694 * S_MntGoldProds + -1.57312364500957 * S_MntMeatProducts + 
-0.5081100411323 * S_MntSweetProducts + 0.59764239237778 * S_MntWines + 0.21825258246439 * 
S_MonthsAsCustomer + -0.86944690807188 * S_NumCatalogPurchases + -0.72543332317832 * 
S_NumDealsPurchases + -0.05245472565117 * S_NumDistPurchases + 1.00667431585298 * 
S_NumStorePurchases + 1.02836701470962 * S_NumWebPurchases + -1.25666606219201 * 
S_NumWebVisitsMonth + -0.21335681545447 * S_RFMstat + 0.10575177006447 * S_RMntFrq + 
1.50910531484632 * S_Recency + 0.35192762580497 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = -0.15164592837535 * S_AcceptedCmpTotal + -0.19703351726774 * S_Age 
+ -0.22367876273414 * S_Frq + -1.11408247891182 * S_Income + 0.58025720116696 * S_Kidhome + 
0.21614555339512 * S_Mnt + -0.15414755742285 * S_MntFishProducts + 0.16818356186813 * 
S_MntFruits + 0.07314186249038 * S_MntGoldProds + -0.33939177015316 * S_MntMeatProducts + 
0.29581112739013 * S_MntSweetProducts + 0.30701920735867 * S_MntWines + -0.24397557348757 * 
S_MonthsAsCustomer + -0.58962094283699 * S_NumCatalogPurchases + 0.12670438262487 * 
S_NumDealsPurchases + -0.46113523834333 * S_NumDistPurchases + 0.07074818720567 * 
S_NumStorePurchases + -0.05066645783537 * S_NumWebPurchases + -0.65729410185804 * 
S_NumWebVisitsMonth + 0.08702511028701 * S_RFMstat + -0.39946503838688 * S_RMntFrq + 
1.4337242246086 * S_Recency + 0.88397808030072 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.63147559208792 * AcceptedCmp10 + -0.00204416332102 * 
AcceptedCmp20 + -0.91272822301777 * AcceptedCmp30 + -0.24133711406692 * AcceptedCmp40 + 
-0.11641744847547 * AcceptedCmp50 + 0.08815921371043 * Complain0 + -0.53095204316646 * 
HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.22426256838634 * AcceptedCmp10 + 0.0373678700446 * 
AcceptedCmp20 + -0.34019580311077 * AcceptedCmp30 + -0.06657561018437 * AcceptedCmp40 + 
1.1187666411593 * AcceptedCmp50 + -0.0005124915346 * Complain0 + -0.07802187100635 * 
HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.22922205033785 * AcceptedCmp10 + 0.61911667740136 * 
AcceptedCmp20 + 0.4334892671273 * AcceptedCmp30 + 0.47499802255895 * AcceptedCmp40 + 
0.09778924431294 * AcceptedCmp50 + 0.28935042910164 * Complain0 + -0.29804210825456 * 
HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.0161257464845 * Education2n_Cycle + 0.12153645157245 * 
EducationBasic + 0.31018543557792 * EducationGraduation + -0.04429611151736 * EducationMaster 
+ 0.12692950862511 * Marital_StatusDivorced + 0.10026497666167 * Marital_StatusMarried + 
-0.19893864592813 * Marital_StatusSingle + -0.04062003397514 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.21839182894884 * Education2n_Cycle + 0.31940013998474 * 
EducationBasic + -0.02690553782252 * EducationGraduation + 0.05580498138108 * EducationMaster 
+ -0.16785192490199 * Marital_StatusDivorced + 0.13153695130362 * Marital_StatusMarried + 
-0.50411544587104 * Marital_StatusSingle + 0.13370566790692 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.07130553159229 * Education2n_Cycle + -0.14879818143238 * 
EducationBasic + 0.17822087456028 * EducationGraduation + 0.21882736952662 * EducationMaster + 
-0.62654958087044 * Marital_StatusDivorced + 1.86250132393341 * Marital_StatusMarried + 
-1.37067556451928 * Marital_StatusSingle + 1.14727921038174 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = -1.1990622461103 + H11 ;
MPRINT(EM_DIAGRAM):   H12 = 0.393123481714 + H12 ;
MPRINT(EM_DIAGRAM):   H13 = 1.85498361608276 + H13 ;
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   H11 = .;
MPRINT(EM_DIAGRAM):   H12 = .;
MPRINT(EM_DIAGRAM):   H13 = .;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 2.52409534738218 * H11 + -2.96034283825043 * H12 + 
-3.36424404783147 * H13 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.20096847833731 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ********************************;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   ********************************;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 ;
MPRINT(EM_DIAGRAM):   drop S_:;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural3;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural3;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   drop Neural3_P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural3_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural3_P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural3_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Renaming Into variables for Neural3;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   length Neural3_I_DepVar $32;
MPRINT(EM_DIAGRAM):   drop Neural3_I_DepVar;
MPRINT(EM_DIAGRAM):   Neural3_I_DepVar = I_DepVar;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural3;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   length Neural3_WARN_ $4;
MPRINT(EM_DIAGRAM):   drop Neural3_WARN_;
MPRINT(EM_DIAGRAM):   Neural3_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl32: Scoring Code of model 4 of 5;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * NODE: Neural2;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   ***********************************;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   ***********************************;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   Complain0 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   Complain0 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   H11 = 0.29832012449804 * S_AcceptedCmpTotal + 0.15692046705022 * S_Age + 
0.2349092670043 * S_Frq + 1.19016389982628 * S_Income + -1.07615700855274 * S_Kidhome + 
-0.33525941199741 * S_Mnt + -0.11896237449995 * S_MntFishProducts + -0.05881189485031 * 
S_MntFruits + -0.04848284440297 * S_MntGoldProds + 0.36672196891436 * S_MntMeatProducts + 
-0.21996224739852 * S_MntSweetProducts + -0.60947028245288 * S_MntWines + -0.00068050663419 * 
S_MonthsAsCustomer + 0.54450402479339 * S_NumCatalogPurchases + 0.3429043319369 * 
S_NumDealsPurchases + 0.71313309767469 * S_NumDistPurchases + 0.06017757740083 * 
S_NumStorePurchases + -0.19817724925068 * S_NumWebPurchases + 1.34164122205952 * 
S_NumWebVisitsMonth + -0.01000866410417 * S_RFMstat + 1.1678492086198 * S_RMntFrq + 
-1.5774263784376 * S_Recency + -0.86503713663798 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = 0.31490280577029 * S_AcceptedCmpTotal + -0.09111153110919 * S_Age 
+ -0.16055597693761 * S_Frq + 0.10319479451271 * S_Income + -0.0027232441092 * S_Kidhome + 
-0.62384470029952 * S_Mnt + -0.04454372411008 * S_MntFishProducts + -0.24996025343988 * 
S_MntFruits + -0.01365003759591 * S_MntGoldProds + 0.62835016670964 * S_MntMeatProducts + 
-0.1052005092038 * S_MntSweetProducts + -1.14216465806662 * S_MntWines + -0.05060158666038 * 
S_MonthsAsCustomer + 0.67098319001245 * S_NumCatalogPurchases + 0.4576973746858 * 
S_NumDealsPurchases + 0.15590877272659 * S_NumDistPurchases + -0.33414539713736 * 
S_NumStorePurchases + -0.39370244666257 * S_NumWebPurchases + 0.52596714886704 * 
S_NumWebVisitsMonth + 0.20790882491682 * S_RFMstat + 0.70718304112796 * S_RMntFrq + 
-0.55973256565759 * S_Recency + -0.02572672808252 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.25877430314813 * AcceptedCmp10 + -0.6949843667221 * 
AcceptedCmp20 + -0.57934320804112 * AcceptedCmp30 + -0.51703039002497 * AcceptedCmp40 + 
-0.28854562528092 * AcceptedCmp50 + -0.24441198875632 * Complain0 + 0.22905299573529 * 
HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.36418677755527 * AcceptedCmp10 + -0.33815290545566 * 
AcceptedCmp20 + -0.02820722241017 * AcceptedCmp30 + 0.0020982855306 * AcceptedCmp40 + 
-0.12224106432236 * AcceptedCmp50 + -0.06102493109146 * Complain0 + -0.17583153481867 * 
HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.04231863714836 * Education2n_Cycle + 0.10274571656153 * 
EducationBasic + -0.09649867506574 * EducationGraduation + -0.333138438339 * EducationMaster + 
0.4663802937397 * Marital_StatusDivorced + -1.27401898796099 * Marital_StatusMarried + 
1.3125969368079 * Marital_StatusSingle + -0.9460069950427 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.04207507898653 * Education2n_Cycle + -0.00061313728148 * 
EducationBasic + 0.02179374448207 * EducationGraduation + 0.00771527138053 * EducationMaster + 
0.07419179522004 * Marital_StatusDivorced + 0.00234615813337 * Marital_StatusMarried + 
-0.00725460458412 * Marital_StatusSingle + -0.02397482300018 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = -2.08419455884264 + H11 ;
MPRINT(EM_DIAGRAM):   H12 = -0.67124132448844 + H12 ;
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   H11 = .;
MPRINT(EM_DIAGRAM):   H12 = .;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 5.63543253335428 * H11 + 6.13213445041394 * H12 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 3.20970411510782 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ********************************;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   ********************************;
MPRINT(EM_DIAGRAM):   drop H11 H12 ;
MPRINT(EM_DIAGRAM):   drop S_:;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural2;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural2;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   drop Neural2_P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural2_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural2_P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural2_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Renaming Into variables for Neural2;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   length Neural2_I_DepVar $32;
MPRINT(EM_DIAGRAM):   drop Neural2_I_DepVar;
MPRINT(EM_DIAGRAM):   Neural2_I_DepVar = I_DepVar;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural2;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   length Neural2_WARN_ $4;
MPRINT(EM_DIAGRAM):   drop Neural2_WARN_;
MPRINT(EM_DIAGRAM):   Neural2_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl32: Scoring Code of model 5 of 5;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * NODE: Neural4;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   ***********************************;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   ***********************************;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   Complain0 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   Complain0 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   H11 = -0.77671279308576 * S_AcceptedCmpTotal + 0.06276847782938 * S_Age 
+ 0.28523929172258 * S_Frq + -0.16845099559977 * S_Income + -0.27053363011695 * S_Kidhome + 
-1.09156256196484 * S_Mnt + 0.58182237483655 * S_MntFishProducts + 0.25675863714734 * 
S_MntFruits + 0.0454563200405 * S_MntGoldProds + -5.07351872635196 * S_MntMeatProducts + 
-0.38764617463096 * S_MntSweetProducts + 1.47200483713388 * S_MntWines + 0.02087322602764 * 
S_MonthsAsCustomer + -1.91864887270715 * S_NumCatalogPurchases + -1.35624485206227 * 
S_NumDealsPurchases + -0.54646115734684 * S_NumDistPurchases + 1.29794225108321 * 
S_NumStorePurchases + 1.8453064081809 * S_NumWebPurchases + -0.92747144824026 * 
S_NumWebVisitsMonth + -0.19995123741427 * S_RFMstat + 0.48950823591762 * S_RMntFrq + 
0.73207333681971 * S_Recency + 0.12674338899604 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = 0.20907924263529 * S_AcceptedCmpTotal + -0.04441673137736 * S_Age 
+ -0.57706190006626 * S_Frq + 0.72197500434049 * S_Income + -0.79821220724157 * S_Kidhome + 
0.06756510400019 * S_Mnt + -0.01301180884635 * S_MntFishProducts + 0.03879053893804 * 
S_MntFruits + 0.03800550315651 * S_MntGoldProds + 1.09599381776859 * S_MntMeatProducts + 
-0.14023873921478 * S_MntSweetProducts + -0.11985203414235 * S_MntWines + 0.09033399768744 * 
S_MonthsAsCustomer + 0.73838488669636 * S_NumCatalogPurchases + 0.72513216556859 * 
S_NumDealsPurchases + -0.15566774650584 * S_NumDistPurchases + -0.8847675798982 * 
S_NumStorePurchases + -0.79405200318252 * S_NumWebPurchases + 1.74003779802254 * 
S_NumWebVisitsMonth + 0.06136304829506 * S_RFMstat + -1.27535460576544 * S_RMntFrq + 
-1.54235932941708 * S_Recency + -0.43505088025594 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = 1.20803865860067 * S_AcceptedCmpTotal + 0.35118668657614 * S_Age + 
0.05672453986511 * S_Frq + 1.17585299493174 * S_Income + -0.58596240450544 * S_Kidhome + 
0.51804850635312 * S_Mnt + -0.35954529110483 * S_MntFishProducts + -0.19772554027783 * 
S_MntFruits + 0.89852623954059 * S_MntGoldProds + 2.27190763688161 * S_MntMeatProducts + 
-0.11083019706496 * S_MntSweetProducts + -0.90257904236743 * S_MntWines + -0.15577302963523 * 
S_MonthsAsCustomer + -0.3973145600744 * S_NumCatalogPurchases + 0.17466385502192 * 
S_NumDealsPurchases + -0.06219545947203 * S_NumDistPurchases + 0.16637546838853 * 
S_NumStorePurchases + -0.06908729397635 * S_NumWebPurchases + 1.44269772444244 * 
S_NumWebVisitsMonth + -0.42552473444508 * S_RFMstat + 1.15593872247069 * S_RMntFrq + 
-1.38739950871333 * S_Recency + -1.50282507717462 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = 1.34205961864144 * S_AcceptedCmpTotal + 0.04538824275157 * S_Age + 
-0.62612233922485 * S_Frq + 1.60325297683597 * S_Income + -0.42454238091412 * S_Kidhome + 
-0.5021144828309 * S_Mnt + 0.15473621089093 * S_MntFishProducts + -0.46315096603476 * 
S_MntFruits + -0.00727410620887 * S_MntGoldProds + 0.80613204370047 * S_MntMeatProducts + 
-0.00973150686961 * S_MntSweetProducts + -0.77466877320525 * S_MntWines + -1.07894134788981 * 
S_MonthsAsCustomer + 1.21244809770862 * S_NumCatalogPurchases + 0.77329078721398 * 
S_NumDealsPurchases + 0.31693324305765 * S_NumDistPurchases + -1.08524196373091 * 
S_NumStorePurchases + -0.96945384922979 * S_NumWebPurchases + 1.24659288571587 * 
S_NumWebVisitsMonth + 0.68340040977392 * S_RFMstat + -0.95311334237745 * S_RMntFrq + 
-2.48250049927721 * S_Recency + -0.96484721402634 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.68591737970668 * AcceptedCmp10 + 0.10953116366473 * 
AcceptedCmp20 + -0.16993156306405 * AcceptedCmp30 + 0.27432491194076 * AcceptedCmp40 + 
0.72979469569885 * AcceptedCmp50 + 0.4082086599102 * Complain0 + 0.37432513428509 * 
HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.55218843021705 * AcceptedCmp10 + -0.42214794059131 * 
AcceptedCmp20 + -0.41245456463384 * AcceptedCmp30 + -0.46912762989278 * AcceptedCmp40 + 
-0.67814931395121 * AcceptedCmp50 + 0.52766547061734 * Complain0 + -0.11259824030187 * 
HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -1.17961983832246 * AcceptedCmp10 + -0.55955524489582 * 
AcceptedCmp20 + -0.32274489790142 * AcceptedCmp30 + -0.0455535581358 * AcceptedCmp40 + 
-0.28074222464367 * AcceptedCmp50 + -1.08520418806551 * Complain0 + 0.51457949781767 * 
HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.87490641092708 * AcceptedCmp10 + 0.00502386525359 * 
AcceptedCmp20 + -0.05761104298946 * AcceptedCmp30 + -0.53117463912559 * AcceptedCmp40 + 
-0.47064201921979 * AcceptedCmp50 + 1.16941154144954 * Complain0 + -0.04715037863033 * 
HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.37911030027343 * Education2n_Cycle + 0.2584381078278 * 
EducationBasic + -0.01160126352321 * EducationGraduation + -0.11075159631637 * EducationMaster 
+ 0.36788499721115 * Marital_StatusDivorced + -0.16988636986433 * Marital_StatusMarried + 
-0.24560973256761 * Marital_StatusSingle + -0.14829244910341 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.52094231177555 * Education2n_Cycle + -0.36472141187644 * 
EducationBasic + 0.17781886594929 * EducationGraduation + -0.56430222714946 * EducationMaster 
+ 0.24497797058028 * Marital_StatusDivorced + -1.44410245434424 * Marital_StatusMarried + 
1.47441310087392 * Marital_StatusSingle + -1.65018430716005 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.61581930264064 * Education2n_Cycle + 1.16586594891891 * 
EducationBasic + -0.22028467498096 * EducationGraduation + 0.04653963359475 * EducationMaster 
+ 0.15823225296452 * Marital_StatusDivorced + -0.39129434667884 * Marital_StatusMarried + 
0.84414069966504 * Marital_StatusSingle + 0.11753963793303 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.17401167363048 * Education2n_Cycle + -0.17172073791902 * 
EducationBasic + -0.37448315843685 * EducationGraduation + 0.40030852414737 * EducationMaster 
+ 1.22039169814542 * Marital_StatusDivorced + 0.91592976063128 * Marital_StatusMarried + 
-1.51267332883308 * Marital_StatusSingle + 0.30204179887963 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = -1.80216782471817 + H11 ;
MPRINT(EM_DIAGRAM):   H12 = 1.30021310192031 + H12 ;
MPRINT(EM_DIAGRAM):   H13 = -0.4017187170811 + H13 ;
MPRINT(EM_DIAGRAM):   H14 = -0.65109413075313 + H14 ;
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   H11 = .;
MPRINT(EM_DIAGRAM):   H12 = .;
MPRINT(EM_DIAGRAM):   H13 = .;
MPRINT(EM_DIAGRAM):   H14 = .;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.91230969050101 * H11 + 5.7896524582153 * H12 + 
2.86653546329598 * H13 + 3.37079111489212 * H14 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -6.76402072214011 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ********************************;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   ********************************;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 ;
MPRINT(EM_DIAGRAM):   drop S_:;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural4;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural4;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   drop Neural4_P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural4_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural4_P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural4_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Renaming Into variables for Neural4;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   length Neural4_I_DepVar $32;
MPRINT(EM_DIAGRAM):   drop Neural4_I_DepVar;
MPRINT(EM_DIAGRAM):   Neural4_I_DepVar = I_DepVar;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural4;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   length Neural4_WARN_ $4;
MPRINT(EM_DIAGRAM):   drop Neural4_WARN_;
MPRINT(EM_DIAGRAM):   Neural4_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl32: Voting to produce predicted target;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   array Ensmbl32_post{2} _temporary_;
MPRINT(EM_DIAGRAM):   array Ensmbl32_count{2} _temporary_;
MPRINT(EM_DIAGRAM):   array Ensmbl32_level{2} $32 _temporary_ ( "1" "0" );
MPRINT(EM_DIAGRAM):   do i=1 to 2;
MPRINT(EM_DIAGRAM):   Ensmbl32_post{i} = 0;
MPRINT(EM_DIAGRAM):   Ensmbl32_count{i} = 0;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if Neural10_I_DepVar = Ensmbl32_level{1} then do;
MPRINT(EM_DIAGRAM):   Ensmbl32_count{1} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl32_post{1}=Ensmbl32_post{1}+ Neural10_P_DepVar1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if Neural9_I_DepVar = Ensmbl32_level{1} then do;
MPRINT(EM_DIAGRAM):   Ensmbl32_count{1} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl32_post{1}=Ensmbl32_post{1}+ Neural9_P_DepVar1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if Neural3_I_DepVar = Ensmbl32_level{1} then do;
MPRINT(EM_DIAGRAM):   Ensmbl32_count{1} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl32_post{1}=Ensmbl32_post{1}+ Neural3_P_DepVar1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if Neural2_I_DepVar = Ensmbl32_level{1} then do;
MPRINT(EM_DIAGRAM):   Ensmbl32_count{1} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl32_post{1}=Ensmbl32_post{1}+ Neural2_P_DepVar1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if Neural4_I_DepVar = Ensmbl32_level{1} then do;
MPRINT(EM_DIAGRAM):   Ensmbl32_count{1} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl32_post{1}=Ensmbl32_post{1}+ Neural4_P_DepVar1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if Neural10_I_DepVar = Ensmbl32_level{2} then do;
MPRINT(EM_DIAGRAM):   Ensmbl32_count{2} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl32_post{2}=Ensmbl32_post{2}+ Neural10_P_DepVar0;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if Neural9_I_DepVar = Ensmbl32_level{2} then do;
MPRINT(EM_DIAGRAM):   Ensmbl32_count{2} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl32_post{2}=Ensmbl32_post{2}+ Neural9_P_DepVar0;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if Neural3_I_DepVar = Ensmbl32_level{2} then do;
MPRINT(EM_DIAGRAM):   Ensmbl32_count{2} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl32_post{2}=Ensmbl32_post{2}+ Neural3_P_DepVar0;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if Neural2_I_DepVar = Ensmbl32_level{2} then do;
MPRINT(EM_DIAGRAM):   Ensmbl32_count{2} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl32_post{2}=Ensmbl32_post{2}+ Neural2_P_DepVar0;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if Neural4_I_DepVar = Ensmbl32_level{2} then do;
MPRINT(EM_DIAGRAM):   Ensmbl32_count{2} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl32_post{2}=Ensmbl32_post{2}+ Neural4_P_DepVar0;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl32: Determine Into Variable;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   length I_DepVar $32;
WARNING: Length of character variable I_DepVar has already been set. 
         Use the LENGTH statement as the very first statement in the DATA STEP to declare the 
         length of a character variable.
MPRINT(EM_DIAGRAM):   drop i vote_count vote_post;
MPRINT(EM_DIAGRAM):   vote_count = max( Ensmbl32_count{1} , Ensmbl32_count{2} );
MPRINT(EM_DIAGRAM):   do i=1 to 2;
MPRINT(EM_DIAGRAM):   if Ensmbl32_count{i}=vote_count and Ensmbl32_post{i}>vote_post then do;
MPRINT(EM_DIAGRAM):   I_DepVar = Ensmbl32_level{i};
MPRINT(EM_DIAGRAM):   vote_post = Ensmbl32_count{i};
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl32: Compute posterior vars using models predicting the chosen 
level;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
MPRINT(EM_DIAGRAM):   if I_DepVar = Neural10_I_DepVar then do;
MPRINT(EM_DIAGRAM):   P_DEPVAR1 = P_DEPVAR1 + Neural10_P_DepVar1;
MPRINT(EM_DIAGRAM):   P_DEPVAR0 = P_DEPVAR0 + Neural10_P_DepVar0;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if I_DepVar = Neural9_I_DepVar then do;
MPRINT(EM_DIAGRAM):   P_DEPVAR1 = P_DEPVAR1 + Neural9_P_DepVar1;
MPRINT(EM_DIAGRAM):   P_DEPVAR0 = P_DEPVAR0 + Neural9_P_DepVar0;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if I_DepVar = Neural3_I_DepVar then do;
MPRINT(EM_DIAGRAM):   P_DEPVAR1 = P_DEPVAR1 + Neural3_P_DepVar1;
MPRINT(EM_DIAGRAM):   P_DEPVAR0 = P_DEPVAR0 + Neural3_P_DepVar0;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if I_DepVar = Neural2_I_DepVar then do;
MPRINT(EM_DIAGRAM):   P_DEPVAR1 = P_DEPVAR1 + Neural2_P_DepVar1;
MPRINT(EM_DIAGRAM):   P_DEPVAR0 = P_DEPVAR0 + Neural2_P_DepVar0;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if I_DepVar = Neural4_I_DepVar then do;
MPRINT(EM_DIAGRAM):   P_DEPVAR1 = P_DEPVAR1 + Neural4_P_DepVar1;
MPRINT(EM_DIAGRAM):   P_DEPVAR0 = P_DEPVAR0 + Neural4_P_DepVar0;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   * Ensmbl32: Averaging posterior;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1/vote_count;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0/vote_count;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl32: Producing Unformatted variable;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   label U_DepVar = "Unnormalized Into: DepVar";
MPRINT(EM_DIAGRAM):   if I_DepVar = '1' then U_DepVar = 1;
MPRINT(EM_DIAGRAM):   else if I_DepVar = '0' then U_DepVar = 0;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl32: Computing _WARN_ Variable;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings';
MPRINT(EM_DIAGRAM):   _WARN_ = '';
MPRINT(EM_DIAGRAM):   if index(NEURAL10_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(NEURAL10_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(NEURAL10_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(NEURAL10_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(NEURAL9_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 
1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(NEURAL9_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 
2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(NEURAL9_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 
3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(NEURAL9_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 
4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(NEURAL3_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 
1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(NEURAL3_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 
2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(NEURAL3_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 
3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(NEURAL3_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 
4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(NEURAL2_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 
1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(NEURAL2_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 
2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(NEURAL2_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 
3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(NEURAL2_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 
4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(NEURAL4_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 
1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(NEURAL4_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 
2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(NEURAL4_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 
3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(NEURAL4_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 
4, 1) ='C';
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TOOL: Score Node;
MPRINT(EM_DIAGRAM):   * TYPE: ASSESS;
MPRINT(EM_DIAGRAM):   * NODE: Score;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Score: Creating Fixed Names;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   LABEL EM_EVENTPROBABILITY = 'Probability for level 1 of DepVar';
MPRINT(EM_DIAGRAM):   EM_EVENTPROBABILITY = P_DepVar1;
MPRINT(EM_DIAGRAM):   LABEL EM_PROBABILITY = 'Probability of Classification';
MPRINT(EM_DIAGRAM):   EM_PROBABILITY = max( P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   LENGTH EM_CLASSIFICATION
MPRINT(DMNORLEN):   $32
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   LABEL EM_CLASSIFICATION = "Prediction for DepVar";
MPRINT(EM_DIAGRAM):   EM_CLASSIFICATION = I_DepVar;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
