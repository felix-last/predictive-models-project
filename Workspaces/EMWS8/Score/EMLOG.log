*------------------------------------------------------------*
User:                Lukas Fahr
Date:                20. April 2016
Time:                17.40 Uhr
Site:                70107571
Platform:            X64_7PRO
Maintenance Release: 9.03.01M2P081512
EM Version:          12.1
* 
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "20. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "17.40 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Training Log
Date:                20. April 2016
Time:                17.40 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O0QM0H6C
"C:\\predictive-models-project\Workspaces\EMWS8\Score\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O0QM0H6C new;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOG
"C:\\predictive-models-project\Workspaces\EMWS8\Score\EMLOG.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "20. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "17.40 Uhr" );
MPRINT(EM_DIAGRAM):   file _LOG;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                Lukas Fahr";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "Site:                70107571";
MPRINT(EM_DIAGRAM):   put "Platform:            X64_7PRO";
MPRINT(EM_DIAGRAM):   put "Maintenance Release: 9.03.01M2P081512";
MPRINT(EM_DIAGRAM):   put "EM Version:          12.1";
MPRINT(EM_DIAGRAM):   put "* ";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN
"C:\\predictive-models-project\Workspaces\EMWS8\Score\EMTRAIN.log" encoding="UTF-8" NOBOM;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _LOG MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_LOGIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _LOGIN
"C:\\predictive-models-project\Workspaces\EMWS8\Score\EMSCORE.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN
"C:\\predictive-models-project\Workspaces\EMWS8\Score\EMREPORT.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    filename _LOG;
MPRINT(EM_DIAGRAM):    filename _OUT
"C:\\predictive-models-project\Workspaces\EMWS8\Score\EMOUTPUT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "20. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "17.40 Uhr" );
MPRINT(EM_DIAGRAM):   file _OUT;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                Lukas Fahr";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN
"C:\\predictive-models-project\Workspaces\EMWS8\Score\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _OUT MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_OUTIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN
"C:\\predictive-models-project\Workspaces\EMWS8\Score\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN
"C:\\predictive-models-project\Workspaces\EMWS8\Score\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    filename _OUT;
MPRINT(EM_DIAGRAM):    filename _emtool_
'C:\\predictive-models-project\Workspaces\EMWS8\Score\EMRUNSTATUS.xml' encoding="UTF-8" NOBOM;
2523667    proc freq data=EMWS8.Score_VariableSet noprint;
MPRINT(EM_DIAGRAM):    proc freq data=EMWS8.Score_VariableSet noprint;
2523668    table ROLE*LEVEL/out=WORK.ScoreMETA;
MPRINT(EM_DIAGRAM):   table ROLE*LEVEL/out=WORK.ScoreMETA;
2523669    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.SCORE_VARIABLESET.
NOTE: The data set WORK.SCOREMETA has 1 observations and 4 variables.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
2523670    proc print data=WORK.ScoreMETA label noobs;
MPRINT(EM_DIAGRAM):   proc print data=WORK.ScoreMETA label noobs;
2523671    var ROLE LEVEL COUNT;
MPRINT(EM_DIAGRAM):   var ROLE LEVEL COUNT;
2523672    label ROLE = "%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel, NOQUOTE))" LEVEL =
2523672  ! "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" COUNT =
2523672  ! "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label ROLE = "Role" LEVEL = "Measurement Level" COUNT = "Frequency
Count";
2523673    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
2523674    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_varSummary_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Variable Summary";
MPRINT(EM_DIAGRAM):   run;
2523675    run;
 
NOTE: There were 1 observations read from the data set WORK.SCOREMETA.
NOTE: The PROCEDURE PRINT printed page 2068.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2523676    title10;
MPRINT(EM_DIAGRAM):   title10;
2523677    %let groupid =;
2523678    %let endGroupid =;
2523679    %let prescoreid =;
2523680    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
2523681    set EMWS8.Ensmbl36_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl36_EMINFO;
2523682    where key in('PRESCORECODE','ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO',
2523682  ! 'TARGETINFO', 'INDEXINFO');
MPRINT(EM_DIAGRAM):   where key in('PRESCORECODE','ENDGROUP', 'GROUPINFO', 'BOOSTINFO',
'BAGINFO', 'TARGETINFO', 'INDEXINFO');
2523683    select(key);
MPRINT(EM_DIAGRAM):   select(key);
2523684    when('PRESCORECODE') call symput('prescoreId', DATA);
MPRINT(EM_DIAGRAM):   when('PRESCORECODE') call symput('prescoreId', DATA);
2523685    when('ENDGROUP') call symput('endGroupId', DATA);
MPRINT(EM_DIAGRAM):   when('ENDGROUP') call symput('endGroupId', DATA);
2523686    otherwise call symput('groupId', DATA);
MPRINT(EM_DIAGRAM):   otherwise call symput('groupId', DATA);
2523687    end;
MPRINT(EM_DIAGRAM):   end;
2523688    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL36_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'ENDGROUP', 'GROUPINFO', 'INDEXINFO',
      'PRESCORECODE', 'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _INIT >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL setMetaData >>
NOTE: There were 1 observations read from the data set EMWS8.ENSMBL36_EMINFO.
      WHERE (TARGET='DepVar') and (KEY='MODEL');
NOTE: The data set WORK.EMINFO439IA321 has 1 observations and 3 variables.
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL NUMELEMENTS >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _term >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _INIT >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL setMetaData >>
NOTE: There were 1 observations read from the data set EMWS8.ENSMBL36_EMINFO.
      WHERE (TARGET='DepVar') and (KEY='DECMETA');
NOTE: The data set WORK.EMINFO407CNIIL has 1 observations and 3 variables.
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _term >>
MPRINT(EM_DIAGRAM):    data EMWS8.Score_SCORE;
MPRINT(EM_DIAGRAM):   set EMWS8.FIMPORT2_train;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * EM SCORE CODE;
MPRINT(EM_DIAGRAM):   * EM Version: 12.1;
MPRINT(EM_DIAGRAM):   * SAS Release: 9.03.01M2P081512;
MPRINT(EM_DIAGRAM):   * Host: WN7LF-Leave;
MPRINT(EM_DIAGRAM):   * Encoding: wlatin1;
MPRINT(EM_DIAGRAM):   * Locale: de_DE;
MPRINT(EM_DIAGRAM):   * Project Path: C:\;
MPRINT(EM_DIAGRAM):   * Project Name: predictive-models-project;
MPRINT(EM_DIAGRAM):   * Diagram Id: EMWS8;
MPRINT(EM_DIAGRAM):   * Diagram Name: Predictive Models;
MPRINT(EM_DIAGRAM):   * Generated by: Lukas Fahr;
MPRINT(EM_DIAGRAM):   * Date: 20APR2016:17:40:38;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TOOL: Ensemble;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * NODE: Ensmbl36;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl36: Combine model for DepVar;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl36: Scoring Code of model 1 of 7;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TOOL: Extension Class;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * NODE: FIMPORT;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TOOL: Statistics Exploration;
MPRINT(EM_DIAGRAM):   * TYPE: EXPLORE;
MPRINT(EM_DIAGRAM):   * NODE: Stat;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TOOL: Filtering;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * NODE: Filter;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and (
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and (
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and (
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and (
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne
.) and ( Year_Birth ne .) then do;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * NODE: EMCODE4;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TOOL: Transform;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * NODE: Trans;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Formula Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TOOL: Partition Class;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * NODE: Part;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TOOL: Metadata Node;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * NODE: Meta;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural6;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   ***********************************;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   ***********************************;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x3_1 = 'Hidden: H1x3_=1' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   Complain0 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   Complain0 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 *
MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 *
MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.00800383076247 * S_AcceptedCmpTotal + 0.02761302021586 *
S_Age + 0.10595191274027 * S_Frq + -0.15720275096991 * S_Income + 0.14522420813528 * S_Kidhome
+ -0.14485367197729 * S_Mnt + 0.10029542464177 * S_MntFishProducts + 0.0126489883955 *
S_MntFruits + -0.01721251339827 * S_MntGoldProds + -0.69008250574088 * S_MntMeatProducts +
0.01018204164797 * S_MntSweetProducts + 0.22039448854688 * S_MntWines + 0.01531819489128 *
S_MonthsAsCustomer + -0.23161250514854 * S_NumCatalogPurchases + -0.20127545393212 *
S_NumDealsPurchases + 0.04506333103933 * S_NumDistPurchases + 0.35249458492371 *
S_NumStorePurchases + 0.25004284340707 * S_NumWebPurchases + -0.53727251220752 *
S_NumWebVisitsMonth + -0.05439428653958 * S_RFMstat + 0.36751560031492 * S_RMntFrq +
0.5373510847225 * S_Recency + 0.08757258535387 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.21204360154837 * AcceptedCmp10 + 0.20766091429217 *
AcceptedCmp20 + 0.20201307074488 * AcceptedCmp30 + 0.26898383850722 * AcceptedCmp40 +
0.55154220854739 * AcceptedCmp50 + 0.13147328871299 * Complain0 + -0.02797177954188 *
HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.00959805163736 * Education2n_Cycle +
0.37192717803938 * EducationBasic + -0.10342362068485 * EducationGraduation +
-0.13377682721092 * EducationMaster + -0.19452359839974 * Marital_StatusDivorced +
0.32327870805716 * Marital_StatusMarried + -0.20770545592268 * Marital_StatusSingle +
0.35618773017298 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.87012150629431 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(MIN(-0.5 * H1x1_1 **2, _EXP_BAR));
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.92357456692651 * S_AcceptedCmpTotal + -0.00516549264504 *
S_Age + -1.03043789382359 * S_Frq + 0.78555631441048 * S_Income + -1.36329797235747 *
S_Kidhome + -0.77229288487872 * S_Mnt + 1.27281095482218 * S_MntFishProducts +
0.04568599055132 * S_MntFruits + -0.13434867195633 * S_MntGoldProds + -1.95682488683295 *
S_MntMeatProducts + -0.0253141337078 * S_MntSweetProducts + 0.67857436596482 * S_MntWines +
-0.07247572940845 * S_MonthsAsCustomer + -1.02814758425435 * S_NumCatalogPurchases +
-0.02120959778153 * S_NumDealsPurchases + 1.49013956394863 * S_NumDistPurchases +
-0.96806240220463 * S_NumStorePurchases + -1.68330472453558 * S_NumWebPurchases +
3.42976128164256 * S_NumWebVisitsMonth + -0.38912520446503 * S_RFMstat + -2.57487899031042 *
S_RMntFrq + -3.14923215912621 * S_Recency + -0.67635091810974 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.18835638765595 * AcceptedCmp10 + 1.28752081945681 *
AcceptedCmp20 + -0.5515893923669 * AcceptedCmp30 + -0.82440763600043 * AcceptedCmp40 +
1.94503109075872 * AcceptedCmp50 + -0.75977722298402 * Complain0 + -1.11349075129464 *
HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 1.79843117215153 * Education2n_Cycle +
-1.50428649925314 * EducationBasic + -0.32238897768725 * EducationGraduation +
-0.16909007224958 * EducationMaster + 1.9815992681602 * Marital_StatusDivorced +
-3.07893181570848 * Marital_StatusMarried + 1.72965298244219 * Marital_StatusSingle +
-3.17208781997524 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.54729406730223 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   _EPS = SQRT(CONSTANT('MACEPS')) ;
MPRINT(EM_DIAGRAM):   _REC_EPS = 1/_EPS ;
MPRINT(EM_DIAGRAM):   DROP _REC_EPS _EPS ;
MPRINT(EM_DIAGRAM):   IF H1x2_1 < _REC_EPS AND H1x2_1 > - _REC_EPS THEN H1x2_1 = H1x2_1 *
H1x2_1 ;
MPRINT(EM_DIAGRAM):   ELSE H1x2_1 = _REC_EPS ;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x3_ ;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   H1x3_1 = 0.90092602642364 * S_AcceptedCmpTotal + -0.16291307307626 *
S_Age + -0.40132431666712 * S_Frq + -0.77251140598484 * S_Income + 0.02215214313934 *
S_Kidhome + 0.13123074182657 * S_Mnt + -0.43664076061176 * S_MntFishProducts +
-1.64192761266072 * S_MntFruits + -1.54189230184745 * S_MntGoldProds + -0.4138869968665 *
S_MntMeatProducts + 0.5773885392047 * S_MntSweetProducts + 1.45077769194851 * S_MntWines +
0.5855746168529 * S_MonthsAsCustomer + 0.10198319985004 * S_NumCatalogPurchases +
-0.5334151509863 * S_NumDealsPurchases + 0.40600458912114 * S_NumDistPurchases +
-0.30674653528261 * S_NumStorePurchases + 0.10785037433743 * S_NumWebPurchases +
0.99701680073452 * S_NumWebVisitsMonth + -0.25371895811899 * S_RFMstat + 2.19406614746442 *
S_RMntFrq + 1.0786726340694 * S_Recency + 0.64406049150007 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + -0.58424742605644 * AcceptedCmp10 + -0.7436165858459 *
AcceptedCmp20 + -0.33959137246457 * AcceptedCmp30 + 0.42726020731333 * AcceptedCmp40 +
2.23707409189181 * AcceptedCmp50 + 0.98135772482722 * Complain0 + -0.85818399669867 *
HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + -0.89540752048995 * Education2n_Cycle +
1.29513448243349 * EducationBasic + -1.47068621785539 * EducationGraduation +
-1.63362973413899 * EducationMaster + -0.72494401881341 * Marital_StatusDivorced +
-0.82332231639631 * Marital_StatusMarried + -0.8863559011195 * Marital_StatusSingle +
0.97129982315045 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 0.55234573720932 + H1x3_1 ;
MPRINT(EM_DIAGRAM):   _EPS = SQRT(CONSTANT('MACEPS')) ;
MPRINT(EM_DIAGRAM):   _REC_EPS = 1/_EPS ;
MPRINT(EM_DIAGRAM):   DROP _REC_EPS _EPS ;
MPRINT(EM_DIAGRAM):   IF H1x3_1 < _REC_EPS AND H1x3_1 > - _REC_EPS THEN H1x3_1 = H1x3_1 *
H1x3_1 ;
MPRINT(EM_DIAGRAM):   ELSE H1x3_1 = _REC_EPS ;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   H1x3_1 = .;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 35.4482526843154 * H1x1_1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 + -0.08810161142704 * H1x2_1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 + 0.02248060710303 * H1x3_1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -6.23004657634651 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ********************************;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   ********************************;
MPRINT(EM_DIAGRAM):   drop H1x1_1 H1x2_1 H1x3_1 ;
MPRINT(EM_DIAGRAM):   drop S_:;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural6;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural6;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   drop AutoNeural6_P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural6_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural6_P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural6_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural6;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   length AutoNeural6_WARN_ $4;
MPRINT(EM_DIAGRAM):   drop AutoNeural6_WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural6_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl36: Scoring Code of model 2 of 7;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural7;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   ***********************************;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   ***********************************;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x3_1 = 'Hidden: H1x3_=1' ;
MPRINT(EM_DIAGRAM):   label H1x3_2 = 'Hidden: H1x3_=2' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   Complain0 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   Complain0 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 *
MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 *
MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.26454269681311 * S_AcceptedCmpTotal + -0.01281904987956 *
S_Age + -0.19309516267581 * S_Frq + -0.19077579202378 * S_Income + 0.1806651018562 * S_Kidhome
+ -0.31002612826472 * S_Mnt + -0.05901796512011 * S_MntFishProducts + -0.03760930101165 *
S_MntFruits + 0.01720900715043 * S_MntGoldProds + 0.21472292961422 * S_MntMeatProducts +
-0.02880706568684 * S_MntSweetProducts + -0.37993583170844 * S_MntWines + -0.00848444156361 *
S_MonthsAsCustomer + 0.15939611818942 * S_NumCatalogPurchases + 0.08390531145773 *
S_NumDealsPurchases + -0.29505970645775 * S_NumDistPurchases + -0.13820571170194 *
S_NumStorePurchases + 0.11468011313368 * S_NumWebPurchases + -0.18421241371843 *
S_NumWebVisitsMonth + 0.11564064971509 * S_RFMstat + -0.02223928001432 * S_RMntFrq +
0.18022777532589 * S_Recency + 0.14654831145379 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.27055972468014 * S_AcceptedCmpTotal + 0.0025862891193 * S_Age
+ -0.07147307366817 * S_Frq + 0.1883776136263 * S_Income + -0.12712510891181 * S_Kidhome +
-0.42099927948686 * S_Mnt + -0.07047631817862 * S_MntFishProducts + -0.06658475152878 *
S_MntFruits + 0.01943025682869 * S_MntGoldProds + 0.29481794109465 * S_MntMeatProducts +
-0.06573502094591 * S_MntSweetProducts + -0.46266722725002 * S_MntWines + -0.00472333181469 *
S_MonthsAsCustomer + 0.35081452017576 * S_NumCatalogPurchases + 0.18009076035363 *
S_NumDealsPurchases + 0.03853861006587 * S_NumDistPurchases + -0.05118063952874 *
S_NumStorePurchases + -0.03282286120473 * S_NumWebPurchases + 0.31160900419026 *
S_NumWebVisitsMonth + 0.08027884378429 * S_RFMstat + 0.39057239541393 * S_RMntFrq +
-0.34796767111274 * S_Recency + -0.12099758522271 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.12539246465239 * AcceptedCmp10 + 0.38473652869745 *
AcceptedCmp20 + 0.29820983391886 * AcceptedCmp30 + 0.29085092779792 * AcceptedCmp40 +
0.18918195914981 * AcceptedCmp50 + -0.26812516781697 * Complain0 + -0.08804110897148 *
HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.02312897825565 * AcceptedCmp10 + 0.03909481703523 *
AcceptedCmp20 + 0.02531081539721 * AcceptedCmp30 + 0.03109641300151 * AcceptedCmp40 +
0.01985718189621 * AcceptedCmp50 + 0.13425456375085 * Complain0 + -0.08222486590117 *
HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.01975862863669 * Education2n_Cycle +
0.14654730697956 * EducationBasic + -0.00459515646452 * EducationGraduation + 0.01586948449127
* EducationMaster + -0.04750981393889 * Marital_StatusDivorced + 0.28216925676677 *
Marital_StatusMarried + -0.20757827413964 * Marital_StatusSingle + 0.22622509024122 *
Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.12009608969049 * Education2n_Cycle +
0.01793460710056 * EducationBasic + -0.04257710051346 * EducationGraduation +
-0.06975725710115 * EducationMaster + 0.05981919620577 * Marital_StatusDivorced +
-0.17161573846062 * Marital_StatusMarried + 0.15869440681091 * Marital_StatusSingle +
-0.13282372850158 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.87962277715971 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.62570339696782 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = SIN(H1x1_1 );
MPRINT(EM_DIAGRAM):   H1x1_2 = SIN(H1x1_2 );
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.1719390672121 * S_AcceptedCmpTotal + 0.23586839288361 * S_Age
+ -1.85384134180372 * S_Frq + -0.43561758063577 * S_Income + -2.5581498901473 * S_Kidhome +
1.7031888248428 * S_Mnt + 0.84982621124736 * S_MntFishProducts + 0.25990173458485 *
S_MntFruits + -2.80730469703961 * S_MntGoldProds + 0.64923500711702 * S_MntMeatProducts +
0.27458645458502 * S_MntSweetProducts + -0.47723589182372 * S_MntWines + -0.66777488145507 *
S_MonthsAsCustomer + -0.46364414558282 * S_NumCatalogPurchases + 0.00741910846933 *
S_NumDealsPurchases + 1.334289252268 * S_NumDistPurchases + -0.29851567180932 *
S_NumStorePurchases + -0.52115313259666 * S_NumWebPurchases + 0.93907168501909 *
S_NumWebVisitsMonth + -0.26126881318451 * S_RFMstat + -1.3003763542929 * S_RMntFrq +
-0.12807368149309 * S_Recency + -0.21296116974623 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 0.30897763700303 * S_AcceptedCmpTotal + -0.77727886396317 *
S_Age + -0.79298582494973 * S_Frq + -1.73199353738093 * S_Income + 1.12984956989288 *
S_Kidhome + -1.36701096993984 * S_Mnt + -0.21063950702424 * S_MntFishProducts +
-0.20027336686257 * S_MntFruits + -0.06955810418489 * S_MntGoldProds + 0.16672767423533 *
S_MntMeatProducts + -1.56675269740541 * S_MntSweetProducts + 1.85366479127485 * S_MntWines +
-0.58178621903094 * S_MonthsAsCustomer + 1.31024619253935 * S_NumCatalogPurchases +
1.60427001186844 * S_NumDealsPurchases + -0.18447618033353 * S_NumDistPurchases +
-1.29966073003539 * S_NumStorePurchases + -1.12373457341536 * S_NumWebPurchases +
1.46099221440494 * S_NumWebVisitsMonth + 0.17795038564406 * S_RFMstat + -0.82372068140832 *
S_RMntFrq + 0.4480370534729 * S_Recency + 0.19272737691538 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.6569942252053 * AcceptedCmp10 + -0.89152555599538 *
AcceptedCmp20 + 1.00488730476017 * AcceptedCmp30 + 0.34286042692068 * AcceptedCmp40 +
-1.19198820362508 * AcceptedCmp50 + -0.86571531914686 * Complain0 + 0.14303136037365 *
HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 1.79481763784518 * AcceptedCmp10 + -2.85912280013336 *
AcceptedCmp20 + 0.16890012708431 * AcceptedCmp30 + 0.94639083182751 * AcceptedCmp40 +
-0.62141828005946 * AcceptedCmp50 + -0.39098882491277 * Complain0 + 0.85700787946581 *
HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 0.0737054452993 * Education2n_Cycle + 0.362372261752 *
EducationBasic + -1.485941295677 * EducationGraduation + -0.81257694655594 * EducationMaster +
0.59819559998538 * Marital_StatusDivorced + 0.92957772553633 * Marital_StatusMarried +
-1.11796266958894 * Marital_StatusSingle + -2.0576132087002 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -1.10016528859962 * Education2n_Cycle +
-1.46816646165468 * EducationBasic + -0.11241499152788 * EducationGraduation +
-0.65110715251273 * EducationMaster + 1.0870909562212 * Marital_StatusDivorced +
1.50333961797515 * Marital_StatusMarried + -1.41407780765932 * Marital_StatusSingle +
-0.52528072358697 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.46376024534028 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -0.21341526379366 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   H1x2_1 = EXP(MIN(-0.5 * H1x2_1 **2, _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x2_2 = EXP(MIN(-0.5 * H1x2_2 **2, _EXP_BAR));
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x3_ ;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   H1x3_1 = 0.29299707972123 * S_AcceptedCmpTotal + 1.39797329466471 *
S_Age + -2.02673480388837 * S_Frq + -1.09682777516542 * S_Income + -1.22241109888643 *
S_Kidhome + -1.35766076466324 * S_Mnt + -2.90812690982576 * S_MntFishProducts +
-0.48174923069843 * S_MntFruits + 1.57335575145195 * S_MntGoldProds + -0.55248873552176 *
S_MntMeatProducts + 0.54536808091745 * S_MntSweetProducts + -0.41516162035296 * S_MntWines +
0.07715050596116 * S_MonthsAsCustomer + -2.18785324142159 * S_NumCatalogPurchases +
-1.1174504455343 * S_NumDealsPurchases + -0.18561253113498 * S_NumDistPurchases +
-0.35231054612792 * S_NumStorePurchases + 0.9249490354172 * S_NumWebPurchases +
-0.79868535147175 * S_NumWebVisitsMonth + -0.17158151681124 * S_RFMstat + -0.9870286843901 *
S_RMntFrq + 0.62439123699986 * S_Recency + -0.45845377794308 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_2 = -1.07483179793421 * S_AcceptedCmpTotal + 1.03558600048684 *
S_Age + 1.11497695424161 * S_Frq + 0.27297296926116 * S_Income + 0.77036019999023 * S_Kidhome
+ 0.02567848304605 * S_Mnt + 0.38661977628442 * S_MntFishProducts + -0.36751750771945 *
S_MntFruits + 0.93924107558212 * S_MntGoldProds + 0.93046859422523 * S_MntMeatProducts +
-0.46124679979068 * S_MntSweetProducts + -0.45348234529786 * S_MntWines + 1.60057890623864 *
S_MonthsAsCustomer + -1.74657448073162 * S_NumCatalogPurchases + 1.05434863590054 *
S_NumDealsPurchases + -0.73255174632068 * S_NumDistPurchases + 0.53949953455044 *
S_NumStorePurchases + -0.61709467816649 * S_NumWebPurchases + 1.36235282484348 *
S_NumWebVisitsMonth + -0.0352720913953 * S_RFMstat + 0.14001475375682 * S_RMntFrq +
-0.24276831608869 * S_Recency + 0.09762798365722 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + -0.94208577947628 * AcceptedCmp10 + -0.5233017415423 *
AcceptedCmp20 + -0.76900164563331 * AcceptedCmp30 + -0.79512141055877 * AcceptedCmp40 +
0.20126599116957 * AcceptedCmp50 + -0.43046555689873 * Complain0 + 0.31565229685815 *
HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 + -1.24961064002454 * AcceptedCmp10 + -0.89859693224833
* AcceptedCmp20 + 1.15884958881232 * AcceptedCmp30 + 0.38250389164472 * AcceptedCmp40 +
0.47123004358879 * AcceptedCmp50 + -2.1232679844098 * Complain0 + 0.97226091069674 *
HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + -0.07500306665919 * Education2n_Cycle +
0.04122924311058 * EducationBasic + -0.49410102102951 * EducationGraduation +
-0.45477734340809 * EducationMaster + 0.22253248036322 * Marital_StatusDivorced +
-1.72455332745001 * Marital_StatusMarried + 0.57787272107232 * Marital_StatusSingle +
0.16267074825086 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 + -0.21560233542581 * Education2n_Cycle +
-0.36476815429069 * EducationBasic + 1.63334881201349 * EducationGraduation +
-1.12620982139344 * EducationMaster + 0.14637124403046 * Marital_StatusDivorced +
0.18905186437528 * Marital_StatusMarried + 0.00511958458521 * Marital_StatusSingle +
-0.915980703129 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 0.54853846322055 + H1x3_1 ;
MPRINT(EM_DIAGRAM):   H1x3_2 = 1.36395858099198 + H1x3_2 ;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   H1x3_1 = EXP(MIN(H1x3_1 , _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x3_2 = EXP(MIN(H1x3_2 , _EXP_BAR));
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   H1x3_1 = .;
MPRINT(EM_DIAGRAM):   H1x3_2 = .;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -10.6892993503201 * H1x1_1 + 16.2938756734008 * H1x1_2 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 + 1.2332183930826 * H1x2_1 + -0.85206858106106 *
H1x2_2 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 + -0.00087126688031 * H1x3_1 + -0.00025812675645 *
H1x3_2 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 2.20710379818135 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ********************************;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   ********************************;
MPRINT(EM_DIAGRAM):   drop H1x1_1 H1x1_2 H1x2_1 H1x2_2 H1x3_1 H1x3_2 ;
MPRINT(EM_DIAGRAM):   drop S_:;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural7;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural7;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   drop AutoNeural7_P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural7_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural7_P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural7_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural7;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   length AutoNeural7_WARN_ $4;
MPRINT(EM_DIAGRAM):   drop AutoNeural7_WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural7_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl36: Scoring Code of model 3 of 7;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural8;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   ***********************************;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   ***********************************;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   Complain0 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   Complain0 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 *
MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 *
MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.2726802048269 * S_AcceptedCmpTotal + -0.02889982967357 *
S_Age + -0.26165770909003 * S_Frq + 0.19140564299867 * S_Income + 0.30244335152969 * S_Kidhome
+ -0.03391217967468 * S_Mnt + -0.99943007809307 * S_MntFishProducts + -0.04374917285968 *
S_MntFruits + -0.13546758294455 * S_MntGoldProds + 3.59922243619013 * S_MntMeatProducts +
-0.10424531322566 * S_MntSweetProducts + -1.98884071414703 * S_MntWines + 0.05310540691138 *
S_MonthsAsCustomer + 0.58072892654416 * S_NumCatalogPurchases + 0.30381426454211 *
S_NumDealsPurchases + 0.39966076372974 * S_NumDistPurchases + -0.58875986801139 *
S_NumStorePurchases + -0.78850031558536 * S_NumWebPurchases + 0.35182997415921 *
S_NumWebVisitsMonth + 1.51048129701176 * S_RFMstat + 1.13354085492775 * S_RMntFrq +
-0.2185811652116 * S_Recency + 0.01153374704027 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.18093166280015 * S_AcceptedCmpTotal + -0.00677564787839 *
S_Age + -0.21510325598577 * S_Frq + 0.26314356814214 * S_Income + -0.30016454601651 *
S_Kidhome + -0.1410547608427 * S_Mnt + -0.04272369939478 * S_MntFishProducts +
-0.05622578678457 * S_MntFruits + 0.04457230545618 * S_MntGoldProds + 0.40709024692944 *
S_MntMeatProducts + -0.02989090770621 * S_MntSweetProducts + -0.18818656503765 * S_MntWines +
-0.06237311646922 * S_MonthsAsCustomer + 0.39737856936198 * S_NumCatalogPurchases +
0.33734772994048 * S_NumDealsPurchases + 0.06152222921422 * S_NumDistPurchases +
-0.32068333792942 * S_NumStorePurchases + -0.26971366415104 * S_NumWebPurchases +
0.57693239481071 * S_NumWebVisitsMonth + 0.01161324864777 * S_RFMstat + 0.00311083015445 *
S_RMntFrq + -0.67669007299893 * S_Recency + -0.2298426154616 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.09356212420726 * S_AcceptedCmpTotal + -0.01904617704654 *
S_Age + -0.15700206132472 * S_Frq + -0.58483226627076 * S_Income + 0.30001673574917 *
S_Kidhome + -0.19921492301896 * S_Mnt + -0.00125986769238 * S_MntFishProducts +
0.10195959942937 * S_MntFruits + 0.0069592628978 * S_MntGoldProds + 0.03606436199308 *
S_MntMeatProducts + 0.11259135359155 * S_MntSweetProducts + 0.05408818612126 * S_MntWines +
-0.14024859528104 * S_MonthsAsCustomer + -0.14071929240584 * S_NumCatalogPurchases +
0.22142792900578 * S_NumDealsPurchases + -0.0291983445755 * S_NumDistPurchases +
-0.1997372957954 * S_NumStorePurchases + -0.01286201468794 * S_NumWebPurchases +
-0.35208468552742 * S_NumWebVisitsMonth + 0.02982651364231 * S_RFMstat + 0.0228316921695 *
S_RMntFrq + 0.3930877517629 * S_Recency + 0.28989829670594 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.03659432989123 * AcceptedCmp10 + -0.12552546530316 *
AcceptedCmp20 + 0.57200428680255 * AcceptedCmp30 + 0.4327465126256 * AcceptedCmp40 +
-1.24484170256212 * AcceptedCmp50 + 0.21604379838869 * Complain0 + -0.14986629245585 *
HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.13542589174402 * AcceptedCmp10 + -0.19116289400292
* AcceptedCmp20 + -0.10302282473135 * AcceptedCmp30 + -0.08705955845916 * AcceptedCmp40 +
-0.17435407626698 * AcceptedCmp50 + -0.09781790399225 * Complain0 + 0.02006296587353 *
HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.08917557424765 * AcceptedCmp10 + -0.00944366858806 *
AcceptedCmp20 + 0.30527409248576 * AcceptedCmp30 + 0.26823019920335 * AcceptedCmp40 +
-0.02131660897576 * AcceptedCmp50 + -0.16243659451446 * Complain0 + -0.28227689084686 *
HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.12998959528304 * Education2n_Cycle +
0.48334684246109 * EducationBasic + -0.07156918649895 * EducationGraduation +
-0.21017720550072 * EducationMaster + -0.22358326722482 * Marital_StatusDivorced +
0.09394210085787 * Marital_StatusMarried + -0.10381546554982 * Marital_StatusSingle +
0.05935260608375 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.02955854298839 * Education2n_Cycle +
-0.13472200519398 * EducationBasic + 0.01930622297518 * EducationGraduation +
-0.00188262361226 * EducationMaster + 0.16606212232833 * Marital_StatusDivorced +
-0.33252488631677 * Marital_StatusMarried + 0.26735237322144 * Marital_StatusSingle +
-0.37056611493683 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.29085314695378 * Education2n_Cycle +
-0.2177077392676 * EducationBasic + -0.12975750226767 * EducationGraduation + 0.12920694427876
* EducationMaster + -0.30275479651076 * Marital_StatusDivorced + 0.50273719874035 *
Marital_StatusMarried + -0.39588303956293 * Marital_StatusSingle + 0.42028863850572 *
Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.91295924572895 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -1.21245226681055 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.01609140135594 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(MIN(-0.5 * H1x1_1 **2, _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(MIN(-0.5 * H1x1_2 **2, _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(MIN(-0.5 * H1x1_3 **2, _EXP_BAR));
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.73632716677259 * S_AcceptedCmpTotal + -1.3452480925823 *
S_Age + -0.77564767519981 * S_Frq + -0.06163854052357 * S_Income + 1.82428003860444 *
S_Kidhome + 0.661412748756 * S_Mnt + 1.8826488743919 * S_MntFishProducts + -0.21815276926728 *
S_MntFruits + 1.06597641654862 * S_MntGoldProds + 0.13887400045643 * S_MntMeatProducts +
-0.62827157985225 * S_MntSweetProducts + 1.70742231056065 * S_MntWines + 0.52403167020638 *
S_MonthsAsCustomer + -2.99889150929209 * S_NumCatalogPurchases + -2.59470529821377 *
S_NumDealsPurchases + 0.7668756449818 * S_NumDistPurchases + 0.61064641547208 *
S_NumStorePurchases + -0.87106335660846 * S_NumWebPurchases + 0.1188879348197 *
S_NumWebVisitsMonth + 0.89319669432194 * S_RFMstat + -0.45272285967 * S_RMntFrq +
-0.7210740986075 * S_Recency + 0.7032117485114 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 0.5405970783297 * S_AcceptedCmpTotal + 0.34103648596436 * S_Age
+ -1.00413619660059 * S_Frq + 0.40958797602392 * S_Income + -0.94731216445533 * S_Kidhome +
-0.17755265939769 * S_Mnt + -0.88926202859892 * S_MntFishProducts + 0.6791087530674 *
S_MntFruits + 1.10836805118307 * S_MntGoldProds + -0.29462180872033 * S_MntMeatProducts +
2.21935054370304 * S_MntSweetProducts + 1.41379847080743 * S_MntWines + -0.66077297246309 *
S_MonthsAsCustomer + 0.91491641336561 * S_NumCatalogPurchases + -0.41834528691349 *
S_NumDealsPurchases + -0.07802605490227 * S_NumDistPurchases + -0.62261476153139 *
S_NumStorePurchases + -0.84011953180231 * S_NumWebPurchases + 0.95169092183885 *
S_NumWebVisitsMonth + 0.4036735448902 * S_RFMstat + 0.44620057959954 * S_RMntFrq +
-0.54980566705324 * S_Recency + -0.48914926560129 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.10056833202616 * S_AcceptedCmpTotal + -3.35021911955911 *
S_Age + -0.47433508394475 * S_Frq + 0.2642483252057 * S_Income + 0.20666167536737 * S_Kidhome
+ -1.63711887449192 * S_Mnt + -0.02078521278323 * S_MntFishProducts + -0.13356020799092 *
S_MntFruits + 0.03199170913357 * S_MntGoldProds + 0.35859745927921 * S_MntMeatProducts +
1.28933517907056 * S_MntSweetProducts + -0.45266889039243 * S_MntWines + -0.03980312418999 *
S_MonthsAsCustomer + 0.11407065408619 * S_NumCatalogPurchases + 1.50811278700924 *
S_NumDealsPurchases + -0.40025710583484 * S_NumDistPurchases + 0.16539197954198 *
S_NumStorePurchases + -1.50803186935431 * S_NumWebPurchases + -0.35788712697704 *
S_NumWebVisitsMonth + -2.06761773527847 * S_RFMstat + -0.00353259675109 * S_RMntFrq +
0.4364156603095 * S_Recency + -0.44689366494665 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 1.19862785990255 * AcceptedCmp10 + -0.56777088839338 *
AcceptedCmp20 + -0.20982687937883 * AcceptedCmp30 + 0.23051157512105 * AcceptedCmp40 +
-1.16625535461103 * AcceptedCmp50 + -0.03987377830172 * Complain0 + -1.17553145310278 *
HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -1.37553391657098 * AcceptedCmp10 + -0.49489986415129
* AcceptedCmp20 + 0.84075258232812 * AcceptedCmp30 + 0.31883526052436 * AcceptedCmp40 +
-0.41245383847025 * AcceptedCmp50 + 0.75603245683628 * Complain0 + -2.07732119239317 *
HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 0.94876862525586 * AcceptedCmp10 + 0.79245605062261 *
AcceptedCmp20 + 1.18614024465163 * AcceptedCmp30 + -0.24348380736895 * AcceptedCmp40 +
0.63374252730038 * AcceptedCmp50 + 0.36777527794452 * Complain0 + -0.07746344015306 *
HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 1.73012058377195 * Education2n_Cycle +
2.12295803973544 * EducationBasic + 0.36945596974292 * EducationGraduation + -1.22675967760612
* EducationMaster + -0.48199299977856 * Marital_StatusDivorced + -1.61546983135535 *
Marital_StatusMarried + 1.25890289649165 * Marital_StatusSingle + -0.35805098686637 *
Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -1.04319773106255 * Education2n_Cycle +
-1.20017517243416 * EducationBasic + -0.21851017334559 * EducationGraduation +
0.54918303984069 * EducationMaster + -0.69719138781358 * Marital_StatusDivorced +
0.26964883367384 * Marital_StatusMarried + 0.4656663467381 * Marital_StatusSingle +
-0.38324848670979 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 0.26572249637491 * Education2n_Cycle +
1.36865822272368 * EducationBasic + 0.26769702437041 * EducationGraduation + -0.57748542336591
* EducationMaster + 1.40407968804704 * Marital_StatusDivorced + -1.35468203106214 *
Marital_StatusMarried + 1.0644996414042 * Marital_StatusSingle + -0.68198832748724 *
Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.72650566457008 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -1.0113179577999 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = 0.14003924400021 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = SIN(H1x2_1 );
MPRINT(EM_DIAGRAM):   H1x2_2 = SIN(H1x2_2 );
MPRINT(EM_DIAGRAM):   H1x2_3 = SIN(H1x2_3 );
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -7.62079794803554 * H1x1_1 + 13.7007341613959 * H1x1_2 +
-6.77882452096978 * H1x1_3 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 + -0.44850093089338 * H1x2_1 + -1.24228597291063 *
H1x2_2 + 1.00075465600952 * H1x2_3 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.26198805619545 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ********************************;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   ********************************;
MPRINT(EM_DIAGRAM):   drop H1x1_1 H1x1_2 H1x1_3 H1x2_1 H1x2_2 H1x2_3 ;
MPRINT(EM_DIAGRAM):   drop S_:;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural8;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural8;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   drop AutoNeural8_P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural8_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural8_P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural8_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural8;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   length AutoNeural8_WARN_ $4;
MPRINT(EM_DIAGRAM):   drop AutoNeural8_WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural8_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl36: Scoring Code of model 4 of 7;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural10;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   ***********************************;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   ***********************************;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x3_1 = 'Hidden: H1x3_=1' ;
MPRINT(EM_DIAGRAM):   label H1x3_2 = 'Hidden: H1x3_=2' ;
MPRINT(EM_DIAGRAM):   label H1x3_3 = 'Hidden: H1x3_=3' ;
MPRINT(EM_DIAGRAM):   label H1x3_4 = 'Hidden: H1x3_=4' ;
MPRINT(EM_DIAGRAM):   label H1x3_5 = 'Hidden: H1x3_=5' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   Complain0 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   Complain0 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 *
MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 *
MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   H1x1_1 = -1.5235159368138 * S_AcceptedCmpTotal + 0.13941271308016 *
S_Age + -0.84765157270503 * S_Frq + -0.89386555046676 * S_Income + 1.62709236629244 *
S_Kidhome + -1.21416429819342 * S_Mnt + -1.95640488965637 * S_MntFishProducts +
-0.08621024993404 * S_MntFruits + -0.38536990009586 * S_MntGoldProds + 3.12553097304637 *
S_MntMeatProducts + -2.50680711036653 * S_MntSweetProducts + -3.77770073626477 * S_MntWines +
0.39118206604766 * S_MonthsAsCustomer + 1.80485993754239 * S_NumCatalogPurchases +
3.21215425524619 * S_NumDealsPurchases + 0.08695198777156 * S_NumDistPurchases +
-2.58697971128295 * S_NumStorePurchases + -0.44431924796059 * S_NumWebPurchases +
-1.4492698984921 * S_NumWebVisitsMonth + 2.16652214648037 * S_RFMstat + -0.48027961131639 *
S_RMntFrq + -0.27206877070748 * S_Recency + -0.34774852853763 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.5665707820209 * S_AcceptedCmpTotal + -1.33582859121223 *
S_Age + 0.90483024742522 * S_Frq + -2.00588558815165 * S_Income + 3.0373198083895 * S_Kidhome
+ 0.4356905004225 * S_Mnt + 0.19619626354366 * S_MntFishProducts + -1.09111340184132 *
S_MntFruits + 0.36844676336289 * S_MntGoldProds + -2.23832561375429 * S_MntMeatProducts +
-0.18280081530069 * S_MntSweetProducts + 2.11599309139107 * S_MntWines + 0.68147940490709 *
S_MonthsAsCustomer + -0.73940648599397 * S_NumCatalogPurchases + -0.83844506398484 *
S_NumDealsPurchases + 0.60831936516804 * S_NumDistPurchases + 1.79084087761626 *
S_NumStorePurchases + 1.17119196356453 * S_NumWebPurchases + -3.63586683518718 *
S_NumWebVisitsMonth + 0.60521990735996 * S_RFMstat + 0.56036381019221 * S_RMntFrq +
3.84599118896159 * S_Recency + 2.42091939246471 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -2.34864034635966 * S_AcceptedCmpTotal + 0.38417502023066 *
S_Age + 0.18241442054661 * S_Frq + -0.36643054878492 * S_Income + -0.01464967964014 *
S_Kidhome + 0.13084033882631 * S_Mnt + 1.43066752801424 * S_MntFishProducts + 0.30678881611098
* S_MntFruits + -0.35038082288662 * S_MntGoldProds + -6.79650673935808 * S_MntMeatProducts +
-0.35154740308081 * S_MntSweetProducts + 4.53406963590593 * S_MntWines + 0.35082802515055 *
S_MonthsAsCustomer + -1.62489937965567 * S_NumCatalogPurchases + -0.31484031572628 *
S_NumDealsPurchases + -0.18273941035679 * S_NumDistPurchases + 0.99501789733882 *
S_NumStorePurchases + 1.32014078829379 * S_NumWebPurchases + -1.34393498450215 *
S_NumWebVisitsMonth + -0.93549119966022 * S_RFMstat + -1.74825390192193 * S_RMntFrq +
0.84406941726743 * S_Recency + -0.5004540381333 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.46772023050431 * S_AcceptedCmpTotal + -0.64609651992636 *
S_Age + 0.65433283816167 * S_Frq + 0.97922442633265 * S_Income + -0.37705204232056 * S_Kidhome
+ 0.00937752600299 * S_Mnt + -0.6082843846013 * S_MntFishProducts + -0.6227107898918 *
S_MntFruits + 0.0291421224006 * S_MntGoldProds + 1.09748402313736 * S_MntMeatProducts +
0.00604619863622 * S_MntSweetProducts + -0.74684537570529 * S_MntWines + -0.00266569003481 *
S_MonthsAsCustomer + 2.01081657735872 * S_NumCatalogPurchases + 1.19658719134196 *
S_NumDealsPurchases + 0.87478204472986 * S_NumDistPurchases + -0.20635856288784 *
S_NumStorePurchases + -0.89927356974242 * S_NumWebPurchases + 2.92285244132576 *
S_NumWebVisitsMonth + -0.10913907245142 * S_RFMstat + 1.64233441899256 * S_RMntFrq +
-3.64945971202322 * S_Recency + -1.78841346993558 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -1.22491918863941 * S_AcceptedCmpTotal + 0.16201659993217 *
S_Age + 0.17189537824457 * S_Frq + -0.87922900323563 * S_Income + -0.79268410231108 *
S_Kidhome + 0.62793961676074 * S_Mnt + 0.20877761882787 * S_MntFishProducts + 0.99367872286661
* S_MntFruits + -0.4347564565882 * S_MntGoldProds + -0.16203279329295 * S_MntMeatProducts +
0.81409215344356 * S_MntSweetProducts + 1.33482971563984 * S_MntWines + -1.17441882196058 *
S_MonthsAsCustomer + -1.72330829533107 * S_NumCatalogPurchases + -2.32617124568 *
S_NumDealsPurchases + -0.56589187730672 * S_NumDistPurchases + 1.07062299863482 *
S_NumStorePurchases + 0.30077273739578 * S_NumWebPurchases + -1.67745421915317 *
S_NumWebVisitsMonth + 0.0530074713265 * S_RFMstat + -0.55969729655382 * S_RMntFrq +
1.32196704233234 * S_Recency + 1.05470622089613 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.19875423759582 * AcceptedCmp10 + -1.84163905120352 *
AcceptedCmp20 + -1.63149345314696 * AcceptedCmp30 + -1.52652349127913 * AcceptedCmp40 +
-0.97663634905647 * AcceptedCmp50 + -0.94352222509088 * Complain0 + -0.63297203617355 *
HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.0505791781839 * AcceptedCmp10 + -0.19407965320143 *
AcceptedCmp20 + 0.35537657271506 * AcceptedCmp30 + -0.84577216347728 * AcceptedCmp40 +
1.73085566880686 * AcceptedCmp50 + 0.05800586053869 * Complain0 + -0.62505561129469 *
HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.54825581966403 * AcceptedCmp10 + -0.0966204838125 *
AcceptedCmp20 + -1.31707923763053 * AcceptedCmp30 + -1.21021077486757 * AcceptedCmp40 +
3.29102250037389 * AcceptedCmp50 + -0.16383687725206 * Complain0 + 0.00651446514934 *
HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -1.18573650260336 * AcceptedCmp10 + -1.73968979068234
* AcceptedCmp20 + -1.31277698137778 * AcceptedCmp30 + -1.74346538593922 * AcceptedCmp40 +
-0.72543919818299 * AcceptedCmp50 + -0.06328353200384 * Complain0 + 0.74828735398796 *
HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.19622185523754 * AcceptedCmp10 + -0.4643498903813 *
AcceptedCmp20 + 0.69293644934542 * AcceptedCmp30 + 0.23077838801355 * AcceptedCmp40 +
0.53061813608476 * AcceptedCmp50 + -0.56870999936869 * Complain0 + 0.5917990310858 *
HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 1.01422000032629 * Education2n_Cycle +
-0.77619298826287 * EducationBasic + 0.35633748974614 * EducationGraduation + 0.98491516107588
* EducationMaster + -0.27797737429678 * Marital_StatusDivorced + -0.08137635862327 *
Marital_StatusMarried + 0.06275411820495 * Marital_StatusSingle + -0.19979743343415 *
Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.66224206017124 * Education2n_Cycle +
0.80729589186486 * EducationBasic + 0.75931615755998 * EducationGraduation + -0.05470462753112
* EducationMaster + 0.05151426841441 * Marital_StatusDivorced + 1.19165082030442 *
Marital_StatusMarried + -1.08257080662611 * Marital_StatusSingle + 0.13534863375625 *
Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.20065577451105 * Education2n_Cycle +
-0.14205714608311 * EducationBasic + -0.07077711368393 * EducationGraduation +
0.40262329710793 * EducationMaster + 0.0238206459022 * Marital_StatusDivorced +
-0.4653244204261 * Marital_StatusMarried + 0.13051613619882 * Marital_StatusSingle +
-0.35951366919755 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.8555672630555 * Education2n_Cycle +
0.58439980233621 * EducationBasic + 0.04784356342853 * EducationGraduation + -0.79764992264249
* EducationMaster + -0.7449356409222 * Marital_StatusDivorced + -1.46604673521535 *
Marital_StatusMarried + 0.74484771688818 * Marital_StatusSingle + -1.91273009779071 *
Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.45561096683674 * Education2n_Cycle +
-0.08389156101858 * EducationBasic + -1.24281299616343 * EducationGraduation +
-0.00999807517226 * EducationMaster + -3.68044980584423 * Marital_StatusDivorced +
3.14587407902338 * Marital_StatusMarried + -2.66118132753024 * Marital_StatusSingle +
3.50991640149914 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -2.87464368543529 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.69745433976458 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.71895677211617 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -3.07619671976178 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -1.74345318000473 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_4 = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_5 = 1.0 / (1.0 + EXP(MIN( - H1x1_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.02206354442682 * S_AcceptedCmpTotal + -1.34753268833642 *
S_Age + -2.08377331969695 * S_Frq + -1.39854535380539 * S_Income + 2.13620611759545 *
S_Kidhome + -1.50515365217324 * S_Mnt + 0.85499321862984 * S_MntFishProducts +
-1.17732452790345 * S_MntFruits + 1.52355640622249 * S_MntGoldProds + 1.31854239360457 *
S_MntMeatProducts + -0.03265851293389 * S_MntSweetProducts + 2.18666242847435 * S_MntWines +
0.08246249957908 * S_MonthsAsCustomer + -1.06901902236609 * S_NumCatalogPurchases +
0.89261880438741 * S_NumDealsPurchases + -1.61647413199892 * S_NumDistPurchases +
-0.56304669045195 * S_NumStorePurchases + 0.7766837080945 * S_NumWebPurchases +
-2.2953497398902 * S_NumWebVisitsMonth + -3.34547809243199 * S_RFMstat + 0.07311937799261 *
S_RMntFrq + -0.5786489917247 * S_Recency + -1.06532056361117 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 0.0341880757331 * S_AcceptedCmpTotal + 0.72034771315738 * S_Age
+ 0.64155966340389 * S_Frq + -1.06570008729492 * S_Income + -1.84532938869849 * S_Kidhome +
0.94433555965982 * S_Mnt + 1.23831916074831 * S_MntFishProducts + 1.33415870886475 *
S_MntFruits + -0.51253922893993 * S_MntGoldProds + 0.02241594009025 * S_MntMeatProducts +
-1.2811169586741 * S_MntSweetProducts + 1.96686773881953 * S_MntWines + 1.44655944802715 *
S_MonthsAsCustomer + -1.18627316384798 * S_NumCatalogPurchases + 1.02431289724643 *
S_NumDealsPurchases + -0.90960173637405 * S_NumDistPurchases + 1.24283490404772 *
S_NumStorePurchases + 1.23072413154592 * S_NumWebPurchases + -0.21533378473931 *
S_NumWebVisitsMonth + 1.26438704884008 * S_RFMstat + 0.0014042871018 * S_RMntFrq +
0.32357651423135 * S_Recency + -0.49834512433407 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.57066024275015 * S_AcceptedCmpTotal + 0.16615358153136 *
S_Age + -0.60017461612499 * S_Frq + -0.21195793925019 * S_Income + -0.36049126996499 *
S_Kidhome + 0.97458542661118 * S_Mnt + 0.62279162661518 * S_MntFishProducts +
-0.44715765367363 * S_MntFruits + 0.91519163455361 * S_MntGoldProds + 1.07312113398768 *
S_MntMeatProducts + -1.61967017526055 * S_MntSweetProducts + -1.88327677412185 * S_MntWines +
-1.67067768979245 * S_MonthsAsCustomer + -0.64725516463464 * S_NumCatalogPurchases +
-0.26249596122198 * S_NumDealsPurchases + -0.63328519804758 * S_NumDistPurchases +
-0.88467503575886 * S_NumStorePurchases + -0.83120537310738 * S_NumWebPurchases +
1.40072282351719 * S_NumWebVisitsMonth + 1.42591300760984 * S_RFMstat + 1.93593865100837 *
S_RMntFrq + -1.2794275536508 * S_Recency + -0.78582664529339 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 0.70159995537759 * S_AcceptedCmpTotal + -0.70199351793792 *
S_Age + 1.63573967285806 * S_Frq + -0.1930098634567 * S_Income + -0.43173926207337 * S_Kidhome
+ -0.45239271926178 * S_Mnt + -0.14139816383874 * S_MntFishProducts + -0.70568635660703 *
S_MntFruits + 1.68796268038024 * S_MntGoldProds + 0.80481626355934 * S_MntMeatProducts +
0.29831384975096 * S_MntSweetProducts + -0.50792336172825 * S_MntWines + 0.80425149159678 *
S_MonthsAsCustomer + -2.26171302044375 * S_NumCatalogPurchases + 1.30167361451945 *
S_NumDealsPurchases + 1.45457613716235 * S_NumDistPurchases + -0.40226463685252 *
S_NumStorePurchases + 0.36369161683572 * S_NumWebPurchases + -2.65684851610403 *
S_NumWebVisitsMonth + -1.14810413235545 * S_RFMstat + 1.291857215261 * S_RMntFrq +
1.36572595403825 * S_Recency + -0.54958418574963 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -1.00456225444665 * S_AcceptedCmpTotal + 0.19033874303798 *
S_Age + -0.62578451616415 * S_Frq + -0.96647190269426 * S_Income + 1.77002676974464 *
S_Kidhome + -0.53816249322166 * S_Mnt + 0.21322270253871 * S_MntFishProducts +
0.84210241961105 * S_MntFruits + 0.44153678515007 * S_MntGoldProds + -0.23120999196747 *
S_MntMeatProducts + 0.62950730283125 * S_MntSweetProducts + -0.64043011108056 * S_MntWines +
-2.74922907599662 * S_MonthsAsCustomer + 0.67939322758717 * S_NumCatalogPurchases +
-0.54572162665338 * S_NumDealsPurchases + 0.9607390449318 * S_NumDistPurchases +
-0.03259470545754 * S_NumStorePurchases + 0.19202241423412 * S_NumWebPurchases +
0.61085831658456 * S_NumWebVisitsMonth + -0.08582160429243 * S_RFMstat + 1.73862452808565 *
S_RMntFrq + -0.01216476188714 * S_Recency + -0.3304403270473 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 0.83453601566539 * AcceptedCmp10 + 0.59109136511077 *
AcceptedCmp20 + -0.9669340701943 * AcceptedCmp30 + -2.31468262956126 * AcceptedCmp40 +
-0.76277791850069 * AcceptedCmp50 + 0.30895289981412 * Complain0 + 0.147233855837 *
HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 0.42789425545567 * AcceptedCmp10 + 0.08505833889085 *
AcceptedCmp20 + -1.15112188313855 * AcceptedCmp30 + -1.24362486486214 * AcceptedCmp40 +
0.04131419116048 * AcceptedCmp50 + -0.45255799355317 * Complain0 + -0.32616423192953 *
HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + -0.03136360497649 * AcceptedCmp10 + 0.33867713207886 *
AcceptedCmp20 + 0.05809342990544 * AcceptedCmp30 + -0.06416815079894 * AcceptedCmp40 +
1.14617960682421 * AcceptedCmp50 + -0.82461320336041 * Complain0 + 0.58944444655621 *
HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + -1.12705500616438 * AcceptedCmp10 + 0.0487863004734 *
AcceptedCmp20 + 1.30229008593765 * AcceptedCmp30 + 0.1726718549662 * AcceptedCmp40 +
0.68443569845295 * AcceptedCmp50 + 2.39733248962228 * Complain0 + -0.620937291929 *
HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 1.42400460803453 * AcceptedCmp10 + -1.22361480936625 *
AcceptedCmp20 + 1.31090186367202 * AcceptedCmp30 + -1.40343404818254 * AcceptedCmp40 +
-0.57377230862494 * AcceptedCmp50 + 0.58622740778295 * Complain0 + -0.83222074319962 *
HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 1.56508379719546 * Education2n_Cycle +
0.52302987210661 * EducationBasic + -0.0570045326497 * EducationGraduation + -0.01838790774804
* EducationMaster + -2.32430245081383 * Marital_StatusDivorced + -0.09815511356796 *
Marital_StatusMarried + 0.13075504294551 * Marital_StatusSingle + -0.0278875765201 *
Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -0.85592920992847 * Education2n_Cycle +
0.93272618259957 * EducationBasic + 0.48987674771079 * EducationGraduation + -1.12454002820451
* EducationMaster + -0.65574603869224 * Marital_StatusDivorced + 1.54672472575294 *
Marital_StatusMarried + -1.59817602340208 * Marital_StatusSingle + 1.94381954546813 *
Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 0.37093371596523 * Education2n_Cycle +
-2.05531065359129 * EducationBasic + 1.16090743585078 * EducationGraduation + 0.87547303889444
* EducationMaster + -0.50911604604781 * Marital_StatusDivorced + 0.30403066135719 *
Marital_StatusMarried + 0.1026950879545 * Marital_StatusSingle + 0.01000166524405 *
Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 1.28509086202466 * Education2n_Cycle +
0.07860157688162 * EducationBasic + 0.24607672351689 * EducationGraduation + -0.06009602645566
* EducationMaster + 1.07371507133318 * Marital_StatusDivorced + -0.07097334129051 *
Marital_StatusMarried + -0.48339718568621 * Marital_StatusSingle + -0.08900780355835 *
Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + -1.08109633810919 * Education2n_Cycle +
-0.54966585100103 * EducationBasic + 0.5388683065169 * EducationGraduation + 0.46960055830119
* EducationMaster + 1.04342893515504 * Marital_StatusDivorced + 1.16171312085032 *
Marital_StatusMarried + -0.30201646939913 * Marital_StatusSingle + 1.84122645884771 *
Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.56970796025332 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -0.11766478836824 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -2.78218653641036 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 0.51979515224467 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -0.4635890987824 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x3_ ;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   H1x3_1 = 0.04411772880581 * S_AcceptedCmpTotal + -1.62725197326682 *
S_Age + -1.99668213406033 * S_Frq + -1.2265241921112 * S_Income + 1.99702869958035 * S_Kidhome
+ -1.46762539068512 * S_Mnt + 0.97784534044189 * S_MntFishProducts + -1.07945265688497 *
S_MntFruits + 2.09306294956674 * S_MntGoldProds + 1.46219664114361 * S_MntMeatProducts +
0.10961158671991 * S_MntSweetProducts + 2.03040669273977 * S_MntWines + 0.16536646017211 *
S_MonthsAsCustomer + -0.88077951545076 * S_NumCatalogPurchases + 1.32256781010645 *
S_NumDealsPurchases + -1.43015438973619 * S_NumDistPurchases + -0.63489289584421 *
S_NumStorePurchases + 0.90508699686841 * S_NumWebPurchases + -2.24234858061014 *
S_NumWebVisitsMonth + -2.9988027991146 * S_RFMstat + 0.35987461993699 * S_RMntFrq +
-1.09317668626142 * S_Recency + -1.09925349438658 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_2 = 0.10522923391314 * S_AcceptedCmpTotal + 0.68417479453112 *
S_Age + 0.46966162186743 * S_Frq + -1.21537535753115 * S_Income + -1.87423294109672 *
S_Kidhome + 0.76913864731495 * S_Mnt + 1.08535778796502 * S_MntFishProducts + 1.27743864099826
* S_MntFruits + -0.3186089651882 * S_MntGoldProds + -0.00224333051647 * S_MntMeatProducts +
-1.28169616734092 * S_MntSweetProducts + 1.67350500234032 * S_MntWines + 1.09584504562467 *
S_MonthsAsCustomer + -1.45467876727494 * S_NumCatalogPurchases + 0.85965187264096 *
S_NumDealsPurchases + -1.15239933286756 * S_NumDistPurchases + 1.20800889102387 *
S_NumStorePurchases + 1.08790389130242 * S_NumWebPurchases + -0.13665551161149 *
S_NumWebVisitsMonth + 1.02103499612659 * S_RFMstat + -0.12980097143044 * S_RMntFrq +
0.65854311654256 * S_Recency + -0.60999209572192 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_3 = -0.72575004293074 * S_AcceptedCmpTotal + 0.34932839743259 *
S_Age + -0.2673460618328 * S_Frq + 0.25743187687481 * S_Income + -0.02172890929346 * S_Kidhome
+ 1.21785656626837 * S_Mnt + 0.37454359336223 * S_MntFishProducts + -0.32600053706408 *
S_MntFruits + 0.57807148940534 * S_MntGoldProds + 1.14736546512366 * S_MntMeatProducts +
-1.41517082393978 * S_MntSweetProducts + -1.44899595080061 * S_MntWines + -1.45520867126531 *
S_MonthsAsCustomer + -0.33372174099196 * S_NumCatalogPurchases + -0.5767607129654 *
S_NumDealsPurchases + -0.2643921429796 * S_NumDistPurchases + -0.67417489911206 *
S_NumStorePurchases + -0.51423877684891 * S_NumWebPurchases + 1.40328299605176 *
S_NumWebVisitsMonth + 1.35588787174957 * S_RFMstat + 1.98416436137119 * S_RMntFrq +
-0.8447362450681 * S_Recency + -1.04372961736437 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_4 = 0.05745684959388 * S_AcceptedCmpTotal + -0.71077680161454 *
S_Age + 1.4854566142375 * S_Frq + -0.32870416928843 * S_Income + -0.24944295149087 * S_Kidhome
+ -0.8312409740431 * S_Mnt + -0.09638646505384 * S_MntFishProducts + -0.86550491354678 *
S_MntFruits + 1.46902858697296 * S_MntGoldProds + 0.3661164136841 * S_MntMeatProducts +
0.43108270077708 * S_MntSweetProducts + -0.87140466249616 * S_MntWines + 0.17511224898094 *
S_MonthsAsCustomer + -2.66256923117027 * S_NumCatalogPurchases + 1.2821617657076 *
S_NumDealsPurchases + 1.26584115202735 * S_NumDistPurchases + -0.46597664211833 *
S_NumStorePurchases + 0.45652363472866 * S_NumWebPurchases + -2.66296112021252 *
S_NumWebVisitsMonth + -0.86670667018974 * S_RFMstat + 0.60866041131732 * S_RMntFrq +
1.31886754707923 * S_Recency + -0.09949653139413 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_5 = -0.66850525418144 * S_AcceptedCmpTotal + 0.14331320698516 *
S_Age + -0.82708146094779 * S_Frq + -0.95718847240937 * S_Income + 1.37375648833049 *
S_Kidhome + -0.48314397401233 * S_Mnt + 0.07047324834759 * S_MntFishProducts +
0.86114312801139 * S_MntFruits + 0.54573348379533 * S_MntGoldProds + -0.05966372249273 *
S_MntMeatProducts + 0.47275063848217 * S_MntSweetProducts + -0.62962007155261 * S_MntWines +
-2.38081462831488 * S_MonthsAsCustomer + 0.56594272689824 * S_NumCatalogPurchases +
-0.85162564171681 * S_NumDealsPurchases + 0.64631099667221 * S_NumDistPurchases +
-0.03081963858636 * S_NumStorePurchases + -0.24124717624664 * S_NumWebPurchases +
0.56425980772372 * S_NumWebVisitsMonth + -0.32254616624678 * S_RFMstat + 1.84875225899832 *
S_RMntFrq + 0.08133312388911 * S_Recency + -0.19004451996479 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + 1.03487942320068 * AcceptedCmp10 + 0.77723443135875 *
AcceptedCmp20 + -1.04686858569959 * AcceptedCmp30 + -1.87852311800194 * AcceptedCmp40 +
-0.69838759011672 * AcceptedCmp50 + 0.50242045854463 * Complain0 + -0.13339808164255 *
HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 + 0.39887299789564 * AcceptedCmp10 + 0.12293700562648 *
AcceptedCmp20 + -1.41656670681309 * AcceptedCmp30 + -1.04607557362847 * AcceptedCmp40 +
0.02824649030864 * AcceptedCmp50 + -0.46581865837196 * Complain0 + -0.45913631308543 *
HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_3 = H1x3_3 + 0.20672868292414 * AcceptedCmp10 + 0.52082182457868 *
AcceptedCmp20 + 0.54911826263592 * AcceptedCmp30 + -0.02400616289922 * AcceptedCmp40 +
1.22209744911863 * AcceptedCmp50 + -0.68243413694538 * Complain0 + 0.15620895311704 *
HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_4 = H1x3_4 + -0.88269820758187 * AcceptedCmp10 + -0.19276892535938
* AcceptedCmp20 + 1.26789056018511 * AcceptedCmp30 + 0.04396979158385 * AcceptedCmp40 +
0.54194186871284 * AcceptedCmp50 + 2.07766091697967 * Complain0 + -0.43514178858246 *
HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_5 = H1x3_5 + 1.04303179873707 * AcceptedCmp10 + -1.29742389809739 *
AcceptedCmp20 + 1.21708533617895 * AcceptedCmp30 + -1.47807634614974 * AcceptedCmp40 +
-0.7694244559597 * AcceptedCmp50 + 0.51798162453723 * Complain0 + -0.95513113905832 *
HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + 1.27822716215014 * Education2n_Cycle +
0.45900505383383 * EducationBasic + -0.35822992758656 * EducationGraduation + 0.05949934527868
* EducationMaster + -2.49973437075558 * Marital_StatusDivorced + -0.18076948182574 *
Marital_StatusMarried + 0.13498525495231 * Marital_StatusSingle + -0.02365465636052 *
Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 + -1.14981446246051 * Education2n_Cycle +
0.68006996858541 * EducationBasic + -0.06493857044709 * EducationGraduation +
-1.22462805502453 * EducationMaster + -0.59463732835 * Marital_StatusDivorced +
1.37741332427598 * Marital_StatusMarried + -1.5833455713231 * Marital_StatusSingle +
1.79205360628448 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_3 = H1x3_3 + 0.17779609626753 * Education2n_Cycle +
-2.22704675950779 * EducationBasic + 1.30292325944162 * EducationGraduation + 0.68083131423474
* EducationMaster + -0.44569556289443 * Marital_StatusDivorced + 0.29918053103557 *
Marital_StatusMarried + -0.10337314064224 * Marital_StatusSingle + 0.04054221993299 *
Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_4 = H1x3_4 + 1.16412985277542 * Education2n_Cycle +
0.18806330813344 * EducationBasic + 0.00212145829045 * EducationGraduation + 0.00087354662697
* EducationMaster + 1.13881957277462 * Marital_StatusDivorced + -0.35849807146313 *
Marital_StatusMarried + -0.22168731316885 * Marital_StatusSingle + -0.22672306263461 *
Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_5 = H1x3_5 + -1.25195599938207 * Education2n_Cycle +
-0.60946428681789 * EducationBasic + 0.39993500009227 * EducationGraduation + 0.43730905987249
* EducationMaster + 1.10774969923269 * Marital_StatusDivorced + 1.08409594073043 *
Marital_StatusMarried + -0.33145048007894 * Marital_StatusSingle + 1.68703837664761 *
Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 1.76093149538288 + H1x3_1 ;
MPRINT(EM_DIAGRAM):   H1x3_2 = -0.11243980195421 + H1x3_2 ;
MPRINT(EM_DIAGRAM):   H1x3_3 = -2.59474781862449 + H1x3_3 ;
MPRINT(EM_DIAGRAM):   H1x3_4 = 0.25376473610258 + H1x3_4 ;
MPRINT(EM_DIAGRAM):   H1x3_5 = -0.54808648261397 + H1x3_5 ;
MPRINT(EM_DIAGRAM):   _EPS = SQRT(CONSTANT('MACEPS')) ;
MPRINT(EM_DIAGRAM):   _REC_EPS = 1/_EPS ;
MPRINT(EM_DIAGRAM):   DROP _REC_EPS _EPS ;
MPRINT(EM_DIAGRAM):   IF H1x3_1 < _REC_EPS AND H1x3_1 > - _REC_EPS THEN H1x3_1 = H1x3_1 *
H1x3_1 ;
MPRINT(EM_DIAGRAM):   ELSE H1x3_1 = _REC_EPS ;
MPRINT(EM_DIAGRAM):   IF H1x3_2 < _REC_EPS AND H1x3_2 > - _REC_EPS THEN H1x3_2 = H1x3_2 *
H1x3_2 ;
MPRINT(EM_DIAGRAM):   ELSE H1x3_2 = _REC_EPS ;
MPRINT(EM_DIAGRAM):   IF H1x3_3 < _REC_EPS AND H1x3_3 > - _REC_EPS THEN H1x3_3 = H1x3_3 *
H1x3_3 ;
MPRINT(EM_DIAGRAM):   ELSE H1x3_3 = _REC_EPS ;
MPRINT(EM_DIAGRAM):   IF H1x3_4 < _REC_EPS AND H1x3_4 > - _REC_EPS THEN H1x3_4 = H1x3_4 *
H1x3_4 ;
MPRINT(EM_DIAGRAM):   ELSE H1x3_4 = _REC_EPS ;
MPRINT(EM_DIAGRAM):   IF H1x3_5 < _REC_EPS AND H1x3_5 > - _REC_EPS THEN H1x3_5 = H1x3_5 *
H1x3_5 ;
MPRINT(EM_DIAGRAM):   ELSE H1x3_5 = _REC_EPS ;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   H1x3_1 = .;
MPRINT(EM_DIAGRAM):   H1x3_2 = .;
MPRINT(EM_DIAGRAM):   H1x3_3 = .;
MPRINT(EM_DIAGRAM):   H1x3_4 = .;
MPRINT(EM_DIAGRAM):   H1x3_5 = .;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 12.3694111963696 * H1x1_1 + -9.1014019341077 * H1x1_2 +
-14.9093780045901 * H1x1_3 + 25.4505756686259 * H1x1_4 + -13.3798044908382 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 + -0.2373753683635 * H1x2_1 + -0.03661175538589 *
H1x2_2 + 0.29534813812803 * H1x2_3 + 0.11908166898588 * H1x2_4 + -0.241544638637 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 + -0.00276620815201 * H1x3_1 + 0.00487849269566 *
H1x3_2 + 0.01323887261394 * H1x3_3 + -0.0271389925801 * H1x3_4 + 0.00026595473892 * H1x3_5 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 4.0541137239843 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ********************************;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   ********************************;
MPRINT(EM_DIAGRAM):   drop H1x1_1 H1x1_2 H1x1_3 H1x1_4 H1x1_5 H1x2_1 H1x2_2 H1x2_3 H1x2_4
H1x2_5 H1x3_1 H1x3_2 H1x3_3 H1x3_4 H1x3_5 ;
MPRINT(EM_DIAGRAM):   drop S_:;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural10;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural10;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   drop AutoNeural10_P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural10_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural10_P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural10_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural10;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   length AutoNeural10_WARN_ $4;
MPRINT(EM_DIAGRAM):   drop AutoNeural10_WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural10_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl36: Scoring Code of model 5 of 7;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural9;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   ***********************************;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   ***********************************;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   Complain0 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   Complain0 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 *
MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 *
MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.7790327388408 * S_AcceptedCmpTotal + 0.32193739579856 *
S_Age + -0.43875684835169 * S_Frq + 0.13013240455049 * S_Income + -0.74127716462976 *
S_Kidhome + -0.86416600561474 * S_Mnt + 0.94819226754442 * S_MntFishProducts +
0.15895119408799 * S_MntFruits + 0.03658391935071 * S_MntGoldProds + -3.75052142292398 *
S_MntMeatProducts + -0.22192220883538 * S_MntSweetProducts + 0.80534656860633 * S_MntWines +
0.16144794241259 * S_MonthsAsCustomer + -1.53040364803625 * S_NumCatalogPurchases +
-1.09856598010056 * S_NumDealsPurchases + -0.10571850472514 * S_NumDistPurchases +
0.11898210654227 * S_NumStorePurchases + 0.5984912060231 * S_NumWebPurchases +
0.78592531126942 * S_NumWebVisitsMonth + -0.50004686386273 * S_RFMstat + 0.40804018151571 *
S_RMntFrq + -0.94753260620308 * S_Recency + -0.49604118088328 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.22226926295489 * S_AcceptedCmpTotal + 0.08523894206962 *
S_Age + -0.13010378102207 * S_Frq + -0.61810906923536 * S_Income + 0.26583917928045 *
S_Kidhome + 0.57213479787981 * S_Mnt + -0.58077613046442 * S_MntFishProducts + 0.1530301493776
* S_MntFruits + 0.4586167382631 * S_MntGoldProds + 1.40179051129147 * S_MntMeatProducts +
0.0231413770297 * S_MntSweetProducts + -0.08483682112771 * S_MntWines + 0.22891006905064 *
S_MonthsAsCustomer + -1.21866617917435 * S_NumCatalogPurchases + -0.84042044250624 *
S_NumDealsPurchases + -0.10246261015488 * S_NumDistPurchases + 0.06886149708824 *
S_NumStorePurchases + 0.63156910388199 * S_NumWebPurchases + -1.33032061845311 *
S_NumWebVisitsMonth + 0.51240040684649 * S_RFMstat + 0.77604047421115 * S_RMntFrq +
1.27964260226958 * S_Recency + 0.12022076571016 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.19879097976404 * S_AcceptedCmpTotal + 0.14973951999399 *
S_Age + -0.90630756390399 * S_Frq + 0.64934241358682 * S_Income + -0.66249532206724 *
S_Kidhome + 0.54195490560813 * S_Mnt + -0.58497380565417 * S_MntFishProducts +
0.12409202833851 * S_MntFruits + 0.44480061346561 * S_MntGoldProds + 3.27513201048136 *
S_MntMeatProducts + -0.1256493054184 * S_MntSweetProducts + -0.56080685022301 * S_MntWines +
0.08633469383177 * S_MonthsAsCustomer + 0.45482673505107 * S_NumCatalogPurchases +
0.45393712455366 * S_NumDealsPurchases + -0.25292198053552 * S_NumDistPurchases +
-1.35582215064749 * S_NumStorePurchases + -0.83132202302639 * S_NumWebPurchases +
1.87116225272678 * S_NumWebVisitsMonth + 0.39564162951481 * S_RFMstat + -1.08810221295144 *
S_RMntFrq + -2.07407859514648 * S_Recency + -0.6849099475723 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.81075414854045 * AcceptedCmp10 + -0.33403710427327 *
AcceptedCmp20 + -0.62242387435975 * AcceptedCmp30 + -0.89439410552439 * AcceptedCmp40 +
0.77335976756467 * AcceptedCmp50 + -0.08825784612626 * Complain0 + 0.3404395194267 *
HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.16741179709566 * AcceptedCmp10 + -0.53751033948061
* AcceptedCmp20 + 0.80285496945068 * AcceptedCmp30 + 0.39379279966091 * AcceptedCmp40 +
-1.40366799083237 * AcceptedCmp50 + -0.4265482924132 * Complain0 + 0.37272103593422 *
HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.19417657656326 * AcceptedCmp10 + -0.06547746897317
* AcceptedCmp20 + 0.21980739904513 * AcceptedCmp30 + -0.19452210052301 * AcceptedCmp40 +
-2.02403282278574 * AcceptedCmp50 + -0.18250261144524 * Complain0 + 0.34168103813312 *
HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.03956789621002 * Education2n_Cycle +
-0.38372374638888 * EducationBasic + -0.4178927802606 * EducationGraduation +
-0.61278625923288 * EducationMaster + 0.4695898100094 * Marital_StatusDivorced +
-0.52137742289262 * Marital_StatusMarried + -0.32382086914936 * Marital_StatusSingle +
-0.66163012672344 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.25832319223886 * Education2n_Cycle +
0.05602860720141 * EducationBasic + -0.86282852488383 * EducationGraduation + 0.18916317018059
* EducationMaster + -1.04858218653238 * Marital_StatusDivorced + 2.41098335093061 *
Marital_StatusMarried + -1.94696044861334 * Marital_StatusSingle + 2.16021514856437 *
Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.05351872242069 * Education2n_Cycle +
-0.56850783552841 * EducationBasic + -0.14880907057098 * EducationGraduation +
-0.32850851013319 * EducationMaster + 0.42964114177062 * Marital_StatusDivorced +
-0.38607635605816 * Marital_StatusMarried + -0.02157405407852 * Marital_StatusSingle +
-0.59995619744527 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.53239337390307 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.99428677123948 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.835877082844 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0;
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 );
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.41904253756965 * H1x1_1 + -7.11204151517034 * H1x1_2 +
10.7909509395818 * H1x1_3 + -2.20432578352426 * H1x1_4 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.66951098257489 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ********************************;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   ********************************;
MPRINT(EM_DIAGRAM):   drop H1x1_1 H1x1_2 H1x1_3 H1x1_4 ;
MPRINT(EM_DIAGRAM):   drop S_:;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural9;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural9;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   drop AutoNeural9_P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural9_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural9_P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural9_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural9;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   length AutoNeural9_WARN_ $4;
MPRINT(EM_DIAGRAM):   drop AutoNeural9_WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural9_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl36: Scoring Code of model 6 of 7;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural11;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   ***********************************;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   ***********************************;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   Complain0 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   Complain0 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 *
MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 *
MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.08465472857554 * S_AcceptedCmpTotal + 0.23104131534618 *
S_Age + 0.27646175976509 * S_Frq + 0.45938840681203 * S_Income + 0.09814900830666 * S_Kidhome
+ 0.23249430277518 * S_Mnt + -0.51905493105122 * S_MntFishProducts + -0.07604226481078 *
S_MntFruits + 0.10100393832157 * S_MntGoldProds + 1.56159221713858 * S_MntMeatProducts +
0.12166799382268 * S_MntSweetProducts + -0.63388816790524 * S_MntWines + 0.00878303775585 *
S_MonthsAsCustomer + 0.01990411233136 * S_NumCatalogPurchases + 0.19770934886328 *
S_NumDealsPurchases + 0.0515215988111 * S_NumDistPurchases + -0.34569346346089 *
S_NumStorePurchases + -0.27122293596124 * S_NumWebPurchases + -0.17061565609755 *
S_NumWebVisitsMonth + 0.1271178187502 * S_RFMstat + 0.38306508975954 * S_RMntFrq +
0.05823588653853 * S_Recency + -0.03760117378617 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.16564144258189 * S_AcceptedCmpTotal + -0.18930338067433 *
S_Age + -0.23013558761757 * S_Frq + -0.1347135122598 * S_Income + 0.04776498811407 * S_Kidhome
+ -0.14940302068852 * S_Mnt + -0.13108691405604 * S_MntFishProducts + -0.02561341150704 *
S_MntFruits + -0.02022222891948 * S_MntGoldProds + 0.80867688993093 * S_MntMeatProducts +
-0.08374488783635 * S_MntSweetProducts + -0.6719369441832 * S_MntWines + -0.14760035685198 *
S_MonthsAsCustomer + 0.4007376271331 * S_NumCatalogPurchases + 0.54308887602031 *
S_NumDealsPurchases + -0.22507315320192 * S_NumDistPurchases + -0.79861387328361 *
S_NumStorePurchases + -0.45467494002747 * S_NumWebPurchases + 0.2119048824613 *
S_NumWebVisitsMonth + 0.30167662748678 * S_RFMstat + 0.10712110659027 * S_RMntFrq +
-0.03061918029089 * S_Recency + -0.06096313113607 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.02674875562898 * S_AcceptedCmpTotal + -0.19731891748843 *
S_Age + -0.00753784701259 * S_Frq + -0.31764694608254 * S_Income + 0.49525183733398 *
S_Kidhome + 0.24623619243686 * S_Mnt + 0.25904859702044 * S_MntFishProducts + 0.26153358982994
* S_MntFruits + -0.07223707213485 * S_MntGoldProds + -0.15192960471493 * S_MntMeatProducts +
0.08241128624385 * S_MntSweetProducts + 0.62479763709054 * S_MntWines + 0.03593742779349 *
S_MonthsAsCustomer + 0.00825730323418 * S_NumCatalogPurchases + -0.0771083149302 *
S_NumDealsPurchases + 0.03403621221162 * S_NumDistPurchases + 0.61303946422025 *
S_NumStorePurchases + 0.27126793634053 * S_NumWebPurchases + -0.9769688424222 *
S_NumWebVisitsMonth + 0.08832170040425 * S_RFMstat + 0.13241491054212 * S_RMntFrq +
0.94872655811163 * S_Recency + 0.22002222738147 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.46328587348713 * S_AcceptedCmpTotal + -0.306946385792 * S_Age
+ -0.24247964225191 * S_Frq + -0.42968609314513 * S_Income + -0.08934431746158 * S_Kidhome +
0.15972194979558 * S_Mnt + -0.22174909818279 * S_MntFishProducts + -0.23755215058744 *
S_MntFruits + -0.124789433808 * S_MntGoldProds + 0.50040173514144 * S_MntMeatProducts +
0.02850063230459 * S_MntSweetProducts + 0.13427582671876 * S_MntWines + 0.25569886862761 *
S_MonthsAsCustomer + 0.34004201732149 * S_NumCatalogPurchases + 0.29894603062327 *
S_NumDealsPurchases + 0.07614620530875 * S_NumDistPurchases + 0.15402335009896 *
S_NumStorePurchases + 0.10615749096863 * S_NumWebPurchases + 0.41962286816879 *
S_NumWebVisitsMonth + 0.00203630873093 * S_RFMstat + 0.04736976805951 * S_RMntFrq +
-0.84751074132422 * S_Recency + 0.2189023557249 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -0.32353341757368 * S_AcceptedCmpTotal + 0.03233494925748 *
S_Age + -0.21296093282526 * S_Frq + -0.33919081075007 * S_Income + 0.08771362671573 *
S_Kidhome + -0.10797068838726 * S_Mnt + -0.19736358637985 * S_MntFishProducts +
-0.19679917231132 * S_MntFruits + 0.07502386205588 * S_MntGoldProds + -0.50948750987247 *
S_MntMeatProducts + 0.00413757018488 * S_MntSweetProducts + 0.0788538305785 * S_MntWines +
-0.02917052455021 * S_MonthsAsCustomer + -0.53933514609821 * S_NumCatalogPurchases +
0.14392502416642 * S_NumDealsPurchases + -0.10026304978633 * S_NumDistPurchases +
-0.0588453022746 * S_NumStorePurchases + 0.24799398610395 * S_NumWebPurchases +
-0.52695548549717 * S_NumWebVisitsMonth + 0.01855620452049 * S_RFMstat + -0.00189170766477 *
S_RMntFrq + 0.51841177421912 * S_Recency + 0.31491299720207 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_6 = -0.2113594539647 * S_AcceptedCmpTotal + -0.1052829531896 *
S_Age + 0.30802959734964 * S_Frq + -0.03112570586685 * S_Income + 0.19129661263247 * S_Kidhome
+ 0.00533736622639 * S_Mnt + -0.06112703732925 * S_MntFishProducts + -0.15875686512247 *
S_MntFruits + -0.08040179272112 * S_MntGoldProds + -0.14462087536907 * S_MntMeatProducts +
0.21353582706121 * S_MntSweetProducts + -0.30180630737612 * S_MntWines + -0.11825033043182 *
S_MonthsAsCustomer + -0.2917393256645 * S_NumCatalogPurchases + 0.08149600854964 *
S_NumDealsPurchases + 0.16873541613513 * S_NumDistPurchases + -0.20437343413446 *
S_NumStorePurchases + -0.1671107527288 * S_NumWebPurchases + 0.03677043100993 *
S_NumWebVisitsMonth + 0.0240516540488 * S_RFMstat + 0.06155030856383 * S_RMntFrq +
-0.28802122451372 * S_Recency + 0.06998878697307 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.33641509021082 * AcceptedCmp10 + 0.03092292109435 *
AcceptedCmp20 + -0.23551187181907 * AcceptedCmp30 + -0.06694400005185 * AcceptedCmp40 +
-0.14203506237074 * AcceptedCmp50 + -0.25866390496966 * Complain0 + 0.19505921178308 *
HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.09937599707203 * AcceptedCmp10 + 0.03831208573575 *
AcceptedCmp20 + 0.39683693019758 * AcceptedCmp30 + 0.37006277175295 * AcceptedCmp40 +
0.21293419476895 * AcceptedCmp50 + 0.15528568367473 * Complain0 + -0.30210013299822 *
HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.29891621770856 * AcceptedCmp10 + 0.64938384482014 *
AcceptedCmp20 + 0.44997242602142 * AcceptedCmp30 + 0.479093722666 * AcceptedCmp40 +
0.50957180373919 * AcceptedCmp50 + 0.27833535432461 * Complain0 + -0.20383534906723 *
HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.26872515586946 * AcceptedCmp10 + -0.24299337381911
* AcceptedCmp20 + -0.01147155911926 * AcceptedCmp30 + -0.3056041277894 * AcceptedCmp40 +
-0.05496409609003 * AcceptedCmp50 + 0.07858238173893 * Complain0 + 0.05721550070076 *
HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.14067626649899 * AcceptedCmp10 + -0.30627802828357
* AcceptedCmp20 + 0.05057942365592 * AcceptedCmp30 + -0.10378506600459 * AcceptedCmp40 +
0.07479232390108 * AcceptedCmp50 + 0.07252750671496 * Complain0 + 0.11114854035831 *
HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + -0.25806332334976 * AcceptedCmp10 + 0.03944021903138 *
AcceptedCmp20 + -0.08792206887119 * AcceptedCmp30 + -0.24631282865199 * AcceptedCmp40 +
-0.06123991538969 * AcceptedCmp50 + -0.03114784375357 * Complain0 + -0.25204544481193 *
HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.2972170984261 * Education2n_Cycle + 0.01651368568996
* EducationBasic + -0.1186055936649 * EducationGraduation + 0.0228208538951 * EducationMaster
+ -0.31045295887604 * Marital_StatusDivorced + -0.01109401001539 * Marital_StatusMarried +
0.01325135981025 * Marital_StatusSingle + 0.16609357475978 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.07095220065018 * Education2n_Cycle +
-0.23491732567608 * EducationBasic + 0.20187086452315 * EducationGraduation + 0.07524128723108
* EducationMaster + 0.02275101861599 * Marital_StatusDivorced + 0.20271548664903 *
Marital_StatusMarried + -0.12132069210718 * Marital_StatusSingle + 0.00085090729385 *
Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.02268297689573 * Education2n_Cycle +
0.06359770535369 * EducationBasic + -0.1194001280088 * EducationGraduation + 0.17299848976308
* EducationMaster + -0.4992959703281 * Marital_StatusDivorced + 0.62071659624138 *
Marital_StatusMarried + -0.21776202274494 * Marital_StatusSingle + 0.54712874598141 *
Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.17773353520266 * Education2n_Cycle +
0.17998728120628 * EducationBasic + -0.00324602612825 * EducationGraduation +
-0.22448876765089 * EducationMaster + 0.05626212670587 * Marital_StatusDivorced +
0.14353891364597 * Marital_StatusMarried + -0.29006765622997 * Marital_StatusSingle +
0.05503638282535 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + 0.06634316870499 * Education2n_Cycle +
-0.36153880127411 * EducationBasic + 0.23023144658635 * EducationGraduation +
-0.06568730318683 * EducationMaster + -0.21206913700604 * Marital_StatusDivorced +
0.58790643614629 * Marital_StatusMarried + -0.65995982578062 * Marital_StatusSingle +
0.49642503732428 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + 0.16504024096118 * Education2n_Cycle +
0.11925867171875 * EducationBasic + -0.04213907014732 * EducationGraduation +
-0.21389968555475 * EducationMaster + -0.05047370516008 * Marital_StatusDivorced +
-0.23139090963669 * Marital_StatusMarried + 0.04816197463249 * Marital_StatusSingle +
0.04977890114896 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -1.90576647346127 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.32295787429294 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.75117643107919 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 1.2336762751587 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -0.97062317465491 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = -1.15756803634408 + H1x1_6 ;
MPRINT(EM_DIAGRAM):   _EPS = SQRT(CONSTANT('MACEPS')) ;
MPRINT(EM_DIAGRAM):   _REC_EPS = 1/_EPS ;
MPRINT(EM_DIAGRAM):   DROP _REC_EPS _EPS ;
MPRINT(EM_DIAGRAM):   IF H1x1_1 < _REC_EPS AND H1x1_1 > - _REC_EPS THEN H1x1_1 = H1x1_1 *
H1x1_1 ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_1 = _REC_EPS ;
MPRINT(EM_DIAGRAM):   IF H1x1_2 < _REC_EPS AND H1x1_2 > - _REC_EPS THEN H1x1_2 = H1x1_2 *
H1x1_2 ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_2 = _REC_EPS ;
MPRINT(EM_DIAGRAM):   IF H1x1_3 < _REC_EPS AND H1x1_3 > - _REC_EPS THEN H1x1_3 = H1x1_3 *
H1x1_3 ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_3 = _REC_EPS ;
MPRINT(EM_DIAGRAM):   IF H1x1_4 < _REC_EPS AND H1x1_4 > - _REC_EPS THEN H1x1_4 = H1x1_4 *
H1x1_4 ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_4 = _REC_EPS ;
MPRINT(EM_DIAGRAM):   IF H1x1_5 < _REC_EPS AND H1x1_5 > - _REC_EPS THEN H1x1_5 = H1x1_5 *
H1x1_5 ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_5 = _REC_EPS ;
MPRINT(EM_DIAGRAM):   IF H1x1_6 < _REC_EPS AND H1x1_6 > - _REC_EPS THEN H1x1_6 = H1x1_6 *
H1x1_6 ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_6 = _REC_EPS ;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.99830813428318 * H1x1_1 + 1.33495006526712 * H1x1_2 +
-1.37942150026657 * H1x1_3 + 1.22714974922576 * H1x1_4 + 1.73375794385595 * H1x1_5 +
-0.0100306049679 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.90393999986167 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ********************************;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   ********************************;
MPRINT(EM_DIAGRAM):   drop H1x1_1 H1x1_2 H1x1_3 H1x1_4 H1x1_5 H1x1_6 ;
MPRINT(EM_DIAGRAM):   drop S_:;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural11;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural11;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   drop AutoNeural11_P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural11_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural11_P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural11_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural11;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   length AutoNeural11_WARN_ $4;
MPRINT(EM_DIAGRAM):   drop AutoNeural11_WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural11_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl36: Scoring Code of model 7 of 7;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural12;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   ***********************************;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   ***********************************;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_7 = 'Hidden: H1x1_=7' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_6 = 'Hidden: H1x2_=6' ;
MPRINT(EM_DIAGRAM):   label H1x2_7 = 'Hidden: H1x2_=7' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   Complain0 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   Complain0 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 *
MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 *
MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.08478534961354 * S_AcceptedCmpTotal + 0.21528166003219 *
S_Age + -0.16079737422774 * S_Frq + 0.04922044955183 * S_Income + 0.06245849112135 * S_Kidhome
+ -0.12820970008154 * S_Mnt + -0.00676959308959 * S_MntFishProducts + -0.20367403957375 *
S_MntFruits + -0.06459558558968 * S_MntGoldProds + 0.01557669100416 * S_MntMeatProducts +
-0.16342003924117 * S_MntSweetProducts + 0.34676276369853 * S_MntWines + -0.08454570225616 *
S_MonthsAsCustomer + -0.00318885387905 * S_NumCatalogPurchases + 0.1112677116841 *
S_NumDealsPurchases + 0.01563584187072 * S_NumDistPurchases + 0.19193969522995 *
S_NumStorePurchases + 0.3133556199984 * S_NumWebPurchases + -0.21884874785716 *
S_NumWebVisitsMonth + 0.08478875792216 * S_RFMstat + 0.05964414665285 * S_RMntFrq +
-0.12595000497726 * S_Recency + -0.1238719414537 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.20807487357943 * S_AcceptedCmpTotal + -0.27223051908987 *
S_Age + 0.28649391533674 * S_Frq + 0.46493719675068 * S_Income + 0.10180542910079 * S_Kidhome
+ -0.19573056673819 * S_Mnt + -0.05332725327514 * S_MntFishProducts + -0.28610692329433 *
S_MntFruits + -0.13417237194849 * S_MntGoldProds + 0.45697707494335 * S_MntMeatProducts +
-0.28280545785477 * S_MntSweetProducts + -0.13234920069688 * S_MntWines + -0.2710938018651 *
S_MonthsAsCustomer + 0.31174284041905 * S_NumCatalogPurchases + 0.30225032753275 *
S_NumDealsPurchases + 0.33833359923595 * S_NumDistPurchases + -0.20255599575849 *
S_NumStorePurchases + -0.12040071168942 * S_NumWebPurchases + -0.12407090307061 *
S_NumWebVisitsMonth + -0.05688936259515 * S_RFMstat + 0.15514736649245 * S_RMntFrq +
0.00838555462657 * S_Recency + 0.04609426861136 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.30541463116928 * S_AcceptedCmpTotal + -0.01746117216025 *
S_Age + -0.44156473334329 * S_Frq + -0.51952426304193 * S_Income + 0.20419921255777 *
S_Kidhome + -0.18174316707953 * S_Mnt + -0.03813675536406 * S_MntFishProducts +
-0.0959023413712 * S_MntFruits + 0.12724081783278 * S_MntGoldProds + -0.07639148541426 *
S_MntMeatProducts + -0.0797214413833 * S_MntSweetProducts + -0.57705931875808 * S_MntWines +
-0.12638551201991 * S_MonthsAsCustomer + -0.21854676704549 * S_NumCatalogPurchases +
0.16792903091627 * S_NumDealsPurchases + -0.37408945626745 * S_NumDistPurchases +
-0.18067262995566 * S_NumStorePurchases + 0.21192146789881 * S_NumWebPurchases +
-0.23547702310669 * S_NumWebVisitsMonth + -0.02272089758813 * S_RFMstat + -0.16409330281075 *
S_RMntFrq + 0.45021846112946 * S_Recency + 0.32988735727394 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.05205198916717 * S_AcceptedCmpTotal + 0.25568653619739 *
S_Age + -0.31037252146959 * S_Frq + 0.42636025358982 * S_Income + -0.24453708980866 *
S_Kidhome + -0.07832530945892 * S_Mnt + -0.48332124476182 * S_MntFishProducts +
-0.13932879119138 * S_MntFruits + 0.1984121566988 * S_MntGoldProds + 1.14965897015972 *
S_MntMeatProducts + 0.07027485457428 * S_MntSweetProducts + -0.56598097754046 * S_MntWines +
0.07317190938075 * S_MonthsAsCustomer + 0.075756987983 * S_NumCatalogPurchases +
0.29407429399136 * S_NumDealsPurchases + 0.01610745252195 * S_NumDistPurchases +
-0.17767939085628 * S_NumStorePurchases + -0.15168958538637 * S_NumWebPurchases +
0.17433622143988 * S_NumWebVisitsMonth + 0.11635602973993 * S_RFMstat + 0.32632751843433 *
S_RMntFrq + -0.24758483374458 * S_Recency + -0.31468291567479 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -0.59657492903543 * S_AcceptedCmpTotal + 0.23513672763458 *
S_Age + -0.14882104210954 * S_Frq + -0.07762660201035 * S_Income + 0.01424651904783 *
S_Kidhome + 0.18748607813081 * S_Mnt + 0.11088464897095 * S_MntFishProducts +
-0.10064450211557 * S_MntFruits + 0.11161391354421 * S_MntGoldProds + -1.36345407290644 *
S_MntMeatProducts + 0.04868729717044 * S_MntSweetProducts + 0.80284342329654 * S_MntWines +
-0.0179539622492 * S_MonthsAsCustomer + -0.60051908798715 * S_NumCatalogPurchases +
-0.37976451362108 * S_NumDealsPurchases + -0.17027731520801 * S_NumDistPurchases +
0.59849493667087 * S_NumStorePurchases + 0.65481480560301 * S_NumWebPurchases +
-0.68253224576609 * S_NumWebVisitsMonth + -0.16723490165629 * S_RFMstat + -0.10533797887644 *
S_RMntFrq + 0.81382723915873 * S_Recency + 0.06049401205856 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_6 = -0.07547841798202 * S_AcceptedCmpTotal + 0.22445278254589 *
S_Age + -0.26357481075143 * S_Frq + 0.06894154144261 * S_Income + 0.20713236126681 * S_Kidhome
+ -0.14103612934526 * S_Mnt + 0.36334508557452 * S_MntFishProducts + -0.20862425337296 *
S_MntFruits + -0.29089690099273 * S_MntGoldProds + 0.11336893090527 * S_MntMeatProducts +
-0.13547374281924 * S_MntSweetProducts + 0.02228828195539 * S_MntWines + -0.19257650420334 *
S_MonthsAsCustomer + 0.1365526319824 * S_NumCatalogPurchases + -0.07686699131623 *
S_NumDealsPurchases + -0.07220460738926 * S_NumDistPurchases + -0.06554027468389 *
S_NumStorePurchases + 0.10422838158001 * S_NumWebPurchases + -0.03858550147892 *
S_NumWebVisitsMonth + -0.06397448441373 * S_RFMstat + 0.21747838287147 * S_RMntFrq +
0.24839313159913 * S_Recency + -0.06317317698653 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_7 = -0.08604903695444 * S_AcceptedCmpTotal + -0.14807437541992 *
S_Age + 0.01466157584549 * S_Frq + -0.09883966180507 * S_Income + 0.51992566778352 * S_Kidhome
+ 0.29795006703636 * S_Mnt + -0.08922020500011 * S_MntFishProducts + 0.19836834402079 *
S_MntFruits + -0.11292241468378 * S_MntGoldProds + 0.584464452194 * S_MntMeatProducts +
0.22625326024073 * S_MntSweetProducts + 0.24074129944382 * S_MntWines + 0.13538906557527 *
S_MonthsAsCustomer + -0.01228250248922 * S_NumCatalogPurchases + -0.07920122387563 *
S_NumDealsPurchases + 0.3649244061347 * S_NumDistPurchases + 0.36475853688403 *
S_NumStorePurchases + 0.02153991404063 * S_NumWebPurchases + -0.94080669139388 *
S_NumWebVisitsMonth + 0.24853677977494 * S_RFMstat + 0.37015183933951 * S_RMntFrq +
0.6724157721663 * S_Recency + 0.1615471643866 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.04431608362128 * AcceptedCmp10 + 0.145592087795 *
AcceptedCmp20 + -0.18972867139938 * AcceptedCmp30 + 0.11297731320888 * AcceptedCmp40 +
0.15203974410995 * AcceptedCmp50 + 0.05130421316428 * Complain0 + 0.33576036450343 *
HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.05495742609855 * AcceptedCmp10 + -0.08873650760176
* AcceptedCmp20 + -0.16380549867313 * AcceptedCmp30 + -0.24495261884932 * AcceptedCmp40 +
-0.22199506896148 * AcceptedCmp50 + 0.149484615172 * Complain0 + 0.01091791142552 *
HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.03473702421341 * AcceptedCmp10 + -0.11226718065217 *
AcceptedCmp20 + 0.19024579384296 * AcceptedCmp30 + 0.15478548865598 * AcceptedCmp40 +
0.15222823671897 * AcceptedCmp50 + 0.07713012834947 * Complain0 + -0.18741708707661 *
HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.25622127302429 * AcceptedCmp10 + -0.39059103518073
* AcceptedCmp20 + -0.29716603631807 * AcceptedCmp30 + -0.20875694971526 * AcceptedCmp40 +
-0.35128787139073 * AcceptedCmp50 + -0.28848733462386 * Complain0 + 0.4276503747649 *
HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.06574875851088 * AcceptedCmp10 + -0.27375195259265
* AcceptedCmp20 + -0.2740681662293 * AcceptedCmp30 + -0.14697156898736 * AcceptedCmp40 +
0.17684649468835 * AcceptedCmp50 + -0.09979172944646 * Complain0 + 0.38986664202197 *
HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + 0.08696678529441 * AcceptedCmp10 + 0.09467543942215 *
AcceptedCmp20 + 0.04586779705477 * AcceptedCmp30 + -0.12591921836379 * AcceptedCmp40 +
0.20150138392895 * AcceptedCmp50 + 0.27764282700214 * Complain0 + 0.13985738522066 *
HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_7 = H1x1_7 + -0.10455069401218 * AcceptedCmp10 + 0.1311831941372 *
AcceptedCmp20 + 0.17844209104604 * AcceptedCmp30 + 0.19406707592815 * AcceptedCmp40 +
-0.00068155012319 * AcceptedCmp50 + 0.13245364846536 * Complain0 + -0.05165256160872 *
HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.28967939808759 * Education2n_Cycle +
-0.15795056374781 * EducationBasic + -0.00649803471307 * EducationGraduation +
0.19520715924532 * EducationMaster + 0.07744097241553 * Marital_StatusDivorced +
-0.0247463100385 * Marital_StatusMarried + 0.05804915234573 * Marital_StatusSingle +
-0.08320125047871 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.12524444422085 * Education2n_Cycle +
-0.30278286924729 * EducationBasic + 0.37480827366421 * EducationGraduation + 0.34209136290694
* EducationMaster + 0.01390668926269 * Marital_StatusDivorced + 0.01136282152074 *
Marital_StatusMarried + 0.12450246418789 * Marital_StatusSingle + -0.1576148519872 *
Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.14589041643593 * Education2n_Cycle +
-0.15691118816463 * EducationBasic + 0.1993616073183 * EducationGraduation + 0.02862010255145
* EducationMaster + -0.19133456931879 * Marital_StatusDivorced + 0.56263566654996 *
Marital_StatusMarried + -0.42172822038882 * Marital_StatusSingle + 0.42023140643292 *
Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + 0.10038585978656 * Education2n_Cycle +
-0.11388609002984 * EducationBasic + -0.14980553500983 * EducationGraduation +
-0.07646595330369 * EducationMaster + -0.19871205065609 * Marital_StatusDivorced +
-0.14730795681603 * Marital_StatusMarried + 0.05055432510362 * Marital_StatusSingle +
0.06558965292395 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + 0.0015835307855 * Education2n_Cycle +
-0.22658746797638 * EducationBasic + -0.03445982386977 * EducationGraduation +
0.11375378192685 * EducationMaster + -0.35623807358995 * Marital_StatusDivorced +
0.30324726283965 * Marital_StatusMarried + -0.18561093467927 * Marital_StatusSingle +
0.395424582152 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + -0.23751822587858 * Education2n_Cycle +
-0.01687300040825 * EducationBasic + 0.23236967703011 * EducationGraduation + 0.0725289831541
* EducationMaster + 0.11581014663368 * Marital_StatusDivorced + -0.31070638037659 *
Marital_StatusMarried + 0.17131747253949 * Marital_StatusSingle + -0.19314955966476 *
Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_7 = H1x1_7 + 0.00103693282479 * Education2n_Cycle +
0.12608909598752 * EducationBasic + -0.2366673091666 * EducationGraduation + 0.24413217290922
* EducationMaster + -0.42450599871892 * Marital_StatusDivorced + 0.48162905075885 *
Marital_StatusMarried + -0.26618507749283 * Marital_StatusSingle + 0.38053668740338 *
Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.12149136705075 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.97489696657001 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.70605220802968 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -1.07783206982379 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -1.00400706261511 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = 0.22600488314839 + H1x1_6 ;
MPRINT(EM_DIAGRAM):   H1x1_7 = 1.55642446968077 + H1x1_7 ;
MPRINT(EM_DIAGRAM):   _EPS = SQRT(CONSTANT('MACEPS')) ;
MPRINT(EM_DIAGRAM):   _REC_EPS = 1/_EPS ;
MPRINT(EM_DIAGRAM):   DROP _REC_EPS _EPS ;
MPRINT(EM_DIAGRAM):   IF H1x1_1 < _REC_EPS AND H1x1_1 > - _REC_EPS THEN H1x1_1 = H1x1_1 *
H1x1_1 ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_1 = _REC_EPS ;
MPRINT(EM_DIAGRAM):   IF H1x1_2 < _REC_EPS AND H1x1_2 > - _REC_EPS THEN H1x1_2 = H1x1_2 *
H1x1_2 ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_2 = _REC_EPS ;
MPRINT(EM_DIAGRAM):   IF H1x1_3 < _REC_EPS AND H1x1_3 > - _REC_EPS THEN H1x1_3 = H1x1_3 *
H1x1_3 ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_3 = _REC_EPS ;
MPRINT(EM_DIAGRAM):   IF H1x1_4 < _REC_EPS AND H1x1_4 > - _REC_EPS THEN H1x1_4 = H1x1_4 *
H1x1_4 ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_4 = _REC_EPS ;
MPRINT(EM_DIAGRAM):   IF H1x1_5 < _REC_EPS AND H1x1_5 > - _REC_EPS THEN H1x1_5 = H1x1_5 *
H1x1_5 ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_5 = _REC_EPS ;
MPRINT(EM_DIAGRAM):   IF H1x1_6 < _REC_EPS AND H1x1_6 > - _REC_EPS THEN H1x1_6 = H1x1_6 *
H1x1_6 ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_6 = _REC_EPS ;
MPRINT(EM_DIAGRAM):   IF H1x1_7 < _REC_EPS AND H1x1_7 > - _REC_EPS THEN H1x1_7 = H1x1_7 *
H1x1_7 ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_7 = _REC_EPS ;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
MPRINT(EM_DIAGRAM):   H1x1_7 = .;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   H1x2_1 = -1.36226288448745 * S_AcceptedCmpTotal + -1.3328616352886 *
S_Age + 1.25346137866034 * S_Frq + -1.21746243786295 * S_Income + 2.83911738158074 * S_Kidhome
+ -0.60784009102409 * S_Mnt + 1.57752173634223 * S_MntFishProducts + -0.26776567401075 *
S_MntFruits + 1.09584731081081 * S_MntGoldProds + 1.22333044103532 * S_MntMeatProducts +
0.42827942745016 * S_MntSweetProducts + 0.67813472792448 * S_MntWines + 0.56816492004798 *
S_MonthsAsCustomer + 0.58113470399079 * S_NumCatalogPurchases + 1.96719021971894 *
S_NumDealsPurchases + -0.44535354794671 * S_NumDistPurchases + -0.54827762736866 *
S_NumStorePurchases + 1.02703310241897 * S_NumWebPurchases + -0.12526997502601 *
S_NumWebVisitsMonth + -0.55803926383776 * S_RFMstat + 0.01819380776809 * S_RMntFrq +
0.651688575044 * S_Recency + 1.58682398186611 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -0.38064507857029 * S_AcceptedCmpTotal + -0.49661801158351 *
S_Age + -0.89589399799916 * S_Frq + -0.0121499288597 * S_Income + -0.48023022827846 *
S_Kidhome + -0.5183846206029 * S_Mnt + -3.13913899012334 * S_MntFishProducts +
-2.07291335687615 * S_MntFruits + 0.51019753905662 * S_MntGoldProds + 0.11458666377917 *
S_MntMeatProducts + -1.8499241966205 * S_MntSweetProducts + 0.23160544044172 * S_MntWines +
-0.48210626907943 * S_MonthsAsCustomer + 0.15500845227752 * S_NumCatalogPurchases +
1.34659447971131 * S_NumDealsPurchases + -0.51624251310423 * S_NumDistPurchases +
-1.283121574848 * S_NumStorePurchases + -1.83517806228926 * S_NumWebPurchases +
0.51321339475285 * S_NumWebVisitsMonth + -1.86431704283342 * S_RFMstat + -1.52065204326569 *
S_RMntFrq + -0.33186055095462 * S_Recency + -0.49524729407054 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.75774003934728 * S_AcceptedCmpTotal + -0.85312030825337 *
S_Age + -0.01726294458221 * S_Frq + 0.58598267983786 * S_Income + 1.30497766805554 * S_Kidhome
+ -0.84214135491022 * S_Mnt + 0.55305862453787 * S_MntFishProducts + 0.6488663613899 *
S_MntFruits + -0.83189439197558 * S_MntGoldProds + -0.07500050412653 * S_MntMeatProducts +
-0.06401928810253 * S_MntSweetProducts + 0.5940135658334 * S_MntWines + -0.04573352455984 *
S_MonthsAsCustomer + -1.53610650634069 * S_NumCatalogPurchases + 0.67492297345004 *
S_NumDealsPurchases + -0.40437875375926 * S_NumDistPurchases + 0.36322603681545 *
S_NumStorePurchases + -1.15315070635524 * S_NumWebPurchases + 1.20707272201156 *
S_NumWebVisitsMonth + 0.12192566357285 * S_RFMstat + -0.46711219170047 * S_RMntFrq +
1.89703582493259 * S_Recency + 1.07511942237188 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 0.62123819069495 * S_AcceptedCmpTotal + 0.03399237520702 *
S_Age + -0.01971421795338 * S_Frq + -0.54728266919056 * S_Income + -0.4634195771237 *
S_Kidhome + -1.19055247712911 * S_Mnt + 1.4307770729159 * S_MntFishProducts +
-0.83895281276374 * S_MntFruits + -0.48578798244317 * S_MntGoldProds + -0.2846617807101 *
S_MntMeatProducts + 0.70721686533987 * S_MntSweetProducts + 1.32824513551741 * S_MntWines +
-0.62654342755965 * S_MonthsAsCustomer + -0.97245161056543 * S_NumCatalogPurchases +
-0.41427983342148 * S_NumDealsPurchases + -0.22714305629205 * S_NumDistPurchases +
-0.78763182048862 * S_NumStorePurchases + -0.26669253451501 * S_NumWebPurchases +
-0.79601078616342 * S_NumWebVisitsMonth + -0.03863278696502 * S_RFMstat + 0.95011556103056 *
S_RMntFrq + 0.57184629262878 * S_Recency + -0.21560478702461 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 1.47906557745075 * S_AcceptedCmpTotal + -0.31060566334198 *
S_Age + 0.56472424389718 * S_Frq + 2.16541682726249 * S_Income + -0.34119803841059 * S_Kidhome
+ -0.53783050542796 * S_Mnt + 0.54954821448236 * S_MntFishProducts + -0.48449918837838 *
S_MntFruits + 0.29783052620672 * S_MntGoldProds + -0.15068954343013 * S_MntMeatProducts +
0.12733251381761 * S_MntSweetProducts + -2.46709166794296 * S_MntWines + -1.2011286508879 *
S_MonthsAsCustomer + -0.88194814936932 * S_NumCatalogPurchases + 0.7697882092212 *
S_NumDealsPurchases + 0.51864835453056 * S_NumDistPurchases + -1.18320366630444 *
S_NumStorePurchases + -0.6608394639529 * S_NumWebPurchases + -0.03948137707769 *
S_NumWebVisitsMonth + 1.01076462488608 * S_RFMstat + -0.91562280329354 * S_RMntFrq +
-1.07576669501238 * S_Recency + -0.5946628412106 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_6 = 0.42130900994246 * S_AcceptedCmpTotal + 1.64256522546546 *
S_Age + -0.31822237495441 * S_Frq + 0.39698710846967 * S_Income + -1.30075584525681 *
S_Kidhome + -1.74733472316294 * S_Mnt + -1.04423575539078 * S_MntFishProducts +
0.28025913700744 * S_MntFruits + 0.92062413073229 * S_MntGoldProds + 0.38487452173084 *
S_MntMeatProducts + 2.15808673418264 * S_MntSweetProducts + -0.5364274323591 * S_MntWines +
0.64447858852609 * S_MonthsAsCustomer + 0.33683873873337 * S_NumCatalogPurchases +
1.45707983202269 * S_NumDealsPurchases + 0.83341887728641 * S_NumDistPurchases +
-0.36664450469423 * S_NumStorePurchases + 0.63911579043339 * S_NumWebPurchases +
0.67144790303554 * S_NumWebVisitsMonth + -0.22124390112376 * S_RFMstat + 1.72222071547971 *
S_RMntFrq + -0.02323382627271 * S_Recency + -0.09494567508522 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_7 = 0.0903330772553 * S_AcceptedCmpTotal + 0.13217959089196 * S_Age
+ 0.93600629225871 * S_Frq + 1.23765169211392 * S_Income + 1.27732984858098 * S_Kidhome +
1.54889765360944 * S_Mnt + 0.84618173514761 * S_MntFishProducts + -0.32044356786958 *
S_MntFruits + -0.26357995597029 * S_MntGoldProds + 0.53649229087334 * S_MntMeatProducts +
1.46955866272889 * S_MntSweetProducts + -0.34260315437319 * S_MntWines + -1.70693604004836 *
S_MonthsAsCustomer + -0.4612555130737 * S_NumCatalogPurchases + 0.68491896063662 *
S_NumDealsPurchases + 0.5386312048592 * S_NumDistPurchases + 1.28108942503912 *
S_NumStorePurchases + -0.88282270505969 * S_NumWebPurchases + -0.66670958211416 *
S_NumWebVisitsMonth + 0.94315921733739 * S_RFMstat + 0.70533705858561 * S_RMntFrq +
0.23896687873405 * S_Recency + 0.66289635918858 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 0.22958861848016 * AcceptedCmp10 + -1.11069938765475 *
AcceptedCmp20 + 1.18563222829069 * AcceptedCmp30 + -0.97028253571173 * AcceptedCmp40 +
0.60850082670391 * AcceptedCmp50 + 0.31163990605418 * Complain0 + 1.10957053966326 *
HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -0.99409862826118 * AcceptedCmp10 + -0.76360093699992
* AcceptedCmp20 + 0.82772534103696 * AcceptedCmp30 + 1.74232000787449 * AcceptedCmp40 +
-1.37356239255127 * AcceptedCmp50 + 0.0919811154199 * Complain0 + -0.00220513515877 *
HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + -0.21003647134105 * AcceptedCmp10 + -0.08930317176477
* AcceptedCmp20 + -0.39109673162041 * AcceptedCmp30 + 1.14094450038946 * AcceptedCmp40 +
1.26041997788848 * AcceptedCmp50 + -0.10972130900569 * Complain0 + -0.99352598480407 *
HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 2.02630284432093 * AcceptedCmp10 + -2.50721904229276 *
AcceptedCmp20 + -1.31026450397446 * AcceptedCmp30 + -0.83440880266914 * AcceptedCmp40 +
-0.0570899805015 * AcceptedCmp50 + -0.55525351434733 * Complain0 + 0.27306601694081 *
HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + -0.18595284227194 * AcceptedCmp10 + -1.55973916517392
* AcceptedCmp20 + -3.81563768970049 * AcceptedCmp30 + -0.09331430915239 * AcceptedCmp40 +
0.76128118177142 * AcceptedCmp50 + -0.17283107047755 * Complain0 + -1.01028562804392 *
HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 + -1.21475169836565 * AcceptedCmp10 + 0.28748729216575 *
AcceptedCmp20 + 1.15908030413172 * AcceptedCmp30 + -0.05889528676549 * AcceptedCmp40 +
-0.41661363625562 * AcceptedCmp50 + -0.77939130028952 * Complain0 + 2.19510865765326 *
HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_7 = H1x2_7 + 0.87360423179644 * AcceptedCmp10 + -0.47867594186426 *
AcceptedCmp20 + -0.30325818223392 * AcceptedCmp30 + -0.96085556588297 * AcceptedCmp40 +
-0.19693158209969 * AcceptedCmp50 + -0.73731792634553 * Complain0 + -1.10021678806679 *
HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -1.17876013389516 * Education2n_Cycle +
-0.35670434275624 * EducationBasic + -0.12456502068616 * EducationGraduation +
-1.0620373133508 * EducationMaster + -3.97961426831865 * Marital_StatusDivorced +
0.00932639813867 * Marital_StatusMarried + 1.29310186574718 * Marital_StatusSingle +
1.60940802221114 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 0.58497813059595 * Education2n_Cycle +
0.98038586431321 * EducationBasic + -0.20442806724521 * EducationGraduation + 0.64973046142001
* EducationMaster + -0.30358516578188 * Marital_StatusDivorced + -0.96176709360703 *
Marital_StatusMarried + 1.26977690921649 * Marital_StatusSingle + -0.6681544336237 *
Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 0.42123479646947 * Education2n_Cycle +
0.22705854674045 * EducationBasic + 0.34794003687348 * EducationGraduation + 0.18356390207843
* EducationMaster + 0.55272671490757 * Marital_StatusDivorced + 0.1499239288334 *
Marital_StatusMarried + -0.46840941760604 * Marital_StatusSingle + 0.93706218273755 *
Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 0.85035585831723 * Education2n_Cycle +
-0.70680576286167 * EducationBasic + -0.24487676912938 * EducationGraduation +
-0.33030970028481 * EducationMaster + -1.240735370138 * Marital_StatusDivorced +
-1.20089294883599 * Marital_StatusMarried + 0.57492674426149 * Marital_StatusSingle +
1.44189292990255 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + -0.62461434654579 * Education2n_Cycle +
-0.34090423965869 * EducationBasic + -0.82493401834396 * EducationGraduation +
-1.09423426649553 * EducationMaster + 1.05435442049802 * Marital_StatusDivorced +
0.3571256349717 * Marital_StatusMarried + -0.44741267266578 * Marital_StatusSingle +
0.02948931507994 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 + 0.09620501635178 * Education2n_Cycle +
-0.54617424401993 * EducationBasic + -0.43305038404558 * EducationGraduation +
0.05453229059502 * EducationMaster + 2.06026721980778 * Marital_StatusDivorced +
-0.49583258645166 * Marital_StatusMarried + -1.14824900824474 * Marital_StatusSingle +
0.57690093967839 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_7 = H1x2_7 + -0.31251046777442 * Education2n_Cycle +
-1.69272922870259 * EducationBasic + -0.08682253496961 * EducationGraduation +
0.58241644186309 * EducationMaster + -1.1890908607447 * Marital_StatusDivorced +
-0.46668809907123 * Marital_StatusMarried + 1.20342564763422 * Marital_StatusSingle +
-1.75740662969578 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -0.14973719401763 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -0.56259582407931 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = 0.42132483186492 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 1.1996209421335 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 0.95827018478011 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_6 = 1.88844492435344 + H1x2_6 ;
MPRINT(EM_DIAGRAM):   H1x2_7 = 0.77184516675485 + H1x2_7 ;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   H1x2_1 = EXP(MIN(H1x2_1 , _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x2_2 = EXP(MIN(H1x2_2 , _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x2_3 = EXP(MIN(H1x2_3 , _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x2_4 = EXP(MIN(H1x2_4 , _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x2_5 = EXP(MIN(H1x2_5 , _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x2_6 = EXP(MIN(H1x2_6 , _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x2_7 = EXP(MIN(H1x2_7 , _EXP_BAR));
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
MPRINT(EM_DIAGRAM):   H1x2_6 = .;
MPRINT(EM_DIAGRAM):   H1x2_7 = .;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.10431866610268 * H1x1_1 + -0.48100701431081 * H1x1_2 +
1.1561061025832 * H1x1_3 + -1.23928879501664 * H1x1_4 + 1.22057275321508 * H1x1_5 +
0.21972347471711 * H1x1_6 + -0.98998788335495 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 + -4.9985478923183E-10 * H1x2_1 +
2.7724573038604E-6 * H1x2_2 + -3.3263781208921E-6 * H1x2_3 + 1.90169432265E-8 * H1x2_4 +
-9.7460294571708E-9 * H1x2_5 + -2.0885179583168E-6 * H1x2_6 + 3.038660449943E-8 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.34500119066237 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ********************************;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   ********************************;
MPRINT(EM_DIAGRAM):   drop H1x1_1 H1x1_2 H1x1_3 H1x1_4 H1x1_5 H1x1_6 H1x1_7 H1x2_1 H1x2_2
H1x2_3 H1x2_4 H1x2_5 H1x2_6 H1x2_7 ;
MPRINT(EM_DIAGRAM):   drop S_:;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural12;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural12;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   drop AutoNeural12_P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural12_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural12_P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural12_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural12;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   length AutoNeural12_WARN_ $4;
MPRINT(EM_DIAGRAM):   drop AutoNeural12_WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural12_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl36: Average Posteriors of 7 models;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   P_DepVar1 = ( AutoNeural6_P_DepVar1 + AutoNeural7_P_DepVar1 +
AutoNeural8_P_DepVar1 + AutoNeural10_P_DepVar1 + AutoNeural9_P_DepVar1 +
AutoNeural11_P_DepVar1 + AutoNeural12_P_DepVar1 )/7;
MPRINT(EM_DIAGRAM):   P_DepVar0 = ( AutoNeural6_P_DepVar0 + AutoNeural7_P_DepVar0 +
AutoNeural8_P_DepVar0 + AutoNeural10_P_DepVar0 + AutoNeural9_P_DepVar0 +
AutoNeural11_P_DepVar0 + AutoNeural12_P_DepVar0 )/7;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl36: Computing Classification Vars;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   length I_DepVar $32;
WARNING: Length of character variable I_DepVar has already been set.
         Use the LENGTH statement as the very first statement in the DATA STEP to declare the
         length of a character variable.
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar';
MPRINT(EM_DIAGRAM):   length _format $200;
MPRINT(EM_DIAGRAM):   drop _format;
MPRINT(EM_DIAGRAM):   _format= ' ';
MPRINT(EM_DIAGRAM):   _p_= 0;
MPRINT(EM_DIAGRAM):   drop _p_;
MPRINT(EM_DIAGRAM):   if P_DepVar1 > _p_ then do;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar1;
MPRINT(EM_DIAGRAM):   _format= '1';
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if P_DepVar0 > _p_ then do;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar0;
MPRINT(EM_DIAGRAM):   _format= '0';
MPRINT(EM_DIAGRAM):   end;
MPRINT(DMNORMCP):   I_DepVar=dmnorm(_format,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl36: Producing Unformatted variable;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   label U_DepVar = "Unnormalized Into: DepVar";
MPRINT(EM_DIAGRAM):   if I_DepVar = '1' then U_DepVar = 1;
MPRINT(EM_DIAGRAM):   else if I_DepVar = '0' then U_DepVar = 0;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl36: Computing _WARN_ Variable;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings';
MPRINT(EM_DIAGRAM):   _WARN_ = '';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL6_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL6_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL6_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL6_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL7_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL7_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL7_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL7_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL8_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL8_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL8_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL8_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL10_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL10_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL10_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL10_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL9_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL9_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL9_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL9_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL11_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL11_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL11_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL11_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL12_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL12_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL12_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL12_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TOOL: Score Node;
MPRINT(EM_DIAGRAM):   * TYPE: ASSESS;
MPRINT(EM_DIAGRAM):   * NODE: Score;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Score: Creating Fixed Names;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   LABEL EM_EVENTPROBABILITY = 'Probability for level 1 of DepVar';
MPRINT(EM_DIAGRAM):   EM_EVENTPROBABILITY = P_DepVar1;
MPRINT(EM_DIAGRAM):   LABEL EM_PROBABILITY = 'Probability of Classification';
MPRINT(EM_DIAGRAM):   EM_PROBABILITY = max( P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   LENGTH EM_CLASSIFICATION
MPRINT(DMNORLEN):   $32
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   LABEL EM_CLASSIFICATION = "Prediction for DepVar";
MPRINT(EM_DIAGRAM):   EM_CLASSIFICATION = I_DepVar;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "20. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "17.40 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                20. April 2016
Time:                17.40 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O213HGVO
"C:\\predictive-models-project\Workspaces\EMWS8\Score\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O213HGVO new;
MPRINT(EM_DIAGRAM):   run;
2530215    filename emflow
2530215  ! "C:\\predictive-models-project\Workspaces\EMWS8\Score\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow
"C:\\predictive-models-project\Workspaces\EMWS8\Score\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Score: Scoring DATA data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2530216    *------------------------------------------------------------*;
2530217    * Score: Scoring DATA data;
2530218    *------------------------------------------------------------*;
2530219    data EMWS8.Score_TRAIN
2530220    / view=EMWS8.Score_TRAIN
2530221    ;
MPRINT(EM_DIAGRAM):   data EMWS8.Score_TRAIN / view=EMWS8.Score_TRAIN ;
2530222    set EMWS8.Ensmbl36_TRAIN
2530223    ;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl36_TRAIN ;
2530224    %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file
      C:\\predictive-models-project\Workspaces\EMWS8\Score\EMFLOWSCORE.sas.
2530225   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2530226   +* Score: Creating Fixed Names;
MPRINT(EM_DIAGRAM):   * Score: Creating Fixed Names;
2530227   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2530228   +LABEL EM_EVENTPROBABILITY = 'Probability for level 1 of DepVar';
MPRINT(EM_DIAGRAM):   LABEL EM_EVENTPROBABILITY = 'Probability for level 1 of DepVar';
2530229   +EM_EVENTPROBABILITY = P_DepVar1;
MPRINT(EM_DIAGRAM):   EM_EVENTPROBABILITY = P_DepVar1;
2530230   +LABEL EM_PROBABILITY = 'Probability of Classification';
MPRINT(EM_DIAGRAM):   LABEL EM_PROBABILITY = 'Probability of Classification';
2530231   +EM_PROBABILITY =
2530232   +max(
2530233   +P_DepVar1
2530234   +,
2530235   +P_DepVar0
2530236   +);
MPRINT(EM_DIAGRAM):   EM_PROBABILITY = max( P_DepVar1 , P_DepVar0 );
2530237   +LENGTH EM_CLASSIFICATION $%dmnorlen;
MPRINT(EM_DIAGRAM):   LENGTH EM_CLASSIFICATION
MPRINT(DMNORLEN):   $32
MPRINT(EM_DIAGRAM):  ;
2530238   +LABEL EM_CLASSIFICATION = "Prediction for DepVar";
MPRINT(EM_DIAGRAM):   LABEL EM_CLASSIFICATION = "Prediction for DepVar";
2530239   +EM_CLASSIFICATION = I_DepVar;
MPRINT(EM_DIAGRAM):   EM_CLASSIFICATION = I_DepVar;
2530240   +LABEL EM_CLASSTARGET = 'Target Variable: DepVar';
MPRINT(EM_DIAGRAM):   LABEL EM_CLASSTARGET = 'Target Variable: DepVar';
2530241   +EM_CLASSTARGET = F_DepVar;
MPRINT(EM_DIAGRAM):   EM_CLASSTARGET = F_DepVar;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2530242    run;
 
NOTE: DATA STEP view saved on file EMWS8.SCORE_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.ENSMBL36_TRAIN.VIEW used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.07 seconds
      cpu time            0.07 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
2530243    quit;
2530244    filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
2530245    filename emflow
2530245  ! "C:\\predictive-models-project\Workspaces\EMWS8\Score\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow
"C:\\predictive-models-project\Workspaces\EMWS8\Score\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Score: Scoring VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2530246    *------------------------------------------------------------*;
2530247    * Score: Scoring VALIDATE data;
2530248    *------------------------------------------------------------*;
2530249    data EMWS8.Score_VALIDATE
2530250    / view=EMWS8.Score_VALIDATE
2530251    ;
MPRINT(EM_DIAGRAM):   data EMWS8.Score_VALIDATE / view=EMWS8.Score_VALIDATE ;
2530252    set EMWS8.Ensmbl36_VALIDATE
2530253    ;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl36_VALIDATE ;
2530254    %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file
      C:\\predictive-models-project\Workspaces\EMWS8\Score\EMFLOWSCORE.sas.
2530255   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2530256   +* Score: Creating Fixed Names;
MPRINT(EM_DIAGRAM):   * Score: Creating Fixed Names;
2530257   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2530258   +LABEL EM_EVENTPROBABILITY = 'Probability for level 1 of DepVar';
MPRINT(EM_DIAGRAM):   LABEL EM_EVENTPROBABILITY = 'Probability for level 1 of DepVar';
2530259   +EM_EVENTPROBABILITY = P_DepVar1;
MPRINT(EM_DIAGRAM):   EM_EVENTPROBABILITY = P_DepVar1;
2530260   +LABEL EM_PROBABILITY = 'Probability of Classification';
MPRINT(EM_DIAGRAM):   LABEL EM_PROBABILITY = 'Probability of Classification';
2530261   +EM_PROBABILITY =
2530262   +max(
2530263   +P_DepVar1
2530264   +,
2530265   +P_DepVar0
2530266   +);
MPRINT(EM_DIAGRAM):   EM_PROBABILITY = max( P_DepVar1 , P_DepVar0 );
2530267   +LENGTH EM_CLASSIFICATION $%dmnorlen;
MPRINT(EM_DIAGRAM):   LENGTH EM_CLASSIFICATION
MPRINT(DMNORLEN):   $32
MPRINT(EM_DIAGRAM):  ;
2530268   +LABEL EM_CLASSIFICATION = "Prediction for DepVar";
MPRINT(EM_DIAGRAM):   LABEL EM_CLASSIFICATION = "Prediction for DepVar";
2530269   +EM_CLASSIFICATION = I_DepVar;
MPRINT(EM_DIAGRAM):   EM_CLASSIFICATION = I_DepVar;
2530270   +LABEL EM_CLASSTARGET = 'Target Variable: DepVar';
MPRINT(EM_DIAGRAM):   LABEL EM_CLASSTARGET = 'Target Variable: DepVar';
2530271   +EM_CLASSTARGET = F_DepVar;
MPRINT(EM_DIAGRAM):   EM_CLASSTARGET = F_DepVar;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2530272    run;
 
NOTE: DATA STEP view saved on file EMWS8.SCORE_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.ENSMBL36_VALIDATE.VIEW used (Total process time):
      real time           0.06 seconds
      cpu time            0.07 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.07 seconds
      cpu time            0.07 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
2530273    quit;
2530274    filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
2530275    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
2530276    * Score: Creating Publish Score Variables Table;
MPRINT(EM_DIAGRAM):   * Score: Creating Publish Score Variables Table;
2530277    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2530278    proc sort data=EMWS8.Ensmbl36_CMeta_TRAIN(keep= NAME ROLE CREATOR COMMENT LABEL)
2530278  ! out=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Ensmbl36_CMeta_TRAIN(keep= NAME ROLE CREATOR
COMMENT LABEL) out=_temp;
2530279    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2530280    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set EMWS8.ENSMBL36_CMETA_TRAIN.
NOTE: The data set WORK._TEMP has 44 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2530281    proc sort data=EMWS8.FIMPORT_EMCMETADEFAULT(keep= NAME ROLE CREATOR COMMENT LABEL)
2530281  ! out=_temp2;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.FIMPORT_EMCMETADEFAULT(keep= NAME ROLE CREATOR
COMMENT LABEL) out=_temp2;
2530282    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2530283    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set EMWS8.FIMPORT_EMCMETADEFAULT.
NOTE: The data set WORK._TEMP2 has 34 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2530284    data EMWS8.Score_EMINPUTVARS;
MPRINT(EM_DIAGRAM):   data EMWS8.Score_EMINPUTVARS;
2530285    merge _temp2(in=_a) _temp(in=_b);
MPRINT(EM_DIAGRAM):   merge _temp2(in=_a) _temp(in=_b);
2530286    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2530287    length HIDE $1 SCOREVAR $1;
MPRINT(EM_DIAGRAM):   length HIDE $1 SCOREVAR $1;
2530288    label NAME = "%sysfunc(sasmsg(sashelp.dmine,  meta_name_vlabel ,    NOQUOTE))" ROLE
2530288  ! = "%sysfunc(sasmsg(sashelp.dmine,  meta_role_vlabel ,    NOQUOTE))" CREATOR =
2530288  ! "%sysfunc(sasmsg(sashelp.dmine,  meta_creator_vlabel , NOQUOTE))" COMMENT =
2530289       "%sysfunc(sasmsg(sashelp.dmine,  meta_comment_vlabel , NOQUOTE))" LABEL =
2530289  ! "%sysfunc(sasmsg(sashelp.dmine,  meta_label_vlabel ,   NOQUOTE))" HIDE =
2530289  ! "%sysfunc(sasmsg(sashelp.dmine, rpt_hiddenVariable_vlabel,  NOQUOTE))" SCOREVAR =
2530290       "%sysfunc(sasmsg(sashelp.dmine,  rpt_scoreVar_vlabel ,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label NAME = "Variable Name" ROLE = "Role" CREATOR = "Creator" COMMENT =
"Comment" LABEL = "Label" HIDE = "Variable Hidden" SCOREVAR = "Used in Score Code";
2530291    if _a and ^_b then HIDE = 'Y';
MPRINT(EM_DIAGRAM):   if _a and ^_b then HIDE = 'Y';
2530292    if upcase(NAME) = "ACCEPTEDCMP1" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "ACCEPTEDCMP1" then HIDE = "N";
2530293    if upcase(NAME) = "ACCEPTEDCMP2" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "ACCEPTEDCMP2" then HIDE = "N";
2530294    if upcase(NAME) = "ACCEPTEDCMP3" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "ACCEPTEDCMP3" then HIDE = "N";
2530295    if upcase(NAME) = "ACCEPTEDCMP4" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "ACCEPTEDCMP4" then HIDE = "N";
2530296    if upcase(NAME) = "ACCEPTEDCMP5" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "ACCEPTEDCMP5" then HIDE = "N";
2530297    if upcase(NAME) = "ACCEPTEDCMPTOTAL" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "ACCEPTEDCMPTOTAL" then HIDE = "N";
2530298    if upcase(NAME) = "AGE" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "AGE" then HIDE = "N";
2530299    if upcase(NAME) = "COMPLAIN" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "COMPLAIN" then HIDE = "N";
2530300    if upcase(NAME) = "CUSTID" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "CUSTID" then HIDE = "N";
2530301    if upcase(NAME) = "DEPVAR" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "DEPVAR" then HIDE = "N";
2530302    if upcase(NAME) = "EDUCATION" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "EDUCATION" then HIDE = "N";
2530303    if upcase(NAME) = "F_DEPVAR" then delete;
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "F_DEPVAR" then delete;
2530304    if upcase(NAME) = "FRQ" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "FRQ" then HIDE = "N";
2530305    if upcase(NAME) = "HIGHEREDUCATIONBINARY" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "HIGHEREDUCATIONBINARY" then HIDE = "N";
2530306    if upcase(NAME) = "I_DEPVAR" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "I_DEPVAR" then HIDE = "N";
2530307    if upcase(NAME) = "INCOME" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "INCOME" then HIDE = "N";
2530308    if upcase(NAME) = "KIDHOME" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "KIDHOME" then HIDE = "N";
2530309    if upcase(NAME) = "MARITAL_STATUS" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "MARITAL_STATUS" then HIDE = "N";
2530310    if upcase(NAME) = "MNT" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "MNT" then HIDE = "N";
2530311    if upcase(NAME) = "MNTFISHPRODUCTS" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "MNTFISHPRODUCTS" then HIDE = "N";
2530312    if upcase(NAME) = "MNTFRUITS" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "MNTFRUITS" then HIDE = "N";
2530313    if upcase(NAME) = "MNTGOLDPRODS" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "MNTGOLDPRODS" then HIDE = "N";
2530314    if upcase(NAME) = "MNTMEATPRODUCTS" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "MNTMEATPRODUCTS" then HIDE = "N";
2530315    if upcase(NAME) = "MNTSWEETPRODUCTS" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "MNTSWEETPRODUCTS" then HIDE = "N";
2530316    if upcase(NAME) = "MNTWINES" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "MNTWINES" then HIDE = "N";
2530317    if upcase(NAME) = "MONTHSASCUSTOMER" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "MONTHSASCUSTOMER" then HIDE = "N";
2530318    if upcase(NAME) = "NUMCATALOGPURCHASES" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "NUMCATALOGPURCHASES" then HIDE = "N";
2530319    if upcase(NAME) = "NUMDEALSPURCHASES" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "NUMDEALSPURCHASES" then HIDE = "N";
2530320    if upcase(NAME) = "NUMDISTPURCHASES" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "NUMDISTPURCHASES" then HIDE = "N";
2530321    if upcase(NAME) = "NUMSTOREPURCHASES" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "NUMSTOREPURCHASES" then HIDE = "N";
2530322    if upcase(NAME) = "NUMWEBPURCHASES" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "NUMWEBPURCHASES" then HIDE = "N";
2530323    if upcase(NAME) = "NUMWEBVISITSMONTH" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "NUMWEBVISITSMONTH" then HIDE = "N";
2530324    if upcase(NAME) = "P_DEPVAR0" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "P_DEPVAR0" then HIDE = "N";
2530325    if upcase(NAME) = "P_DEPVAR1" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "P_DEPVAR1" then HIDE = "N";
2530326    if upcase(NAME) = "RFMSTAT" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "RFMSTAT" then HIDE = "N";
2530327    if upcase(NAME) = "RMNTFRQ" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "RMNTFRQ" then HIDE = "N";
2530328    if upcase(NAME) = "R_DEPVAR0" then delete;
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "R_DEPVAR0" then delete;
2530329    if upcase(NAME) = "R_DEPVAR1" then delete;
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "R_DEPVAR1" then delete;
2530330    if upcase(NAME) = "RECENCY" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "RECENCY" then HIDE = "N";
2530331    if upcase(NAME) = "TEENHOME" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "TEENHOME" then HIDE = "N";
2530332    if upcase(NAME) = "U_DEPVAR" then delete;
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "U_DEPVAR" then delete;
2530333    if upcase(NAME) = "YEAR_BIRTH" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "YEAR_BIRTH" then HIDE = "N";
2530334    if upcase(NAME) = "_WARN_" then delete;
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "_WARN_" then delete;
2530335    if upcase(NAME) = "_DATAOBS_" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "_DATAOBS_" then HIDE = "N";
2530336    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Variable SCOREVAR is uninitialized.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: There were 44 observations read from the data set WORK._TEMP.
NOTE: The data set EMWS8.SCORE_EMINPUTVARS has 47 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
2530337    proc sort data=EMWS8.Score_EMINPUTVARS nodupkey;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Score_EMINPUTVARS nodupkey;
2530338    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2530339    where CREATOR='' or (NAME="DEPVAR" and CREATOR='');
MPRINT(EM_DIAGRAM):   where CREATOR='' or (NAME="DEPVAR" and CREATOR='');
2530340    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set EMWS8.SCORE_EMINPUTVARS.
      WHERE (CREATOR=' ') or ((NAME='DEPVAR') and (CREATOR=' '));
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set EMWS8.SCORE_EMINPUTVARS has 34 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2530341    filename _pref
2530341  ! "C:\\predictive-models-project\Workspaces\EMWS8\Score\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Score\EMPUBLISHSCORE.sas";
2530342    options validvarname=ANY;
MPRINT(EM_DIAGRAM):   options validvarname=ANY;
2530343    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2530344    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Score\EMPUBLISHSCORE.sas.
2530345   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2530346   +* Score: Creating Fixed Names;
MPRINT(EM_DIAGRAM):   * Score: Creating Fixed Names;
2530347   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2530348   +LABEL EM_EVENTPROBABILITY = 'Probability for level 1 of DepVar';
MPRINT(EM_DIAGRAM):   LABEL EM_EVENTPROBABILITY = 'Probability for level 1 of DepVar';
2530349   +EM_EVENTPROBABILITY = P_DepVar1;
MPRINT(EM_DIAGRAM):   EM_EVENTPROBABILITY = P_DepVar1;
2530350   +LABEL EM_PROBABILITY = 'Probability of Classification';
MPRINT(EM_DIAGRAM):   LABEL EM_PROBABILITY = 'Probability of Classification';
2530351   +EM_PROBABILITY =
2530352   +max(
2530353   +P_DepVar1
2530354   +,
2530355   +P_DepVar0
2530356   +);
MPRINT(EM_DIAGRAM):   EM_PROBABILITY = max( P_DepVar1 , P_DepVar0 );
2530357   +LENGTH EM_CLASSIFICATION $%dmnorlen;
MPRINT(EM_DIAGRAM):   LENGTH EM_CLASSIFICATION
MPRINT(DMNORLEN):   $32
MPRINT(EM_DIAGRAM):  ;
2530358   +LABEL EM_CLASSIFICATION = "Prediction for DepVar";
MPRINT(EM_DIAGRAM):   LABEL EM_CLASSIFICATION = "Prediction for DepVar";
2530359   +EM_CLASSIFICATION = I_DepVar;
MPRINT(EM_DIAGRAM):   EM_CLASSIFICATION = I_DepVar;
NOTE: Numeric value converted to character.
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2530360    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2530361    options validvarname=V7;
MPRINT(EM_DIAGRAM):   options validvarname=V7;
MPRINT(EM_DIAGRAM):   quit;
2530362    quit;
2530363    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2530364    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2530365    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2530366    retain ID 1 Node "Score";
MPRINT(EM_DIAGRAM):   retain ID 1 Node "Score";
2530367    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2530368    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2530369    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2530370    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2530371    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2530372    proc sort data=EMWS8.Ensmbl36_CMeta_TRAIN out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Ensmbl36_CMeta_TRAIN out=_temp2(keep=NAME CREATOR);
2530373    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2530374    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set EMWS8.ENSMBL36_CMETA_TRAIN.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2530375    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2530376    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2530377    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2530378    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2530379    proc contents data=EMWS8.Score_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Score_train out=_meta(keep=NAME) noprint;
2530380    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 57 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
2530381    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2530382    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2530383    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 57 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 57 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2530384    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2530385    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2530386    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2530387    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 57 observations read from the data set WORK._META.
NOTE: There were 44 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 57 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2530388    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2530389    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2530389  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.
 
2530390    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2530391    proc append base=EMWS8.Score_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Score_FCMP data=_tempx;
2530392    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.SCORE_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.SCORE_FCMP has 4 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2530393    filename _pref
2530393  ! "C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl36\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl36\EMPUBLISHSCORE.sas";
2530394    options validvarname=ANY;
MPRINT(EM_DIAGRAM):   options validvarname=ANY;
2530395    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2530396    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl36\EMPUBLISHSCORE.sas.
2530397   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2530398   +* Ensmbl36: Combine model for DepVar;
MPRINT(EM_DIAGRAM):   * Ensmbl36: Combine model for DepVar;
2530399   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2530400   +* Ensmbl36: Scoring Code of model 1 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl36: Scoring Code of model 1 of 7;
2530401   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2530402   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2530403   +* TOOL: Extension Class;
MPRINT(EM_DIAGRAM):   * TOOL: Extension Class;
2530404   +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
2530405   +* NODE: FIMPORT;
MPRINT(EM_DIAGRAM):   * NODE: FIMPORT;
2530406   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2530407   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2530408   +* TOOL: Statistics Exploration;
MPRINT(EM_DIAGRAM):   * TOOL: Statistics Exploration;
2530409   +* TYPE: EXPLORE;
MPRINT(EM_DIAGRAM):   * TYPE: EXPLORE;
2530410   +* NODE: Stat;
MPRINT(EM_DIAGRAM):   * NODE: Stat;
2530411   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2530412   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2530413   +* TOOL: Filtering;
MPRINT(EM_DIAGRAM):   * TOOL: Filtering;
2530414   +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
2530415   +* NODE: Filter;
MPRINT(EM_DIAGRAM):   * NODE: Filter;
2530416   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2530417   +
2530418   +
2530419   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
2530420   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
2530421   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
2530422   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
2530423   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
2530424   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2530425   +
2530426   +
2530427   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
2530428   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
2530429   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
2530430   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
2530431   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
2530432   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2530433   +
2530434   +
2530435   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
2530436   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
2530437   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
2530438   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
2530439   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
2530440   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2530441   +
2530442   +
2530443   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
2530444   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
2530445   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
2530446   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
2530447   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
2530448   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2530449   +
2530450   +
2530451   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
2530452   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
2530453   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
2530454   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
2530455   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
2530456   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2530457   +
2530458   +
2530459   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
2530460   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
2530461   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
2530462   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
2530463   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
2530464   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2530465   +
2530466   +
2530467   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
2530468   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
2530469   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
2530470   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
2530471   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
2530472   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2530473   +
2530474   +
2530475   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
2530476   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
2530477   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
2530478   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
2530479   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
2530480   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2530481   +if
2530482   +_FILTERNORM1 not in ( '.')
2530483   + and
2530484   +_FILTERNORM2 not in ( '.')
2530485   + and
2530486   +_FILTERNORM3 not in ( '.')
2530487   + and
2530488   +_FILTERNORM4 not in ( '.')
2530489   + and
2530490   +_FILTERNORM5 not in ( '.')
2530491   + and
2530492   +_FILTERNORM6 not in ( '.')
2530493   + and
2530494   +_FILTERNORM7 not in ( ' ')
2530495   + and
2530496   +_FILTERNORM8 not in ( ' ')
2530497   +and
2530498   +( Dt_Customer ne .)
2530499   +and ( Income ne . and (Income<=107000))
2530500   +and ( Kidhome ne .)
2530501   +and ( MntFishProducts ne .)
2530502   +and ( MntFruits ne .)
2530503   +and ( MntGoldProds ne .)
2530504   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
2530505   +and ( MntSweetProducts ne .)
2530506   +and ( MntWines ne .)
2530507   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
2530508   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
2530509   +and ( NumStorePurchases ne .)
2530510   +and ( NumWebPurchases ne .)
2530511   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
2530512   +and ( Recency ne .)
2530513   +and ( Teenhome ne .)
2530514   +and ( Year_Birth ne .)
2530515   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and (
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and (
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and (
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and (
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne
.) and ( Year_Birth ne .) then do;
2530516   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
2530517   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
2530518   +end;
MPRINT(EM_DIAGRAM):   end;
2530519   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
2530520   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
2530521   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2530522   +* TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
MPRINT(EM_DIAGRAM):   * TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
2530523   +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
2530524   +* NODE: EMCODE4;
MPRINT(EM_DIAGRAM):   * NODE: EMCODE4;
2530525   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2530526   +
2530527   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
2530528   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
2530528  !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
2530529   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
2530530   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
2530531   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
NOTE: Numeric value converted to character for argument 1 of 'UPCASE' operation.
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
2530532   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
2530533   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
2530534   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2530535   +* TOOL: Transform;
MPRINT(EM_DIAGRAM):   * TOOL: Transform;
2530536   +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
2530537   +* NODE: Trans;
MPRINT(EM_DIAGRAM):   * NODE: Trans;
2530538   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2530539   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2530540   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
2530541   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2530542   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
2530543   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
2530544   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
2530545   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2530546   +* TOOL: Partition Class;
MPRINT(EM_DIAGRAM):   * TOOL: Partition Class;
2530547   +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
2530548   +* NODE: Part;
MPRINT(EM_DIAGRAM):   * NODE: Part;
2530549   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2530550   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2530551   +* TOOL: Metadata Node;
MPRINT(EM_DIAGRAM):   * TOOL: Metadata Node;
2530552   +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
2530553   +* NODE: Meta;
MPRINT(EM_DIAGRAM):   * NODE: Meta;
2530554   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2530555   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2530556   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
2530557   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
2530558   +* NODE: AutoNeural6;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural6;
2530559   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2530560   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2530561   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2530562   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2530563   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2530564   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2530565   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2530566   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2530567   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2530568   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2530569   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2530570   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2530571   +LENGTH _WARN_ $4
2530572   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
2530573   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2530574   +
2530575   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
2530576   +
2530577   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
2530578   +
2530579   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2530580   +
2530581   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2530582   +
2530583   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2530584   +
2530585   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2530586   +
2530587   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2530588   +
2530589   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2530590   +
2530591   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2530592   +
2530593   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2530594   +
2530595   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2530596   +
2530597   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
2530598   +
2530599   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2530600   +
2530601   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2530602   +
2530603   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
2530604   +
2530605   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2530606   +
2530607   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2530608   +
2530609   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2530610   +
2530611   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2530612   +
2530613   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
2530614   +
2530615   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2530616   +
2530617   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2530618   +
2530619   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2530620   +
2530621   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2530622   +
2530623   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2530624   +
2530625   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2530626   +
2530627   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2530628   +
2530629   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2530630   +
2530631   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
2530632   +
2530633   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2530634   +
2530635   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2530636   +
2530637   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2530638   +
2530639   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2530640   +
2530641   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2530642   +
2530643   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2530644   +
2530645   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2530646   +
2530647   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2530648   +
2530649   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
2530650   +
2530651   +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
2530652   +
2530653   +      label H1x3_1 = 'Hidden: H1x3_=1' ;
MPRINT(EM_DIAGRAM):   label H1x3_1 = 'Hidden: H1x3_=1' ;
2530654   +
2530655   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2530656   +
2530657   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2530658   +
2530659   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2530660   +
2530661   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2530662   +
2530663   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2530664   +
2530665   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2530666   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2530667   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2530668   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2530669   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2530670   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2530671   +end;
MPRINT(EM_DIAGRAM):   end;
2530672   +else do;
MPRINT(EM_DIAGRAM):   else do;
2530673   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2530674   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2530675   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2530676   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2530677   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2530678   +   end;
MPRINT(EM_DIAGRAM):   end;
2530679   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2530680   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2530681   +   end;
MPRINT(EM_DIAGRAM):   end;
2530682   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2530683   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2530684   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2530685   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2530686   +   end;
MPRINT(EM_DIAGRAM):   end;
2530687   +end;
MPRINT(EM_DIAGRAM):   end;
2530688   +
2530689   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2530690   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2530691   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2530692   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2530693   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2530694   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2530695   +end;
MPRINT(EM_DIAGRAM):   end;
2530696   +else do;
MPRINT(EM_DIAGRAM):   else do;
2530697   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2530698   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2530699   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2530700   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2530701   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2530702   +   end;
MPRINT(EM_DIAGRAM):   end;
2530703   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2530704   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2530705   +   end;
MPRINT(EM_DIAGRAM):   end;
2530706   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2530707   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2530708   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2530709   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2530710   +   end;
MPRINT(EM_DIAGRAM):   end;
2530711   +end;
MPRINT(EM_DIAGRAM):   end;
2530712   +
2530713   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2530714   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2530715   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2530716   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2530717   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2530718   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2530719   +end;
MPRINT(EM_DIAGRAM):   end;
2530720   +else do;
MPRINT(EM_DIAGRAM):   else do;
2530721   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2530722   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2530723   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2530724   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2530725   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2530726   +   end;
MPRINT(EM_DIAGRAM):   end;
2530727   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2530728   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2530729   +   end;
MPRINT(EM_DIAGRAM):   end;
2530730   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2530731   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2530732   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2530733   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2530734   +   end;
MPRINT(EM_DIAGRAM):   end;
2530735   +end;
MPRINT(EM_DIAGRAM):   end;
2530736   +
2530737   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2530738   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2530739   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2530740   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2530741   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2530742   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2530743   +end;
MPRINT(EM_DIAGRAM):   end;
2530744   +else do;
MPRINT(EM_DIAGRAM):   else do;
2530745   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2530746   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2530747   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2530748   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2530749   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2530750   +   end;
MPRINT(EM_DIAGRAM):   end;
2530751   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2530752   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2530753   +   end;
MPRINT(EM_DIAGRAM):   end;
2530754   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2530755   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2530756   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2530757   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2530758   +   end;
MPRINT(EM_DIAGRAM):   end;
2530759   +end;
MPRINT(EM_DIAGRAM):   end;
2530760   +
2530761   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2530762   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2530763   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2530764   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2530765   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2530766   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2530767   +end;
MPRINT(EM_DIAGRAM):   end;
2530768   +else do;
MPRINT(EM_DIAGRAM):   else do;
2530769   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2530770   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2530771   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2530772   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2530773   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2530774   +   end;
MPRINT(EM_DIAGRAM):   end;
2530775   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2530776   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2530777   +   end;
MPRINT(EM_DIAGRAM):   end;
2530778   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2530779   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2530780   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2530781   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2530782   +   end;
MPRINT(EM_DIAGRAM):   end;
2530783   +end;
MPRINT(EM_DIAGRAM):   end;
2530784   +
2530785   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2530786   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2530787   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2530788   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2530789   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2530790   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2530791   +end;
MPRINT(EM_DIAGRAM):   end;
2530792   +else do;
MPRINT(EM_DIAGRAM):   else do;
2530793   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2530794   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2530795   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2530796   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2530797   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2530798   +   end;
MPRINT(EM_DIAGRAM):   end;
2530799   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2530800   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2530801   +   end;
MPRINT(EM_DIAGRAM):   end;
2530802   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2530803   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2530804   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2530805   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2530806   +   end;
MPRINT(EM_DIAGRAM):   end;
2530807   +end;
MPRINT(EM_DIAGRAM):   end;
2530808   +
2530809   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
2530810   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
2530811   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
2530812   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2530813   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2530814   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2530815   +end;
MPRINT(EM_DIAGRAM):   end;
2530816   +else do;
MPRINT(EM_DIAGRAM):   else do;
2530817   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2530818   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
2530819   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2530820   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
2530821   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
2530822   +   end;
MPRINT(EM_DIAGRAM):   end;
2530823   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
2530824   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
2530825   +   end;
MPRINT(EM_DIAGRAM):   end;
2530826   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2530827   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2530828   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2530829   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2530830   +   end;
MPRINT(EM_DIAGRAM):   end;
2530831   +end;
MPRINT(EM_DIAGRAM):   end;
2530832   +
2530833   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2530834   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
2530835   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2530836   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2530837   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2530838   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2530839   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2530840   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2530841   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2530842   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2530843   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2530844   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2530845   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2530846   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2530847   +end;
MPRINT(EM_DIAGRAM):   end;
2530848   +else do;
MPRINT(EM_DIAGRAM):   else do;
2530849   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2530850   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2530851   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2530852   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2530853   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2530854   +   end;
MPRINT(EM_DIAGRAM):   end;
2530855   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2530856   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2530857   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2530858   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2530859   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2530860   +   end;
MPRINT(EM_DIAGRAM):   end;
2530861   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2530862   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2530863   +   end;
MPRINT(EM_DIAGRAM):   end;
2530864   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2530865   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2530866   +   end;
MPRINT(EM_DIAGRAM):   end;
2530867   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2530868   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2530869   +   end;
MPRINT(EM_DIAGRAM):   end;
2530870   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2530871   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2530872   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2530873   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2530874   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2530875   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2530876   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2530877   +   end;
MPRINT(EM_DIAGRAM):   end;
2530878   +end;
MPRINT(EM_DIAGRAM):   end;
2530879   +
2530880   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2530881   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2530882   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
2530883   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2530884   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2530885   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2530886   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2530887   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2530888   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2530889   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2530890   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2530891   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2530892   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2530893   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2530894   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2530895   +end;
MPRINT(EM_DIAGRAM):   end;
2530896   +else do;
MPRINT(EM_DIAGRAM):   else do;
2530897   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2530898   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2530899   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2530900   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2530901   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2530902   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2530903   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2530904   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2530905   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2530906   +         end;
MPRINT(EM_DIAGRAM):   end;
2530907   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2530908   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2530909   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2530910   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2530911   +            end;
MPRINT(EM_DIAGRAM):   end;
2530912   +         end;
MPRINT(EM_DIAGRAM):   end;
2530913   +      end;
MPRINT(EM_DIAGRAM):   end;
2530914   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2530915   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2530916   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2530917   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2530918   +         end;
MPRINT(EM_DIAGRAM):   end;
2530919   +      end;
MPRINT(EM_DIAGRAM):   end;
2530920   +   end;
MPRINT(EM_DIAGRAM):   end;
2530921   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2530922   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2530923   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2530924   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2530925   +      end;
MPRINT(EM_DIAGRAM):   end;
2530926   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2530927   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2530928   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2530929   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2530930   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2530931   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2530932   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2530933   +         end;
MPRINT(EM_DIAGRAM):   end;
2530934   +      end;
MPRINT(EM_DIAGRAM):   end;
2530935   +   end;
MPRINT(EM_DIAGRAM):   end;
2530936   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2530937   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2530938   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2530939   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2530940   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2530941   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2530942   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2530943   +   end;
MPRINT(EM_DIAGRAM):   end;
2530944   +end;
MPRINT(EM_DIAGRAM):   end;
2530945   +
2530946   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2530947   +*** Checking missing input Interval
2530948   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2530949   +
2530950   +IF NMISS(
2530951   +   AcceptedCmpTotal ,
2530952   +   Age ,
2530953   +   Frq ,
2530954   +   Income ,
2530955   +   Kidhome ,
2530956   +   Mnt ,
2530957   +   MntFishProducts ,
2530958   +   MntFruits ,
2530959   +   MntGoldProds ,
2530960   +   MntMeatProducts ,
2530961   +   MntSweetProducts ,
2530962   +   MntWines ,
2530963   +   MonthsAsCustomer ,
2530964   +   NumCatalogPurchases ,
2530965   +   NumDealsPurchases ,
2530966   +   NumDistPurchases ,
2530967   +   NumStorePurchases ,
2530968   +   NumWebPurchases ,
2530969   +   NumWebVisitsMonth ,
2530970   +   RFMstat ,
2530971   +   RMntFrq ,
2530972   +   Recency ,
2530973   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
2530974   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2530975   +
2530976   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2530977   +END;
MPRINT(EM_DIAGRAM):   END;
2530978   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2530979   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
2530980   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2530981   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2530982   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2530983   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
2530984   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2530985   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2530986   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2530987   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2530988   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2530989   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2530990   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2530991   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2530992   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2530993   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2530994   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2530995   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
2530996   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2530997   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2530998   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2530999   +   S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2531000   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 *
MonthsAsCustomer ;
2531001   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2531002   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
2531003   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2531004   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2531005   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2531006   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
2531007   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2531008   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
2531009   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2531010   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
2531011   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2531012   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2531013   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2531014   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2531015   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2531016   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2531017   +END;
MPRINT(EM_DIAGRAM):   END;
2531018   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2531019   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2531020   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2531021   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
2531022   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
2531023   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2531024   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
2531025   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2531026   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2531027   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2531028   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2531029   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2531030   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2531031   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2531032   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2531033   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2531034   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2531035   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2531036   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2531037   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2531038   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2531039   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2531040   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
2531041   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2531042   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2531043   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
2531044   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2531045   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2531046   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2531047   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2531048   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2531049   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
2531050   +   ELSE S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2531051   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 *
MonthsAsCustomer ;
2531052   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2531053   +   ELSE S_NumCatalogPurchases
2531054   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2531055   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
2531056   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2531057   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2531058   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2531059   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
2531060   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2531061   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
2531062   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2531063   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2531064   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
2531065   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2531066   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2531067   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
2531068   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2531069   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2531070   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2531071   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2531072   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2531073   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
2531074   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2531075   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2531076   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2531077   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2531078   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2531079   +END;
MPRINT(EM_DIAGRAM):   END;
2531080   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2531081   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
2531082   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2531083   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2531084   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
2531085   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2531086   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2531087   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
2531088   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2531089   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2531090   +   H1x1_1  =    -0.00800383076247 * S_AcceptedCmpTotal
2531091   +          +     0.02761302021586 * S_Age  +     0.10595191274027 * S_Frq
2531092   +          +    -0.15720275096991 * S_Income  +     0.14522420813528 *
2531093   +        S_Kidhome  +    -0.14485367197729 * S_Mnt  +     0.10029542464177 *
2531094   +        S_MntFishProducts  +      0.0126489883955 * S_MntFruits
2531095   +          +    -0.01721251339827 * S_MntGoldProds  +    -0.69008250574088 *
2531096   +        S_MntMeatProducts  +     0.01018204164797 * S_MntSweetProducts
2531097   +          +     0.22039448854688 * S_MntWines  +     0.01531819489128 *
2531098   +        S_MonthsAsCustomer  +    -0.23161250514854 * S_NumCatalogPurchases
2531099   +          +    -0.20127545393212 * S_NumDealsPurchases
2531100   +          +     0.04506333103933 * S_NumDistPurchases
2531101   +          +     0.35249458492371 * S_NumStorePurchases
2531102   +          +     0.25004284340707 * S_NumWebPurchases
2531103   +          +    -0.53727251220752 * S_NumWebVisitsMonth
2531104   +          +    -0.05439428653958 * S_RFMstat  +     0.36751560031492 *
2531105   +        S_RMntFrq  +      0.5373510847225 * S_Recency
2531106   +          +     0.08757258535387 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.00800383076247 * S_AcceptedCmpTotal + 0.02761302021586 *
S_Age + 0.10595191274027 * S_Frq + -0.15720275096991 * S_Income + 0.14522420813528 * S_Kidhome
+ -0.14485367197729 * S_Mnt + 0.10029542464177 * S_MntFishProducts + 0.0126489883955 *
S_MntFruits + -0.01721251339827 * S_MntGoldProds + -0.69008250574088 * S_MntMeatProducts +
0.01018204164797 * S_MntSweetProducts + 0.22039448854688 * S_MntWines + 0.01531819489128 *
S_MonthsAsCustomer + -0.23161250514854 * S_NumCatalogPurchases + -0.20127545393212 *
S_NumDealsPurchases + 0.04506333103933 * S_NumDistPurchases + 0.35249458492371 *
S_NumStorePurchases + 0.25004284340707 * S_NumWebPurchases + -0.53727251220752 *
S_NumWebVisitsMonth + -0.05439428653958 * S_RFMstat + 0.36751560031492 * S_RMntFrq +
0.5373510847225 * S_Recency + 0.08757258535387 * S_Teenhome ;
2531107   +   H1x1_1  = H1x1_1  +     0.21204360154837 * AcceptedCmp10
2531108   +          +     0.20766091429217 * AcceptedCmp20  +     0.20201307074488 *
2531109   +        AcceptedCmp30  +     0.26898383850722 * AcceptedCmp40
2531110   +          +     0.55154220854739 * AcceptedCmp50  +     0.13147328871299 *
2531111   +        Complain0  +    -0.02797177954188 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.21204360154837 * AcceptedCmp10 + 0.20766091429217 *
AcceptedCmp20 + 0.20201307074488 * AcceptedCmp30 + 0.26898383850722 * AcceptedCmp40 +
0.55154220854739 * AcceptedCmp50 + 0.13147328871299 * Complain0 + -0.02797177954188 *
HigherEducationBinary0 ;
2531112   +   H1x1_1  = H1x1_1  +    -0.00959805163736 * Education2n_Cycle
2531113   +          +     0.37192717803938 * EducationBasic  +    -0.10342362068485 *
2531114   +        EducationGraduation  +    -0.13377682721092 * EducationMaster
2531115   +          +    -0.19452359839974 * Marital_StatusDivorced
2531116   +          +     0.32327870805716 * Marital_StatusMarried
2531117   +          +    -0.20770545592268 * Marital_StatusSingle
2531118   +          +     0.35618773017298 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.00959805163736 * Education2n_Cycle +
0.37192717803938 * EducationBasic + -0.10342362068485 * EducationGraduation +
-0.13377682721092 * EducationMaster + -0.19452359839974 * Marital_StatusDivorced +
0.32327870805716 * Marital_StatusMarried + -0.20770545592268 * Marital_StatusSingle +
0.35618773017298 * Marital_StatusTogether ;
2531119   +   H1x1_1  =     0.87012150629431 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.87012150629431 + H1x1_1 ;
2531120   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
2531121   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
2531122   +   H1x1_1  = EXP(MIN(-0.5 * H1x1_1 **2, _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(MIN(-0.5 * H1x1_1 **2, _EXP_BAR));
2531123   +END;
MPRINT(EM_DIAGRAM):   END;
2531124   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2531125   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
2531126   +END;
MPRINT(EM_DIAGRAM):   END;
2531127   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2531128   +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
2531129   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2531130   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2531131   +   H1x2_1  =     0.92357456692651 * S_AcceptedCmpTotal
2531132   +          +    -0.00516549264504 * S_Age  +    -1.03043789382359 * S_Frq
2531133   +          +     0.78555631441048 * S_Income  +    -1.36329797235747 *
2531134   +        S_Kidhome  +    -0.77229288487872 * S_Mnt  +     1.27281095482218 *
2531135   +        S_MntFishProducts  +     0.04568599055132 * S_MntFruits
2531136   +          +    -0.13434867195633 * S_MntGoldProds  +    -1.95682488683295 *
2531137   +        S_MntMeatProducts  +     -0.0253141337078 * S_MntSweetProducts
2531138   +          +     0.67857436596482 * S_MntWines  +    -0.07247572940845 *
2531139   +        S_MonthsAsCustomer  +    -1.02814758425435 * S_NumCatalogPurchases
2531140   +          +    -0.02120959778153 * S_NumDealsPurchases
2531141   +          +     1.49013956394863 * S_NumDistPurchases
2531142   +          +    -0.96806240220463 * S_NumStorePurchases
2531143   +          +    -1.68330472453558 * S_NumWebPurchases
2531144   +          +     3.42976128164256 * S_NumWebVisitsMonth
2531145   +          +    -0.38912520446503 * S_RFMstat  +    -2.57487899031042 *
2531146   +        S_RMntFrq  +    -3.14923215912621 * S_Recency
2531147   +          +    -0.67635091810974 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.92357456692651 * S_AcceptedCmpTotal + -0.00516549264504 *
S_Age + -1.03043789382359 * S_Frq + 0.78555631441048 * S_Income + -1.36329797235747 *
S_Kidhome + -0.77229288487872 * S_Mnt + 1.27281095482218 * S_MntFishProducts +
0.04568599055132 * S_MntFruits + -0.13434867195633 * S_MntGoldProds + -1.95682488683295 *
S_MntMeatProducts + -0.0253141337078 * S_MntSweetProducts + 0.67857436596482 * S_MntWines +
-0.07247572940845 * S_MonthsAsCustomer + -1.02814758425435 * S_NumCatalogPurchases +
-0.02120959778153 * S_NumDealsPurchases + 1.49013956394863 * S_NumDistPurchases +
-0.96806240220463 * S_NumStorePurchases + -1.68330472453558 * S_NumWebPurchases +
3.42976128164256 * S_NumWebVisitsMonth + -0.38912520446503 * S_RFMstat + -2.57487899031042 *
S_RMntFrq + -3.14923215912621 * S_Recency + -0.67635091810974 * S_Teenhome ;
2531148   +   H1x2_1  = H1x2_1  +    -0.18835638765595 * AcceptedCmp10
2531149   +          +     1.28752081945681 * AcceptedCmp20  +     -0.5515893923669 *
2531150   +        AcceptedCmp30  +    -0.82440763600043 * AcceptedCmp40
2531151   +          +     1.94503109075872 * AcceptedCmp50  +    -0.75977722298402 *
2531152   +        Complain0  +    -1.11349075129464 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.18835638765595 * AcceptedCmp10 + 1.28752081945681 *
AcceptedCmp20 + -0.5515893923669 * AcceptedCmp30 + -0.82440763600043 * AcceptedCmp40 +
1.94503109075872 * AcceptedCmp50 + -0.75977722298402 * Complain0 + -1.11349075129464 *
HigherEducationBinary0 ;
2531153   +   H1x2_1  = H1x2_1  +     1.79843117215153 * Education2n_Cycle
2531154   +          +    -1.50428649925314 * EducationBasic  +    -0.32238897768725 *
2531155   +        EducationGraduation  +    -0.16909007224958 * EducationMaster
2531156   +          +      1.9815992681602 * Marital_StatusDivorced
2531157   +          +    -3.07893181570848 * Marital_StatusMarried
2531158   +          +     1.72965298244219 * Marital_StatusSingle
2531159   +          +    -3.17208781997524 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 1.79843117215153 * Education2n_Cycle +
-1.50428649925314 * EducationBasic + -0.32238897768725 * EducationGraduation +
-0.16909007224958 * EducationMaster + 1.9815992681602 * Marital_StatusDivorced +
-3.07893181570848 * Marital_StatusMarried + 1.72965298244219 * Marital_StatusSingle +
-3.17208781997524 * Marital_StatusTogether ;
2531160   +   H1x2_1  =     0.54729406730223 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.54729406730223 + H1x2_1 ;
2531161   +   _EPS = SQRT(CONSTANT('MACEPS')) ;
MPRINT(EM_DIAGRAM):   _EPS = SQRT(CONSTANT('MACEPS')) ;
2531162   +   _REC_EPS = 1/_EPS ;
MPRINT(EM_DIAGRAM):   _REC_EPS = 1/_EPS ;
2531163   +   DROP _REC_EPS _EPS ;
MPRINT(EM_DIAGRAM):   DROP _REC_EPS _EPS ;
2531164   +   IF H1x2_1  < _REC_EPS AND H1x2_1  > - _REC_EPS THEN
2531165   +   H1x2_1  = H1x2_1  * H1x2_1 ;
MPRINT(EM_DIAGRAM):   IF H1x2_1 < _REC_EPS AND H1x2_1 > - _REC_EPS THEN H1x2_1 = H1x2_1 *
H1x2_1 ;
2531166   +   ELSE H1x2_1  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x2_1 = _REC_EPS ;
2531167   +END;
MPRINT(EM_DIAGRAM):   END;
2531168   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2531169   +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
2531170   +END;
MPRINT(EM_DIAGRAM):   END;
2531171   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2531172   +*** Writing the Node H1x3_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x3_ ;
2531173   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2531174   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2531175   +   H1x3_1  =     0.90092602642364 * S_AcceptedCmpTotal
2531176   +          +    -0.16291307307626 * S_Age  +    -0.40132431666712 * S_Frq
2531177   +          +    -0.77251140598484 * S_Income  +     0.02215214313934 *
2531178   +        S_Kidhome  +     0.13123074182657 * S_Mnt  +    -0.43664076061176 *
2531179   +        S_MntFishProducts  +    -1.64192761266072 * S_MntFruits
2531180   +          +    -1.54189230184745 * S_MntGoldProds  +     -0.4138869968665 *
2531181   +        S_MntMeatProducts  +      0.5773885392047 * S_MntSweetProducts
2531182   +          +     1.45077769194851 * S_MntWines  +      0.5855746168529 *
2531183   +        S_MonthsAsCustomer  +     0.10198319985004 * S_NumCatalogPurchases
2531184   +          +     -0.5334151509863 * S_NumDealsPurchases
2531185   +          +     0.40600458912114 * S_NumDistPurchases
2531186   +          +    -0.30674653528261 * S_NumStorePurchases
2531187   +          +     0.10785037433743 * S_NumWebPurchases
2531188   +          +     0.99701680073452 * S_NumWebVisitsMonth
2531189   +          +    -0.25371895811899 * S_RFMstat  +     2.19406614746442 *
2531190   +        S_RMntFrq  +      1.0786726340694 * S_Recency
2531191   +          +     0.64406049150007 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 0.90092602642364 * S_AcceptedCmpTotal + -0.16291307307626 *
S_Age + -0.40132431666712 * S_Frq + -0.77251140598484 * S_Income + 0.02215214313934 *
S_Kidhome + 0.13123074182657 * S_Mnt + -0.43664076061176 * S_MntFishProducts +
-1.64192761266072 * S_MntFruits + -1.54189230184745 * S_MntGoldProds + -0.4138869968665 *
S_MntMeatProducts + 0.5773885392047 * S_MntSweetProducts + 1.45077769194851 * S_MntWines +
0.5855746168529 * S_MonthsAsCustomer + 0.10198319985004 * S_NumCatalogPurchases +
-0.5334151509863 * S_NumDealsPurchases + 0.40600458912114 * S_NumDistPurchases +
-0.30674653528261 * S_NumStorePurchases + 0.10785037433743 * S_NumWebPurchases +
0.99701680073452 * S_NumWebVisitsMonth + -0.25371895811899 * S_RFMstat + 2.19406614746442 *
S_RMntFrq + 1.0786726340694 * S_Recency + 0.64406049150007 * S_Teenhome ;
2531192   +   H1x3_1  = H1x3_1  +    -0.58424742605644 * AcceptedCmp10
2531193   +          +     -0.7436165858459 * AcceptedCmp20  +    -0.33959137246457 *
2531194   +        AcceptedCmp30  +     0.42726020731333 * AcceptedCmp40
2531195   +          +     2.23707409189181 * AcceptedCmp50  +     0.98135772482722 *
2531196   +        Complain0  +    -0.85818399669867 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + -0.58424742605644 * AcceptedCmp10 + -0.7436165858459 *
AcceptedCmp20 + -0.33959137246457 * AcceptedCmp30 + 0.42726020731333 * AcceptedCmp40 +
2.23707409189181 * AcceptedCmp50 + 0.98135772482722 * Complain0 + -0.85818399669867 *
HigherEducationBinary0 ;
2531197   +   H1x3_1  = H1x3_1  +    -0.89540752048995 * Education2n_Cycle
2531198   +          +     1.29513448243349 * EducationBasic  +    -1.47068621785539 *
2531199   +        EducationGraduation  +    -1.63362973413899 * EducationMaster
2531200   +          +    -0.72494401881341 * Marital_StatusDivorced
2531201   +          +    -0.82332231639631 * Marital_StatusMarried
2531202   +          +     -0.8863559011195 * Marital_StatusSingle
2531203   +          +     0.97129982315045 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + -0.89540752048995 * Education2n_Cycle +
1.29513448243349 * EducationBasic + -1.47068621785539 * EducationGraduation +
-1.63362973413899 * EducationMaster + -0.72494401881341 * Marital_StatusDivorced +
-0.82332231639631 * Marital_StatusMarried + -0.8863559011195 * Marital_StatusSingle +
0.97129982315045 * Marital_StatusTogether ;
2531204   +   H1x3_1  =     0.55234573720932 + H1x3_1 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 0.55234573720932 + H1x3_1 ;
2531205   +   _EPS = SQRT(CONSTANT('MACEPS')) ;
MPRINT(EM_DIAGRAM):   _EPS = SQRT(CONSTANT('MACEPS')) ;
2531206   +   _REC_EPS = 1/_EPS ;
MPRINT(EM_DIAGRAM):   _REC_EPS = 1/_EPS ;
2531207   +   DROP _REC_EPS _EPS ;
MPRINT(EM_DIAGRAM):   DROP _REC_EPS _EPS ;
2531208   +   IF H1x3_1  < _REC_EPS AND H1x3_1  > - _REC_EPS THEN
2531209   +   H1x3_1  = H1x3_1  * H1x3_1 ;
MPRINT(EM_DIAGRAM):   IF H1x3_1 < _REC_EPS AND H1x3_1 > - _REC_EPS THEN H1x3_1 = H1x3_1 *
H1x3_1 ;
2531210   +   ELSE H1x3_1  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x3_1 = _REC_EPS ;
2531211   +END;
MPRINT(EM_DIAGRAM):   END;
2531212   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2531213   +   H1x3_1  = .;
MPRINT(EM_DIAGRAM):   H1x3_1 = .;
2531214   +END;
MPRINT(EM_DIAGRAM):   END;
2531215   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2531216   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2531217   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2531218   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2531219   +   P_DepVar1  =     35.4482526843154 * H1x1_1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 35.4482526843154 * H1x1_1 ;
2531220   +   P_DepVar1  = P_DepVar1  +    -0.08810161142704 * H1x2_1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 + -0.08810161142704 * H1x2_1 ;
2531221   +   P_DepVar1  = P_DepVar1  +     0.02248060710303 * H1x3_1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 + 0.02248060710303 * H1x3_1 ;
2531222   +   P_DepVar1  =    -6.23004657634651 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -6.23004657634651 + P_DepVar1 ;
2531223   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2531224   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2531225   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2531226   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2531227   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2531228   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2531229   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2531230   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2531231   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2531232   +END;
MPRINT(EM_DIAGRAM):   END;
2531233   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2531234   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2531235   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2531236   +END;
MPRINT(EM_DIAGRAM):   END;
2531237   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2531238   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2531239   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2531240   +END;
MPRINT(EM_DIAGRAM):   END;
2531241   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2531242   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2531243   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2531244   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2531245   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2531246   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2531247   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2531248   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2531249   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2531250   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2531251   +END;
MPRINT(EM_DIAGRAM):   END;
2531252   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2531253   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2531254   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2531255   +drop
2531256   +H1x1_1
2531257   +H1x2_1
2531258   +H1x3_1
2531259   +;
MPRINT(EM_DIAGRAM):   drop H1x1_1 H1x2_1 H1x3_1 ;
2531260   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
2531261   +* Renaming variables for AutoNeural6;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural6;
2531262   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2531263   +* Renaming Posterior variables for AutoNeural6;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural6;
2531264   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2531265   +drop AutoNeural6_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural6_P_DepVar1;
2531266   +AutoNeural6_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural6_P_DepVar1 = P_DepVar1;
2531267   +drop AutoNeural6_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural6_P_DepVar0;
2531268   +AutoNeural6_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural6_P_DepVar0 = P_DepVar0;
2531269   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2531270   +* Renaming _WARN_ variable for AutoNeural6;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural6;
2531271   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2531272   +length AutoNeural6_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural6_WARN_ $4;
2531273   +drop AutoNeural6_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural6_WARN_;
2531274   +AutoNeural6_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural6_WARN_ = _WARN_;
2531275   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2531276   +* Ensmbl36: Scoring Code of model 2 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl36: Scoring Code of model 2 of 7;
2531277   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2531278   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2531279   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
2531280   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
2531281   +* NODE: AutoNeural7;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural7;
2531282   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2531283   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2531284   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2531285   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2531286   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2531287   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2531288   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2531289   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2531290   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2531291   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2531292   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2531293   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2531294   +LENGTH _WARN_ $4
2531295   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
2531296   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2531297   +
2531298   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
2531299   +
2531300   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
2531301   +
2531302   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2531303   +
2531304   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2531305   +
2531306   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2531307   +
2531308   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2531309   +
2531310   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2531311   +
2531312   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2531313   +
2531314   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2531315   +
2531316   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2531317   +
2531318   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2531319   +
2531320   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
2531321   +
2531322   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2531323   +
2531324   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2531325   +
2531326   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
2531327   +
2531328   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2531329   +
2531330   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2531331   +
2531332   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2531333   +
2531334   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2531335   +
2531336   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
2531337   +
2531338   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2531339   +
2531340   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2531341   +
2531342   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2531343   +
2531344   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2531345   +
2531346   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2531347   +
2531348   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2531349   +
2531350   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2531351   +
2531352   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2531353   +
2531354   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
2531355   +
2531356   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2531357   +
2531358   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2531359   +
2531360   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2531361   +
2531362   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2531363   +
2531364   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2531365   +
2531366   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2531367   +
2531368   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2531369   +
2531370   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2531371   +
2531372   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
2531373   +
2531374   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
2531375   +
2531376   +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
2531377   +
2531378   +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
2531379   +
2531380   +      label H1x3_1 = 'Hidden: H1x3_=1' ;
MPRINT(EM_DIAGRAM):   label H1x3_1 = 'Hidden: H1x3_=1' ;
2531381   +
2531382   +      label H1x3_2 = 'Hidden: H1x3_=2' ;
MPRINT(EM_DIAGRAM):   label H1x3_2 = 'Hidden: H1x3_=2' ;
2531383   +
2531384   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2531385   +
2531386   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2531387   +
2531388   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2531389   +
2531390   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2531391   +
2531392   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2531393   +
2531394   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2531395   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2531396   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2531397   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2531398   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2531399   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2531400   +end;
MPRINT(EM_DIAGRAM):   end;
2531401   +else do;
MPRINT(EM_DIAGRAM):   else do;
2531402   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2531403   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2531404   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2531405   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2531406   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2531407   +   end;
MPRINT(EM_DIAGRAM):   end;
2531408   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2531409   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2531410   +   end;
MPRINT(EM_DIAGRAM):   end;
2531411   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2531412   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2531413   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2531414   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2531415   +   end;
MPRINT(EM_DIAGRAM):   end;
2531416   +end;
MPRINT(EM_DIAGRAM):   end;
2531417   +
2531418   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2531419   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2531420   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2531421   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2531422   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2531423   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2531424   +end;
MPRINT(EM_DIAGRAM):   end;
2531425   +else do;
MPRINT(EM_DIAGRAM):   else do;
2531426   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2531427   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2531428   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2531429   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2531430   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2531431   +   end;
MPRINT(EM_DIAGRAM):   end;
2531432   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2531433   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2531434   +   end;
MPRINT(EM_DIAGRAM):   end;
2531435   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2531436   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2531437   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2531438   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2531439   +   end;
MPRINT(EM_DIAGRAM):   end;
2531440   +end;
MPRINT(EM_DIAGRAM):   end;
2531441   +
2531442   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2531443   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2531444   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2531445   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2531446   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2531447   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2531448   +end;
MPRINT(EM_DIAGRAM):   end;
2531449   +else do;
MPRINT(EM_DIAGRAM):   else do;
2531450   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2531451   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2531452   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2531453   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2531454   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2531455   +   end;
MPRINT(EM_DIAGRAM):   end;
2531456   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2531457   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2531458   +   end;
MPRINT(EM_DIAGRAM):   end;
2531459   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2531460   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2531461   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2531462   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2531463   +   end;
MPRINT(EM_DIAGRAM):   end;
2531464   +end;
MPRINT(EM_DIAGRAM):   end;
2531465   +
2531466   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2531467   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2531468   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2531469   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2531470   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2531471   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2531472   +end;
MPRINT(EM_DIAGRAM):   end;
2531473   +else do;
MPRINT(EM_DIAGRAM):   else do;
2531474   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2531475   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2531476   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2531477   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2531478   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2531479   +   end;
MPRINT(EM_DIAGRAM):   end;
2531480   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2531481   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2531482   +   end;
MPRINT(EM_DIAGRAM):   end;
2531483   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2531484   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2531485   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2531486   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2531487   +   end;
MPRINT(EM_DIAGRAM):   end;
2531488   +end;
MPRINT(EM_DIAGRAM):   end;
2531489   +
2531490   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2531491   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2531492   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2531493   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2531494   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2531495   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2531496   +end;
MPRINT(EM_DIAGRAM):   end;
2531497   +else do;
MPRINT(EM_DIAGRAM):   else do;
2531498   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2531499   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2531500   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2531501   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2531502   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2531503   +   end;
MPRINT(EM_DIAGRAM):   end;
2531504   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2531505   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2531506   +   end;
MPRINT(EM_DIAGRAM):   end;
2531507   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2531508   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2531509   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2531510   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2531511   +   end;
MPRINT(EM_DIAGRAM):   end;
2531512   +end;
MPRINT(EM_DIAGRAM):   end;
2531513   +
2531514   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2531515   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2531516   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2531517   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2531518   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2531519   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2531520   +end;
MPRINT(EM_DIAGRAM):   end;
2531521   +else do;
MPRINT(EM_DIAGRAM):   else do;
2531522   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2531523   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2531524   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2531525   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2531526   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2531527   +   end;
MPRINT(EM_DIAGRAM):   end;
2531528   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2531529   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2531530   +   end;
MPRINT(EM_DIAGRAM):   end;
2531531   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2531532   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2531533   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2531534   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2531535   +   end;
MPRINT(EM_DIAGRAM):   end;
2531536   +end;
MPRINT(EM_DIAGRAM):   end;
2531537   +
2531538   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
2531539   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
2531540   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
2531541   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2531542   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2531543   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2531544   +end;
MPRINT(EM_DIAGRAM):   end;
2531545   +else do;
MPRINT(EM_DIAGRAM):   else do;
2531546   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2531547   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
2531548   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2531549   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
2531550   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
2531551   +   end;
MPRINT(EM_DIAGRAM):   end;
2531552   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
2531553   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
2531554   +   end;
MPRINT(EM_DIAGRAM):   end;
2531555   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2531556   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2531557   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2531558   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2531559   +   end;
MPRINT(EM_DIAGRAM):   end;
2531560   +end;
MPRINT(EM_DIAGRAM):   end;
2531561   +
2531562   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2531563   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
2531564   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2531565   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2531566   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2531567   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2531568   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2531569   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2531570   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2531571   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2531572   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2531573   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2531574   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2531575   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2531576   +end;
MPRINT(EM_DIAGRAM):   end;
2531577   +else do;
MPRINT(EM_DIAGRAM):   else do;
2531578   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2531579   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2531580   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2531581   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2531582   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2531583   +   end;
MPRINT(EM_DIAGRAM):   end;
2531584   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2531585   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2531586   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2531587   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2531588   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2531589   +   end;
MPRINT(EM_DIAGRAM):   end;
2531590   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2531591   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2531592   +   end;
MPRINT(EM_DIAGRAM):   end;
2531593   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2531594   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2531595   +   end;
MPRINT(EM_DIAGRAM):   end;
2531596   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2531597   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2531598   +   end;
MPRINT(EM_DIAGRAM):   end;
2531599   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2531600   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2531601   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2531602   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2531603   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2531604   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2531605   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2531606   +   end;
MPRINT(EM_DIAGRAM):   end;
2531607   +end;
MPRINT(EM_DIAGRAM):   end;
2531608   +
2531609   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2531610   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2531611   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
2531612   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2531613   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2531614   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2531615   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2531616   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2531617   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2531618   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2531619   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2531620   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2531621   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2531622   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2531623   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2531624   +end;
MPRINT(EM_DIAGRAM):   end;
2531625   +else do;
MPRINT(EM_DIAGRAM):   else do;
2531626   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2531627   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2531628   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2531629   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2531630   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2531631   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2531632   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2531633   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2531634   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2531635   +         end;
MPRINT(EM_DIAGRAM):   end;
2531636   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2531637   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2531638   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2531639   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2531640   +            end;
MPRINT(EM_DIAGRAM):   end;
2531641   +         end;
MPRINT(EM_DIAGRAM):   end;
2531642   +      end;
MPRINT(EM_DIAGRAM):   end;
2531643   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2531644   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2531645   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2531646   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2531647   +         end;
MPRINT(EM_DIAGRAM):   end;
2531648   +      end;
MPRINT(EM_DIAGRAM):   end;
2531649   +   end;
MPRINT(EM_DIAGRAM):   end;
2531650   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2531651   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2531652   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2531653   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2531654   +      end;
MPRINT(EM_DIAGRAM):   end;
2531655   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2531656   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2531657   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2531658   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2531659   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2531660   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2531661   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2531662   +         end;
MPRINT(EM_DIAGRAM):   end;
2531663   +      end;
MPRINT(EM_DIAGRAM):   end;
2531664   +   end;
MPRINT(EM_DIAGRAM):   end;
2531665   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2531666   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2531667   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2531668   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2531669   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2531670   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2531671   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2531672   +   end;
MPRINT(EM_DIAGRAM):   end;
2531673   +end;
MPRINT(EM_DIAGRAM):   end;
2531674   +
2531675   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2531676   +*** Checking missing input Interval
2531677   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2531678   +
2531679   +IF NMISS(
2531680   +   AcceptedCmpTotal ,
2531681   +   Age ,
2531682   +   Frq ,
2531683   +   Income ,
2531684   +   Kidhome ,
2531685   +   Mnt ,
2531686   +   MntFishProducts ,
2531687   +   MntFruits ,
2531688   +   MntGoldProds ,
2531689   +   MntMeatProducts ,
2531690   +   MntSweetProducts ,
2531691   +   MntWines ,
2531692   +   MonthsAsCustomer ,
2531693   +   NumCatalogPurchases ,
2531694   +   NumDealsPurchases ,
2531695   +   NumDistPurchases ,
2531696   +   NumStorePurchases ,
2531697   +   NumWebPurchases ,
2531698   +   NumWebVisitsMonth ,
2531699   +   RFMstat ,
2531700   +   RMntFrq ,
2531701   +   Recency ,
2531702   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
2531703   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2531704   +
2531705   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2531706   +END;
MPRINT(EM_DIAGRAM):   END;
2531707   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2531708   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
2531709   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2531710   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2531711   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2531712   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
2531713   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2531714   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2531715   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2531716   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2531717   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2531718   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2531719   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2531720   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2531721   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2531722   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2531723   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2531724   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
2531725   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2531726   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2531727   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2531728   +   S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2531729   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 *
MonthsAsCustomer ;
2531730   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2531731   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
2531732   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2531733   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2531734   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2531735   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
2531736   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2531737   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
2531738   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2531739   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
2531740   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2531741   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2531742   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2531743   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2531744   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2531745   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2531746   +END;
MPRINT(EM_DIAGRAM):   END;
2531747   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2531748   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2531749   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2531750   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
2531751   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
2531752   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2531753   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
2531754   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2531755   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2531756   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2531757   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2531758   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2531759   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2531760   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2531761   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2531762   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2531763   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2531764   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2531765   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2531766   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2531767   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2531768   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2531769   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
2531770   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2531771   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2531772   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
2531773   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2531774   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2531775   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2531776   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2531777   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2531778   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
2531779   +   ELSE S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2531780   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 *
MonthsAsCustomer ;
2531781   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2531782   +   ELSE S_NumCatalogPurchases
2531783   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2531784   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
2531785   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2531786   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2531787   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2531788   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
2531789   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2531790   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
2531791   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2531792   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2531793   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
2531794   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2531795   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2531796   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
2531797   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2531798   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2531799   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2531800   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2531801   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2531802   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
2531803   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2531804   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2531805   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2531806   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2531807   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2531808   +END;
MPRINT(EM_DIAGRAM):   END;
2531809   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2531810   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
2531811   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2531812   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2531813   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
2531814   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2531815   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2531816   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
2531817   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2531818   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2531819   +   H1x1_1  =     0.26454269681311 * S_AcceptedCmpTotal
2531820   +          +    -0.01281904987956 * S_Age  +    -0.19309516267581 * S_Frq
2531821   +          +    -0.19077579202378 * S_Income  +      0.1806651018562 *
2531822   +        S_Kidhome  +    -0.31002612826472 * S_Mnt  +    -0.05901796512011 *
2531823   +        S_MntFishProducts  +    -0.03760930101165 * S_MntFruits
2531824   +          +     0.01720900715043 * S_MntGoldProds  +     0.21472292961422 *
2531825   +        S_MntMeatProducts  +    -0.02880706568684 * S_MntSweetProducts
2531826   +          +    -0.37993583170844 * S_MntWines  +    -0.00848444156361 *
2531827   +        S_MonthsAsCustomer  +     0.15939611818942 * S_NumCatalogPurchases
2531828   +          +     0.08390531145773 * S_NumDealsPurchases
2531829   +          +    -0.29505970645775 * S_NumDistPurchases
2531830   +          +    -0.13820571170194 * S_NumStorePurchases
2531831   +          +     0.11468011313368 * S_NumWebPurchases
2531832   +          +    -0.18421241371843 * S_NumWebVisitsMonth
2531833   +          +     0.11564064971509 * S_RFMstat  +    -0.02223928001432 *
2531834   +        S_RMntFrq  +     0.18022777532589 * S_Recency
2531835   +          +     0.14654831145379 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.26454269681311 * S_AcceptedCmpTotal + -0.01281904987956 *
S_Age + -0.19309516267581 * S_Frq + -0.19077579202378 * S_Income + 0.1806651018562 * S_Kidhome
+ -0.31002612826472 * S_Mnt + -0.05901796512011 * S_MntFishProducts + -0.03760930101165 *
S_MntFruits + 0.01720900715043 * S_MntGoldProds + 0.21472292961422 * S_MntMeatProducts +
-0.02880706568684 * S_MntSweetProducts + -0.37993583170844 * S_MntWines + -0.00848444156361 *
S_MonthsAsCustomer + 0.15939611818942 * S_NumCatalogPurchases + 0.08390531145773 *
S_NumDealsPurchases + -0.29505970645775 * S_NumDistPurchases + -0.13820571170194 *
S_NumStorePurchases + 0.11468011313368 * S_NumWebPurchases + -0.18421241371843 *
S_NumWebVisitsMonth + 0.11564064971509 * S_RFMstat + -0.02223928001432 * S_RMntFrq +
0.18022777532589 * S_Recency + 0.14654831145379 * S_Teenhome ;
2531836   +   H1x1_2  =     0.27055972468014 * S_AcceptedCmpTotal
2531837   +          +      0.0025862891193 * S_Age  +    -0.07147307366817 * S_Frq
2531838   +          +      0.1883776136263 * S_Income  +    -0.12712510891181 *
2531839   +        S_Kidhome  +    -0.42099927948686 * S_Mnt  +    -0.07047631817862 *
2531840   +        S_MntFishProducts  +    -0.06658475152878 * S_MntFruits
2531841   +          +     0.01943025682869 * S_MntGoldProds  +     0.29481794109465 *
2531842   +        S_MntMeatProducts  +    -0.06573502094591 * S_MntSweetProducts
2531843   +          +    -0.46266722725002 * S_MntWines  +    -0.00472333181469 *
2531844   +        S_MonthsAsCustomer  +     0.35081452017576 * S_NumCatalogPurchases
2531845   +          +     0.18009076035363 * S_NumDealsPurchases
2531846   +          +     0.03853861006587 * S_NumDistPurchases
2531847   +          +    -0.05118063952874 * S_NumStorePurchases
2531848   +          +    -0.03282286120473 * S_NumWebPurchases
2531849   +          +     0.31160900419026 * S_NumWebVisitsMonth
2531850   +          +     0.08027884378429 * S_RFMstat  +     0.39057239541393 *
2531851   +        S_RMntFrq  +    -0.34796767111274 * S_Recency
2531852   +          +    -0.12099758522271 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.27055972468014 * S_AcceptedCmpTotal + 0.0025862891193 * S_Age
+ -0.07147307366817 * S_Frq + 0.1883776136263 * S_Income + -0.12712510891181 * S_Kidhome +
-0.42099927948686 * S_Mnt + -0.07047631817862 * S_MntFishProducts + -0.06658475152878 *
S_MntFruits + 0.01943025682869 * S_MntGoldProds + 0.29481794109465 * S_MntMeatProducts +
-0.06573502094591 * S_MntSweetProducts + -0.46266722725002 * S_MntWines + -0.00472333181469 *
S_MonthsAsCustomer + 0.35081452017576 * S_NumCatalogPurchases + 0.18009076035363 *
S_NumDealsPurchases + 0.03853861006587 * S_NumDistPurchases + -0.05118063952874 *
S_NumStorePurchases + -0.03282286120473 * S_NumWebPurchases + 0.31160900419026 *
S_NumWebVisitsMonth + 0.08027884378429 * S_RFMstat + 0.39057239541393 * S_RMntFrq +
-0.34796767111274 * S_Recency + -0.12099758522271 * S_Teenhome ;
2531853   +   H1x1_1  = H1x1_1  +     0.12539246465239 * AcceptedCmp10
2531854   +          +     0.38473652869745 * AcceptedCmp20  +     0.29820983391886 *
2531855   +        AcceptedCmp30  +     0.29085092779792 * AcceptedCmp40
2531856   +          +     0.18918195914981 * AcceptedCmp50  +    -0.26812516781697 *
2531857   +        Complain0  +    -0.08804110897148 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.12539246465239 * AcceptedCmp10 + 0.38473652869745 *
AcceptedCmp20 + 0.29820983391886 * AcceptedCmp30 + 0.29085092779792 * AcceptedCmp40 +
0.18918195914981 * AcceptedCmp50 + -0.26812516781697 * Complain0 + -0.08804110897148 *
HigherEducationBinary0 ;
2531858   +   H1x1_2  = H1x1_2  +    -0.02312897825565 * AcceptedCmp10
2531859   +          +     0.03909481703523 * AcceptedCmp20  +     0.02531081539721 *
2531860   +        AcceptedCmp30  +     0.03109641300151 * AcceptedCmp40
2531861   +          +     0.01985718189621 * AcceptedCmp50  +     0.13425456375085 *
2531862   +        Complain0  +    -0.08222486590117 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.02312897825565 * AcceptedCmp10 + 0.03909481703523 *
AcceptedCmp20 + 0.02531081539721 * AcceptedCmp30 + 0.03109641300151 * AcceptedCmp40 +
0.01985718189621 * AcceptedCmp50 + 0.13425456375085 * Complain0 + -0.08222486590117 *
HigherEducationBinary0 ;
2531863   +   H1x1_1  = H1x1_1  +    -0.01975862863669 * Education2n_Cycle
2531864   +          +     0.14654730697956 * EducationBasic  +    -0.00459515646452 *
2531865   +        EducationGraduation  +     0.01586948449127 * EducationMaster
2531866   +          +    -0.04750981393889 * Marital_StatusDivorced
2531867   +          +     0.28216925676677 * Marital_StatusMarried
2531868   +          +    -0.20757827413964 * Marital_StatusSingle
2531869   +          +     0.22622509024122 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.01975862863669 * Education2n_Cycle +
0.14654730697956 * EducationBasic + -0.00459515646452 * EducationGraduation + 0.01586948449127
* EducationMaster + -0.04750981393889 * Marital_StatusDivorced + 0.28216925676677 *
Marital_StatusMarried + -0.20757827413964 * Marital_StatusSingle + 0.22622509024122 *
Marital_StatusTogether ;
2531870   +   H1x1_2  = H1x1_2  +     0.12009608969049 * Education2n_Cycle
2531871   +          +     0.01793460710056 * EducationBasic  +    -0.04257710051346 *
2531872   +        EducationGraduation  +    -0.06975725710115 * EducationMaster
2531873   +          +     0.05981919620577 * Marital_StatusDivorced
2531874   +          +    -0.17161573846062 * Marital_StatusMarried
2531875   +          +     0.15869440681091 * Marital_StatusSingle
2531876   +          +    -0.13282372850158 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.12009608969049 * Education2n_Cycle +
0.01793460710056 * EducationBasic + -0.04257710051346 * EducationGraduation +
-0.06975725710115 * EducationMaster + 0.05981919620577 * Marital_StatusDivorced +
-0.17161573846062 * Marital_StatusMarried + 0.15869440681091 * Marital_StatusSingle +
-0.13282372850158 * Marital_StatusTogether ;
2531877   +   H1x1_1  =     0.87962277715971 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.87962277715971 + H1x1_1 ;
2531878   +   H1x1_2  =    -0.62570339696782 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.62570339696782 + H1x1_2 ;
2531879   +   H1x1_1  = SIN(H1x1_1 );
MPRINT(EM_DIAGRAM):   H1x1_1 = SIN(H1x1_1 );
2531880   +   H1x1_2  = SIN(H1x1_2 );
MPRINT(EM_DIAGRAM):   H1x1_2 = SIN(H1x1_2 );
2531881   +END;
MPRINT(EM_DIAGRAM):   END;
2531882   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2531883   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
2531884   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
2531885   +END;
MPRINT(EM_DIAGRAM):   END;
2531886   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2531887   +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
2531888   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2531889   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2531890   +   H1x2_1  =      0.1719390672121 * S_AcceptedCmpTotal
2531891   +          +     0.23586839288361 * S_Age  +    -1.85384134180372 * S_Frq
2531892   +          +    -0.43561758063577 * S_Income  +     -2.5581498901473 *
2531893   +        S_Kidhome  +      1.7031888248428 * S_Mnt  +     0.84982621124736 *
2531894   +        S_MntFishProducts  +     0.25990173458485 * S_MntFruits
2531895   +          +    -2.80730469703961 * S_MntGoldProds  +     0.64923500711702 *
2531896   +        S_MntMeatProducts  +     0.27458645458502 * S_MntSweetProducts
2531897   +          +    -0.47723589182372 * S_MntWines  +    -0.66777488145507 *
2531898   +        S_MonthsAsCustomer  +    -0.46364414558282 * S_NumCatalogPurchases
2531899   +          +     0.00741910846933 * S_NumDealsPurchases
2531900   +          +       1.334289252268 * S_NumDistPurchases
2531901   +          +    -0.29851567180932 * S_NumStorePurchases
2531902   +          +    -0.52115313259666 * S_NumWebPurchases
2531903   +          +     0.93907168501909 * S_NumWebVisitsMonth
2531904   +          +    -0.26126881318451 * S_RFMstat  +     -1.3003763542929 *
2531905   +        S_RMntFrq  +    -0.12807368149309 * S_Recency
2531906   +          +    -0.21296116974623 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.1719390672121 * S_AcceptedCmpTotal + 0.23586839288361 * S_Age
+ -1.85384134180372 * S_Frq + -0.43561758063577 * S_Income + -2.5581498901473 * S_Kidhome +
1.7031888248428 * S_Mnt + 0.84982621124736 * S_MntFishProducts + 0.25990173458485 *
S_MntFruits + -2.80730469703961 * S_MntGoldProds + 0.64923500711702 * S_MntMeatProducts +
0.27458645458502 * S_MntSweetProducts + -0.47723589182372 * S_MntWines + -0.66777488145507 *
S_MonthsAsCustomer + -0.46364414558282 * S_NumCatalogPurchases + 0.00741910846933 *
S_NumDealsPurchases + 1.334289252268 * S_NumDistPurchases + -0.29851567180932 *
S_NumStorePurchases + -0.52115313259666 * S_NumWebPurchases + 0.93907168501909 *
S_NumWebVisitsMonth + -0.26126881318451 * S_RFMstat + -1.3003763542929 * S_RMntFrq +
-0.12807368149309 * S_Recency + -0.21296116974623 * S_Teenhome ;
2531907   +   H1x2_2  =     0.30897763700303 * S_AcceptedCmpTotal
2531908   +          +    -0.77727886396317 * S_Age  +    -0.79298582494973 * S_Frq
2531909   +          +    -1.73199353738093 * S_Income  +     1.12984956989288 *
2531910   +        S_Kidhome  +    -1.36701096993984 * S_Mnt  +    -0.21063950702424 *
2531911   +        S_MntFishProducts  +    -0.20027336686257 * S_MntFruits
2531912   +          +    -0.06955810418489 * S_MntGoldProds  +     0.16672767423533 *
2531913   +        S_MntMeatProducts  +    -1.56675269740541 * S_MntSweetProducts
2531914   +          +     1.85366479127485 * S_MntWines  +    -0.58178621903094 *
2531915   +        S_MonthsAsCustomer  +     1.31024619253935 * S_NumCatalogPurchases
2531916   +          +     1.60427001186844 * S_NumDealsPurchases
2531917   +          +    -0.18447618033353 * S_NumDistPurchases
2531918   +          +    -1.29966073003539 * S_NumStorePurchases
2531919   +          +    -1.12373457341536 * S_NumWebPurchases
2531920   +          +     1.46099221440494 * S_NumWebVisitsMonth
2531921   +          +     0.17795038564406 * S_RFMstat  +    -0.82372068140832 *
2531922   +        S_RMntFrq  +      0.4480370534729 * S_Recency
2531923   +          +     0.19272737691538 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 0.30897763700303 * S_AcceptedCmpTotal + -0.77727886396317 *
S_Age + -0.79298582494973 * S_Frq + -1.73199353738093 * S_Income + 1.12984956989288 *
S_Kidhome + -1.36701096993984 * S_Mnt + -0.21063950702424 * S_MntFishProducts +
-0.20027336686257 * S_MntFruits + -0.06955810418489 * S_MntGoldProds + 0.16672767423533 *
S_MntMeatProducts + -1.56675269740541 * S_MntSweetProducts + 1.85366479127485 * S_MntWines +
-0.58178621903094 * S_MonthsAsCustomer + 1.31024619253935 * S_NumCatalogPurchases +
1.60427001186844 * S_NumDealsPurchases + -0.18447618033353 * S_NumDistPurchases +
-1.29966073003539 * S_NumStorePurchases + -1.12373457341536 * S_NumWebPurchases +
1.46099221440494 * S_NumWebVisitsMonth + 0.17795038564406 * S_RFMstat + -0.82372068140832 *
S_RMntFrq + 0.4480370534729 * S_Recency + 0.19272737691538 * S_Teenhome ;
2531924   +   H1x2_1  = H1x2_1  +     -0.6569942252053 * AcceptedCmp10
2531925   +          +    -0.89152555599538 * AcceptedCmp20  +     1.00488730476017 *
2531926   +        AcceptedCmp30  +     0.34286042692068 * AcceptedCmp40
2531927   +          +    -1.19198820362508 * AcceptedCmp50  +    -0.86571531914686 *
2531928   +        Complain0  +     0.14303136037365 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.6569942252053 * AcceptedCmp10 + -0.89152555599538 *
AcceptedCmp20 + 1.00488730476017 * AcceptedCmp30 + 0.34286042692068 * AcceptedCmp40 +
-1.19198820362508 * AcceptedCmp50 + -0.86571531914686 * Complain0 + 0.14303136037365 *
HigherEducationBinary0 ;
2531929   +   H1x2_2  = H1x2_2  +     1.79481763784518 * AcceptedCmp10
2531930   +          +    -2.85912280013336 * AcceptedCmp20  +     0.16890012708431 *
2531931   +        AcceptedCmp30  +     0.94639083182751 * AcceptedCmp40
2531932   +          +    -0.62141828005946 * AcceptedCmp50  +    -0.39098882491277 *
2531933   +        Complain0  +     0.85700787946581 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 1.79481763784518 * AcceptedCmp10 + -2.85912280013336 *
AcceptedCmp20 + 0.16890012708431 * AcceptedCmp30 + 0.94639083182751 * AcceptedCmp40 +
-0.62141828005946 * AcceptedCmp50 + -0.39098882491277 * Complain0 + 0.85700787946581 *
HigherEducationBinary0 ;
2531934   +   H1x2_1  = H1x2_1  +      0.0737054452993 * Education2n_Cycle
2531935   +          +       0.362372261752 * EducationBasic  +      -1.485941295677 *
2531936   +        EducationGraduation  +    -0.81257694655594 * EducationMaster
2531937   +          +     0.59819559998538 * Marital_StatusDivorced
2531938   +          +     0.92957772553633 * Marital_StatusMarried
2531939   +          +    -1.11796266958894 * Marital_StatusSingle
2531940   +          +     -2.0576132087002 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 0.0737054452993 * Education2n_Cycle + 0.362372261752 *
EducationBasic + -1.485941295677 * EducationGraduation + -0.81257694655594 * EducationMaster +
0.59819559998538 * Marital_StatusDivorced + 0.92957772553633 * Marital_StatusMarried +
-1.11796266958894 * Marital_StatusSingle + -2.0576132087002 * Marital_StatusTogether ;
2531941   +   H1x2_2  = H1x2_2  +    -1.10016528859962 * Education2n_Cycle
2531942   +          +    -1.46816646165468 * EducationBasic  +    -0.11241499152788 *
2531943   +        EducationGraduation  +    -0.65110715251273 * EducationMaster
2531944   +          +      1.0870909562212 * Marital_StatusDivorced
2531945   +          +     1.50333961797515 * Marital_StatusMarried
2531946   +          +    -1.41407780765932 * Marital_StatusSingle
2531947   +          +    -0.52528072358697 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -1.10016528859962 * Education2n_Cycle +
-1.46816646165468 * EducationBasic + -0.11241499152788 * EducationGraduation +
-0.65110715251273 * EducationMaster + 1.0870909562212 * Marital_StatusDivorced +
1.50333961797515 * Marital_StatusMarried + -1.41407780765932 * Marital_StatusSingle +
-0.52528072358697 * Marital_StatusTogether ;
2531948   +   H1x2_1  =     1.46376024534028 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.46376024534028 + H1x2_1 ;
2531949   +   H1x2_2  =    -0.21341526379366 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -0.21341526379366 + H1x2_2 ;
2531950   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
2531951   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
2531952   +   H1x2_1  = EXP(MIN(-0.5 * H1x2_1 **2, _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x2_1 = EXP(MIN(-0.5 * H1x2_1 **2, _EXP_BAR));
2531953   +   H1x2_2  = EXP(MIN(-0.5 * H1x2_2 **2, _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x2_2 = EXP(MIN(-0.5 * H1x2_2 **2, _EXP_BAR));
2531954   +END;
MPRINT(EM_DIAGRAM):   END;
2531955   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2531956   +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
2531957   +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
2531958   +END;
MPRINT(EM_DIAGRAM):   END;
2531959   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2531960   +*** Writing the Node H1x3_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x3_ ;
2531961   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2531962   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2531963   +   H1x3_1  =     0.29299707972123 * S_AcceptedCmpTotal
2531964   +          +     1.39797329466471 * S_Age  +    -2.02673480388837 * S_Frq
2531965   +          +    -1.09682777516542 * S_Income  +    -1.22241109888643 *
2531966   +        S_Kidhome  +    -1.35766076466324 * S_Mnt  +    -2.90812690982576 *
2531967   +        S_MntFishProducts  +    -0.48174923069843 * S_MntFruits
2531968   +          +     1.57335575145195 * S_MntGoldProds  +    -0.55248873552176 *
2531969   +        S_MntMeatProducts  +     0.54536808091745 * S_MntSweetProducts
2531970   +          +    -0.41516162035296 * S_MntWines  +     0.07715050596116 *
2531971   +        S_MonthsAsCustomer  +    -2.18785324142159 * S_NumCatalogPurchases
2531972   +          +     -1.1174504455343 * S_NumDealsPurchases
2531973   +          +    -0.18561253113498 * S_NumDistPurchases
2531974   +          +    -0.35231054612792 * S_NumStorePurchases
2531975   +          +      0.9249490354172 * S_NumWebPurchases
2531976   +          +    -0.79868535147175 * S_NumWebVisitsMonth
2531977   +          +    -0.17158151681124 * S_RFMstat  +     -0.9870286843901 *
2531978   +        S_RMntFrq  +     0.62439123699986 * S_Recency
2531979   +          +    -0.45845377794308 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 0.29299707972123 * S_AcceptedCmpTotal + 1.39797329466471 *
S_Age + -2.02673480388837 * S_Frq + -1.09682777516542 * S_Income + -1.22241109888643 *
S_Kidhome + -1.35766076466324 * S_Mnt + -2.90812690982576 * S_MntFishProducts +
-0.48174923069843 * S_MntFruits + 1.57335575145195 * S_MntGoldProds + -0.55248873552176 *
S_MntMeatProducts + 0.54536808091745 * S_MntSweetProducts + -0.41516162035296 * S_MntWines +
0.07715050596116 * S_MonthsAsCustomer + -2.18785324142159 * S_NumCatalogPurchases +
-1.1174504455343 * S_NumDealsPurchases + -0.18561253113498 * S_NumDistPurchases +
-0.35231054612792 * S_NumStorePurchases + 0.9249490354172 * S_NumWebPurchases +
-0.79868535147175 * S_NumWebVisitsMonth + -0.17158151681124 * S_RFMstat + -0.9870286843901 *
S_RMntFrq + 0.62439123699986 * S_Recency + -0.45845377794308 * S_Teenhome ;
2531980   +   H1x3_2  =    -1.07483179793421 * S_AcceptedCmpTotal
2531981   +          +     1.03558600048684 * S_Age  +     1.11497695424161 * S_Frq
2531982   +          +     0.27297296926116 * S_Income  +     0.77036019999023 *
2531983   +        S_Kidhome  +     0.02567848304605 * S_Mnt  +     0.38661977628442 *
2531984   +        S_MntFishProducts  +    -0.36751750771945 * S_MntFruits
2531985   +          +     0.93924107558212 * S_MntGoldProds  +     0.93046859422523 *
2531986   +        S_MntMeatProducts  +    -0.46124679979068 * S_MntSweetProducts
2531987   +          +    -0.45348234529786 * S_MntWines  +     1.60057890623864 *
2531988   +        S_MonthsAsCustomer  +    -1.74657448073162 * S_NumCatalogPurchases
2531989   +          +     1.05434863590054 * S_NumDealsPurchases
2531990   +          +    -0.73255174632068 * S_NumDistPurchases
2531991   +          +     0.53949953455044 * S_NumStorePurchases
2531992   +          +    -0.61709467816649 * S_NumWebPurchases
2531993   +          +     1.36235282484348 * S_NumWebVisitsMonth
2531994   +          +     -0.0352720913953 * S_RFMstat  +     0.14001475375682 *
2531995   +        S_RMntFrq  +    -0.24276831608869 * S_Recency
2531996   +          +     0.09762798365722 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_2 = -1.07483179793421 * S_AcceptedCmpTotal + 1.03558600048684 *
S_Age + 1.11497695424161 * S_Frq + 0.27297296926116 * S_Income + 0.77036019999023 * S_Kidhome
+ 0.02567848304605 * S_Mnt + 0.38661977628442 * S_MntFishProducts + -0.36751750771945 *
S_MntFruits + 0.93924107558212 * S_MntGoldProds + 0.93046859422523 * S_MntMeatProducts +
-0.46124679979068 * S_MntSweetProducts + -0.45348234529786 * S_MntWines + 1.60057890623864 *
S_MonthsAsCustomer + -1.74657448073162 * S_NumCatalogPurchases + 1.05434863590054 *
S_NumDealsPurchases + -0.73255174632068 * S_NumDistPurchases + 0.53949953455044 *
S_NumStorePurchases + -0.61709467816649 * S_NumWebPurchases + 1.36235282484348 *
S_NumWebVisitsMonth + -0.0352720913953 * S_RFMstat + 0.14001475375682 * S_RMntFrq +
-0.24276831608869 * S_Recency + 0.09762798365722 * S_Teenhome ;
2531997   +   H1x3_1  = H1x3_1  +    -0.94208577947628 * AcceptedCmp10
2531998   +          +     -0.5233017415423 * AcceptedCmp20  +    -0.76900164563331 *
2531999   +        AcceptedCmp30  +    -0.79512141055877 * AcceptedCmp40
2532000   +          +     0.20126599116957 * AcceptedCmp50  +    -0.43046555689873 *
2532001   +        Complain0  +     0.31565229685815 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + -0.94208577947628 * AcceptedCmp10 + -0.5233017415423 *
AcceptedCmp20 + -0.76900164563331 * AcceptedCmp30 + -0.79512141055877 * AcceptedCmp40 +
0.20126599116957 * AcceptedCmp50 + -0.43046555689873 * Complain0 + 0.31565229685815 *
HigherEducationBinary0 ;
2532002   +   H1x3_2  = H1x3_2  +    -1.24961064002454 * AcceptedCmp10
2532003   +          +    -0.89859693224833 * AcceptedCmp20  +     1.15884958881232 *
2532004   +        AcceptedCmp30  +     0.38250389164472 * AcceptedCmp40
2532005   +          +     0.47123004358879 * AcceptedCmp50  +     -2.1232679844098 *
2532006   +        Complain0  +     0.97226091069674 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 + -1.24961064002454 * AcceptedCmp10 + -0.89859693224833
* AcceptedCmp20 + 1.15884958881232 * AcceptedCmp30 + 0.38250389164472 * AcceptedCmp40 +
0.47123004358879 * AcceptedCmp50 + -2.1232679844098 * Complain0 + 0.97226091069674 *
HigherEducationBinary0 ;
2532007   +   H1x3_1  = H1x3_1  +    -0.07500306665919 * Education2n_Cycle
2532008   +          +     0.04122924311058 * EducationBasic  +    -0.49410102102951 *
2532009   +        EducationGraduation  +    -0.45477734340809 * EducationMaster
2532010   +          +     0.22253248036322 * Marital_StatusDivorced
2532011   +          +    -1.72455332745001 * Marital_StatusMarried
2532012   +          +     0.57787272107232 * Marital_StatusSingle
2532013   +          +     0.16267074825086 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + -0.07500306665919 * Education2n_Cycle +
0.04122924311058 * EducationBasic + -0.49410102102951 * EducationGraduation +
-0.45477734340809 * EducationMaster + 0.22253248036322 * Marital_StatusDivorced +
-1.72455332745001 * Marital_StatusMarried + 0.57787272107232 * Marital_StatusSingle +
0.16267074825086 * Marital_StatusTogether ;
2532014   +   H1x3_2  = H1x3_2  +    -0.21560233542581 * Education2n_Cycle
2532015   +          +    -0.36476815429069 * EducationBasic  +     1.63334881201349 *
2532016   +        EducationGraduation  +    -1.12620982139344 * EducationMaster
2532017   +          +     0.14637124403046 * Marital_StatusDivorced
2532018   +          +     0.18905186437528 * Marital_StatusMarried
2532019   +          +     0.00511958458521 * Marital_StatusSingle
2532020   +          +      -0.915980703129 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 + -0.21560233542581 * Education2n_Cycle +
-0.36476815429069 * EducationBasic + 1.63334881201349 * EducationGraduation +
-1.12620982139344 * EducationMaster + 0.14637124403046 * Marital_StatusDivorced +
0.18905186437528 * Marital_StatusMarried + 0.00511958458521 * Marital_StatusSingle +
-0.915980703129 * Marital_StatusTogether ;
2532021   +   H1x3_1  =     0.54853846322055 + H1x3_1 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 0.54853846322055 + H1x3_1 ;
2532022   +   H1x3_2  =     1.36395858099198 + H1x3_2 ;
MPRINT(EM_DIAGRAM):   H1x3_2 = 1.36395858099198 + H1x3_2 ;
2532023   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
2532024   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
2532025   +   H1x3_1  = EXP(MIN(H1x3_1 , _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x3_1 = EXP(MIN(H1x3_1 , _EXP_BAR));
2532026   +   H1x3_2  = EXP(MIN(H1x3_2 , _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x3_2 = EXP(MIN(H1x3_2 , _EXP_BAR));
2532027   +END;
MPRINT(EM_DIAGRAM):   END;
2532028   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2532029   +   H1x3_1  = .;
MPRINT(EM_DIAGRAM):   H1x3_1 = .;
2532030   +   H1x3_2  = .;
MPRINT(EM_DIAGRAM):   H1x3_2 = .;
2532031   +END;
MPRINT(EM_DIAGRAM):   END;
The SAS System
 
2532032   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2532033   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2532034   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2532035   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2532036   +   P_DepVar1  =    -10.6892993503201 * H1x1_1  +     16.2938756734008 * H1x1_2
2532037   +         ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -10.6892993503201 * H1x1_1 + 16.2938756734008 * H1x1_2 ;
2532038   +   P_DepVar1  = P_DepVar1  +      1.2332183930826 * H1x2_1
2532039   +          +    -0.85206858106106 * H1x2_2 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 + 1.2332183930826 * H1x2_1 + -0.85206858106106 *
H1x2_2 ;
2532040   +   P_DepVar1  = P_DepVar1  +    -0.00087126688031 * H1x3_1
2532041   +          +    -0.00025812675645 * H1x3_2 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 + -0.00087126688031 * H1x3_1 + -0.00025812675645 *
H1x3_2 ;
2532042   +   P_DepVar1  =     2.20710379818135 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 2.20710379818135 + P_DepVar1 ;
2532043   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2532044   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2532045   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2532046   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2532047   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2532048   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2532049   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2532050   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2532051   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2532052   +END;
MPRINT(EM_DIAGRAM):   END;
2532053   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2532054   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2532055   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2532056   +END;
MPRINT(EM_DIAGRAM):   END;
2532057   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2532058   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2532059   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2532060   +END;
MPRINT(EM_DIAGRAM):   END;
2532061   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2532062   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2532063   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2532064   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2532065   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2532066   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2532067   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2532068   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2532069   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2532070   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2532071   +END;
MPRINT(EM_DIAGRAM):   END;
2532072   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2532073   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2532074   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2532075   +drop
2532076   +H1x1_1
2532077   +H1x1_2
2532078   +H1x2_1
2532079   +H1x2_2
2532080   +H1x3_1
2532081   +H1x3_2
2532082   +;
MPRINT(EM_DIAGRAM):   drop H1x1_1 H1x1_2 H1x2_1 H1x2_2 H1x3_1 H1x3_2 ;
2532083   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
2532084   +* Renaming variables for AutoNeural7;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural7;
2532085   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2532086   +* Renaming Posterior variables for AutoNeural7;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural7;
2532087   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2532088   +drop AutoNeural7_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural7_P_DepVar1;
2532089   +AutoNeural7_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural7_P_DepVar1 = P_DepVar1;
2532090   +drop AutoNeural7_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural7_P_DepVar0;
2532091   +AutoNeural7_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural7_P_DepVar0 = P_DepVar0;
2532092   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2532093   +* Renaming _WARN_ variable for AutoNeural7;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural7;
2532094   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2532095   +length AutoNeural7_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural7_WARN_ $4;
2532096   +drop AutoNeural7_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural7_WARN_;
2532097   +AutoNeural7_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural7_WARN_ = _WARN_;
2532098   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2532099   +* Ensmbl36: Scoring Code of model 3 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl36: Scoring Code of model 3 of 7;
2532100   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2532101   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2532102   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
2532103   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
2532104   +* NODE: AutoNeural8;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural8;
2532105   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2532106   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2532107   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2532108   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2532109   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2532110   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2532111   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2532112   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2532113   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2532114   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2532115   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2532116   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2532117   +LENGTH _WARN_ $4
2532118   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
2532119   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2532120   +
2532121   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
2532122   +
2532123   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
2532124   +
2532125   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2532126   +
2532127   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2532128   +
2532129   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2532130   +
2532131   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2532132   +
2532133   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2532134   +
2532135   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2532136   +
2532137   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2532138   +
2532139   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2532140   +
2532141   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2532142   +
2532143   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
2532144   +
2532145   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2532146   +
2532147   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2532148   +
2532149   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
2532150   +
2532151   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2532152   +
2532153   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2532154   +
2532155   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2532156   +
2532157   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2532158   +
2532159   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
2532160   +
2532161   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2532162   +
2532163   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2532164   +
2532165   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2532166   +
2532167   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2532168   +
2532169   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2532170   +
2532171   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2532172   +
2532173   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2532174   +
2532175   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2532176   +
2532177   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
2532178   +
2532179   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2532180   +
2532181   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2532182   +
2532183   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2532184   +
2532185   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2532186   +
2532187   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2532188   +
2532189   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2532190   +
2532191   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2532192   +
2532193   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2532194   +
2532195   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
2532196   +
2532197   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
2532198   +
2532199   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
2532200   +
2532201   +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
2532202   +
2532203   +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
2532204   +
2532205   +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
2532206   +
2532207   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2532208   +
2532209   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2532210   +
2532211   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2532212   +
2532213   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2532214   +
2532215   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2532216   +
2532217   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2532218   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2532219   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2532220   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2532221   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2532222   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2532223   +end;
MPRINT(EM_DIAGRAM):   end;
2532224   +else do;
MPRINT(EM_DIAGRAM):   else do;
2532225   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2532226   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2532227   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2532228   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2532229   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2532230   +   end;
MPRINT(EM_DIAGRAM):   end;
2532231   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2532232   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2532233   +   end;
MPRINT(EM_DIAGRAM):   end;
2532234   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2532235   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2532236   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2532237   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2532238   +   end;
MPRINT(EM_DIAGRAM):   end;
2532239   +end;
MPRINT(EM_DIAGRAM):   end;
2532240   +
2532241   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2532242   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2532243   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2532244   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2532245   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2532246   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2532247   +end;
MPRINT(EM_DIAGRAM):   end;
2532248   +else do;
MPRINT(EM_DIAGRAM):   else do;
2532249   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2532250   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2532251   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2532252   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2532253   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2532254   +   end;
MPRINT(EM_DIAGRAM):   end;
2532255   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2532256   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2532257   +   end;
MPRINT(EM_DIAGRAM):   end;
2532258   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2532259   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2532260   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2532261   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2532262   +   end;
MPRINT(EM_DIAGRAM):   end;
2532263   +end;
MPRINT(EM_DIAGRAM):   end;
2532264   +
2532265   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2532266   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2532267   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2532268   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2532269   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2532270   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2532271   +end;
MPRINT(EM_DIAGRAM):   end;
2532272   +else do;
MPRINT(EM_DIAGRAM):   else do;
2532273   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2532274   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2532275   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2532276   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2532277   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2532278   +   end;
MPRINT(EM_DIAGRAM):   end;
2532279   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2532280   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2532281   +   end;
MPRINT(EM_DIAGRAM):   end;
2532282   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2532283   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2532284   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2532285   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2532286   +   end;
MPRINT(EM_DIAGRAM):   end;
2532287   +end;
MPRINT(EM_DIAGRAM):   end;
2532288   +
2532289   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2532290   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2532291   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2532292   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2532293   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2532294   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2532295   +end;
MPRINT(EM_DIAGRAM):   end;
2532296   +else do;
MPRINT(EM_DIAGRAM):   else do;
2532297   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2532298   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2532299   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2532300   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2532301   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2532302   +   end;
MPRINT(EM_DIAGRAM):   end;
2532303   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2532304   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2532305   +   end;
MPRINT(EM_DIAGRAM):   end;
2532306   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2532307   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2532308   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2532309   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2532310   +   end;
MPRINT(EM_DIAGRAM):   end;
2532311   +end;
MPRINT(EM_DIAGRAM):   end;
2532312   +
2532313   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2532314   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2532315   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2532316   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2532317   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2532318   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2532319   +end;
MPRINT(EM_DIAGRAM):   end;
2532320   +else do;
MPRINT(EM_DIAGRAM):   else do;
2532321   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2532322   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2532323   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2532324   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2532325   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2532326   +   end;
MPRINT(EM_DIAGRAM):   end;
2532327   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2532328   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2532329   +   end;
MPRINT(EM_DIAGRAM):   end;
2532330   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2532331   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2532332   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2532333   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2532334   +   end;
MPRINT(EM_DIAGRAM):   end;
2532335   +end;
MPRINT(EM_DIAGRAM):   end;
2532336   +
2532337   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2532338   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2532339   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2532340   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2532341   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2532342   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2532343   +end;
MPRINT(EM_DIAGRAM):   end;
2532344   +else do;
MPRINT(EM_DIAGRAM):   else do;
2532345   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2532346   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2532347   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2532348   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2532349   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2532350   +   end;
MPRINT(EM_DIAGRAM):   end;
2532351   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2532352   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2532353   +   end;
MPRINT(EM_DIAGRAM):   end;
2532354   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2532355   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2532356   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2532357   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2532358   +   end;
MPRINT(EM_DIAGRAM):   end;
2532359   +end;
MPRINT(EM_DIAGRAM):   end;
2532360   +
2532361   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
2532362   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
2532363   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
2532364   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2532365   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2532366   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2532367   +end;
MPRINT(EM_DIAGRAM):   end;
2532368   +else do;
MPRINT(EM_DIAGRAM):   else do;
2532369   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2532370   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
2532371   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2532372   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
2532373   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
2532374   +   end;
MPRINT(EM_DIAGRAM):   end;
2532375   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
2532376   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
2532377   +   end;
MPRINT(EM_DIAGRAM):   end;
2532378   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2532379   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2532380   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2532381   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2532382   +   end;
MPRINT(EM_DIAGRAM):   end;
2532383   +end;
MPRINT(EM_DIAGRAM):   end;
2532384   +
2532385   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2532386   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
2532387   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2532388   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2532389   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2532390   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2532391   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2532392   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2532393   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2532394   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2532395   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2532396   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2532397   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2532398   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2532399   +end;
MPRINT(EM_DIAGRAM):   end;
2532400   +else do;
MPRINT(EM_DIAGRAM):   else do;
2532401   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2532402   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2532403   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2532404   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2532405   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2532406   +   end;
MPRINT(EM_DIAGRAM):   end;
2532407   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2532408   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2532409   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2532410   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2532411   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2532412   +   end;
MPRINT(EM_DIAGRAM):   end;
2532413   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2532414   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2532415   +   end;
MPRINT(EM_DIAGRAM):   end;
2532416   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2532417   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2532418   +   end;
MPRINT(EM_DIAGRAM):   end;
2532419   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2532420   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2532421   +   end;
MPRINT(EM_DIAGRAM):   end;
2532422   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2532423   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2532424   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2532425   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2532426   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2532427   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2532428   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2532429   +   end;
MPRINT(EM_DIAGRAM):   end;
2532430   +end;
MPRINT(EM_DIAGRAM):   end;
2532431   +
2532432   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2532433   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2532434   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
2532435   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2532436   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2532437   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2532438   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2532439   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2532440   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2532441   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2532442   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2532443   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2532444   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2532445   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2532446   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2532447   +end;
MPRINT(EM_DIAGRAM):   end;
2532448   +else do;
MPRINT(EM_DIAGRAM):   else do;
2532449   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2532450   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2532451   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2532452   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2532453   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2532454   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2532455   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2532456   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2532457   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2532458   +         end;
MPRINT(EM_DIAGRAM):   end;
2532459   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2532460   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2532461   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2532462   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2532463   +            end;
MPRINT(EM_DIAGRAM):   end;
2532464   +         end;
MPRINT(EM_DIAGRAM):   end;
2532465   +      end;
MPRINT(EM_DIAGRAM):   end;
2532466   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2532467   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2532468   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2532469   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2532470   +         end;
MPRINT(EM_DIAGRAM):   end;
2532471   +      end;
MPRINT(EM_DIAGRAM):   end;
2532472   +   end;
MPRINT(EM_DIAGRAM):   end;
2532473   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2532474   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2532475   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2532476   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2532477   +      end;
MPRINT(EM_DIAGRAM):   end;
2532478   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2532479   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2532480   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2532481   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2532482   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2532483   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2532484   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2532485   +         end;
MPRINT(EM_DIAGRAM):   end;
2532486   +      end;
MPRINT(EM_DIAGRAM):   end;
2532487   +   end;
MPRINT(EM_DIAGRAM):   end;
2532488   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2532489   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2532490   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2532491   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2532492   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2532493   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2532494   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2532495   +   end;
MPRINT(EM_DIAGRAM):   end;
2532496   +end;
MPRINT(EM_DIAGRAM):   end;
2532497   +
2532498   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2532499   +*** Checking missing input Interval
2532500   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2532501   +
2532502   +IF NMISS(
2532503   +   AcceptedCmpTotal ,
2532504   +   Age ,
2532505   +   Frq ,
2532506   +   Income ,
2532507   +   Kidhome ,
2532508   +   Mnt ,
2532509   +   MntFishProducts ,
2532510   +   MntFruits ,
2532511   +   MntGoldProds ,
2532512   +   MntMeatProducts ,
2532513   +   MntSweetProducts ,
2532514   +   MntWines ,
2532515   +   MonthsAsCustomer ,
2532516   +   NumCatalogPurchases ,
2532517   +   NumDealsPurchases ,
2532518   +   NumDistPurchases ,
2532519   +   NumStorePurchases ,
2532520   +   NumWebPurchases ,
2532521   +   NumWebVisitsMonth ,
2532522   +   RFMstat ,
2532523   +   RMntFrq ,
2532524   +   Recency ,
2532525   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
2532526   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2532527   +
2532528   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2532529   +END;
MPRINT(EM_DIAGRAM):   END;
2532530   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2532531   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
2532532   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2532533   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2532534   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2532535   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
2532536   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2532537   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2532538   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2532539   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2532540   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2532541   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2532542   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2532543   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2532544   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2532545   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2532546   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2532547   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
2532548   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2532549   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2532550   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2532551   +   S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2532552   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 *
MonthsAsCustomer ;
2532553   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2532554   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
2532555   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2532556   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2532557   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2532558   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
2532559   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2532560   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
2532561   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2532562   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
2532563   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2532564   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2532565   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2532566   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2532567   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2532568   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2532569   +END;
MPRINT(EM_DIAGRAM):   END;
2532570   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2532571   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2532572   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2532573   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
2532574   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
2532575   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2532576   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
2532577   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2532578   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2532579   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2532580   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2532581   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2532582   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2532583   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2532584   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2532585   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2532586   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2532587   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2532588   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2532589   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2532590   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2532591   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2532592   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
2532593   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2532594   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2532595   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
2532596   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2532597   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2532598   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2532599   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2532600   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2532601   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
2532602   +   ELSE S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2532603   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 *
MonthsAsCustomer ;
2532604   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2532605   +   ELSE S_NumCatalogPurchases
2532606   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2532607   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
2532608   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2532609   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2532610   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2532611   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
2532612   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2532613   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
2532614   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2532615   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2532616   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
2532617   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2532618   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2532619   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
2532620   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2532621   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2532622   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2532623   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2532624   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2532625   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
2532626   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2532627   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2532628   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2532629   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2532630   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2532631   +END;
MPRINT(EM_DIAGRAM):   END;
2532632   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2532633   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
2532634   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2532635   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2532636   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
2532637   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2532638   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2532639   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
2532640   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2532641   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2532642   +   H1x1_1  =      1.2726802048269 * S_AcceptedCmpTotal
2532643   +          +    -0.02889982967357 * S_Age  +    -0.26165770909003 * S_Frq
2532644   +          +     0.19140564299867 * S_Income  +     0.30244335152969 *
2532645   +        S_Kidhome  +    -0.03391217967468 * S_Mnt  +    -0.99943007809307 *
2532646   +        S_MntFishProducts  +    -0.04374917285968 * S_MntFruits
2532647   +          +    -0.13546758294455 * S_MntGoldProds  +     3.59922243619013 *
2532648   +        S_MntMeatProducts  +    -0.10424531322566 * S_MntSweetProducts
2532649   +          +    -1.98884071414703 * S_MntWines  +     0.05310540691138 *
2532650   +        S_MonthsAsCustomer  +     0.58072892654416 * S_NumCatalogPurchases
2532651   +          +     0.30381426454211 * S_NumDealsPurchases
2532652   +          +     0.39966076372974 * S_NumDistPurchases
2532653   +          +    -0.58875986801139 * S_NumStorePurchases
2532654   +          +    -0.78850031558536 * S_NumWebPurchases
2532655   +          +     0.35182997415921 * S_NumWebVisitsMonth
2532656   +          +     1.51048129701176 * S_RFMstat  +     1.13354085492775 *
2532657   +        S_RMntFrq  +     -0.2185811652116 * S_Recency
2532658   +          +     0.01153374704027 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.2726802048269 * S_AcceptedCmpTotal + -0.02889982967357 *
S_Age + -0.26165770909003 * S_Frq + 0.19140564299867 * S_Income + 0.30244335152969 * S_Kidhome
+ -0.03391217967468 * S_Mnt + -0.99943007809307 * S_MntFishProducts + -0.04374917285968 *
S_MntFruits + -0.13546758294455 * S_MntGoldProds + 3.59922243619013 * S_MntMeatProducts +
-0.10424531322566 * S_MntSweetProducts + -1.98884071414703 * S_MntWines + 0.05310540691138 *
S_MonthsAsCustomer + 0.58072892654416 * S_NumCatalogPurchases + 0.30381426454211 *
S_NumDealsPurchases + 0.39966076372974 * S_NumDistPurchases + -0.58875986801139 *
S_NumStorePurchases + -0.78850031558536 * S_NumWebPurchases + 0.35182997415921 *
S_NumWebVisitsMonth + 1.51048129701176 * S_RFMstat + 1.13354085492775 * S_RMntFrq +
-0.2185811652116 * S_Recency + 0.01153374704027 * S_Teenhome ;
2532659   +   H1x1_2  =     0.18093166280015 * S_AcceptedCmpTotal
2532660   +          +    -0.00677564787839 * S_Age  +    -0.21510325598577 * S_Frq
2532661   +          +     0.26314356814214 * S_Income  +    -0.30016454601651 *
2532662   +        S_Kidhome  +     -0.1410547608427 * S_Mnt  +    -0.04272369939478 *
2532663   +        S_MntFishProducts  +    -0.05622578678457 * S_MntFruits
2532664   +          +     0.04457230545618 * S_MntGoldProds  +     0.40709024692944 *
2532665   +        S_MntMeatProducts  +    -0.02989090770621 * S_MntSweetProducts
2532666   +          +    -0.18818656503765 * S_MntWines  +    -0.06237311646922 *
2532667   +        S_MonthsAsCustomer  +     0.39737856936198 * S_NumCatalogPurchases
2532668   +          +     0.33734772994048 * S_NumDealsPurchases
2532669   +          +     0.06152222921422 * S_NumDistPurchases
2532670   +          +    -0.32068333792942 * S_NumStorePurchases
2532671   +          +    -0.26971366415104 * S_NumWebPurchases
2532672   +          +     0.57693239481071 * S_NumWebVisitsMonth
2532673   +          +     0.01161324864777 * S_RFMstat  +     0.00311083015445 *
2532674   +        S_RMntFrq  +    -0.67669007299893 * S_Recency
2532675   +          +     -0.2298426154616 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.18093166280015 * S_AcceptedCmpTotal + -0.00677564787839 *
S_Age + -0.21510325598577 * S_Frq + 0.26314356814214 * S_Income + -0.30016454601651 *
S_Kidhome + -0.1410547608427 * S_Mnt + -0.04272369939478 * S_MntFishProducts +
-0.05622578678457 * S_MntFruits + 0.04457230545618 * S_MntGoldProds + 0.40709024692944 *
S_MntMeatProducts + -0.02989090770621 * S_MntSweetProducts + -0.18818656503765 * S_MntWines +
-0.06237311646922 * S_MonthsAsCustomer + 0.39737856936198 * S_NumCatalogPurchases +
0.33734772994048 * S_NumDealsPurchases + 0.06152222921422 * S_NumDistPurchases +
-0.32068333792942 * S_NumStorePurchases + -0.26971366415104 * S_NumWebPurchases +
0.57693239481071 * S_NumWebVisitsMonth + 0.01161324864777 * S_RFMstat + 0.00311083015445 *
S_RMntFrq + -0.67669007299893 * S_Recency + -0.2298426154616 * S_Teenhome ;
2532676   +   H1x1_3  =    -0.09356212420726 * S_AcceptedCmpTotal
2532677   +          +    -0.01904617704654 * S_Age  +    -0.15700206132472 * S_Frq
2532678   +          +    -0.58483226627076 * S_Income  +     0.30001673574917 *
2532679   +        S_Kidhome  +    -0.19921492301896 * S_Mnt  +    -0.00125986769238 *
2532680   +        S_MntFishProducts  +     0.10195959942937 * S_MntFruits
2532681   +          +      0.0069592628978 * S_MntGoldProds  +     0.03606436199308 *
2532682   +        S_MntMeatProducts  +     0.11259135359155 * S_MntSweetProducts
2532683   +          +     0.05408818612126 * S_MntWines  +    -0.14024859528104 *
2532684   +        S_MonthsAsCustomer  +    -0.14071929240584 * S_NumCatalogPurchases
2532685   +          +     0.22142792900578 * S_NumDealsPurchases
2532686   +          +     -0.0291983445755 * S_NumDistPurchases
2532687   +          +     -0.1997372957954 * S_NumStorePurchases
2532688   +          +    -0.01286201468794 * S_NumWebPurchases
2532689   +          +    -0.35208468552742 * S_NumWebVisitsMonth
2532690   +          +     0.02982651364231 * S_RFMstat  +      0.0228316921695 *
2532691   +        S_RMntFrq  +      0.3930877517629 * S_Recency
2532692   +          +     0.28989829670594 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.09356212420726 * S_AcceptedCmpTotal + -0.01904617704654 *
S_Age + -0.15700206132472 * S_Frq + -0.58483226627076 * S_Income + 0.30001673574917 *
S_Kidhome + -0.19921492301896 * S_Mnt + -0.00125986769238 * S_MntFishProducts +
0.10195959942937 * S_MntFruits + 0.0069592628978 * S_MntGoldProds + 0.03606436199308 *
S_MntMeatProducts + 0.11259135359155 * S_MntSweetProducts + 0.05408818612126 * S_MntWines +
-0.14024859528104 * S_MonthsAsCustomer + -0.14071929240584 * S_NumCatalogPurchases +
0.22142792900578 * S_NumDealsPurchases + -0.0291983445755 * S_NumDistPurchases +
-0.1997372957954 * S_NumStorePurchases + -0.01286201468794 * S_NumWebPurchases +
-0.35208468552742 * S_NumWebVisitsMonth + 0.02982651364231 * S_RFMstat + 0.0228316921695 *
S_RMntFrq + 0.3930877517629 * S_Recency + 0.28989829670594 * S_Teenhome ;
2532693   +   H1x1_1  = H1x1_1  +     0.03659432989123 * AcceptedCmp10
2532694   +          +    -0.12552546530316 * AcceptedCmp20  +     0.57200428680255 *
2532695   +        AcceptedCmp30  +      0.4327465126256 * AcceptedCmp40
2532696   +          +    -1.24484170256212 * AcceptedCmp50  +     0.21604379838869 *
2532697   +        Complain0  +    -0.14986629245585 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.03659432989123 * AcceptedCmp10 + -0.12552546530316 *
AcceptedCmp20 + 0.57200428680255 * AcceptedCmp30 + 0.4327465126256 * AcceptedCmp40 +
-1.24484170256212 * AcceptedCmp50 + 0.21604379838869 * Complain0 + -0.14986629245585 *
HigherEducationBinary0 ;
2532698   +   H1x1_2  = H1x1_2  +    -0.13542589174402 * AcceptedCmp10
2532699   +          +    -0.19116289400292 * AcceptedCmp20  +    -0.10302282473135 *
2532700   +        AcceptedCmp30  +    -0.08705955845916 * AcceptedCmp40
2532701   +          +    -0.17435407626698 * AcceptedCmp50  +    -0.09781790399225 *
2532702   +        Complain0  +     0.02006296587353 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.13542589174402 * AcceptedCmp10 + -0.19116289400292
* AcceptedCmp20 + -0.10302282473135 * AcceptedCmp30 + -0.08705955845916 * AcceptedCmp40 +
-0.17435407626698 * AcceptedCmp50 + -0.09781790399225 * Complain0 + 0.02006296587353 *
HigherEducationBinary0 ;
2532703   +   H1x1_3  = H1x1_3  +     0.08917557424765 * AcceptedCmp10
2532704   +          +    -0.00944366858806 * AcceptedCmp20  +     0.30527409248576 *
2532705   +        AcceptedCmp30  +     0.26823019920335 * AcceptedCmp40
2532706   +          +    -0.02131660897576 * AcceptedCmp50  +    -0.16243659451446 *
2532707   +        Complain0  +    -0.28227689084686 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.08917557424765 * AcceptedCmp10 + -0.00944366858806 *
AcceptedCmp20 + 0.30527409248576 * AcceptedCmp30 + 0.26823019920335 * AcceptedCmp40 +
-0.02131660897576 * AcceptedCmp50 + -0.16243659451446 * Complain0 + -0.28227689084686 *
HigherEducationBinary0 ;
2532708   +   H1x1_1  = H1x1_1  +     0.12998959528304 * Education2n_Cycle
2532709   +          +     0.48334684246109 * EducationBasic  +    -0.07156918649895 *
2532710   +        EducationGraduation  +    -0.21017720550072 * EducationMaster
2532711   +          +    -0.22358326722482 * Marital_StatusDivorced
2532712   +          +     0.09394210085787 * Marital_StatusMarried
2532713   +          +    -0.10381546554982 * Marital_StatusSingle
2532714   +          +     0.05935260608375 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.12998959528304 * Education2n_Cycle +
0.48334684246109 * EducationBasic + -0.07156918649895 * EducationGraduation +
-0.21017720550072 * EducationMaster + -0.22358326722482 * Marital_StatusDivorced +
0.09394210085787 * Marital_StatusMarried + -0.10381546554982 * Marital_StatusSingle +
0.05935260608375 * Marital_StatusTogether ;
2532715   +   H1x1_2  = H1x1_2  +     0.02955854298839 * Education2n_Cycle
2532716   +          +    -0.13472200519398 * EducationBasic  +     0.01930622297518 *
2532717   +        EducationGraduation  +    -0.00188262361226 * EducationMaster
2532718   +          +     0.16606212232833 * Marital_StatusDivorced
2532719   +          +    -0.33252488631677 * Marital_StatusMarried
2532720   +          +     0.26735237322144 * Marital_StatusSingle
2532721   +          +    -0.37056611493683 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.02955854298839 * Education2n_Cycle +
-0.13472200519398 * EducationBasic + 0.01930622297518 * EducationGraduation +
-0.00188262361226 * EducationMaster + 0.16606212232833 * Marital_StatusDivorced +
-0.33252488631677 * Marital_StatusMarried + 0.26735237322144 * Marital_StatusSingle +
-0.37056611493683 * Marital_StatusTogether ;
2532722   +   H1x1_3  = H1x1_3  +     0.29085314695378 * Education2n_Cycle
2532723   +          +     -0.2177077392676 * EducationBasic  +    -0.12975750226767 *
2532724   +        EducationGraduation  +     0.12920694427876 * EducationMaster
2532725   +          +    -0.30275479651076 * Marital_StatusDivorced
2532726   +          +     0.50273719874035 * Marital_StatusMarried
2532727   +          +    -0.39588303956293 * Marital_StatusSingle
2532728   +          +     0.42028863850572 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.29085314695378 * Education2n_Cycle +
-0.2177077392676 * EducationBasic + -0.12975750226767 * EducationGraduation + 0.12920694427876
* EducationMaster + -0.30275479651076 * Marital_StatusDivorced + 0.50273719874035 *
Marital_StatusMarried + -0.39588303956293 * Marital_StatusSingle + 0.42028863850572 *
Marital_StatusTogether ;
2532729   +   H1x1_1  =     1.91295924572895 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.91295924572895 + H1x1_1 ;
2532730   +   H1x1_2  =    -1.21245226681055 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -1.21245226681055 + H1x1_2 ;
2532731   +   H1x1_3  =    -0.01609140135594 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.01609140135594 + H1x1_3 ;
2532732   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
2532733   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
2532734   +   H1x1_1  = EXP(MIN(-0.5 * H1x1_1 **2, _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(MIN(-0.5 * H1x1_1 **2, _EXP_BAR));
2532735   +   H1x1_2  = EXP(MIN(-0.5 * H1x1_2 **2, _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(MIN(-0.5 * H1x1_2 **2, _EXP_BAR));
2532736   +   H1x1_3  = EXP(MIN(-0.5 * H1x1_3 **2, _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(MIN(-0.5 * H1x1_3 **2, _EXP_BAR));
2532737   +END;
MPRINT(EM_DIAGRAM):   END;
2532738   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2532739   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
2532740   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
2532741   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
2532742   +END;
MPRINT(EM_DIAGRAM):   END;
2532743   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2532744   +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
2532745   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2532746   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2532747   +   H1x2_1  =     0.73632716677259 * S_AcceptedCmpTotal
2532748   +          +     -1.3452480925823 * S_Age  +    -0.77564767519981 * S_Frq
2532749   +          +    -0.06163854052357 * S_Income  +     1.82428003860444 *
2532750   +        S_Kidhome  +       0.661412748756 * S_Mnt  +      1.8826488743919 *
2532751   +        S_MntFishProducts  +    -0.21815276926728 * S_MntFruits
2532752   +          +     1.06597641654862 * S_MntGoldProds  +     0.13887400045643 *
2532753   +        S_MntMeatProducts  +    -0.62827157985225 * S_MntSweetProducts
2532754   +          +     1.70742231056065 * S_MntWines  +     0.52403167020638 *
2532755   +        S_MonthsAsCustomer  +    -2.99889150929209 * S_NumCatalogPurchases
2532756   +          +    -2.59470529821377 * S_NumDealsPurchases
2532757   +          +      0.7668756449818 * S_NumDistPurchases
2532758   +          +     0.61064641547208 * S_NumStorePurchases
2532759   +          +    -0.87106335660846 * S_NumWebPurchases
2532760   +          +      0.1188879348197 * S_NumWebVisitsMonth
2532761   +          +     0.89319669432194 * S_RFMstat  +       -0.45272285967 *
2532762   +        S_RMntFrq  +     -0.7210740986075 * S_Recency
2532763   +          +      0.7032117485114 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.73632716677259 * S_AcceptedCmpTotal + -1.3452480925823 *
S_Age + -0.77564767519981 * S_Frq + -0.06163854052357 * S_Income + 1.82428003860444 *
S_Kidhome + 0.661412748756 * S_Mnt + 1.8826488743919 * S_MntFishProducts + -0.21815276926728 *
S_MntFruits + 1.06597641654862 * S_MntGoldProds + 0.13887400045643 * S_MntMeatProducts +
-0.62827157985225 * S_MntSweetProducts + 1.70742231056065 * S_MntWines + 0.52403167020638 *
S_MonthsAsCustomer + -2.99889150929209 * S_NumCatalogPurchases + -2.59470529821377 *
S_NumDealsPurchases + 0.7668756449818 * S_NumDistPurchases + 0.61064641547208 *
S_NumStorePurchases + -0.87106335660846 * S_NumWebPurchases + 0.1188879348197 *
S_NumWebVisitsMonth + 0.89319669432194 * S_RFMstat + -0.45272285967 * S_RMntFrq +
-0.7210740986075 * S_Recency + 0.7032117485114 * S_Teenhome ;
2532764   +   H1x2_2  =      0.5405970783297 * S_AcceptedCmpTotal
2532765   +          +     0.34103648596436 * S_Age  +    -1.00413619660059 * S_Frq
2532766   +          +     0.40958797602392 * S_Income  +    -0.94731216445533 *
2532767   +        S_Kidhome  +    -0.17755265939769 * S_Mnt  +    -0.88926202859892 *
2532768   +        S_MntFishProducts  +      0.6791087530674 * S_MntFruits
2532769   +          +     1.10836805118307 * S_MntGoldProds  +    -0.29462180872033 *
2532770   +        S_MntMeatProducts  +     2.21935054370304 * S_MntSweetProducts
2532771   +          +     1.41379847080743 * S_MntWines  +    -0.66077297246309 *
2532772   +        S_MonthsAsCustomer  +     0.91491641336561 * S_NumCatalogPurchases
2532773   +          +    -0.41834528691349 * S_NumDealsPurchases
2532774   +          +    -0.07802605490227 * S_NumDistPurchases
2532775   +          +    -0.62261476153139 * S_NumStorePurchases
2532776   +          +    -0.84011953180231 * S_NumWebPurchases
2532777   +          +     0.95169092183885 * S_NumWebVisitsMonth
2532778   +          +      0.4036735448902 * S_RFMstat  +     0.44620057959954 *
2532779   +        S_RMntFrq  +    -0.54980566705324 * S_Recency
2532780   +          +    -0.48914926560129 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 0.5405970783297 * S_AcceptedCmpTotal + 0.34103648596436 * S_Age
+ -1.00413619660059 * S_Frq + 0.40958797602392 * S_Income + -0.94731216445533 * S_Kidhome +
-0.17755265939769 * S_Mnt + -0.88926202859892 * S_MntFishProducts + 0.6791087530674 *
S_MntFruits + 1.10836805118307 * S_MntGoldProds + -0.29462180872033 * S_MntMeatProducts +
2.21935054370304 * S_MntSweetProducts + 1.41379847080743 * S_MntWines + -0.66077297246309 *
S_MonthsAsCustomer + 0.91491641336561 * S_NumCatalogPurchases + -0.41834528691349 *
S_NumDealsPurchases + -0.07802605490227 * S_NumDistPurchases + -0.62261476153139 *
S_NumStorePurchases + -0.84011953180231 * S_NumWebPurchases + 0.95169092183885 *
S_NumWebVisitsMonth + 0.4036735448902 * S_RFMstat + 0.44620057959954 * S_RMntFrq +
-0.54980566705324 * S_Recency + -0.48914926560129 * S_Teenhome ;
2532781   +   H1x2_3  =    -0.10056833202616 * S_AcceptedCmpTotal
2532782   +          +    -3.35021911955911 * S_Age  +    -0.47433508394475 * S_Frq
2532783   +          +      0.2642483252057 * S_Income  +     0.20666167536737 *
2532784   +        S_Kidhome  +    -1.63711887449192 * S_Mnt  +    -0.02078521278323 *
2532785   +        S_MntFishProducts  +    -0.13356020799092 * S_MntFruits
2532786   +          +     0.03199170913357 * S_MntGoldProds  +     0.35859745927921 *
2532787   +        S_MntMeatProducts  +     1.28933517907056 * S_MntSweetProducts
2532788   +          +    -0.45266889039243 * S_MntWines  +    -0.03980312418999 *
2532789   +        S_MonthsAsCustomer  +     0.11407065408619 * S_NumCatalogPurchases
2532790   +          +     1.50811278700924 * S_NumDealsPurchases
2532791   +          +    -0.40025710583484 * S_NumDistPurchases
2532792   +          +     0.16539197954198 * S_NumStorePurchases
2532793   +          +    -1.50803186935431 * S_NumWebPurchases
2532794   +          +    -0.35788712697704 * S_NumWebVisitsMonth
2532795   +          +    -2.06761773527847 * S_RFMstat  +    -0.00353259675109 *
2532796   +        S_RMntFrq  +      0.4364156603095 * S_Recency
2532797   +          +    -0.44689366494665 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.10056833202616 * S_AcceptedCmpTotal + -3.35021911955911 *
S_Age + -0.47433508394475 * S_Frq + 0.2642483252057 * S_Income + 0.20666167536737 * S_Kidhome
+ -1.63711887449192 * S_Mnt + -0.02078521278323 * S_MntFishProducts + -0.13356020799092 *
S_MntFruits + 0.03199170913357 * S_MntGoldProds + 0.35859745927921 * S_MntMeatProducts +
1.28933517907056 * S_MntSweetProducts + -0.45266889039243 * S_MntWines + -0.03980312418999 *
S_MonthsAsCustomer + 0.11407065408619 * S_NumCatalogPurchases + 1.50811278700924 *
S_NumDealsPurchases + -0.40025710583484 * S_NumDistPurchases + 0.16539197954198 *
S_NumStorePurchases + -1.50803186935431 * S_NumWebPurchases + -0.35788712697704 *
S_NumWebVisitsMonth + -2.06761773527847 * S_RFMstat + -0.00353259675109 * S_RMntFrq +
0.4364156603095 * S_Recency + -0.44689366494665 * S_Teenhome ;
2532798   +   H1x2_1  = H1x2_1  +     1.19862785990255 * AcceptedCmp10
2532799   +          +    -0.56777088839338 * AcceptedCmp20  +    -0.20982687937883 *
2532800   +        AcceptedCmp30  +     0.23051157512105 * AcceptedCmp40
2532801   +          +    -1.16625535461103 * AcceptedCmp50  +    -0.03987377830172 *
2532802   +        Complain0  +    -1.17553145310278 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 1.19862785990255 * AcceptedCmp10 + -0.56777088839338 *
AcceptedCmp20 + -0.20982687937883 * AcceptedCmp30 + 0.23051157512105 * AcceptedCmp40 +
-1.16625535461103 * AcceptedCmp50 + -0.03987377830172 * Complain0 + -1.17553145310278 *
HigherEducationBinary0 ;
2532803   +   H1x2_2  = H1x2_2  +    -1.37553391657098 * AcceptedCmp10
2532804   +          +    -0.49489986415129 * AcceptedCmp20  +     0.84075258232812 *
2532805   +        AcceptedCmp30  +     0.31883526052436 * AcceptedCmp40
2532806   +          +    -0.41245383847025 * AcceptedCmp50  +     0.75603245683628 *
2532807   +        Complain0  +    -2.07732119239317 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -1.37553391657098 * AcceptedCmp10 + -0.49489986415129
* AcceptedCmp20 + 0.84075258232812 * AcceptedCmp30 + 0.31883526052436 * AcceptedCmp40 +
-0.41245383847025 * AcceptedCmp50 + 0.75603245683628 * Complain0 + -2.07732119239317 *
HigherEducationBinary0 ;
2532808   +   H1x2_3  = H1x2_3  +     0.94876862525586 * AcceptedCmp10
2532809   +          +     0.79245605062261 * AcceptedCmp20  +     1.18614024465163 *
2532810   +        AcceptedCmp30  +    -0.24348380736895 * AcceptedCmp40
2532811   +          +     0.63374252730038 * AcceptedCmp50  +     0.36777527794452 *
2532812   +        Complain0  +    -0.07746344015306 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 0.94876862525586 * AcceptedCmp10 + 0.79245605062261 *
AcceptedCmp20 + 1.18614024465163 * AcceptedCmp30 + -0.24348380736895 * AcceptedCmp40 +
0.63374252730038 * AcceptedCmp50 + 0.36777527794452 * Complain0 + -0.07746344015306 *
HigherEducationBinary0 ;
2532813   +   H1x2_1  = H1x2_1  +     1.73012058377195 * Education2n_Cycle
2532814   +          +     2.12295803973544 * EducationBasic  +     0.36945596974292 *
2532815   +        EducationGraduation  +    -1.22675967760612 * EducationMaster
2532816   +          +    -0.48199299977856 * Marital_StatusDivorced
2532817   +          +    -1.61546983135535 * Marital_StatusMarried
2532818   +          +     1.25890289649165 * Marital_StatusSingle
2532819   +          +    -0.35805098686637 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 1.73012058377195 * Education2n_Cycle +
2.12295803973544 * EducationBasic + 0.36945596974292 * EducationGraduation + -1.22675967760612
* EducationMaster + -0.48199299977856 * Marital_StatusDivorced + -1.61546983135535 *
Marital_StatusMarried + 1.25890289649165 * Marital_StatusSingle + -0.35805098686637 *
Marital_StatusTogether ;
2532820   +   H1x2_2  = H1x2_2  +    -1.04319773106255 * Education2n_Cycle
2532821   +          +    -1.20017517243416 * EducationBasic  +    -0.21851017334559 *
2532822   +        EducationGraduation  +     0.54918303984069 * EducationMaster
2532823   +          +    -0.69719138781358 * Marital_StatusDivorced
2532824   +          +     0.26964883367384 * Marital_StatusMarried
2532825   +          +      0.4656663467381 * Marital_StatusSingle
2532826   +          +    -0.38324848670979 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -1.04319773106255 * Education2n_Cycle +
-1.20017517243416 * EducationBasic + -0.21851017334559 * EducationGraduation +
0.54918303984069 * EducationMaster + -0.69719138781358 * Marital_StatusDivorced +
0.26964883367384 * Marital_StatusMarried + 0.4656663467381 * Marital_StatusSingle +
-0.38324848670979 * Marital_StatusTogether ;
2532827   +   H1x2_3  = H1x2_3  +     0.26572249637491 * Education2n_Cycle
2532828   +          +     1.36865822272368 * EducationBasic  +     0.26769702437041 *
2532829   +        EducationGraduation  +    -0.57748542336591 * EducationMaster
2532830   +          +     1.40407968804704 * Marital_StatusDivorced
2532831   +          +    -1.35468203106214 * Marital_StatusMarried
2532832   +          +      1.0644996414042 * Marital_StatusSingle
2532833   +          +    -0.68198832748724 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 0.26572249637491 * Education2n_Cycle +
1.36865822272368 * EducationBasic + 0.26769702437041 * EducationGraduation + -0.57748542336591
* EducationMaster + 1.40407968804704 * Marital_StatusDivorced + -1.35468203106214 *
Marital_StatusMarried + 1.0644996414042 * Marital_StatusSingle + -0.68198832748724 *
Marital_StatusTogether ;
2532834   +   H1x2_1  =     1.72650566457008 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.72650566457008 + H1x2_1 ;
2532835   +   H1x2_2  =     -1.0113179577999 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -1.0113179577999 + H1x2_2 ;
2532836   +   H1x2_3  =     0.14003924400021 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = 0.14003924400021 + H1x2_3 ;
2532837   +   H1x2_1  = SIN(H1x2_1 );
MPRINT(EM_DIAGRAM):   H1x2_1 = SIN(H1x2_1 );
2532838   +   H1x2_2  = SIN(H1x2_2 );
MPRINT(EM_DIAGRAM):   H1x2_2 = SIN(H1x2_2 );
2532839   +   H1x2_3  = SIN(H1x2_3 );
MPRINT(EM_DIAGRAM):   H1x2_3 = SIN(H1x2_3 );
2532840   +END;
MPRINT(EM_DIAGRAM):   END;
2532841   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2532842   +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
2532843   +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
2532844   +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
2532845   +END;
MPRINT(EM_DIAGRAM):   END;
2532846   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2532847   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2532848   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2532849   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2532850   +   P_DepVar1  =    -7.62079794803554 * H1x1_1  +     13.7007341613959 * H1x1_2
2532851   +          +    -6.77882452096978 * H1x1_3 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -7.62079794803554 * H1x1_1 + 13.7007341613959 * H1x1_2 +
-6.77882452096978 * H1x1_3 ;
2532852   +   P_DepVar1  = P_DepVar1  +    -0.44850093089338 * H1x2_1
2532853   +          +    -1.24228597291063 * H1x2_2  +     1.00075465600952 * H1x2_3 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 + -0.44850093089338 * H1x2_1 + -1.24228597291063 *
H1x2_2 + 1.00075465600952 * H1x2_3 ;
2532854   +   P_DepVar1  =    -2.26198805619545 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.26198805619545 + P_DepVar1 ;
2532855   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2532856   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2532857   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2532858   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2532859   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2532860   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2532861   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2532862   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2532863   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2532864   +END;
MPRINT(EM_DIAGRAM):   END;
2532865   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2532866   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2532867   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2532868   +END;
MPRINT(EM_DIAGRAM):   END;
2532869   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2532870   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2532871   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2532872   +END;
MPRINT(EM_DIAGRAM):   END;
2532873   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2532874   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2532875   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2532876   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2532877   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2532878   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2532879   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2532880   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2532881   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2532882   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2532883   +END;
MPRINT(EM_DIAGRAM):   END;
2532884   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2532885   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2532886   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2532887   +drop
2532888   +H1x1_1
2532889   +H1x1_2
2532890   +H1x1_3
2532891   +H1x2_1
2532892   +H1x2_2
2532893   +H1x2_3
2532894   +;
MPRINT(EM_DIAGRAM):   drop H1x1_1 H1x1_2 H1x1_3 H1x2_1 H1x2_2 H1x2_3 ;
2532895   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
2532896   +* Renaming variables for AutoNeural8;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural8;
2532897   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2532898   +* Renaming Posterior variables for AutoNeural8;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural8;
2532899   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2532900   +drop AutoNeural8_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural8_P_DepVar1;
2532901   +AutoNeural8_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural8_P_DepVar1 = P_DepVar1;
2532902   +drop AutoNeural8_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural8_P_DepVar0;
2532903   +AutoNeural8_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural8_P_DepVar0 = P_DepVar0;
2532904   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2532905   +* Renaming _WARN_ variable for AutoNeural8;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural8;
2532906   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2532907   +length AutoNeural8_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural8_WARN_ $4;
2532908   +drop AutoNeural8_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural8_WARN_;
2532909   +AutoNeural8_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural8_WARN_ = _WARN_;
2532910   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2532911   +* Ensmbl36: Scoring Code of model 4 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl36: Scoring Code of model 4 of 7;
2532912   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2532913   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2532914   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
2532915   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
2532916   +* NODE: AutoNeural10;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural10;
2532917   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2532918   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2532919   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2532920   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2532921   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2532922   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2532923   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2532924   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2532925   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2532926   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2532927   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2532928   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2532929   +LENGTH _WARN_ $4
2532930   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
2532931   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2532932   +
2532933   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
2532934   +
2532935   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
2532936   +
2532937   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2532938   +
2532939   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2532940   +
2532941   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2532942   +
2532943   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2532944   +
2532945   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2532946   +
2532947   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2532948   +
2532949   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2532950   +
2532951   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2532952   +
2532953   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2532954   +
2532955   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
2532956   +
2532957   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2532958   +
2532959   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2532960   +
2532961   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
2532962   +
2532963   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2532964   +
2532965   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2532966   +
2532967   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2532968   +
2532969   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2532970   +
2532971   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
2532972   +
2532973   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2532974   +
2532975   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2532976   +
2532977   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2532978   +
2532979   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2532980   +
2532981   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2532982   +
2532983   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2532984   +
2532985   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2532986   +
2532987   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2532988   +
2532989   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
2532990   +
2532991   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2532992   +
2532993   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2532994   +
2532995   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2532996   +
2532997   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2532998   +
2532999   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2533000   +
2533001   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2533002   +
2533003   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2533004   +
2533005   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2533006   +
2533007   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
2533008   +
2533009   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
2533010   +
2533011   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
2533012   +
2533013   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
2533014   +
2533015   +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
2533016   +
2533017   +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
2533018   +
2533019   +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
2533020   +
2533021   +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
2533022   +
2533023   +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
2533024   +
2533025   +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
2533026   +
2533027   +      label H1x3_1 = 'Hidden: H1x3_=1' ;
MPRINT(EM_DIAGRAM):   label H1x3_1 = 'Hidden: H1x3_=1' ;
2533028   +
2533029   +      label H1x3_2 = 'Hidden: H1x3_=2' ;
MPRINT(EM_DIAGRAM):   label H1x3_2 = 'Hidden: H1x3_=2' ;
2533030   +
2533031   +      label H1x3_3 = 'Hidden: H1x3_=3' ;
MPRINT(EM_DIAGRAM):   label H1x3_3 = 'Hidden: H1x3_=3' ;
2533032   +
2533033   +      label H1x3_4 = 'Hidden: H1x3_=4' ;
MPRINT(EM_DIAGRAM):   label H1x3_4 = 'Hidden: H1x3_=4' ;
2533034   +
2533035   +      label H1x3_5 = 'Hidden: H1x3_=5' ;
MPRINT(EM_DIAGRAM):   label H1x3_5 = 'Hidden: H1x3_=5' ;
2533036   +
2533037   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2533038   +
2533039   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2533040   +
2533041   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2533042   +
2533043   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2533044   +
2533045   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2533046   +
2533047   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2533048   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2533049   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2533050   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2533051   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2533052   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2533053   +end;
MPRINT(EM_DIAGRAM):   end;
2533054   +else do;
MPRINT(EM_DIAGRAM):   else do;
2533055   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2533056   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2533057   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2533058   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2533059   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2533060   +   end;
MPRINT(EM_DIAGRAM):   end;
2533061   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2533062   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2533063   +   end;
MPRINT(EM_DIAGRAM):   end;
2533064   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2533065   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2533066   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2533067   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2533068   +   end;
MPRINT(EM_DIAGRAM):   end;
2533069   +end;
MPRINT(EM_DIAGRAM):   end;
2533070   +
2533071   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2533072   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2533073   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2533074   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2533075   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2533076   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2533077   +end;
MPRINT(EM_DIAGRAM):   end;
2533078   +else do;
MPRINT(EM_DIAGRAM):   else do;
2533079   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2533080   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2533081   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2533082   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2533083   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2533084   +   end;
MPRINT(EM_DIAGRAM):   end;
2533085   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2533086   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2533087   +   end;
MPRINT(EM_DIAGRAM):   end;
2533088   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2533089   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2533090   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2533091   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2533092   +   end;
MPRINT(EM_DIAGRAM):   end;
2533093   +end;
MPRINT(EM_DIAGRAM):   end;
2533094   +
2533095   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2533096   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2533097   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2533098   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2533099   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2533100   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2533101   +end;
MPRINT(EM_DIAGRAM):   end;
2533102   +else do;
MPRINT(EM_DIAGRAM):   else do;
2533103   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2533104   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2533105   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2533106   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2533107   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2533108   +   end;
MPRINT(EM_DIAGRAM):   end;
2533109   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2533110   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2533111   +   end;
MPRINT(EM_DIAGRAM):   end;
2533112   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2533113   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2533114   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2533115   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2533116   +   end;
MPRINT(EM_DIAGRAM):   end;
2533117   +end;
MPRINT(EM_DIAGRAM):   end;
2533118   +
2533119   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2533120   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2533121   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2533122   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2533123   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2533124   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2533125   +end;
MPRINT(EM_DIAGRAM):   end;
2533126   +else do;
MPRINT(EM_DIAGRAM):   else do;
2533127   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2533128   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2533129   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2533130   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2533131   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2533132   +   end;
MPRINT(EM_DIAGRAM):   end;
2533133   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2533134   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2533135   +   end;
MPRINT(EM_DIAGRAM):   end;
2533136   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2533137   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2533138   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2533139   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2533140   +   end;
MPRINT(EM_DIAGRAM):   end;
2533141   +end;
MPRINT(EM_DIAGRAM):   end;
2533142   +
2533143   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2533144   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2533145   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2533146   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2533147   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2533148   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2533149   +end;
MPRINT(EM_DIAGRAM):   end;
2533150   +else do;
MPRINT(EM_DIAGRAM):   else do;
2533151   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2533152   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2533153   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2533154   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2533155   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2533156   +   end;
MPRINT(EM_DIAGRAM):   end;
2533157   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2533158   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2533159   +   end;
MPRINT(EM_DIAGRAM):   end;
2533160   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2533161   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2533162   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2533163   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2533164   +   end;
MPRINT(EM_DIAGRAM):   end;
2533165   +end;
MPRINT(EM_DIAGRAM):   end;
2533166   +
2533167   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2533168   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2533169   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2533170   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2533171   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2533172   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2533173   +end;
MPRINT(EM_DIAGRAM):   end;
2533174   +else do;
MPRINT(EM_DIAGRAM):   else do;
2533175   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2533176   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2533177   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2533178   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2533179   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2533180   +   end;
MPRINT(EM_DIAGRAM):   end;
2533181   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2533182   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2533183   +   end;
MPRINT(EM_DIAGRAM):   end;
2533184   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2533185   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2533186   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2533187   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2533188   +   end;
MPRINT(EM_DIAGRAM):   end;
2533189   +end;
MPRINT(EM_DIAGRAM):   end;
2533190   +
2533191   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
2533192   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
2533193   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
2533194   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2533195   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2533196   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2533197   +end;
MPRINT(EM_DIAGRAM):   end;
2533198   +else do;
MPRINT(EM_DIAGRAM):   else do;
2533199   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2533200   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
2533201   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2533202   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
2533203   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
2533204   +   end;
MPRINT(EM_DIAGRAM):   end;
2533205   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
2533206   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
2533207   +   end;
MPRINT(EM_DIAGRAM):   end;
2533208   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2533209   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2533210   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2533211   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2533212   +   end;
MPRINT(EM_DIAGRAM):   end;
2533213   +end;
MPRINT(EM_DIAGRAM):   end;
2533214   +
2533215   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2533216   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
2533217   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2533218   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2533219   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2533220   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2533221   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2533222   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2533223   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2533224   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2533225   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2533226   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2533227   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2533228   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2533229   +end;
MPRINT(EM_DIAGRAM):   end;
2533230   +else do;
MPRINT(EM_DIAGRAM):   else do;
2533231   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2533232   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2533233   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2533234   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2533235   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2533236   +   end;
MPRINT(EM_DIAGRAM):   end;
2533237   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2533238   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2533239   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2533240   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2533241   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2533242   +   end;
MPRINT(EM_DIAGRAM):   end;
2533243   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2533244   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2533245   +   end;
MPRINT(EM_DIAGRAM):   end;
2533246   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2533247   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2533248   +   end;
MPRINT(EM_DIAGRAM):   end;
2533249   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2533250   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2533251   +   end;
MPRINT(EM_DIAGRAM):   end;
2533252   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2533253   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2533254   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2533255   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2533256   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2533257   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2533258   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2533259   +   end;
MPRINT(EM_DIAGRAM):   end;
2533260   +end;
MPRINT(EM_DIAGRAM):   end;
2533261   +
2533262   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2533263   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2533264   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
2533265   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2533266   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2533267   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2533268   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2533269   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2533270   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2533271   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2533272   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2533273   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2533274   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2533275   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2533276   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2533277   +end;
MPRINT(EM_DIAGRAM):   end;
2533278   +else do;
MPRINT(EM_DIAGRAM):   else do;
2533279   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2533280   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2533281   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2533282   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2533283   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2533284   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2533285   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2533286   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2533287   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2533288   +         end;
MPRINT(EM_DIAGRAM):   end;
2533289   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2533290   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2533291   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2533292   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2533293   +            end;
MPRINT(EM_DIAGRAM):   end;
2533294   +         end;
MPRINT(EM_DIAGRAM):   end;
2533295   +      end;
MPRINT(EM_DIAGRAM):   end;
2533296   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2533297   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2533298   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2533299   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2533300   +         end;
MPRINT(EM_DIAGRAM):   end;
2533301   +      end;
MPRINT(EM_DIAGRAM):   end;
2533302   +   end;
MPRINT(EM_DIAGRAM):   end;
2533303   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2533304   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2533305   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2533306   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2533307   +      end;
MPRINT(EM_DIAGRAM):   end;
2533308   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2533309   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2533310   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2533311   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2533312   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2533313   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2533314   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2533315   +         end;
MPRINT(EM_DIAGRAM):   end;
2533316   +      end;
MPRINT(EM_DIAGRAM):   end;
2533317   +   end;
MPRINT(EM_DIAGRAM):   end;
2533318   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2533319   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2533320   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2533321   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2533322   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2533323   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2533324   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2533325   +   end;
MPRINT(EM_DIAGRAM):   end;
2533326   +end;
MPRINT(EM_DIAGRAM):   end;
2533327   +
2533328   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2533329   +*** Checking missing input Interval
2533330   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2533331   +
2533332   +IF NMISS(
2533333   +   AcceptedCmpTotal ,
2533334   +   Age ,
2533335   +   Frq ,
2533336   +   Income ,
2533337   +   Kidhome ,
2533338   +   Mnt ,
2533339   +   MntFishProducts ,
2533340   +   MntFruits ,
2533341   +   MntGoldProds ,
2533342   +   MntMeatProducts ,
2533343   +   MntSweetProducts ,
2533344   +   MntWines ,
2533345   +   MonthsAsCustomer ,
2533346   +   NumCatalogPurchases ,
2533347   +   NumDealsPurchases ,
2533348   +   NumDistPurchases ,
2533349   +   NumStorePurchases ,
2533350   +   NumWebPurchases ,
2533351   +   NumWebVisitsMonth ,
2533352   +   RFMstat ,
2533353   +   RMntFrq ,
2533354   +   Recency ,
2533355   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
2533356   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2533357   +
2533358   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2533359   +END;
MPRINT(EM_DIAGRAM):   END;
2533360   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2533361   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
2533362   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2533363   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2533364   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2533365   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
2533366   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2533367   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2533368   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2533369   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2533370   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2533371   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2533372   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2533373   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2533374   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2533375   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2533376   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2533377   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
2533378   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2533379   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2533380   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2533381   +   S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2533382   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 *
MonthsAsCustomer ;
2533383   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2533384   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
2533385   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2533386   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2533387   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2533388   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
2533389   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2533390   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
2533391   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2533392   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
2533393   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2533394   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2533395   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2533396   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2533397   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2533398   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2533399   +END;
MPRINT(EM_DIAGRAM):   END;
2533400   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2533401   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2533402   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2533403   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
2533404   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
2533405   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2533406   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
2533407   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2533408   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2533409   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2533410   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2533411   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2533412   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2533413   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2533414   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2533415   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2533416   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2533417   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2533418   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2533419   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2533420   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2533421   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2533422   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
2533423   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2533424   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2533425   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
2533426   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2533427   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2533428   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2533429   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2533430   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2533431   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
2533432   +   ELSE S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2533433   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 *
MonthsAsCustomer ;
2533434   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2533435   +   ELSE S_NumCatalogPurchases
2533436   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2533437   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
2533438   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2533439   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2533440   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2533441   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
2533442   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2533443   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
2533444   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2533445   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2533446   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
2533447   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2533448   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2533449   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
2533450   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2533451   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2533452   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2533453   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2533454   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2533455   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
2533456   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2533457   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2533458   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2533459   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2533460   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2533461   +END;
MPRINT(EM_DIAGRAM):   END;
2533462   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2533463   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
2533464   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2533465   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2533466   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
2533467   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2533468   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2533469   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
2533470   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2533471   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2533472   +   H1x1_1  =     -1.5235159368138 * S_AcceptedCmpTotal
2533473   +          +     0.13941271308016 * S_Age  +    -0.84765157270503 * S_Frq
2533474   +          +    -0.89386555046676 * S_Income  +     1.62709236629244 *
2533475   +        S_Kidhome  +    -1.21416429819342 * S_Mnt  +    -1.95640488965637 *
2533476   +        S_MntFishProducts  +    -0.08621024993404 * S_MntFruits
2533477   +          +    -0.38536990009586 * S_MntGoldProds  +     3.12553097304637 *
2533478   +        S_MntMeatProducts  +    -2.50680711036653 * S_MntSweetProducts
2533479   +          +    -3.77770073626477 * S_MntWines  +     0.39118206604766 *
2533480   +        S_MonthsAsCustomer  +     1.80485993754239 * S_NumCatalogPurchases
2533481   +          +     3.21215425524619 * S_NumDealsPurchases
2533482   +          +     0.08695198777156 * S_NumDistPurchases
2533483   +          +    -2.58697971128295 * S_NumStorePurchases
2533484   +          +    -0.44431924796059 * S_NumWebPurchases
2533485   +          +     -1.4492698984921 * S_NumWebVisitsMonth
2533486   +          +     2.16652214648037 * S_RFMstat  +    -0.48027961131639 *
2533487   +        S_RMntFrq  +    -0.27206877070748 * S_Recency
2533488   +          +    -0.34774852853763 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -1.5235159368138 * S_AcceptedCmpTotal + 0.13941271308016 *
S_Age + -0.84765157270503 * S_Frq + -0.89386555046676 * S_Income + 1.62709236629244 *
S_Kidhome + -1.21416429819342 * S_Mnt + -1.95640488965637 * S_MntFishProducts +
-0.08621024993404 * S_MntFruits + -0.38536990009586 * S_MntGoldProds + 3.12553097304637 *
S_MntMeatProducts + -2.50680711036653 * S_MntSweetProducts + -3.77770073626477 * S_MntWines +
0.39118206604766 * S_MonthsAsCustomer + 1.80485993754239 * S_NumCatalogPurchases +
3.21215425524619 * S_NumDealsPurchases + 0.08695198777156 * S_NumDistPurchases +
-2.58697971128295 * S_NumStorePurchases + -0.44431924796059 * S_NumWebPurchases +
-1.4492698984921 * S_NumWebVisitsMonth + 2.16652214648037 * S_RFMstat + -0.48027961131639 *
S_RMntFrq + -0.27206877070748 * S_Recency + -0.34774852853763 * S_Teenhome ;
2533489   +   H1x1_2  =     -0.5665707820209 * S_AcceptedCmpTotal
2533490   +          +    -1.33582859121223 * S_Age  +     0.90483024742522 * S_Frq
2533491   +          +    -2.00588558815165 * S_Income  +      3.0373198083895 *
2533492   +        S_Kidhome  +      0.4356905004225 * S_Mnt  +     0.19619626354366 *
2533493   +        S_MntFishProducts  +    -1.09111340184132 * S_MntFruits
2533494   +          +     0.36844676336289 * S_MntGoldProds  +    -2.23832561375429 *
2533495   +        S_MntMeatProducts  +    -0.18280081530069 * S_MntSweetProducts
2533496   +          +     2.11599309139107 * S_MntWines  +     0.68147940490709 *
2533497   +        S_MonthsAsCustomer  +    -0.73940648599397 * S_NumCatalogPurchases
2533498   +          +    -0.83844506398484 * S_NumDealsPurchases
2533499   +          +     0.60831936516804 * S_NumDistPurchases
2533500   +          +     1.79084087761626 * S_NumStorePurchases
2533501   +          +     1.17119196356453 * S_NumWebPurchases
2533502   +          +    -3.63586683518718 * S_NumWebVisitsMonth
2533503   +          +     0.60521990735996 * S_RFMstat  +     0.56036381019221 *
2533504   +        S_RMntFrq  +     3.84599118896159 * S_Recency
2533505   +          +     2.42091939246471 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.5665707820209 * S_AcceptedCmpTotal + -1.33582859121223 *
S_Age + 0.90483024742522 * S_Frq + -2.00588558815165 * S_Income + 3.0373198083895 * S_Kidhome
+ 0.4356905004225 * S_Mnt + 0.19619626354366 * S_MntFishProducts + -1.09111340184132 *
S_MntFruits + 0.36844676336289 * S_MntGoldProds + -2.23832561375429 * S_MntMeatProducts +
-0.18280081530069 * S_MntSweetProducts + 2.11599309139107 * S_MntWines + 0.68147940490709 *
S_MonthsAsCustomer + -0.73940648599397 * S_NumCatalogPurchases + -0.83844506398484 *
S_NumDealsPurchases + 0.60831936516804 * S_NumDistPurchases + 1.79084087761626 *
S_NumStorePurchases + 1.17119196356453 * S_NumWebPurchases + -3.63586683518718 *
S_NumWebVisitsMonth + 0.60521990735996 * S_RFMstat + 0.56036381019221 * S_RMntFrq +
3.84599118896159 * S_Recency + 2.42091939246471 * S_Teenhome ;
2533506   +   H1x1_3  =    -2.34864034635966 * S_AcceptedCmpTotal
2533507   +          +     0.38417502023066 * S_Age  +     0.18241442054661 * S_Frq
2533508   +          +    -0.36643054878492 * S_Income  +    -0.01464967964014 *
2533509   +        S_Kidhome  +     0.13084033882631 * S_Mnt  +     1.43066752801424 *
2533510   +        S_MntFishProducts  +     0.30678881611098 * S_MntFruits
2533511   +          +    -0.35038082288662 * S_MntGoldProds  +    -6.79650673935808 *
2533512   +        S_MntMeatProducts  +    -0.35154740308081 * S_MntSweetProducts
2533513   +          +     4.53406963590593 * S_MntWines  +     0.35082802515055 *
2533514   +        S_MonthsAsCustomer  +    -1.62489937965567 * S_NumCatalogPurchases
2533515   +          +    -0.31484031572628 * S_NumDealsPurchases
2533516   +          +    -0.18273941035679 * S_NumDistPurchases
2533517   +          +     0.99501789733882 * S_NumStorePurchases
2533518   +          +     1.32014078829379 * S_NumWebPurchases
2533519   +          +    -1.34393498450215 * S_NumWebVisitsMonth
2533520   +          +    -0.93549119966022 * S_RFMstat  +    -1.74825390192193 *
2533521   +        S_RMntFrq  +     0.84406941726743 * S_Recency
2533522   +          +     -0.5004540381333 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -2.34864034635966 * S_AcceptedCmpTotal + 0.38417502023066 *
S_Age + 0.18241442054661 * S_Frq + -0.36643054878492 * S_Income + -0.01464967964014 *
S_Kidhome + 0.13084033882631 * S_Mnt + 1.43066752801424 * S_MntFishProducts + 0.30678881611098
* S_MntFruits + -0.35038082288662 * S_MntGoldProds + -6.79650673935808 * S_MntMeatProducts +
-0.35154740308081 * S_MntSweetProducts + 4.53406963590593 * S_MntWines + 0.35082802515055 *
S_MonthsAsCustomer + -1.62489937965567 * S_NumCatalogPurchases + -0.31484031572628 *
S_NumDealsPurchases + -0.18273941035679 * S_NumDistPurchases + 0.99501789733882 *
S_NumStorePurchases + 1.32014078829379 * S_NumWebPurchases + -1.34393498450215 *
S_NumWebVisitsMonth + -0.93549119966022 * S_RFMstat + -1.74825390192193 * S_RMntFrq +
0.84406941726743 * S_Recency + -0.5004540381333 * S_Teenhome ;
2533523   +   H1x1_4  =     0.46772023050431 * S_AcceptedCmpTotal
2533524   +          +    -0.64609651992636 * S_Age  +     0.65433283816167 * S_Frq
2533525   +          +     0.97922442633265 * S_Income  +    -0.37705204232056 *
2533526   +        S_Kidhome  +     0.00937752600299 * S_Mnt  +     -0.6082843846013 *
2533527   +        S_MntFishProducts  +     -0.6227107898918 * S_MntFruits
2533528   +          +      0.0291421224006 * S_MntGoldProds  +     1.09748402313736 *
2533529   +        S_MntMeatProducts  +     0.00604619863622 * S_MntSweetProducts
2533530   +          +    -0.74684537570529 * S_MntWines  +    -0.00266569003481 *
2533531   +        S_MonthsAsCustomer  +     2.01081657735872 * S_NumCatalogPurchases
2533532   +          +     1.19658719134196 * S_NumDealsPurchases
2533533   +          +     0.87478204472986 * S_NumDistPurchases
2533534   +          +    -0.20635856288784 * S_NumStorePurchases
2533535   +          +    -0.89927356974242 * S_NumWebPurchases
2533536   +          +     2.92285244132576 * S_NumWebVisitsMonth
2533537   +          +    -0.10913907245142 * S_RFMstat  +     1.64233441899256 *
2533538   +        S_RMntFrq  +    -3.64945971202322 * S_Recency
2533539   +          +    -1.78841346993558 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.46772023050431 * S_AcceptedCmpTotal + -0.64609651992636 *
S_Age + 0.65433283816167 * S_Frq + 0.97922442633265 * S_Income + -0.37705204232056 * S_Kidhome
+ 0.00937752600299 * S_Mnt + -0.6082843846013 * S_MntFishProducts + -0.6227107898918 *
S_MntFruits + 0.0291421224006 * S_MntGoldProds + 1.09748402313736 * S_MntMeatProducts +
0.00604619863622 * S_MntSweetProducts + -0.74684537570529 * S_MntWines + -0.00266569003481 *
S_MonthsAsCustomer + 2.01081657735872 * S_NumCatalogPurchases + 1.19658719134196 *
S_NumDealsPurchases + 0.87478204472986 * S_NumDistPurchases + -0.20635856288784 *
S_NumStorePurchases + -0.89927356974242 * S_NumWebPurchases + 2.92285244132576 *
S_NumWebVisitsMonth + -0.10913907245142 * S_RFMstat + 1.64233441899256 * S_RMntFrq +
-3.64945971202322 * S_Recency + -1.78841346993558 * S_Teenhome ;
2533540   +   H1x1_5  =    -1.22491918863941 * S_AcceptedCmpTotal
2533541   +          +     0.16201659993217 * S_Age  +     0.17189537824457 * S_Frq
2533542   +          +    -0.87922900323563 * S_Income  +    -0.79268410231108 *
2533543   +        S_Kidhome  +     0.62793961676074 * S_Mnt  +     0.20877761882787 *
2533544   +        S_MntFishProducts  +     0.99367872286661 * S_MntFruits
2533545   +          +     -0.4347564565882 * S_MntGoldProds  +    -0.16203279329295 *
2533546   +        S_MntMeatProducts  +     0.81409215344356 * S_MntSweetProducts
2533547   +          +     1.33482971563984 * S_MntWines  +    -1.17441882196058 *
2533548   +        S_MonthsAsCustomer  +    -1.72330829533107 * S_NumCatalogPurchases
2533549   +          +       -2.32617124568 * S_NumDealsPurchases
2533550   +          +    -0.56589187730672 * S_NumDistPurchases
2533551   +          +     1.07062299863482 * S_NumStorePurchases
2533552   +          +     0.30077273739578 * S_NumWebPurchases
2533553   +          +    -1.67745421915317 * S_NumWebVisitsMonth
2533554   +          +      0.0530074713265 * S_RFMstat  +    -0.55969729655382 *
2533555   +        S_RMntFrq  +     1.32196704233234 * S_Recency
2533556   +          +     1.05470622089613 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -1.22491918863941 * S_AcceptedCmpTotal + 0.16201659993217 *
S_Age + 0.17189537824457 * S_Frq + -0.87922900323563 * S_Income + -0.79268410231108 *
S_Kidhome + 0.62793961676074 * S_Mnt + 0.20877761882787 * S_MntFishProducts + 0.99367872286661
* S_MntFruits + -0.4347564565882 * S_MntGoldProds + -0.16203279329295 * S_MntMeatProducts +
0.81409215344356 * S_MntSweetProducts + 1.33482971563984 * S_MntWines + -1.17441882196058 *
S_MonthsAsCustomer + -1.72330829533107 * S_NumCatalogPurchases + -2.32617124568 *
S_NumDealsPurchases + -0.56589187730672 * S_NumDistPurchases + 1.07062299863482 *
S_NumStorePurchases + 0.30077273739578 * S_NumWebPurchases + -1.67745421915317 *
S_NumWebVisitsMonth + 0.0530074713265 * S_RFMstat + -0.55969729655382 * S_RMntFrq +
1.32196704233234 * S_Recency + 1.05470622089613 * S_Teenhome ;
2533557   +   H1x1_1  = H1x1_1  +     0.19875423759582 * AcceptedCmp10
2533558   +          +    -1.84163905120352 * AcceptedCmp20  +    -1.63149345314696 *
2533559   +        AcceptedCmp30  +    -1.52652349127913 * AcceptedCmp40
2533560   +          +    -0.97663634905647 * AcceptedCmp50  +    -0.94352222509088 *
2533561   +        Complain0  +    -0.63297203617355 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.19875423759582 * AcceptedCmp10 + -1.84163905120352 *
AcceptedCmp20 + -1.63149345314696 * AcceptedCmp30 + -1.52652349127913 * AcceptedCmp40 +
-0.97663634905647 * AcceptedCmp50 + -0.94352222509088 * Complain0 + -0.63297203617355 *
HigherEducationBinary0 ;
2533562   +   H1x1_2  = H1x1_2  +      0.0505791781839 * AcceptedCmp10
2533563   +          +    -0.19407965320143 * AcceptedCmp20  +     0.35537657271506 *
2533564   +        AcceptedCmp30  +    -0.84577216347728 * AcceptedCmp40
2533565   +          +     1.73085566880686 * AcceptedCmp50  +     0.05800586053869 *
2533566   +        Complain0  +    -0.62505561129469 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.0505791781839 * AcceptedCmp10 + -0.19407965320143 *
AcceptedCmp20 + 0.35537657271506 * AcceptedCmp30 + -0.84577216347728 * AcceptedCmp40 +
1.73085566880686 * AcceptedCmp50 + 0.05800586053869 * Complain0 + -0.62505561129469 *
HigherEducationBinary0 ;
2533567   +   H1x1_3  = H1x1_3  +     0.54825581966403 * AcceptedCmp10
2533568   +          +     -0.0966204838125 * AcceptedCmp20  +    -1.31707923763053 *
2533569   +        AcceptedCmp30  +    -1.21021077486757 * AcceptedCmp40
2533570   +          +     3.29102250037389 * AcceptedCmp50  +    -0.16383687725206 *
2533571   +        Complain0  +     0.00651446514934 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.54825581966403 * AcceptedCmp10 + -0.0966204838125 *
AcceptedCmp20 + -1.31707923763053 * AcceptedCmp30 + -1.21021077486757 * AcceptedCmp40 +
3.29102250037389 * AcceptedCmp50 + -0.16383687725206 * Complain0 + 0.00651446514934 *
HigherEducationBinary0 ;
2533572   +   H1x1_4  = H1x1_4  +    -1.18573650260336 * AcceptedCmp10
2533573   +          +    -1.73968979068234 * AcceptedCmp20  +    -1.31277698137778 *
2533574   +        AcceptedCmp30  +    -1.74346538593922 * AcceptedCmp40
2533575   +          +    -0.72543919818299 * AcceptedCmp50  +    -0.06328353200384 *
2533576   +        Complain0  +     0.74828735398796 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -1.18573650260336 * AcceptedCmp10 + -1.73968979068234
* AcceptedCmp20 + -1.31277698137778 * AcceptedCmp30 + -1.74346538593922 * AcceptedCmp40 +
-0.72543919818299 * AcceptedCmp50 + -0.06328353200384 * Complain0 + 0.74828735398796 *
HigherEducationBinary0 ;
2533577   +   H1x1_5  = H1x1_5  +    -0.19622185523754 * AcceptedCmp10
2533578   +          +     -0.4643498903813 * AcceptedCmp20  +     0.69293644934542 *
2533579   +        AcceptedCmp30  +     0.23077838801355 * AcceptedCmp40
2533580   +          +     0.53061813608476 * AcceptedCmp50  +    -0.56870999936869 *
2533581   +        Complain0  +      0.5917990310858 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.19622185523754 * AcceptedCmp10 + -0.4643498903813 *
AcceptedCmp20 + 0.69293644934542 * AcceptedCmp30 + 0.23077838801355 * AcceptedCmp40 +
0.53061813608476 * AcceptedCmp50 + -0.56870999936869 * Complain0 + 0.5917990310858 *
HigherEducationBinary0 ;
2533582   +   H1x1_1  = H1x1_1  +     1.01422000032629 * Education2n_Cycle
2533583   +          +    -0.77619298826287 * EducationBasic  +     0.35633748974614 *
2533584   +        EducationGraduation  +     0.98491516107588 * EducationMaster
2533585   +          +    -0.27797737429678 * Marital_StatusDivorced
2533586   +          +    -0.08137635862327 * Marital_StatusMarried
2533587   +          +     0.06275411820495 * Marital_StatusSingle
2533588   +          +    -0.19979743343415 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 1.01422000032629 * Education2n_Cycle +
-0.77619298826287 * EducationBasic + 0.35633748974614 * EducationGraduation + 0.98491516107588
* EducationMaster + -0.27797737429678 * Marital_StatusDivorced + -0.08137635862327 *
Marital_StatusMarried + 0.06275411820495 * Marital_StatusSingle + -0.19979743343415 *
Marital_StatusTogether ;
2533589   +   H1x1_2  = H1x1_2  +    -0.66224206017124 * Education2n_Cycle
2533590   +          +     0.80729589186486 * EducationBasic  +     0.75931615755998 *
2533591   +        EducationGraduation  +    -0.05470462753112 * EducationMaster
2533592   +          +     0.05151426841441 * Marital_StatusDivorced
2533593   +          +     1.19165082030442 * Marital_StatusMarried
2533594   +          +    -1.08257080662611 * Marital_StatusSingle
2533595   +          +     0.13534863375625 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.66224206017124 * Education2n_Cycle +
0.80729589186486 * EducationBasic + 0.75931615755998 * EducationGraduation + -0.05470462753112
* EducationMaster + 0.05151426841441 * Marital_StatusDivorced + 1.19165082030442 *
Marital_StatusMarried + -1.08257080662611 * Marital_StatusSingle + 0.13534863375625 *
Marital_StatusTogether ;
2533596   +   H1x1_3  = H1x1_3  +     0.20065577451105 * Education2n_Cycle
2533597   +          +    -0.14205714608311 * EducationBasic  +    -0.07077711368393 *
2533598   +        EducationGraduation  +     0.40262329710793 * EducationMaster
2533599   +          +      0.0238206459022 * Marital_StatusDivorced
2533600   +          +     -0.4653244204261 * Marital_StatusMarried
2533601   +          +     0.13051613619882 * Marital_StatusSingle
2533602   +          +    -0.35951366919755 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.20065577451105 * Education2n_Cycle +
-0.14205714608311 * EducationBasic + -0.07077711368393 * EducationGraduation +
0.40262329710793 * EducationMaster + 0.0238206459022 * Marital_StatusDivorced +
-0.4653244204261 * Marital_StatusMarried + 0.13051613619882 * Marital_StatusSingle +
-0.35951366919755 * Marital_StatusTogether ;
2533603   +   H1x1_4  = H1x1_4  +     -0.8555672630555 * Education2n_Cycle
2533604   +          +     0.58439980233621 * EducationBasic  +     0.04784356342853 *
2533605   +        EducationGraduation  +    -0.79764992264249 * EducationMaster
2533606   +          +     -0.7449356409222 * Marital_StatusDivorced
2533607   +          +    -1.46604673521535 * Marital_StatusMarried
2533608   +          +     0.74484771688818 * Marital_StatusSingle
2533609   +          +    -1.91273009779071 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.8555672630555 * Education2n_Cycle +
0.58439980233621 * EducationBasic + 0.04784356342853 * EducationGraduation + -0.79764992264249
* EducationMaster + -0.7449356409222 * Marital_StatusDivorced + -1.46604673521535 *
Marital_StatusMarried + 0.74484771688818 * Marital_StatusSingle + -1.91273009779071 *
Marital_StatusTogether ;
2533610   +   H1x1_5  = H1x1_5  +    -0.45561096683674 * Education2n_Cycle
2533611   +          +    -0.08389156101858 * EducationBasic  +    -1.24281299616343 *
2533612   +        EducationGraduation  +    -0.00999807517226 * EducationMaster
2533613   +          +    -3.68044980584423 * Marital_StatusDivorced
2533614   +          +     3.14587407902338 * Marital_StatusMarried
2533615   +          +    -2.66118132753024 * Marital_StatusSingle
2533616   +          +     3.50991640149914 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.45561096683674 * Education2n_Cycle +
-0.08389156101858 * EducationBasic + -1.24281299616343 * EducationGraduation +
-0.00999807517226 * EducationMaster + -3.68044980584423 * Marital_StatusDivorced +
3.14587407902338 * Marital_StatusMarried + -2.66118132753024 * Marital_StatusSingle +
3.50991640149914 * Marital_StatusTogether ;
2533617   +   H1x1_1  =    -2.87464368543529 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -2.87464368543529 + H1x1_1 ;
2533618   +   H1x1_2  =     0.69745433976458 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.69745433976458 + H1x1_2 ;
2533619   +   H1x1_3  =    -0.71895677211617 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.71895677211617 + H1x1_3 ;
2533620   +   H1x1_4  =    -3.07619671976178 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -3.07619671976178 + H1x1_4 ;
2533621   +   H1x1_5  =    -1.74345318000473 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -1.74345318000473 + H1x1_5 ;
2533622   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
2533623   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
2533624   +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
2533625   +   H1x1_2  = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
2533626   +   H1x1_3  = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
2533627   +   H1x1_4  = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_4 = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
2533628   +   H1x1_5  = 1.0 / (1.0 + EXP(MIN( - H1x1_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_5 = 1.0 / (1.0 + EXP(MIN( - H1x1_5 , _EXP_BAR)));
2533629   +END;
MPRINT(EM_DIAGRAM):   END;
2533630   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2533631   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
2533632   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
2533633   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
2533634   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
2533635   +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
2533636   +END;
MPRINT(EM_DIAGRAM):   END;
2533637   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2533638   +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
2533639   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2533640   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2533641   +   H1x2_1  =     0.02206354442682 * S_AcceptedCmpTotal
2533642   +          +    -1.34753268833642 * S_Age  +    -2.08377331969695 * S_Frq
2533643   +          +    -1.39854535380539 * S_Income  +     2.13620611759545 *
2533644   +        S_Kidhome  +    -1.50515365217324 * S_Mnt  +     0.85499321862984 *
2533645   +        S_MntFishProducts  +    -1.17732452790345 * S_MntFruits
2533646   +          +     1.52355640622249 * S_MntGoldProds  +     1.31854239360457 *
2533647   +        S_MntMeatProducts  +    -0.03265851293389 * S_MntSweetProducts
2533648   +          +     2.18666242847435 * S_MntWines  +     0.08246249957908 *
2533649   +        S_MonthsAsCustomer  +    -1.06901902236609 * S_NumCatalogPurchases
2533650   +          +     0.89261880438741 * S_NumDealsPurchases
2533651   +          +    -1.61647413199892 * S_NumDistPurchases
2533652   +          +    -0.56304669045195 * S_NumStorePurchases
2533653   +          +      0.7766837080945 * S_NumWebPurchases
2533654   +          +     -2.2953497398902 * S_NumWebVisitsMonth
2533655   +          +    -3.34547809243199 * S_RFMstat  +     0.07311937799261 *
2533656   +        S_RMntFrq  +     -0.5786489917247 * S_Recency
2533657   +          +    -1.06532056361117 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.02206354442682 * S_AcceptedCmpTotal + -1.34753268833642 *
S_Age + -2.08377331969695 * S_Frq + -1.39854535380539 * S_Income + 2.13620611759545 *
S_Kidhome + -1.50515365217324 * S_Mnt + 0.85499321862984 * S_MntFishProducts +
-1.17732452790345 * S_MntFruits + 1.52355640622249 * S_MntGoldProds + 1.31854239360457 *
S_MntMeatProducts + -0.03265851293389 * S_MntSweetProducts + 2.18666242847435 * S_MntWines +
0.08246249957908 * S_MonthsAsCustomer + -1.06901902236609 * S_NumCatalogPurchases +
0.89261880438741 * S_NumDealsPurchases + -1.61647413199892 * S_NumDistPurchases +
-0.56304669045195 * S_NumStorePurchases + 0.7766837080945 * S_NumWebPurchases +
-2.2953497398902 * S_NumWebVisitsMonth + -3.34547809243199 * S_RFMstat + 0.07311937799261 *
S_RMntFrq + -0.5786489917247 * S_Recency + -1.06532056361117 * S_Teenhome ;
2533658   +   H1x2_2  =      0.0341880757331 * S_AcceptedCmpTotal
2533659   +          +     0.72034771315738 * S_Age  +     0.64155966340389 * S_Frq
2533660   +          +    -1.06570008729492 * S_Income  +    -1.84532938869849 *
2533661   +        S_Kidhome  +     0.94433555965982 * S_Mnt  +     1.23831916074831 *
2533662   +        S_MntFishProducts  +     1.33415870886475 * S_MntFruits
2533663   +          +    -0.51253922893993 * S_MntGoldProds  +     0.02241594009025 *
2533664   +        S_MntMeatProducts  +     -1.2811169586741 * S_MntSweetProducts
2533665   +          +     1.96686773881953 * S_MntWines  +     1.44655944802715 *
2533666   +        S_MonthsAsCustomer  +    -1.18627316384798 * S_NumCatalogPurchases
2533667   +          +     1.02431289724643 * S_NumDealsPurchases
2533668   +          +    -0.90960173637405 * S_NumDistPurchases
2533669   +          +     1.24283490404772 * S_NumStorePurchases
2533670   +          +     1.23072413154592 * S_NumWebPurchases
2533671   +          +    -0.21533378473931 * S_NumWebVisitsMonth
2533672   +          +     1.26438704884008 * S_RFMstat  +      0.0014042871018 *
2533673   +        S_RMntFrq  +     0.32357651423135 * S_Recency
2533674   +          +    -0.49834512433407 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 0.0341880757331 * S_AcceptedCmpTotal + 0.72034771315738 * S_Age
+ 0.64155966340389 * S_Frq + -1.06570008729492 * S_Income + -1.84532938869849 * S_Kidhome +
0.94433555965982 * S_Mnt + 1.23831916074831 * S_MntFishProducts + 1.33415870886475 *
S_MntFruits + -0.51253922893993 * S_MntGoldProds + 0.02241594009025 * S_MntMeatProducts +
-1.2811169586741 * S_MntSweetProducts + 1.96686773881953 * S_MntWines + 1.44655944802715 *
S_MonthsAsCustomer + -1.18627316384798 * S_NumCatalogPurchases + 1.02431289724643 *
S_NumDealsPurchases + -0.90960173637405 * S_NumDistPurchases + 1.24283490404772 *
S_NumStorePurchases + 1.23072413154592 * S_NumWebPurchases + -0.21533378473931 *
S_NumWebVisitsMonth + 1.26438704884008 * S_RFMstat + 0.0014042871018 * S_RMntFrq +
0.32357651423135 * S_Recency + -0.49834512433407 * S_Teenhome ;
2533675   +   H1x2_3  =    -0.57066024275015 * S_AcceptedCmpTotal
2533676   +          +     0.16615358153136 * S_Age  +    -0.60017461612499 * S_Frq
2533677   +          +    -0.21195793925019 * S_Income  +    -0.36049126996499 *
2533678   +        S_Kidhome  +     0.97458542661118 * S_Mnt  +     0.62279162661518 *
2533679   +        S_MntFishProducts  +    -0.44715765367363 * S_MntFruits
2533680   +          +     0.91519163455361 * S_MntGoldProds  +     1.07312113398768 *
2533681   +        S_MntMeatProducts  +    -1.61967017526055 * S_MntSweetProducts
2533682   +          +    -1.88327677412185 * S_MntWines  +    -1.67067768979245 *
2533683   +        S_MonthsAsCustomer  +    -0.64725516463464 * S_NumCatalogPurchases
2533684   +          +    -0.26249596122198 * S_NumDealsPurchases
2533685   +          +    -0.63328519804758 * S_NumDistPurchases
2533686   +          +    -0.88467503575886 * S_NumStorePurchases
2533687   +          +    -0.83120537310738 * S_NumWebPurchases
2533688   +          +     1.40072282351719 * S_NumWebVisitsMonth
2533689   +          +     1.42591300760984 * S_RFMstat  +     1.93593865100837 *
2533690   +        S_RMntFrq  +     -1.2794275536508 * S_Recency
2533691   +          +    -0.78582664529339 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.57066024275015 * S_AcceptedCmpTotal + 0.16615358153136 *
S_Age + -0.60017461612499 * S_Frq + -0.21195793925019 * S_Income + -0.36049126996499 *
S_Kidhome + 0.97458542661118 * S_Mnt + 0.62279162661518 * S_MntFishProducts +
-0.44715765367363 * S_MntFruits + 0.91519163455361 * S_MntGoldProds + 1.07312113398768 *
S_MntMeatProducts + -1.61967017526055 * S_MntSweetProducts + -1.88327677412185 * S_MntWines +
-1.67067768979245 * S_MonthsAsCustomer + -0.64725516463464 * S_NumCatalogPurchases +
-0.26249596122198 * S_NumDealsPurchases + -0.63328519804758 * S_NumDistPurchases +
-0.88467503575886 * S_NumStorePurchases + -0.83120537310738 * S_NumWebPurchases +
1.40072282351719 * S_NumWebVisitsMonth + 1.42591300760984 * S_RFMstat + 1.93593865100837 *
S_RMntFrq + -1.2794275536508 * S_Recency + -0.78582664529339 * S_Teenhome ;
2533692   +   H1x2_4  =     0.70159995537759 * S_AcceptedCmpTotal
2533693   +          +    -0.70199351793792 * S_Age  +     1.63573967285806 * S_Frq
2533694   +          +     -0.1930098634567 * S_Income  +    -0.43173926207337 *
2533695   +        S_Kidhome  +    -0.45239271926178 * S_Mnt  +    -0.14139816383874 *
2533696   +        S_MntFishProducts  +    -0.70568635660703 * S_MntFruits
2533697   +          +     1.68796268038024 * S_MntGoldProds  +     0.80481626355934 *
2533698   +        S_MntMeatProducts  +     0.29831384975096 * S_MntSweetProducts
2533699   +          +    -0.50792336172825 * S_MntWines  +     0.80425149159678 *
2533700   +        S_MonthsAsCustomer  +    -2.26171302044375 * S_NumCatalogPurchases
2533701   +          +     1.30167361451945 * S_NumDealsPurchases
2533702   +          +     1.45457613716235 * S_NumDistPurchases
2533703   +          +    -0.40226463685252 * S_NumStorePurchases
2533704   +          +     0.36369161683572 * S_NumWebPurchases
2533705   +          +    -2.65684851610403 * S_NumWebVisitsMonth
2533706   +          +    -1.14810413235545 * S_RFMstat  +       1.291857215261 *
2533707   +        S_RMntFrq  +     1.36572595403825 * S_Recency
2533708   +          +    -0.54958418574963 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 0.70159995537759 * S_AcceptedCmpTotal + -0.70199351793792 *
S_Age + 1.63573967285806 * S_Frq + -0.1930098634567 * S_Income + -0.43173926207337 * S_Kidhome
+ -0.45239271926178 * S_Mnt + -0.14139816383874 * S_MntFishProducts + -0.70568635660703 *
S_MntFruits + 1.68796268038024 * S_MntGoldProds + 0.80481626355934 * S_MntMeatProducts +
0.29831384975096 * S_MntSweetProducts + -0.50792336172825 * S_MntWines + 0.80425149159678 *
S_MonthsAsCustomer + -2.26171302044375 * S_NumCatalogPurchases + 1.30167361451945 *
S_NumDealsPurchases + 1.45457613716235 * S_NumDistPurchases + -0.40226463685252 *
S_NumStorePurchases + 0.36369161683572 * S_NumWebPurchases + -2.65684851610403 *
S_NumWebVisitsMonth + -1.14810413235545 * S_RFMstat + 1.291857215261 * S_RMntFrq +
1.36572595403825 * S_Recency + -0.54958418574963 * S_Teenhome ;
2533709   +   H1x2_5  =    -1.00456225444665 * S_AcceptedCmpTotal
2533710   +          +     0.19033874303798 * S_Age  +    -0.62578451616415 * S_Frq
2533711   +          +    -0.96647190269426 * S_Income  +     1.77002676974464 *
2533712   +        S_Kidhome  +    -0.53816249322166 * S_Mnt  +     0.21322270253871 *
2533713   +        S_MntFishProducts  +     0.84210241961105 * S_MntFruits
2533714   +          +     0.44153678515007 * S_MntGoldProds  +    -0.23120999196747 *
2533715   +        S_MntMeatProducts  +     0.62950730283125 * S_MntSweetProducts
2533716   +          +    -0.64043011108056 * S_MntWines  +    -2.74922907599662 *
2533717   +        S_MonthsAsCustomer  +     0.67939322758717 * S_NumCatalogPurchases
2533718   +          +    -0.54572162665338 * S_NumDealsPurchases
2533719   +          +      0.9607390449318 * S_NumDistPurchases
2533720   +          +    -0.03259470545754 * S_NumStorePurchases
2533721   +          +     0.19202241423412 * S_NumWebPurchases
2533722   +          +     0.61085831658456 * S_NumWebVisitsMonth
2533723   +          +    -0.08582160429243 * S_RFMstat  +     1.73862452808565 *
2533724   +        S_RMntFrq  +    -0.01216476188714 * S_Recency
2533725   +          +     -0.3304403270473 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -1.00456225444665 * S_AcceptedCmpTotal + 0.19033874303798 *
S_Age + -0.62578451616415 * S_Frq + -0.96647190269426 * S_Income + 1.77002676974464 *
S_Kidhome + -0.53816249322166 * S_Mnt + 0.21322270253871 * S_MntFishProducts +
0.84210241961105 * S_MntFruits + 0.44153678515007 * S_MntGoldProds + -0.23120999196747 *
S_MntMeatProducts + 0.62950730283125 * S_MntSweetProducts + -0.64043011108056 * S_MntWines +
-2.74922907599662 * S_MonthsAsCustomer + 0.67939322758717 * S_NumCatalogPurchases +
-0.54572162665338 * S_NumDealsPurchases + 0.9607390449318 * S_NumDistPurchases +
-0.03259470545754 * S_NumStorePurchases + 0.19202241423412 * S_NumWebPurchases +
0.61085831658456 * S_NumWebVisitsMonth + -0.08582160429243 * S_RFMstat + 1.73862452808565 *
S_RMntFrq + -0.01216476188714 * S_Recency + -0.3304403270473 * S_Teenhome ;
2533726   +   H1x2_1  = H1x2_1  +     0.83453601566539 * AcceptedCmp10
2533727   +          +     0.59109136511077 * AcceptedCmp20  +     -0.9669340701943 *
2533728   +        AcceptedCmp30  +    -2.31468262956126 * AcceptedCmp40
2533729   +          +    -0.76277791850069 * AcceptedCmp50  +     0.30895289981412 *
2533730   +        Complain0  +       0.147233855837 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 0.83453601566539 * AcceptedCmp10 + 0.59109136511077 *
AcceptedCmp20 + -0.9669340701943 * AcceptedCmp30 + -2.31468262956126 * AcceptedCmp40 +
-0.76277791850069 * AcceptedCmp50 + 0.30895289981412 * Complain0 + 0.147233855837 *
HigherEducationBinary0 ;
2533731   +   H1x2_2  = H1x2_2  +     0.42789425545567 * AcceptedCmp10
2533732   +          +     0.08505833889085 * AcceptedCmp20  +    -1.15112188313855 *
2533733   +        AcceptedCmp30  +    -1.24362486486214 * AcceptedCmp40
2533734   +          +     0.04131419116048 * AcceptedCmp50  +    -0.45255799355317 *
2533735   +        Complain0  +    -0.32616423192953 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 0.42789425545567 * AcceptedCmp10 + 0.08505833889085 *
AcceptedCmp20 + -1.15112188313855 * AcceptedCmp30 + -1.24362486486214 * AcceptedCmp40 +
0.04131419116048 * AcceptedCmp50 + -0.45255799355317 * Complain0 + -0.32616423192953 *
HigherEducationBinary0 ;
2533736   +   H1x2_3  = H1x2_3  +    -0.03136360497649 * AcceptedCmp10
2533737   +          +     0.33867713207886 * AcceptedCmp20  +     0.05809342990544 *
2533738   +        AcceptedCmp30  +    -0.06416815079894 * AcceptedCmp40
2533739   +          +     1.14617960682421 * AcceptedCmp50  +    -0.82461320336041 *
2533740   +        Complain0  +     0.58944444655621 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + -0.03136360497649 * AcceptedCmp10 + 0.33867713207886 *
AcceptedCmp20 + 0.05809342990544 * AcceptedCmp30 + -0.06416815079894 * AcceptedCmp40 +
1.14617960682421 * AcceptedCmp50 + -0.82461320336041 * Complain0 + 0.58944444655621 *
HigherEducationBinary0 ;
2533741   +   H1x2_4  = H1x2_4  +    -1.12705500616438 * AcceptedCmp10
2533742   +          +      0.0487863004734 * AcceptedCmp20  +     1.30229008593765 *
2533743   +        AcceptedCmp30  +      0.1726718549662 * AcceptedCmp40
2533744   +          +     0.68443569845295 * AcceptedCmp50  +     2.39733248962228 *
2533745   +        Complain0  +      -0.620937291929 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + -1.12705500616438 * AcceptedCmp10 + 0.0487863004734 *
AcceptedCmp20 + 1.30229008593765 * AcceptedCmp30 + 0.1726718549662 * AcceptedCmp40 +
0.68443569845295 * AcceptedCmp50 + 2.39733248962228 * Complain0 + -0.620937291929 *
HigherEducationBinary0 ;
2533746   +   H1x2_5  = H1x2_5  +     1.42400460803453 * AcceptedCmp10
2533747   +          +    -1.22361480936625 * AcceptedCmp20  +     1.31090186367202 *
2533748   +        AcceptedCmp30  +    -1.40343404818254 * AcceptedCmp40
2533749   +          +    -0.57377230862494 * AcceptedCmp50  +     0.58622740778295 *
2533750   +        Complain0  +    -0.83222074319962 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 1.42400460803453 * AcceptedCmp10 + -1.22361480936625 *
AcceptedCmp20 + 1.31090186367202 * AcceptedCmp30 + -1.40343404818254 * AcceptedCmp40 +
-0.57377230862494 * AcceptedCmp50 + 0.58622740778295 * Complain0 + -0.83222074319962 *
HigherEducationBinary0 ;
2533751   +   H1x2_1  = H1x2_1  +     1.56508379719546 * Education2n_Cycle
2533752   +          +     0.52302987210661 * EducationBasic  +     -0.0570045326497 *
2533753   +        EducationGraduation  +    -0.01838790774804 * EducationMaster
2533754   +          +    -2.32430245081383 * Marital_StatusDivorced
2533755   +          +    -0.09815511356796 * Marital_StatusMarried
2533756   +          +     0.13075504294551 * Marital_StatusSingle
2533757   +          +     -0.0278875765201 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 1.56508379719546 * Education2n_Cycle +
0.52302987210661 * EducationBasic + -0.0570045326497 * EducationGraduation + -0.01838790774804
* EducationMaster + -2.32430245081383 * Marital_StatusDivorced + -0.09815511356796 *
Marital_StatusMarried + 0.13075504294551 * Marital_StatusSingle + -0.0278875765201 *
Marital_StatusTogether ;
2533758   +   H1x2_2  = H1x2_2  +    -0.85592920992847 * Education2n_Cycle
2533759   +          +     0.93272618259957 * EducationBasic  +     0.48987674771079 *
2533760   +        EducationGraduation  +    -1.12454002820451 * EducationMaster
2533761   +          +    -0.65574603869224 * Marital_StatusDivorced
2533762   +          +     1.54672472575294 * Marital_StatusMarried
2533763   +          +    -1.59817602340208 * Marital_StatusSingle
2533764   +          +     1.94381954546813 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -0.85592920992847 * Education2n_Cycle +
0.93272618259957 * EducationBasic + 0.48987674771079 * EducationGraduation + -1.12454002820451
* EducationMaster + -0.65574603869224 * Marital_StatusDivorced + 1.54672472575294 *
Marital_StatusMarried + -1.59817602340208 * Marital_StatusSingle + 1.94381954546813 *
Marital_StatusTogether ;
2533765   +   H1x2_3  = H1x2_3  +     0.37093371596523 * Education2n_Cycle
2533766   +          +    -2.05531065359129 * EducationBasic  +     1.16090743585078 *
2533767   +        EducationGraduation  +     0.87547303889444 * EducationMaster
2533768   +          +    -0.50911604604781 * Marital_StatusDivorced
2533769   +          +     0.30403066135719 * Marital_StatusMarried
2533770   +          +      0.1026950879545 * Marital_StatusSingle
2533771   +          +     0.01000166524405 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 0.37093371596523 * Education2n_Cycle +
-2.05531065359129 * EducationBasic + 1.16090743585078 * EducationGraduation + 0.87547303889444
* EducationMaster + -0.50911604604781 * Marital_StatusDivorced + 0.30403066135719 *
Marital_StatusMarried + 0.1026950879545 * Marital_StatusSingle + 0.01000166524405 *
Marital_StatusTogether ;
2533772   +   H1x2_4  = H1x2_4  +     1.28509086202466 * Education2n_Cycle
2533773   +          +     0.07860157688162 * EducationBasic  +     0.24607672351689 *
2533774   +        EducationGraduation  +    -0.06009602645566 * EducationMaster
2533775   +          +     1.07371507133318 * Marital_StatusDivorced
2533776   +          +    -0.07097334129051 * Marital_StatusMarried
2533777   +          +    -0.48339718568621 * Marital_StatusSingle
2533778   +          +    -0.08900780355835 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 1.28509086202466 * Education2n_Cycle +
0.07860157688162 * EducationBasic + 0.24607672351689 * EducationGraduation + -0.06009602645566
* EducationMaster + 1.07371507133318 * Marital_StatusDivorced + -0.07097334129051 *
Marital_StatusMarried + -0.48339718568621 * Marital_StatusSingle + -0.08900780355835 *
Marital_StatusTogether ;
2533779   +   H1x2_5  = H1x2_5  +    -1.08109633810919 * Education2n_Cycle
2533780   +          +    -0.54966585100103 * EducationBasic  +      0.5388683065169 *
2533781   +        EducationGraduation  +     0.46960055830119 * EducationMaster
2533782   +          +     1.04342893515504 * Marital_StatusDivorced
2533783   +          +     1.16171312085032 * Marital_StatusMarried
2533784   +          +    -0.30201646939913 * Marital_StatusSingle
2533785   +          +     1.84122645884771 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + -1.08109633810919 * Education2n_Cycle +
-0.54966585100103 * EducationBasic + 0.5388683065169 * EducationGraduation + 0.46960055830119
* EducationMaster + 1.04342893515504 * Marital_StatusDivorced + 1.16171312085032 *
Marital_StatusMarried + -0.30201646939913 * Marital_StatusSingle + 1.84122645884771 *
Marital_StatusTogether ;
2533786   +   H1x2_1  =     1.56970796025332 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.56970796025332 + H1x2_1 ;
2533787   +   H1x2_2  =    -0.11766478836824 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -0.11766478836824 + H1x2_2 ;
2533788   +   H1x2_3  =    -2.78218653641036 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -2.78218653641036 + H1x2_3 ;
2533789   +   H1x2_4  =     0.51979515224467 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 0.51979515224467 + H1x2_4 ;
2533790   +   H1x2_5  =     -0.4635890987824 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -0.4635890987824 + H1x2_5 ;
2533791   +END;
MPRINT(EM_DIAGRAM):   END;
2533792   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2533793   +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
2533794   +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
2533795   +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
2533796   +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
2533797   +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
2533798   +END;
MPRINT(EM_DIAGRAM):   END;
2533799   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2533800   +*** Writing the Node H1x3_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x3_ ;
2533801   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2533802   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2533803   +   H1x3_1  =     0.04411772880581 * S_AcceptedCmpTotal
2533804   +          +    -1.62725197326682 * S_Age  +    -1.99668213406033 * S_Frq
2533805   +          +     -1.2265241921112 * S_Income  +     1.99702869958035 *
2533806   +        S_Kidhome  +    -1.46762539068512 * S_Mnt  +     0.97784534044189 *
2533807   +        S_MntFishProducts  +    -1.07945265688497 * S_MntFruits
2533808   +          +     2.09306294956674 * S_MntGoldProds  +     1.46219664114361 *
2533809   +        S_MntMeatProducts  +     0.10961158671991 * S_MntSweetProducts
2533810   +          +     2.03040669273977 * S_MntWines  +     0.16536646017211 *
2533811   +        S_MonthsAsCustomer  +    -0.88077951545076 * S_NumCatalogPurchases
2533812   +          +     1.32256781010645 * S_NumDealsPurchases
2533813   +          +    -1.43015438973619 * S_NumDistPurchases
2533814   +          +    -0.63489289584421 * S_NumStorePurchases
2533815   +          +     0.90508699686841 * S_NumWebPurchases
2533816   +          +    -2.24234858061014 * S_NumWebVisitsMonth
2533817   +          +     -2.9988027991146 * S_RFMstat  +     0.35987461993699 *
2533818   +        S_RMntFrq  +    -1.09317668626142 * S_Recency
2533819   +          +    -1.09925349438658 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 0.04411772880581 * S_AcceptedCmpTotal + -1.62725197326682 *
S_Age + -1.99668213406033 * S_Frq + -1.2265241921112 * S_Income + 1.99702869958035 * S_Kidhome
+ -1.46762539068512 * S_Mnt + 0.97784534044189 * S_MntFishProducts + -1.07945265688497 *
S_MntFruits + 2.09306294956674 * S_MntGoldProds + 1.46219664114361 * S_MntMeatProducts +
0.10961158671991 * S_MntSweetProducts + 2.03040669273977 * S_MntWines + 0.16536646017211 *
S_MonthsAsCustomer + -0.88077951545076 * S_NumCatalogPurchases + 1.32256781010645 *
S_NumDealsPurchases + -1.43015438973619 * S_NumDistPurchases + -0.63489289584421 *
S_NumStorePurchases + 0.90508699686841 * S_NumWebPurchases + -2.24234858061014 *
S_NumWebVisitsMonth + -2.9988027991146 * S_RFMstat + 0.35987461993699 * S_RMntFrq +
-1.09317668626142 * S_Recency + -1.09925349438658 * S_Teenhome ;
2533820   +   H1x3_2  =     0.10522923391314 * S_AcceptedCmpTotal
2533821   +          +     0.68417479453112 * S_Age  +     0.46966162186743 * S_Frq
2533822   +          +    -1.21537535753115 * S_Income  +    -1.87423294109672 *
2533823   +        S_Kidhome  +     0.76913864731495 * S_Mnt  +     1.08535778796502 *
2533824   +        S_MntFishProducts  +     1.27743864099826 * S_MntFruits
2533825   +          +     -0.3186089651882 * S_MntGoldProds  +    -0.00224333051647 *
2533826   +        S_MntMeatProducts  +    -1.28169616734092 * S_MntSweetProducts
2533827   +          +     1.67350500234032 * S_MntWines  +     1.09584504562467 *
2533828   +        S_MonthsAsCustomer  +    -1.45467876727494 * S_NumCatalogPurchases
2533829   +          +     0.85965187264096 * S_NumDealsPurchases
2533830   +          +    -1.15239933286756 * S_NumDistPurchases
2533831   +          +     1.20800889102387 * S_NumStorePurchases
2533832   +          +     1.08790389130242 * S_NumWebPurchases
2533833   +          +    -0.13665551161149 * S_NumWebVisitsMonth
2533834   +          +     1.02103499612659 * S_RFMstat  +    -0.12980097143044 *
2533835   +        S_RMntFrq  +     0.65854311654256 * S_Recency
2533836   +          +    -0.60999209572192 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_2 = 0.10522923391314 * S_AcceptedCmpTotal + 0.68417479453112 *
S_Age + 0.46966162186743 * S_Frq + -1.21537535753115 * S_Income + -1.87423294109672 *
S_Kidhome + 0.76913864731495 * S_Mnt + 1.08535778796502 * S_MntFishProducts + 1.27743864099826
* S_MntFruits + -0.3186089651882 * S_MntGoldProds + -0.00224333051647 * S_MntMeatProducts +
-1.28169616734092 * S_MntSweetProducts + 1.67350500234032 * S_MntWines + 1.09584504562467 *
S_MonthsAsCustomer + -1.45467876727494 * S_NumCatalogPurchases + 0.85965187264096 *
S_NumDealsPurchases + -1.15239933286756 * S_NumDistPurchases + 1.20800889102387 *
S_NumStorePurchases + 1.08790389130242 * S_NumWebPurchases + -0.13665551161149 *
S_NumWebVisitsMonth + 1.02103499612659 * S_RFMstat + -0.12980097143044 * S_RMntFrq +
0.65854311654256 * S_Recency + -0.60999209572192 * S_Teenhome ;
2533837   +   H1x3_3  =    -0.72575004293074 * S_AcceptedCmpTotal
2533838   +          +     0.34932839743259 * S_Age  +     -0.2673460618328 * S_Frq
2533839   +          +     0.25743187687481 * S_Income  +    -0.02172890929346 *
2533840   +        S_Kidhome  +     1.21785656626837 * S_Mnt  +     0.37454359336223 *
2533841   +        S_MntFishProducts  +    -0.32600053706408 * S_MntFruits
2533842   +          +     0.57807148940534 * S_MntGoldProds  +     1.14736546512366 *
2533843   +        S_MntMeatProducts  +    -1.41517082393978 * S_MntSweetProducts
2533844   +          +    -1.44899595080061 * S_MntWines  +    -1.45520867126531 *
2533845   +        S_MonthsAsCustomer  +    -0.33372174099196 * S_NumCatalogPurchases
2533846   +          +     -0.5767607129654 * S_NumDealsPurchases
2533847   +          +     -0.2643921429796 * S_NumDistPurchases
2533848   +          +    -0.67417489911206 * S_NumStorePurchases
2533849   +          +    -0.51423877684891 * S_NumWebPurchases
2533850   +          +     1.40328299605176 * S_NumWebVisitsMonth
2533851   +          +     1.35588787174957 * S_RFMstat  +     1.98416436137119 *
2533852   +        S_RMntFrq  +     -0.8447362450681 * S_Recency
2533853   +          +    -1.04372961736437 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_3 = -0.72575004293074 * S_AcceptedCmpTotal + 0.34932839743259 *
S_Age + -0.2673460618328 * S_Frq + 0.25743187687481 * S_Income + -0.02172890929346 * S_Kidhome
+ 1.21785656626837 * S_Mnt + 0.37454359336223 * S_MntFishProducts + -0.32600053706408 *
S_MntFruits + 0.57807148940534 * S_MntGoldProds + 1.14736546512366 * S_MntMeatProducts +
-1.41517082393978 * S_MntSweetProducts + -1.44899595080061 * S_MntWines + -1.45520867126531 *
S_MonthsAsCustomer + -0.33372174099196 * S_NumCatalogPurchases + -0.5767607129654 *
S_NumDealsPurchases + -0.2643921429796 * S_NumDistPurchases + -0.67417489911206 *
S_NumStorePurchases + -0.51423877684891 * S_NumWebPurchases + 1.40328299605176 *
S_NumWebVisitsMonth + 1.35588787174957 * S_RFMstat + 1.98416436137119 * S_RMntFrq +
-0.8447362450681 * S_Recency + -1.04372961736437 * S_Teenhome ;
2533854   +   H1x3_4  =     0.05745684959388 * S_AcceptedCmpTotal
2533855   +          +    -0.71077680161454 * S_Age  +      1.4854566142375 * S_Frq
2533856   +          +    -0.32870416928843 * S_Income  +    -0.24944295149087 *
2533857   +        S_Kidhome  +     -0.8312409740431 * S_Mnt  +    -0.09638646505384 *
2533858   +        S_MntFishProducts  +    -0.86550491354678 * S_MntFruits
2533859   +          +     1.46902858697296 * S_MntGoldProds  +      0.3661164136841 *
2533860   +        S_MntMeatProducts  +     0.43108270077708 * S_MntSweetProducts
2533861   +          +    -0.87140466249616 * S_MntWines  +     0.17511224898094 *
2533862   +        S_MonthsAsCustomer  +    -2.66256923117027 * S_NumCatalogPurchases
2533863   +          +      1.2821617657076 * S_NumDealsPurchases
2533864   +          +     1.26584115202735 * S_NumDistPurchases
2533865   +          +    -0.46597664211833 * S_NumStorePurchases
2533866   +          +     0.45652363472866 * S_NumWebPurchases
2533867   +          +    -2.66296112021252 * S_NumWebVisitsMonth
2533868   +          +    -0.86670667018974 * S_RFMstat  +     0.60866041131732 *
2533869   +        S_RMntFrq  +     1.31886754707923 * S_Recency
2533870   +          +    -0.09949653139413 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_4 = 0.05745684959388 * S_AcceptedCmpTotal + -0.71077680161454 *
S_Age + 1.4854566142375 * S_Frq + -0.32870416928843 * S_Income + -0.24944295149087 * S_Kidhome
+ -0.8312409740431 * S_Mnt + -0.09638646505384 * S_MntFishProducts + -0.86550491354678 *
S_MntFruits + 1.46902858697296 * S_MntGoldProds + 0.3661164136841 * S_MntMeatProducts +
0.43108270077708 * S_MntSweetProducts + -0.87140466249616 * S_MntWines + 0.17511224898094 *
S_MonthsAsCustomer + -2.66256923117027 * S_NumCatalogPurchases + 1.2821617657076 *
S_NumDealsPurchases + 1.26584115202735 * S_NumDistPurchases + -0.46597664211833 *
S_NumStorePurchases + 0.45652363472866 * S_NumWebPurchases + -2.66296112021252 *
S_NumWebVisitsMonth + -0.86670667018974 * S_RFMstat + 0.60866041131732 * S_RMntFrq +
1.31886754707923 * S_Recency + -0.09949653139413 * S_Teenhome ;
2533871   +   H1x3_5  =    -0.66850525418144 * S_AcceptedCmpTotal
2533872   +          +     0.14331320698516 * S_Age  +    -0.82708146094779 * S_Frq
2533873   +          +    -0.95718847240937 * S_Income  +     1.37375648833049 *
2533874   +        S_Kidhome  +    -0.48314397401233 * S_Mnt  +     0.07047324834759 *
2533875   +        S_MntFishProducts  +     0.86114312801139 * S_MntFruits
2533876   +          +     0.54573348379533 * S_MntGoldProds  +    -0.05966372249273 *
2533877   +        S_MntMeatProducts  +     0.47275063848217 * S_MntSweetProducts
2533878   +          +    -0.62962007155261 * S_MntWines  +    -2.38081462831488 *
2533879   +        S_MonthsAsCustomer  +     0.56594272689824 * S_NumCatalogPurchases
2533880   +          +    -0.85162564171681 * S_NumDealsPurchases
2533881   +          +     0.64631099667221 * S_NumDistPurchases
2533882   +          +    -0.03081963858636 * S_NumStorePurchases
2533883   +          +    -0.24124717624664 * S_NumWebPurchases
2533884   +          +     0.56425980772372 * S_NumWebVisitsMonth
2533885   +          +    -0.32254616624678 * S_RFMstat  +     1.84875225899832 *
2533886   +        S_RMntFrq  +     0.08133312388911 * S_Recency
2533887   +          +    -0.19004451996479 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_5 = -0.66850525418144 * S_AcceptedCmpTotal + 0.14331320698516 *
S_Age + -0.82708146094779 * S_Frq + -0.95718847240937 * S_Income + 1.37375648833049 *
S_Kidhome + -0.48314397401233 * S_Mnt + 0.07047324834759 * S_MntFishProducts +
0.86114312801139 * S_MntFruits + 0.54573348379533 * S_MntGoldProds + -0.05966372249273 *
S_MntMeatProducts + 0.47275063848217 * S_MntSweetProducts + -0.62962007155261 * S_MntWines +
-2.38081462831488 * S_MonthsAsCustomer + 0.56594272689824 * S_NumCatalogPurchases +
-0.85162564171681 * S_NumDealsPurchases + 0.64631099667221 * S_NumDistPurchases +
-0.03081963858636 * S_NumStorePurchases + -0.24124717624664 * S_NumWebPurchases +
0.56425980772372 * S_NumWebVisitsMonth + -0.32254616624678 * S_RFMstat + 1.84875225899832 *
S_RMntFrq + 0.08133312388911 * S_Recency + -0.19004451996479 * S_Teenhome ;
2533888   +   H1x3_1  = H1x3_1  +     1.03487942320068 * AcceptedCmp10
2533889   +          +     0.77723443135875 * AcceptedCmp20  +    -1.04686858569959 *
2533890   +        AcceptedCmp30  +    -1.87852311800194 * AcceptedCmp40
2533891   +          +    -0.69838759011672 * AcceptedCmp50  +     0.50242045854463 *
2533892   +        Complain0  +    -0.13339808164255 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + 1.03487942320068 * AcceptedCmp10 + 0.77723443135875 *
AcceptedCmp20 + -1.04686858569959 * AcceptedCmp30 + -1.87852311800194 * AcceptedCmp40 +
-0.69838759011672 * AcceptedCmp50 + 0.50242045854463 * Complain0 + -0.13339808164255 *
HigherEducationBinary0 ;
2533893   +   H1x3_2  = H1x3_2  +     0.39887299789564 * AcceptedCmp10
2533894   +          +     0.12293700562648 * AcceptedCmp20  +    -1.41656670681309 *
2533895   +        AcceptedCmp30  +    -1.04607557362847 * AcceptedCmp40
2533896   +          +     0.02824649030864 * AcceptedCmp50  +    -0.46581865837196 *
2533897   +        Complain0  +    -0.45913631308543 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 + 0.39887299789564 * AcceptedCmp10 + 0.12293700562648 *
AcceptedCmp20 + -1.41656670681309 * AcceptedCmp30 + -1.04607557362847 * AcceptedCmp40 +
0.02824649030864 * AcceptedCmp50 + -0.46581865837196 * Complain0 + -0.45913631308543 *
HigherEducationBinary0 ;
2533898   +   H1x3_3  = H1x3_3  +     0.20672868292414 * AcceptedCmp10
2533899   +          +     0.52082182457868 * AcceptedCmp20  +     0.54911826263592 *
2533900   +        AcceptedCmp30  +    -0.02400616289922 * AcceptedCmp40
2533901   +          +     1.22209744911863 * AcceptedCmp50  +    -0.68243413694538 *
2533902   +        Complain0  +     0.15620895311704 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_3 = H1x3_3 + 0.20672868292414 * AcceptedCmp10 + 0.52082182457868 *
AcceptedCmp20 + 0.54911826263592 * AcceptedCmp30 + -0.02400616289922 * AcceptedCmp40 +
1.22209744911863 * AcceptedCmp50 + -0.68243413694538 * Complain0 + 0.15620895311704 *
HigherEducationBinary0 ;
2533903   +   H1x3_4  = H1x3_4  +    -0.88269820758187 * AcceptedCmp10
2533904   +          +    -0.19276892535938 * AcceptedCmp20  +     1.26789056018511 *
2533905   +        AcceptedCmp30  +     0.04396979158385 * AcceptedCmp40
2533906   +          +     0.54194186871284 * AcceptedCmp50  +     2.07766091697967 *
2533907   +        Complain0  +    -0.43514178858246 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_4 = H1x3_4 + -0.88269820758187 * AcceptedCmp10 + -0.19276892535938
* AcceptedCmp20 + 1.26789056018511 * AcceptedCmp30 + 0.04396979158385 * AcceptedCmp40 +
0.54194186871284 * AcceptedCmp50 + 2.07766091697967 * Complain0 + -0.43514178858246 *
HigherEducationBinary0 ;
2533908   +   H1x3_5  = H1x3_5  +     1.04303179873707 * AcceptedCmp10
2533909   +          +    -1.29742389809739 * AcceptedCmp20  +     1.21708533617895 *
2533910   +        AcceptedCmp30  +    -1.47807634614974 * AcceptedCmp40
2533911   +          +     -0.7694244559597 * AcceptedCmp50  +     0.51798162453723 *
2533912   +        Complain0  +    -0.95513113905832 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_5 = H1x3_5 + 1.04303179873707 * AcceptedCmp10 + -1.29742389809739 *
AcceptedCmp20 + 1.21708533617895 * AcceptedCmp30 + -1.47807634614974 * AcceptedCmp40 +
-0.7694244559597 * AcceptedCmp50 + 0.51798162453723 * Complain0 + -0.95513113905832 *
HigherEducationBinary0 ;
2533913   +   H1x3_1  = H1x3_1  +     1.27822716215014 * Education2n_Cycle
2533914   +          +     0.45900505383383 * EducationBasic  +    -0.35822992758656 *
2533915   +        EducationGraduation  +     0.05949934527868 * EducationMaster
2533916   +          +    -2.49973437075558 * Marital_StatusDivorced
2533917   +          +    -0.18076948182574 * Marital_StatusMarried
2533918   +          +     0.13498525495231 * Marital_StatusSingle
2533919   +          +    -0.02365465636052 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + 1.27822716215014 * Education2n_Cycle +
0.45900505383383 * EducationBasic + -0.35822992758656 * EducationGraduation + 0.05949934527868
* EducationMaster + -2.49973437075558 * Marital_StatusDivorced + -0.18076948182574 *
Marital_StatusMarried + 0.13498525495231 * Marital_StatusSingle + -0.02365465636052 *
Marital_StatusTogether ;
2533920   +   H1x3_2  = H1x3_2  +    -1.14981446246051 * Education2n_Cycle
2533921   +          +     0.68006996858541 * EducationBasic  +    -0.06493857044709 *
2533922   +        EducationGraduation  +    -1.22462805502453 * EducationMaster
2533923   +          +       -0.59463732835 * Marital_StatusDivorced
2533924   +          +     1.37741332427598 * Marital_StatusMarried
2533925   +          +     -1.5833455713231 * Marital_StatusSingle
2533926   +          +     1.79205360628448 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 + -1.14981446246051 * Education2n_Cycle +
0.68006996858541 * EducationBasic + -0.06493857044709 * EducationGraduation +
-1.22462805502453 * EducationMaster + -0.59463732835 * Marital_StatusDivorced +
1.37741332427598 * Marital_StatusMarried + -1.5833455713231 * Marital_StatusSingle +
1.79205360628448 * Marital_StatusTogether ;
2533927   +   H1x3_3  = H1x3_3  +     0.17779609626753 * Education2n_Cycle
2533928   +          +    -2.22704675950779 * EducationBasic  +     1.30292325944162 *
2533929   +        EducationGraduation  +     0.68083131423474 * EducationMaster
2533930   +          +    -0.44569556289443 * Marital_StatusDivorced
2533931   +          +     0.29918053103557 * Marital_StatusMarried
2533932   +          +    -0.10337314064224 * Marital_StatusSingle
2533933   +          +     0.04054221993299 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_3 = H1x3_3 + 0.17779609626753 * Education2n_Cycle +
-2.22704675950779 * EducationBasic + 1.30292325944162 * EducationGraduation + 0.68083131423474
* EducationMaster + -0.44569556289443 * Marital_StatusDivorced + 0.29918053103557 *
Marital_StatusMarried + -0.10337314064224 * Marital_StatusSingle + 0.04054221993299 *
Marital_StatusTogether ;
2533934   +   H1x3_4  = H1x3_4  +     1.16412985277542 * Education2n_Cycle
2533935   +          +     0.18806330813344 * EducationBasic  +     0.00212145829045 *
2533936   +        EducationGraduation  +     0.00087354662697 * EducationMaster
2533937   +          +     1.13881957277462 * Marital_StatusDivorced
2533938   +          +    -0.35849807146313 * Marital_StatusMarried
2533939   +          +    -0.22168731316885 * Marital_StatusSingle
2533940   +          +    -0.22672306263461 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_4 = H1x3_4 + 1.16412985277542 * Education2n_Cycle +
0.18806330813344 * EducationBasic + 0.00212145829045 * EducationGraduation + 0.00087354662697
* EducationMaster + 1.13881957277462 * Marital_StatusDivorced + -0.35849807146313 *
Marital_StatusMarried + -0.22168731316885 * Marital_StatusSingle + -0.22672306263461 *
Marital_StatusTogether ;
2533941   +   H1x3_5  = H1x3_5  +    -1.25195599938207 * Education2n_Cycle
2533942   +          +    -0.60946428681789 * EducationBasic  +     0.39993500009227 *
2533943   +        EducationGraduation  +     0.43730905987249 * EducationMaster
2533944   +          +     1.10774969923269 * Marital_StatusDivorced
2533945   +          +     1.08409594073043 * Marital_StatusMarried
2533946   +          +    -0.33145048007894 * Marital_StatusSingle
2533947   +          +     1.68703837664761 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_5 = H1x3_5 + -1.25195599938207 * Education2n_Cycle +
-0.60946428681789 * EducationBasic + 0.39993500009227 * EducationGraduation + 0.43730905987249
* EducationMaster + 1.10774969923269 * Marital_StatusDivorced + 1.08409594073043 *
Marital_StatusMarried + -0.33145048007894 * Marital_StatusSingle + 1.68703837664761 *
Marital_StatusTogether ;
2533948   +   H1x3_1  =     1.76093149538288 + H1x3_1 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 1.76093149538288 + H1x3_1 ;
2533949   +   H1x3_2  =    -0.11243980195421 + H1x3_2 ;
MPRINT(EM_DIAGRAM):   H1x3_2 = -0.11243980195421 + H1x3_2 ;
2533950   +   H1x3_3  =    -2.59474781862449 + H1x3_3 ;
MPRINT(EM_DIAGRAM):   H1x3_3 = -2.59474781862449 + H1x3_3 ;
2533951   +   H1x3_4  =     0.25376473610258 + H1x3_4 ;
MPRINT(EM_DIAGRAM):   H1x3_4 = 0.25376473610258 + H1x3_4 ;
2533952   +   H1x3_5  =    -0.54808648261397 + H1x3_5 ;
MPRINT(EM_DIAGRAM):   H1x3_5 = -0.54808648261397 + H1x3_5 ;
2533953   +   _EPS = SQRT(CONSTANT('MACEPS')) ;
MPRINT(EM_DIAGRAM):   _EPS = SQRT(CONSTANT('MACEPS')) ;
2533954   +   _REC_EPS = 1/_EPS ;
MPRINT(EM_DIAGRAM):   _REC_EPS = 1/_EPS ;
2533955   +   DROP _REC_EPS _EPS ;
MPRINT(EM_DIAGRAM):   DROP _REC_EPS _EPS ;
2533956   +   IF H1x3_1  < _REC_EPS AND H1x3_1  > - _REC_EPS THEN
2533957   +   H1x3_1  = H1x3_1  * H1x3_1 ;
MPRINT(EM_DIAGRAM):   IF H1x3_1 < _REC_EPS AND H1x3_1 > - _REC_EPS THEN H1x3_1 = H1x3_1 *
H1x3_1 ;
2533958   +   ELSE H1x3_1  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x3_1 = _REC_EPS ;
2533959   +   IF H1x3_2  < _REC_EPS AND H1x3_2  > - _REC_EPS THEN
2533960   +   H1x3_2  = H1x3_2  * H1x3_2 ;
MPRINT(EM_DIAGRAM):   IF H1x3_2 < _REC_EPS AND H1x3_2 > - _REC_EPS THEN H1x3_2 = H1x3_2 *
H1x3_2 ;
2533961   +   ELSE H1x3_2  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x3_2 = _REC_EPS ;
2533962   +   IF H1x3_3  < _REC_EPS AND H1x3_3  > - _REC_EPS THEN
2533963   +   H1x3_3  = H1x3_3  * H1x3_3 ;
MPRINT(EM_DIAGRAM):   IF H1x3_3 < _REC_EPS AND H1x3_3 > - _REC_EPS THEN H1x3_3 = H1x3_3 *
H1x3_3 ;
2533964   +   ELSE H1x3_3  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x3_3 = _REC_EPS ;
2533965   +   IF H1x3_4  < _REC_EPS AND H1x3_4  > - _REC_EPS THEN
2533966   +   H1x3_4  = H1x3_4  * H1x3_4 ;
MPRINT(EM_DIAGRAM):   IF H1x3_4 < _REC_EPS AND H1x3_4 > - _REC_EPS THEN H1x3_4 = H1x3_4 *
H1x3_4 ;
2533967   +   ELSE H1x3_4  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x3_4 = _REC_EPS ;
2533968   +   IF H1x3_5  < _REC_EPS AND H1x3_5  > - _REC_EPS THEN
2533969   +   H1x3_5  = H1x3_5  * H1x3_5 ;
MPRINT(EM_DIAGRAM):   IF H1x3_5 < _REC_EPS AND H1x3_5 > - _REC_EPS THEN H1x3_5 = H1x3_5 *
H1x3_5 ;
2533970   +   ELSE H1x3_5  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x3_5 = _REC_EPS ;
2533971   +END;
MPRINT(EM_DIAGRAM):   END;
2533972   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2533973   +   H1x3_1  = .;
MPRINT(EM_DIAGRAM):   H1x3_1 = .;
2533974   +   H1x3_2  = .;
MPRINT(EM_DIAGRAM):   H1x3_2 = .;
2533975   +   H1x3_3  = .;
MPRINT(EM_DIAGRAM):   H1x3_3 = .;
2533976   +   H1x3_4  = .;
MPRINT(EM_DIAGRAM):   H1x3_4 = .;
2533977   +   H1x3_5  = .;
MPRINT(EM_DIAGRAM):   H1x3_5 = .;
2533978   +END;
MPRINT(EM_DIAGRAM):   END;
2533979   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2533980   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2533981   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2533982   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2533983   +   P_DepVar1  =     12.3694111963696 * H1x1_1  +     -9.1014019341077 * H1x1_2
2533984   +          +    -14.9093780045901 * H1x1_3  +     25.4505756686259 * H1x1_4
2533985   +          +    -13.3798044908382 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 12.3694111963696 * H1x1_1 + -9.1014019341077 * H1x1_2 +
-14.9093780045901 * H1x1_3 + 25.4505756686259 * H1x1_4 + -13.3798044908382 * H1x1_5 ;
2533986   +   P_DepVar1  = P_DepVar1  +     -0.2373753683635 * H1x2_1
2533987   +          +    -0.03661175538589 * H1x2_2  +     0.29534813812803 * H1x2_3
2533988   +          +     0.11908166898588 * H1x2_4  +      -0.241544638637 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 + -0.2373753683635 * H1x2_1 + -0.03661175538589 *
H1x2_2 + 0.29534813812803 * H1x2_3 + 0.11908166898588 * H1x2_4 + -0.241544638637 * H1x2_5 ;
2533989   +   P_DepVar1  = P_DepVar1  +    -0.00276620815201 * H1x3_1
2533990   +          +     0.00487849269566 * H1x3_2  +     0.01323887261394 * H1x3_3
2533991   +          +     -0.0271389925801 * H1x3_4  +     0.00026595473892 * H1x3_5 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 + -0.00276620815201 * H1x3_1 + 0.00487849269566 *
H1x3_2 + 0.01323887261394 * H1x3_3 + -0.0271389925801 * H1x3_4 + 0.00026595473892 * H1x3_5 ;
2533992   +   P_DepVar1  =      4.0541137239843 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 4.0541137239843 + P_DepVar1 ;
2533993   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2533994   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2533995   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2533996   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2533997   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2533998   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2533999   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2534000   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2534001   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2534002   +END;
MPRINT(EM_DIAGRAM):   END;
2534003   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2534004   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2534005   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2534006   +END;
MPRINT(EM_DIAGRAM):   END;
2534007   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2534008   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2534009   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2534010   +END;
MPRINT(EM_DIAGRAM):   END;
2534011   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2534012   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2534013   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2534014   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2534015   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2534016   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2534017   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2534018   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2534019   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2534020   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2534021   +END;
MPRINT(EM_DIAGRAM):   END;
2534022   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2534023   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2534024   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2534025   +drop
2534026   +H1x1_1
2534027   +H1x1_2
2534028   +H1x1_3
2534029   +H1x1_4
2534030   +H1x1_5
2534031   +H1x2_1
2534032   +H1x2_2
2534033   +H1x2_3
2534034   +H1x2_4
2534035   +H1x2_5
2534036   +H1x3_1
2534037   +H1x3_2
2534038   +H1x3_3
2534039   +H1x3_4
2534040   +H1x3_5
2534041   +;
MPRINT(EM_DIAGRAM):   drop H1x1_1 H1x1_2 H1x1_3 H1x1_4 H1x1_5 H1x2_1 H1x2_2 H1x2_3 H1x2_4
H1x2_5 H1x3_1 H1x3_2 H1x3_3 H1x3_4 H1x3_5 ;
2534042   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
2534043   +* Renaming variables for AutoNeural10;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural10;
2534044   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2534045   +* Renaming Posterior variables for AutoNeural10;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural10;
2534046   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2534047   +drop AutoNeural10_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural10_P_DepVar1;
2534048   +AutoNeural10_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural10_P_DepVar1 = P_DepVar1;
2534049   +drop AutoNeural10_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural10_P_DepVar0;
2534050   +AutoNeural10_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural10_P_DepVar0 = P_DepVar0;
2534051   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2534052   +* Renaming _WARN_ variable for AutoNeural10;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural10;
2534053   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2534054   +length AutoNeural10_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural10_WARN_ $4;
2534055   +drop AutoNeural10_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural10_WARN_;
2534056   +AutoNeural10_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural10_WARN_ = _WARN_;
2534057   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2534058   +* Ensmbl36: Scoring Code of model 5 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl36: Scoring Code of model 5 of 7;
2534059   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2534060   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2534061   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
2534062   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
2534063   +* NODE: AutoNeural9;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural9;
2534064   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2534065   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2534066   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2534067   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2534068   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2534069   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2534070   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2534071   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2534072   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2534073   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2534074   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2534075   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2534076   +LENGTH _WARN_ $4
2534077   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
2534078   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2534079   +
2534080   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
2534081   +
2534082   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
2534083   +
2534084   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2534085   +
2534086   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2534087   +
2534088   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2534089   +
2534090   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2534091   +
2534092   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2534093   +
2534094   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2534095   +
2534096   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2534097   +
2534098   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2534099   +
2534100   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2534101   +
2534102   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
2534103   +
2534104   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2534105   +
2534106   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2534107   +
2534108   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
2534109   +
2534110   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2534111   +
2534112   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2534113   +
2534114   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2534115   +
2534116   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2534117   +
2534118   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
2534119   +
2534120   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2534121   +
2534122   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2534123   +
2534124   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2534125   +
2534126   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2534127   +
2534128   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2534129   +
2534130   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2534131   +
2534132   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2534133   +
2534134   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2534135   +
2534136   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
2534137   +
2534138   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2534139   +
2534140   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2534141   +
2534142   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2534143   +
2534144   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2534145   +
2534146   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2534147   +
2534148   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2534149   +
2534150   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2534151   +
2534152   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2534153   +
2534154   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
2534155   +
2534156   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
2534157   +
2534158   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
2534159   +
2534160   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
2534161   +
2534162   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2534163   +
2534164   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2534165   +
2534166   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2534167   +
2534168   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2534169   +
2534170   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2534171   +
2534172   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2534173   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2534174   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2534175   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2534176   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2534177   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2534178   +end;
MPRINT(EM_DIAGRAM):   end;
2534179   +else do;
MPRINT(EM_DIAGRAM):   else do;
2534180   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2534181   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2534182   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2534183   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2534184   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2534185   +   end;
MPRINT(EM_DIAGRAM):   end;
2534186   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2534187   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2534188   +   end;
MPRINT(EM_DIAGRAM):   end;
2534189   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2534190   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2534191   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2534192   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2534193   +   end;
MPRINT(EM_DIAGRAM):   end;
2534194   +end;
MPRINT(EM_DIAGRAM):   end;
2534195   +
2534196   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2534197   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2534198   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2534199   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2534200   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2534201   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2534202   +end;
MPRINT(EM_DIAGRAM):   end;
2534203   +else do;
MPRINT(EM_DIAGRAM):   else do;
2534204   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2534205   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2534206   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2534207   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2534208   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2534209   +   end;
MPRINT(EM_DIAGRAM):   end;
2534210   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2534211   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2534212   +   end;
MPRINT(EM_DIAGRAM):   end;
2534213   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2534214   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2534215   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2534216   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2534217   +   end;
MPRINT(EM_DIAGRAM):   end;
2534218   +end;
MPRINT(EM_DIAGRAM):   end;
2534219   +
2534220   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2534221   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2534222   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2534223   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2534224   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2534225   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2534226   +end;
MPRINT(EM_DIAGRAM):   end;
2534227   +else do;
MPRINT(EM_DIAGRAM):   else do;
2534228   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2534229   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2534230   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2534231   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2534232   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2534233   +   end;
MPRINT(EM_DIAGRAM):   end;
2534234   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2534235   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2534236   +   end;
MPRINT(EM_DIAGRAM):   end;
2534237   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2534238   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2534239   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2534240   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2534241   +   end;
MPRINT(EM_DIAGRAM):   end;
2534242   +end;
MPRINT(EM_DIAGRAM):   end;
2534243   +
2534244   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2534245   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2534246   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2534247   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2534248   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2534249   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2534250   +end;
MPRINT(EM_DIAGRAM):   end;
2534251   +else do;
MPRINT(EM_DIAGRAM):   else do;
2534252   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2534253   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2534254   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2534255   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2534256   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2534257   +   end;
MPRINT(EM_DIAGRAM):   end;
2534258   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2534259   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2534260   +   end;
MPRINT(EM_DIAGRAM):   end;
2534261   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2534262   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2534263   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2534264   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2534265   +   end;
MPRINT(EM_DIAGRAM):   end;
2534266   +end;
MPRINT(EM_DIAGRAM):   end;
2534267   +
2534268   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2534269   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2534270   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2534271   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2534272   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2534273   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2534274   +end;
MPRINT(EM_DIAGRAM):   end;
2534275   +else do;
MPRINT(EM_DIAGRAM):   else do;
2534276   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2534277   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2534278   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2534279   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2534280   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2534281   +   end;
MPRINT(EM_DIAGRAM):   end;
2534282   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2534283   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2534284   +   end;
MPRINT(EM_DIAGRAM):   end;
2534285   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2534286   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2534287   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2534288   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2534289   +   end;
MPRINT(EM_DIAGRAM):   end;
2534290   +end;
MPRINT(EM_DIAGRAM):   end;
2534291   +
2534292   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2534293   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2534294   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2534295   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2534296   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2534297   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2534298   +end;
MPRINT(EM_DIAGRAM):   end;
2534299   +else do;
MPRINT(EM_DIAGRAM):   else do;
2534300   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2534301   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2534302   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2534303   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2534304   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2534305   +   end;
MPRINT(EM_DIAGRAM):   end;
2534306   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2534307   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2534308   +   end;
MPRINT(EM_DIAGRAM):   end;
2534309   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2534310   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2534311   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2534312   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2534313   +   end;
MPRINT(EM_DIAGRAM):   end;
2534314   +end;
MPRINT(EM_DIAGRAM):   end;
2534315   +
2534316   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
2534317   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
2534318   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
2534319   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2534320   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2534321   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2534322   +end;
MPRINT(EM_DIAGRAM):   end;
2534323   +else do;
MPRINT(EM_DIAGRAM):   else do;
2534324   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2534325   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
2534326   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2534327   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
2534328   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
2534329   +   end;
MPRINT(EM_DIAGRAM):   end;
2534330   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
2534331   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
2534332   +   end;
MPRINT(EM_DIAGRAM):   end;
2534333   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2534334   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2534335   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2534336   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2534337   +   end;
MPRINT(EM_DIAGRAM):   end;
2534338   +end;
MPRINT(EM_DIAGRAM):   end;
2534339   +
2534340   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2534341   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
2534342   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2534343   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2534344   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2534345   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2534346   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2534347   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2534348   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2534349   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2534350   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2534351   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2534352   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2534353   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2534354   +end;
MPRINT(EM_DIAGRAM):   end;
2534355   +else do;
MPRINT(EM_DIAGRAM):   else do;
2534356   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2534357   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2534358   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2534359   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2534360   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2534361   +   end;
MPRINT(EM_DIAGRAM):   end;
2534362   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2534363   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2534364   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2534365   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2534366   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2534367   +   end;
MPRINT(EM_DIAGRAM):   end;
2534368   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2534369   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2534370   +   end;
MPRINT(EM_DIAGRAM):   end;
2534371   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2534372   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2534373   +   end;
MPRINT(EM_DIAGRAM):   end;
2534374   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2534375   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2534376   +   end;
MPRINT(EM_DIAGRAM):   end;
2534377   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2534378   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2534379   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2534380   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2534381   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2534382   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2534383   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2534384   +   end;
MPRINT(EM_DIAGRAM):   end;
2534385   +end;
MPRINT(EM_DIAGRAM):   end;
2534386   +
2534387   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2534388   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2534389   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
2534390   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2534391   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2534392   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2534393   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2534394   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2534395   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2534396   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2534397   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2534398   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2534399   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2534400   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2534401   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2534402   +end;
MPRINT(EM_DIAGRAM):   end;
2534403   +else do;
MPRINT(EM_DIAGRAM):   else do;
2534404   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2534405   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2534406   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2534407   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2534408   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2534409   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2534410   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2534411   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2534412   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2534413   +         end;
MPRINT(EM_DIAGRAM):   end;
2534414   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2534415   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2534416   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2534417   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2534418   +            end;
MPRINT(EM_DIAGRAM):   end;
2534419   +         end;
MPRINT(EM_DIAGRAM):   end;
2534420   +      end;
MPRINT(EM_DIAGRAM):   end;
2534421   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2534422   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2534423   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2534424   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2534425   +         end;
MPRINT(EM_DIAGRAM):   end;
2534426   +      end;
MPRINT(EM_DIAGRAM):   end;
2534427   +   end;
MPRINT(EM_DIAGRAM):   end;
2534428   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2534429   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2534430   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2534431   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2534432   +      end;
MPRINT(EM_DIAGRAM):   end;
2534433   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2534434   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2534435   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2534436   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2534437   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2534438   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2534439   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2534440   +         end;
MPRINT(EM_DIAGRAM):   end;
2534441   +      end;
MPRINT(EM_DIAGRAM):   end;
2534442   +   end;
MPRINT(EM_DIAGRAM):   end;
2534443   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2534444   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2534445   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2534446   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2534447   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2534448   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2534449   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2534450   +   end;
MPRINT(EM_DIAGRAM):   end;
2534451   +end;
MPRINT(EM_DIAGRAM):   end;
2534452   +
2534453   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2534454   +*** Checking missing input Interval
2534455   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2534456   +
2534457   +IF NMISS(
2534458   +   AcceptedCmpTotal ,
2534459   +   Age ,
2534460   +   Frq ,
2534461   +   Income ,
2534462   +   Kidhome ,
2534463   +   Mnt ,
2534464   +   MntFishProducts ,
2534465   +   MntFruits ,
2534466   +   MntGoldProds ,
2534467   +   MntMeatProducts ,
2534468   +   MntSweetProducts ,
2534469   +   MntWines ,
2534470   +   MonthsAsCustomer ,
2534471   +   NumCatalogPurchases ,
2534472   +   NumDealsPurchases ,
2534473   +   NumDistPurchases ,
2534474   +   NumStorePurchases ,
2534475   +   NumWebPurchases ,
2534476   +   NumWebVisitsMonth ,
2534477   +   RFMstat ,
2534478   +   RMntFrq ,
2534479   +   Recency ,
2534480   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
2534481   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2534482   +
2534483   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2534484   +END;
MPRINT(EM_DIAGRAM):   END;
2534485   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2534486   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
2534487   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2534488   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2534489   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2534490   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
2534491   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2534492   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2534493   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2534494   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2534495   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2534496   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2534497   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2534498   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2534499   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2534500   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2534501   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2534502   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
2534503   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2534504   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2534505   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2534506   +   S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2534507   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 *
MonthsAsCustomer ;
2534508   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2534509   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
2534510   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2534511   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2534512   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2534513   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
2534514   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2534515   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
2534516   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2534517   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
2534518   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2534519   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2534520   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2534521   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2534522   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2534523   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2534524   +END;
MPRINT(EM_DIAGRAM):   END;
2534525   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2534526   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2534527   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2534528   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
2534529   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
2534530   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2534531   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
2534532   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2534533   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2534534   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2534535   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2534536   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2534537   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2534538   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2534539   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2534540   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2534541   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2534542   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2534543   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2534544   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2534545   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2534546   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2534547   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
2534548   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2534549   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2534550   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
2534551   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2534552   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2534553   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2534554   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2534555   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2534556   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
2534557   +   ELSE S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2534558   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 *
MonthsAsCustomer ;
2534559   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2534560   +   ELSE S_NumCatalogPurchases
2534561   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2534562   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
2534563   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2534564   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2534565   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2534566   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
2534567   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2534568   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
2534569   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2534570   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2534571   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
2534572   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2534573   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2534574   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
2534575   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2534576   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2534577   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2534578   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2534579   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2534580   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
2534581   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2534582   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2534583   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2534584   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2534585   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2534586   +END;
MPRINT(EM_DIAGRAM):   END;
2534587   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2534588   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
2534589   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2534590   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2534591   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
2534592   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2534593   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2534594   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
2534595   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2534596   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2534597   +   H1x1_1  =     -0.7790327388408 * S_AcceptedCmpTotal
2534598   +          +     0.32193739579856 * S_Age  +    -0.43875684835169 * S_Frq
2534599   +          +     0.13013240455049 * S_Income  +    -0.74127716462976 *
2534600   +        S_Kidhome  +    -0.86416600561474 * S_Mnt  +     0.94819226754442 *
2534601   +        S_MntFishProducts  +     0.15895119408799 * S_MntFruits
2534602   +          +     0.03658391935071 * S_MntGoldProds  +    -3.75052142292398 *
2534603   +        S_MntMeatProducts  +    -0.22192220883538 * S_MntSweetProducts
2534604   +          +     0.80534656860633 * S_MntWines  +     0.16144794241259 *
2534605   +        S_MonthsAsCustomer  +    -1.53040364803625 * S_NumCatalogPurchases
2534606   +          +    -1.09856598010056 * S_NumDealsPurchases
2534607   +          +    -0.10571850472514 * S_NumDistPurchases
2534608   +          +     0.11898210654227 * S_NumStorePurchases
2534609   +          +      0.5984912060231 * S_NumWebPurchases
2534610   +          +     0.78592531126942 * S_NumWebVisitsMonth
2534611   +          +    -0.50004686386273 * S_RFMstat  +     0.40804018151571 *
2534612   +        S_RMntFrq  +    -0.94753260620308 * S_Recency
2534613   +          +    -0.49604118088328 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.7790327388408 * S_AcceptedCmpTotal + 0.32193739579856 *
S_Age + -0.43875684835169 * S_Frq + 0.13013240455049 * S_Income + -0.74127716462976 *
S_Kidhome + -0.86416600561474 * S_Mnt + 0.94819226754442 * S_MntFishProducts +
0.15895119408799 * S_MntFruits + 0.03658391935071 * S_MntGoldProds + -3.75052142292398 *
S_MntMeatProducts + -0.22192220883538 * S_MntSweetProducts + 0.80534656860633 * S_MntWines +
0.16144794241259 * S_MonthsAsCustomer + -1.53040364803625 * S_NumCatalogPurchases +
-1.09856598010056 * S_NumDealsPurchases + -0.10571850472514 * S_NumDistPurchases +
0.11898210654227 * S_NumStorePurchases + 0.5984912060231 * S_NumWebPurchases +
0.78592531126942 * S_NumWebVisitsMonth + -0.50004686386273 * S_RFMstat + 0.40804018151571 *
S_RMntFrq + -0.94753260620308 * S_Recency + -0.49604118088328 * S_Teenhome ;
2534614   +   H1x1_2  =    -0.22226926295489 * S_AcceptedCmpTotal
2534615   +          +     0.08523894206962 * S_Age  +    -0.13010378102207 * S_Frq
2534616   +          +    -0.61810906923536 * S_Income  +     0.26583917928045 *
2534617   +        S_Kidhome  +     0.57213479787981 * S_Mnt  +    -0.58077613046442 *
2534618   +        S_MntFishProducts  +      0.1530301493776 * S_MntFruits
2534619   +          +      0.4586167382631 * S_MntGoldProds  +     1.40179051129147 *
2534620   +        S_MntMeatProducts  +      0.0231413770297 * S_MntSweetProducts
2534621   +          +    -0.08483682112771 * S_MntWines  +     0.22891006905064 *
2534622   +        S_MonthsAsCustomer  +    -1.21866617917435 * S_NumCatalogPurchases
2534623   +          +    -0.84042044250624 * S_NumDealsPurchases
2534624   +          +    -0.10246261015488 * S_NumDistPurchases
2534625   +          +     0.06886149708824 * S_NumStorePurchases
2534626   +          +     0.63156910388199 * S_NumWebPurchases
2534627   +          +    -1.33032061845311 * S_NumWebVisitsMonth
2534628   +          +     0.51240040684649 * S_RFMstat  +     0.77604047421115 *
2534629   +        S_RMntFrq  +     1.27964260226958 * S_Recency
2534630   +          +     0.12022076571016 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.22226926295489 * S_AcceptedCmpTotal + 0.08523894206962 *
S_Age + -0.13010378102207 * S_Frq + -0.61810906923536 * S_Income + 0.26583917928045 *
S_Kidhome + 0.57213479787981 * S_Mnt + -0.58077613046442 * S_MntFishProducts + 0.1530301493776
* S_MntFruits + 0.4586167382631 * S_MntGoldProds + 1.40179051129147 * S_MntMeatProducts +
0.0231413770297 * S_MntSweetProducts + -0.08483682112771 * S_MntWines + 0.22891006905064 *
S_MonthsAsCustomer + -1.21866617917435 * S_NumCatalogPurchases + -0.84042044250624 *
S_NumDealsPurchases + -0.10246261015488 * S_NumDistPurchases + 0.06886149708824 *
S_NumStorePurchases + 0.63156910388199 * S_NumWebPurchases + -1.33032061845311 *
S_NumWebVisitsMonth + 0.51240040684649 * S_RFMstat + 0.77604047421115 * S_RMntFrq +
1.27964260226958 * S_Recency + 0.12022076571016 * S_Teenhome ;
2534631   +   H1x1_3  =     1.19879097976404 * S_AcceptedCmpTotal
2534632   +          +     0.14973951999399 * S_Age  +    -0.90630756390399 * S_Frq
2534633   +          +     0.64934241358682 * S_Income  +    -0.66249532206724 *
2534634   +        S_Kidhome  +     0.54195490560813 * S_Mnt  +    -0.58497380565417 *
2534635   +        S_MntFishProducts  +     0.12409202833851 * S_MntFruits
2534636   +          +     0.44480061346561 * S_MntGoldProds  +     3.27513201048136 *
2534637   +        S_MntMeatProducts  +     -0.1256493054184 * S_MntSweetProducts
2534638   +          +    -0.56080685022301 * S_MntWines  +     0.08633469383177 *
2534639   +        S_MonthsAsCustomer  +     0.45482673505107 * S_NumCatalogPurchases
2534640   +          +     0.45393712455366 * S_NumDealsPurchases
2534641   +          +    -0.25292198053552 * S_NumDistPurchases
2534642   +          +    -1.35582215064749 * S_NumStorePurchases
2534643   +          +    -0.83132202302639 * S_NumWebPurchases
2534644   +          +     1.87116225272678 * S_NumWebVisitsMonth
2534645   +          +     0.39564162951481 * S_RFMstat  +    -1.08810221295144 *
2534646   +        S_RMntFrq  +    -2.07407859514648 * S_Recency
2534647   +          +     -0.6849099475723 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.19879097976404 * S_AcceptedCmpTotal + 0.14973951999399 *
S_Age + -0.90630756390399 * S_Frq + 0.64934241358682 * S_Income + -0.66249532206724 *
S_Kidhome + 0.54195490560813 * S_Mnt + -0.58497380565417 * S_MntFishProducts +
0.12409202833851 * S_MntFruits + 0.44480061346561 * S_MntGoldProds + 3.27513201048136 *
S_MntMeatProducts + -0.1256493054184 * S_MntSweetProducts + -0.56080685022301 * S_MntWines +
0.08633469383177 * S_MonthsAsCustomer + 0.45482673505107 * S_NumCatalogPurchases +
0.45393712455366 * S_NumDealsPurchases + -0.25292198053552 * S_NumDistPurchases +
-1.35582215064749 * S_NumStorePurchases + -0.83132202302639 * S_NumWebPurchases +
1.87116225272678 * S_NumWebVisitsMonth + 0.39564162951481 * S_RFMstat + -1.08810221295144 *
S_RMntFrq + -2.07407859514648 * S_Recency + -0.6849099475723 * S_Teenhome ;
2534648   +   H1x1_1  = H1x1_1  +     0.81075414854045 * AcceptedCmp10
2534649   +          +    -0.33403710427327 * AcceptedCmp20  +    -0.62242387435975 *
2534650   +        AcceptedCmp30  +    -0.89439410552439 * AcceptedCmp40
2534651   +          +     0.77335976756467 * AcceptedCmp50  +    -0.08825784612626 *
2534652   +        Complain0  +      0.3404395194267 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.81075414854045 * AcceptedCmp10 + -0.33403710427327 *
AcceptedCmp20 + -0.62242387435975 * AcceptedCmp30 + -0.89439410552439 * AcceptedCmp40 +
0.77335976756467 * AcceptedCmp50 + -0.08825784612626 * Complain0 + 0.3404395194267 *
HigherEducationBinary0 ;
2534653   +   H1x1_2  = H1x1_2  +    -0.16741179709566 * AcceptedCmp10
2534654   +          +    -0.53751033948061 * AcceptedCmp20  +     0.80285496945068 *
2534655   +        AcceptedCmp30  +     0.39379279966091 * AcceptedCmp40
2534656   +          +    -1.40366799083237 * AcceptedCmp50  +     -0.4265482924132 *
2534657   +        Complain0  +     0.37272103593422 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.16741179709566 * AcceptedCmp10 + -0.53751033948061
* AcceptedCmp20 + 0.80285496945068 * AcceptedCmp30 + 0.39379279966091 * AcceptedCmp40 +
-1.40366799083237 * AcceptedCmp50 + -0.4265482924132 * Complain0 + 0.37272103593422 *
HigherEducationBinary0 ;
2534658   +   H1x1_3  = H1x1_3  +    -0.19417657656326 * AcceptedCmp10
2534659   +          +    -0.06547746897317 * AcceptedCmp20  +     0.21980739904513 *
2534660   +        AcceptedCmp30  +    -0.19452210052301 * AcceptedCmp40
2534661   +          +    -2.02403282278574 * AcceptedCmp50  +    -0.18250261144524 *
2534662   +        Complain0  +     0.34168103813312 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.19417657656326 * AcceptedCmp10 + -0.06547746897317
* AcceptedCmp20 + 0.21980739904513 * AcceptedCmp30 + -0.19452210052301 * AcceptedCmp40 +
-2.02403282278574 * AcceptedCmp50 + -0.18250261144524 * Complain0 + 0.34168103813312 *
HigherEducationBinary0 ;
2534663   +   H1x1_1  = H1x1_1  +    -0.03956789621002 * Education2n_Cycle
2534664   +          +    -0.38372374638888 * EducationBasic  +     -0.4178927802606 *
2534665   +        EducationGraduation  +    -0.61278625923288 * EducationMaster
2534666   +          +      0.4695898100094 * Marital_StatusDivorced
2534667   +          +    -0.52137742289262 * Marital_StatusMarried
2534668   +          +    -0.32382086914936 * Marital_StatusSingle
2534669   +          +    -0.66163012672344 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.03956789621002 * Education2n_Cycle +
-0.38372374638888 * EducationBasic + -0.4178927802606 * EducationGraduation +
-0.61278625923288 * EducationMaster + 0.4695898100094 * Marital_StatusDivorced +
-0.52137742289262 * Marital_StatusMarried + -0.32382086914936 * Marital_StatusSingle +
-0.66163012672344 * Marital_StatusTogether ;
2534670   +   H1x1_2  = H1x1_2  +    -0.25832319223886 * Education2n_Cycle
2534671   +          +     0.05602860720141 * EducationBasic  +    -0.86282852488383 *
2534672   +        EducationGraduation  +     0.18916317018059 * EducationMaster
2534673   +          +    -1.04858218653238 * Marital_StatusDivorced
2534674   +          +     2.41098335093061 * Marital_StatusMarried
2534675   +          +    -1.94696044861334 * Marital_StatusSingle
2534676   +          +     2.16021514856437 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.25832319223886 * Education2n_Cycle +
0.05602860720141 * EducationBasic + -0.86282852488383 * EducationGraduation + 0.18916317018059
* EducationMaster + -1.04858218653238 * Marital_StatusDivorced + 2.41098335093061 *
Marital_StatusMarried + -1.94696044861334 * Marital_StatusSingle + 2.16021514856437 *
Marital_StatusTogether ;
2534677   +   H1x1_3  = H1x1_3  +    -0.05351872242069 * Education2n_Cycle
2534678   +          +    -0.56850783552841 * EducationBasic  +    -0.14880907057098 *
2534679   +        EducationGraduation  +    -0.32850851013319 * EducationMaster
2534680   +          +     0.42964114177062 * Marital_StatusDivorced
2534681   +          +    -0.38607635605816 * Marital_StatusMarried
2534682   +          +    -0.02157405407852 * Marital_StatusSingle
2534683   +          +    -0.59995619744527 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.05351872242069 * Education2n_Cycle +
-0.56850783552841 * EducationBasic + -0.14880907057098 * EducationGraduation +
-0.32850851013319 * EducationMaster + 0.42964114177062 * Marital_StatusDivorced +
-0.38607635605816 * Marital_StatusMarried + -0.02157405407852 * Marital_StatusSingle +
-0.59995619744527 * Marital_StatusTogether ;
2534684   +   H1x1_1  =    -0.53239337390307 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.53239337390307 + H1x1_1 ;
2534685   +   H1x1_2  =     0.99428677123948 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.99428677123948 + H1x1_2 ;
2534686   +   H1x1_3  =       1.835877082844 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.835877082844 + H1x1_3 ;
2534687   +   H1x1_4  = 0;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0;
2534688   +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 );
2534689   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2534690   +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
2534691   +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
2534692   +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
2534693   +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
2534694   +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
2534695   +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
2534696   +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
2534697   +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
2534698   +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
2534699   +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
2534700   +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
2534701   +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
2534702   +END;
MPRINT(EM_DIAGRAM):   END;
2534703   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2534704   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
2534705   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
2534706   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
2534707   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
2534708   +END;
MPRINT(EM_DIAGRAM):   END;
2534709   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2534710   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2534711   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2534712   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2534713   +   P_DepVar1  =    -3.41904253756965 * H1x1_1  +    -7.11204151517034 * H1x1_2
2534714   +          +     10.7909509395818 * H1x1_3  +    -2.20432578352426 * H1x1_4 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.41904253756965 * H1x1_1 + -7.11204151517034 * H1x1_2 +
10.7909509395818 * H1x1_3 + -2.20432578352426 * H1x1_4 ;
2534715   +   P_DepVar1  =    -3.66951098257489 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.66951098257489 + P_DepVar1 ;
2534716   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2534717   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2534718   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2534719   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2534720   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2534721   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2534722   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2534723   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2534724   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2534725   +END;
MPRINT(EM_DIAGRAM):   END;
2534726   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2534727   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2534728   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2534729   +END;
MPRINT(EM_DIAGRAM):   END;
2534730   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2534731   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2534732   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2534733   +END;
MPRINT(EM_DIAGRAM):   END;
2534734   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2534735   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2534736   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2534737   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2534738   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2534739   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2534740   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2534741   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2534742   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2534743   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2534744   +END;
MPRINT(EM_DIAGRAM):   END;
2534745   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2534746   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2534747   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2534748   +drop
2534749   +H1x1_1
2534750   +H1x1_2
2534751   +H1x1_3
2534752   +H1x1_4
2534753   +;
MPRINT(EM_DIAGRAM):   drop H1x1_1 H1x1_2 H1x1_3 H1x1_4 ;
2534754   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
2534755   +* Renaming variables for AutoNeural9;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural9;
2534756   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2534757   +* Renaming Posterior variables for AutoNeural9;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural9;
2534758   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2534759   +drop AutoNeural9_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural9_P_DepVar1;
2534760   +AutoNeural9_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural9_P_DepVar1 = P_DepVar1;
2534761   +drop AutoNeural9_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural9_P_DepVar0;
2534762   +AutoNeural9_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural9_P_DepVar0 = P_DepVar0;
2534763   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2534764   +* Renaming _WARN_ variable for AutoNeural9;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural9;
2534765   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2534766   +length AutoNeural9_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural9_WARN_ $4;
2534767   +drop AutoNeural9_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural9_WARN_;
2534768   +AutoNeural9_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural9_WARN_ = _WARN_;
2534769   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2534770   +* Ensmbl36: Scoring Code of model 6 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl36: Scoring Code of model 6 of 7;
2534771   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2534772   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2534773   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
2534774   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
2534775   +* NODE: AutoNeural11;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural11;
2534776   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2534777   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2534778   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2534779   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2534780   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2534781   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2534782   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2534783   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2534784   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2534785   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2534786   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2534787   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2534788   +LENGTH _WARN_ $4
2534789   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
2534790   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2534791   +
2534792   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
2534793   +
2534794   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
2534795   +
2534796   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2534797   +
2534798   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2534799   +
2534800   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2534801   +
2534802   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2534803   +
2534804   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2534805   +
2534806   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2534807   +
2534808   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2534809   +
2534810   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2534811   +
2534812   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2534813   +
2534814   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
2534815   +
2534816   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2534817   +
2534818   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2534819   +
2534820   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
2534821   +
2534822   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2534823   +
2534824   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2534825   +
2534826   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2534827   +
2534828   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2534829   +
2534830   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
2534831   +
2534832   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2534833   +
2534834   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2534835   +
2534836   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2534837   +
2534838   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2534839   +
2534840   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2534841   +
2534842   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2534843   +
2534844   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2534845   +
2534846   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2534847   +
2534848   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
2534849   +
2534850   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2534851   +
2534852   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2534853   +
2534854   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2534855   +
2534856   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2534857   +
2534858   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2534859   +
2534860   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2534861   +
2534862   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2534863   +
2534864   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2534865   +
2534866   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
2534867   +
2534868   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
2534869   +
2534870   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
2534871   +
2534872   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
2534873   +
2534874   +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
2534875   +
2534876   +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
2534877   +
2534878   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2534879   +
2534880   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2534881   +
2534882   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2534883   +
2534884   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2534885   +
2534886   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2534887   +
2534888   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2534889   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2534890   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2534891   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2534892   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2534893   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2534894   +end;
MPRINT(EM_DIAGRAM):   end;
2534895   +else do;
MPRINT(EM_DIAGRAM):   else do;
2534896   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2534897   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2534898   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2534899   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2534900   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2534901   +   end;
MPRINT(EM_DIAGRAM):   end;
2534902   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2534903   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2534904   +   end;
MPRINT(EM_DIAGRAM):   end;
2534905   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2534906   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2534907   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2534908   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2534909   +   end;
MPRINT(EM_DIAGRAM):   end;
2534910   +end;
MPRINT(EM_DIAGRAM):   end;
2534911   +
2534912   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2534913   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2534914   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2534915   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2534916   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2534917   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2534918   +end;
MPRINT(EM_DIAGRAM):   end;
2534919   +else do;
MPRINT(EM_DIAGRAM):   else do;
2534920   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2534921   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2534922   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2534923   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2534924   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2534925   +   end;
MPRINT(EM_DIAGRAM):   end;
2534926   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2534927   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2534928   +   end;
MPRINT(EM_DIAGRAM):   end;
2534929   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2534930   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2534931   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2534932   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2534933   +   end;
MPRINT(EM_DIAGRAM):   end;
2534934   +end;
MPRINT(EM_DIAGRAM):   end;
2534935   +
2534936   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2534937   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2534938   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2534939   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2534940   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2534941   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2534942   +end;
MPRINT(EM_DIAGRAM):   end;
2534943   +else do;
MPRINT(EM_DIAGRAM):   else do;
2534944   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2534945   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2534946   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2534947   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2534948   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2534949   +   end;
MPRINT(EM_DIAGRAM):   end;
2534950   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2534951   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2534952   +   end;
MPRINT(EM_DIAGRAM):   end;
2534953   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2534954   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2534955   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2534956   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2534957   +   end;
MPRINT(EM_DIAGRAM):   end;
2534958   +end;
MPRINT(EM_DIAGRAM):   end;
2534959   +
2534960   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2534961   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2534962   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2534963   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2534964   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2534965   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2534966   +end;
MPRINT(EM_DIAGRAM):   end;
2534967   +else do;
MPRINT(EM_DIAGRAM):   else do;
2534968   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2534969   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2534970   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2534971   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2534972   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2534973   +   end;
MPRINT(EM_DIAGRAM):   end;
2534974   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2534975   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2534976   +   end;
MPRINT(EM_DIAGRAM):   end;
2534977   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2534978   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2534979   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2534980   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2534981   +   end;
MPRINT(EM_DIAGRAM):   end;
2534982   +end;
MPRINT(EM_DIAGRAM):   end;
2534983   +
2534984   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2534985   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2534986   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2534987   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2534988   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2534989   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2534990   +end;
MPRINT(EM_DIAGRAM):   end;
2534991   +else do;
MPRINT(EM_DIAGRAM):   else do;
2534992   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2534993   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2534994   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2534995   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2534996   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2534997   +   end;
MPRINT(EM_DIAGRAM):   end;
2534998   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2534999   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2535000   +   end;
MPRINT(EM_DIAGRAM):   end;
2535001   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2535002   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2535003   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2535004   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2535005   +   end;
MPRINT(EM_DIAGRAM):   end;
2535006   +end;
MPRINT(EM_DIAGRAM):   end;
2535007   +
2535008   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2535009   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2535010   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2535011   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2535012   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2535013   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2535014   +end;
MPRINT(EM_DIAGRAM):   end;
2535015   +else do;
MPRINT(EM_DIAGRAM):   else do;
2535016   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2535017   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2535018   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2535019   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2535020   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2535021   +   end;
MPRINT(EM_DIAGRAM):   end;
2535022   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2535023   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2535024   +   end;
MPRINT(EM_DIAGRAM):   end;
2535025   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2535026   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2535027   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2535028   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2535029   +   end;
MPRINT(EM_DIAGRAM):   end;
2535030   +end;
MPRINT(EM_DIAGRAM):   end;
2535031   +
2535032   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
2535033   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
2535034   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
2535035   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2535036   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2535037   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2535038   +end;
MPRINT(EM_DIAGRAM):   end;
2535039   +else do;
MPRINT(EM_DIAGRAM):   else do;
2535040   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2535041   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
2535042   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2535043   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
2535044   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
2535045   +   end;
MPRINT(EM_DIAGRAM):   end;
2535046   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
2535047   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
2535048   +   end;
MPRINT(EM_DIAGRAM):   end;
2535049   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2535050   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2535051   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2535052   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2535053   +   end;
MPRINT(EM_DIAGRAM):   end;
2535054   +end;
MPRINT(EM_DIAGRAM):   end;
2535055   +
2535056   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2535057   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
2535058   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2535059   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2535060   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2535061   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2535062   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2535063   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2535064   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2535065   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2535066   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2535067   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2535068   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2535069   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2535070   +end;
MPRINT(EM_DIAGRAM):   end;
2535071   +else do;
MPRINT(EM_DIAGRAM):   else do;
2535072   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2535073   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2535074   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2535075   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2535076   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2535077   +   end;
MPRINT(EM_DIAGRAM):   end;
2535078   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2535079   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2535080   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2535081   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2535082   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2535083   +   end;
MPRINT(EM_DIAGRAM):   end;
2535084   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2535085   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2535086   +   end;
MPRINT(EM_DIAGRAM):   end;
2535087   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2535088   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2535089   +   end;
MPRINT(EM_DIAGRAM):   end;
2535090   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2535091   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2535092   +   end;
MPRINT(EM_DIAGRAM):   end;
2535093   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2535094   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2535095   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2535096   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2535097   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2535098   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2535099   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2535100   +   end;
MPRINT(EM_DIAGRAM):   end;
2535101   +end;
MPRINT(EM_DIAGRAM):   end;
2535102   +
2535103   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2535104   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2535105   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
2535106   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2535107   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2535108   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2535109   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2535110   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2535111   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2535112   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2535113   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2535114   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2535115   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2535116   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2535117   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2535118   +end;
MPRINT(EM_DIAGRAM):   end;
2535119   +else do;
MPRINT(EM_DIAGRAM):   else do;
2535120   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2535121   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2535122   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2535123   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2535124   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2535125   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2535126   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2535127   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2535128   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2535129   +         end;
MPRINT(EM_DIAGRAM):   end;
2535130   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2535131   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2535132   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2535133   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2535134   +            end;
MPRINT(EM_DIAGRAM):   end;
2535135   +         end;
MPRINT(EM_DIAGRAM):   end;
2535136   +      end;
MPRINT(EM_DIAGRAM):   end;
2535137   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2535138   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2535139   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2535140   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2535141   +         end;
MPRINT(EM_DIAGRAM):   end;
2535142   +      end;
MPRINT(EM_DIAGRAM):   end;
2535143   +   end;
MPRINT(EM_DIAGRAM):   end;
2535144   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2535145   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2535146   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2535147   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2535148   +      end;
MPRINT(EM_DIAGRAM):   end;
2535149   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2535150   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2535151   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2535152   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2535153   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2535154   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2535155   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2535156   +         end;
MPRINT(EM_DIAGRAM):   end;
2535157   +      end;
MPRINT(EM_DIAGRAM):   end;
2535158   +   end;
MPRINT(EM_DIAGRAM):   end;
2535159   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2535160   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2535161   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2535162   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2535163   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2535164   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2535165   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2535166   +   end;
MPRINT(EM_DIAGRAM):   end;
2535167   +end;
MPRINT(EM_DIAGRAM):   end;
2535168   +
2535169   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2535170   +*** Checking missing input Interval
2535171   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2535172   +
2535173   +IF NMISS(
2535174   +   AcceptedCmpTotal ,
2535175   +   Age ,
2535176   +   Frq ,
2535177   +   Income ,
2535178   +   Kidhome ,
2535179   +   Mnt ,
2535180   +   MntFishProducts ,
2535181   +   MntFruits ,
2535182   +   MntGoldProds ,
2535183   +   MntMeatProducts ,
2535184   +   MntSweetProducts ,
2535185   +   MntWines ,
2535186   +   MonthsAsCustomer ,
2535187   +   NumCatalogPurchases ,
2535188   +   NumDealsPurchases ,
2535189   +   NumDistPurchases ,
2535190   +   NumStorePurchases ,
2535191   +   NumWebPurchases ,
2535192   +   NumWebVisitsMonth ,
2535193   +   RFMstat ,
2535194   +   RMntFrq ,
2535195   +   Recency ,
2535196   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
2535197   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2535198   +
2535199   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2535200   +END;
MPRINT(EM_DIAGRAM):   END;
2535201   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2535202   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
2535203   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2535204   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2535205   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2535206   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
2535207   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2535208   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2535209   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2535210   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2535211   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2535212   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2535213   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2535214   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2535215   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2535216   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2535217   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2535218   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
2535219   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2535220   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2535221   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2535222   +   S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2535223   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 *
MonthsAsCustomer ;
2535224   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2535225   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
2535226   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2535227   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2535228   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2535229   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
2535230   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2535231   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
2535232   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2535233   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
2535234   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2535235   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2535236   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2535237   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2535238   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2535239   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2535240   +END;
MPRINT(EM_DIAGRAM):   END;
2535241   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2535242   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2535243   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2535244   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
2535245   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
2535246   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2535247   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
2535248   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2535249   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2535250   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2535251   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2535252   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2535253   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2535254   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2535255   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2535256   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2535257   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2535258   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2535259   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2535260   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2535261   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2535262   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2535263   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
2535264   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2535265   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2535266   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
2535267   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2535268   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2535269   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2535270   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2535271   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2535272   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
2535273   +   ELSE S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2535274   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 *
MonthsAsCustomer ;
2535275   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2535276   +   ELSE S_NumCatalogPurchases
2535277   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2535278   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
2535279   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2535280   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2535281   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2535282   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
2535283   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2535284   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
2535285   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2535286   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2535287   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
2535288   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2535289   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2535290   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
2535291   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2535292   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2535293   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2535294   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2535295   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2535296   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
2535297   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2535298   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2535299   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2535300   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2535301   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2535302   +END;
MPRINT(EM_DIAGRAM):   END;
2535303   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2535304   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
2535305   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2535306   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2535307   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
2535308   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2535309   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2535310   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
2535311   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2535312   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2535313   +   H1x1_1  =     0.08465472857554 * S_AcceptedCmpTotal
2535314   +          +     0.23104131534618 * S_Age  +     0.27646175976509 * S_Frq
2535315   +          +     0.45938840681203 * S_Income  +     0.09814900830666 *
2535316   +        S_Kidhome  +     0.23249430277518 * S_Mnt  +    -0.51905493105122 *
2535317   +        S_MntFishProducts  +    -0.07604226481078 * S_MntFruits
2535318   +          +     0.10100393832157 * S_MntGoldProds  +     1.56159221713858 *
2535319   +        S_MntMeatProducts  +     0.12166799382268 * S_MntSweetProducts
2535320   +          +    -0.63388816790524 * S_MntWines  +     0.00878303775585 *
2535321   +        S_MonthsAsCustomer  +     0.01990411233136 * S_NumCatalogPurchases
2535322   +          +     0.19770934886328 * S_NumDealsPurchases
2535323   +          +      0.0515215988111 * S_NumDistPurchases
2535324   +          +    -0.34569346346089 * S_NumStorePurchases
2535325   +          +    -0.27122293596124 * S_NumWebPurchases
2535326   +          +    -0.17061565609755 * S_NumWebVisitsMonth
2535327   +          +      0.1271178187502 * S_RFMstat  +     0.38306508975954 *
2535328   +        S_RMntFrq  +     0.05823588653853 * S_Recency
2535329   +          +    -0.03760117378617 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.08465472857554 * S_AcceptedCmpTotal + 0.23104131534618 *
S_Age + 0.27646175976509 * S_Frq + 0.45938840681203 * S_Income + 0.09814900830666 * S_Kidhome
+ 0.23249430277518 * S_Mnt + -0.51905493105122 * S_MntFishProducts + -0.07604226481078 *
S_MntFruits + 0.10100393832157 * S_MntGoldProds + 1.56159221713858 * S_MntMeatProducts +
0.12166799382268 * S_MntSweetProducts + -0.63388816790524 * S_MntWines + 0.00878303775585 *
S_MonthsAsCustomer + 0.01990411233136 * S_NumCatalogPurchases + 0.19770934886328 *
S_NumDealsPurchases + 0.0515215988111 * S_NumDistPurchases + -0.34569346346089 *
S_NumStorePurchases + -0.27122293596124 * S_NumWebPurchases + -0.17061565609755 *
S_NumWebVisitsMonth + 0.1271178187502 * S_RFMstat + 0.38306508975954 * S_RMntFrq +
0.05823588653853 * S_Recency + -0.03760117378617 * S_Teenhome ;
2535330   +   H1x1_2  =     0.16564144258189 * S_AcceptedCmpTotal
2535331   +          +    -0.18930338067433 * S_Age  +    -0.23013558761757 * S_Frq
2535332   +          +     -0.1347135122598 * S_Income  +     0.04776498811407 *
2535333   +        S_Kidhome  +    -0.14940302068852 * S_Mnt  +    -0.13108691405604 *
2535334   +        S_MntFishProducts  +    -0.02561341150704 * S_MntFruits
2535335   +          +    -0.02022222891948 * S_MntGoldProds  +     0.80867688993093 *
2535336   +        S_MntMeatProducts  +    -0.08374488783635 * S_MntSweetProducts
2535337   +          +     -0.6719369441832 * S_MntWines  +    -0.14760035685198 *
2535338   +        S_MonthsAsCustomer  +      0.4007376271331 * S_NumCatalogPurchases
2535339   +          +     0.54308887602031 * S_NumDealsPurchases
2535340   +          +    -0.22507315320192 * S_NumDistPurchases
2535341   +          +    -0.79861387328361 * S_NumStorePurchases
2535342   +          +    -0.45467494002747 * S_NumWebPurchases
2535343   +          +      0.2119048824613 * S_NumWebVisitsMonth
2535344   +          +     0.30167662748678 * S_RFMstat  +     0.10712110659027 *
2535345   +        S_RMntFrq  +    -0.03061918029089 * S_Recency
2535346   +          +    -0.06096313113607 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.16564144258189 * S_AcceptedCmpTotal + -0.18930338067433 *
S_Age + -0.23013558761757 * S_Frq + -0.1347135122598 * S_Income + 0.04776498811407 * S_Kidhome
+ -0.14940302068852 * S_Mnt + -0.13108691405604 * S_MntFishProducts + -0.02561341150704 *
S_MntFruits + -0.02022222891948 * S_MntGoldProds + 0.80867688993093 * S_MntMeatProducts +
-0.08374488783635 * S_MntSweetProducts + -0.6719369441832 * S_MntWines + -0.14760035685198 *
S_MonthsAsCustomer + 0.4007376271331 * S_NumCatalogPurchases + 0.54308887602031 *
S_NumDealsPurchases + -0.22507315320192 * S_NumDistPurchases + -0.79861387328361 *
S_NumStorePurchases + -0.45467494002747 * S_NumWebPurchases + 0.2119048824613 *
S_NumWebVisitsMonth + 0.30167662748678 * S_RFMstat + 0.10712110659027 * S_RMntFrq +
-0.03061918029089 * S_Recency + -0.06096313113607 * S_Teenhome ;
2535347   +   H1x1_3  =     0.02674875562898 * S_AcceptedCmpTotal
2535348   +          +    -0.19731891748843 * S_Age  +    -0.00753784701259 * S_Frq
2535349   +          +    -0.31764694608254 * S_Income  +     0.49525183733398 *
2535350   +        S_Kidhome  +     0.24623619243686 * S_Mnt  +     0.25904859702044 *
2535351   +        S_MntFishProducts  +     0.26153358982994 * S_MntFruits
2535352   +          +    -0.07223707213485 * S_MntGoldProds  +    -0.15192960471493 *
2535353   +        S_MntMeatProducts  +     0.08241128624385 * S_MntSweetProducts
2535354   +          +     0.62479763709054 * S_MntWines  +     0.03593742779349 *
2535355   +        S_MonthsAsCustomer  +     0.00825730323418 * S_NumCatalogPurchases
2535356   +          +     -0.0771083149302 * S_NumDealsPurchases
2535357   +          +     0.03403621221162 * S_NumDistPurchases
2535358   +          +     0.61303946422025 * S_NumStorePurchases
2535359   +          +     0.27126793634053 * S_NumWebPurchases
2535360   +          +     -0.9769688424222 * S_NumWebVisitsMonth
2535361   +          +     0.08832170040425 * S_RFMstat  +     0.13241491054212 *
2535362   +        S_RMntFrq  +     0.94872655811163 * S_Recency
2535363   +          +     0.22002222738147 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.02674875562898 * S_AcceptedCmpTotal + -0.19731891748843 *
S_Age + -0.00753784701259 * S_Frq + -0.31764694608254 * S_Income + 0.49525183733398 *
S_Kidhome + 0.24623619243686 * S_Mnt + 0.25904859702044 * S_MntFishProducts + 0.26153358982994
* S_MntFruits + -0.07223707213485 * S_MntGoldProds + -0.15192960471493 * S_MntMeatProducts +
0.08241128624385 * S_MntSweetProducts + 0.62479763709054 * S_MntWines + 0.03593742779349 *
S_MonthsAsCustomer + 0.00825730323418 * S_NumCatalogPurchases + -0.0771083149302 *
S_NumDealsPurchases + 0.03403621221162 * S_NumDistPurchases + 0.61303946422025 *
S_NumStorePurchases + 0.27126793634053 * S_NumWebPurchases + -0.9769688424222 *
S_NumWebVisitsMonth + 0.08832170040425 * S_RFMstat + 0.13241491054212 * S_RMntFrq +
0.94872655811163 * S_Recency + 0.22002222738147 * S_Teenhome ;
2535364   +   H1x1_4  =     0.46328587348713 * S_AcceptedCmpTotal
2535365   +          +      -0.306946385792 * S_Age  +    -0.24247964225191 * S_Frq
2535366   +          +    -0.42968609314513 * S_Income  +    -0.08934431746158 *
2535367   +        S_Kidhome  +     0.15972194979558 * S_Mnt  +    -0.22174909818279 *
2535368   +        S_MntFishProducts  +    -0.23755215058744 * S_MntFruits
2535369   +          +      -0.124789433808 * S_MntGoldProds  +     0.50040173514144 *
2535370   +        S_MntMeatProducts  +     0.02850063230459 * S_MntSweetProducts
2535371   +          +     0.13427582671876 * S_MntWines  +     0.25569886862761 *
2535372   +        S_MonthsAsCustomer  +     0.34004201732149 * S_NumCatalogPurchases
2535373   +          +     0.29894603062327 * S_NumDealsPurchases
2535374   +          +     0.07614620530875 * S_NumDistPurchases
2535375   +          +     0.15402335009896 * S_NumStorePurchases
2535376   +          +     0.10615749096863 * S_NumWebPurchases
2535377   +          +     0.41962286816879 * S_NumWebVisitsMonth
2535378   +          +     0.00203630873093 * S_RFMstat  +     0.04736976805951 *
2535379   +        S_RMntFrq  +    -0.84751074132422 * S_Recency
2535380   +          +      0.2189023557249 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.46328587348713 * S_AcceptedCmpTotal + -0.306946385792 * S_Age
+ -0.24247964225191 * S_Frq + -0.42968609314513 * S_Income + -0.08934431746158 * S_Kidhome +
0.15972194979558 * S_Mnt + -0.22174909818279 * S_MntFishProducts + -0.23755215058744 *
S_MntFruits + -0.124789433808 * S_MntGoldProds + 0.50040173514144 * S_MntMeatProducts +
0.02850063230459 * S_MntSweetProducts + 0.13427582671876 * S_MntWines + 0.25569886862761 *
S_MonthsAsCustomer + 0.34004201732149 * S_NumCatalogPurchases + 0.29894603062327 *
S_NumDealsPurchases + 0.07614620530875 * S_NumDistPurchases + 0.15402335009896 *
S_NumStorePurchases + 0.10615749096863 * S_NumWebPurchases + 0.41962286816879 *
S_NumWebVisitsMonth + 0.00203630873093 * S_RFMstat + 0.04736976805951 * S_RMntFrq +
-0.84751074132422 * S_Recency + 0.2189023557249 * S_Teenhome ;
2535381   +   H1x1_5  =    -0.32353341757368 * S_AcceptedCmpTotal
2535382   +          +     0.03233494925748 * S_Age  +    -0.21296093282526 * S_Frq
2535383   +          +    -0.33919081075007 * S_Income  +     0.08771362671573 *
2535384   +        S_Kidhome  +    -0.10797068838726 * S_Mnt  +    -0.19736358637985 *
2535385   +        S_MntFishProducts  +    -0.19679917231132 * S_MntFruits
2535386   +          +     0.07502386205588 * S_MntGoldProds  +    -0.50948750987247 *
2535387   +        S_MntMeatProducts  +     0.00413757018488 * S_MntSweetProducts
2535388   +          +      0.0788538305785 * S_MntWines  +    -0.02917052455021 *
2535389   +        S_MonthsAsCustomer  +    -0.53933514609821 * S_NumCatalogPurchases
2535390   +          +     0.14392502416642 * S_NumDealsPurchases
2535391   +          +    -0.10026304978633 * S_NumDistPurchases
2535392   +          +     -0.0588453022746 * S_NumStorePurchases
2535393   +          +     0.24799398610395 * S_NumWebPurchases
2535394   +          +    -0.52695548549717 * S_NumWebVisitsMonth
2535395   +          +     0.01855620452049 * S_RFMstat  +    -0.00189170766477 *
2535396   +        S_RMntFrq  +     0.51841177421912 * S_Recency
2535397   +          +     0.31491299720207 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -0.32353341757368 * S_AcceptedCmpTotal + 0.03233494925748 *
S_Age + -0.21296093282526 * S_Frq + -0.33919081075007 * S_Income + 0.08771362671573 *
S_Kidhome + -0.10797068838726 * S_Mnt + -0.19736358637985 * S_MntFishProducts +
-0.19679917231132 * S_MntFruits + 0.07502386205588 * S_MntGoldProds + -0.50948750987247 *
S_MntMeatProducts + 0.00413757018488 * S_MntSweetProducts + 0.0788538305785 * S_MntWines +
-0.02917052455021 * S_MonthsAsCustomer + -0.53933514609821 * S_NumCatalogPurchases +
0.14392502416642 * S_NumDealsPurchases + -0.10026304978633 * S_NumDistPurchases +
-0.0588453022746 * S_NumStorePurchases + 0.24799398610395 * S_NumWebPurchases +
-0.52695548549717 * S_NumWebVisitsMonth + 0.01855620452049 * S_RFMstat + -0.00189170766477 *
S_RMntFrq + 0.51841177421912 * S_Recency + 0.31491299720207 * S_Teenhome ;
2535398   +   H1x1_6  =     -0.2113594539647 * S_AcceptedCmpTotal
2535399   +          +     -0.1052829531896 * S_Age  +     0.30802959734964 * S_Frq
2535400   +          +    -0.03112570586685 * S_Income  +     0.19129661263247 *
2535401   +        S_Kidhome  +     0.00533736622639 * S_Mnt  +    -0.06112703732925 *
2535402   +        S_MntFishProducts  +    -0.15875686512247 * S_MntFruits
2535403   +          +    -0.08040179272112 * S_MntGoldProds  +    -0.14462087536907 *
2535404   +        S_MntMeatProducts  +     0.21353582706121 * S_MntSweetProducts
2535405   +          +    -0.30180630737612 * S_MntWines  +    -0.11825033043182 *
2535406   +        S_MonthsAsCustomer  +     -0.2917393256645 * S_NumCatalogPurchases
2535407   +          +     0.08149600854964 * S_NumDealsPurchases
2535408   +          +     0.16873541613513 * S_NumDistPurchases
2535409   +          +    -0.20437343413446 * S_NumStorePurchases
2535410   +          +     -0.1671107527288 * S_NumWebPurchases
2535411   +          +     0.03677043100993 * S_NumWebVisitsMonth
2535412   +          +      0.0240516540488 * S_RFMstat  +     0.06155030856383 *
2535413   +        S_RMntFrq  +    -0.28802122451372 * S_Recency
2535414   +          +     0.06998878697307 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_6 = -0.2113594539647 * S_AcceptedCmpTotal + -0.1052829531896 *
S_Age + 0.30802959734964 * S_Frq + -0.03112570586685 * S_Income + 0.19129661263247 * S_Kidhome
+ 0.00533736622639 * S_Mnt + -0.06112703732925 * S_MntFishProducts + -0.15875686512247 *
S_MntFruits + -0.08040179272112 * S_MntGoldProds + -0.14462087536907 * S_MntMeatProducts +
0.21353582706121 * S_MntSweetProducts + -0.30180630737612 * S_MntWines + -0.11825033043182 *
S_MonthsAsCustomer + -0.2917393256645 * S_NumCatalogPurchases + 0.08149600854964 *
S_NumDealsPurchases + 0.16873541613513 * S_NumDistPurchases + -0.20437343413446 *
S_NumStorePurchases + -0.1671107527288 * S_NumWebPurchases + 0.03677043100993 *
S_NumWebVisitsMonth + 0.0240516540488 * S_RFMstat + 0.06155030856383 * S_RMntFrq +
-0.28802122451372 * S_Recency + 0.06998878697307 * S_Teenhome ;
2535415   +   H1x1_1  = H1x1_1  +    -0.33641509021082 * AcceptedCmp10
2535416   +          +     0.03092292109435 * AcceptedCmp20  +    -0.23551187181907 *
2535417   +        AcceptedCmp30  +    -0.06694400005185 * AcceptedCmp40
2535418   +          +    -0.14203506237074 * AcceptedCmp50  +    -0.25866390496966 *
2535419   +        Complain0  +     0.19505921178308 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.33641509021082 * AcceptedCmp10 + 0.03092292109435 *
AcceptedCmp20 + -0.23551187181907 * AcceptedCmp30 + -0.06694400005185 * AcceptedCmp40 +
-0.14203506237074 * AcceptedCmp50 + -0.25866390496966 * Complain0 + 0.19505921178308 *
HigherEducationBinary0 ;
2535420   +   H1x1_2  = H1x1_2  +     0.09937599707203 * AcceptedCmp10
2535421   +          +     0.03831208573575 * AcceptedCmp20  +     0.39683693019758 *
2535422   +        AcceptedCmp30  +     0.37006277175295 * AcceptedCmp40
2535423   +          +     0.21293419476895 * AcceptedCmp50  +     0.15528568367473 *
2535424   +        Complain0  +    -0.30210013299822 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.09937599707203 * AcceptedCmp10 + 0.03831208573575 *
AcceptedCmp20 + 0.39683693019758 * AcceptedCmp30 + 0.37006277175295 * AcceptedCmp40 +
0.21293419476895 * AcceptedCmp50 + 0.15528568367473 * Complain0 + -0.30210013299822 *
HigherEducationBinary0 ;
2535425   +   H1x1_3  = H1x1_3  +     0.29891621770856 * AcceptedCmp10
2535426   +          +     0.64938384482014 * AcceptedCmp20  +     0.44997242602142 *
2535427   +        AcceptedCmp30  +       0.479093722666 * AcceptedCmp40
2535428   +          +     0.50957180373919 * AcceptedCmp50  +     0.27833535432461 *
2535429   +        Complain0  +    -0.20383534906723 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.29891621770856 * AcceptedCmp10 + 0.64938384482014 *
AcceptedCmp20 + 0.44997242602142 * AcceptedCmp30 + 0.479093722666 * AcceptedCmp40 +
0.50957180373919 * AcceptedCmp50 + 0.27833535432461 * Complain0 + -0.20383534906723 *
HigherEducationBinary0 ;
2535430   +   H1x1_4  = H1x1_4  +    -0.26872515586946 * AcceptedCmp10
2535431   +          +    -0.24299337381911 * AcceptedCmp20  +    -0.01147155911926 *
2535432   +        AcceptedCmp30  +     -0.3056041277894 * AcceptedCmp40
2535433   +          +    -0.05496409609003 * AcceptedCmp50  +     0.07858238173893 *
2535434   +        Complain0  +     0.05721550070076 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.26872515586946 * AcceptedCmp10 + -0.24299337381911
* AcceptedCmp20 + -0.01147155911926 * AcceptedCmp30 + -0.3056041277894 * AcceptedCmp40 +
-0.05496409609003 * AcceptedCmp50 + 0.07858238173893 * Complain0 + 0.05721550070076 *
HigherEducationBinary0 ;
2535435   +   H1x1_5  = H1x1_5  +    -0.14067626649899 * AcceptedCmp10
2535436   +          +    -0.30627802828357 * AcceptedCmp20  +     0.05057942365592 *
2535437   +        AcceptedCmp30  +    -0.10378506600459 * AcceptedCmp40
2535438   +          +     0.07479232390108 * AcceptedCmp50  +     0.07252750671496 *
2535439   +        Complain0  +     0.11114854035831 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.14067626649899 * AcceptedCmp10 + -0.30627802828357
* AcceptedCmp20 + 0.05057942365592 * AcceptedCmp30 + -0.10378506600459 * AcceptedCmp40 +
0.07479232390108 * AcceptedCmp50 + 0.07252750671496 * Complain0 + 0.11114854035831 *
HigherEducationBinary0 ;
2535440   +   H1x1_6  = H1x1_6  +    -0.25806332334976 * AcceptedCmp10
2535441   +          +     0.03944021903138 * AcceptedCmp20  +    -0.08792206887119 *
2535442   +        AcceptedCmp30  +    -0.24631282865199 * AcceptedCmp40
2535443   +          +    -0.06123991538969 * AcceptedCmp50  +    -0.03114784375357 *
2535444   +        Complain0  +    -0.25204544481193 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + -0.25806332334976 * AcceptedCmp10 + 0.03944021903138 *
AcceptedCmp20 + -0.08792206887119 * AcceptedCmp30 + -0.24631282865199 * AcceptedCmp40 +
-0.06123991538969 * AcceptedCmp50 + -0.03114784375357 * Complain0 + -0.25204544481193 *
HigherEducationBinary0 ;
2535445   +   H1x1_1  = H1x1_1  +      0.2972170984261 * Education2n_Cycle
2535446   +          +     0.01651368568996 * EducationBasic  +     -0.1186055936649 *
2535447   +        EducationGraduation  +      0.0228208538951 * EducationMaster
2535448   +          +    -0.31045295887604 * Marital_StatusDivorced
2535449   +          +    -0.01109401001539 * Marital_StatusMarried
2535450   +          +     0.01325135981025 * Marital_StatusSingle
2535451   +          +     0.16609357475978 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.2972170984261 * Education2n_Cycle + 0.01651368568996
* EducationBasic + -0.1186055936649 * EducationGraduation + 0.0228208538951 * EducationMaster
+ -0.31045295887604 * Marital_StatusDivorced + -0.01109401001539 * Marital_StatusMarried +
0.01325135981025 * Marital_StatusSingle + 0.16609357475978 * Marital_StatusTogether ;
2535452   +   H1x1_2  = H1x1_2  +    -0.07095220065018 * Education2n_Cycle
2535453   +          +    -0.23491732567608 * EducationBasic  +     0.20187086452315 *
2535454   +        EducationGraduation  +     0.07524128723108 * EducationMaster
2535455   +          +     0.02275101861599 * Marital_StatusDivorced
2535456   +          +     0.20271548664903 * Marital_StatusMarried
2535457   +          +    -0.12132069210718 * Marital_StatusSingle
2535458   +          +     0.00085090729385 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.07095220065018 * Education2n_Cycle +
-0.23491732567608 * EducationBasic + 0.20187086452315 * EducationGraduation + 0.07524128723108
* EducationMaster + 0.02275101861599 * Marital_StatusDivorced + 0.20271548664903 *
Marital_StatusMarried + -0.12132069210718 * Marital_StatusSingle + 0.00085090729385 *
Marital_StatusTogether ;
2535459   +   H1x1_3  = H1x1_3  +    -0.02268297689573 * Education2n_Cycle
2535460   +          +     0.06359770535369 * EducationBasic  +     -0.1194001280088 *
2535461   +        EducationGraduation  +     0.17299848976308 * EducationMaster
2535462   +          +     -0.4992959703281 * Marital_StatusDivorced
2535463   +          +     0.62071659624138 * Marital_StatusMarried
2535464   +          +    -0.21776202274494 * Marital_StatusSingle
2535465   +          +     0.54712874598141 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.02268297689573 * Education2n_Cycle +
0.06359770535369 * EducationBasic + -0.1194001280088 * EducationGraduation + 0.17299848976308
* EducationMaster + -0.4992959703281 * Marital_StatusDivorced + 0.62071659624138 *
Marital_StatusMarried + -0.21776202274494 * Marital_StatusSingle + 0.54712874598141 *
Marital_StatusTogether ;
2535466   +   H1x1_4  = H1x1_4  +    -0.17773353520266 * Education2n_Cycle
2535467   +          +     0.17998728120628 * EducationBasic  +    -0.00324602612825 *
2535468   +        EducationGraduation  +    -0.22448876765089 * EducationMaster
2535469   +          +     0.05626212670587 * Marital_StatusDivorced
2535470   +          +     0.14353891364597 * Marital_StatusMarried
2535471   +          +    -0.29006765622997 * Marital_StatusSingle
2535472   +          +     0.05503638282535 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.17773353520266 * Education2n_Cycle +
0.17998728120628 * EducationBasic + -0.00324602612825 * EducationGraduation +
-0.22448876765089 * EducationMaster + 0.05626212670587 * Marital_StatusDivorced +
0.14353891364597 * Marital_StatusMarried + -0.29006765622997 * Marital_StatusSingle +
0.05503638282535 * Marital_StatusTogether ;
2535473   +   H1x1_5  = H1x1_5  +     0.06634316870499 * Education2n_Cycle
2535474   +          +    -0.36153880127411 * EducationBasic  +     0.23023144658635 *
2535475   +        EducationGraduation  +    -0.06568730318683 * EducationMaster
2535476   +          +    -0.21206913700604 * Marital_StatusDivorced
2535477   +          +     0.58790643614629 * Marital_StatusMarried
2535478   +          +    -0.65995982578062 * Marital_StatusSingle
2535479   +          +     0.49642503732428 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + 0.06634316870499 * Education2n_Cycle +
-0.36153880127411 * EducationBasic + 0.23023144658635 * EducationGraduation +
-0.06568730318683 * EducationMaster + -0.21206913700604 * Marital_StatusDivorced +
0.58790643614629 * Marital_StatusMarried + -0.65995982578062 * Marital_StatusSingle +
0.49642503732428 * Marital_StatusTogether ;
2535480   +   H1x1_6  = H1x1_6  +     0.16504024096118 * Education2n_Cycle
2535481   +          +     0.11925867171875 * EducationBasic  +    -0.04213907014732 *
2535482   +        EducationGraduation  +    -0.21389968555475 * EducationMaster
2535483   +          +    -0.05047370516008 * Marital_StatusDivorced
2535484   +          +    -0.23139090963669 * Marital_StatusMarried
2535485   +          +     0.04816197463249 * Marital_StatusSingle
2535486   +          +     0.04977890114896 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + 0.16504024096118 * Education2n_Cycle +
0.11925867171875 * EducationBasic + -0.04213907014732 * EducationGraduation +
-0.21389968555475 * EducationMaster + -0.05047370516008 * Marital_StatusDivorced +
-0.23139090963669 * Marital_StatusMarried + 0.04816197463249 * Marital_StatusSingle +
0.04977890114896 * Marital_StatusTogether ;
2535487   +   H1x1_1  =    -1.90576647346127 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -1.90576647346127 + H1x1_1 ;
2535488   +   H1x1_2  =     0.32295787429294 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.32295787429294 + H1x1_2 ;
2535489   +   H1x1_3  =     0.75117643107919 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.75117643107919 + H1x1_3 ;
2535490   +   H1x1_4  =      1.2336762751587 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 1.2336762751587 + H1x1_4 ;
2535491   +   H1x1_5  =    -0.97062317465491 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -0.97062317465491 + H1x1_5 ;
2535492   +   H1x1_6  =    -1.15756803634408 + H1x1_6 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = -1.15756803634408 + H1x1_6 ;
2535493   +   _EPS = SQRT(CONSTANT('MACEPS')) ;
MPRINT(EM_DIAGRAM):   _EPS = SQRT(CONSTANT('MACEPS')) ;
2535494   +   _REC_EPS = 1/_EPS ;
MPRINT(EM_DIAGRAM):   _REC_EPS = 1/_EPS ;
2535495   +   DROP _REC_EPS _EPS ;
MPRINT(EM_DIAGRAM):   DROP _REC_EPS _EPS ;
2535496   +   IF H1x1_1  < _REC_EPS AND H1x1_1  > - _REC_EPS THEN
2535497   +   H1x1_1  = H1x1_1  * H1x1_1 ;
MPRINT(EM_DIAGRAM):   IF H1x1_1 < _REC_EPS AND H1x1_1 > - _REC_EPS THEN H1x1_1 = H1x1_1 *
H1x1_1 ;
2535498   +   ELSE H1x1_1  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_1 = _REC_EPS ;
2535499   +   IF H1x1_2  < _REC_EPS AND H1x1_2  > - _REC_EPS THEN
2535500   +   H1x1_2  = H1x1_2  * H1x1_2 ;
MPRINT(EM_DIAGRAM):   IF H1x1_2 < _REC_EPS AND H1x1_2 > - _REC_EPS THEN H1x1_2 = H1x1_2 *
H1x1_2 ;
2535501   +   ELSE H1x1_2  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_2 = _REC_EPS ;
2535502   +   IF H1x1_3  < _REC_EPS AND H1x1_3  > - _REC_EPS THEN
2535503   +   H1x1_3  = H1x1_3  * H1x1_3 ;
MPRINT(EM_DIAGRAM):   IF H1x1_3 < _REC_EPS AND H1x1_3 > - _REC_EPS THEN H1x1_3 = H1x1_3 *
H1x1_3 ;
2535504   +   ELSE H1x1_3  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_3 = _REC_EPS ;
2535505   +   IF H1x1_4  < _REC_EPS AND H1x1_4  > - _REC_EPS THEN
2535506   +   H1x1_4  = H1x1_4  * H1x1_4 ;
MPRINT(EM_DIAGRAM):   IF H1x1_4 < _REC_EPS AND H1x1_4 > - _REC_EPS THEN H1x1_4 = H1x1_4 *
H1x1_4 ;
2535507   +   ELSE H1x1_4  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_4 = _REC_EPS ;
2535508   +   IF H1x1_5  < _REC_EPS AND H1x1_5  > - _REC_EPS THEN
2535509   +   H1x1_5  = H1x1_5  * H1x1_5 ;
MPRINT(EM_DIAGRAM):   IF H1x1_5 < _REC_EPS AND H1x1_5 > - _REC_EPS THEN H1x1_5 = H1x1_5 *
H1x1_5 ;
2535510   +   ELSE H1x1_5  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_5 = _REC_EPS ;
2535511   +   IF H1x1_6  < _REC_EPS AND H1x1_6  > - _REC_EPS THEN
2535512   +   H1x1_6  = H1x1_6  * H1x1_6 ;
MPRINT(EM_DIAGRAM):   IF H1x1_6 < _REC_EPS AND H1x1_6 > - _REC_EPS THEN H1x1_6 = H1x1_6 *
H1x1_6 ;
2535513   +   ELSE H1x1_6  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_6 = _REC_EPS ;
2535514   +END;
MPRINT(EM_DIAGRAM):   END;
2535515   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2535516   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
2535517   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
2535518   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
2535519   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
2535520   +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
2535521   +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
2535522   +END;
MPRINT(EM_DIAGRAM):   END;
2535523   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2535524   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2535525   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2535526   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2535527   +   P_DepVar1  =    -0.99830813428318 * H1x1_1  +     1.33495006526712 * H1x1_2
2535528   +          +    -1.37942150026657 * H1x1_3  +     1.22714974922576 * H1x1_4
2535529   +          +     1.73375794385595 * H1x1_5  +     -0.0100306049679 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.99830813428318 * H1x1_1 + 1.33495006526712 * H1x1_2 +
-1.37942150026657 * H1x1_3 + 1.22714974922576 * H1x1_4 + 1.73375794385595 * H1x1_5 +
-0.0100306049679 * H1x1_6 ;
2535530   +   P_DepVar1  =    -1.90393999986167 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.90393999986167 + P_DepVar1 ;
2535531   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2535532   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2535533   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2535534   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2535535   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2535536   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2535537   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2535538   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2535539   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2535540   +END;
MPRINT(EM_DIAGRAM):   END;
2535541   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2535542   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2535543   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2535544   +END;
MPRINT(EM_DIAGRAM):   END;
2535545   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2535546   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2535547   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2535548   +END;
MPRINT(EM_DIAGRAM):   END;
2535549   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2535550   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2535551   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2535552   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2535553   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2535554   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2535555   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2535556   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2535557   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2535558   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2535559   +END;
MPRINT(EM_DIAGRAM):   END;
2535560   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2535561   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2535562   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2535563   +drop
2535564   +H1x1_1
2535565   +H1x1_2
2535566   +H1x1_3
2535567   +H1x1_4
2535568   +H1x1_5
2535569   +H1x1_6
2535570   +;
MPRINT(EM_DIAGRAM):   drop H1x1_1 H1x1_2 H1x1_3 H1x1_4 H1x1_5 H1x1_6 ;
2535571   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
2535572   +* Renaming variables for AutoNeural11;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural11;
2535573   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2535574   +* Renaming Posterior variables for AutoNeural11;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural11;
2535575   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2535576   +drop AutoNeural11_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural11_P_DepVar1;
2535577   +AutoNeural11_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural11_P_DepVar1 = P_DepVar1;
2535578   +drop AutoNeural11_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural11_P_DepVar0;
2535579   +AutoNeural11_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural11_P_DepVar0 = P_DepVar0;
2535580   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2535581   +* Renaming _WARN_ variable for AutoNeural11;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural11;
2535582   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2535583   +length AutoNeural11_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural11_WARN_ $4;
2535584   +drop AutoNeural11_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural11_WARN_;
2535585   +AutoNeural11_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural11_WARN_ = _WARN_;
2535586   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2535587   +* Ensmbl36: Scoring Code of model 7 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl36: Scoring Code of model 7 of 7;
2535588   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2535589   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2535590   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
2535591   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
2535592   +* NODE: AutoNeural12;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural12;
2535593   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2535594   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2535595   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2535596   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2535597   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2535598   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2535599   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2535600   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2535601   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2535602   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2535603   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2535604   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2535605   +LENGTH _WARN_ $4
2535606   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
2535607   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2535608   +
2535609   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
2535610   +
2535611   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
2535612   +
2535613   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2535614   +
2535615   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2535616   +
2535617   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2535618   +
2535619   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2535620   +
2535621   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2535622   +
2535623   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2535624   +
2535625   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2535626   +
2535627   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2535628   +
2535629   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2535630   +
2535631   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
2535632   +
2535633   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2535634   +
2535635   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2535636   +
2535637   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
2535638   +
2535639   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2535640   +
2535641   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2535642   +
2535643   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2535644   +
2535645   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2535646   +
2535647   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
2535648   +
2535649   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2535650   +
2535651   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2535652   +
2535653   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2535654   +
2535655   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2535656   +
2535657   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2535658   +
2535659   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2535660   +
2535661   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2535662   +
2535663   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2535664   +
2535665   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
2535666   +
2535667   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2535668   +
2535669   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2535670   +
2535671   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2535672   +
2535673   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2535674   +
2535675   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2535676   +
2535677   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2535678   +
2535679   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2535680   +
2535681   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2535682   +
2535683   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
2535684   +
2535685   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
2535686   +
2535687   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
2535688   +
2535689   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
2535690   +
2535691   +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
2535692   +
2535693   +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
2535694   +
2535695   +      label H1x1_7 = 'Hidden: H1x1_=7' ;
MPRINT(EM_DIAGRAM):   label H1x1_7 = 'Hidden: H1x1_=7' ;
2535696   +
2535697   +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
2535698   +
2535699   +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
2535700   +
2535701   +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
2535702   +
2535703   +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
2535704   +
2535705   +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
2535706   +
2535707   +      label H1x2_6 = 'Hidden: H1x2_=6' ;
MPRINT(EM_DIAGRAM):   label H1x2_6 = 'Hidden: H1x2_=6' ;
2535708   +
2535709   +      label H1x2_7 = 'Hidden: H1x2_=7' ;
MPRINT(EM_DIAGRAM):   label H1x2_7 = 'Hidden: H1x2_=7' ;
2535710   +
2535711   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2535712   +
2535713   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2535714   +
2535715   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2535716   +
2535717   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2535718   +
2535719   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2535720   +
2535721   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2535722   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2535723   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2535724   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2535725   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2535726   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2535727   +end;
MPRINT(EM_DIAGRAM):   end;
2535728   +else do;
MPRINT(EM_DIAGRAM):   else do;
2535729   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2535730   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2535731   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2535732   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2535733   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2535734   +   end;
MPRINT(EM_DIAGRAM):   end;
2535735   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2535736   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2535737   +   end;
MPRINT(EM_DIAGRAM):   end;
2535738   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2535739   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2535740   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2535741   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2535742   +   end;
MPRINT(EM_DIAGRAM):   end;
2535743   +end;
MPRINT(EM_DIAGRAM):   end;
2535744   +
2535745   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2535746   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2535747   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2535748   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2535749   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2535750   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2535751   +end;
MPRINT(EM_DIAGRAM):   end;
2535752   +else do;
MPRINT(EM_DIAGRAM):   else do;
2535753   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2535754   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2535755   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2535756   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2535757   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2535758   +   end;
MPRINT(EM_DIAGRAM):   end;
2535759   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2535760   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2535761   +   end;
MPRINT(EM_DIAGRAM):   end;
2535762   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2535763   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2535764   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2535765   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2535766   +   end;
MPRINT(EM_DIAGRAM):   end;
2535767   +end;
MPRINT(EM_DIAGRAM):   end;
2535768   +
2535769   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2535770   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2535771   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2535772   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2535773   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2535774   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2535775   +end;
MPRINT(EM_DIAGRAM):   end;
2535776   +else do;
MPRINT(EM_DIAGRAM):   else do;
2535777   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2535778   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2535779   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2535780   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2535781   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2535782   +   end;
MPRINT(EM_DIAGRAM):   end;
2535783   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2535784   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2535785   +   end;
MPRINT(EM_DIAGRAM):   end;
2535786   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2535787   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2535788   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2535789   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2535790   +   end;
MPRINT(EM_DIAGRAM):   end;
2535791   +end;
MPRINT(EM_DIAGRAM):   end;
2535792   +
2535793   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2535794   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2535795   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2535796   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2535797   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2535798   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2535799   +end;
MPRINT(EM_DIAGRAM):   end;
2535800   +else do;
MPRINT(EM_DIAGRAM):   else do;
2535801   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2535802   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2535803   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2535804   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2535805   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2535806   +   end;
MPRINT(EM_DIAGRAM):   end;
2535807   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2535808   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2535809   +   end;
MPRINT(EM_DIAGRAM):   end;
2535810   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2535811   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2535812   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2535813   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2535814   +   end;
MPRINT(EM_DIAGRAM):   end;
2535815   +end;
MPRINT(EM_DIAGRAM):   end;
2535816   +
2535817   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2535818   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2535819   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2535820   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2535821   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2535822   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2535823   +end;
MPRINT(EM_DIAGRAM):   end;
2535824   +else do;
MPRINT(EM_DIAGRAM):   else do;
2535825   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2535826   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2535827   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2535828   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2535829   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2535830   +   end;
MPRINT(EM_DIAGRAM):   end;
2535831   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2535832   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2535833   +   end;
MPRINT(EM_DIAGRAM):   end;
2535834   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2535835   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2535836   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2535837   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2535838   +   end;
MPRINT(EM_DIAGRAM):   end;
2535839   +end;
MPRINT(EM_DIAGRAM):   end;
2535840   +
2535841   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2535842   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2535843   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2535844   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2535845   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2535846   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2535847   +end;
MPRINT(EM_DIAGRAM):   end;
2535848   +else do;
MPRINT(EM_DIAGRAM):   else do;
2535849   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2535850   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2535851   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2535852   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2535853   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2535854   +   end;
MPRINT(EM_DIAGRAM):   end;
2535855   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2535856   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2535857   +   end;
MPRINT(EM_DIAGRAM):   end;
2535858   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2535859   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2535860   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2535861   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2535862   +   end;
MPRINT(EM_DIAGRAM):   end;
2535863   +end;
MPRINT(EM_DIAGRAM):   end;
2535864   +
2535865   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
2535866   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
2535867   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
2535868   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2535869   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2535870   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2535871   +end;
MPRINT(EM_DIAGRAM):   end;
2535872   +else do;
MPRINT(EM_DIAGRAM):   else do;
2535873   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2535874   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
2535875   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2535876   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
2535877   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
2535878   +   end;
MPRINT(EM_DIAGRAM):   end;
2535879   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
2535880   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
2535881   +   end;
MPRINT(EM_DIAGRAM):   end;
2535882   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2535883   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2535884   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2535885   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2535886   +   end;
MPRINT(EM_DIAGRAM):   end;
2535887   +end;
MPRINT(EM_DIAGRAM):   end;
2535888   +
2535889   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2535890   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
2535891   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2535892   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2535893   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2535894   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2535895   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2535896   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2535897   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2535898   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2535899   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2535900   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2535901   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2535902   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2535903   +end;
MPRINT(EM_DIAGRAM):   end;
2535904   +else do;
MPRINT(EM_DIAGRAM):   else do;
2535905   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2535906   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2535907   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2535908   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2535909   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2535910   +   end;
MPRINT(EM_DIAGRAM):   end;
2535911   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2535912   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2535913   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2535914   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2535915   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2535916   +   end;
MPRINT(EM_DIAGRAM):   end;
2535917   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2535918   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2535919   +   end;
MPRINT(EM_DIAGRAM):   end;
2535920   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2535921   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2535922   +   end;
MPRINT(EM_DIAGRAM):   end;
2535923   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2535924   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2535925   +   end;
MPRINT(EM_DIAGRAM):   end;
2535926   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2535927   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2535928   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2535929   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2535930   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2535931   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2535932   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2535933   +   end;
MPRINT(EM_DIAGRAM):   end;
2535934   +end;
MPRINT(EM_DIAGRAM):   end;
2535935   +
2535936   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2535937   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2535938   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
2535939   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2535940   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2535941   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2535942   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2535943   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2535944   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2535945   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2535946   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2535947   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2535948   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2535949   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2535950   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2535951   +end;
MPRINT(EM_DIAGRAM):   end;
2535952   +else do;
MPRINT(EM_DIAGRAM):   else do;
2535953   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2535954   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2535955   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2535956   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2535957   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2535958   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2535959   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2535960   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2535961   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2535962   +         end;
MPRINT(EM_DIAGRAM):   end;
2535963   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2535964   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2535965   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2535966   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2535967   +            end;
MPRINT(EM_DIAGRAM):   end;
2535968   +         end;
MPRINT(EM_DIAGRAM):   end;
2535969   +      end;
MPRINT(EM_DIAGRAM):   end;
2535970   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2535971   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2535972   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2535973   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2535974   +         end;
MPRINT(EM_DIAGRAM):   end;
2535975   +      end;
MPRINT(EM_DIAGRAM):   end;
2535976   +   end;
MPRINT(EM_DIAGRAM):   end;
2535977   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2535978   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2535979   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2535980   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2535981   +      end;
MPRINT(EM_DIAGRAM):   end;
2535982   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2535983   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2535984   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2535985   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2535986   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2535987   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2535988   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2535989   +         end;
MPRINT(EM_DIAGRAM):   end;
2535990   +      end;
MPRINT(EM_DIAGRAM):   end;
2535991   +   end;
MPRINT(EM_DIAGRAM):   end;
2535992   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2535993   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2535994   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2535995   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2535996   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2535997   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2535998   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2535999   +   end;
MPRINT(EM_DIAGRAM):   end;
2536000   +end;
MPRINT(EM_DIAGRAM):   end;
2536001   +
2536002   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2536003   +*** Checking missing input Interval
2536004   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2536005   +
2536006   +IF NMISS(
2536007   +   AcceptedCmpTotal ,
2536008   +   Age ,
2536009   +   Frq ,
2536010   +   Income ,
2536011   +   Kidhome ,
2536012   +   Mnt ,
2536013   +   MntFishProducts ,
2536014   +   MntFruits ,
2536015   +   MntGoldProds ,
2536016   +   MntMeatProducts ,
2536017   +   MntSweetProducts ,
2536018   +   MntWines ,
2536019   +   MonthsAsCustomer ,
2536020   +   NumCatalogPurchases ,
2536021   +   NumDealsPurchases ,
2536022   +   NumDistPurchases ,
2536023   +   NumStorePurchases ,
2536024   +   NumWebPurchases ,
2536025   +   NumWebVisitsMonth ,
2536026   +   RFMstat ,
2536027   +   RMntFrq ,
2536028   +   Recency ,
2536029   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
2536030   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2536031   +
2536032   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2536033   +END;
MPRINT(EM_DIAGRAM):   END;
2536034   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2536035   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
2536036   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2536037   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2536038   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2536039   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
2536040   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2536041   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2536042   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2536043   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2536044   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2536045   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2536046   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2536047   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2536048   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2536049   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2536050   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2536051   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
2536052   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2536053   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2536054   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2536055   +   S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2536056   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 *
MonthsAsCustomer ;
2536057   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2536058   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
2536059   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2536060   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2536061   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2536062   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
2536063   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2536064   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
2536065   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2536066   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
2536067   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2536068   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2536069   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2536070   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2536071   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2536072   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2536073   +END;
MPRINT(EM_DIAGRAM):   END;
2536074   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2536075   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2536076   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2536077   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
2536078   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
2536079   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2536080   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
2536081   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2536082   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2536083   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2536084   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2536085   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2536086   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2536087   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2536088   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2536089   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2536090   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2536091   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2536092   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2536093   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2536094   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2536095   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2536096   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
2536097   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2536098   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2536099   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
2536100   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2536101   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2536102   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2536103   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2536104   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2536105   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
2536106   +   ELSE S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2536107   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 *
MonthsAsCustomer ;
2536108   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2536109   +   ELSE S_NumCatalogPurchases
2536110   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2536111   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
2536112   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2536113   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2536114   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2536115   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
2536116   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2536117   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
2536118   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2536119   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2536120   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
2536121   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2536122   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2536123   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
2536124   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2536125   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2536126   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2536127   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2536128   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2536129   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
2536130   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2536131   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2536132   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2536133   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2536134   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2536135   +END;
MPRINT(EM_DIAGRAM):   END;
2536136   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2536137   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
2536138   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2536139   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2536140   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
2536141   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2536142   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2536143   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
2536144   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2536145   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2536146   +   H1x1_1  =    -0.08478534961354 * S_AcceptedCmpTotal
2536147   +          +     0.21528166003219 * S_Age  +    -0.16079737422774 * S_Frq
2536148   +          +     0.04922044955183 * S_Income  +     0.06245849112135 *
2536149   +        S_Kidhome  +    -0.12820970008154 * S_Mnt  +    -0.00676959308959 *
2536150   +        S_MntFishProducts  +    -0.20367403957375 * S_MntFruits
2536151   +          +    -0.06459558558968 * S_MntGoldProds  +     0.01557669100416 *
2536152   +        S_MntMeatProducts  +    -0.16342003924117 * S_MntSweetProducts
2536153   +          +     0.34676276369853 * S_MntWines  +    -0.08454570225616 *
2536154   +        S_MonthsAsCustomer  +    -0.00318885387905 * S_NumCatalogPurchases
2536155   +          +      0.1112677116841 * S_NumDealsPurchases
2536156   +          +     0.01563584187072 * S_NumDistPurchases
2536157   +          +     0.19193969522995 * S_NumStorePurchases
2536158   +          +      0.3133556199984 * S_NumWebPurchases
2536159   +          +    -0.21884874785716 * S_NumWebVisitsMonth
2536160   +          +     0.08478875792216 * S_RFMstat  +     0.05964414665285 *
2536161   +        S_RMntFrq  +    -0.12595000497726 * S_Recency
2536162   +          +     -0.1238719414537 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.08478534961354 * S_AcceptedCmpTotal + 0.21528166003219 *
S_Age + -0.16079737422774 * S_Frq + 0.04922044955183 * S_Income + 0.06245849112135 * S_Kidhome
+ -0.12820970008154 * S_Mnt + -0.00676959308959 * S_MntFishProducts + -0.20367403957375 *
S_MntFruits + -0.06459558558968 * S_MntGoldProds + 0.01557669100416 * S_MntMeatProducts +
-0.16342003924117 * S_MntSweetProducts + 0.34676276369853 * S_MntWines + -0.08454570225616 *
S_MonthsAsCustomer + -0.00318885387905 * S_NumCatalogPurchases + 0.1112677116841 *
S_NumDealsPurchases + 0.01563584187072 * S_NumDistPurchases + 0.19193969522995 *
S_NumStorePurchases + 0.3133556199984 * S_NumWebPurchases + -0.21884874785716 *
S_NumWebVisitsMonth + 0.08478875792216 * S_RFMstat + 0.05964414665285 * S_RMntFrq +
-0.12595000497726 * S_Recency + -0.1238719414537 * S_Teenhome ;
2536163   +   H1x1_2  =     0.20807487357943 * S_AcceptedCmpTotal
2536164   +          +    -0.27223051908987 * S_Age  +     0.28649391533674 * S_Frq
2536165   +          +     0.46493719675068 * S_Income  +     0.10180542910079 *
2536166   +        S_Kidhome  +    -0.19573056673819 * S_Mnt  +    -0.05332725327514 *
2536167   +        S_MntFishProducts  +    -0.28610692329433 * S_MntFruits
2536168   +          +    -0.13417237194849 * S_MntGoldProds  +     0.45697707494335 *
2536169   +        S_MntMeatProducts  +    -0.28280545785477 * S_MntSweetProducts
2536170   +          +    -0.13234920069688 * S_MntWines  +     -0.2710938018651 *
2536171   +        S_MonthsAsCustomer  +     0.31174284041905 * S_NumCatalogPurchases
2536172   +          +     0.30225032753275 * S_NumDealsPurchases
2536173   +          +     0.33833359923595 * S_NumDistPurchases
2536174   +          +    -0.20255599575849 * S_NumStorePurchases
2536175   +          +    -0.12040071168942 * S_NumWebPurchases
2536176   +          +    -0.12407090307061 * S_NumWebVisitsMonth
2536177   +          +    -0.05688936259515 * S_RFMstat  +     0.15514736649245 *
2536178   +        S_RMntFrq  +     0.00838555462657 * S_Recency
2536179   +          +     0.04609426861136 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.20807487357943 * S_AcceptedCmpTotal + -0.27223051908987 *
S_Age + 0.28649391533674 * S_Frq + 0.46493719675068 * S_Income + 0.10180542910079 * S_Kidhome
+ -0.19573056673819 * S_Mnt + -0.05332725327514 * S_MntFishProducts + -0.28610692329433 *
S_MntFruits + -0.13417237194849 * S_MntGoldProds + 0.45697707494335 * S_MntMeatProducts +
-0.28280545785477 * S_MntSweetProducts + -0.13234920069688 * S_MntWines + -0.2710938018651 *
S_MonthsAsCustomer + 0.31174284041905 * S_NumCatalogPurchases + 0.30225032753275 *
S_NumDealsPurchases + 0.33833359923595 * S_NumDistPurchases + -0.20255599575849 *
S_NumStorePurchases + -0.12040071168942 * S_NumWebPurchases + -0.12407090307061 *
S_NumWebVisitsMonth + -0.05688936259515 * S_RFMstat + 0.15514736649245 * S_RMntFrq +
0.00838555462657 * S_Recency + 0.04609426861136 * S_Teenhome ;
2536180   +   H1x1_3  =    -0.30541463116928 * S_AcceptedCmpTotal
2536181   +          +    -0.01746117216025 * S_Age  +    -0.44156473334329 * S_Frq
2536182   +          +    -0.51952426304193 * S_Income  +     0.20419921255777 *
2536183   +        S_Kidhome  +    -0.18174316707953 * S_Mnt  +    -0.03813675536406 *
2536184   +        S_MntFishProducts  +     -0.0959023413712 * S_MntFruits
2536185   +          +     0.12724081783278 * S_MntGoldProds  +    -0.07639148541426 *
2536186   +        S_MntMeatProducts  +     -0.0797214413833 * S_MntSweetProducts
2536187   +          +    -0.57705931875808 * S_MntWines  +    -0.12638551201991 *
2536188   +        S_MonthsAsCustomer  +    -0.21854676704549 * S_NumCatalogPurchases
2536189   +          +     0.16792903091627 * S_NumDealsPurchases
2536190   +          +    -0.37408945626745 * S_NumDistPurchases
2536191   +          +    -0.18067262995566 * S_NumStorePurchases
2536192   +          +     0.21192146789881 * S_NumWebPurchases
2536193   +          +    -0.23547702310669 * S_NumWebVisitsMonth
2536194   +          +    -0.02272089758813 * S_RFMstat  +    -0.16409330281075 *
2536195   +        S_RMntFrq  +     0.45021846112946 * S_Recency
2536196   +          +     0.32988735727394 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.30541463116928 * S_AcceptedCmpTotal + -0.01746117216025 *
S_Age + -0.44156473334329 * S_Frq + -0.51952426304193 * S_Income + 0.20419921255777 *
S_Kidhome + -0.18174316707953 * S_Mnt + -0.03813675536406 * S_MntFishProducts +
-0.0959023413712 * S_MntFruits + 0.12724081783278 * S_MntGoldProds + -0.07639148541426 *
S_MntMeatProducts + -0.0797214413833 * S_MntSweetProducts + -0.57705931875808 * S_MntWines +
-0.12638551201991 * S_MonthsAsCustomer + -0.21854676704549 * S_NumCatalogPurchases +
0.16792903091627 * S_NumDealsPurchases + -0.37408945626745 * S_NumDistPurchases +
-0.18067262995566 * S_NumStorePurchases + 0.21192146789881 * S_NumWebPurchases +
-0.23547702310669 * S_NumWebVisitsMonth + -0.02272089758813 * S_RFMstat + -0.16409330281075 *
S_RMntFrq + 0.45021846112946 * S_Recency + 0.32988735727394 * S_Teenhome ;
2536197   +   H1x1_4  =     0.05205198916717 * S_AcceptedCmpTotal
2536198   +          +     0.25568653619739 * S_Age  +    -0.31037252146959 * S_Frq
2536199   +          +     0.42636025358982 * S_Income  +    -0.24453708980866 *
2536200   +        S_Kidhome  +    -0.07832530945892 * S_Mnt  +    -0.48332124476182 *
2536201   +        S_MntFishProducts  +    -0.13932879119138 * S_MntFruits
2536202   +          +      0.1984121566988 * S_MntGoldProds  +     1.14965897015972 *
2536203   +        S_MntMeatProducts  +     0.07027485457428 * S_MntSweetProducts
2536204   +          +    -0.56598097754046 * S_MntWines  +     0.07317190938075 *
2536205   +        S_MonthsAsCustomer  +       0.075756987983 * S_NumCatalogPurchases
2536206   +          +     0.29407429399136 * S_NumDealsPurchases
2536207   +          +     0.01610745252195 * S_NumDistPurchases
2536208   +          +    -0.17767939085628 * S_NumStorePurchases
2536209   +          +    -0.15168958538637 * S_NumWebPurchases
2536210   +          +     0.17433622143988 * S_NumWebVisitsMonth
2536211   +          +     0.11635602973993 * S_RFMstat  +     0.32632751843433 *
2536212   +        S_RMntFrq  +    -0.24758483374458 * S_Recency
2536213   +          +    -0.31468291567479 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.05205198916717 * S_AcceptedCmpTotal + 0.25568653619739 *
S_Age + -0.31037252146959 * S_Frq + 0.42636025358982 * S_Income + -0.24453708980866 *
S_Kidhome + -0.07832530945892 * S_Mnt + -0.48332124476182 * S_MntFishProducts +
-0.13932879119138 * S_MntFruits + 0.1984121566988 * S_MntGoldProds + 1.14965897015972 *
S_MntMeatProducts + 0.07027485457428 * S_MntSweetProducts + -0.56598097754046 * S_MntWines +
0.07317190938075 * S_MonthsAsCustomer + 0.075756987983 * S_NumCatalogPurchases +
0.29407429399136 * S_NumDealsPurchases + 0.01610745252195 * S_NumDistPurchases +
-0.17767939085628 * S_NumStorePurchases + -0.15168958538637 * S_NumWebPurchases +
0.17433622143988 * S_NumWebVisitsMonth + 0.11635602973993 * S_RFMstat + 0.32632751843433 *
S_RMntFrq + -0.24758483374458 * S_Recency + -0.31468291567479 * S_Teenhome ;
2536214   +   H1x1_5  =    -0.59657492903543 * S_AcceptedCmpTotal
2536215   +          +     0.23513672763458 * S_Age  +    -0.14882104210954 * S_Frq
2536216   +          +    -0.07762660201035 * S_Income  +     0.01424651904783 *
2536217   +        S_Kidhome  +     0.18748607813081 * S_Mnt  +     0.11088464897095 *
2536218   +        S_MntFishProducts  +    -0.10064450211557 * S_MntFruits
2536219   +          +     0.11161391354421 * S_MntGoldProds  +    -1.36345407290644 *
2536220   +        S_MntMeatProducts  +     0.04868729717044 * S_MntSweetProducts
2536221   +          +     0.80284342329654 * S_MntWines  +     -0.0179539622492 *
2536222   +        S_MonthsAsCustomer  +    -0.60051908798715 * S_NumCatalogPurchases
2536223   +          +    -0.37976451362108 * S_NumDealsPurchases
2536224   +          +    -0.17027731520801 * S_NumDistPurchases
2536225   +          +     0.59849493667087 * S_NumStorePurchases
2536226   +          +     0.65481480560301 * S_NumWebPurchases
2536227   +          +    -0.68253224576609 * S_NumWebVisitsMonth
2536228   +          +    -0.16723490165629 * S_RFMstat  +    -0.10533797887644 *
2536229   +        S_RMntFrq  +     0.81382723915873 * S_Recency
2536230   +          +     0.06049401205856 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -0.59657492903543 * S_AcceptedCmpTotal + 0.23513672763458 *
S_Age + -0.14882104210954 * S_Frq + -0.07762660201035 * S_Income + 0.01424651904783 *
S_Kidhome + 0.18748607813081 * S_Mnt + 0.11088464897095 * S_MntFishProducts +
-0.10064450211557 * S_MntFruits + 0.11161391354421 * S_MntGoldProds + -1.36345407290644 *
S_MntMeatProducts + 0.04868729717044 * S_MntSweetProducts + 0.80284342329654 * S_MntWines +
-0.0179539622492 * S_MonthsAsCustomer + -0.60051908798715 * S_NumCatalogPurchases +
-0.37976451362108 * S_NumDealsPurchases + -0.17027731520801 * S_NumDistPurchases +
0.59849493667087 * S_NumStorePurchases + 0.65481480560301 * S_NumWebPurchases +
-0.68253224576609 * S_NumWebVisitsMonth + -0.16723490165629 * S_RFMstat + -0.10533797887644 *
S_RMntFrq + 0.81382723915873 * S_Recency + 0.06049401205856 * S_Teenhome ;
2536231   +   H1x1_6  =    -0.07547841798202 * S_AcceptedCmpTotal
2536232   +          +     0.22445278254589 * S_Age  +    -0.26357481075143 * S_Frq
2536233   +          +     0.06894154144261 * S_Income  +     0.20713236126681 *
2536234   +        S_Kidhome  +    -0.14103612934526 * S_Mnt  +     0.36334508557452 *
2536235   +        S_MntFishProducts  +    -0.20862425337296 * S_MntFruits
2536236   +          +    -0.29089690099273 * S_MntGoldProds  +     0.11336893090527 *
2536237   +        S_MntMeatProducts  +    -0.13547374281924 * S_MntSweetProducts
2536238   +          +     0.02228828195539 * S_MntWines  +    -0.19257650420334 *
2536239   +        S_MonthsAsCustomer  +      0.1365526319824 * S_NumCatalogPurchases
2536240   +          +    -0.07686699131623 * S_NumDealsPurchases
2536241   +          +    -0.07220460738926 * S_NumDistPurchases
2536242   +          +    -0.06554027468389 * S_NumStorePurchases
2536243   +          +     0.10422838158001 * S_NumWebPurchases
2536244   +          +    -0.03858550147892 * S_NumWebVisitsMonth
2536245   +          +    -0.06397448441373 * S_RFMstat  +     0.21747838287147 *
2536246   +        S_RMntFrq  +     0.24839313159913 * S_Recency
2536247   +          +    -0.06317317698653 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_6 = -0.07547841798202 * S_AcceptedCmpTotal + 0.22445278254589 *
S_Age + -0.26357481075143 * S_Frq + 0.06894154144261 * S_Income + 0.20713236126681 * S_Kidhome
+ -0.14103612934526 * S_Mnt + 0.36334508557452 * S_MntFishProducts + -0.20862425337296 *
S_MntFruits + -0.29089690099273 * S_MntGoldProds + 0.11336893090527 * S_MntMeatProducts +
-0.13547374281924 * S_MntSweetProducts + 0.02228828195539 * S_MntWines + -0.19257650420334 *
S_MonthsAsCustomer + 0.1365526319824 * S_NumCatalogPurchases + -0.07686699131623 *
S_NumDealsPurchases + -0.07220460738926 * S_NumDistPurchases + -0.06554027468389 *
S_NumStorePurchases + 0.10422838158001 * S_NumWebPurchases + -0.03858550147892 *
S_NumWebVisitsMonth + -0.06397448441373 * S_RFMstat + 0.21747838287147 * S_RMntFrq +
0.24839313159913 * S_Recency + -0.06317317698653 * S_Teenhome ;
2536248   +   H1x1_7  =    -0.08604903695444 * S_AcceptedCmpTotal
2536249   +          +    -0.14807437541992 * S_Age  +     0.01466157584549 * S_Frq
2536250   +          +    -0.09883966180507 * S_Income  +     0.51992566778352 *
2536251   +        S_Kidhome  +     0.29795006703636 * S_Mnt  +    -0.08922020500011 *
2536252   +        S_MntFishProducts  +     0.19836834402079 * S_MntFruits
2536253   +          +    -0.11292241468378 * S_MntGoldProds  +       0.584464452194 *
2536254   +        S_MntMeatProducts  +     0.22625326024073 * S_MntSweetProducts
2536255   +          +     0.24074129944382 * S_MntWines  +     0.13538906557527 *
2536256   +        S_MonthsAsCustomer  +    -0.01228250248922 * S_NumCatalogPurchases
2536257   +          +    -0.07920122387563 * S_NumDealsPurchases
2536258   +          +      0.3649244061347 * S_NumDistPurchases
2536259   +          +     0.36475853688403 * S_NumStorePurchases
2536260   +          +     0.02153991404063 * S_NumWebPurchases
2536261   +          +    -0.94080669139388 * S_NumWebVisitsMonth
2536262   +          +     0.24853677977494 * S_RFMstat  +     0.37015183933951 *
2536263   +        S_RMntFrq  +      0.6724157721663 * S_Recency
2536264   +          +      0.1615471643866 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_7 = -0.08604903695444 * S_AcceptedCmpTotal + -0.14807437541992 *
S_Age + 0.01466157584549 * S_Frq + -0.09883966180507 * S_Income + 0.51992566778352 * S_Kidhome
+ 0.29795006703636 * S_Mnt + -0.08922020500011 * S_MntFishProducts + 0.19836834402079 *
S_MntFruits + -0.11292241468378 * S_MntGoldProds + 0.584464452194 * S_MntMeatProducts +
0.22625326024073 * S_MntSweetProducts + 0.24074129944382 * S_MntWines + 0.13538906557527 *
S_MonthsAsCustomer + -0.01228250248922 * S_NumCatalogPurchases + -0.07920122387563 *
S_NumDealsPurchases + 0.3649244061347 * S_NumDistPurchases + 0.36475853688403 *
S_NumStorePurchases + 0.02153991404063 * S_NumWebPurchases + -0.94080669139388 *
S_NumWebVisitsMonth + 0.24853677977494 * S_RFMstat + 0.37015183933951 * S_RMntFrq +
0.6724157721663 * S_Recency + 0.1615471643866 * S_Teenhome ;
2536265   +   H1x1_1  = H1x1_1  +     0.04431608362128 * AcceptedCmp10
2536266   +          +       0.145592087795 * AcceptedCmp20  +    -0.18972867139938 *
2536267   +        AcceptedCmp30  +     0.11297731320888 * AcceptedCmp40
2536268   +          +     0.15203974410995 * AcceptedCmp50  +     0.05130421316428 *
2536269   +        Complain0  +     0.33576036450343 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.04431608362128 * AcceptedCmp10 + 0.145592087795 *
AcceptedCmp20 + -0.18972867139938 * AcceptedCmp30 + 0.11297731320888 * AcceptedCmp40 +
0.15203974410995 * AcceptedCmp50 + 0.05130421316428 * Complain0 + 0.33576036450343 *
HigherEducationBinary0 ;
2536270   +   H1x1_2  = H1x1_2  +    -0.05495742609855 * AcceptedCmp10
2536271   +          +    -0.08873650760176 * AcceptedCmp20  +    -0.16380549867313 *
2536272   +        AcceptedCmp30  +    -0.24495261884932 * AcceptedCmp40
2536273   +          +    -0.22199506896148 * AcceptedCmp50  +       0.149484615172 *
2536274   +        Complain0  +     0.01091791142552 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.05495742609855 * AcceptedCmp10 + -0.08873650760176
* AcceptedCmp20 + -0.16380549867313 * AcceptedCmp30 + -0.24495261884932 * AcceptedCmp40 +
-0.22199506896148 * AcceptedCmp50 + 0.149484615172 * Complain0 + 0.01091791142552 *
HigherEducationBinary0 ;
2536275   +   H1x1_3  = H1x1_3  +     0.03473702421341 * AcceptedCmp10
2536276   +          +    -0.11226718065217 * AcceptedCmp20  +     0.19024579384296 *
2536277   +        AcceptedCmp30  +     0.15478548865598 * AcceptedCmp40
2536278   +          +     0.15222823671897 * AcceptedCmp50  +     0.07713012834947 *
2536279   +        Complain0  +    -0.18741708707661 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.03473702421341 * AcceptedCmp10 + -0.11226718065217 *
AcceptedCmp20 + 0.19024579384296 * AcceptedCmp30 + 0.15478548865598 * AcceptedCmp40 +
0.15222823671897 * AcceptedCmp50 + 0.07713012834947 * Complain0 + -0.18741708707661 *
HigherEducationBinary0 ;
2536280   +   H1x1_4  = H1x1_4  +    -0.25622127302429 * AcceptedCmp10
2536281   +          +    -0.39059103518073 * AcceptedCmp20  +    -0.29716603631807 *
2536282   +        AcceptedCmp30  +    -0.20875694971526 * AcceptedCmp40
2536283   +          +    -0.35128787139073 * AcceptedCmp50  +    -0.28848733462386 *
2536284   +        Complain0  +      0.4276503747649 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.25622127302429 * AcceptedCmp10 + -0.39059103518073
* AcceptedCmp20 + -0.29716603631807 * AcceptedCmp30 + -0.20875694971526 * AcceptedCmp40 +
-0.35128787139073 * AcceptedCmp50 + -0.28848733462386 * Complain0 + 0.4276503747649 *
HigherEducationBinary0 ;
2536285   +   H1x1_5  = H1x1_5  +    -0.06574875851088 * AcceptedCmp10
2536286   +          +    -0.27375195259265 * AcceptedCmp20  +     -0.2740681662293 *
2536287   +        AcceptedCmp30  +    -0.14697156898736 * AcceptedCmp40
2536288   +          +     0.17684649468835 * AcceptedCmp50  +    -0.09979172944646 *
2536289   +        Complain0  +     0.38986664202197 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.06574875851088 * AcceptedCmp10 + -0.27375195259265
* AcceptedCmp20 + -0.2740681662293 * AcceptedCmp30 + -0.14697156898736 * AcceptedCmp40 +
0.17684649468835 * AcceptedCmp50 + -0.09979172944646 * Complain0 + 0.38986664202197 *
HigherEducationBinary0 ;
2536290   +   H1x1_6  = H1x1_6  +     0.08696678529441 * AcceptedCmp10
2536291   +          +     0.09467543942215 * AcceptedCmp20  +     0.04586779705477 *
2536292   +        AcceptedCmp30  +    -0.12591921836379 * AcceptedCmp40
2536293   +          +     0.20150138392895 * AcceptedCmp50  +     0.27764282700214 *
2536294   +        Complain0  +     0.13985738522066 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + 0.08696678529441 * AcceptedCmp10 + 0.09467543942215 *
AcceptedCmp20 + 0.04586779705477 * AcceptedCmp30 + -0.12591921836379 * AcceptedCmp40 +
0.20150138392895 * AcceptedCmp50 + 0.27764282700214 * Complain0 + 0.13985738522066 *
HigherEducationBinary0 ;
2536295   +   H1x1_7  = H1x1_7  +    -0.10455069401218 * AcceptedCmp10
2536296   +          +      0.1311831941372 * AcceptedCmp20  +     0.17844209104604 *
2536297   +        AcceptedCmp30  +     0.19406707592815 * AcceptedCmp40
2536298   +          +    -0.00068155012319 * AcceptedCmp50  +     0.13245364846536 *
2536299   +        Complain0  +    -0.05165256160872 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_7 = H1x1_7 + -0.10455069401218 * AcceptedCmp10 + 0.1311831941372 *
AcceptedCmp20 + 0.17844209104604 * AcceptedCmp30 + 0.19406707592815 * AcceptedCmp40 +
-0.00068155012319 * AcceptedCmp50 + 0.13245364846536 * Complain0 + -0.05165256160872 *
HigherEducationBinary0 ;
2536300   +   H1x1_1  = H1x1_1  +     0.28967939808759 * Education2n_Cycle
2536301   +          +    -0.15795056374781 * EducationBasic  +    -0.00649803471307 *
2536302   +        EducationGraduation  +     0.19520715924532 * EducationMaster
2536303   +          +     0.07744097241553 * Marital_StatusDivorced
2536304   +          +     -0.0247463100385 * Marital_StatusMarried
2536305   +          +     0.05804915234573 * Marital_StatusSingle
2536306   +          +    -0.08320125047871 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.28967939808759 * Education2n_Cycle +
-0.15795056374781 * EducationBasic + -0.00649803471307 * EducationGraduation +
0.19520715924532 * EducationMaster + 0.07744097241553 * Marital_StatusDivorced +
-0.0247463100385 * Marital_StatusMarried + 0.05804915234573 * Marital_StatusSingle +
-0.08320125047871 * Marital_StatusTogether ;
2536307   +   H1x1_2  = H1x1_2  +     0.12524444422085 * Education2n_Cycle
2536308   +          +    -0.30278286924729 * EducationBasic  +     0.37480827366421 *
2536309   +        EducationGraduation  +     0.34209136290694 * EducationMaster
2536310   +          +     0.01390668926269 * Marital_StatusDivorced
2536311   +          +     0.01136282152074 * Marital_StatusMarried
2536312   +          +     0.12450246418789 * Marital_StatusSingle
2536313   +          +     -0.1576148519872 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.12524444422085 * Education2n_Cycle +
-0.30278286924729 * EducationBasic + 0.37480827366421 * EducationGraduation + 0.34209136290694
* EducationMaster + 0.01390668926269 * Marital_StatusDivorced + 0.01136282152074 *
Marital_StatusMarried + 0.12450246418789 * Marital_StatusSingle + -0.1576148519872 *
Marital_StatusTogether ;
2536314   +   H1x1_3  = H1x1_3  +    -0.14589041643593 * Education2n_Cycle
2536315   +          +    -0.15691118816463 * EducationBasic  +      0.1993616073183 *
2536316   +        EducationGraduation  +     0.02862010255145 * EducationMaster
2536317   +          +    -0.19133456931879 * Marital_StatusDivorced
2536318   +          +     0.56263566654996 * Marital_StatusMarried
2536319   +          +    -0.42172822038882 * Marital_StatusSingle
2536320   +          +     0.42023140643292 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.14589041643593 * Education2n_Cycle +
-0.15691118816463 * EducationBasic + 0.1993616073183 * EducationGraduation + 0.02862010255145
* EducationMaster + -0.19133456931879 * Marital_StatusDivorced + 0.56263566654996 *
Marital_StatusMarried + -0.42172822038882 * Marital_StatusSingle + 0.42023140643292 *
Marital_StatusTogether ;
2536321   +   H1x1_4  = H1x1_4  +     0.10038585978656 * Education2n_Cycle
2536322   +          +    -0.11388609002984 * EducationBasic  +    -0.14980553500983 *
2536323   +        EducationGraduation  +    -0.07646595330369 * EducationMaster
2536324   +          +    -0.19871205065609 * Marital_StatusDivorced
2536325   +          +    -0.14730795681603 * Marital_StatusMarried
2536326   +          +     0.05055432510362 * Marital_StatusSingle
2536327   +          +     0.06558965292395 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + 0.10038585978656 * Education2n_Cycle +
-0.11388609002984 * EducationBasic + -0.14980553500983 * EducationGraduation +
-0.07646595330369 * EducationMaster + -0.19871205065609 * Marital_StatusDivorced +
-0.14730795681603 * Marital_StatusMarried + 0.05055432510362 * Marital_StatusSingle +
0.06558965292395 * Marital_StatusTogether ;
2536328   +   H1x1_5  = H1x1_5  +      0.0015835307855 * Education2n_Cycle
2536329   +          +    -0.22658746797638 * EducationBasic  +    -0.03445982386977 *
2536330   +        EducationGraduation  +     0.11375378192685 * EducationMaster
2536331   +          +    -0.35623807358995 * Marital_StatusDivorced
2536332   +          +     0.30324726283965 * Marital_StatusMarried
2536333   +          +    -0.18561093467927 * Marital_StatusSingle
2536334   +          +       0.395424582152 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + 0.0015835307855 * Education2n_Cycle +
-0.22658746797638 * EducationBasic + -0.03445982386977 * EducationGraduation +
0.11375378192685 * EducationMaster + -0.35623807358995 * Marital_StatusDivorced +
0.30324726283965 * Marital_StatusMarried + -0.18561093467927 * Marital_StatusSingle +
0.395424582152 * Marital_StatusTogether ;
2536335   +   H1x1_6  = H1x1_6  +    -0.23751822587858 * Education2n_Cycle
2536336   +          +    -0.01687300040825 * EducationBasic  +     0.23236967703011 *
2536337   +        EducationGraduation  +      0.0725289831541 * EducationMaster
2536338   +          +     0.11581014663368 * Marital_StatusDivorced
2536339   +          +    -0.31070638037659 * Marital_StatusMarried
2536340   +          +     0.17131747253949 * Marital_StatusSingle
2536341   +          +    -0.19314955966476 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + -0.23751822587858 * Education2n_Cycle +
-0.01687300040825 * EducationBasic + 0.23236967703011 * EducationGraduation + 0.0725289831541
* EducationMaster + 0.11581014663368 * Marital_StatusDivorced + -0.31070638037659 *
Marital_StatusMarried + 0.17131747253949 * Marital_StatusSingle + -0.19314955966476 *
Marital_StatusTogether ;
2536342   +   H1x1_7  = H1x1_7  +     0.00103693282479 * Education2n_Cycle
2536343   +          +     0.12608909598752 * EducationBasic  +     -0.2366673091666 *
2536344   +        EducationGraduation  +     0.24413217290922 * EducationMaster
2536345   +          +    -0.42450599871892 * Marital_StatusDivorced
2536346   +          +     0.48162905075885 * Marital_StatusMarried
2536347   +          +    -0.26618507749283 * Marital_StatusSingle
2536348   +          +     0.38053668740338 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_7 = H1x1_7 + 0.00103693282479 * Education2n_Cycle +
0.12608909598752 * EducationBasic + -0.2366673091666 * EducationGraduation + 0.24413217290922
* EducationMaster + -0.42450599871892 * Marital_StatusDivorced + 0.48162905075885 *
Marital_StatusMarried + -0.26618507749283 * Marital_StatusSingle + 0.38053668740338 *
Marital_StatusTogether ;
2536349   +   H1x1_1  =     0.12149136705075 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.12149136705075 + H1x1_1 ;
2536350   +   H1x1_2  =    -0.97489696657001 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.97489696657001 + H1x1_2 ;
2536351   +   H1x1_3  =    -0.70605220802968 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.70605220802968 + H1x1_3 ;
2536352   +   H1x1_4  =    -1.07783206982379 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -1.07783206982379 + H1x1_4 ;
2536353   +   H1x1_5  =    -1.00400706261511 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -1.00400706261511 + H1x1_5 ;
2536354   +   H1x1_6  =     0.22600488314839 + H1x1_6 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = 0.22600488314839 + H1x1_6 ;
2536355   +   H1x1_7  =     1.55642446968077 + H1x1_7 ;
MPRINT(EM_DIAGRAM):   H1x1_7 = 1.55642446968077 + H1x1_7 ;
2536356   +   _EPS = SQRT(CONSTANT('MACEPS')) ;
MPRINT(EM_DIAGRAM):   _EPS = SQRT(CONSTANT('MACEPS')) ;
2536357   +   _REC_EPS = 1/_EPS ;
MPRINT(EM_DIAGRAM):   _REC_EPS = 1/_EPS ;
2536358   +   DROP _REC_EPS _EPS ;
MPRINT(EM_DIAGRAM):   DROP _REC_EPS _EPS ;
2536359   +   IF H1x1_1  < _REC_EPS AND H1x1_1  > - _REC_EPS THEN
2536360   +   H1x1_1  = H1x1_1  * H1x1_1 ;
MPRINT(EM_DIAGRAM):   IF H1x1_1 < _REC_EPS AND H1x1_1 > - _REC_EPS THEN H1x1_1 = H1x1_1 *
H1x1_1 ;
2536361   +   ELSE H1x1_1  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_1 = _REC_EPS ;
2536362   +   IF H1x1_2  < _REC_EPS AND H1x1_2  > - _REC_EPS THEN
2536363   +   H1x1_2  = H1x1_2  * H1x1_2 ;
MPRINT(EM_DIAGRAM):   IF H1x1_2 < _REC_EPS AND H1x1_2 > - _REC_EPS THEN H1x1_2 = H1x1_2 *
H1x1_2 ;
2536364   +   ELSE H1x1_2  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_2 = _REC_EPS ;
2536365   +   IF H1x1_3  < _REC_EPS AND H1x1_3  > - _REC_EPS THEN
2536366   +   H1x1_3  = H1x1_3  * H1x1_3 ;
MPRINT(EM_DIAGRAM):   IF H1x1_3 < _REC_EPS AND H1x1_3 > - _REC_EPS THEN H1x1_3 = H1x1_3 *
H1x1_3 ;
2536367   +   ELSE H1x1_3  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_3 = _REC_EPS ;
2536368   +   IF H1x1_4  < _REC_EPS AND H1x1_4  > - _REC_EPS THEN
2536369   +   H1x1_4  = H1x1_4  * H1x1_4 ;
MPRINT(EM_DIAGRAM):   IF H1x1_4 < _REC_EPS AND H1x1_4 > - _REC_EPS THEN H1x1_4 = H1x1_4 *
H1x1_4 ;
2536370   +   ELSE H1x1_4  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_4 = _REC_EPS ;
2536371   +   IF H1x1_5  < _REC_EPS AND H1x1_5  > - _REC_EPS THEN
2536372   +   H1x1_5  = H1x1_5  * H1x1_5 ;
MPRINT(EM_DIAGRAM):   IF H1x1_5 < _REC_EPS AND H1x1_5 > - _REC_EPS THEN H1x1_5 = H1x1_5 *
H1x1_5 ;
2536373   +   ELSE H1x1_5  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_5 = _REC_EPS ;
2536374   +   IF H1x1_6  < _REC_EPS AND H1x1_6  > - _REC_EPS THEN
2536375   +   H1x1_6  = H1x1_6  * H1x1_6 ;
MPRINT(EM_DIAGRAM):   IF H1x1_6 < _REC_EPS AND H1x1_6 > - _REC_EPS THEN H1x1_6 = H1x1_6 *
H1x1_6 ;
2536376   +   ELSE H1x1_6  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_6 = _REC_EPS ;
2536377   +   IF H1x1_7  < _REC_EPS AND H1x1_7  > - _REC_EPS THEN
2536378   +   H1x1_7  = H1x1_7  * H1x1_7 ;
MPRINT(EM_DIAGRAM):   IF H1x1_7 < _REC_EPS AND H1x1_7 > - _REC_EPS THEN H1x1_7 = H1x1_7 *
H1x1_7 ;
2536379   +   ELSE H1x1_7  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_7 = _REC_EPS ;
2536380   +END;
MPRINT(EM_DIAGRAM):   END;
2536381   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2536382   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
2536383   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
2536384   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
2536385   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
2536386   +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
2536387   +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
2536388   +   H1x1_7  = .;
MPRINT(EM_DIAGRAM):   H1x1_7 = .;
2536389   +END;
MPRINT(EM_DIAGRAM):   END;
2536390   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2536391   +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
2536392   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2536393   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2536394   +   H1x2_1  =    -1.36226288448745 * S_AcceptedCmpTotal
2536395   +          +     -1.3328616352886 * S_Age  +     1.25346137866034 * S_Frq
2536396   +          +    -1.21746243786295 * S_Income  +     2.83911738158074 *
2536397   +        S_Kidhome  +    -0.60784009102409 * S_Mnt  +     1.57752173634223 *
2536398   +        S_MntFishProducts  +    -0.26776567401075 * S_MntFruits
2536399   +          +     1.09584731081081 * S_MntGoldProds  +     1.22333044103532 *
2536400   +        S_MntMeatProducts  +     0.42827942745016 * S_MntSweetProducts
2536401   +          +     0.67813472792448 * S_MntWines  +     0.56816492004798 *
2536402   +        S_MonthsAsCustomer  +     0.58113470399079 * S_NumCatalogPurchases
2536403   +          +     1.96719021971894 * S_NumDealsPurchases
2536404   +          +    -0.44535354794671 * S_NumDistPurchases
2536405   +          +    -0.54827762736866 * S_NumStorePurchases
2536406   +          +     1.02703310241897 * S_NumWebPurchases
2536407   +          +    -0.12526997502601 * S_NumWebVisitsMonth
2536408   +          +    -0.55803926383776 * S_RFMstat  +     0.01819380776809 *
2536409   +        S_RMntFrq  +       0.651688575044 * S_Recency
2536410   +          +     1.58682398186611 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -1.36226288448745 * S_AcceptedCmpTotal + -1.3328616352886 *
S_Age + 1.25346137866034 * S_Frq + -1.21746243786295 * S_Income + 2.83911738158074 * S_Kidhome
+ -0.60784009102409 * S_Mnt + 1.57752173634223 * S_MntFishProducts + -0.26776567401075 *
S_MntFruits + 1.09584731081081 * S_MntGoldProds + 1.22333044103532 * S_MntMeatProducts +
0.42827942745016 * S_MntSweetProducts + 0.67813472792448 * S_MntWines + 0.56816492004798 *
S_MonthsAsCustomer + 0.58113470399079 * S_NumCatalogPurchases + 1.96719021971894 *
S_NumDealsPurchases + -0.44535354794671 * S_NumDistPurchases + -0.54827762736866 *
S_NumStorePurchases + 1.02703310241897 * S_NumWebPurchases + -0.12526997502601 *
S_NumWebVisitsMonth + -0.55803926383776 * S_RFMstat + 0.01819380776809 * S_RMntFrq +
0.651688575044 * S_Recency + 1.58682398186611 * S_Teenhome ;
2536411   +   H1x2_2  =    -0.38064507857029 * S_AcceptedCmpTotal
2536412   +          +    -0.49661801158351 * S_Age  +    -0.89589399799916 * S_Frq
2536413   +          +     -0.0121499288597 * S_Income  +    -0.48023022827846 *
2536414   +        S_Kidhome  +     -0.5183846206029 * S_Mnt  +    -3.13913899012334 *
2536415   +        S_MntFishProducts  +    -2.07291335687615 * S_MntFruits
2536416   +          +     0.51019753905662 * S_MntGoldProds  +     0.11458666377917 *
2536417   +        S_MntMeatProducts  +     -1.8499241966205 * S_MntSweetProducts
2536418   +          +     0.23160544044172 * S_MntWines  +    -0.48210626907943 *
2536419   +        S_MonthsAsCustomer  +     0.15500845227752 * S_NumCatalogPurchases
2536420   +          +     1.34659447971131 * S_NumDealsPurchases
2536421   +          +    -0.51624251310423 * S_NumDistPurchases
2536422   +          +      -1.283121574848 * S_NumStorePurchases
2536423   +          +    -1.83517806228926 * S_NumWebPurchases
2536424   +          +     0.51321339475285 * S_NumWebVisitsMonth
2536425   +          +    -1.86431704283342 * S_RFMstat  +    -1.52065204326569 *
2536426   +        S_RMntFrq  +    -0.33186055095462 * S_Recency
2536427   +          +    -0.49524729407054 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -0.38064507857029 * S_AcceptedCmpTotal + -0.49661801158351 *
S_Age + -0.89589399799916 * S_Frq + -0.0121499288597 * S_Income + -0.48023022827846 *
S_Kidhome + -0.5183846206029 * S_Mnt + -3.13913899012334 * S_MntFishProducts +
-2.07291335687615 * S_MntFruits + 0.51019753905662 * S_MntGoldProds + 0.11458666377917 *
S_MntMeatProducts + -1.8499241966205 * S_MntSweetProducts + 0.23160544044172 * S_MntWines +
-0.48210626907943 * S_MonthsAsCustomer + 0.15500845227752 * S_NumCatalogPurchases +
1.34659447971131 * S_NumDealsPurchases + -0.51624251310423 * S_NumDistPurchases +
-1.283121574848 * S_NumStorePurchases + -1.83517806228926 * S_NumWebPurchases +
0.51321339475285 * S_NumWebVisitsMonth + -1.86431704283342 * S_RFMstat + -1.52065204326569 *
S_RMntFrq + -0.33186055095462 * S_Recency + -0.49524729407054 * S_Teenhome ;
2536428   +   H1x2_3  =    -0.75774003934728 * S_AcceptedCmpTotal
2536429   +          +    -0.85312030825337 * S_Age  +    -0.01726294458221 * S_Frq
2536430   +          +     0.58598267983786 * S_Income  +     1.30497766805554 *
2536431   +        S_Kidhome  +    -0.84214135491022 * S_Mnt  +     0.55305862453787 *
2536432   +        S_MntFishProducts  +      0.6488663613899 * S_MntFruits
2536433   +          +    -0.83189439197558 * S_MntGoldProds  +    -0.07500050412653 *
2536434   +        S_MntMeatProducts  +    -0.06401928810253 * S_MntSweetProducts
2536435   +          +      0.5940135658334 * S_MntWines  +    -0.04573352455984 *
2536436   +        S_MonthsAsCustomer  +    -1.53610650634069 * S_NumCatalogPurchases
2536437   +          +     0.67492297345004 * S_NumDealsPurchases
2536438   +          +    -0.40437875375926 * S_NumDistPurchases
2536439   +          +     0.36322603681545 * S_NumStorePurchases
2536440   +          +    -1.15315070635524 * S_NumWebPurchases
2536441   +          +     1.20707272201156 * S_NumWebVisitsMonth
2536442   +          +     0.12192566357285 * S_RFMstat  +    -0.46711219170047 *
2536443   +        S_RMntFrq  +     1.89703582493259 * S_Recency
2536444   +          +     1.07511942237188 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.75774003934728 * S_AcceptedCmpTotal + -0.85312030825337 *
S_Age + -0.01726294458221 * S_Frq + 0.58598267983786 * S_Income + 1.30497766805554 * S_Kidhome
+ -0.84214135491022 * S_Mnt + 0.55305862453787 * S_MntFishProducts + 0.6488663613899 *
S_MntFruits + -0.83189439197558 * S_MntGoldProds + -0.07500050412653 * S_MntMeatProducts +
-0.06401928810253 * S_MntSweetProducts + 0.5940135658334 * S_MntWines + -0.04573352455984 *
S_MonthsAsCustomer + -1.53610650634069 * S_NumCatalogPurchases + 0.67492297345004 *
S_NumDealsPurchases + -0.40437875375926 * S_NumDistPurchases + 0.36322603681545 *
S_NumStorePurchases + -1.15315070635524 * S_NumWebPurchases + 1.20707272201156 *
S_NumWebVisitsMonth + 0.12192566357285 * S_RFMstat + -0.46711219170047 * S_RMntFrq +
1.89703582493259 * S_Recency + 1.07511942237188 * S_Teenhome ;
2536445   +   H1x2_4  =     0.62123819069495 * S_AcceptedCmpTotal
2536446   +          +     0.03399237520702 * S_Age  +    -0.01971421795338 * S_Frq
2536447   +          +    -0.54728266919056 * S_Income  +     -0.4634195771237 *
2536448   +        S_Kidhome  +    -1.19055247712911 * S_Mnt  +      1.4307770729159 *
2536449   +        S_MntFishProducts  +    -0.83895281276374 * S_MntFruits
2536450   +          +    -0.48578798244317 * S_MntGoldProds  +     -0.2846617807101 *
2536451   +        S_MntMeatProducts  +     0.70721686533987 * S_MntSweetProducts
2536452   +          +     1.32824513551741 * S_MntWines  +    -0.62654342755965 *
2536453   +        S_MonthsAsCustomer  +    -0.97245161056543 * S_NumCatalogPurchases
2536454   +          +    -0.41427983342148 * S_NumDealsPurchases
2536455   +          +    -0.22714305629205 * S_NumDistPurchases
2536456   +          +    -0.78763182048862 * S_NumStorePurchases
2536457   +          +    -0.26669253451501 * S_NumWebPurchases
2536458   +          +    -0.79601078616342 * S_NumWebVisitsMonth
2536459   +          +    -0.03863278696502 * S_RFMstat  +     0.95011556103056 *
2536460   +        S_RMntFrq  +     0.57184629262878 * S_Recency
2536461   +          +    -0.21560478702461 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 0.62123819069495 * S_AcceptedCmpTotal + 0.03399237520702 *
S_Age + -0.01971421795338 * S_Frq + -0.54728266919056 * S_Income + -0.4634195771237 *
S_Kidhome + -1.19055247712911 * S_Mnt + 1.4307770729159 * S_MntFishProducts +
-0.83895281276374 * S_MntFruits + -0.48578798244317 * S_MntGoldProds + -0.2846617807101 *
S_MntMeatProducts + 0.70721686533987 * S_MntSweetProducts + 1.32824513551741 * S_MntWines +
-0.62654342755965 * S_MonthsAsCustomer + -0.97245161056543 * S_NumCatalogPurchases +
-0.41427983342148 * S_NumDealsPurchases + -0.22714305629205 * S_NumDistPurchases +
-0.78763182048862 * S_NumStorePurchases + -0.26669253451501 * S_NumWebPurchases +
-0.79601078616342 * S_NumWebVisitsMonth + -0.03863278696502 * S_RFMstat + 0.95011556103056 *
S_RMntFrq + 0.57184629262878 * S_Recency + -0.21560478702461 * S_Teenhome ;
2536462   +   H1x2_5  =     1.47906557745075 * S_AcceptedCmpTotal
2536463   +          +    -0.31060566334198 * S_Age  +     0.56472424389718 * S_Frq
2536464   +          +     2.16541682726249 * S_Income  +    -0.34119803841059 *
2536465   +        S_Kidhome  +    -0.53783050542796 * S_Mnt  +     0.54954821448236 *
2536466   +        S_MntFishProducts  +    -0.48449918837838 * S_MntFruits
2536467   +          +     0.29783052620672 * S_MntGoldProds  +    -0.15068954343013 *
2536468   +        S_MntMeatProducts  +     0.12733251381761 * S_MntSweetProducts
2536469   +          +    -2.46709166794296 * S_MntWines  +     -1.2011286508879 *
2536470   +        S_MonthsAsCustomer  +    -0.88194814936932 * S_NumCatalogPurchases
2536471   +          +      0.7697882092212 * S_NumDealsPurchases
2536472   +          +     0.51864835453056 * S_NumDistPurchases
2536473   +          +    -1.18320366630444 * S_NumStorePurchases
2536474   +          +     -0.6608394639529 * S_NumWebPurchases
2536475   +          +    -0.03948137707769 * S_NumWebVisitsMonth
2536476   +          +     1.01076462488608 * S_RFMstat  +    -0.91562280329354 *
2536477   +        S_RMntFrq  +    -1.07576669501238 * S_Recency
2536478   +          +     -0.5946628412106 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 1.47906557745075 * S_AcceptedCmpTotal + -0.31060566334198 *
S_Age + 0.56472424389718 * S_Frq + 2.16541682726249 * S_Income + -0.34119803841059 * S_Kidhome
+ -0.53783050542796 * S_Mnt + 0.54954821448236 * S_MntFishProducts + -0.48449918837838 *
S_MntFruits + 0.29783052620672 * S_MntGoldProds + -0.15068954343013 * S_MntMeatProducts +
0.12733251381761 * S_MntSweetProducts + -2.46709166794296 * S_MntWines + -1.2011286508879 *
S_MonthsAsCustomer + -0.88194814936932 * S_NumCatalogPurchases + 0.7697882092212 *
S_NumDealsPurchases + 0.51864835453056 * S_NumDistPurchases + -1.18320366630444 *
S_NumStorePurchases + -0.6608394639529 * S_NumWebPurchases + -0.03948137707769 *
S_NumWebVisitsMonth + 1.01076462488608 * S_RFMstat + -0.91562280329354 * S_RMntFrq +
-1.07576669501238 * S_Recency + -0.5946628412106 * S_Teenhome ;
2536479   +   H1x2_6  =     0.42130900994246 * S_AcceptedCmpTotal
2536480   +          +     1.64256522546546 * S_Age  +    -0.31822237495441 * S_Frq
2536481   +          +     0.39698710846967 * S_Income  +    -1.30075584525681 *
2536482   +        S_Kidhome  +    -1.74733472316294 * S_Mnt  +    -1.04423575539078 *
2536483   +        S_MntFishProducts  +     0.28025913700744 * S_MntFruits
2536484   +          +     0.92062413073229 * S_MntGoldProds  +     0.38487452173084 *
2536485   +        S_MntMeatProducts  +     2.15808673418264 * S_MntSweetProducts
2536486   +          +     -0.5364274323591 * S_MntWines  +     0.64447858852609 *
2536487   +        S_MonthsAsCustomer  +     0.33683873873337 * S_NumCatalogPurchases
2536488   +          +     1.45707983202269 * S_NumDealsPurchases
2536489   +          +     0.83341887728641 * S_NumDistPurchases
2536490   +          +    -0.36664450469423 * S_NumStorePurchases
2536491   +          +     0.63911579043339 * S_NumWebPurchases
2536492   +          +     0.67144790303554 * S_NumWebVisitsMonth
2536493   +          +    -0.22124390112376 * S_RFMstat  +     1.72222071547971 *
2536494   +        S_RMntFrq  +    -0.02323382627271 * S_Recency
2536495   +          +    -0.09494567508522 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_6 = 0.42130900994246 * S_AcceptedCmpTotal + 1.64256522546546 *
S_Age + -0.31822237495441 * S_Frq + 0.39698710846967 * S_Income + -1.30075584525681 *
S_Kidhome + -1.74733472316294 * S_Mnt + -1.04423575539078 * S_MntFishProducts +
0.28025913700744 * S_MntFruits + 0.92062413073229 * S_MntGoldProds + 0.38487452173084 *
S_MntMeatProducts + 2.15808673418264 * S_MntSweetProducts + -0.5364274323591 * S_MntWines +
0.64447858852609 * S_MonthsAsCustomer + 0.33683873873337 * S_NumCatalogPurchases +
1.45707983202269 * S_NumDealsPurchases + 0.83341887728641 * S_NumDistPurchases +
-0.36664450469423 * S_NumStorePurchases + 0.63911579043339 * S_NumWebPurchases +
0.67144790303554 * S_NumWebVisitsMonth + -0.22124390112376 * S_RFMstat + 1.72222071547971 *
S_RMntFrq + -0.02323382627271 * S_Recency + -0.09494567508522 * S_Teenhome ;
2536496   +   H1x2_7  =      0.0903330772553 * S_AcceptedCmpTotal
2536497   +          +     0.13217959089196 * S_Age  +     0.93600629225871 * S_Frq
2536498   +          +     1.23765169211392 * S_Income  +     1.27732984858098 *
2536499   +        S_Kidhome  +     1.54889765360944 * S_Mnt  +     0.84618173514761 *
2536500   +        S_MntFishProducts  +    -0.32044356786958 * S_MntFruits
2536501   +          +    -0.26357995597029 * S_MntGoldProds  +     0.53649229087334 *
2536502   +        S_MntMeatProducts  +     1.46955866272889 * S_MntSweetProducts
2536503   +          +    -0.34260315437319 * S_MntWines  +    -1.70693604004836 *
2536504   +        S_MonthsAsCustomer  +     -0.4612555130737 * S_NumCatalogPurchases
2536505   +          +     0.68491896063662 * S_NumDealsPurchases
2536506   +          +      0.5386312048592 * S_NumDistPurchases
2536507   +          +     1.28108942503912 * S_NumStorePurchases
2536508   +          +    -0.88282270505969 * S_NumWebPurchases
2536509   +          +    -0.66670958211416 * S_NumWebVisitsMonth
2536510   +          +     0.94315921733739 * S_RFMstat  +     0.70533705858561 *
2536511   +        S_RMntFrq  +     0.23896687873405 * S_Recency
2536512   +          +     0.66289635918858 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_7 = 0.0903330772553 * S_AcceptedCmpTotal + 0.13217959089196 * S_Age
+ 0.93600629225871 * S_Frq + 1.23765169211392 * S_Income + 1.27732984858098 * S_Kidhome +
1.54889765360944 * S_Mnt + 0.84618173514761 * S_MntFishProducts + -0.32044356786958 *
S_MntFruits + -0.26357995597029 * S_MntGoldProds + 0.53649229087334 * S_MntMeatProducts +
1.46955866272889 * S_MntSweetProducts + -0.34260315437319 * S_MntWines + -1.70693604004836 *
S_MonthsAsCustomer + -0.4612555130737 * S_NumCatalogPurchases + 0.68491896063662 *
S_NumDealsPurchases + 0.5386312048592 * S_NumDistPurchases + 1.28108942503912 *
S_NumStorePurchases + -0.88282270505969 * S_NumWebPurchases + -0.66670958211416 *
S_NumWebVisitsMonth + 0.94315921733739 * S_RFMstat + 0.70533705858561 * S_RMntFrq +
0.23896687873405 * S_Recency + 0.66289635918858 * S_Teenhome ;
2536513   +   H1x2_1  = H1x2_1  +     0.22958861848016 * AcceptedCmp10
2536514   +          +    -1.11069938765475 * AcceptedCmp20  +     1.18563222829069 *
2536515   +        AcceptedCmp30  +    -0.97028253571173 * AcceptedCmp40
2536516   +          +     0.60850082670391 * AcceptedCmp50  +     0.31163990605418 *
2536517   +        Complain0  +     1.10957053966326 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 0.22958861848016 * AcceptedCmp10 + -1.11069938765475 *
AcceptedCmp20 + 1.18563222829069 * AcceptedCmp30 + -0.97028253571173 * AcceptedCmp40 +
0.60850082670391 * AcceptedCmp50 + 0.31163990605418 * Complain0 + 1.10957053966326 *
HigherEducationBinary0 ;
2536518   +   H1x2_2  = H1x2_2  +    -0.99409862826118 * AcceptedCmp10
2536519   +          +    -0.76360093699992 * AcceptedCmp20  +     0.82772534103696 *
2536520   +        AcceptedCmp30  +     1.74232000787449 * AcceptedCmp40
2536521   +          +    -1.37356239255127 * AcceptedCmp50  +      0.0919811154199 *
2536522   +        Complain0  +    -0.00220513515877 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -0.99409862826118 * AcceptedCmp10 + -0.76360093699992
* AcceptedCmp20 + 0.82772534103696 * AcceptedCmp30 + 1.74232000787449 * AcceptedCmp40 +
-1.37356239255127 * AcceptedCmp50 + 0.0919811154199 * Complain0 + -0.00220513515877 *
HigherEducationBinary0 ;
2536523   +   H1x2_3  = H1x2_3  +    -0.21003647134105 * AcceptedCmp10
2536524   +          +    -0.08930317176477 * AcceptedCmp20  +    -0.39109673162041 *
2536525   +        AcceptedCmp30  +     1.14094450038946 * AcceptedCmp40
2536526   +          +     1.26041997788848 * AcceptedCmp50  +    -0.10972130900569 *
2536527   +        Complain0  +    -0.99352598480407 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + -0.21003647134105 * AcceptedCmp10 + -0.08930317176477
* AcceptedCmp20 + -0.39109673162041 * AcceptedCmp30 + 1.14094450038946 * AcceptedCmp40 +
1.26041997788848 * AcceptedCmp50 + -0.10972130900569 * Complain0 + -0.99352598480407 *
HigherEducationBinary0 ;
2536528   +   H1x2_4  = H1x2_4  +     2.02630284432093 * AcceptedCmp10
2536529   +          +    -2.50721904229276 * AcceptedCmp20  +    -1.31026450397446 *
2536530   +        AcceptedCmp30  +    -0.83440880266914 * AcceptedCmp40
2536531   +          +     -0.0570899805015 * AcceptedCmp50  +    -0.55525351434733 *
2536532   +        Complain0  +     0.27306601694081 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 2.02630284432093 * AcceptedCmp10 + -2.50721904229276 *
AcceptedCmp20 + -1.31026450397446 * AcceptedCmp30 + -0.83440880266914 * AcceptedCmp40 +
-0.0570899805015 * AcceptedCmp50 + -0.55525351434733 * Complain0 + 0.27306601694081 *
HigherEducationBinary0 ;
2536533   +   H1x2_5  = H1x2_5  +    -0.18595284227194 * AcceptedCmp10
2536534   +          +    -1.55973916517392 * AcceptedCmp20  +    -3.81563768970049 *
2536535   +        AcceptedCmp30  +    -0.09331430915239 * AcceptedCmp40
2536536   +          +     0.76128118177142 * AcceptedCmp50  +    -0.17283107047755 *
2536537   +        Complain0  +    -1.01028562804392 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + -0.18595284227194 * AcceptedCmp10 + -1.55973916517392
* AcceptedCmp20 + -3.81563768970049 * AcceptedCmp30 + -0.09331430915239 * AcceptedCmp40 +
0.76128118177142 * AcceptedCmp50 + -0.17283107047755 * Complain0 + -1.01028562804392 *
HigherEducationBinary0 ;
2536538   +   H1x2_6  = H1x2_6  +    -1.21475169836565 * AcceptedCmp10
2536539   +          +     0.28748729216575 * AcceptedCmp20  +     1.15908030413172 *
2536540   +        AcceptedCmp30  +    -0.05889528676549 * AcceptedCmp40
2536541   +          +    -0.41661363625562 * AcceptedCmp50  +    -0.77939130028952 *
2536542   +        Complain0  +     2.19510865765326 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 + -1.21475169836565 * AcceptedCmp10 + 0.28748729216575 *
AcceptedCmp20 + 1.15908030413172 * AcceptedCmp30 + -0.05889528676549 * AcceptedCmp40 +
-0.41661363625562 * AcceptedCmp50 + -0.77939130028952 * Complain0 + 2.19510865765326 *
HigherEducationBinary0 ;
2536543   +   H1x2_7  = H1x2_7  +     0.87360423179644 * AcceptedCmp10
2536544   +          +    -0.47867594186426 * AcceptedCmp20  +    -0.30325818223392 *
2536545   +        AcceptedCmp30  +    -0.96085556588297 * AcceptedCmp40
2536546   +          +    -0.19693158209969 * AcceptedCmp50  +    -0.73731792634553 *
2536547   +        Complain0  +    -1.10021678806679 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_7 = H1x2_7 + 0.87360423179644 * AcceptedCmp10 + -0.47867594186426 *
AcceptedCmp20 + -0.30325818223392 * AcceptedCmp30 + -0.96085556588297 * AcceptedCmp40 +
-0.19693158209969 * AcceptedCmp50 + -0.73731792634553 * Complain0 + -1.10021678806679 *
HigherEducationBinary0 ;
2536548   +   H1x2_1  = H1x2_1  +    -1.17876013389516 * Education2n_Cycle
2536549   +          +    -0.35670434275624 * EducationBasic  +    -0.12456502068616 *
2536550   +        EducationGraduation  +     -1.0620373133508 * EducationMaster
2536551   +          +    -3.97961426831865 * Marital_StatusDivorced
2536552   +          +     0.00932639813867 * Marital_StatusMarried
2536553   +          +     1.29310186574718 * Marital_StatusSingle
2536554   +          +     1.60940802221114 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -1.17876013389516 * Education2n_Cycle +
-0.35670434275624 * EducationBasic + -0.12456502068616 * EducationGraduation +
-1.0620373133508 * EducationMaster + -3.97961426831865 * Marital_StatusDivorced +
0.00932639813867 * Marital_StatusMarried + 1.29310186574718 * Marital_StatusSingle +
1.60940802221114 * Marital_StatusTogether ;
2536555   +   H1x2_2  = H1x2_2  +     0.58497813059595 * Education2n_Cycle
2536556   +          +     0.98038586431321 * EducationBasic  +    -0.20442806724521 *
2536557   +        EducationGraduation  +     0.64973046142001 * EducationMaster
2536558   +          +    -0.30358516578188 * Marital_StatusDivorced
2536559   +          +    -0.96176709360703 * Marital_StatusMarried
2536560   +          +     1.26977690921649 * Marital_StatusSingle
2536561   +          +     -0.6681544336237 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 0.58497813059595 * Education2n_Cycle +
0.98038586431321 * EducationBasic + -0.20442806724521 * EducationGraduation + 0.64973046142001
* EducationMaster + -0.30358516578188 * Marital_StatusDivorced + -0.96176709360703 *
Marital_StatusMarried + 1.26977690921649 * Marital_StatusSingle + -0.6681544336237 *
Marital_StatusTogether ;
2536562   +   H1x2_3  = H1x2_3  +     0.42123479646947 * Education2n_Cycle
2536563   +          +     0.22705854674045 * EducationBasic  +     0.34794003687348 *
2536564   +        EducationGraduation  +     0.18356390207843 * EducationMaster
2536565   +          +     0.55272671490757 * Marital_StatusDivorced
2536566   +          +      0.1499239288334 * Marital_StatusMarried
2536567   +          +    -0.46840941760604 * Marital_StatusSingle
2536568   +          +     0.93706218273755 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 0.42123479646947 * Education2n_Cycle +
0.22705854674045 * EducationBasic + 0.34794003687348 * EducationGraduation + 0.18356390207843
* EducationMaster + 0.55272671490757 * Marital_StatusDivorced + 0.1499239288334 *
Marital_StatusMarried + -0.46840941760604 * Marital_StatusSingle + 0.93706218273755 *
Marital_StatusTogether ;
2536569   +   H1x2_4  = H1x2_4  +     0.85035585831723 * Education2n_Cycle
2536570   +          +    -0.70680576286167 * EducationBasic  +    -0.24487676912938 *
2536571   +        EducationGraduation  +    -0.33030970028481 * EducationMaster
2536572   +          +      -1.240735370138 * Marital_StatusDivorced
2536573   +          +    -1.20089294883599 * Marital_StatusMarried
2536574   +          +     0.57492674426149 * Marital_StatusSingle
2536575   +          +     1.44189292990255 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 0.85035585831723 * Education2n_Cycle +
-0.70680576286167 * EducationBasic + -0.24487676912938 * EducationGraduation +
-0.33030970028481 * EducationMaster + -1.240735370138 * Marital_StatusDivorced +
-1.20089294883599 * Marital_StatusMarried + 0.57492674426149 * Marital_StatusSingle +
1.44189292990255 * Marital_StatusTogether ;
2536576   +   H1x2_5  = H1x2_5  +    -0.62461434654579 * Education2n_Cycle
2536577   +          +    -0.34090423965869 * EducationBasic  +    -0.82493401834396 *
2536578   +        EducationGraduation  +    -1.09423426649553 * EducationMaster
2536579   +          +     1.05435442049802 * Marital_StatusDivorced
2536580   +          +      0.3571256349717 * Marital_StatusMarried
2536581   +          +    -0.44741267266578 * Marital_StatusSingle
2536582   +          +     0.02948931507994 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + -0.62461434654579 * Education2n_Cycle +
-0.34090423965869 * EducationBasic + -0.82493401834396 * EducationGraduation +
-1.09423426649553 * EducationMaster + 1.05435442049802 * Marital_StatusDivorced +
0.3571256349717 * Marital_StatusMarried + -0.44741267266578 * Marital_StatusSingle +
0.02948931507994 * Marital_StatusTogether ;
2536583   +   H1x2_6  = H1x2_6  +     0.09620501635178 * Education2n_Cycle
2536584   +          +    -0.54617424401993 * EducationBasic  +    -0.43305038404558 *
2536585   +        EducationGraduation  +     0.05453229059502 * EducationMaster
2536586   +          +     2.06026721980778 * Marital_StatusDivorced
2536587   +          +    -0.49583258645166 * Marital_StatusMarried
2536588   +          +    -1.14824900824474 * Marital_StatusSingle
2536589   +          +     0.57690093967839 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 + 0.09620501635178 * Education2n_Cycle +
-0.54617424401993 * EducationBasic + -0.43305038404558 * EducationGraduation +
0.05453229059502 * EducationMaster + 2.06026721980778 * Marital_StatusDivorced +
-0.49583258645166 * Marital_StatusMarried + -1.14824900824474 * Marital_StatusSingle +
0.57690093967839 * Marital_StatusTogether ;
2536590   +   H1x2_7  = H1x2_7  +    -0.31251046777442 * Education2n_Cycle
2536591   +          +    -1.69272922870259 * EducationBasic  +    -0.08682253496961 *
2536592   +        EducationGraduation  +     0.58241644186309 * EducationMaster
2536593   +          +     -1.1890908607447 * Marital_StatusDivorced
2536594   +          +    -0.46668809907123 * Marital_StatusMarried
2536595   +          +     1.20342564763422 * Marital_StatusSingle
2536596   +          +    -1.75740662969578 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_7 = H1x2_7 + -0.31251046777442 * Education2n_Cycle +
-1.69272922870259 * EducationBasic + -0.08682253496961 * EducationGraduation +
0.58241644186309 * EducationMaster + -1.1890908607447 * Marital_StatusDivorced +
-0.46668809907123 * Marital_StatusMarried + 1.20342564763422 * Marital_StatusSingle +
-1.75740662969578 * Marital_StatusTogether ;
2536597   +   H1x2_1  =    -0.14973719401763 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -0.14973719401763 + H1x2_1 ;
2536598   +   H1x2_2  =    -0.56259582407931 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -0.56259582407931 + H1x2_2 ;
2536599   +   H1x2_3  =     0.42132483186492 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = 0.42132483186492 + H1x2_3 ;
2536600   +   H1x2_4  =      1.1996209421335 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 1.1996209421335 + H1x2_4 ;
2536601   +   H1x2_5  =     0.95827018478011 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 0.95827018478011 + H1x2_5 ;
2536602   +   H1x2_6  =     1.88844492435344 + H1x2_6 ;
MPRINT(EM_DIAGRAM):   H1x2_6 = 1.88844492435344 + H1x2_6 ;
2536603   +   H1x2_7  =     0.77184516675485 + H1x2_7 ;
MPRINT(EM_DIAGRAM):   H1x2_7 = 0.77184516675485 + H1x2_7 ;
2536604   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
2536605   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
2536606   +   H1x2_1  = EXP(MIN(H1x2_1 , _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x2_1 = EXP(MIN(H1x2_1 , _EXP_BAR));
2536607   +   H1x2_2  = EXP(MIN(H1x2_2 , _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x2_2 = EXP(MIN(H1x2_2 , _EXP_BAR));
2536608   +   H1x2_3  = EXP(MIN(H1x2_3 , _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x2_3 = EXP(MIN(H1x2_3 , _EXP_BAR));
2536609   +   H1x2_4  = EXP(MIN(H1x2_4 , _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x2_4 = EXP(MIN(H1x2_4 , _EXP_BAR));
2536610   +   H1x2_5  = EXP(MIN(H1x2_5 , _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x2_5 = EXP(MIN(H1x2_5 , _EXP_BAR));
2536611   +   H1x2_6  = EXP(MIN(H1x2_6 , _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x2_6 = EXP(MIN(H1x2_6 , _EXP_BAR));
2536612   +   H1x2_7  = EXP(MIN(H1x2_7 , _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x2_7 = EXP(MIN(H1x2_7 , _EXP_BAR));
2536613   +END;
MPRINT(EM_DIAGRAM):   END;
2536614   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2536615   +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
2536616   +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
2536617   +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
2536618   +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
2536619   +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
2536620   +   H1x2_6  = .;
MPRINT(EM_DIAGRAM):   H1x2_6 = .;
2536621   +   H1x2_7  = .;
MPRINT(EM_DIAGRAM):   H1x2_7 = .;
2536622   +END;
MPRINT(EM_DIAGRAM):   END;
2536623   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2536624   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2536625   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2536626   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2536627   +   P_DepVar1  =     0.10431866610268 * H1x1_1  +    -0.48100701431081 * H1x1_2
2536628   +          +      1.1561061025832 * H1x1_3  +    -1.23928879501664 * H1x1_4
2536629   +          +     1.22057275321508 * H1x1_5  +     0.21972347471711 * H1x1_6
2536630   +          +    -0.98998788335495 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.10431866610268 * H1x1_1 + -0.48100701431081 * H1x1_2 +
1.1561061025832 * H1x1_3 + -1.23928879501664 * H1x1_4 + 1.22057275321508 * H1x1_5 +
0.21972347471711 * H1x1_6 + -0.98998788335495 * H1x1_7 ;
2536631   +   P_DepVar1  = P_DepVar1  + -4.9985478923183E-10 * H1x2_1
2536632   +          +   2.7724573038604E-6 * H1x2_2  +  -3.3263781208921E-6 * H1x2_3
2536633   +          +     1.90169432265E-8 * H1x2_4  +  -9.7460294571708E-9 * H1x2_5
2536634   +          +  -2.0885179583168E-6 * H1x2_6  +    3.038660449943E-8 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 + -4.9985478923183E-10 * H1x2_1 +
2.7724573038604E-6 * H1x2_2 + -3.3263781208921E-6 * H1x2_3 + 1.90169432265E-8 * H1x2_4 +
-9.7460294571708E-9 * H1x2_5 + -2.0885179583168E-6 * H1x2_6 + 3.038660449943E-8 * H1x2_7 ;
2536635   +   P_DepVar1  =    -2.34500119066237 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.34500119066237 + P_DepVar1 ;
2536636   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2536637   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2536638   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2536639   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2536640   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2536641   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2536642   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2536643   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2536644   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2536645   +END;
MPRINT(EM_DIAGRAM):   END;
2536646   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2536647   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2536648   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2536649   +END;
MPRINT(EM_DIAGRAM):   END;
2536650   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2536651   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2536652   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2536653   +END;
MPRINT(EM_DIAGRAM):   END;
2536654   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2536655   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2536656   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2536657   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2536658   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2536659   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2536660   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2536661   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2536662   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2536663   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2536664   +END;
MPRINT(EM_DIAGRAM):   END;
2536665   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2536666   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2536667   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2536668   +drop
2536669   +H1x1_1
2536670   +H1x1_2
2536671   +H1x1_3
2536672   +H1x1_4
2536673   +H1x1_5
2536674   +H1x1_6
2536675   +H1x1_7
2536676   +H1x2_1
2536677   +H1x2_2
2536678   +H1x2_3
2536679   +H1x2_4
2536680   +H1x2_5
2536681   +H1x2_6
2536682   +H1x2_7
2536683   +;
MPRINT(EM_DIAGRAM):   drop H1x1_1 H1x1_2 H1x1_3 H1x1_4 H1x1_5 H1x1_6 H1x1_7 H1x2_1 H1x2_2
H1x2_3 H1x2_4 H1x2_5 H1x2_6 H1x2_7 ;
2536684   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
2536685   +* Renaming variables for AutoNeural12;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural12;
2536686   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2536687   +* Renaming Posterior variables for AutoNeural12;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural12;
2536688   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2536689   +drop AutoNeural12_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural12_P_DepVar1;
2536690   +AutoNeural12_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural12_P_DepVar1 = P_DepVar1;
2536691   +drop AutoNeural12_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural12_P_DepVar0;
2536692   +AutoNeural12_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural12_P_DepVar0 = P_DepVar0;
2536693   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2536694   +* Renaming _WARN_ variable for AutoNeural12;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural12;
2536695   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2536696   +length AutoNeural12_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural12_WARN_ $4;
2536697   +drop AutoNeural12_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural12_WARN_;
2536698   +AutoNeural12_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural12_WARN_ = _WARN_;
2536699   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2536700   +* Ensmbl36: Average Posteriors of 7 models;
MPRINT(EM_DIAGRAM):   * Ensmbl36: Average Posteriors of 7 models;
2536701   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2536702   +P_DepVar1 = (
2536703   +AutoNeural6_P_DepVar1 +
2536704   +AutoNeural7_P_DepVar1 +
2536705   +AutoNeural8_P_DepVar1 +
2536706   +AutoNeural10_P_DepVar1 +
2536707   +AutoNeural9_P_DepVar1 +
2536708   +AutoNeural11_P_DepVar1 +
2536709   +AutoNeural12_P_DepVar1
2536710   +)/7;
MPRINT(EM_DIAGRAM):   P_DepVar1 = ( AutoNeural6_P_DepVar1 + AutoNeural7_P_DepVar1 +
AutoNeural8_P_DepVar1 + AutoNeural10_P_DepVar1 + AutoNeural9_P_DepVar1 +
AutoNeural11_P_DepVar1 + AutoNeural12_P_DepVar1 )/7;
2536711   +P_DepVar0 = (
2536712   +AutoNeural6_P_DepVar0 +
2536713   +AutoNeural7_P_DepVar0 +
2536714   +AutoNeural8_P_DepVar0 +
2536715   +AutoNeural10_P_DepVar0 +
2536716   +AutoNeural9_P_DepVar0 +
2536717   +AutoNeural11_P_DepVar0 +
2536718   +AutoNeural12_P_DepVar0
2536719   +)/7;
MPRINT(EM_DIAGRAM):   P_DepVar0 = ( AutoNeural6_P_DepVar0 + AutoNeural7_P_DepVar0 +
AutoNeural8_P_DepVar0 + AutoNeural10_P_DepVar0 + AutoNeural9_P_DepVar0 +
AutoNeural11_P_DepVar0 + AutoNeural12_P_DepVar0 )/7;
2536720   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2536721   +* Ensmbl36: Computing Classification Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl36: Computing Classification Vars;
2536722   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2536723   +length I_DepVar $32;
MPRINT(EM_DIAGRAM):   length I_DepVar $32;
2536724   +label I_DepVar = 'Into: DepVar';
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar';
2536725   +length _format $200;
MPRINT(EM_DIAGRAM):   length _format $200;
2536726   +drop _format;
MPRINT(EM_DIAGRAM):   drop _format;
2536727   +_format= ' ';
MPRINT(EM_DIAGRAM):   _format= ' ';
2536728   +_p_= 0;
MPRINT(EM_DIAGRAM):   _p_= 0;
2536729   +drop _p_;
MPRINT(EM_DIAGRAM):   drop _p_;
2536730   +if P_DepVar1 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar1 > _p_ then do;
2536731   +_p_= P_DepVar1;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar1;
2536732   +_format= '1';
MPRINT(EM_DIAGRAM):   _format= '1';
2536733   +end;
MPRINT(EM_DIAGRAM):   end;
2536734   +if P_DepVar0 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar0 > _p_ then do;
2536735   +_p_= P_DepVar0;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar0;
2536736   +_format= '0';
MPRINT(EM_DIAGRAM):   _format= '0';
2536737   +end;
MPRINT(EM_DIAGRAM):   end;
2536738   +%DMNORMCP(_format,I_DepVar);
MPRINT(DMNORMCP):   I_DepVar=dmnorm(_format,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2536739   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2536740   +* Ensmbl36: Producing Unformatted variable;
MPRINT(EM_DIAGRAM):   * Ensmbl36: Producing Unformatted variable;
2536741   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2536742   +label U_DepVar = "Unnormalized Into: DepVar";
MPRINT(EM_DIAGRAM):   label U_DepVar = "Unnormalized Into: DepVar";
2536743   +if I_DepVar = '1' then U_DepVar = 1;
MPRINT(EM_DIAGRAM):   if I_DepVar = '1' then U_DepVar = 1;
2536744   +else
2536745   +if I_DepVar = '0' then U_DepVar = 0;
MPRINT(EM_DIAGRAM):   else if I_DepVar = '0' then U_DepVar = 0;
2536746   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2536747   +* Ensmbl36: Computing _WARN_ Variable;
MPRINT(EM_DIAGRAM):   * Ensmbl36: Computing _WARN_ Variable;
2536748   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2536749   +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
2536750   +label _WARN_ = 'Warnings';
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings';
2536751   +_WARN_ = '';
MPRINT(EM_DIAGRAM):   _WARN_ = '';
2536752   +if index(AUTONEURAL6_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
2536752  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL6_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
2536753   +if index(AUTONEURAL6_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
2536753  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL6_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
2536754   +if index(AUTONEURAL6_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
2536754  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL6_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
2536755   +if index(AUTONEURAL6_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
2536755  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL6_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
2536756   +if index(AUTONEURAL7_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
2536756  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL7_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
2536757   +if index(AUTONEURAL7_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
2536757  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL7_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
2536758   +if index(AUTONEURAL7_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
2536758  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL7_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
2536759   +if index(AUTONEURAL7_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
2536759  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL7_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
2536760   +if index(AUTONEURAL8_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
2536760  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL8_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
2536761   +if index(AUTONEURAL8_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
2536761  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL8_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
2536762   +if index(AUTONEURAL8_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
2536762  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL8_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
2536763   +if index(AUTONEURAL8_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
2536763  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL8_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
2536764   +if index(AUTONEURAL10_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
2536764  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL10_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
2536765   +if index(AUTONEURAL10_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
2536765  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL10_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
2536766   +if index(AUTONEURAL10_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
2536766  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL10_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
2536767   +if index(AUTONEURAL10_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
2536767  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL10_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
2536768   +if index(AUTONEURAL9_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
2536768  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL9_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
2536769   +if index(AUTONEURAL9_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
2536769  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL9_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
2536770   +if index(AUTONEURAL9_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
2536770  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL9_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
2536771   +if index(AUTONEURAL9_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
2536771  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL9_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
2536772   +if index(AUTONEURAL11_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
2536772  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL11_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
2536773   +if index(AUTONEURAL11_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
2536773  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL11_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
2536774   +if index(AUTONEURAL11_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
2536774  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL11_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
2536775   +if index(AUTONEURAL11_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
2536775  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL11_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
2536776   +if index(AUTONEURAL12_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
2536776  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL12_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
2536777   +if index(AUTONEURAL12_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
2536777  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL12_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
2536778   +if index(AUTONEURAL12_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
2536778  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL12_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
2536779   +if index(AUTONEURAL12_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
2536779  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL12_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2536780    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.20 seconds
      cpu time            0.20 seconds
 
 
2536781    options validvarname=V7;
MPRINT(EM_DIAGRAM):   options validvarname=V7;
MPRINT(EM_DIAGRAM):   quit;
2536782    quit;
2536783    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2536784    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2536785    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2536786    retain ID 2 Node "Ensmbl36";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Ensmbl36";
2536787    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2536788    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8937 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 8937 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2536789    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2536790    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2536791    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8937 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 8937 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
2536792    proc sort data=EMWS8.AutoNeural6_CMeta_TRAIN out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural6_CMeta_TRAIN out=_temp2(keep=NAME
CREATOR);
2536793    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2536794    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set EMWS8.AUTONEURAL6_CMETA_TRAIN.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2536795    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2536796    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2536797    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2536798    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2536799    proc contents data=EMWS8.Ensmbl36_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Ensmbl36_train out=_meta(keep=NAME) noprint;
2536800    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
 
 
2536801    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2536802    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2536803    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2536804    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2536805    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2536806    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2536807    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: There were 44 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 53 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2536808    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2536809    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2536809  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 3735 rows and 5 columns.
 
2536810    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2536811    proc append base=EMWS8.Score_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Score_FCMP data=_tempx;
2536812    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.SCORE_FCMP.
NOTE: There were 3735 observations read from the data set WORK._TEMPX.
NOTE: 3735 observations added.
NOTE: The data set EMWS8.SCORE_FCMP has 3739 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2536813    filename _pref
2536813  ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural6\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural6\EMPUBLISHSCORE.sas";
2536814    options validvarname=ANY;
MPRINT(EM_DIAGRAM):   options validvarname=ANY;
2536815    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2536816    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural6\EMPUBLISHSCORE.sas.
2536817   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2536818   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2536819   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2536820   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2536821   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2536822   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2536823   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2536824   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2536825   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2536826   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2536827   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2536828   +LENGTH _WARN_ $4
2536829   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
2536830   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2536831   +
2536832   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
2536833   +
2536834   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
2536835   +
2536836   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2536837   +
2536838   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2536839   +
2536840   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2536841   +
2536842   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2536843   +
2536844   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2536845   +
2536846   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2536847   +
2536848   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2536849   +
2536850   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2536851   +
2536852   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2536853   +
2536854   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
2536855   +
2536856   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2536857   +
2536858   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2536859   +
2536860   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
2536861   +
2536862   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2536863   +
2536864   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2536865   +
2536866   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2536867   +
2536868   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2536869   +
2536870   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
2536871   +
2536872   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2536873   +
2536874   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2536875   +
2536876   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2536877   +
2536878   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2536879   +
2536880   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2536881   +
2536882   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2536883   +
2536884   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2536885   +
2536886   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2536887   +
2536888   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
2536889   +
2536890   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2536891   +
2536892   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2536893   +
2536894   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2536895   +
2536896   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2536897   +
2536898   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2536899   +
2536900   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2536901   +
2536902   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2536903   +
2536904   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2536905   +
2536906   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
2536907   +
2536908   +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
2536909   +
2536910   +      label H1x3_1 = 'Hidden: H1x3_=1' ;
MPRINT(EM_DIAGRAM):   label H1x3_1 = 'Hidden: H1x3_=1' ;
2536911   +
2536912   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2536913   +
2536914   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2536915   +
2536916   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2536917   +
2536918   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2536919   +
2536920   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2536921   +
2536922   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2536923   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2536924   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2536925   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2536926   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2536927   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2536928   +end;
MPRINT(EM_DIAGRAM):   end;
2536929   +else do;
MPRINT(EM_DIAGRAM):   else do;
2536930   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2536931   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2536932   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2536933   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2536934   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2536935   +   end;
MPRINT(EM_DIAGRAM):   end;
2536936   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2536937   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2536938   +   end;
MPRINT(EM_DIAGRAM):   end;
2536939   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2536940   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2536941   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2536942   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2536943   +   end;
MPRINT(EM_DIAGRAM):   end;
2536944   +end;
MPRINT(EM_DIAGRAM):   end;
2536945   +
2536946   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2536947   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2536948   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2536949   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2536950   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2536951   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2536952   +end;
MPRINT(EM_DIAGRAM):   end;
2536953   +else do;
MPRINT(EM_DIAGRAM):   else do;
2536954   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2536955   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2536956   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2536957   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2536958   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2536959   +   end;
MPRINT(EM_DIAGRAM):   end;
2536960   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2536961   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2536962   +   end;
MPRINT(EM_DIAGRAM):   end;
2536963   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2536964   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2536965   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2536966   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2536967   +   end;
MPRINT(EM_DIAGRAM):   end;
2536968   +end;
MPRINT(EM_DIAGRAM):   end;
2536969   +
2536970   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2536971   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2536972   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2536973   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2536974   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2536975   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2536976   +end;
MPRINT(EM_DIAGRAM):   end;
2536977   +else do;
MPRINT(EM_DIAGRAM):   else do;
2536978   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2536979   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2536980   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2536981   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2536982   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2536983   +   end;
MPRINT(EM_DIAGRAM):   end;
2536984   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2536985   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2536986   +   end;
MPRINT(EM_DIAGRAM):   end;
2536987   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2536988   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2536989   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2536990   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2536991   +   end;
MPRINT(EM_DIAGRAM):   end;
2536992   +end;
MPRINT(EM_DIAGRAM):   end;
2536993   +
2536994   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2536995   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2536996   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2536997   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2536998   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2536999   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2537000   +end;
MPRINT(EM_DIAGRAM):   end;
2537001   +else do;
MPRINT(EM_DIAGRAM):   else do;
2537002   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2537003   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2537004   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2537005   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2537006   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2537007   +   end;
MPRINT(EM_DIAGRAM):   end;
2537008   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2537009   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2537010   +   end;
MPRINT(EM_DIAGRAM):   end;
2537011   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2537012   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2537013   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2537014   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2537015   +   end;
MPRINT(EM_DIAGRAM):   end;
2537016   +end;
MPRINT(EM_DIAGRAM):   end;
2537017   +
2537018   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2537019   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2537020   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2537021   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2537022   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2537023   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2537024   +end;
MPRINT(EM_DIAGRAM):   end;
2537025   +else do;
MPRINT(EM_DIAGRAM):   else do;
2537026   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2537027   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2537028   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2537029   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2537030   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2537031   +   end;
MPRINT(EM_DIAGRAM):   end;
2537032   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2537033   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2537034   +   end;
MPRINT(EM_DIAGRAM):   end;
2537035   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2537036   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2537037   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2537038   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2537039   +   end;
MPRINT(EM_DIAGRAM):   end;
2537040   +end;
MPRINT(EM_DIAGRAM):   end;
2537041   +
2537042   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2537043   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2537044   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2537045   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2537046   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2537047   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2537048   +end;
MPRINT(EM_DIAGRAM):   end;
2537049   +else do;
MPRINT(EM_DIAGRAM):   else do;
2537050   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2537051   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2537052   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2537053   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2537054   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2537055   +   end;
MPRINT(EM_DIAGRAM):   end;
2537056   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2537057   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2537058   +   end;
MPRINT(EM_DIAGRAM):   end;
2537059   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2537060   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2537061   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2537062   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2537063   +   end;
MPRINT(EM_DIAGRAM):   end;
2537064   +end;
MPRINT(EM_DIAGRAM):   end;
2537065   +
2537066   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
2537067   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
2537068   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
2537069   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2537070   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2537071   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2537072   +end;
MPRINT(EM_DIAGRAM):   end;
2537073   +else do;
MPRINT(EM_DIAGRAM):   else do;
2537074   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2537075   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
2537076   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2537077   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
2537078   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
2537079   +   end;
MPRINT(EM_DIAGRAM):   end;
2537080   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
2537081   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
2537082   +   end;
MPRINT(EM_DIAGRAM):   end;
2537083   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2537084   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2537085   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2537086   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2537087   +   end;
MPRINT(EM_DIAGRAM):   end;
2537088   +end;
MPRINT(EM_DIAGRAM):   end;
2537089   +
2537090   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2537091   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
2537092   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2537093   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2537094   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2537095   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2537096   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2537097   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2537098   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2537099   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2537100   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2537101   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2537102   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2537103   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2537104   +end;
MPRINT(EM_DIAGRAM):   end;
2537105   +else do;
MPRINT(EM_DIAGRAM):   else do;
2537106   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2537107   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2537108   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2537109   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2537110   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2537111   +   end;
MPRINT(EM_DIAGRAM):   end;
2537112   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2537113   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2537114   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2537115   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2537116   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2537117   +   end;
MPRINT(EM_DIAGRAM):   end;
2537118   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2537119   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2537120   +   end;
MPRINT(EM_DIAGRAM):   end;
2537121   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2537122   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2537123   +   end;
MPRINT(EM_DIAGRAM):   end;
2537124   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2537125   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2537126   +   end;
MPRINT(EM_DIAGRAM):   end;
2537127   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2537128   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2537129   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2537130   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2537131   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2537132   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2537133   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2537134   +   end;
MPRINT(EM_DIAGRAM):   end;
2537135   +end;
MPRINT(EM_DIAGRAM):   end;
2537136   +
2537137   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2537138   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2537139   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
2537140   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2537141   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2537142   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2537143   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2537144   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2537145   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2537146   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2537147   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2537148   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2537149   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2537150   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2537151   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2537152   +end;
MPRINT(EM_DIAGRAM):   end;
2537153   +else do;
MPRINT(EM_DIAGRAM):   else do;
2537154   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2537155   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2537156   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2537157   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2537158   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2537159   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2537160   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2537161   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2537162   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2537163   +         end;
MPRINT(EM_DIAGRAM):   end;
2537164   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2537165   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2537166   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2537167   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2537168   +            end;
MPRINT(EM_DIAGRAM):   end;
2537169   +         end;
MPRINT(EM_DIAGRAM):   end;
2537170   +      end;
MPRINT(EM_DIAGRAM):   end;
2537171   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2537172   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2537173   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2537174   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2537175   +         end;
MPRINT(EM_DIAGRAM):   end;
2537176   +      end;
MPRINT(EM_DIAGRAM):   end;
2537177   +   end;
MPRINT(EM_DIAGRAM):   end;
2537178   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2537179   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2537180   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2537181   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2537182   +      end;
MPRINT(EM_DIAGRAM):   end;
2537183   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2537184   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2537185   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2537186   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2537187   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2537188   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2537189   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2537190   +         end;
MPRINT(EM_DIAGRAM):   end;
2537191   +      end;
MPRINT(EM_DIAGRAM):   end;
2537192   +   end;
MPRINT(EM_DIAGRAM):   end;
2537193   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2537194   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2537195   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2537196   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2537197   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2537198   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2537199   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2537200   +   end;
MPRINT(EM_DIAGRAM):   end;
2537201   +end;
MPRINT(EM_DIAGRAM):   end;
2537202   +
2537203   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2537204   +*** Checking missing input Interval
2537205   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2537206   +
2537207   +IF NMISS(
2537208   +   AcceptedCmpTotal ,
2537209   +   Age ,
2537210   +   Frq ,
2537211   +   Income ,
2537212   +   Kidhome ,
2537213   +   Mnt ,
2537214   +   MntFishProducts ,
2537215   +   MntFruits ,
2537216   +   MntGoldProds ,
2537217   +   MntMeatProducts ,
2537218   +   MntSweetProducts ,
2537219   +   MntWines ,
2537220   +   MonthsAsCustomer ,
2537221   +   NumCatalogPurchases ,
2537222   +   NumDealsPurchases ,
2537223   +   NumDistPurchases ,
2537224   +   NumStorePurchases ,
2537225   +   NumWebPurchases ,
2537226   +   NumWebVisitsMonth ,
2537227   +   RFMstat ,
2537228   +   RMntFrq ,
2537229   +   Recency ,
2537230   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
2537231   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2537232   +
2537233   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2537234   +END;
MPRINT(EM_DIAGRAM):   END;
2537235   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2537236   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
2537237   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2537238   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2537239   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2537240   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
2537241   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2537242   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2537243   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2537244   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2537245   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2537246   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2537247   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2537248   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2537249   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2537250   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2537251   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2537252   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
2537253   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2537254   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2537255   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2537256   +   S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2537257   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 *
MonthsAsCustomer ;
2537258   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2537259   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
2537260   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2537261   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2537262   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2537263   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
2537264   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2537265   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
2537266   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2537267   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
2537268   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2537269   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2537270   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2537271   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2537272   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2537273   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2537274   +END;
MPRINT(EM_DIAGRAM):   END;
2537275   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2537276   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2537277   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2537278   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
2537279   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
2537280   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2537281   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
2537282   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2537283   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2537284   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2537285   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2537286   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2537287   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2537288   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2537289   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2537290   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2537291   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2537292   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2537293   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2537294   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2537295   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2537296   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2537297   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
2537298   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2537299   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2537300   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
2537301   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2537302   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2537303   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2537304   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2537305   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2537306   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
2537307   +   ELSE S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2537308   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 *
MonthsAsCustomer ;
2537309   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2537310   +   ELSE S_NumCatalogPurchases
2537311   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2537312   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
2537313   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2537314   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2537315   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2537316   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
2537317   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2537318   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
2537319   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2537320   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2537321   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
2537322   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2537323   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2537324   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
2537325   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2537326   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2537327   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2537328   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2537329   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2537330   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
2537331   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2537332   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2537333   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2537334   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2537335   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2537336   +END;
MPRINT(EM_DIAGRAM):   END;
2537337   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2537338   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
2537339   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2537340   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2537341   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
2537342   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2537343   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2537344   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
2537345   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2537346   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2537347   +   H1x1_1  =    -0.00800383076247 * S_AcceptedCmpTotal
2537348   +          +     0.02761302021586 * S_Age  +     0.10595191274027 * S_Frq
2537349   +          +    -0.15720275096991 * S_Income  +     0.14522420813528 *
2537350   +        S_Kidhome  +    -0.14485367197729 * S_Mnt  +     0.10029542464177 *
2537351   +        S_MntFishProducts  +      0.0126489883955 * S_MntFruits
2537352   +          +    -0.01721251339827 * S_MntGoldProds  +    -0.69008250574088 *
2537353   +        S_MntMeatProducts  +     0.01018204164797 * S_MntSweetProducts
2537354   +          +     0.22039448854688 * S_MntWines  +     0.01531819489128 *
2537355   +        S_MonthsAsCustomer  +    -0.23161250514854 * S_NumCatalogPurchases
2537356   +          +    -0.20127545393212 * S_NumDealsPurchases
2537357   +          +     0.04506333103933 * S_NumDistPurchases
2537358   +          +     0.35249458492371 * S_NumStorePurchases
2537359   +          +     0.25004284340707 * S_NumWebPurchases
2537360   +          +    -0.53727251220752 * S_NumWebVisitsMonth
2537361   +          +    -0.05439428653958 * S_RFMstat  +     0.36751560031492 *
2537362   +        S_RMntFrq  +      0.5373510847225 * S_Recency
2537363   +          +     0.08757258535387 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.00800383076247 * S_AcceptedCmpTotal + 0.02761302021586 *
S_Age + 0.10595191274027 * S_Frq + -0.15720275096991 * S_Income + 0.14522420813528 * S_Kidhome
+ -0.14485367197729 * S_Mnt + 0.10029542464177 * S_MntFishProducts + 0.0126489883955 *
S_MntFruits + -0.01721251339827 * S_MntGoldProds + -0.69008250574088 * S_MntMeatProducts +
0.01018204164797 * S_MntSweetProducts + 0.22039448854688 * S_MntWines + 0.01531819489128 *
S_MonthsAsCustomer + -0.23161250514854 * S_NumCatalogPurchases + -0.20127545393212 *
S_NumDealsPurchases + 0.04506333103933 * S_NumDistPurchases + 0.35249458492371 *
S_NumStorePurchases + 0.25004284340707 * S_NumWebPurchases + -0.53727251220752 *
S_NumWebVisitsMonth + -0.05439428653958 * S_RFMstat + 0.36751560031492 * S_RMntFrq +
0.5373510847225 * S_Recency + 0.08757258535387 * S_Teenhome ;
2537364   +   H1x1_1  = H1x1_1  +     0.21204360154837 * AcceptedCmp10
2537365   +          +     0.20766091429217 * AcceptedCmp20  +     0.20201307074488 *
2537366   +        AcceptedCmp30  +     0.26898383850722 * AcceptedCmp40
2537367   +          +     0.55154220854739 * AcceptedCmp50  +     0.13147328871299 *
2537368   +        Complain0  +    -0.02797177954188 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.21204360154837 * AcceptedCmp10 + 0.20766091429217 *
AcceptedCmp20 + 0.20201307074488 * AcceptedCmp30 + 0.26898383850722 * AcceptedCmp40 +
0.55154220854739 * AcceptedCmp50 + 0.13147328871299 * Complain0 + -0.02797177954188 *
HigherEducationBinary0 ;
2537369   +   H1x1_1  = H1x1_1  +    -0.00959805163736 * Education2n_Cycle
2537370   +          +     0.37192717803938 * EducationBasic  +    -0.10342362068485 *
2537371   +        EducationGraduation  +    -0.13377682721092 * EducationMaster
2537372   +          +    -0.19452359839974 * Marital_StatusDivorced
2537373   +          +     0.32327870805716 * Marital_StatusMarried
2537374   +          +    -0.20770545592268 * Marital_StatusSingle
2537375   +          +     0.35618773017298 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.00959805163736 * Education2n_Cycle +
0.37192717803938 * EducationBasic + -0.10342362068485 * EducationGraduation +
-0.13377682721092 * EducationMaster + -0.19452359839974 * Marital_StatusDivorced +
0.32327870805716 * Marital_StatusMarried + -0.20770545592268 * Marital_StatusSingle +
0.35618773017298 * Marital_StatusTogether ;
2537376   +   H1x1_1  =     0.87012150629431 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.87012150629431 + H1x1_1 ;
2537377   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
2537378   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
2537379   +   H1x1_1  = EXP(MIN(-0.5 * H1x1_1 **2, _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(MIN(-0.5 * H1x1_1 **2, _EXP_BAR));
2537380   +END;
MPRINT(EM_DIAGRAM):   END;
2537381   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2537382   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
2537383   +END;
MPRINT(EM_DIAGRAM):   END;
2537384   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2537385   +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
2537386   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2537387   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2537388   +   H1x2_1  =     0.92357456692651 * S_AcceptedCmpTotal
2537389   +          +    -0.00516549264504 * S_Age  +    -1.03043789382359 * S_Frq
2537390   +          +     0.78555631441048 * S_Income  +    -1.36329797235747 *
2537391   +        S_Kidhome  +    -0.77229288487872 * S_Mnt  +     1.27281095482218 *
The SAS System
 
2537392   +        S_MntFishProducts  +     0.04568599055132 * S_MntFruits
2537393   +          +    -0.13434867195633 * S_MntGoldProds  +    -1.95682488683295 *
2537394   +        S_MntMeatProducts  +     -0.0253141337078 * S_MntSweetProducts
2537395   +          +     0.67857436596482 * S_MntWines  +    -0.07247572940845 *
2537396   +        S_MonthsAsCustomer  +    -1.02814758425435 * S_NumCatalogPurchases
2537397   +          +    -0.02120959778153 * S_NumDealsPurchases
2537398   +          +     1.49013956394863 * S_NumDistPurchases
2537399   +          +    -0.96806240220463 * S_NumStorePurchases
2537400   +          +    -1.68330472453558 * S_NumWebPurchases
2537401   +          +     3.42976128164256 * S_NumWebVisitsMonth
2537402   +          +    -0.38912520446503 * S_RFMstat  +    -2.57487899031042 *
2537403   +        S_RMntFrq  +    -3.14923215912621 * S_Recency
2537404   +          +    -0.67635091810974 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.92357456692651 * S_AcceptedCmpTotal + -0.00516549264504 *
S_Age + -1.03043789382359 * S_Frq + 0.78555631441048 * S_Income + -1.36329797235747 *
S_Kidhome + -0.77229288487872 * S_Mnt + 1.27281095482218 * S_MntFishProducts +
0.04568599055132 * S_MntFruits + -0.13434867195633 * S_MntGoldProds + -1.95682488683295 *
S_MntMeatProducts + -0.0253141337078 * S_MntSweetProducts + 0.67857436596482 * S_MntWines +
-0.07247572940845 * S_MonthsAsCustomer + -1.02814758425435 * S_NumCatalogPurchases +
-0.02120959778153 * S_NumDealsPurchases + 1.49013956394863 * S_NumDistPurchases +
-0.96806240220463 * S_NumStorePurchases + -1.68330472453558 * S_NumWebPurchases +
3.42976128164256 * S_NumWebVisitsMonth + -0.38912520446503 * S_RFMstat + -2.57487899031042 *
S_RMntFrq + -3.14923215912621 * S_Recency + -0.67635091810974 * S_Teenhome ;
2537405   +   H1x2_1  = H1x2_1  +    -0.18835638765595 * AcceptedCmp10
2537406   +          +     1.28752081945681 * AcceptedCmp20  +     -0.5515893923669 *
2537407   +        AcceptedCmp30  +    -0.82440763600043 * AcceptedCmp40
2537408   +          +     1.94503109075872 * AcceptedCmp50  +    -0.75977722298402 *
2537409   +        Complain0  +    -1.11349075129464 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.18835638765595 * AcceptedCmp10 + 1.28752081945681 *
AcceptedCmp20 + -0.5515893923669 * AcceptedCmp30 + -0.82440763600043 * AcceptedCmp40 +
1.94503109075872 * AcceptedCmp50 + -0.75977722298402 * Complain0 + -1.11349075129464 *
HigherEducationBinary0 ;
2537410   +   H1x2_1  = H1x2_1  +     1.79843117215153 * Education2n_Cycle
2537411   +          +    -1.50428649925314 * EducationBasic  +    -0.32238897768725 *
2537412   +        EducationGraduation  +    -0.16909007224958 * EducationMaster
2537413   +          +      1.9815992681602 * Marital_StatusDivorced
2537414   +          +    -3.07893181570848 * Marital_StatusMarried
2537415   +          +     1.72965298244219 * Marital_StatusSingle
2537416   +          +    -3.17208781997524 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 1.79843117215153 * Education2n_Cycle +
-1.50428649925314 * EducationBasic + -0.32238897768725 * EducationGraduation +
-0.16909007224958 * EducationMaster + 1.9815992681602 * Marital_StatusDivorced +
-3.07893181570848 * Marital_StatusMarried + 1.72965298244219 * Marital_StatusSingle +
-3.17208781997524 * Marital_StatusTogether ;
2537417   +   H1x2_1  =     0.54729406730223 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.54729406730223 + H1x2_1 ;
2537418   +   _EPS = SQRT(CONSTANT('MACEPS')) ;
MPRINT(EM_DIAGRAM):   _EPS = SQRT(CONSTANT('MACEPS')) ;
2537419   +   _REC_EPS = 1/_EPS ;
MPRINT(EM_DIAGRAM):   _REC_EPS = 1/_EPS ;
2537420   +   DROP _REC_EPS _EPS ;
MPRINT(EM_DIAGRAM):   DROP _REC_EPS _EPS ;
2537421   +   IF H1x2_1  < _REC_EPS AND H1x2_1  > - _REC_EPS THEN
2537422   +   H1x2_1  = H1x2_1  * H1x2_1 ;
MPRINT(EM_DIAGRAM):   IF H1x2_1 < _REC_EPS AND H1x2_1 > - _REC_EPS THEN H1x2_1 = H1x2_1 *
H1x2_1 ;
2537423   +   ELSE H1x2_1  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x2_1 = _REC_EPS ;
2537424   +END;
MPRINT(EM_DIAGRAM):   END;
2537425   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2537426   +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
2537427   +END;
MPRINT(EM_DIAGRAM):   END;
2537428   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2537429   +*** Writing the Node H1x3_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x3_ ;
2537430   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2537431   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2537432   +   H1x3_1  =     0.90092602642364 * S_AcceptedCmpTotal
2537433   +          +    -0.16291307307626 * S_Age  +    -0.40132431666712 * S_Frq
2537434   +          +    -0.77251140598484 * S_Income  +     0.02215214313934 *
2537435   +        S_Kidhome  +     0.13123074182657 * S_Mnt  +    -0.43664076061176 *
2537436   +        S_MntFishProducts  +    -1.64192761266072 * S_MntFruits
2537437   +          +    -1.54189230184745 * S_MntGoldProds  +     -0.4138869968665 *
2537438   +        S_MntMeatProducts  +      0.5773885392047 * S_MntSweetProducts
2537439   +          +     1.45077769194851 * S_MntWines  +      0.5855746168529 *
2537440   +        S_MonthsAsCustomer  +     0.10198319985004 * S_NumCatalogPurchases
2537441   +          +     -0.5334151509863 * S_NumDealsPurchases
2537442   +          +     0.40600458912114 * S_NumDistPurchases
2537443   +          +    -0.30674653528261 * S_NumStorePurchases
2537444   +          +     0.10785037433743 * S_NumWebPurchases
2537445   +          +     0.99701680073452 * S_NumWebVisitsMonth
2537446   +          +    -0.25371895811899 * S_RFMstat  +     2.19406614746442 *
2537447   +        S_RMntFrq  +      1.0786726340694 * S_Recency
2537448   +          +     0.64406049150007 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 0.90092602642364 * S_AcceptedCmpTotal + -0.16291307307626 *
S_Age + -0.40132431666712 * S_Frq + -0.77251140598484 * S_Income + 0.02215214313934 *
S_Kidhome + 0.13123074182657 * S_Mnt + -0.43664076061176 * S_MntFishProducts +
-1.64192761266072 * S_MntFruits + -1.54189230184745 * S_MntGoldProds + -0.4138869968665 *
S_MntMeatProducts + 0.5773885392047 * S_MntSweetProducts + 1.45077769194851 * S_MntWines +
0.5855746168529 * S_MonthsAsCustomer + 0.10198319985004 * S_NumCatalogPurchases +
-0.5334151509863 * S_NumDealsPurchases + 0.40600458912114 * S_NumDistPurchases +
-0.30674653528261 * S_NumStorePurchases + 0.10785037433743 * S_NumWebPurchases +
0.99701680073452 * S_NumWebVisitsMonth + -0.25371895811899 * S_RFMstat + 2.19406614746442 *
S_RMntFrq + 1.0786726340694 * S_Recency + 0.64406049150007 * S_Teenhome ;
2537449   +   H1x3_1  = H1x3_1  +    -0.58424742605644 * AcceptedCmp10
2537450   +          +     -0.7436165858459 * AcceptedCmp20  +    -0.33959137246457 *
2537451   +        AcceptedCmp30  +     0.42726020731333 * AcceptedCmp40
2537452   +          +     2.23707409189181 * AcceptedCmp50  +     0.98135772482722 *
2537453   +        Complain0  +    -0.85818399669867 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + -0.58424742605644 * AcceptedCmp10 + -0.7436165858459 *
AcceptedCmp20 + -0.33959137246457 * AcceptedCmp30 + 0.42726020731333 * AcceptedCmp40 +
2.23707409189181 * AcceptedCmp50 + 0.98135772482722 * Complain0 + -0.85818399669867 *
HigherEducationBinary0 ;
2537454   +   H1x3_1  = H1x3_1  +    -0.89540752048995 * Education2n_Cycle
2537455   +          +     1.29513448243349 * EducationBasic  +    -1.47068621785539 *
2537456   +        EducationGraduation  +    -1.63362973413899 * EducationMaster
2537457   +          +    -0.72494401881341 * Marital_StatusDivorced
2537458   +          +    -0.82332231639631 * Marital_StatusMarried
2537459   +          +     -0.8863559011195 * Marital_StatusSingle
2537460   +          +     0.97129982315045 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + -0.89540752048995 * Education2n_Cycle +
1.29513448243349 * EducationBasic + -1.47068621785539 * EducationGraduation +
-1.63362973413899 * EducationMaster + -0.72494401881341 * Marital_StatusDivorced +
-0.82332231639631 * Marital_StatusMarried + -0.8863559011195 * Marital_StatusSingle +
0.97129982315045 * Marital_StatusTogether ;
2537461   +   H1x3_1  =     0.55234573720932 + H1x3_1 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 0.55234573720932 + H1x3_1 ;
2537462   +   _EPS = SQRT(CONSTANT('MACEPS')) ;
MPRINT(EM_DIAGRAM):   _EPS = SQRT(CONSTANT('MACEPS')) ;
2537463   +   _REC_EPS = 1/_EPS ;
MPRINT(EM_DIAGRAM):   _REC_EPS = 1/_EPS ;
2537464   +   DROP _REC_EPS _EPS ;
MPRINT(EM_DIAGRAM):   DROP _REC_EPS _EPS ;
2537465   +   IF H1x3_1  < _REC_EPS AND H1x3_1  > - _REC_EPS THEN
2537466   +   H1x3_1  = H1x3_1  * H1x3_1 ;
MPRINT(EM_DIAGRAM):   IF H1x3_1 < _REC_EPS AND H1x3_1 > - _REC_EPS THEN H1x3_1 = H1x3_1 *
H1x3_1 ;
2537467   +   ELSE H1x3_1  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x3_1 = _REC_EPS ;
2537468   +END;
MPRINT(EM_DIAGRAM):   END;
2537469   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2537470   +   H1x3_1  = .;
MPRINT(EM_DIAGRAM):   H1x3_1 = .;
2537471   +END;
MPRINT(EM_DIAGRAM):   END;
2537472   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2537473   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2537474   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2537475   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2537476   +   P_DepVar1  =     35.4482526843154 * H1x1_1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 35.4482526843154 * H1x1_1 ;
2537477   +   P_DepVar1  = P_DepVar1  +    -0.08810161142704 * H1x2_1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 + -0.08810161142704 * H1x2_1 ;
2537478   +   P_DepVar1  = P_DepVar1  +     0.02248060710303 * H1x3_1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 + 0.02248060710303 * H1x3_1 ;
2537479   +   P_DepVar1  =    -6.23004657634651 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -6.23004657634651 + P_DepVar1 ;
2537480   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2537481   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2537482   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2537483   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2537484   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2537485   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2537486   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2537487   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2537488   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2537489   +END;
MPRINT(EM_DIAGRAM):   END;
2537490   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2537491   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2537492   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2537493   +END;
MPRINT(EM_DIAGRAM):   END;
2537494   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2537495   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2537496   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2537497   +END;
MPRINT(EM_DIAGRAM):   END;
2537498   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2537499   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2537500   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2537501   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2537502   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2537503   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2537504   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2537505   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2537506   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2537507   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2537508   +END;
MPRINT(EM_DIAGRAM):   END;
2537509   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2537510   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2537511   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2537512   +drop
2537513   +H1x1_1
2537514   +H1x2_1
2537515   +H1x3_1
2537516   +;
MPRINT(EM_DIAGRAM):   drop H1x1_1 H1x2_1 H1x3_1 ;
2537517   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2537518    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
2537519    options validvarname=V7;
MPRINT(EM_DIAGRAM):   options validvarname=V7;
MPRINT(EM_DIAGRAM):   quit;
2537520    quit;
2537521    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2537522    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2537523    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2537524    retain ID 3 Node "AutoNeural6";
MPRINT(EM_DIAGRAM):   retain ID 3 Node "AutoNeural6";
2537525    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2537526    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2506 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2506 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2537527    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2537528    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2537529    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2506 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2506 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2537530    proc sort data=EMWS8.Meta_CMeta_TRAIN out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Meta_CMeta_TRAIN out=_temp2(keep=NAME CREATOR);
2537531    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2537532    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 36 observations read from the data set EMWS8.META_CMETA_TRAIN.
NOTE: The data set WORK._TEMP2 has 36 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2537533    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2537534    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2537535    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2537536    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 36 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 36 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2537537    proc contents data=EMWS8.AutoNeural6_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural6_train out=_meta(keep=NAME) noprint;
2537538    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
2537539    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2537540    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2537541    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2537542    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2537543    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2537544    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2537545    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: There were 36 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 53 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2537546    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2537547    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2537547  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 1495 rows and 5 columns.
 
2537548    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2537549    proc append base=EMWS8.Score_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Score_FCMP data=_tempx;
2537550    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.SCORE_FCMP.
NOTE: There were 1495 observations read from the data set WORK._TEMPX.
NOTE: 1495 observations added.
NOTE: The data set EMWS8.SCORE_FCMP has 5234 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2537551    filename _pref
2537551  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
2537552    options validvarname=ANY;
MPRINT(EM_DIAGRAM):   options validvarname=ANY;
2537553    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2537554    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
2537555   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2537556   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
2537557   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2537558   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
2537559   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
2537560   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2537561    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2537562    options validvarname=V7;
MPRINT(EM_DIAGRAM):   options validvarname=V7;
MPRINT(EM_DIAGRAM):   quit;
2537563    quit;
2537564    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2537565    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2537566    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2537567    retain ID 6 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "Trans";
2537568    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2537569    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2537570    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2537571    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2537572    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2537573    proc sort data=EMWS8.EMCODE4_CMeta_TRAIN out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_CMeta_TRAIN out=_temp2(keep=NAME CREATOR);
2537574    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2537575    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set EMWS8.EMCODE4_CMETA_TRAIN.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2537576    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2537577    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2537578    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2537579    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2537580    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
2537581    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
2537582    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2537583    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2537584    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2537585    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2537586    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2537587    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2537588    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2537589    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2537590    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2537590  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.
 
2537591    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2537592    proc append base=EMWS8.Score_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Score_FCMP data=_tempx;
2537593    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.SCORE_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.SCORE_FCMP has 5238 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2537594    filename _pref
2537594  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
2537595    options validvarname=ANY;
MPRINT(EM_DIAGRAM):   options validvarname=ANY;
2537596    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2537597    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
2537598   +
2537599   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
2537600   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
2537600  !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
2537601   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
2537602   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
2537603   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
2537604   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
2537605   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2537606    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2537607    options validvarname=V7;
MPRINT(EM_DIAGRAM):   options validvarname=V7;
MPRINT(EM_DIAGRAM):   quit;
2537608    quit;
2537609    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2537610    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2537611    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2537612    retain ID 7 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "EMCODE4";
2537613    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2537614    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2537615    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2537616    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2537617    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2537618    proc sort data=EMWS8.Filter_CMeta_TRAIN out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_CMeta_TRAIN out=_temp2(keep=NAME CREATOR);
2537619    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2537620    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set EMWS8.FILTER_CMETA_TRAIN.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2537621    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2537622    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2537623    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2537624    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2537625    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
2537626    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2537627    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2537628    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2537629    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2537630    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2537631    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2537632    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2537633    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2537634    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2537635    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2537635  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.
 
2537636    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2537637    proc append base=EMWS8.Score_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Score_FCMP data=_tempx;
2537638    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.SCORE_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.SCORE_FCMP has 5277 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2537639    filename _pref
2537639  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
2537640    options validvarname=ANY;
MPRINT(EM_DIAGRAM):   options validvarname=ANY;
2537641    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2537642    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
2537643   +
2537644   +
2537645   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
2537646   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
2537647   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
2537648   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
2537649   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
2537650   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2537651   +
2537652   +
2537653   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
2537654   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
2537655   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
2537656   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
2537657   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
2537658   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2537659   +
2537660   +
2537661   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
2537662   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
2537663   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
2537664   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
2537665   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
2537666   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2537667   +
2537668   +
2537669   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
2537670   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
2537671   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
2537672   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
2537673   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
2537674   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2537675   +
2537676   +
2537677   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
2537678   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
2537679   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
2537680   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
2537681   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
2537682   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2537683   +
2537684   +
2537685   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
2537686   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
2537687   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
2537688   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
2537689   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
2537690   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2537691   +
2537692   +
2537693   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
2537694   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
2537695   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
2537696   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
2537697   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
2537698   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2537699   +
2537700   +
2537701   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
2537702   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
2537703   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
2537704   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
2537705   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
2537706   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2537707   +if
2537708   +_FILTERNORM1 not in ( '.')
2537709   + and
2537710   +_FILTERNORM2 not in ( '.')
2537711   + and
2537712   +_FILTERNORM3 not in ( '.')
2537713   + and
2537714   +_FILTERNORM4 not in ( '.')
2537715   + and
2537716   +_FILTERNORM5 not in ( '.')
2537717   + and
2537718   +_FILTERNORM6 not in ( '.')
2537719   + and
2537720   +_FILTERNORM7 not in ( ' ')
2537721   + and
2537722   +_FILTERNORM8 not in ( ' ')
2537723   +and
2537724   +( Dt_Customer ne .)
2537725   +and ( Income ne . and (Income<=107000))
2537726   +and ( Kidhome ne .)
2537727   +and ( MntFishProducts ne .)
2537728   +and ( MntFruits ne .)
2537729   +and ( MntGoldProds ne .)
2537730   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
2537731   +and ( MntSweetProducts ne .)
2537732   +and ( MntWines ne .)
2537733   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
2537734   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
2537735   +and ( NumStorePurchases ne .)
2537736   +and ( NumWebPurchases ne .)
2537737   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
2537738   +and ( Recency ne .)
2537739   +and ( Teenhome ne .)
2537740   +and ( Year_Birth ne .)
2537741   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and (
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and (
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and (
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and (
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne
.) and ( Year_Birth ne .) then do;
2537742   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
2537743   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
2537744   +end;
MPRINT(EM_DIAGRAM):   end;
2537745   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
2537746   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2537747    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
2537748    options validvarname=V7;
MPRINT(EM_DIAGRAM):   options validvarname=V7;
MPRINT(EM_DIAGRAM):   quit;
2537749    quit;
2537750    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2537751    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2537752    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2537753    retain ID 8 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 8 Node "Filter";
2537754    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2537755    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2537756    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2537757    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2537758    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2537759    proc sort data=EMWS8.Stat_CMeta_TRAIN out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Stat_CMeta_TRAIN out=_temp2(keep=NAME CREATOR);
2537760    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2537761    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set EMWS8.STAT_CMETA_TRAIN.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2537762    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2537763    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2537764    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2537765    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2537766    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
2537767    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
2537768    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2537769    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2537770    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2537771    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2537772    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2537773    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2537774    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2537775    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2537776    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2537776  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.
 
2537777    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2537778    proc append base=EMWS8.Score_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Score_FCMP data=_tempx;
2537779    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.SCORE_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.SCORE_FCMP has 5343 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2537780    %macro varDept(fcmpdata=,id=);
2537781    %global nobs&id scoreFlag&id;
2537782    %let scoreFlag&id = 0;
2537783    %if &id=1 or ^&fcmpStart %then %do;
2537784    proc sort data=&fcmpdata out=_temp&id nodupkey;
2537785    by NAME;
2537786    %if EM_CLASSIFICATION EM_PROBABILITY EM_EVENTPROBABILITY ne %then %do;
2537787    where id=&id and (LHS in( %let j=1;
2537788    %do %while(%scan( EM_CLASSIFICATION EM_PROBABILITY EM_EVENTPROBABILITY, &j) ne );
2537789    %let var = %scan( EM_CLASSIFICATION EM_PROBABILITY EM_EVENTPROBABILITY, &j);
2537790    "&var" %let j = %eval(&j+1);
2537791    %end;
2537792    ) or substr(LHS, 1, 3)='EM_');
2537793    %end;
2537794    %else %do;
2537795    where id=&id and substr(LHS, 1, 3)='EM_';
2537796    %end;
2537797    run;
2537798    %let dsid = %sysfunc(open(_temp&id));
2537799    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2537800    %let dsid = %sysfunc(close(&dsid));
2537801    %if &&nobs&id %then %do;
2537802    %let scoreFlag&id = 1;
2537803    %let fcmpStart = 1;
2537804    %end;
2537805    %else %let fcmpStart = 0;
2537806    %end;
2537807    %else %do;
2537808    proc sort data=&fcmpdata out=_tempid;
2537809    where id=&id;
2537810    by LHS;
2537811    run;
2537812    %let dsid = %sysfunc(open(_tempid));
2537813    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2537814    %let dsid = %sysfunc(close(&dsid));
2537815    %if ^&&nobs&id %then %do;
2537816    proc datasets lib=work nolist;
2537817    delete _tempid;
2537818    run;
2537819    quit;
2537820    %end;
2537821    %else %do;
2537822    data _tempAll;
2537823    set %let j=%eval(&id-1);
2537824    %do x=1 %to &j;
2537825    %if &&nobs&x %then %do;
2537826    _temp&x %end;
2537827    %end;
2537828    ;
2537829    run;
2537830    proc sql;
2537831    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
2537831  ! work._tempid p2 where p.name=p2.lhs or substr(p2.LHS, 1, 3)='EM_';
2537832    quit;
2537833    data _temp&id;
2537834    set _temp&id;
2537835    where LHS ne '' and NAME ne '' and Node ne '';
2537836    run;
2537837    proc datasets lib=work nolist;
2537838    delete _tempAll;
2537839    run;
2537840    %let dsid = %sysfunc(open(_temp&id));
2537841    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2537842    %let dsid = %sysfunc(close(&dsid));
2537843    %if ^&&nobs&id %then %do;
2537844    proc datasets lib=work nolist;
2537845    delete _temp&id;
2537846    run;
2537847    quit;
2537848    %end;
2537849    %else %do;
2537850    %let scoreFlag&id = 1;
2537851    data _temp&id;
2537852    set _temp&id;
2537853    where LHS ne NAME and node ne '';
2537854    run;
2537855    %let dsid = %sysfunc(open(_temp&id));
2537856    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2537857    %let dsid = %sysfunc(close(&dsid));
2537858    %if ^&&nobs&id %then %do;
2537859    proc datasets lib=work nolist;
2537860    delete _temp&id;
2537861    run;
2537862    quit;
2537863    %end;
2537864    %else %do;
2537865    proc sort data=_temp&id nodupkey;
2537866    by LHS NAME;
2537867    run;
2537868    %end;
2537869    %end;
2537870    %end;
2537871    %end;
2537872    %mend varDept;
2537873    %macro optCode(outdata=);
2537874    %global fcmpStart;
2537875    %let fcmpStart = 0;
2537876    %let outputVars = EM_CLASSIFICATION EM_PROBABILITY EM_EVENTPROBABILITY;
2537877    %let NumNodes=10;
2537878    %do k=1 %to &NumNodes;
2537879    %vardept(fcmpdata=&outdata, id=&k);
2537880    %end;
2537881    %mend optCode;
2537882    %optcode(outData=EMWS8.Score_FCMP);
MPRINT(EM_DIAGRAM):
MPRINT(VARDEPT):   proc sort data=EMWS8.Score_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and (LHS in( "EM_CLASSIFICATION" "EM_PROBABILITY"
"EM_EVENTPROBABILITY" ) or substr(LHS, 1, 3)='EM_');
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set EMWS8.SCORE_FCMP.
      WHERE (id=1) and (LHS in ('EM_CLASSIFICATION', 'EM_EVENTPROBABILITY', 'EM_PROBABILITY')
      or (SUBSTR(LHS, 1, 3)='EM_'));
NOTE: 1 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP1 has 3 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Score_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=2;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 3735 observations read from the data set EMWS8.SCORE_FCMP.
      WHERE id=2;
NOTE: The data set WORK._TEMPID has 3735 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp1 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 3 observations read from the data set WORK._TEMP1.
NOTE: The data set WORK._TEMPALL has 3 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp2 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs or substr(p2.LHS, 1, 3)='EM_';
NOTE: The execution of this query involves performing one or more Cartesian product joins that
      can not be optimized.
NOTE: Table WORK._TEMP2 created, with 111 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp2;
MPRINT(VARDEPT):   set _temp2;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 111 observations read from the data set WORK._TEMP2.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP2 has 111 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   data _temp2;
MPRINT(VARDEPT):   set _temp2;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 109 observations read from the data set WORK._TEMP2.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP2 has 109 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp2 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 109 observations read from the data set WORK._TEMP2.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 109 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Score_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 1495 observations read from the data set EMWS8.SCORE_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 1495 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp1 _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 3 observations read from the data set WORK._TEMP1.
NOTE: There were 109 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 112 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp3 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs or substr(p2.LHS, 1, 3)='EM_';
NOTE: The execution of this query involves performing one or more Cartesian product joins that
      can not be optimized.
NOTE: Table WORK._TEMP3 created, with 238 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp3;
MPRINT(VARDEPT):   set _temp3;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 238 observations read from the data set WORK._TEMP3.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP3 has 238 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   data _temp3;
MPRINT(VARDEPT):   set _temp3;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 232 observations read from the data set WORK._TEMP3.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP3 has 232 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp3 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 232 observations read from the data set WORK._TEMP3.
NOTE: 132 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP3 has 100 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Score_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.SCORE_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Score_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.SCORE_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Score_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set EMWS8.SCORE_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp1 _temp2 _temp3 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 3 observations read from the data set WORK._TEMP1.
NOTE: There were 109 observations read from the data set WORK._TEMP2.
NOTE: There were 100 observations read from the data set WORK._TEMP3.
NOTE: The data set WORK._TEMPALL has 212 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs or substr(p2.LHS, 1, 3)='EM_';
NOTE: The execution of this query involves performing one or more Cartesian product joins that
      can not be optimized.
NOTE: Table WORK._TEMP6 created, with 24 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 24 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 24 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 24 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 24 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 24 observations read from the data set WORK._TEMP6.
NOTE: 20 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Score_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set EMWS8.SCORE_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp1 _temp2 _temp3 _temp6 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 3 observations read from the data set WORK._TEMP1.
NOTE: There were 109 observations read from the data set WORK._TEMP2.
NOTE: There were 100 observations read from the data set WORK._TEMP3.
NOTE: There were 4 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 216 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs or substr(p2.LHS, 1, 3)='EM_';
NOTE: The execution of this query involves performing one or more Cartesian product joins that
      can not be optimized.
NOTE: Table WORK._TEMP7 created, with 232 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 232 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 232 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 232 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP7 has 232 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp7 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 232 observations read from the data set WORK._TEMP7.
NOTE: 193 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP7 has 39 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Score_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 66 observations read from the data set EMWS8.SCORE_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp1 _temp2 _temp3 _temp6 _temp7 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 3 observations read from the data set WORK._TEMP1.
NOTE: There were 109 observations read from the data set WORK._TEMP2.
NOTE: There were 100 observations read from the data set WORK._TEMP3.
NOTE: There were 4 observations read from the data set WORK._TEMP6.
NOTE: There were 39 observations read from the data set WORK._TEMP7.
NOTE: The data set WORK._TEMPALL has 255 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp8 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs or substr(p2.LHS, 1, 3)='EM_';
NOTE: The execution of this query involves performing one or more Cartesian product joins that
      can not be optimized.
NOTE: Table WORK._TEMP8 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp8;
MPRINT(VARDEPT):   set _temp8;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP8.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP8 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp8;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP8 (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Score_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.SCORE_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Score_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=10;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.SCORE_FCMP.
      WHERE id=10;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;
 
2537883    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
2537884    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
2537885    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
2537886    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2537887    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
2537888    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
2537889    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
2537890    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2537891    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2537892    create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp6 p,
2537892  ! EMWS8.Trans_EMSCOREVAR p2 where substr(upcase(p.LHS), 1, 3) ='EM_' or
2537892  ! (upcase(p.LHS)=upcase(p2.NAME)) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp6
p, EMWS8.Trans_EMSCOREVAR p2 where substr(upcase(p.LHS), 1, 3) ='EM_' or
(upcase(p.LHS)=upcase(p2.NAME)) order by p.lhs;
NOTE: The execution of this query involves performing one or more Cartesian product joins that
      can not be optimized.
NOTE: Table WORK._CODEVAR5 created, with 4 rows and 3 columns.
 
2537893    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
2537894    data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
2537895    set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
2537896    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 4 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 4 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Score: Determine Score Inputs;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   options validvarname=ANY;
MPRINT(EM_DIAGRAM):   filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Score\OPTIMIZEDCODE.sas";
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2537904   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2537905   +* EM SCORE CODE;
MPRINT(EM_DIAGRAM):   * EM SCORE CODE;
2537906   +* EM Version: 12.1;
MPRINT(EM_DIAGRAM):   * EM Version: 12.1;
2537907   +* SAS Release: 9.03.01M2P081512;
MPRINT(EM_DIAGRAM):   * SAS Release: 9.03.01M2P081512;
2537908   +* Host: WN7LF-Leave;
MPRINT(EM_DIAGRAM):   * Host: WN7LF-Leave;
2537909   +* Encoding: wlatin1;
MPRINT(EM_DIAGRAM):   * Encoding: wlatin1;
2537910   +* Locale: de_DE;
MPRINT(EM_DIAGRAM):   * Locale: de_DE;
2537911   +* Project Path: C:\;
MPRINT(EM_DIAGRAM):   * Project Path: C:\;
2537912   +* Project Name: predictive-models-project;
MPRINT(EM_DIAGRAM):   * Project Name: predictive-models-project;
2537913   +* Diagram Id: EMWS8;
MPRINT(EM_DIAGRAM):   * Diagram Id: EMWS8;
2537914   +* Diagram Name: Predictive Models;
MPRINT(EM_DIAGRAM):   * Diagram Name: Predictive Models;
2537915   +* Generated by: Lukas Fahr;
MPRINT(EM_DIAGRAM):   * Generated by: Lukas Fahr;
2537916   +* Date: 20APR2016:17:40:41;
MPRINT(EM_DIAGRAM):   * Date: 20APR2016:17:40:41;
2537917   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2537918   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2537919   +* TOOL: Ensemble;
MPRINT(EM_DIAGRAM):   * TOOL: Ensemble;
2537920   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
2537921   +* NODE: Ensmbl36;
MPRINT(EM_DIAGRAM):   * NODE: Ensmbl36;
2537922   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2537923   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2537924   +* TOOL: Extension Class;
MPRINT(EM_DIAGRAM):   * TOOL: Extension Class;
2537925   +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
2537926   +* NODE: FIMPORT;
MPRINT(EM_DIAGRAM):   * NODE: FIMPORT;
2537927   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2537928   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2537929   +* TOOL: Statistics Exploration;
MPRINT(EM_DIAGRAM):   * TOOL: Statistics Exploration;
2537930   +* TYPE: EXPLORE;
MPRINT(EM_DIAGRAM):   * TYPE: EXPLORE;
2537931   +* NODE: Stat;
MPRINT(EM_DIAGRAM):   * NODE: Stat;
2537932   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2537933   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2537934   +* TOOL: Filtering;
MPRINT(EM_DIAGRAM):   * TOOL: Filtering;
2537935   +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
2537936   +* NODE: Filter;
MPRINT(EM_DIAGRAM):   * NODE: Filter;
2537937   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2537938   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2537939   +* TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
MPRINT(EM_DIAGRAM):   * TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
2537940   +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
2537941   +* NODE: EMCODE4;
MPRINT(EM_DIAGRAM):   * NODE: EMCODE4;
2537942   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2537943   +
2537944   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
2537945   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
2537945  !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
2537946   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
2537947   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
2537948   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
2537949   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
2537950   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
2537951   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2537952   +* TOOL: Transform;
MPRINT(EM_DIAGRAM):   * TOOL: Transform;
2537953   +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
2537954   +* NODE: Trans;
MPRINT(EM_DIAGRAM):   * NODE: Trans;
2537955   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2537956   +HigherEducationBinary = HigherEducation;
MPRINT(EM_DIAGRAM):   HigherEducationBinary = HigherEducation;
2537957   +MonthsAsCustomer = int((today()-Dt_Customer)/12);
MPRINT(EM_DIAGRAM):   MonthsAsCustomer = int((today()-Dt_Customer)/12);
2537958   +NumDistPurchases = NumCatalogPurchases + NumWebPurchases;
MPRINT(EM_DIAGRAM):   NumDistPurchases = NumCatalogPurchases + NumWebPurchases;
2537959   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2537960   +* TOOL: Partition Class;
MPRINT(EM_DIAGRAM):   * TOOL: Partition Class;
2537961   +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
2537962   +* NODE: Part;
MPRINT(EM_DIAGRAM):   * NODE: Part;
2537963   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2537964   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2537965   +* TOOL: Metadata Node;
MPRINT(EM_DIAGRAM):   * TOOL: Metadata Node;
2537966   +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
2537967   +* NODE: Meta;
MPRINT(EM_DIAGRAM):   * NODE: Meta;
2537968   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2537969   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2537970   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
2537971   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
2537972   +* NODE: AutoNeural6;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural6;
2537973   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2537974   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2537975   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2537976   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2537977   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2537978   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2537979   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2537980   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2537981   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2537982   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2537983   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2537984   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2537985   +LENGTH _WARN_ $4
2537986   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
2537987   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2537988   +
2537989   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
2537990   +
2537991   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
2537992   +
2537993   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2537994   +
2537995   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2537996   +
2537997   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2537998   +
2537999   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2538000   +
2538001   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2538002   +
2538003   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2538004   +
2538005   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2538006   +
2538007   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2538008   +
2538009   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2538010   +
2538011   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
2538012   +
2538013   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2538014   +
2538015   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2538016   +
2538017   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
2538018   +
2538019   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2538020   +
2538021   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2538022   +
2538023   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2538024   +
2538025   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2538026   +
2538027   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
2538028   +
2538029   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2538030   +
2538031   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2538032   +
2538033   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2538034   +
2538035   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2538036   +
2538037   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2538038   +
2538039   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2538040   +
2538041   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2538042   +
2538043   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2538044   +
2538045   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
2538046   +
2538047   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2538048   +
2538049   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2538050   +
2538051   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2538052   +
2538053   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2538054   +
2538055   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2538056   +
2538057   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2538058   +
2538059   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2538060   +
2538061   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2538062   +
2538063   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
2538064   +
2538065   +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
2538066   +
2538067   +      label H1x3_1 = 'Hidden: H1x3_=1' ;
MPRINT(EM_DIAGRAM):   label H1x3_1 = 'Hidden: H1x3_=1' ;
2538068   +
2538069   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2538070   +
2538071   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2538072   +
2538073   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2538074   +
2538075   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2538076   +
2538077   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2538078   +
2538079   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2538080   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2538081   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2538082   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2538083   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2538084   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2538085   +end;
MPRINT(EM_DIAGRAM):   end;
2538086   +else do;
MPRINT(EM_DIAGRAM):   else do;
2538087   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2538088   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2538089   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2538090   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2538091   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2538092   +   end;
MPRINT(EM_DIAGRAM):   end;
2538093   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2538094   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2538095   +   end;
MPRINT(EM_DIAGRAM):   end;
2538096   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2538097   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2538098   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2538099   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2538100   +   end;
MPRINT(EM_DIAGRAM):   end;
2538101   +end;
MPRINT(EM_DIAGRAM):   end;
2538102   +
2538103   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2538104   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2538105   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2538106   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2538107   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2538108   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2538109   +end;
MPRINT(EM_DIAGRAM):   end;
2538110   +else do;
MPRINT(EM_DIAGRAM):   else do;
2538111   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2538112   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2538113   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2538114   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2538115   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2538116   +   end;
MPRINT(EM_DIAGRAM):   end;
2538117   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2538118   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2538119   +   end;
MPRINT(EM_DIAGRAM):   end;
2538120   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2538121   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2538122   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2538123   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2538124   +   end;
MPRINT(EM_DIAGRAM):   end;
2538125   +end;
MPRINT(EM_DIAGRAM):   end;
2538126   +
2538127   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2538128   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2538129   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2538130   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2538131   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2538132   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2538133   +end;
MPRINT(EM_DIAGRAM):   end;
2538134   +else do;
MPRINT(EM_DIAGRAM):   else do;
2538135   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2538136   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2538137   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2538138   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2538139   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2538140   +   end;
MPRINT(EM_DIAGRAM):   end;
2538141   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2538142   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2538143   +   end;
MPRINT(EM_DIAGRAM):   end;
2538144   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2538145   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2538146   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2538147   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2538148   +   end;
MPRINT(EM_DIAGRAM):   end;
2538149   +end;
MPRINT(EM_DIAGRAM):   end;
2538150   +
2538151   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2538152   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2538153   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2538154   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2538155   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2538156   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2538157   +end;
MPRINT(EM_DIAGRAM):   end;
2538158   +else do;
MPRINT(EM_DIAGRAM):   else do;
2538159   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2538160   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2538161   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2538162   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2538163   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2538164   +   end;
MPRINT(EM_DIAGRAM):   end;
2538165   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2538166   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2538167   +   end;
MPRINT(EM_DIAGRAM):   end;
2538168   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2538169   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2538170   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2538171   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2538172   +   end;
MPRINT(EM_DIAGRAM):   end;
2538173   +end;
MPRINT(EM_DIAGRAM):   end;
2538174   +
2538175   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2538176   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2538177   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2538178   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2538179   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2538180   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2538181   +end;
MPRINT(EM_DIAGRAM):   end;
2538182   +else do;
MPRINT(EM_DIAGRAM):   else do;
2538183   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2538184   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2538185   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2538186   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2538187   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2538188   +   end;
MPRINT(EM_DIAGRAM):   end;
2538189   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2538190   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2538191   +   end;
MPRINT(EM_DIAGRAM):   end;
2538192   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2538193   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2538194   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2538195   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2538196   +   end;
MPRINT(EM_DIAGRAM):   end;
2538197   +end;
MPRINT(EM_DIAGRAM):   end;
2538198   +
2538199   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2538200   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2538201   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2538202   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2538203   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2538204   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2538205   +end;
MPRINT(EM_DIAGRAM):   end;
2538206   +else do;
MPRINT(EM_DIAGRAM):   else do;
2538207   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2538208   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2538209   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2538210   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2538211   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2538212   +   end;
MPRINT(EM_DIAGRAM):   end;
2538213   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2538214   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2538215   +   end;
MPRINT(EM_DIAGRAM):   end;
2538216   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2538217   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2538218   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2538219   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2538220   +   end;
MPRINT(EM_DIAGRAM):   end;
2538221   +end;
MPRINT(EM_DIAGRAM):   end;
2538222   +
2538223   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
2538224   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
2538225   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
2538226   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2538227   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2538228   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2538229   +end;
MPRINT(EM_DIAGRAM):   end;
2538230   +else do;
MPRINT(EM_DIAGRAM):   else do;
2538231   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2538232   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
2538233   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2538234   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
2538235   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
2538236   +   end;
MPRINT(EM_DIAGRAM):   end;
2538237   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
2538238   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
2538239   +   end;
MPRINT(EM_DIAGRAM):   end;
2538240   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2538241   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2538242   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2538243   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2538244   +   end;
MPRINT(EM_DIAGRAM):   end;
2538245   +end;
MPRINT(EM_DIAGRAM):   end;
2538246   +
2538247   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2538248   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
2538249   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2538250   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2538251   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2538252   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2538253   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2538254   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2538255   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2538256   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2538257   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2538258   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2538259   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2538260   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2538261   +end;
MPRINT(EM_DIAGRAM):   end;
2538262   +else do;
MPRINT(EM_DIAGRAM):   else do;
2538263   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2538264   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2538265   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2538266   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2538267   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2538268   +   end;
MPRINT(EM_DIAGRAM):   end;
2538269   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2538270   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2538271   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2538272   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2538273   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2538274   +   end;
MPRINT(EM_DIAGRAM):   end;
2538275   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2538276   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2538277   +   end;
MPRINT(EM_DIAGRAM):   end;
2538278   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2538279   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2538280   +   end;
MPRINT(EM_DIAGRAM):   end;
2538281   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2538282   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2538283   +   end;
MPRINT(EM_DIAGRAM):   end;
2538284   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2538285   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2538286   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2538287   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2538288   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2538289   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2538290   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2538291   +   end;
MPRINT(EM_DIAGRAM):   end;
2538292   +end;
MPRINT(EM_DIAGRAM):   end;
2538293   +
2538294   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2538295   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2538296   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
2538297   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2538298   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2538299   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2538300   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2538301   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2538302   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2538303   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2538304   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2538305   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2538306   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2538307   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2538308   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2538309   +end;
MPRINT(EM_DIAGRAM):   end;
2538310   +else do;
MPRINT(EM_DIAGRAM):   else do;
2538311   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2538312   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2538313   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2538314   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2538315   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2538316   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2538317   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2538318   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2538319   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2538320   +         end;
MPRINT(EM_DIAGRAM):   end;
2538321   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2538322   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2538323   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2538324   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2538325   +            end;
MPRINT(EM_DIAGRAM):   end;
2538326   +         end;
MPRINT(EM_DIAGRAM):   end;
2538327   +      end;
MPRINT(EM_DIAGRAM):   end;
2538328   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2538329   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2538330   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2538331   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2538332   +         end;
MPRINT(EM_DIAGRAM):   end;
2538333   +      end;
MPRINT(EM_DIAGRAM):   end;
2538334   +   end;
MPRINT(EM_DIAGRAM):   end;
2538335   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2538336   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2538337   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2538338   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2538339   +      end;
MPRINT(EM_DIAGRAM):   end;
2538340   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2538341   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2538342   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2538343   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2538344   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2538345   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2538346   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2538347   +         end;
MPRINT(EM_DIAGRAM):   end;
2538348   +      end;
MPRINT(EM_DIAGRAM):   end;
2538349   +   end;
MPRINT(EM_DIAGRAM):   end;
2538350   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2538351   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2538352   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2538353   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2538354   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2538355   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2538356   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2538357   +   end;
MPRINT(EM_DIAGRAM):   end;
2538358   +end;
MPRINT(EM_DIAGRAM):   end;
2538359   +
2538360   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2538361   +*** Checking missing input Interval
2538362   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2538363   +
2538364   +IF NMISS(
2538365   +   AcceptedCmpTotal ,
2538366   +   Age ,
2538367   +   Frq ,
2538368   +   Income ,
2538369   +   Kidhome ,
2538370   +   Mnt ,
2538371   +   MntFishProducts ,
2538372   +   MntFruits ,
2538373   +   MntGoldProds ,
2538374   +   MntMeatProducts ,
2538375   +   MntSweetProducts ,
2538376   +   MntWines ,
2538377   +   MonthsAsCustomer ,
2538378   +   NumCatalogPurchases ,
2538379   +   NumDealsPurchases ,
2538380   +   NumDistPurchases ,
2538381   +   NumStorePurchases ,
2538382   +   NumWebPurchases ,
2538383   +   NumWebVisitsMonth ,
2538384   +   RFMstat ,
2538385   +   RMntFrq ,
2538386   +   Recency ,
2538387   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
2538388   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2538389   +
2538390   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2538391   +END;
MPRINT(EM_DIAGRAM):   END;
2538392   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2538393   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
2538394   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2538395   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2538396   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2538397   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
2538398   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2538399   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2538400   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2538401   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2538402   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2538403   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2538404   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2538405   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2538406   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2538407   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2538408   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2538409   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
2538410   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2538411   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2538412   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2538413   +   S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2538414   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 *
MonthsAsCustomer ;
2538415   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2538416   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
2538417   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2538418   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2538419   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2538420   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
2538421   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2538422   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
2538423   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2538424   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
2538425   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2538426   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2538427   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2538428   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2538429   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2538430   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2538431   +END;
MPRINT(EM_DIAGRAM):   END;
2538432   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2538433   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2538434   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2538435   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
2538436   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
2538437   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2538438   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
2538439   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2538440   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2538441   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2538442   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2538443   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2538444   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2538445   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2538446   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2538447   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2538448   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2538449   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2538450   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2538451   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2538452   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2538453   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2538454   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
2538455   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2538456   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2538457   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
2538458   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2538459   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2538460   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2538461   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2538462   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2538463   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
2538464   +   ELSE S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2538465   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 *
MonthsAsCustomer ;
2538466   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2538467   +   ELSE S_NumCatalogPurchases
2538468   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2538469   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
2538470   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2538471   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2538472   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2538473   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
2538474   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2538475   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
2538476   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2538477   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2538478   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
2538479   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2538480   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2538481   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
2538482   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2538483   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2538484   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2538485   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2538486   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2538487   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
2538488   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2538489   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2538490   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2538491   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2538492   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2538493   +END;
MPRINT(EM_DIAGRAM):   END;
2538494   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2538495   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
2538496   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2538497   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2538498   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
2538499   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2538500   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2538501   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
2538502   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2538503   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2538504   +   H1x1_1  =    -0.00800383076247 * S_AcceptedCmpTotal
2538505   +          +     0.02761302021586 * S_Age  +     0.10595191274027 * S_Frq
2538506   +          +    -0.15720275096991 * S_Income  +     0.14522420813528 *
2538507   +        S_Kidhome  +    -0.14485367197729 * S_Mnt  +     0.10029542464177 *
2538508   +        S_MntFishProducts  +      0.0126489883955 * S_MntFruits
2538509   +          +    -0.01721251339827 * S_MntGoldProds  +    -0.69008250574088 *
2538510   +        S_MntMeatProducts  +     0.01018204164797 * S_MntSweetProducts
2538511   +          +     0.22039448854688 * S_MntWines  +     0.01531819489128 *
2538512   +        S_MonthsAsCustomer  +    -0.23161250514854 * S_NumCatalogPurchases
2538513   +          +    -0.20127545393212 * S_NumDealsPurchases
2538514   +          +     0.04506333103933 * S_NumDistPurchases
2538515   +          +     0.35249458492371 * S_NumStorePurchases
2538516   +          +     0.25004284340707 * S_NumWebPurchases
2538517   +          +    -0.53727251220752 * S_NumWebVisitsMonth
2538518   +          +    -0.05439428653958 * S_RFMstat  +     0.36751560031492 *
2538519   +        S_RMntFrq  +      0.5373510847225 * S_Recency
2538520   +          +     0.08757258535387 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.00800383076247 * S_AcceptedCmpTotal + 0.02761302021586 *
S_Age + 0.10595191274027 * S_Frq + -0.15720275096991 * S_Income + 0.14522420813528 * S_Kidhome
+ -0.14485367197729 * S_Mnt + 0.10029542464177 * S_MntFishProducts + 0.0126489883955 *
S_MntFruits + -0.01721251339827 * S_MntGoldProds + -0.69008250574088 * S_MntMeatProducts +
0.01018204164797 * S_MntSweetProducts + 0.22039448854688 * S_MntWines + 0.01531819489128 *
S_MonthsAsCustomer + -0.23161250514854 * S_NumCatalogPurchases + -0.20127545393212 *
S_NumDealsPurchases + 0.04506333103933 * S_NumDistPurchases + 0.35249458492371 *
S_NumStorePurchases + 0.25004284340707 * S_NumWebPurchases + -0.53727251220752 *
S_NumWebVisitsMonth + -0.05439428653958 * S_RFMstat + 0.36751560031492 * S_RMntFrq +
0.5373510847225 * S_Recency + 0.08757258535387 * S_Teenhome ;
2538521   +   H1x1_1  = H1x1_1  +     0.21204360154837 * AcceptedCmp10
2538522   +          +     0.20766091429217 * AcceptedCmp20  +     0.20201307074488 *
2538523   +        AcceptedCmp30  +     0.26898383850722 * AcceptedCmp40
2538524   +          +     0.55154220854739 * AcceptedCmp50  +     0.13147328871299 *
2538525   +        Complain0  +    -0.02797177954188 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.21204360154837 * AcceptedCmp10 + 0.20766091429217 *
AcceptedCmp20 + 0.20201307074488 * AcceptedCmp30 + 0.26898383850722 * AcceptedCmp40 +
0.55154220854739 * AcceptedCmp50 + 0.13147328871299 * Complain0 + -0.02797177954188 *
HigherEducationBinary0 ;
2538526   +   H1x1_1  = H1x1_1  +    -0.00959805163736 * Education2n_Cycle
2538527   +          +     0.37192717803938 * EducationBasic  +    -0.10342362068485 *
2538528   +        EducationGraduation  +    -0.13377682721092 * EducationMaster
2538529   +          +    -0.19452359839974 * Marital_StatusDivorced
2538530   +          +     0.32327870805716 * Marital_StatusMarried
2538531   +          +    -0.20770545592268 * Marital_StatusSingle
2538532   +          +     0.35618773017298 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.00959805163736 * Education2n_Cycle +
0.37192717803938 * EducationBasic + -0.10342362068485 * EducationGraduation +
-0.13377682721092 * EducationMaster + -0.19452359839974 * Marital_StatusDivorced +
0.32327870805716 * Marital_StatusMarried + -0.20770545592268 * Marital_StatusSingle +
0.35618773017298 * Marital_StatusTogether ;
2538533   +   H1x1_1  =     0.87012150629431 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.87012150629431 + H1x1_1 ;
2538534   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
2538535   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
2538536   +   H1x1_1  = EXP(MIN(-0.5 * H1x1_1 **2, _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(MIN(-0.5 * H1x1_1 **2, _EXP_BAR));
2538537   +END;
MPRINT(EM_DIAGRAM):   END;
2538538   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2538539   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
2538540   +END;
MPRINT(EM_DIAGRAM):   END;
2538541   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2538542   +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
2538543   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2538544   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2538545   +   H1x2_1  =     0.92357456692651 * S_AcceptedCmpTotal
2538546   +          +    -0.00516549264504 * S_Age  +    -1.03043789382359 * S_Frq
2538547   +          +     0.78555631441048 * S_Income  +    -1.36329797235747 *
2538548   +        S_Kidhome  +    -0.77229288487872 * S_Mnt  +     1.27281095482218 *
2538549   +        S_MntFishProducts  +     0.04568599055132 * S_MntFruits
2538550   +          +    -0.13434867195633 * S_MntGoldProds  +    -1.95682488683295 *
2538551   +        S_MntMeatProducts  +     -0.0253141337078 * S_MntSweetProducts
2538552   +          +     0.67857436596482 * S_MntWines  +    -0.07247572940845 *
2538553   +        S_MonthsAsCustomer  +    -1.02814758425435 * S_NumCatalogPurchases
2538554   +          +    -0.02120959778153 * S_NumDealsPurchases
2538555   +          +     1.49013956394863 * S_NumDistPurchases
2538556   +          +    -0.96806240220463 * S_NumStorePurchases
2538557   +          +    -1.68330472453558 * S_NumWebPurchases
2538558   +          +     3.42976128164256 * S_NumWebVisitsMonth
2538559   +          +    -0.38912520446503 * S_RFMstat  +    -2.57487899031042 *
2538560   +        S_RMntFrq  +    -3.14923215912621 * S_Recency
2538561   +          +    -0.67635091810974 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.92357456692651 * S_AcceptedCmpTotal + -0.00516549264504 *
S_Age + -1.03043789382359 * S_Frq + 0.78555631441048 * S_Income + -1.36329797235747 *
S_Kidhome + -0.77229288487872 * S_Mnt + 1.27281095482218 * S_MntFishProducts +
0.04568599055132 * S_MntFruits + -0.13434867195633 * S_MntGoldProds + -1.95682488683295 *
S_MntMeatProducts + -0.0253141337078 * S_MntSweetProducts + 0.67857436596482 * S_MntWines +
-0.07247572940845 * S_MonthsAsCustomer + -1.02814758425435 * S_NumCatalogPurchases +
-0.02120959778153 * S_NumDealsPurchases + 1.49013956394863 * S_NumDistPurchases +
-0.96806240220463 * S_NumStorePurchases + -1.68330472453558 * S_NumWebPurchases +
3.42976128164256 * S_NumWebVisitsMonth + -0.38912520446503 * S_RFMstat + -2.57487899031042 *
S_RMntFrq + -3.14923215912621 * S_Recency + -0.67635091810974 * S_Teenhome ;
2538562   +   H1x2_1  = H1x2_1  +    -0.18835638765595 * AcceptedCmp10
2538563   +          +     1.28752081945681 * AcceptedCmp20  +     -0.5515893923669 *
2538564   +        AcceptedCmp30  +    -0.82440763600043 * AcceptedCmp40
2538565   +          +     1.94503109075872 * AcceptedCmp50  +    -0.75977722298402 *
2538566   +        Complain0  +    -1.11349075129464 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.18835638765595 * AcceptedCmp10 + 1.28752081945681 *
AcceptedCmp20 + -0.5515893923669 * AcceptedCmp30 + -0.82440763600043 * AcceptedCmp40 +
1.94503109075872 * AcceptedCmp50 + -0.75977722298402 * Complain0 + -1.11349075129464 *
HigherEducationBinary0 ;
2538567   +   H1x2_1  = H1x2_1  +     1.79843117215153 * Education2n_Cycle
2538568   +          +    -1.50428649925314 * EducationBasic  +    -0.32238897768725 *
2538569   +        EducationGraduation  +    -0.16909007224958 * EducationMaster
2538570   +          +      1.9815992681602 * Marital_StatusDivorced
2538571   +          +    -3.07893181570848 * Marital_StatusMarried
2538572   +          +     1.72965298244219 * Marital_StatusSingle
2538573   +          +    -3.17208781997524 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 1.79843117215153 * Education2n_Cycle +
-1.50428649925314 * EducationBasic + -0.32238897768725 * EducationGraduation +
-0.16909007224958 * EducationMaster + 1.9815992681602 * Marital_StatusDivorced +
-3.07893181570848 * Marital_StatusMarried + 1.72965298244219 * Marital_StatusSingle +
-3.17208781997524 * Marital_StatusTogether ;
2538574   +   H1x2_1  =     0.54729406730223 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.54729406730223 + H1x2_1 ;
2538575   +   _EPS = SQRT(CONSTANT('MACEPS')) ;
MPRINT(EM_DIAGRAM):   _EPS = SQRT(CONSTANT('MACEPS')) ;
2538576   +   _REC_EPS = 1/_EPS ;
MPRINT(EM_DIAGRAM):   _REC_EPS = 1/_EPS ;
2538577   +   DROP _REC_EPS _EPS ;
MPRINT(EM_DIAGRAM):   DROP _REC_EPS _EPS ;
2538578   +   IF H1x2_1  < _REC_EPS AND H1x2_1  > - _REC_EPS THEN
2538579   +   H1x2_1  = H1x2_1  * H1x2_1 ;
MPRINT(EM_DIAGRAM):   IF H1x2_1 < _REC_EPS AND H1x2_1 > - _REC_EPS THEN H1x2_1 = H1x2_1 *
H1x2_1 ;
2538580   +   ELSE H1x2_1  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x2_1 = _REC_EPS ;
2538581   +END;
MPRINT(EM_DIAGRAM):   END;
2538582   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2538583   +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
2538584   +END;
MPRINT(EM_DIAGRAM):   END;
2538585   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2538586   +*** Writing the Node H1x3_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x3_ ;
2538587   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2538588   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2538589   +   H1x3_1  =     0.90092602642364 * S_AcceptedCmpTotal
2538590   +          +    -0.16291307307626 * S_Age  +    -0.40132431666712 * S_Frq
2538591   +          +    -0.77251140598484 * S_Income  +     0.02215214313934 *
2538592   +        S_Kidhome  +     0.13123074182657 * S_Mnt  +    -0.43664076061176 *
2538593   +        S_MntFishProducts  +    -1.64192761266072 * S_MntFruits
2538594   +          +    -1.54189230184745 * S_MntGoldProds  +     -0.4138869968665 *
2538595   +        S_MntMeatProducts  +      0.5773885392047 * S_MntSweetProducts
2538596   +          +     1.45077769194851 * S_MntWines  +      0.5855746168529 *
2538597   +        S_MonthsAsCustomer  +     0.10198319985004 * S_NumCatalogPurchases
2538598   +          +     -0.5334151509863 * S_NumDealsPurchases
2538599   +          +     0.40600458912114 * S_NumDistPurchases
2538600   +          +    -0.30674653528261 * S_NumStorePurchases
2538601   +          +     0.10785037433743 * S_NumWebPurchases
2538602   +          +     0.99701680073452 * S_NumWebVisitsMonth
2538603   +          +    -0.25371895811899 * S_RFMstat  +     2.19406614746442 *
2538604   +        S_RMntFrq  +      1.0786726340694 * S_Recency
2538605   +          +     0.64406049150007 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 0.90092602642364 * S_AcceptedCmpTotal + -0.16291307307626 *
S_Age + -0.40132431666712 * S_Frq + -0.77251140598484 * S_Income + 0.02215214313934 *
S_Kidhome + 0.13123074182657 * S_Mnt + -0.43664076061176 * S_MntFishProducts +
-1.64192761266072 * S_MntFruits + -1.54189230184745 * S_MntGoldProds + -0.4138869968665 *
S_MntMeatProducts + 0.5773885392047 * S_MntSweetProducts + 1.45077769194851 * S_MntWines +
0.5855746168529 * S_MonthsAsCustomer + 0.10198319985004 * S_NumCatalogPurchases +
-0.5334151509863 * S_NumDealsPurchases + 0.40600458912114 * S_NumDistPurchases +
-0.30674653528261 * S_NumStorePurchases + 0.10785037433743 * S_NumWebPurchases +
0.99701680073452 * S_NumWebVisitsMonth + -0.25371895811899 * S_RFMstat + 2.19406614746442 *
S_RMntFrq + 1.0786726340694 * S_Recency + 0.64406049150007 * S_Teenhome ;
2538606   +   H1x3_1  = H1x3_1  +    -0.58424742605644 * AcceptedCmp10
2538607   +          +     -0.7436165858459 * AcceptedCmp20  +    -0.33959137246457 *
2538608   +        AcceptedCmp30  +     0.42726020731333 * AcceptedCmp40
2538609   +          +     2.23707409189181 * AcceptedCmp50  +     0.98135772482722 *
2538610   +        Complain0  +    -0.85818399669867 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + -0.58424742605644 * AcceptedCmp10 + -0.7436165858459 *
AcceptedCmp20 + -0.33959137246457 * AcceptedCmp30 + 0.42726020731333 * AcceptedCmp40 +
2.23707409189181 * AcceptedCmp50 + 0.98135772482722 * Complain0 + -0.85818399669867 *
HigherEducationBinary0 ;
2538611   +   H1x3_1  = H1x3_1  +    -0.89540752048995 * Education2n_Cycle
2538612   +          +     1.29513448243349 * EducationBasic  +    -1.47068621785539 *
2538613   +        EducationGraduation  +    -1.63362973413899 * EducationMaster
2538614   +          +    -0.72494401881341 * Marital_StatusDivorced
2538615   +          +    -0.82332231639631 * Marital_StatusMarried
2538616   +          +     -0.8863559011195 * Marital_StatusSingle
2538617   +          +     0.97129982315045 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + -0.89540752048995 * Education2n_Cycle +
1.29513448243349 * EducationBasic + -1.47068621785539 * EducationGraduation +
-1.63362973413899 * EducationMaster + -0.72494401881341 * Marital_StatusDivorced +
-0.82332231639631 * Marital_StatusMarried + -0.8863559011195 * Marital_StatusSingle +
0.97129982315045 * Marital_StatusTogether ;
2538618   +   H1x3_1  =     0.55234573720932 + H1x3_1 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 0.55234573720932 + H1x3_1 ;
2538619   +   _EPS = SQRT(CONSTANT('MACEPS')) ;
MPRINT(EM_DIAGRAM):   _EPS = SQRT(CONSTANT('MACEPS')) ;
2538620   +   _REC_EPS = 1/_EPS ;
MPRINT(EM_DIAGRAM):   _REC_EPS = 1/_EPS ;
2538621   +   DROP _REC_EPS _EPS ;
MPRINT(EM_DIAGRAM):   DROP _REC_EPS _EPS ;
2538622   +   IF H1x3_1  < _REC_EPS AND H1x3_1  > - _REC_EPS THEN
2538623   +   H1x3_1  = H1x3_1  * H1x3_1 ;
MPRINT(EM_DIAGRAM):   IF H1x3_1 < _REC_EPS AND H1x3_1 > - _REC_EPS THEN H1x3_1 = H1x3_1 *
H1x3_1 ;
2538624   +   ELSE H1x3_1  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x3_1 = _REC_EPS ;
2538625   +END;
MPRINT(EM_DIAGRAM):   END;
2538626   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2538627   +   H1x3_1  = .;
MPRINT(EM_DIAGRAM):   H1x3_1 = .;
2538628   +END;
MPRINT(EM_DIAGRAM):   END;
2538629   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2538630   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2538631   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2538632   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2538633   +   P_DepVar1  =     35.4482526843154 * H1x1_1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 35.4482526843154 * H1x1_1 ;
2538634   +   P_DepVar1  = P_DepVar1  +    -0.08810161142704 * H1x2_1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 + -0.08810161142704 * H1x2_1 ;
2538635   +   P_DepVar1  = P_DepVar1  +     0.02248060710303 * H1x3_1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 + 0.02248060710303 * H1x3_1 ;
2538636   +   P_DepVar1  =    -6.23004657634651 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -6.23004657634651 + P_DepVar1 ;
2538637   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2538638   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2538639   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2538640   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2538641   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2538642   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2538643   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2538644   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2538645   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2538646   +END;
MPRINT(EM_DIAGRAM):   END;
2538647   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2538648   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2538649   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2538650   +END;
MPRINT(EM_DIAGRAM):   END;
2538651   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2538652   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2538653   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2538654   +END;
MPRINT(EM_DIAGRAM):   END;
2538655   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2538656   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2538657   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2538658   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2538659   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2538660   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2538661   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2538662   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2538663   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2538664   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2538665   +END;
MPRINT(EM_DIAGRAM):   END;
2538666   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2538667   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2538668   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2538669   +drop
2538670   +H1x1_1
2538671   +H1x2_1
2538672   +H1x3_1
2538673   +;
MPRINT(EM_DIAGRAM):   drop H1x1_1 H1x2_1 H1x3_1 ;
2538674   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
2538675   +* Renaming variables for AutoNeural6;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural6;
2538676   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2538677   +* Renaming Posterior variables for AutoNeural6;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural6;
2538678   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2538679   +drop AutoNeural6_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural6_P_DepVar1;
2538680   +AutoNeural6_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural6_P_DepVar1 = P_DepVar1;
2538681   +drop AutoNeural6_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural6_P_DepVar0;
2538682   +AutoNeural6_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural6_P_DepVar0 = P_DepVar0;
2538683   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2538684   +* Renaming _WARN_ variable for AutoNeural6;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural6;
2538685   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2538686   +length AutoNeural6_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural6_WARN_ $4;
2538687   +drop AutoNeural6_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural6_WARN_;
2538688   +AutoNeural6_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural6_WARN_ = _WARN_;
2538689   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2538690   +* TOOL: Extension Class;
MPRINT(EM_DIAGRAM):   * TOOL: Extension Class;
2538691   +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
2538692   +* NODE: FIMPORT;
MPRINT(EM_DIAGRAM):   * NODE: FIMPORT;
2538693   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2538694   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2538695   +* TOOL: Statistics Exploration;
MPRINT(EM_DIAGRAM):   * TOOL: Statistics Exploration;
2538696   +* TYPE: EXPLORE;
MPRINT(EM_DIAGRAM):   * TYPE: EXPLORE;
2538697   +* NODE: Stat;
MPRINT(EM_DIAGRAM):   * NODE: Stat;
2538698   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2538699   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2538700   +* TOOL: Filtering;
MPRINT(EM_DIAGRAM):   * TOOL: Filtering;
2538701   +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
2538702   +* NODE: Filter;
MPRINT(EM_DIAGRAM):   * NODE: Filter;
2538703   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2538704   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2538705   +* TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
MPRINT(EM_DIAGRAM):   * TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
2538706   +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
2538707   +* NODE: EMCODE4;
MPRINT(EM_DIAGRAM):   * NODE: EMCODE4;
2538708   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2538709   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2538710   +* TOOL: Transform;
MPRINT(EM_DIAGRAM):   * TOOL: Transform;
2538711   +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
2538712   +* NODE: Trans;
MPRINT(EM_DIAGRAM):   * NODE: Trans;
2538713   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2538714   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2538715   +* TOOL: Partition Class;
MPRINT(EM_DIAGRAM):   * TOOL: Partition Class;
2538716   +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
2538717   +* NODE: Part;
MPRINT(EM_DIAGRAM):   * NODE: Part;
2538718   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2538719   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2538720   +* TOOL: Metadata Node;
MPRINT(EM_DIAGRAM):   * TOOL: Metadata Node;
2538721   +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
2538722   +* NODE: Meta;
MPRINT(EM_DIAGRAM):   * NODE: Meta;
2538723   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2538724   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2538725   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
2538726   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
2538727   +* NODE: AutoNeural7;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural7;
2538728   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2538729   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2538730   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2538731   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2538732   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2538733   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2538734   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2538735   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2538736   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2538737   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2538738   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2538739   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2538740   +LENGTH _WARN_ $4
2538741   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
2538742   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2538743   +
2538744   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
2538745   +
2538746   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
2538747   +
2538748   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2538749   +
2538750   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2538751   +
2538752   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2538753   +
2538754   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2538755   +
2538756   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2538757   +
2538758   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2538759   +
2538760   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2538761   +
2538762   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2538763   +
2538764   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2538765   +
2538766   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
2538767   +
2538768   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2538769   +
2538770   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2538771   +
2538772   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
2538773   +
2538774   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2538775   +
2538776   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2538777   +
2538778   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2538779   +
2538780   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2538781   +
2538782   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
2538783   +
2538784   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2538785   +
2538786   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2538787   +
2538788   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2538789   +
2538790   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2538791   +
2538792   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2538793   +
2538794   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2538795   +
2538796   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2538797   +
2538798   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2538799   +
2538800   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
2538801   +
2538802   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2538803   +
2538804   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2538805   +
2538806   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2538807   +
2538808   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2538809   +
2538810   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2538811   +
2538812   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2538813   +
2538814   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2538815   +
2538816   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2538817   +
2538818   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
2538819   +
2538820   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
2538821   +
2538822   +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
2538823   +
2538824   +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
2538825   +
2538826   +      label H1x3_1 = 'Hidden: H1x3_=1' ;
MPRINT(EM_DIAGRAM):   label H1x3_1 = 'Hidden: H1x3_=1' ;
2538827   +
2538828   +      label H1x3_2 = 'Hidden: H1x3_=2' ;
MPRINT(EM_DIAGRAM):   label H1x3_2 = 'Hidden: H1x3_=2' ;
2538829   +
2538830   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2538831   +
2538832   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2538833   +
2538834   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2538835   +
2538836   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2538837   +
2538838   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2538839   +
2538840   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2538841   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2538842   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2538843   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2538844   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2538845   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2538846   +end;
MPRINT(EM_DIAGRAM):   end;
2538847   +else do;
MPRINT(EM_DIAGRAM):   else do;
2538848   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2538849   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2538850   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2538851   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2538852   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2538853   +   end;
MPRINT(EM_DIAGRAM):   end;
2538854   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2538855   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2538856   +   end;
MPRINT(EM_DIAGRAM):   end;
2538857   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2538858   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2538859   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2538860   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2538861   +   end;
MPRINT(EM_DIAGRAM):   end;
2538862   +end;
MPRINT(EM_DIAGRAM):   end;
2538863   +
2538864   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2538865   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2538866   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2538867   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2538868   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2538869   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2538870   +end;
MPRINT(EM_DIAGRAM):   end;
2538871   +else do;
MPRINT(EM_DIAGRAM):   else do;
2538872   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2538873   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2538874   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2538875   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2538876   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2538877   +   end;
MPRINT(EM_DIAGRAM):   end;
2538878   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2538879   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2538880   +   end;
MPRINT(EM_DIAGRAM):   end;
2538881   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2538882   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2538883   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2538884   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2538885   +   end;
MPRINT(EM_DIAGRAM):   end;
2538886   +end;
MPRINT(EM_DIAGRAM):   end;
2538887   +
2538888   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2538889   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2538890   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2538891   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2538892   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2538893   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2538894   +end;
MPRINT(EM_DIAGRAM):   end;
2538895   +else do;
MPRINT(EM_DIAGRAM):   else do;
2538896   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2538897   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2538898   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2538899   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2538900   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2538901   +   end;
MPRINT(EM_DIAGRAM):   end;
2538902   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2538903   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2538904   +   end;
MPRINT(EM_DIAGRAM):   end;
2538905   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2538906   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2538907   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2538908   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2538909   +   end;
MPRINT(EM_DIAGRAM):   end;
2538910   +end;
MPRINT(EM_DIAGRAM):   end;
2538911   +
2538912   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2538913   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2538914   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2538915   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2538916   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2538917   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2538918   +end;
MPRINT(EM_DIAGRAM):   end;
2538919   +else do;
MPRINT(EM_DIAGRAM):   else do;
2538920   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2538921   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2538922   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2538923   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2538924   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2538925   +   end;
MPRINT(EM_DIAGRAM):   end;
2538926   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2538927   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2538928   +   end;
MPRINT(EM_DIAGRAM):   end;
2538929   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2538930   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2538931   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2538932   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2538933   +   end;
MPRINT(EM_DIAGRAM):   end;
2538934   +end;
MPRINT(EM_DIAGRAM):   end;
2538935   +
2538936   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2538937   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2538938   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2538939   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2538940   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2538941   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2538942   +end;
MPRINT(EM_DIAGRAM):   end;
2538943   +else do;
MPRINT(EM_DIAGRAM):   else do;
2538944   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2538945   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2538946   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2538947   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2538948   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2538949   +   end;
MPRINT(EM_DIAGRAM):   end;
2538950   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2538951   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2538952   +   end;
MPRINT(EM_DIAGRAM):   end;
2538953   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2538954   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2538955   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2538956   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2538957   +   end;
MPRINT(EM_DIAGRAM):   end;
2538958   +end;
MPRINT(EM_DIAGRAM):   end;
2538959   +
2538960   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2538961   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2538962   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2538963   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2538964   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2538965   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2538966   +end;
MPRINT(EM_DIAGRAM):   end;
2538967   +else do;
MPRINT(EM_DIAGRAM):   else do;
2538968   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2538969   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2538970   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2538971   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2538972   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2538973   +   end;
MPRINT(EM_DIAGRAM):   end;
2538974   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2538975   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2538976   +   end;
MPRINT(EM_DIAGRAM):   end;
2538977   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2538978   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2538979   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2538980   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2538981   +   end;
MPRINT(EM_DIAGRAM):   end;
2538982   +end;
MPRINT(EM_DIAGRAM):   end;
2538983   +
2538984   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
2538985   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
2538986   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
2538987   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2538988   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2538989   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2538990   +end;
MPRINT(EM_DIAGRAM):   end;
2538991   +else do;
MPRINT(EM_DIAGRAM):   else do;
2538992   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2538993   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
2538994   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2538995   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
2538996   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
2538997   +   end;
MPRINT(EM_DIAGRAM):   end;
2538998   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
2538999   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
2539000   +   end;
MPRINT(EM_DIAGRAM):   end;
2539001   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2539002   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2539003   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2539004   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2539005   +   end;
MPRINT(EM_DIAGRAM):   end;
2539006   +end;
MPRINT(EM_DIAGRAM):   end;
2539007   +
2539008   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2539009   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
2539010   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2539011   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2539012   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2539013   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2539014   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2539015   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2539016   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2539017   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2539018   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2539019   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2539020   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2539021   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2539022   +end;
MPRINT(EM_DIAGRAM):   end;
2539023   +else do;
MPRINT(EM_DIAGRAM):   else do;
2539024   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2539025   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2539026   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2539027   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2539028   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2539029   +   end;
MPRINT(EM_DIAGRAM):   end;
2539030   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2539031   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2539032   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2539033   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2539034   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2539035   +   end;
MPRINT(EM_DIAGRAM):   end;
2539036   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2539037   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2539038   +   end;
MPRINT(EM_DIAGRAM):   end;
2539039   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2539040   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2539041   +   end;
MPRINT(EM_DIAGRAM):   end;
2539042   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2539043   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2539044   +   end;
MPRINT(EM_DIAGRAM):   end;
2539045   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2539046   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2539047   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2539048   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2539049   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2539050   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2539051   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2539052   +   end;
MPRINT(EM_DIAGRAM):   end;
2539053   +end;
MPRINT(EM_DIAGRAM):   end;
2539054   +
2539055   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2539056   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2539057   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
2539058   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2539059   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2539060   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2539061   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2539062   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2539063   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2539064   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2539065   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2539066   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2539067   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2539068   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2539069   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2539070   +end;
MPRINT(EM_DIAGRAM):   end;
2539071   +else do;
MPRINT(EM_DIAGRAM):   else do;
2539072   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2539073   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2539074   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2539075   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2539076   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2539077   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2539078   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2539079   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2539080   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2539081   +         end;
MPRINT(EM_DIAGRAM):   end;
2539082   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2539083   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2539084   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2539085   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2539086   +            end;
MPRINT(EM_DIAGRAM):   end;
2539087   +         end;
MPRINT(EM_DIAGRAM):   end;
2539088   +      end;
MPRINT(EM_DIAGRAM):   end;
2539089   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2539090   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2539091   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2539092   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2539093   +         end;
MPRINT(EM_DIAGRAM):   end;
2539094   +      end;
MPRINT(EM_DIAGRAM):   end;
2539095   +   end;
MPRINT(EM_DIAGRAM):   end;
2539096   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2539097   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2539098   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2539099   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2539100   +      end;
MPRINT(EM_DIAGRAM):   end;
2539101   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2539102   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2539103   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2539104   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2539105   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2539106   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2539107   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2539108   +         end;
MPRINT(EM_DIAGRAM):   end;
2539109   +      end;
MPRINT(EM_DIAGRAM):   end;
2539110   +   end;
MPRINT(EM_DIAGRAM):   end;
2539111   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2539112   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2539113   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2539114   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2539115   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2539116   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2539117   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2539118   +   end;
MPRINT(EM_DIAGRAM):   end;
2539119   +end;
MPRINT(EM_DIAGRAM):   end;
2539120   +
2539121   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2539122   +*** Checking missing input Interval
2539123   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2539124   +
2539125   +IF NMISS(
2539126   +   AcceptedCmpTotal ,
2539127   +   Age ,
2539128   +   Frq ,
2539129   +   Income ,
2539130   +   Kidhome ,
2539131   +   Mnt ,
2539132   +   MntFishProducts ,
2539133   +   MntFruits ,
2539134   +   MntGoldProds ,
2539135   +   MntMeatProducts ,
2539136   +   MntSweetProducts ,
2539137   +   MntWines ,
2539138   +   MonthsAsCustomer ,
2539139   +   NumCatalogPurchases ,
2539140   +   NumDealsPurchases ,
2539141   +   NumDistPurchases ,
2539142   +   NumStorePurchases ,
2539143   +   NumWebPurchases ,
2539144   +   NumWebVisitsMonth ,
2539145   +   RFMstat ,
2539146   +   RMntFrq ,
2539147   +   Recency ,
2539148   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
2539149   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2539150   +
2539151   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2539152   +END;
MPRINT(EM_DIAGRAM):   END;
2539153   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2539154   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
2539155   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2539156   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2539157   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2539158   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
2539159   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2539160   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2539161   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2539162   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2539163   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2539164   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2539165   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2539166   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2539167   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2539168   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2539169   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2539170   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
2539171   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2539172   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2539173   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2539174   +   S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2539175   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 *
MonthsAsCustomer ;
2539176   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2539177   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
2539178   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2539179   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2539180   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2539181   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
2539182   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2539183   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
2539184   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2539185   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
2539186   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2539187   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2539188   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2539189   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2539190   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2539191   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2539192   +END;
MPRINT(EM_DIAGRAM):   END;
2539193   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2539194   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2539195   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2539196   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
2539197   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
2539198   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2539199   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
2539200   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2539201   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2539202   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2539203   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2539204   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2539205   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2539206   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2539207   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2539208   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2539209   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2539210   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2539211   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2539212   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2539213   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2539214   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2539215   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
2539216   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2539217   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2539218   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
2539219   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2539220   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2539221   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2539222   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2539223   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2539224   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
2539225   +   ELSE S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2539226   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 *
MonthsAsCustomer ;
2539227   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2539228   +   ELSE S_NumCatalogPurchases
2539229   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2539230   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
2539231   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2539232   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2539233   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2539234   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
2539235   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2539236   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
2539237   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2539238   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2539239   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
2539240   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2539241   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2539242   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
2539243   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2539244   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2539245   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2539246   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2539247   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2539248   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
2539249   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2539250   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2539251   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2539252   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2539253   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2539254   +END;
MPRINT(EM_DIAGRAM):   END;
2539255   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2539256   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
2539257   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2539258   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2539259   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
2539260   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2539261   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2539262   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
2539263   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2539264   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2539265   +   H1x1_1  =     0.26454269681311 * S_AcceptedCmpTotal
2539266   +          +    -0.01281904987956 * S_Age  +    -0.19309516267581 * S_Frq
2539267   +          +    -0.19077579202378 * S_Income  +      0.1806651018562 *
2539268   +        S_Kidhome  +    -0.31002612826472 * S_Mnt  +    -0.05901796512011 *
2539269   +        S_MntFishProducts  +    -0.03760930101165 * S_MntFruits
2539270   +          +     0.01720900715043 * S_MntGoldProds  +     0.21472292961422 *
2539271   +        S_MntMeatProducts  +    -0.02880706568684 * S_MntSweetProducts
2539272   +          +    -0.37993583170844 * S_MntWines  +    -0.00848444156361 *
2539273   +        S_MonthsAsCustomer  +     0.15939611818942 * S_NumCatalogPurchases
2539274   +          +     0.08390531145773 * S_NumDealsPurchases
2539275   +          +    -0.29505970645775 * S_NumDistPurchases
2539276   +          +    -0.13820571170194 * S_NumStorePurchases
2539277   +          +     0.11468011313368 * S_NumWebPurchases
2539278   +          +    -0.18421241371843 * S_NumWebVisitsMonth
2539279   +          +     0.11564064971509 * S_RFMstat  +    -0.02223928001432 *
2539280   +        S_RMntFrq  +     0.18022777532589 * S_Recency
2539281   +          +     0.14654831145379 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.26454269681311 * S_AcceptedCmpTotal + -0.01281904987956 *
S_Age + -0.19309516267581 * S_Frq + -0.19077579202378 * S_Income + 0.1806651018562 * S_Kidhome
+ -0.31002612826472 * S_Mnt + -0.05901796512011 * S_MntFishProducts + -0.03760930101165 *
S_MntFruits + 0.01720900715043 * S_MntGoldProds + 0.21472292961422 * S_MntMeatProducts +
-0.02880706568684 * S_MntSweetProducts + -0.37993583170844 * S_MntWines + -0.00848444156361 *
S_MonthsAsCustomer + 0.15939611818942 * S_NumCatalogPurchases + 0.08390531145773 *
S_NumDealsPurchases + -0.29505970645775 * S_NumDistPurchases + -0.13820571170194 *
S_NumStorePurchases + 0.11468011313368 * S_NumWebPurchases + -0.18421241371843 *
S_NumWebVisitsMonth + 0.11564064971509 * S_RFMstat + -0.02223928001432 * S_RMntFrq +
0.18022777532589 * S_Recency + 0.14654831145379 * S_Teenhome ;
2539282   +   H1x1_2  =     0.27055972468014 * S_AcceptedCmpTotal
2539283   +          +      0.0025862891193 * S_Age  +    -0.07147307366817 * S_Frq
2539284   +          +      0.1883776136263 * S_Income  +    -0.12712510891181 *
2539285   +        S_Kidhome  +    -0.42099927948686 * S_Mnt  +    -0.07047631817862 *
2539286   +        S_MntFishProducts  +    -0.06658475152878 * S_MntFruits
2539287   +          +     0.01943025682869 * S_MntGoldProds  +     0.29481794109465 *
2539288   +        S_MntMeatProducts  +    -0.06573502094591 * S_MntSweetProducts
2539289   +          +    -0.46266722725002 * S_MntWines  +    -0.00472333181469 *
2539290   +        S_MonthsAsCustomer  +     0.35081452017576 * S_NumCatalogPurchases
2539291   +          +     0.18009076035363 * S_NumDealsPurchases
2539292   +          +     0.03853861006587 * S_NumDistPurchases
2539293   +          +    -0.05118063952874 * S_NumStorePurchases
2539294   +          +    -0.03282286120473 * S_NumWebPurchases
2539295   +          +     0.31160900419026 * S_NumWebVisitsMonth
2539296   +          +     0.08027884378429 * S_RFMstat  +     0.39057239541393 *
2539297   +        S_RMntFrq  +    -0.34796767111274 * S_Recency
2539298   +          +    -0.12099758522271 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.27055972468014 * S_AcceptedCmpTotal + 0.0025862891193 * S_Age
+ -0.07147307366817 * S_Frq + 0.1883776136263 * S_Income + -0.12712510891181 * S_Kidhome +
-0.42099927948686 * S_Mnt + -0.07047631817862 * S_MntFishProducts + -0.06658475152878 *
S_MntFruits + 0.01943025682869 * S_MntGoldProds + 0.29481794109465 * S_MntMeatProducts +
-0.06573502094591 * S_MntSweetProducts + -0.46266722725002 * S_MntWines + -0.00472333181469 *
S_MonthsAsCustomer + 0.35081452017576 * S_NumCatalogPurchases + 0.18009076035363 *
S_NumDealsPurchases + 0.03853861006587 * S_NumDistPurchases + -0.05118063952874 *
S_NumStorePurchases + -0.03282286120473 * S_NumWebPurchases + 0.31160900419026 *
S_NumWebVisitsMonth + 0.08027884378429 * S_RFMstat + 0.39057239541393 * S_RMntFrq +
-0.34796767111274 * S_Recency + -0.12099758522271 * S_Teenhome ;
2539299   +   H1x1_1  = H1x1_1  +     0.12539246465239 * AcceptedCmp10
2539300   +          +     0.38473652869745 * AcceptedCmp20  +     0.29820983391886 *
2539301   +        AcceptedCmp30  +     0.29085092779792 * AcceptedCmp40
2539302   +          +     0.18918195914981 * AcceptedCmp50  +    -0.26812516781697 *
2539303   +        Complain0  +    -0.08804110897148 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.12539246465239 * AcceptedCmp10 + 0.38473652869745 *
AcceptedCmp20 + 0.29820983391886 * AcceptedCmp30 + 0.29085092779792 * AcceptedCmp40 +
0.18918195914981 * AcceptedCmp50 + -0.26812516781697 * Complain0 + -0.08804110897148 *
HigherEducationBinary0 ;
2539304   +   H1x1_2  = H1x1_2  +    -0.02312897825565 * AcceptedCmp10
2539305   +          +     0.03909481703523 * AcceptedCmp20  +     0.02531081539721 *
2539306   +        AcceptedCmp30  +     0.03109641300151 * AcceptedCmp40
2539307   +          +     0.01985718189621 * AcceptedCmp50  +     0.13425456375085 *
2539308   +        Complain0  +    -0.08222486590117 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.02312897825565 * AcceptedCmp10 + 0.03909481703523 *
AcceptedCmp20 + 0.02531081539721 * AcceptedCmp30 + 0.03109641300151 * AcceptedCmp40 +
0.01985718189621 * AcceptedCmp50 + 0.13425456375085 * Complain0 + -0.08222486590117 *
HigherEducationBinary0 ;
2539309   +   H1x1_1  = H1x1_1  +    -0.01975862863669 * Education2n_Cycle
2539310   +          +     0.14654730697956 * EducationBasic  +    -0.00459515646452 *
2539311   +        EducationGraduation  +     0.01586948449127 * EducationMaster
2539312   +          +    -0.04750981393889 * Marital_StatusDivorced
2539313   +          +     0.28216925676677 * Marital_StatusMarried
2539314   +          +    -0.20757827413964 * Marital_StatusSingle
2539315   +          +     0.22622509024122 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.01975862863669 * Education2n_Cycle +
0.14654730697956 * EducationBasic + -0.00459515646452 * EducationGraduation + 0.01586948449127
* EducationMaster + -0.04750981393889 * Marital_StatusDivorced + 0.28216925676677 *
Marital_StatusMarried + -0.20757827413964 * Marital_StatusSingle + 0.22622509024122 *
Marital_StatusTogether ;
2539316   +   H1x1_2  = H1x1_2  +     0.12009608969049 * Education2n_Cycle
2539317   +          +     0.01793460710056 * EducationBasic  +    -0.04257710051346 *
2539318   +        EducationGraduation  +    -0.06975725710115 * EducationMaster
2539319   +          +     0.05981919620577 * Marital_StatusDivorced
2539320   +          +    -0.17161573846062 * Marital_StatusMarried
2539321   +          +     0.15869440681091 * Marital_StatusSingle
2539322   +          +    -0.13282372850158 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.12009608969049 * Education2n_Cycle +
0.01793460710056 * EducationBasic + -0.04257710051346 * EducationGraduation +
-0.06975725710115 * EducationMaster + 0.05981919620577 * Marital_StatusDivorced +
-0.17161573846062 * Marital_StatusMarried + 0.15869440681091 * Marital_StatusSingle +
-0.13282372850158 * Marital_StatusTogether ;
2539323   +   H1x1_1  =     0.87962277715971 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.87962277715971 + H1x1_1 ;
2539324   +   H1x1_2  =    -0.62570339696782 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.62570339696782 + H1x1_2 ;
2539325   +   H1x1_1  = SIN(H1x1_1 );
MPRINT(EM_DIAGRAM):   H1x1_1 = SIN(H1x1_1 );
2539326   +   H1x1_2  = SIN(H1x1_2 );
MPRINT(EM_DIAGRAM):   H1x1_2 = SIN(H1x1_2 );
2539327   +END;
MPRINT(EM_DIAGRAM):   END;
2539328   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2539329   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
2539330   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
2539331   +END;
MPRINT(EM_DIAGRAM):   END;
2539332   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2539333   +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
2539334   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2539335   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2539336   +   H1x2_1  =      0.1719390672121 * S_AcceptedCmpTotal
2539337   +          +     0.23586839288361 * S_Age  +    -1.85384134180372 * S_Frq
2539338   +          +    -0.43561758063577 * S_Income  +     -2.5581498901473 *
2539339   +        S_Kidhome  +      1.7031888248428 * S_Mnt  +     0.84982621124736 *
2539340   +        S_MntFishProducts  +     0.25990173458485 * S_MntFruits
2539341   +          +    -2.80730469703961 * S_MntGoldProds  +     0.64923500711702 *
2539342   +        S_MntMeatProducts  +     0.27458645458502 * S_MntSweetProducts
2539343   +          +    -0.47723589182372 * S_MntWines  +    -0.66777488145507 *
2539344   +        S_MonthsAsCustomer  +    -0.46364414558282 * S_NumCatalogPurchases
2539345   +          +     0.00741910846933 * S_NumDealsPurchases
2539346   +          +       1.334289252268 * S_NumDistPurchases
2539347   +          +    -0.29851567180932 * S_NumStorePurchases
2539348   +          +    -0.52115313259666 * S_NumWebPurchases
2539349   +          +     0.93907168501909 * S_NumWebVisitsMonth
2539350   +          +    -0.26126881318451 * S_RFMstat  +     -1.3003763542929 *
2539351   +        S_RMntFrq  +    -0.12807368149309 * S_Recency
2539352   +          +    -0.21296116974623 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.1719390672121 * S_AcceptedCmpTotal + 0.23586839288361 * S_Age
+ -1.85384134180372 * S_Frq + -0.43561758063577 * S_Income + -2.5581498901473 * S_Kidhome +
1.7031888248428 * S_Mnt + 0.84982621124736 * S_MntFishProducts + 0.25990173458485 *
S_MntFruits + -2.80730469703961 * S_MntGoldProds + 0.64923500711702 * S_MntMeatProducts +
0.27458645458502 * S_MntSweetProducts + -0.47723589182372 * S_MntWines + -0.66777488145507 *
S_MonthsAsCustomer + -0.46364414558282 * S_NumCatalogPurchases + 0.00741910846933 *
S_NumDealsPurchases + 1.334289252268 * S_NumDistPurchases + -0.29851567180932 *
S_NumStorePurchases + -0.52115313259666 * S_NumWebPurchases + 0.93907168501909 *
S_NumWebVisitsMonth + -0.26126881318451 * S_RFMstat + -1.3003763542929 * S_RMntFrq +
-0.12807368149309 * S_Recency + -0.21296116974623 * S_Teenhome ;
2539353   +   H1x2_2  =     0.30897763700303 * S_AcceptedCmpTotal
2539354   +          +    -0.77727886396317 * S_Age  +    -0.79298582494973 * S_Frq
2539355   +          +    -1.73199353738093 * S_Income  +     1.12984956989288 *
2539356   +        S_Kidhome  +    -1.36701096993984 * S_Mnt  +    -0.21063950702424 *
2539357   +        S_MntFishProducts  +    -0.20027336686257 * S_MntFruits
2539358   +          +    -0.06955810418489 * S_MntGoldProds  +     0.16672767423533 *
2539359   +        S_MntMeatProducts  +    -1.56675269740541 * S_MntSweetProducts
2539360   +          +     1.85366479127485 * S_MntWines  +    -0.58178621903094 *
2539361   +        S_MonthsAsCustomer  +     1.31024619253935 * S_NumCatalogPurchases
2539362   +          +     1.60427001186844 * S_NumDealsPurchases
2539363   +          +    -0.18447618033353 * S_NumDistPurchases
2539364   +          +    -1.29966073003539 * S_NumStorePurchases
2539365   +          +    -1.12373457341536 * S_NumWebPurchases
2539366   +          +     1.46099221440494 * S_NumWebVisitsMonth
2539367   +          +     0.17795038564406 * S_RFMstat  +    -0.82372068140832 *
2539368   +        S_RMntFrq  +      0.4480370534729 * S_Recency
2539369   +          +     0.19272737691538 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 0.30897763700303 * S_AcceptedCmpTotal + -0.77727886396317 *
S_Age + -0.79298582494973 * S_Frq + -1.73199353738093 * S_Income + 1.12984956989288 *
S_Kidhome + -1.36701096993984 * S_Mnt + -0.21063950702424 * S_MntFishProducts +
-0.20027336686257 * S_MntFruits + -0.06955810418489 * S_MntGoldProds + 0.16672767423533 *
S_MntMeatProducts + -1.56675269740541 * S_MntSweetProducts + 1.85366479127485 * S_MntWines +
-0.58178621903094 * S_MonthsAsCustomer + 1.31024619253935 * S_NumCatalogPurchases +
1.60427001186844 * S_NumDealsPurchases + -0.18447618033353 * S_NumDistPurchases +
-1.29966073003539 * S_NumStorePurchases + -1.12373457341536 * S_NumWebPurchases +
1.46099221440494 * S_NumWebVisitsMonth + 0.17795038564406 * S_RFMstat + -0.82372068140832 *
S_RMntFrq + 0.4480370534729 * S_Recency + 0.19272737691538 * S_Teenhome ;
2539370   +   H1x2_1  = H1x2_1  +     -0.6569942252053 * AcceptedCmp10
2539371   +          +    -0.89152555599538 * AcceptedCmp20  +     1.00488730476017 *
2539372   +        AcceptedCmp30  +     0.34286042692068 * AcceptedCmp40
2539373   +          +    -1.19198820362508 * AcceptedCmp50  +    -0.86571531914686 *
2539374   +        Complain0  +     0.14303136037365 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.6569942252053 * AcceptedCmp10 + -0.89152555599538 *
AcceptedCmp20 + 1.00488730476017 * AcceptedCmp30 + 0.34286042692068 * AcceptedCmp40 +
-1.19198820362508 * AcceptedCmp50 + -0.86571531914686 * Complain0 + 0.14303136037365 *
HigherEducationBinary0 ;
2539375   +   H1x2_2  = H1x2_2  +     1.79481763784518 * AcceptedCmp10
2539376   +          +    -2.85912280013336 * AcceptedCmp20  +     0.16890012708431 *
2539377   +        AcceptedCmp30  +     0.94639083182751 * AcceptedCmp40
2539378   +          +    -0.62141828005946 * AcceptedCmp50  +    -0.39098882491277 *
2539379   +        Complain0  +     0.85700787946581 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 1.79481763784518 * AcceptedCmp10 + -2.85912280013336 *
AcceptedCmp20 + 0.16890012708431 * AcceptedCmp30 + 0.94639083182751 * AcceptedCmp40 +
-0.62141828005946 * AcceptedCmp50 + -0.39098882491277 * Complain0 + 0.85700787946581 *
HigherEducationBinary0 ;
2539380   +   H1x2_1  = H1x2_1  +      0.0737054452993 * Education2n_Cycle
2539381   +          +       0.362372261752 * EducationBasic  +      -1.485941295677 *
2539382   +        EducationGraduation  +    -0.81257694655594 * EducationMaster
2539383   +          +     0.59819559998538 * Marital_StatusDivorced
2539384   +          +     0.92957772553633 * Marital_StatusMarried
2539385   +          +    -1.11796266958894 * Marital_StatusSingle
2539386   +          +     -2.0576132087002 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 0.0737054452993 * Education2n_Cycle + 0.362372261752 *
EducationBasic + -1.485941295677 * EducationGraduation + -0.81257694655594 * EducationMaster +
0.59819559998538 * Marital_StatusDivorced + 0.92957772553633 * Marital_StatusMarried +
-1.11796266958894 * Marital_StatusSingle + -2.0576132087002 * Marital_StatusTogether ;
2539387   +   H1x2_2  = H1x2_2  +    -1.10016528859962 * Education2n_Cycle
2539388   +          +    -1.46816646165468 * EducationBasic  +    -0.11241499152788 *
2539389   +        EducationGraduation  +    -0.65110715251273 * EducationMaster
2539390   +          +      1.0870909562212 * Marital_StatusDivorced
2539391   +          +     1.50333961797515 * Marital_StatusMarried
2539392   +          +    -1.41407780765932 * Marital_StatusSingle
2539393   +          +    -0.52528072358697 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -1.10016528859962 * Education2n_Cycle +
-1.46816646165468 * EducationBasic + -0.11241499152788 * EducationGraduation +
-0.65110715251273 * EducationMaster + 1.0870909562212 * Marital_StatusDivorced +
1.50333961797515 * Marital_StatusMarried + -1.41407780765932 * Marital_StatusSingle +
-0.52528072358697 * Marital_StatusTogether ;
2539394   +   H1x2_1  =     1.46376024534028 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.46376024534028 + H1x2_1 ;
2539395   +   H1x2_2  =    -0.21341526379366 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -0.21341526379366 + H1x2_2 ;
2539396   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
2539397   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
2539398   +   H1x2_1  = EXP(MIN(-0.5 * H1x2_1 **2, _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x2_1 = EXP(MIN(-0.5 * H1x2_1 **2, _EXP_BAR));
2539399   +   H1x2_2  = EXP(MIN(-0.5 * H1x2_2 **2, _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x2_2 = EXP(MIN(-0.5 * H1x2_2 **2, _EXP_BAR));
2539400   +END;
MPRINT(EM_DIAGRAM):   END;
2539401   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2539402   +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
2539403   +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
2539404   +END;
MPRINT(EM_DIAGRAM):   END;
2539405   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2539406   +*** Writing the Node H1x3_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x3_ ;
2539407   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2539408   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2539409   +   H1x3_1  =     0.29299707972123 * S_AcceptedCmpTotal
2539410   +          +     1.39797329466471 * S_Age  +    -2.02673480388837 * S_Frq
2539411   +          +    -1.09682777516542 * S_Income  +    -1.22241109888643 *
2539412   +        S_Kidhome  +    -1.35766076466324 * S_Mnt  +    -2.90812690982576 *
2539413   +        S_MntFishProducts  +    -0.48174923069843 * S_MntFruits
2539414   +          +     1.57335575145195 * S_MntGoldProds  +    -0.55248873552176 *
2539415   +        S_MntMeatProducts  +     0.54536808091745 * S_MntSweetProducts
2539416   +          +    -0.41516162035296 * S_MntWines  +     0.07715050596116 *
2539417   +        S_MonthsAsCustomer  +    -2.18785324142159 * S_NumCatalogPurchases
2539418   +          +     -1.1174504455343 * S_NumDealsPurchases
2539419   +          +    -0.18561253113498 * S_NumDistPurchases
2539420   +          +    -0.35231054612792 * S_NumStorePurchases
2539421   +          +      0.9249490354172 * S_NumWebPurchases
2539422   +          +    -0.79868535147175 * S_NumWebVisitsMonth
2539423   +          +    -0.17158151681124 * S_RFMstat  +     -0.9870286843901 *
2539424   +        S_RMntFrq  +     0.62439123699986 * S_Recency
2539425   +          +    -0.45845377794308 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 0.29299707972123 * S_AcceptedCmpTotal + 1.39797329466471 *
S_Age + -2.02673480388837 * S_Frq + -1.09682777516542 * S_Income + -1.22241109888643 *
S_Kidhome + -1.35766076466324 * S_Mnt + -2.90812690982576 * S_MntFishProducts +
-0.48174923069843 * S_MntFruits + 1.57335575145195 * S_MntGoldProds + -0.55248873552176 *
S_MntMeatProducts + 0.54536808091745 * S_MntSweetProducts + -0.41516162035296 * S_MntWines +
0.07715050596116 * S_MonthsAsCustomer + -2.18785324142159 * S_NumCatalogPurchases +
-1.1174504455343 * S_NumDealsPurchases + -0.18561253113498 * S_NumDistPurchases +
-0.35231054612792 * S_NumStorePurchases + 0.9249490354172 * S_NumWebPurchases +
-0.79868535147175 * S_NumWebVisitsMonth + -0.17158151681124 * S_RFMstat + -0.9870286843901 *
S_RMntFrq + 0.62439123699986 * S_Recency + -0.45845377794308 * S_Teenhome ;
2539426   +   H1x3_2  =    -1.07483179793421 * S_AcceptedCmpTotal
2539427   +          +     1.03558600048684 * S_Age  +     1.11497695424161 * S_Frq
2539428   +          +     0.27297296926116 * S_Income  +     0.77036019999023 *
2539429   +        S_Kidhome  +     0.02567848304605 * S_Mnt  +     0.38661977628442 *
2539430   +        S_MntFishProducts  +    -0.36751750771945 * S_MntFruits
2539431   +          +     0.93924107558212 * S_MntGoldProds  +     0.93046859422523 *
2539432   +        S_MntMeatProducts  +    -0.46124679979068 * S_MntSweetProducts
2539433   +          +    -0.45348234529786 * S_MntWines  +     1.60057890623864 *
2539434   +        S_MonthsAsCustomer  +    -1.74657448073162 * S_NumCatalogPurchases
2539435   +          +     1.05434863590054 * S_NumDealsPurchases
2539436   +          +    -0.73255174632068 * S_NumDistPurchases
2539437   +          +     0.53949953455044 * S_NumStorePurchases
2539438   +          +    -0.61709467816649 * S_NumWebPurchases
2539439   +          +     1.36235282484348 * S_NumWebVisitsMonth
2539440   +          +     -0.0352720913953 * S_RFMstat  +     0.14001475375682 *
2539441   +        S_RMntFrq  +    -0.24276831608869 * S_Recency
2539442   +          +     0.09762798365722 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_2 = -1.07483179793421 * S_AcceptedCmpTotal + 1.03558600048684 *
S_Age + 1.11497695424161 * S_Frq + 0.27297296926116 * S_Income + 0.77036019999023 * S_Kidhome
+ 0.02567848304605 * S_Mnt + 0.38661977628442 * S_MntFishProducts + -0.36751750771945 *
S_MntFruits + 0.93924107558212 * S_MntGoldProds + 0.93046859422523 * S_MntMeatProducts +
-0.46124679979068 * S_MntSweetProducts + -0.45348234529786 * S_MntWines + 1.60057890623864 *
S_MonthsAsCustomer + -1.74657448073162 * S_NumCatalogPurchases + 1.05434863590054 *
S_NumDealsPurchases + -0.73255174632068 * S_NumDistPurchases + 0.53949953455044 *
S_NumStorePurchases + -0.61709467816649 * S_NumWebPurchases + 1.36235282484348 *
S_NumWebVisitsMonth + -0.0352720913953 * S_RFMstat + 0.14001475375682 * S_RMntFrq +
-0.24276831608869 * S_Recency + 0.09762798365722 * S_Teenhome ;
2539443   +   H1x3_1  = H1x3_1  +    -0.94208577947628 * AcceptedCmp10
2539444   +          +     -0.5233017415423 * AcceptedCmp20  +    -0.76900164563331 *
2539445   +        AcceptedCmp30  +    -0.79512141055877 * AcceptedCmp40
2539446   +          +     0.20126599116957 * AcceptedCmp50  +    -0.43046555689873 *
2539447   +        Complain0  +     0.31565229685815 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + -0.94208577947628 * AcceptedCmp10 + -0.5233017415423 *
AcceptedCmp20 + -0.76900164563331 * AcceptedCmp30 + -0.79512141055877 * AcceptedCmp40 +
0.20126599116957 * AcceptedCmp50 + -0.43046555689873 * Complain0 + 0.31565229685815 *
HigherEducationBinary0 ;
2539448   +   H1x3_2  = H1x3_2  +    -1.24961064002454 * AcceptedCmp10
2539449   +          +    -0.89859693224833 * AcceptedCmp20  +     1.15884958881232 *
2539450   +        AcceptedCmp30  +     0.38250389164472 * AcceptedCmp40
2539451   +          +     0.47123004358879 * AcceptedCmp50  +     -2.1232679844098 *
2539452   +        Complain0  +     0.97226091069674 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 + -1.24961064002454 * AcceptedCmp10 + -0.89859693224833
* AcceptedCmp20 + 1.15884958881232 * AcceptedCmp30 + 0.38250389164472 * AcceptedCmp40 +
0.47123004358879 * AcceptedCmp50 + -2.1232679844098 * Complain0 + 0.97226091069674 *
HigherEducationBinary0 ;
2539453   +   H1x3_1  = H1x3_1  +    -0.07500306665919 * Education2n_Cycle
2539454   +          +     0.04122924311058 * EducationBasic  +    -0.49410102102951 *
2539455   +        EducationGraduation  +    -0.45477734340809 * EducationMaster
2539456   +          +     0.22253248036322 * Marital_StatusDivorced
2539457   +          +    -1.72455332745001 * Marital_StatusMarried
2539458   +          +     0.57787272107232 * Marital_StatusSingle
2539459   +          +     0.16267074825086 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + -0.07500306665919 * Education2n_Cycle +
0.04122924311058 * EducationBasic + -0.49410102102951 * EducationGraduation +
-0.45477734340809 * EducationMaster + 0.22253248036322 * Marital_StatusDivorced +
-1.72455332745001 * Marital_StatusMarried + 0.57787272107232 * Marital_StatusSingle +
0.16267074825086 * Marital_StatusTogether ;
2539460   +   H1x3_2  = H1x3_2  +    -0.21560233542581 * Education2n_Cycle
2539461   +          +    -0.36476815429069 * EducationBasic  +     1.63334881201349 *
2539462   +        EducationGraduation  +    -1.12620982139344 * EducationMaster
2539463   +          +     0.14637124403046 * Marital_StatusDivorced
2539464   +          +     0.18905186437528 * Marital_StatusMarried
2539465   +          +     0.00511958458521 * Marital_StatusSingle
2539466   +          +      -0.915980703129 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 + -0.21560233542581 * Education2n_Cycle +
-0.36476815429069 * EducationBasic + 1.63334881201349 * EducationGraduation +
-1.12620982139344 * EducationMaster + 0.14637124403046 * Marital_StatusDivorced +
0.18905186437528 * Marital_StatusMarried + 0.00511958458521 * Marital_StatusSingle +
-0.915980703129 * Marital_StatusTogether ;
2539467   +   H1x3_1  =     0.54853846322055 + H1x3_1 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 0.54853846322055 + H1x3_1 ;
2539468   +   H1x3_2  =     1.36395858099198 + H1x3_2 ;
MPRINT(EM_DIAGRAM):   H1x3_2 = 1.36395858099198 + H1x3_2 ;
2539469   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
2539470   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
2539471   +   H1x3_1  = EXP(MIN(H1x3_1 , _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x3_1 = EXP(MIN(H1x3_1 , _EXP_BAR));
2539472   +   H1x3_2  = EXP(MIN(H1x3_2 , _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x3_2 = EXP(MIN(H1x3_2 , _EXP_BAR));
2539473   +END;
MPRINT(EM_DIAGRAM):   END;
2539474   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2539475   +   H1x3_1  = .;
MPRINT(EM_DIAGRAM):   H1x3_1 = .;
2539476   +   H1x3_2  = .;
MPRINT(EM_DIAGRAM):   H1x3_2 = .;
2539477   +END;
MPRINT(EM_DIAGRAM):   END;
2539478   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2539479   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2539480   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2539481   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2539482   +   P_DepVar1  =    -10.6892993503201 * H1x1_1  +     16.2938756734008 * H1x1_2
2539483   +         ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -10.6892993503201 * H1x1_1 + 16.2938756734008 * H1x1_2 ;
2539484   +   P_DepVar1  = P_DepVar1  +      1.2332183930826 * H1x2_1
2539485   +          +    -0.85206858106106 * H1x2_2 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 + 1.2332183930826 * H1x2_1 + -0.85206858106106 *
H1x2_2 ;
2539486   +   P_DepVar1  = P_DepVar1  +    -0.00087126688031 * H1x3_1
2539487   +          +    -0.00025812675645 * H1x3_2 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 + -0.00087126688031 * H1x3_1 + -0.00025812675645 *
H1x3_2 ;
2539488   +   P_DepVar1  =     2.20710379818135 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 2.20710379818135 + P_DepVar1 ;
2539489   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2539490   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2539491   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2539492   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2539493   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2539494   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2539495   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2539496   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2539497   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2539498   +END;
MPRINT(EM_DIAGRAM):   END;
2539499   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2539500   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2539501   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2539502   +END;
MPRINT(EM_DIAGRAM):   END;
2539503   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2539504   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2539505   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2539506   +END;
MPRINT(EM_DIAGRAM):   END;
2539507   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2539508   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2539509   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2539510   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2539511   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2539512   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2539513   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2539514   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2539515   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2539516   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2539517   +END;
MPRINT(EM_DIAGRAM):   END;
2539518   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2539519   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2539520   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2539521   +drop
2539522   +H1x1_1
2539523   +H1x1_2
2539524   +H1x2_1
2539525   +H1x2_2
2539526   +H1x3_1
2539527   +H1x3_2
2539528   +;
MPRINT(EM_DIAGRAM):   drop H1x1_1 H1x1_2 H1x2_1 H1x2_2 H1x3_1 H1x3_2 ;
2539529   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
2539530   +* Renaming variables for AutoNeural7;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural7;
2539531   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2539532   +* Renaming Posterior variables for AutoNeural7;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural7;
2539533   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2539534   +drop AutoNeural7_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural7_P_DepVar1;
2539535   +AutoNeural7_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural7_P_DepVar1 = P_DepVar1;
2539536   +drop AutoNeural7_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural7_P_DepVar0;
2539537   +AutoNeural7_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural7_P_DepVar0 = P_DepVar0;
2539538   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2539539   +* Renaming _WARN_ variable for AutoNeural7;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural7;
2539540   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2539541   +length AutoNeural7_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural7_WARN_ $4;
2539542   +drop AutoNeural7_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural7_WARN_;
2539543   +AutoNeural7_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural7_WARN_ = _WARN_;
2539544   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2539545   +* TOOL: Extension Class;
MPRINT(EM_DIAGRAM):   * TOOL: Extension Class;
2539546   +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
2539547   +* NODE: FIMPORT;
MPRINT(EM_DIAGRAM):   * NODE: FIMPORT;
2539548   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2539549   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2539550   +* TOOL: Statistics Exploration;
MPRINT(EM_DIAGRAM):   * TOOL: Statistics Exploration;
2539551   +* TYPE: EXPLORE;
MPRINT(EM_DIAGRAM):   * TYPE: EXPLORE;
2539552   +* NODE: Stat;
MPRINT(EM_DIAGRAM):   * NODE: Stat;
2539553   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2539554   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2539555   +* TOOL: Filtering;
MPRINT(EM_DIAGRAM):   * TOOL: Filtering;
2539556   +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
2539557   +* NODE: Filter;
MPRINT(EM_DIAGRAM):   * NODE: Filter;
2539558   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2539559   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2539560   +* TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
MPRINT(EM_DIAGRAM):   * TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
2539561   +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
2539562   +* NODE: EMCODE4;
MPRINT(EM_DIAGRAM):   * NODE: EMCODE4;
2539563   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2539564   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2539565   +* TOOL: Transform;
MPRINT(EM_DIAGRAM):   * TOOL: Transform;
2539566   +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
2539567   +* NODE: Trans;
MPRINT(EM_DIAGRAM):   * NODE: Trans;
2539568   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2539569   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2539570   +* TOOL: Partition Class;
MPRINT(EM_DIAGRAM):   * TOOL: Partition Class;
2539571   +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
2539572   +* NODE: Part;
MPRINT(EM_DIAGRAM):   * NODE: Part;
2539573   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2539574   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2539575   +* TOOL: Metadata Node;
MPRINT(EM_DIAGRAM):   * TOOL: Metadata Node;
2539576   +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
2539577   +* NODE: Meta;
MPRINT(EM_DIAGRAM):   * NODE: Meta;
2539578   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2539579   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2539580   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
2539581   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
2539582   +* NODE: AutoNeural8;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural8;
2539583   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2539584   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2539585   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2539586   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2539587   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2539588   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2539589   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2539590   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2539591   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2539592   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2539593   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2539594   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2539595   +LENGTH _WARN_ $4
2539596   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
2539597   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2539598   +
2539599   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
2539600   +
2539601   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
2539602   +
2539603   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2539604   +
2539605   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2539606   +
2539607   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2539608   +
2539609   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2539610   +
2539611   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2539612   +
2539613   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2539614   +
2539615   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2539616   +
2539617   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2539618   +
2539619   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2539620   +
2539621   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
2539622   +
2539623   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2539624   +
2539625   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2539626   +
2539627   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
2539628   +
2539629   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2539630   +
2539631   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2539632   +
2539633   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2539634   +
2539635   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2539636   +
2539637   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
2539638   +
2539639   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2539640   +
2539641   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2539642   +
2539643   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2539644   +
2539645   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2539646   +
2539647   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2539648   +
2539649   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2539650   +
2539651   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2539652   +
2539653   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2539654   +
2539655   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
2539656   +
2539657   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2539658   +
2539659   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2539660   +
2539661   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2539662   +
2539663   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2539664   +
2539665   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2539666   +
2539667   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2539668   +
2539669   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2539670   +
2539671   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2539672   +
2539673   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
2539674   +
2539675   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
2539676   +
2539677   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
2539678   +
2539679   +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
2539680   +
2539681   +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
2539682   +
2539683   +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
2539684   +
2539685   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2539686   +
2539687   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2539688   +
2539689   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2539690   +
2539691   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2539692   +
2539693   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2539694   +
2539695   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2539696   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2539697   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2539698   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2539699   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2539700   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2539701   +end;
MPRINT(EM_DIAGRAM):   end;
2539702   +else do;
MPRINT(EM_DIAGRAM):   else do;
2539703   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2539704   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2539705   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2539706   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2539707   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2539708   +   end;
MPRINT(EM_DIAGRAM):   end;
2539709   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2539710   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2539711   +   end;
MPRINT(EM_DIAGRAM):   end;
2539712   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2539713   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2539714   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2539715   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2539716   +   end;
MPRINT(EM_DIAGRAM):   end;
2539717   +end;
MPRINT(EM_DIAGRAM):   end;
2539718   +
2539719   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2539720   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2539721   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2539722   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2539723   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2539724   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2539725   +end;
MPRINT(EM_DIAGRAM):   end;
2539726   +else do;
MPRINT(EM_DIAGRAM):   else do;
2539727   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2539728   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2539729   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2539730   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2539731   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2539732   +   end;
MPRINT(EM_DIAGRAM):   end;
2539733   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2539734   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2539735   +   end;
MPRINT(EM_DIAGRAM):   end;
2539736   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2539737   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2539738   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2539739   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2539740   +   end;
MPRINT(EM_DIAGRAM):   end;
2539741   +end;
MPRINT(EM_DIAGRAM):   end;
2539742   +
2539743   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2539744   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2539745   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2539746   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2539747   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2539748   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2539749   +end;
MPRINT(EM_DIAGRAM):   end;
2539750   +else do;
MPRINT(EM_DIAGRAM):   else do;
2539751   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2539752   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2539753   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2539754   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2539755   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2539756   +   end;
MPRINT(EM_DIAGRAM):   end;
2539757   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2539758   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2539759   +   end;
MPRINT(EM_DIAGRAM):   end;
2539760   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2539761   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2539762   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2539763   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2539764   +   end;
MPRINT(EM_DIAGRAM):   end;
2539765   +end;
MPRINT(EM_DIAGRAM):   end;
2539766   +
2539767   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2539768   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2539769   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2539770   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2539771   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2539772   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2539773   +end;
MPRINT(EM_DIAGRAM):   end;
2539774   +else do;
MPRINT(EM_DIAGRAM):   else do;
2539775   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2539776   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2539777   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2539778   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2539779   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2539780   +   end;
MPRINT(EM_DIAGRAM):   end;
2539781   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2539782   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2539783   +   end;
MPRINT(EM_DIAGRAM):   end;
2539784   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2539785   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2539786   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2539787   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2539788   +   end;
MPRINT(EM_DIAGRAM):   end;
2539789   +end;
MPRINT(EM_DIAGRAM):   end;
2539790   +
2539791   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2539792   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2539793   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2539794   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2539795   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2539796   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2539797   +end;
MPRINT(EM_DIAGRAM):   end;
2539798   +else do;
MPRINT(EM_DIAGRAM):   else do;
2539799   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2539800   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2539801   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2539802   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2539803   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2539804   +   end;
MPRINT(EM_DIAGRAM):   end;
2539805   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2539806   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2539807   +   end;
MPRINT(EM_DIAGRAM):   end;
2539808   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2539809   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2539810   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2539811   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2539812   +   end;
MPRINT(EM_DIAGRAM):   end;
2539813   +end;
MPRINT(EM_DIAGRAM):   end;
2539814   +
2539815   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2539816   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2539817   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2539818   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2539819   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2539820   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2539821   +end;
MPRINT(EM_DIAGRAM):   end;
2539822   +else do;
MPRINT(EM_DIAGRAM):   else do;
2539823   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2539824   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2539825   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2539826   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2539827   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2539828   +   end;
MPRINT(EM_DIAGRAM):   end;
2539829   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2539830   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2539831   +   end;
MPRINT(EM_DIAGRAM):   end;
2539832   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2539833   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2539834   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2539835   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2539836   +   end;
MPRINT(EM_DIAGRAM):   end;
2539837   +end;
MPRINT(EM_DIAGRAM):   end;
2539838   +
2539839   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
2539840   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
2539841   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
2539842   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2539843   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2539844   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2539845   +end;
MPRINT(EM_DIAGRAM):   end;
2539846   +else do;
MPRINT(EM_DIAGRAM):   else do;
2539847   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2539848   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
2539849   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2539850   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
2539851   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
2539852   +   end;
MPRINT(EM_DIAGRAM):   end;
2539853   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
2539854   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
2539855   +   end;
MPRINT(EM_DIAGRAM):   end;
2539856   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2539857   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2539858   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2539859   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2539860   +   end;
MPRINT(EM_DIAGRAM):   end;
2539861   +end;
MPRINT(EM_DIAGRAM):   end;
2539862   +
2539863   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2539864   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
2539865   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2539866   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2539867   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2539868   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2539869   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2539870   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2539871   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2539872   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2539873   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2539874   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2539875   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2539876   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2539877   +end;
MPRINT(EM_DIAGRAM):   end;
2539878   +else do;
MPRINT(EM_DIAGRAM):   else do;
2539879   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2539880   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2539881   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2539882   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2539883   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2539884   +   end;
MPRINT(EM_DIAGRAM):   end;
2539885   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2539886   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2539887   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2539888   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2539889   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2539890   +   end;
MPRINT(EM_DIAGRAM):   end;
2539891   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2539892   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2539893   +   end;
MPRINT(EM_DIAGRAM):   end;
2539894   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2539895   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2539896   +   end;
MPRINT(EM_DIAGRAM):   end;
2539897   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2539898   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2539899   +   end;
MPRINT(EM_DIAGRAM):   end;
2539900   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2539901   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2539902   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2539903   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2539904   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2539905   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2539906   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2539907   +   end;
MPRINT(EM_DIAGRAM):   end;
2539908   +end;
MPRINT(EM_DIAGRAM):   end;
2539909   +
2539910   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2539911   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2539912   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
2539913   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2539914   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2539915   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2539916   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2539917   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2539918   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2539919   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2539920   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2539921   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2539922   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2539923   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2539924   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2539925   +end;
MPRINT(EM_DIAGRAM):   end;
2539926   +else do;
MPRINT(EM_DIAGRAM):   else do;
2539927   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2539928   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2539929   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2539930   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2539931   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2539932   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2539933   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2539934   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2539935   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2539936   +         end;
MPRINT(EM_DIAGRAM):   end;
2539937   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2539938   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2539939   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2539940   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2539941   +            end;
MPRINT(EM_DIAGRAM):   end;
2539942   +         end;
MPRINT(EM_DIAGRAM):   end;
2539943   +      end;
MPRINT(EM_DIAGRAM):   end;
2539944   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2539945   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2539946   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2539947   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2539948   +         end;
MPRINT(EM_DIAGRAM):   end;
2539949   +      end;
MPRINT(EM_DIAGRAM):   end;
2539950   +   end;
MPRINT(EM_DIAGRAM):   end;
2539951   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2539952   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2539953   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2539954   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2539955   +      end;
MPRINT(EM_DIAGRAM):   end;
2539956   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2539957   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2539958   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2539959   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2539960   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2539961   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2539962   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2539963   +         end;
MPRINT(EM_DIAGRAM):   end;
2539964   +      end;
MPRINT(EM_DIAGRAM):   end;
2539965   +   end;
MPRINT(EM_DIAGRAM):   end;
2539966   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2539967   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2539968   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2539969   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2539970   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2539971   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2539972   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2539973   +   end;
MPRINT(EM_DIAGRAM):   end;
2539974   +end;
MPRINT(EM_DIAGRAM):   end;
2539975   +
2539976   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2539977   +*** Checking missing input Interval
2539978   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2539979   +
2539980   +IF NMISS(
2539981   +   AcceptedCmpTotal ,
2539982   +   Age ,
2539983   +   Frq ,
2539984   +   Income ,
2539985   +   Kidhome ,
2539986   +   Mnt ,
2539987   +   MntFishProducts ,
2539988   +   MntFruits ,
2539989   +   MntGoldProds ,
2539990   +   MntMeatProducts ,
2539991   +   MntSweetProducts ,
2539992   +   MntWines ,
2539993   +   MonthsAsCustomer ,
2539994   +   NumCatalogPurchases ,
2539995   +   NumDealsPurchases ,
2539996   +   NumDistPurchases ,
2539997   +   NumStorePurchases ,
2539998   +   NumWebPurchases ,
2539999   +   NumWebVisitsMonth ,
2540000   +   RFMstat ,
2540001   +   RMntFrq ,
2540002   +   Recency ,
2540003   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
2540004   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2540005   +
2540006   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2540007   +END;
MPRINT(EM_DIAGRAM):   END;
2540008   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2540009   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
2540010   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2540011   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2540012   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2540013   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
2540014   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2540015   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2540016   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2540017   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2540018   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2540019   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2540020   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2540021   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2540022   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2540023   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2540024   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2540025   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
2540026   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2540027   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2540028   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2540029   +   S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2540030   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 *
MonthsAsCustomer ;
2540031   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2540032   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
2540033   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2540034   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2540035   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2540036   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
2540037   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2540038   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
2540039   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2540040   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
2540041   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2540042   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2540043   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2540044   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2540045   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2540046   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2540047   +END;
MPRINT(EM_DIAGRAM):   END;
2540048   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2540049   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2540050   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2540051   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
2540052   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
2540053   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2540054   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
2540055   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2540056   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2540057   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2540058   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2540059   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2540060   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2540061   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2540062   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2540063   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2540064   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2540065   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2540066   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2540067   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2540068   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2540069   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2540070   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
2540071   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2540072   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2540073   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
2540074   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2540075   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2540076   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2540077   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2540078   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2540079   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
2540080   +   ELSE S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2540081   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 *
MonthsAsCustomer ;
2540082   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2540083   +   ELSE S_NumCatalogPurchases
2540084   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2540085   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
2540086   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2540087   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2540088   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2540089   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
2540090   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2540091   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
2540092   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2540093   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2540094   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
2540095   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2540096   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2540097   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
2540098   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2540099   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2540100   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2540101   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2540102   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2540103   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
2540104   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2540105   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2540106   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2540107   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2540108   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2540109   +END;
MPRINT(EM_DIAGRAM):   END;
2540110   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2540111   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
2540112   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2540113   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2540114   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
2540115   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2540116   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2540117   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
2540118   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2540119   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2540120   +   H1x1_1  =      1.2726802048269 * S_AcceptedCmpTotal
2540121   +          +    -0.02889982967357 * S_Age  +    -0.26165770909003 * S_Frq
2540122   +          +     0.19140564299867 * S_Income  +     0.30244335152969 *
2540123   +        S_Kidhome  +    -0.03391217967468 * S_Mnt  +    -0.99943007809307 *
2540124   +        S_MntFishProducts  +    -0.04374917285968 * S_MntFruits
2540125   +          +    -0.13546758294455 * S_MntGoldProds  +     3.59922243619013 *
2540126   +        S_MntMeatProducts  +    -0.10424531322566 * S_MntSweetProducts
2540127   +          +    -1.98884071414703 * S_MntWines  +     0.05310540691138 *
2540128   +        S_MonthsAsCustomer  +     0.58072892654416 * S_NumCatalogPurchases
2540129   +          +     0.30381426454211 * S_NumDealsPurchases
2540130   +          +     0.39966076372974 * S_NumDistPurchases
2540131   +          +    -0.58875986801139 * S_NumStorePurchases
2540132   +          +    -0.78850031558536 * S_NumWebPurchases
2540133   +          +     0.35182997415921 * S_NumWebVisitsMonth
2540134   +          +     1.51048129701176 * S_RFMstat  +     1.13354085492775 *
2540135   +        S_RMntFrq  +     -0.2185811652116 * S_Recency
2540136   +          +     0.01153374704027 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.2726802048269 * S_AcceptedCmpTotal + -0.02889982967357 *
S_Age + -0.26165770909003 * S_Frq + 0.19140564299867 * S_Income + 0.30244335152969 * S_Kidhome
+ -0.03391217967468 * S_Mnt + -0.99943007809307 * S_MntFishProducts + -0.04374917285968 *
S_MntFruits + -0.13546758294455 * S_MntGoldProds + 3.59922243619013 * S_MntMeatProducts +
-0.10424531322566 * S_MntSweetProducts + -1.98884071414703 * S_MntWines + 0.05310540691138 *
S_MonthsAsCustomer + 0.58072892654416 * S_NumCatalogPurchases + 0.30381426454211 *
S_NumDealsPurchases + 0.39966076372974 * S_NumDistPurchases + -0.58875986801139 *
S_NumStorePurchases + -0.78850031558536 * S_NumWebPurchases + 0.35182997415921 *
S_NumWebVisitsMonth + 1.51048129701176 * S_RFMstat + 1.13354085492775 * S_RMntFrq +
-0.2185811652116 * S_Recency + 0.01153374704027 * S_Teenhome ;
2540137   +   H1x1_2  =     0.18093166280015 * S_AcceptedCmpTotal
2540138   +          +    -0.00677564787839 * S_Age  +    -0.21510325598577 * S_Frq
2540139   +          +     0.26314356814214 * S_Income  +    -0.30016454601651 *
2540140   +        S_Kidhome  +     -0.1410547608427 * S_Mnt  +    -0.04272369939478 *
2540141   +        S_MntFishProducts  +    -0.05622578678457 * S_MntFruits
2540142   +          +     0.04457230545618 * S_MntGoldProds  +     0.40709024692944 *
2540143   +        S_MntMeatProducts  +    -0.02989090770621 * S_MntSweetProducts
2540144   +          +    -0.18818656503765 * S_MntWines  +    -0.06237311646922 *
2540145   +        S_MonthsAsCustomer  +     0.39737856936198 * S_NumCatalogPurchases
2540146   +          +     0.33734772994048 * S_NumDealsPurchases
2540147   +          +     0.06152222921422 * S_NumDistPurchases
2540148   +          +    -0.32068333792942 * S_NumStorePurchases
2540149   +          +    -0.26971366415104 * S_NumWebPurchases
2540150   +          +     0.57693239481071 * S_NumWebVisitsMonth
2540151   +          +     0.01161324864777 * S_RFMstat  +     0.00311083015445 *
2540152   +        S_RMntFrq  +    -0.67669007299893 * S_Recency
2540153   +          +     -0.2298426154616 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.18093166280015 * S_AcceptedCmpTotal + -0.00677564787839 *
S_Age + -0.21510325598577 * S_Frq + 0.26314356814214 * S_Income + -0.30016454601651 *
S_Kidhome + -0.1410547608427 * S_Mnt + -0.04272369939478 * S_MntFishProducts +
-0.05622578678457 * S_MntFruits + 0.04457230545618 * S_MntGoldProds + 0.40709024692944 *
S_MntMeatProducts + -0.02989090770621 * S_MntSweetProducts + -0.18818656503765 * S_MntWines +
-0.06237311646922 * S_MonthsAsCustomer + 0.39737856936198 * S_NumCatalogPurchases +
0.33734772994048 * S_NumDealsPurchases + 0.06152222921422 * S_NumDistPurchases +
-0.32068333792942 * S_NumStorePurchases + -0.26971366415104 * S_NumWebPurchases +
0.57693239481071 * S_NumWebVisitsMonth + 0.01161324864777 * S_RFMstat + 0.00311083015445 *
S_RMntFrq + -0.67669007299893 * S_Recency + -0.2298426154616 * S_Teenhome ;
2540154   +   H1x1_3  =    -0.09356212420726 * S_AcceptedCmpTotal
2540155   +          +    -0.01904617704654 * S_Age  +    -0.15700206132472 * S_Frq
2540156   +          +    -0.58483226627076 * S_Income  +     0.30001673574917 *
2540157   +        S_Kidhome  +    -0.19921492301896 * S_Mnt  +    -0.00125986769238 *
2540158   +        S_MntFishProducts  +     0.10195959942937 * S_MntFruits
2540159   +          +      0.0069592628978 * S_MntGoldProds  +     0.03606436199308 *
2540160   +        S_MntMeatProducts  +     0.11259135359155 * S_MntSweetProducts
2540161   +          +     0.05408818612126 * S_MntWines  +    -0.14024859528104 *
2540162   +        S_MonthsAsCustomer  +    -0.14071929240584 * S_NumCatalogPurchases
2540163   +          +     0.22142792900578 * S_NumDealsPurchases
2540164   +          +     -0.0291983445755 * S_NumDistPurchases
2540165   +          +     -0.1997372957954 * S_NumStorePurchases
2540166   +          +    -0.01286201468794 * S_NumWebPurchases
2540167   +          +    -0.35208468552742 * S_NumWebVisitsMonth
2540168   +          +     0.02982651364231 * S_RFMstat  +      0.0228316921695 *
2540169   +        S_RMntFrq  +      0.3930877517629 * S_Recency
2540170   +          +     0.28989829670594 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.09356212420726 * S_AcceptedCmpTotal + -0.01904617704654 *
S_Age + -0.15700206132472 * S_Frq + -0.58483226627076 * S_Income + 0.30001673574917 *
S_Kidhome + -0.19921492301896 * S_Mnt + -0.00125986769238 * S_MntFishProducts +
0.10195959942937 * S_MntFruits + 0.0069592628978 * S_MntGoldProds + 0.03606436199308 *
S_MntMeatProducts + 0.11259135359155 * S_MntSweetProducts + 0.05408818612126 * S_MntWines +
-0.14024859528104 * S_MonthsAsCustomer + -0.14071929240584 * S_NumCatalogPurchases +
0.22142792900578 * S_NumDealsPurchases + -0.0291983445755 * S_NumDistPurchases +
-0.1997372957954 * S_NumStorePurchases + -0.01286201468794 * S_NumWebPurchases +
-0.35208468552742 * S_NumWebVisitsMonth + 0.02982651364231 * S_RFMstat + 0.0228316921695 *
S_RMntFrq + 0.3930877517629 * S_Recency + 0.28989829670594 * S_Teenhome ;
2540171   +   H1x1_1  = H1x1_1  +     0.03659432989123 * AcceptedCmp10
2540172   +          +    -0.12552546530316 * AcceptedCmp20  +     0.57200428680255 *
2540173   +        AcceptedCmp30  +      0.4327465126256 * AcceptedCmp40
2540174   +          +    -1.24484170256212 * AcceptedCmp50  +     0.21604379838869 *
2540175   +        Complain0  +    -0.14986629245585 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.03659432989123 * AcceptedCmp10 + -0.12552546530316 *
AcceptedCmp20 + 0.57200428680255 * AcceptedCmp30 + 0.4327465126256 * AcceptedCmp40 +
-1.24484170256212 * AcceptedCmp50 + 0.21604379838869 * Complain0 + -0.14986629245585 *
HigherEducationBinary0 ;
2540176   +   H1x1_2  = H1x1_2  +    -0.13542589174402 * AcceptedCmp10
2540177   +          +    -0.19116289400292 * AcceptedCmp20  +    -0.10302282473135 *
2540178   +        AcceptedCmp30  +    -0.08705955845916 * AcceptedCmp40
2540179   +          +    -0.17435407626698 * AcceptedCmp50  +    -0.09781790399225 *
2540180   +        Complain0  +     0.02006296587353 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.13542589174402 * AcceptedCmp10 + -0.19116289400292
* AcceptedCmp20 + -0.10302282473135 * AcceptedCmp30 + -0.08705955845916 * AcceptedCmp40 +
-0.17435407626698 * AcceptedCmp50 + -0.09781790399225 * Complain0 + 0.02006296587353 *
HigherEducationBinary0 ;
2540181   +   H1x1_3  = H1x1_3  +     0.08917557424765 * AcceptedCmp10
2540182   +          +    -0.00944366858806 * AcceptedCmp20  +     0.30527409248576 *
2540183   +        AcceptedCmp30  +     0.26823019920335 * AcceptedCmp40
2540184   +          +    -0.02131660897576 * AcceptedCmp50  +    -0.16243659451446 *
2540185   +        Complain0  +    -0.28227689084686 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.08917557424765 * AcceptedCmp10 + -0.00944366858806 *
AcceptedCmp20 + 0.30527409248576 * AcceptedCmp30 + 0.26823019920335 * AcceptedCmp40 +
-0.02131660897576 * AcceptedCmp50 + -0.16243659451446 * Complain0 + -0.28227689084686 *
HigherEducationBinary0 ;
2540186   +   H1x1_1  = H1x1_1  +     0.12998959528304 * Education2n_Cycle
2540187   +          +     0.48334684246109 * EducationBasic  +    -0.07156918649895 *
2540188   +        EducationGraduation  +    -0.21017720550072 * EducationMaster
2540189   +          +    -0.22358326722482 * Marital_StatusDivorced
2540190   +          +     0.09394210085787 * Marital_StatusMarried
2540191   +          +    -0.10381546554982 * Marital_StatusSingle
2540192   +          +     0.05935260608375 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.12998959528304 * Education2n_Cycle +
0.48334684246109 * EducationBasic + -0.07156918649895 * EducationGraduation +
-0.21017720550072 * EducationMaster + -0.22358326722482 * Marital_StatusDivorced +
0.09394210085787 * Marital_StatusMarried + -0.10381546554982 * Marital_StatusSingle +
0.05935260608375 * Marital_StatusTogether ;
2540193   +   H1x1_2  = H1x1_2  +     0.02955854298839 * Education2n_Cycle
2540194   +          +    -0.13472200519398 * EducationBasic  +     0.01930622297518 *
2540195   +        EducationGraduation  +    -0.00188262361226 * EducationMaster
2540196   +          +     0.16606212232833 * Marital_StatusDivorced
2540197   +          +    -0.33252488631677 * Marital_StatusMarried
2540198   +          +     0.26735237322144 * Marital_StatusSingle
2540199   +          +    -0.37056611493683 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.02955854298839 * Education2n_Cycle +
-0.13472200519398 * EducationBasic + 0.01930622297518 * EducationGraduation +
-0.00188262361226 * EducationMaster + 0.16606212232833 * Marital_StatusDivorced +
-0.33252488631677 * Marital_StatusMarried + 0.26735237322144 * Marital_StatusSingle +
-0.37056611493683 * Marital_StatusTogether ;
2540200   +   H1x1_3  = H1x1_3  +     0.29085314695378 * Education2n_Cycle
2540201   +          +     -0.2177077392676 * EducationBasic  +    -0.12975750226767 *
2540202   +        EducationGraduation  +     0.12920694427876 * EducationMaster
2540203   +          +    -0.30275479651076 * Marital_StatusDivorced
2540204   +          +     0.50273719874035 * Marital_StatusMarried
2540205   +          +    -0.39588303956293 * Marital_StatusSingle
2540206   +          +     0.42028863850572 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.29085314695378 * Education2n_Cycle +
-0.2177077392676 * EducationBasic + -0.12975750226767 * EducationGraduation + 0.12920694427876
* EducationMaster + -0.30275479651076 * Marital_StatusDivorced + 0.50273719874035 *
Marital_StatusMarried + -0.39588303956293 * Marital_StatusSingle + 0.42028863850572 *
Marital_StatusTogether ;
2540207   +   H1x1_1  =     1.91295924572895 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.91295924572895 + H1x1_1 ;
2540208   +   H1x1_2  =    -1.21245226681055 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -1.21245226681055 + H1x1_2 ;
2540209   +   H1x1_3  =    -0.01609140135594 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.01609140135594 + H1x1_3 ;
2540210   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
2540211   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
2540212   +   H1x1_1  = EXP(MIN(-0.5 * H1x1_1 **2, _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(MIN(-0.5 * H1x1_1 **2, _EXP_BAR));
2540213   +   H1x1_2  = EXP(MIN(-0.5 * H1x1_2 **2, _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(MIN(-0.5 * H1x1_2 **2, _EXP_BAR));
2540214   +   H1x1_3  = EXP(MIN(-0.5 * H1x1_3 **2, _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(MIN(-0.5 * H1x1_3 **2, _EXP_BAR));
2540215   +END;
MPRINT(EM_DIAGRAM):   END;
2540216   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2540217   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
2540218   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
2540219   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
2540220   +END;
MPRINT(EM_DIAGRAM):   END;
2540221   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2540222   +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
2540223   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2540224   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2540225   +   H1x2_1  =     0.73632716677259 * S_AcceptedCmpTotal
2540226   +          +     -1.3452480925823 * S_Age  +    -0.77564767519981 * S_Frq
2540227   +          +    -0.06163854052357 * S_Income  +     1.82428003860444 *
2540228   +        S_Kidhome  +       0.661412748756 * S_Mnt  +      1.8826488743919 *
2540229   +        S_MntFishProducts  +    -0.21815276926728 * S_MntFruits
2540230   +          +     1.06597641654862 * S_MntGoldProds  +     0.13887400045643 *
2540231   +        S_MntMeatProducts  +    -0.62827157985225 * S_MntSweetProducts
2540232   +          +     1.70742231056065 * S_MntWines  +     0.52403167020638 *
2540233   +        S_MonthsAsCustomer  +    -2.99889150929209 * S_NumCatalogPurchases
2540234   +          +    -2.59470529821377 * S_NumDealsPurchases
2540235   +          +      0.7668756449818 * S_NumDistPurchases
2540236   +          +     0.61064641547208 * S_NumStorePurchases
2540237   +          +    -0.87106335660846 * S_NumWebPurchases
2540238   +          +      0.1188879348197 * S_NumWebVisitsMonth
2540239   +          +     0.89319669432194 * S_RFMstat  +       -0.45272285967 *
2540240   +        S_RMntFrq  +     -0.7210740986075 * S_Recency
2540241   +          +      0.7032117485114 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.73632716677259 * S_AcceptedCmpTotal + -1.3452480925823 *
S_Age + -0.77564767519981 * S_Frq + -0.06163854052357 * S_Income + 1.82428003860444 *
S_Kidhome + 0.661412748756 * S_Mnt + 1.8826488743919 * S_MntFishProducts + -0.21815276926728 *
S_MntFruits + 1.06597641654862 * S_MntGoldProds + 0.13887400045643 * S_MntMeatProducts +
-0.62827157985225 * S_MntSweetProducts + 1.70742231056065 * S_MntWines + 0.52403167020638 *
S_MonthsAsCustomer + -2.99889150929209 * S_NumCatalogPurchases + -2.59470529821377 *
S_NumDealsPurchases + 0.7668756449818 * S_NumDistPurchases + 0.61064641547208 *
S_NumStorePurchases + -0.87106335660846 * S_NumWebPurchases + 0.1188879348197 *
S_NumWebVisitsMonth + 0.89319669432194 * S_RFMstat + -0.45272285967 * S_RMntFrq +
-0.7210740986075 * S_Recency + 0.7032117485114 * S_Teenhome ;
2540242   +   H1x2_2  =      0.5405970783297 * S_AcceptedCmpTotal
2540243   +          +     0.34103648596436 * S_Age  +    -1.00413619660059 * S_Frq
2540244   +          +     0.40958797602392 * S_Income  +    -0.94731216445533 *
2540245   +        S_Kidhome  +    -0.17755265939769 * S_Mnt  +    -0.88926202859892 *
2540246   +        S_MntFishProducts  +      0.6791087530674 * S_MntFruits
2540247   +          +     1.10836805118307 * S_MntGoldProds  +    -0.29462180872033 *
2540248   +        S_MntMeatProducts  +     2.21935054370304 * S_MntSweetProducts
2540249   +          +     1.41379847080743 * S_MntWines  +    -0.66077297246309 *
2540250   +        S_MonthsAsCustomer  +     0.91491641336561 * S_NumCatalogPurchases
2540251   +          +    -0.41834528691349 * S_NumDealsPurchases
2540252   +          +    -0.07802605490227 * S_NumDistPurchases
2540253   +          +    -0.62261476153139 * S_NumStorePurchases
2540254   +          +    -0.84011953180231 * S_NumWebPurchases
2540255   +          +     0.95169092183885 * S_NumWebVisitsMonth
2540256   +          +      0.4036735448902 * S_RFMstat  +     0.44620057959954 *
2540257   +        S_RMntFrq  +    -0.54980566705324 * S_Recency
2540258   +          +    -0.48914926560129 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 0.5405970783297 * S_AcceptedCmpTotal + 0.34103648596436 * S_Age
+ -1.00413619660059 * S_Frq + 0.40958797602392 * S_Income + -0.94731216445533 * S_Kidhome +
-0.17755265939769 * S_Mnt + -0.88926202859892 * S_MntFishProducts + 0.6791087530674 *
S_MntFruits + 1.10836805118307 * S_MntGoldProds + -0.29462180872033 * S_MntMeatProducts +
2.21935054370304 * S_MntSweetProducts + 1.41379847080743 * S_MntWines + -0.66077297246309 *
S_MonthsAsCustomer + 0.91491641336561 * S_NumCatalogPurchases + -0.41834528691349 *
S_NumDealsPurchases + -0.07802605490227 * S_NumDistPurchases + -0.62261476153139 *
S_NumStorePurchases + -0.84011953180231 * S_NumWebPurchases + 0.95169092183885 *
S_NumWebVisitsMonth + 0.4036735448902 * S_RFMstat + 0.44620057959954 * S_RMntFrq +
-0.54980566705324 * S_Recency + -0.48914926560129 * S_Teenhome ;
2540259   +   H1x2_3  =    -0.10056833202616 * S_AcceptedCmpTotal
2540260   +          +    -3.35021911955911 * S_Age  +    -0.47433508394475 * S_Frq
2540261   +          +      0.2642483252057 * S_Income  +     0.20666167536737 *
2540262   +        S_Kidhome  +    -1.63711887449192 * S_Mnt  +    -0.02078521278323 *
2540263   +        S_MntFishProducts  +    -0.13356020799092 * S_MntFruits
2540264   +          +     0.03199170913357 * S_MntGoldProds  +     0.35859745927921 *
2540265   +        S_MntMeatProducts  +     1.28933517907056 * S_MntSweetProducts
2540266   +          +    -0.45266889039243 * S_MntWines  +    -0.03980312418999 *
2540267   +        S_MonthsAsCustomer  +     0.11407065408619 * S_NumCatalogPurchases
2540268   +          +     1.50811278700924 * S_NumDealsPurchases
2540269   +          +    -0.40025710583484 * S_NumDistPurchases
2540270   +          +     0.16539197954198 * S_NumStorePurchases
2540271   +          +    -1.50803186935431 * S_NumWebPurchases
2540272   +          +    -0.35788712697704 * S_NumWebVisitsMonth
2540273   +          +    -2.06761773527847 * S_RFMstat  +    -0.00353259675109 *
2540274   +        S_RMntFrq  +      0.4364156603095 * S_Recency
2540275   +          +    -0.44689366494665 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.10056833202616 * S_AcceptedCmpTotal + -3.35021911955911 *
S_Age + -0.47433508394475 * S_Frq + 0.2642483252057 * S_Income + 0.20666167536737 * S_Kidhome
+ -1.63711887449192 * S_Mnt + -0.02078521278323 * S_MntFishProducts + -0.13356020799092 *
S_MntFruits + 0.03199170913357 * S_MntGoldProds + 0.35859745927921 * S_MntMeatProducts +
1.28933517907056 * S_MntSweetProducts + -0.45266889039243 * S_MntWines + -0.03980312418999 *
S_MonthsAsCustomer + 0.11407065408619 * S_NumCatalogPurchases + 1.50811278700924 *
S_NumDealsPurchases + -0.40025710583484 * S_NumDistPurchases + 0.16539197954198 *
S_NumStorePurchases + -1.50803186935431 * S_NumWebPurchases + -0.35788712697704 *
S_NumWebVisitsMonth + -2.06761773527847 * S_RFMstat + -0.00353259675109 * S_RMntFrq +
0.4364156603095 * S_Recency + -0.44689366494665 * S_Teenhome ;
2540276   +   H1x2_1  = H1x2_1  +     1.19862785990255 * AcceptedCmp10
2540277   +          +    -0.56777088839338 * AcceptedCmp20  +    -0.20982687937883 *
2540278   +        AcceptedCmp30  +     0.23051157512105 * AcceptedCmp40
2540279   +          +    -1.16625535461103 * AcceptedCmp50  +    -0.03987377830172 *
2540280   +        Complain0  +    -1.17553145310278 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 1.19862785990255 * AcceptedCmp10 + -0.56777088839338 *
AcceptedCmp20 + -0.20982687937883 * AcceptedCmp30 + 0.23051157512105 * AcceptedCmp40 +
-1.16625535461103 * AcceptedCmp50 + -0.03987377830172 * Complain0 + -1.17553145310278 *
HigherEducationBinary0 ;
2540281   +   H1x2_2  = H1x2_2  +    -1.37553391657098 * AcceptedCmp10
2540282   +          +    -0.49489986415129 * AcceptedCmp20  +     0.84075258232812 *
2540283   +        AcceptedCmp30  +     0.31883526052436 * AcceptedCmp40
2540284   +          +    -0.41245383847025 * AcceptedCmp50  +     0.75603245683628 *
2540285   +        Complain0  +    -2.07732119239317 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -1.37553391657098 * AcceptedCmp10 + -0.49489986415129
* AcceptedCmp20 + 0.84075258232812 * AcceptedCmp30 + 0.31883526052436 * AcceptedCmp40 +
-0.41245383847025 * AcceptedCmp50 + 0.75603245683628 * Complain0 + -2.07732119239317 *
HigherEducationBinary0 ;
2540286   +   H1x2_3  = H1x2_3  +     0.94876862525586 * AcceptedCmp10
2540287   +          +     0.79245605062261 * AcceptedCmp20  +     1.18614024465163 *
2540288   +        AcceptedCmp30  +    -0.24348380736895 * AcceptedCmp40
2540289   +          +     0.63374252730038 * AcceptedCmp50  +     0.36777527794452 *
2540290   +        Complain0  +    -0.07746344015306 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 0.94876862525586 * AcceptedCmp10 + 0.79245605062261 *
AcceptedCmp20 + 1.18614024465163 * AcceptedCmp30 + -0.24348380736895 * AcceptedCmp40 +
0.63374252730038 * AcceptedCmp50 + 0.36777527794452 * Complain0 + -0.07746344015306 *
HigherEducationBinary0 ;
2540291   +   H1x2_1  = H1x2_1  +     1.73012058377195 * Education2n_Cycle
2540292   +          +     2.12295803973544 * EducationBasic  +     0.36945596974292 *
2540293   +        EducationGraduation  +    -1.22675967760612 * EducationMaster
2540294   +          +    -0.48199299977856 * Marital_StatusDivorced
2540295   +          +    -1.61546983135535 * Marital_StatusMarried
2540296   +          +     1.25890289649165 * Marital_StatusSingle
2540297   +          +    -0.35805098686637 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 1.73012058377195 * Education2n_Cycle +
2.12295803973544 * EducationBasic + 0.36945596974292 * EducationGraduation + -1.22675967760612
* EducationMaster + -0.48199299977856 * Marital_StatusDivorced + -1.61546983135535 *
Marital_StatusMarried + 1.25890289649165 * Marital_StatusSingle + -0.35805098686637 *
Marital_StatusTogether ;
2540298   +   H1x2_2  = H1x2_2  +    -1.04319773106255 * Education2n_Cycle
2540299   +          +    -1.20017517243416 * EducationBasic  +    -0.21851017334559 *
2540300   +        EducationGraduation  +     0.54918303984069 * EducationMaster
2540301   +          +    -0.69719138781358 * Marital_StatusDivorced
2540302   +          +     0.26964883367384 * Marital_StatusMarried
2540303   +          +      0.4656663467381 * Marital_StatusSingle
2540304   +          +    -0.38324848670979 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -1.04319773106255 * Education2n_Cycle +
-1.20017517243416 * EducationBasic + -0.21851017334559 * EducationGraduation +
0.54918303984069 * EducationMaster + -0.69719138781358 * Marital_StatusDivorced +
0.26964883367384 * Marital_StatusMarried + 0.4656663467381 * Marital_StatusSingle +
-0.38324848670979 * Marital_StatusTogether ;
2540305   +   H1x2_3  = H1x2_3  +     0.26572249637491 * Education2n_Cycle
2540306   +          +     1.36865822272368 * EducationBasic  +     0.26769702437041 *
2540307   +        EducationGraduation  +    -0.57748542336591 * EducationMaster
2540308   +          +     1.40407968804704 * Marital_StatusDivorced
2540309   +          +    -1.35468203106214 * Marital_StatusMarried
2540310   +          +      1.0644996414042 * Marital_StatusSingle
2540311   +          +    -0.68198832748724 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 0.26572249637491 * Education2n_Cycle +
1.36865822272368 * EducationBasic + 0.26769702437041 * EducationGraduation + -0.57748542336591
* EducationMaster + 1.40407968804704 * Marital_StatusDivorced + -1.35468203106214 *
Marital_StatusMarried + 1.0644996414042 * Marital_StatusSingle + -0.68198832748724 *
Marital_StatusTogether ;
2540312   +   H1x2_1  =     1.72650566457008 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.72650566457008 + H1x2_1 ;
2540313   +   H1x2_2  =     -1.0113179577999 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -1.0113179577999 + H1x2_2 ;
2540314   +   H1x2_3  =     0.14003924400021 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = 0.14003924400021 + H1x2_3 ;
2540315   +   H1x2_1  = SIN(H1x2_1 );
MPRINT(EM_DIAGRAM):   H1x2_1 = SIN(H1x2_1 );
2540316   +   H1x2_2  = SIN(H1x2_2 );
MPRINT(EM_DIAGRAM):   H1x2_2 = SIN(H1x2_2 );
2540317   +   H1x2_3  = SIN(H1x2_3 );
MPRINT(EM_DIAGRAM):   H1x2_3 = SIN(H1x2_3 );
2540318   +END;
MPRINT(EM_DIAGRAM):   END;
2540319   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2540320   +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
2540321   +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
2540322   +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
2540323   +END;
MPRINT(EM_DIAGRAM):   END;
2540324   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2540325   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2540326   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2540327   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2540328   +   P_DepVar1  =    -7.62079794803554 * H1x1_1  +     13.7007341613959 * H1x1_2
2540329   +          +    -6.77882452096978 * H1x1_3 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -7.62079794803554 * H1x1_1 + 13.7007341613959 * H1x1_2 +
-6.77882452096978 * H1x1_3 ;
2540330   +   P_DepVar1  = P_DepVar1  +    -0.44850093089338 * H1x2_1
2540331   +          +    -1.24228597291063 * H1x2_2  +     1.00075465600952 * H1x2_3 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 + -0.44850093089338 * H1x2_1 + -1.24228597291063 *
H1x2_2 + 1.00075465600952 * H1x2_3 ;
2540332   +   P_DepVar1  =    -2.26198805619545 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.26198805619545 + P_DepVar1 ;
2540333   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2540334   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2540335   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2540336   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2540337   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2540338   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2540339   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2540340   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2540341   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2540342   +END;
MPRINT(EM_DIAGRAM):   END;
2540343   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2540344   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2540345   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2540346   +END;
MPRINT(EM_DIAGRAM):   END;
2540347   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2540348   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2540349   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2540350   +END;
MPRINT(EM_DIAGRAM):   END;
2540351   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2540352   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2540353   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2540354   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2540355   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2540356   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2540357   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2540358   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2540359   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2540360   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2540361   +END;
MPRINT(EM_DIAGRAM):   END;
2540362   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2540363   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2540364   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2540365   +drop
2540366   +H1x1_1
2540367   +H1x1_2
2540368   +H1x1_3
2540369   +H1x2_1
2540370   +H1x2_2
2540371   +H1x2_3
2540372   +;
MPRINT(EM_DIAGRAM):   drop H1x1_1 H1x1_2 H1x1_3 H1x2_1 H1x2_2 H1x2_3 ;
2540373   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
2540374   +* Renaming variables for AutoNeural8;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural8;
2540375   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2540376   +* Renaming Posterior variables for AutoNeural8;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural8;
2540377   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2540378   +drop AutoNeural8_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural8_P_DepVar1;
2540379   +AutoNeural8_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural8_P_DepVar1 = P_DepVar1;
2540380   +drop AutoNeural8_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural8_P_DepVar0;
2540381   +AutoNeural8_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural8_P_DepVar0 = P_DepVar0;
2540382   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2540383   +* Renaming _WARN_ variable for AutoNeural8;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural8;
2540384   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2540385   +length AutoNeural8_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural8_WARN_ $4;
2540386   +drop AutoNeural8_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural8_WARN_;
2540387   +AutoNeural8_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural8_WARN_ = _WARN_;
2540388   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2540389   +* TOOL: Extension Class;
MPRINT(EM_DIAGRAM):   * TOOL: Extension Class;
2540390   +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
2540391   +* NODE: FIMPORT;
MPRINT(EM_DIAGRAM):   * NODE: FIMPORT;
2540392   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2540393   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2540394   +* TOOL: Statistics Exploration;
MPRINT(EM_DIAGRAM):   * TOOL: Statistics Exploration;
2540395   +* TYPE: EXPLORE;
MPRINT(EM_DIAGRAM):   * TYPE: EXPLORE;
2540396   +* NODE: Stat;
MPRINT(EM_DIAGRAM):   * NODE: Stat;
2540397   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2540398   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2540399   +* TOOL: Filtering;
MPRINT(EM_DIAGRAM):   * TOOL: Filtering;
2540400   +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
2540401   +* NODE: Filter;
MPRINT(EM_DIAGRAM):   * NODE: Filter;
2540402   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2540403   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2540404   +* TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
MPRINT(EM_DIAGRAM):   * TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
2540405   +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
2540406   +* NODE: EMCODE4;
MPRINT(EM_DIAGRAM):   * NODE: EMCODE4;
2540407   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2540408   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2540409   +* TOOL: Transform;
MPRINT(EM_DIAGRAM):   * TOOL: Transform;
2540410   +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
2540411   +* NODE: Trans;
MPRINT(EM_DIAGRAM):   * NODE: Trans;
2540412   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2540413   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2540414   +* TOOL: Partition Class;
MPRINT(EM_DIAGRAM):   * TOOL: Partition Class;
2540415   +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
2540416   +* NODE: Part;
MPRINT(EM_DIAGRAM):   * NODE: Part;
2540417   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2540418   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2540419   +* TOOL: Metadata Node;
MPRINT(EM_DIAGRAM):   * TOOL: Metadata Node;
2540420   +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
2540421   +* NODE: Meta;
MPRINT(EM_DIAGRAM):   * NODE: Meta;
2540422   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2540423   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2540424   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
2540425   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
2540426   +* NODE: AutoNeural10;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural10;
2540427   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2540428   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2540429   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2540430   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2540431   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2540432   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2540433   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2540434   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2540435   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2540436   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2540437   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2540438   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2540439   +LENGTH _WARN_ $4
2540440   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
2540441   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2540442   +
2540443   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
2540444   +
2540445   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
2540446   +
2540447   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2540448   +
2540449   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2540450   +
2540451   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2540452   +
2540453   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2540454   +
2540455   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2540456   +
2540457   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2540458   +
2540459   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2540460   +
2540461   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2540462   +
2540463   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2540464   +
2540465   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
2540466   +
2540467   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2540468   +
2540469   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2540470   +
2540471   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
2540472   +
2540473   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2540474   +
2540475   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2540476   +
2540477   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2540478   +
2540479   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2540480   +
2540481   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
2540482   +
2540483   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2540484   +
2540485   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2540486   +
2540487   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2540488   +
2540489   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2540490   +
2540491   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2540492   +
2540493   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2540494   +
2540495   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2540496   +
2540497   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2540498   +
2540499   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
2540500   +
2540501   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2540502   +
2540503   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2540504   +
2540505   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2540506   +
2540507   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2540508   +
2540509   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2540510   +
2540511   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2540512   +
2540513   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2540514   +
2540515   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2540516   +
2540517   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
2540518   +
2540519   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
2540520   +
2540521   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
2540522   +
2540523   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
2540524   +
2540525   +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
2540526   +
2540527   +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
2540528   +
2540529   +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
2540530   +
2540531   +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
2540532   +
2540533   +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
2540534   +
2540535   +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
2540536   +
2540537   +      label H1x3_1 = 'Hidden: H1x3_=1' ;
MPRINT(EM_DIAGRAM):   label H1x3_1 = 'Hidden: H1x3_=1' ;
2540538   +
2540539   +      label H1x3_2 = 'Hidden: H1x3_=2' ;
MPRINT(EM_DIAGRAM):   label H1x3_2 = 'Hidden: H1x3_=2' ;
2540540   +
2540541   +      label H1x3_3 = 'Hidden: H1x3_=3' ;
MPRINT(EM_DIAGRAM):   label H1x3_3 = 'Hidden: H1x3_=3' ;
2540542   +
2540543   +      label H1x3_4 = 'Hidden: H1x3_=4' ;
MPRINT(EM_DIAGRAM):   label H1x3_4 = 'Hidden: H1x3_=4' ;
2540544   +
2540545   +      label H1x3_5 = 'Hidden: H1x3_=5' ;
MPRINT(EM_DIAGRAM):   label H1x3_5 = 'Hidden: H1x3_=5' ;
2540546   +
2540547   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2540548   +
2540549   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2540550   +
2540551   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2540552   +
2540553   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2540554   +
2540555   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2540556   +
2540557   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2540558   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2540559   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2540560   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2540561   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2540562   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2540563   +end;
MPRINT(EM_DIAGRAM):   end;
2540564   +else do;
MPRINT(EM_DIAGRAM):   else do;
2540565   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2540566   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2540567   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2540568   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2540569   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2540570   +   end;
MPRINT(EM_DIAGRAM):   end;
2540571   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2540572   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2540573   +   end;
MPRINT(EM_DIAGRAM):   end;
2540574   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2540575   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2540576   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2540577   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2540578   +   end;
MPRINT(EM_DIAGRAM):   end;
2540579   +end;
MPRINT(EM_DIAGRAM):   end;
2540580   +
2540581   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2540582   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2540583   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2540584   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2540585   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2540586   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2540587   +end;
MPRINT(EM_DIAGRAM):   end;
2540588   +else do;
MPRINT(EM_DIAGRAM):   else do;
2540589   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2540590   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2540591   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2540592   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2540593   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2540594   +   end;
MPRINT(EM_DIAGRAM):   end;
2540595   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2540596   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2540597   +   end;
MPRINT(EM_DIAGRAM):   end;
2540598   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2540599   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2540600   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2540601   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2540602   +   end;
MPRINT(EM_DIAGRAM):   end;
2540603   +end;
MPRINT(EM_DIAGRAM):   end;
2540604   +
2540605   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2540606   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2540607   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2540608   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2540609   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2540610   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2540611   +end;
MPRINT(EM_DIAGRAM):   end;
2540612   +else do;
MPRINT(EM_DIAGRAM):   else do;
2540613   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2540614   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2540615   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2540616   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2540617   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2540618   +   end;
MPRINT(EM_DIAGRAM):   end;
2540619   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2540620   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2540621   +   end;
MPRINT(EM_DIAGRAM):   end;
2540622   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2540623   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2540624   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2540625   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2540626   +   end;
MPRINT(EM_DIAGRAM):   end;
2540627   +end;
MPRINT(EM_DIAGRAM):   end;
2540628   +
2540629   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2540630   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2540631   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2540632   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2540633   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2540634   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2540635   +end;
MPRINT(EM_DIAGRAM):   end;
2540636   +else do;
MPRINT(EM_DIAGRAM):   else do;
2540637   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2540638   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2540639   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2540640   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2540641   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2540642   +   end;
MPRINT(EM_DIAGRAM):   end;
2540643   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2540644   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2540645   +   end;
MPRINT(EM_DIAGRAM):   end;
2540646   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2540647   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2540648   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2540649   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2540650   +   end;
MPRINT(EM_DIAGRAM):   end;
2540651   +end;
MPRINT(EM_DIAGRAM):   end;
2540652   +
2540653   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2540654   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2540655   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2540656   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2540657   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2540658   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2540659   +end;
MPRINT(EM_DIAGRAM):   end;
2540660   +else do;
MPRINT(EM_DIAGRAM):   else do;
2540661   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2540662   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2540663   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2540664   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2540665   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2540666   +   end;
MPRINT(EM_DIAGRAM):   end;
2540667   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2540668   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2540669   +   end;
MPRINT(EM_DIAGRAM):   end;
2540670   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2540671   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2540672   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2540673   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2540674   +   end;
MPRINT(EM_DIAGRAM):   end;
2540675   +end;
MPRINT(EM_DIAGRAM):   end;
2540676   +
2540677   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2540678   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2540679   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2540680   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2540681   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2540682   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2540683   +end;
MPRINT(EM_DIAGRAM):   end;
2540684   +else do;
MPRINT(EM_DIAGRAM):   else do;
2540685   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2540686   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2540687   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2540688   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2540689   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2540690   +   end;
MPRINT(EM_DIAGRAM):   end;
2540691   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2540692   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2540693   +   end;
MPRINT(EM_DIAGRAM):   end;
2540694   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2540695   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2540696   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2540697   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2540698   +   end;
MPRINT(EM_DIAGRAM):   end;
2540699   +end;
MPRINT(EM_DIAGRAM):   end;
2540700   +
2540701   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
2540702   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
2540703   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
2540704   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2540705   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2540706   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2540707   +end;
MPRINT(EM_DIAGRAM):   end;
2540708   +else do;
MPRINT(EM_DIAGRAM):   else do;
2540709   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2540710   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
2540711   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2540712   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
2540713   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
2540714   +   end;
MPRINT(EM_DIAGRAM):   end;
2540715   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
2540716   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
2540717   +   end;
MPRINT(EM_DIAGRAM):   end;
2540718   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2540719   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2540720   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2540721   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2540722   +   end;
MPRINT(EM_DIAGRAM):   end;
2540723   +end;
MPRINT(EM_DIAGRAM):   end;
2540724   +
2540725   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2540726   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
2540727   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2540728   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2540729   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2540730   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2540731   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2540732   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2540733   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2540734   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2540735   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2540736   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2540737   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2540738   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2540739   +end;
MPRINT(EM_DIAGRAM):   end;
2540740   +else do;
MPRINT(EM_DIAGRAM):   else do;
2540741   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2540742   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2540743   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2540744   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2540745   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2540746   +   end;
MPRINT(EM_DIAGRAM):   end;
2540747   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2540748   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2540749   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2540750   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2540751   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2540752   +   end;
MPRINT(EM_DIAGRAM):   end;
2540753   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2540754   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2540755   +   end;
MPRINT(EM_DIAGRAM):   end;
2540756   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2540757   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2540758   +   end;
MPRINT(EM_DIAGRAM):   end;
2540759   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2540760   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2540761   +   end;
MPRINT(EM_DIAGRAM):   end;
2540762   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2540763   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2540764   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2540765   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2540766   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2540767   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2540768   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2540769   +   end;
MPRINT(EM_DIAGRAM):   end;
2540770   +end;
MPRINT(EM_DIAGRAM):   end;
2540771   +
2540772   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2540773   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2540774   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
2540775   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2540776   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2540777   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2540778   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2540779   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2540780   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2540781   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2540782   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2540783   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2540784   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2540785   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2540786   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2540787   +end;
MPRINT(EM_DIAGRAM):   end;
2540788   +else do;
MPRINT(EM_DIAGRAM):   else do;
2540789   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2540790   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2540791   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2540792   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2540793   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2540794   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2540795   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2540796   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2540797   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2540798   +         end;
MPRINT(EM_DIAGRAM):   end;
2540799   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2540800   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2540801   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2540802   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2540803   +            end;
MPRINT(EM_DIAGRAM):   end;
2540804   +         end;
MPRINT(EM_DIAGRAM):   end;
2540805   +      end;
MPRINT(EM_DIAGRAM):   end;
2540806   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2540807   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2540808   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2540809   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2540810   +         end;
MPRINT(EM_DIAGRAM):   end;
2540811   +      end;
MPRINT(EM_DIAGRAM):   end;
2540812   +   end;
MPRINT(EM_DIAGRAM):   end;
2540813   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2540814   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2540815   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2540816   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2540817   +      end;
MPRINT(EM_DIAGRAM):   end;
2540818   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2540819   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2540820   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2540821   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2540822   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2540823   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2540824   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2540825   +         end;
MPRINT(EM_DIAGRAM):   end;
2540826   +      end;
MPRINT(EM_DIAGRAM):   end;
2540827   +   end;
MPRINT(EM_DIAGRAM):   end;
2540828   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2540829   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2540830   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2540831   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2540832   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2540833   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2540834   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2540835   +   end;
MPRINT(EM_DIAGRAM):   end;
2540836   +end;
MPRINT(EM_DIAGRAM):   end;
2540837   +
2540838   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2540839   +*** Checking missing input Interval
2540840   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2540841   +
2540842   +IF NMISS(
2540843   +   AcceptedCmpTotal ,
2540844   +   Age ,
2540845   +   Frq ,
2540846   +   Income ,
2540847   +   Kidhome ,
2540848   +   Mnt ,
2540849   +   MntFishProducts ,
2540850   +   MntFruits ,
2540851   +   MntGoldProds ,
2540852   +   MntMeatProducts ,
2540853   +   MntSweetProducts ,
2540854   +   MntWines ,
2540855   +   MonthsAsCustomer ,
2540856   +   NumCatalogPurchases ,
2540857   +   NumDealsPurchases ,
2540858   +   NumDistPurchases ,
2540859   +   NumStorePurchases ,
2540860   +   NumWebPurchases ,
2540861   +   NumWebVisitsMonth ,
2540862   +   RFMstat ,
2540863   +   RMntFrq ,
2540864   +   Recency ,
2540865   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
2540866   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2540867   +
2540868   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2540869   +END;
MPRINT(EM_DIAGRAM):   END;
2540870   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2540871   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
2540872   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2540873   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2540874   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2540875   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
2540876   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2540877   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2540878   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2540879   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2540880   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2540881   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2540882   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2540883   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2540884   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2540885   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2540886   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2540887   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
2540888   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2540889   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2540890   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2540891   +   S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2540892   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 *
MonthsAsCustomer ;
2540893   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2540894   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
2540895   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2540896   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2540897   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2540898   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
2540899   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2540900   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
2540901   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2540902   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
2540903   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2540904   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2540905   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2540906   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2540907   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2540908   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2540909   +END;
MPRINT(EM_DIAGRAM):   END;
2540910   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2540911   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2540912   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2540913   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
2540914   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
2540915   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2540916   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
2540917   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2540918   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2540919   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2540920   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2540921   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2540922   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2540923   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2540924   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2540925   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2540926   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2540927   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2540928   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2540929   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2540930   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2540931   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2540932   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
2540933   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2540934   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2540935   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
2540936   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2540937   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2540938   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2540939   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2540940   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2540941   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
2540942   +   ELSE S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2540943   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 *
MonthsAsCustomer ;
2540944   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2540945   +   ELSE S_NumCatalogPurchases
2540946   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2540947   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
2540948   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2540949   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2540950   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2540951   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
2540952   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2540953   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
2540954   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2540955   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2540956   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
2540957   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2540958   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2540959   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
2540960   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2540961   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2540962   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2540963   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2540964   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2540965   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
2540966   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2540967   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2540968   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2540969   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2540970   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2540971   +END;
MPRINT(EM_DIAGRAM):   END;
2540972   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2540973   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
2540974   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2540975   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2540976   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
2540977   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2540978   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2540979   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
2540980   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2540981   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2540982   +   H1x1_1  =     -1.5235159368138 * S_AcceptedCmpTotal
2540983   +          +     0.13941271308016 * S_Age  +    -0.84765157270503 * S_Frq
2540984   +          +    -0.89386555046676 * S_Income  +     1.62709236629244 *
2540985   +        S_Kidhome  +    -1.21416429819342 * S_Mnt  +    -1.95640488965637 *
2540986   +        S_MntFishProducts  +    -0.08621024993404 * S_MntFruits
2540987   +          +    -0.38536990009586 * S_MntGoldProds  +     3.12553097304637 *
2540988   +        S_MntMeatProducts  +    -2.50680711036653 * S_MntSweetProducts
2540989   +          +    -3.77770073626477 * S_MntWines  +     0.39118206604766 *
2540990   +        S_MonthsAsCustomer  +     1.80485993754239 * S_NumCatalogPurchases
2540991   +          +     3.21215425524619 * S_NumDealsPurchases
2540992   +          +     0.08695198777156 * S_NumDistPurchases
2540993   +          +    -2.58697971128295 * S_NumStorePurchases
2540994   +          +    -0.44431924796059 * S_NumWebPurchases
2540995   +          +     -1.4492698984921 * S_NumWebVisitsMonth
2540996   +          +     2.16652214648037 * S_RFMstat  +    -0.48027961131639 *
2540997   +        S_RMntFrq  +    -0.27206877070748 * S_Recency
2540998   +          +    -0.34774852853763 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -1.5235159368138 * S_AcceptedCmpTotal + 0.13941271308016 *
S_Age + -0.84765157270503 * S_Frq + -0.89386555046676 * S_Income + 1.62709236629244 *
S_Kidhome + -1.21416429819342 * S_Mnt + -1.95640488965637 * S_MntFishProducts +
-0.08621024993404 * S_MntFruits + -0.38536990009586 * S_MntGoldProds + 3.12553097304637 *
S_MntMeatProducts + -2.50680711036653 * S_MntSweetProducts + -3.77770073626477 * S_MntWines +
0.39118206604766 * S_MonthsAsCustomer + 1.80485993754239 * S_NumCatalogPurchases +
3.21215425524619 * S_NumDealsPurchases + 0.08695198777156 * S_NumDistPurchases +
-2.58697971128295 * S_NumStorePurchases + -0.44431924796059 * S_NumWebPurchases +
-1.4492698984921 * S_NumWebVisitsMonth + 2.16652214648037 * S_RFMstat + -0.48027961131639 *
S_RMntFrq + -0.27206877070748 * S_Recency + -0.34774852853763 * S_Teenhome ;
2540999   +   H1x1_2  =     -0.5665707820209 * S_AcceptedCmpTotal
2541000   +          +    -1.33582859121223 * S_Age  +     0.90483024742522 * S_Frq
2541001   +          +    -2.00588558815165 * S_Income  +      3.0373198083895 *
2541002   +        S_Kidhome  +      0.4356905004225 * S_Mnt  +     0.19619626354366 *
2541003   +        S_MntFishProducts  +    -1.09111340184132 * S_MntFruits
2541004   +          +     0.36844676336289 * S_MntGoldProds  +    -2.23832561375429 *
2541005   +        S_MntMeatProducts  +    -0.18280081530069 * S_MntSweetProducts
2541006   +          +     2.11599309139107 * S_MntWines  +     0.68147940490709 *
2541007   +        S_MonthsAsCustomer  +    -0.73940648599397 * S_NumCatalogPurchases
2541008   +          +    -0.83844506398484 * S_NumDealsPurchases
2541009   +          +     0.60831936516804 * S_NumDistPurchases
2541010   +          +     1.79084087761626 * S_NumStorePurchases
2541011   +          +     1.17119196356453 * S_NumWebPurchases
2541012   +          +    -3.63586683518718 * S_NumWebVisitsMonth
2541013   +          +     0.60521990735996 * S_RFMstat  +     0.56036381019221 *
2541014   +        S_RMntFrq  +     3.84599118896159 * S_Recency
2541015   +          +     2.42091939246471 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.5665707820209 * S_AcceptedCmpTotal + -1.33582859121223 *
S_Age + 0.90483024742522 * S_Frq + -2.00588558815165 * S_Income + 3.0373198083895 * S_Kidhome
+ 0.4356905004225 * S_Mnt + 0.19619626354366 * S_MntFishProducts + -1.09111340184132 *
S_MntFruits + 0.36844676336289 * S_MntGoldProds + -2.23832561375429 * S_MntMeatProducts +
-0.18280081530069 * S_MntSweetProducts + 2.11599309139107 * S_MntWines + 0.68147940490709 *
S_MonthsAsCustomer + -0.73940648599397 * S_NumCatalogPurchases + -0.83844506398484 *
S_NumDealsPurchases + 0.60831936516804 * S_NumDistPurchases + 1.79084087761626 *
S_NumStorePurchases + 1.17119196356453 * S_NumWebPurchases + -3.63586683518718 *
S_NumWebVisitsMonth + 0.60521990735996 * S_RFMstat + 0.56036381019221 * S_RMntFrq +
3.84599118896159 * S_Recency + 2.42091939246471 * S_Teenhome ;
2541016   +   H1x1_3  =    -2.34864034635966 * S_AcceptedCmpTotal
2541017   +          +     0.38417502023066 * S_Age  +     0.18241442054661 * S_Frq
2541018   +          +    -0.36643054878492 * S_Income  +    -0.01464967964014 *
2541019   +        S_Kidhome  +     0.13084033882631 * S_Mnt  +     1.43066752801424 *
2541020   +        S_MntFishProducts  +     0.30678881611098 * S_MntFruits
2541021   +          +    -0.35038082288662 * S_MntGoldProds  +    -6.79650673935808 *
2541022   +        S_MntMeatProducts  +    -0.35154740308081 * S_MntSweetProducts
2541023   +          +     4.53406963590593 * S_MntWines  +     0.35082802515055 *
2541024   +        S_MonthsAsCustomer  +    -1.62489937965567 * S_NumCatalogPurchases
2541025   +          +    -0.31484031572628 * S_NumDealsPurchases
2541026   +          +    -0.18273941035679 * S_NumDistPurchases
2541027   +          +     0.99501789733882 * S_NumStorePurchases
2541028   +          +     1.32014078829379 * S_NumWebPurchases
2541029   +          +    -1.34393498450215 * S_NumWebVisitsMonth
2541030   +          +    -0.93549119966022 * S_RFMstat  +    -1.74825390192193 *
2541031   +        S_RMntFrq  +     0.84406941726743 * S_Recency
2541032   +          +     -0.5004540381333 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -2.34864034635966 * S_AcceptedCmpTotal + 0.38417502023066 *
S_Age + 0.18241442054661 * S_Frq + -0.36643054878492 * S_Income + -0.01464967964014 *
S_Kidhome + 0.13084033882631 * S_Mnt + 1.43066752801424 * S_MntFishProducts + 0.30678881611098
* S_MntFruits + -0.35038082288662 * S_MntGoldProds + -6.79650673935808 * S_MntMeatProducts +
-0.35154740308081 * S_MntSweetProducts + 4.53406963590593 * S_MntWines + 0.35082802515055 *
S_MonthsAsCustomer + -1.62489937965567 * S_NumCatalogPurchases + -0.31484031572628 *
S_NumDealsPurchases + -0.18273941035679 * S_NumDistPurchases + 0.99501789733882 *
S_NumStorePurchases + 1.32014078829379 * S_NumWebPurchases + -1.34393498450215 *
S_NumWebVisitsMonth + -0.93549119966022 * S_RFMstat + -1.74825390192193 * S_RMntFrq +
0.84406941726743 * S_Recency + -0.5004540381333 * S_Teenhome ;
2541033   +   H1x1_4  =     0.46772023050431 * S_AcceptedCmpTotal
2541034   +          +    -0.64609651992636 * S_Age  +     0.65433283816167 * S_Frq
2541035   +          +     0.97922442633265 * S_Income  +    -0.37705204232056 *
2541036   +        S_Kidhome  +     0.00937752600299 * S_Mnt  +     -0.6082843846013 *
2541037   +        S_MntFishProducts  +     -0.6227107898918 * S_MntFruits
2541038   +          +      0.0291421224006 * S_MntGoldProds  +     1.09748402313736 *
2541039   +        S_MntMeatProducts  +     0.00604619863622 * S_MntSweetProducts
2541040   +          +    -0.74684537570529 * S_MntWines  +    -0.00266569003481 *
2541041   +        S_MonthsAsCustomer  +     2.01081657735872 * S_NumCatalogPurchases
2541042   +          +     1.19658719134196 * S_NumDealsPurchases
2541043   +          +     0.87478204472986 * S_NumDistPurchases
2541044   +          +    -0.20635856288784 * S_NumStorePurchases
2541045   +          +    -0.89927356974242 * S_NumWebPurchases
2541046   +          +     2.92285244132576 * S_NumWebVisitsMonth
2541047   +          +    -0.10913907245142 * S_RFMstat  +     1.64233441899256 *
2541048   +        S_RMntFrq  +    -3.64945971202322 * S_Recency
2541049   +          +    -1.78841346993558 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.46772023050431 * S_AcceptedCmpTotal + -0.64609651992636 *
S_Age + 0.65433283816167 * S_Frq + 0.97922442633265 * S_Income + -0.37705204232056 * S_Kidhome
+ 0.00937752600299 * S_Mnt + -0.6082843846013 * S_MntFishProducts + -0.6227107898918 *
S_MntFruits + 0.0291421224006 * S_MntGoldProds + 1.09748402313736 * S_MntMeatProducts +
0.00604619863622 * S_MntSweetProducts + -0.74684537570529 * S_MntWines + -0.00266569003481 *
S_MonthsAsCustomer + 2.01081657735872 * S_NumCatalogPurchases + 1.19658719134196 *
S_NumDealsPurchases + 0.87478204472986 * S_NumDistPurchases + -0.20635856288784 *
S_NumStorePurchases + -0.89927356974242 * S_NumWebPurchases + 2.92285244132576 *
S_NumWebVisitsMonth + -0.10913907245142 * S_RFMstat + 1.64233441899256 * S_RMntFrq +
-3.64945971202322 * S_Recency + -1.78841346993558 * S_Teenhome ;
2541050   +   H1x1_5  =    -1.22491918863941 * S_AcceptedCmpTotal
2541051   +          +     0.16201659993217 * S_Age  +     0.17189537824457 * S_Frq
2541052   +          +    -0.87922900323563 * S_Income  +    -0.79268410231108 *
2541053   +        S_Kidhome  +     0.62793961676074 * S_Mnt  +     0.20877761882787 *
2541054   +        S_MntFishProducts  +     0.99367872286661 * S_MntFruits
2541055   +          +     -0.4347564565882 * S_MntGoldProds  +    -0.16203279329295 *
2541056   +        S_MntMeatProducts  +     0.81409215344356 * S_MntSweetProducts
2541057   +          +     1.33482971563984 * S_MntWines  +    -1.17441882196058 *
2541058   +        S_MonthsAsCustomer  +    -1.72330829533107 * S_NumCatalogPurchases
2541059   +          +       -2.32617124568 * S_NumDealsPurchases
2541060   +          +    -0.56589187730672 * S_NumDistPurchases
2541061   +          +     1.07062299863482 * S_NumStorePurchases
2541062   +          +     0.30077273739578 * S_NumWebPurchases
2541063   +          +    -1.67745421915317 * S_NumWebVisitsMonth
2541064   +          +      0.0530074713265 * S_RFMstat  +    -0.55969729655382 *
2541065   +        S_RMntFrq  +     1.32196704233234 * S_Recency
2541066   +          +     1.05470622089613 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -1.22491918863941 * S_AcceptedCmpTotal + 0.16201659993217 *
S_Age + 0.17189537824457 * S_Frq + -0.87922900323563 * S_Income + -0.79268410231108 *
S_Kidhome + 0.62793961676074 * S_Mnt + 0.20877761882787 * S_MntFishProducts + 0.99367872286661
* S_MntFruits + -0.4347564565882 * S_MntGoldProds + -0.16203279329295 * S_MntMeatProducts +
0.81409215344356 * S_MntSweetProducts + 1.33482971563984 * S_MntWines + -1.17441882196058 *
S_MonthsAsCustomer + -1.72330829533107 * S_NumCatalogPurchases + -2.32617124568 *
S_NumDealsPurchases + -0.56589187730672 * S_NumDistPurchases + 1.07062299863482 *
S_NumStorePurchases + 0.30077273739578 * S_NumWebPurchases + -1.67745421915317 *
S_NumWebVisitsMonth + 0.0530074713265 * S_RFMstat + -0.55969729655382 * S_RMntFrq +
1.32196704233234 * S_Recency + 1.05470622089613 * S_Teenhome ;
2541067   +   H1x1_1  = H1x1_1  +     0.19875423759582 * AcceptedCmp10
2541068   +          +    -1.84163905120352 * AcceptedCmp20  +    -1.63149345314696 *
2541069   +        AcceptedCmp30  +    -1.52652349127913 * AcceptedCmp40
2541070   +          +    -0.97663634905647 * AcceptedCmp50  +    -0.94352222509088 *
2541071   +        Complain0  +    -0.63297203617355 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.19875423759582 * AcceptedCmp10 + -1.84163905120352 *
AcceptedCmp20 + -1.63149345314696 * AcceptedCmp30 + -1.52652349127913 * AcceptedCmp40 +
-0.97663634905647 * AcceptedCmp50 + -0.94352222509088 * Complain0 + -0.63297203617355 *
HigherEducationBinary0 ;
2541072   +   H1x1_2  = H1x1_2  +      0.0505791781839 * AcceptedCmp10
2541073   +          +    -0.19407965320143 * AcceptedCmp20  +     0.35537657271506 *
2541074   +        AcceptedCmp30  +    -0.84577216347728 * AcceptedCmp40
2541075   +          +     1.73085566880686 * AcceptedCmp50  +     0.05800586053869 *
2541076   +        Complain0  +    -0.62505561129469 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.0505791781839 * AcceptedCmp10 + -0.19407965320143 *
AcceptedCmp20 + 0.35537657271506 * AcceptedCmp30 + -0.84577216347728 * AcceptedCmp40 +
1.73085566880686 * AcceptedCmp50 + 0.05800586053869 * Complain0 + -0.62505561129469 *
HigherEducationBinary0 ;
2541077   +   H1x1_3  = H1x1_3  +     0.54825581966403 * AcceptedCmp10
2541078   +          +     -0.0966204838125 * AcceptedCmp20  +    -1.31707923763053 *
2541079   +        AcceptedCmp30  +    -1.21021077486757 * AcceptedCmp40
2541080   +          +     3.29102250037389 * AcceptedCmp50  +    -0.16383687725206 *
2541081   +        Complain0  +     0.00651446514934 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.54825581966403 * AcceptedCmp10 + -0.0966204838125 *
AcceptedCmp20 + -1.31707923763053 * AcceptedCmp30 + -1.21021077486757 * AcceptedCmp40 +
3.29102250037389 * AcceptedCmp50 + -0.16383687725206 * Complain0 + 0.00651446514934 *
HigherEducationBinary0 ;
2541082   +   H1x1_4  = H1x1_4  +    -1.18573650260336 * AcceptedCmp10
2541083   +          +    -1.73968979068234 * AcceptedCmp20  +    -1.31277698137778 *
2541084   +        AcceptedCmp30  +    -1.74346538593922 * AcceptedCmp40
2541085   +          +    -0.72543919818299 * AcceptedCmp50  +    -0.06328353200384 *
2541086   +        Complain0  +     0.74828735398796 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -1.18573650260336 * AcceptedCmp10 + -1.73968979068234
* AcceptedCmp20 + -1.31277698137778 * AcceptedCmp30 + -1.74346538593922 * AcceptedCmp40 +
-0.72543919818299 * AcceptedCmp50 + -0.06328353200384 * Complain0 + 0.74828735398796 *
HigherEducationBinary0 ;
2541087   +   H1x1_5  = H1x1_5  +    -0.19622185523754 * AcceptedCmp10
2541088   +          +     -0.4643498903813 * AcceptedCmp20  +     0.69293644934542 *
2541089   +        AcceptedCmp30  +     0.23077838801355 * AcceptedCmp40
2541090   +          +     0.53061813608476 * AcceptedCmp50  +    -0.56870999936869 *
2541091   +        Complain0  +      0.5917990310858 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.19622185523754 * AcceptedCmp10 + -0.4643498903813 *
AcceptedCmp20 + 0.69293644934542 * AcceptedCmp30 + 0.23077838801355 * AcceptedCmp40 +
0.53061813608476 * AcceptedCmp50 + -0.56870999936869 * Complain0 + 0.5917990310858 *
HigherEducationBinary0 ;
2541092   +   H1x1_1  = H1x1_1  +     1.01422000032629 * Education2n_Cycle
2541093   +          +    -0.77619298826287 * EducationBasic  +     0.35633748974614 *
2541094   +        EducationGraduation  +     0.98491516107588 * EducationMaster
2541095   +          +    -0.27797737429678 * Marital_StatusDivorced
2541096   +          +    -0.08137635862327 * Marital_StatusMarried
2541097   +          +     0.06275411820495 * Marital_StatusSingle
2541098   +          +    -0.19979743343415 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 1.01422000032629 * Education2n_Cycle +
-0.77619298826287 * EducationBasic + 0.35633748974614 * EducationGraduation + 0.98491516107588
* EducationMaster + -0.27797737429678 * Marital_StatusDivorced + -0.08137635862327 *
Marital_StatusMarried + 0.06275411820495 * Marital_StatusSingle + -0.19979743343415 *
Marital_StatusTogether ;
2541099   +   H1x1_2  = H1x1_2  +    -0.66224206017124 * Education2n_Cycle
2541100   +          +     0.80729589186486 * EducationBasic  +     0.75931615755998 *
2541101   +        EducationGraduation  +    -0.05470462753112 * EducationMaster
2541102   +          +     0.05151426841441 * Marital_StatusDivorced
2541103   +          +     1.19165082030442 * Marital_StatusMarried
2541104   +          +    -1.08257080662611 * Marital_StatusSingle
2541105   +          +     0.13534863375625 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.66224206017124 * Education2n_Cycle +
0.80729589186486 * EducationBasic + 0.75931615755998 * EducationGraduation + -0.05470462753112
* EducationMaster + 0.05151426841441 * Marital_StatusDivorced + 1.19165082030442 *
Marital_StatusMarried + -1.08257080662611 * Marital_StatusSingle + 0.13534863375625 *
Marital_StatusTogether ;
2541106   +   H1x1_3  = H1x1_3  +     0.20065577451105 * Education2n_Cycle
2541107   +          +    -0.14205714608311 * EducationBasic  +    -0.07077711368393 *
2541108   +        EducationGraduation  +     0.40262329710793 * EducationMaster
2541109   +          +      0.0238206459022 * Marital_StatusDivorced
2541110   +          +     -0.4653244204261 * Marital_StatusMarried
2541111   +          +     0.13051613619882 * Marital_StatusSingle
2541112   +          +    -0.35951366919755 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.20065577451105 * Education2n_Cycle +
-0.14205714608311 * EducationBasic + -0.07077711368393 * EducationGraduation +
0.40262329710793 * EducationMaster + 0.0238206459022 * Marital_StatusDivorced +
-0.4653244204261 * Marital_StatusMarried + 0.13051613619882 * Marital_StatusSingle +
-0.35951366919755 * Marital_StatusTogether ;
2541113   +   H1x1_4  = H1x1_4  +     -0.8555672630555 * Education2n_Cycle
2541114   +          +     0.58439980233621 * EducationBasic  +     0.04784356342853 *
2541115   +        EducationGraduation  +    -0.79764992264249 * EducationMaster
2541116   +          +     -0.7449356409222 * Marital_StatusDivorced
2541117   +          +    -1.46604673521535 * Marital_StatusMarried
2541118   +          +     0.74484771688818 * Marital_StatusSingle
2541119   +          +    -1.91273009779071 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.8555672630555 * Education2n_Cycle +
0.58439980233621 * EducationBasic + 0.04784356342853 * EducationGraduation + -0.79764992264249
* EducationMaster + -0.7449356409222 * Marital_StatusDivorced + -1.46604673521535 *
Marital_StatusMarried + 0.74484771688818 * Marital_StatusSingle + -1.91273009779071 *
Marital_StatusTogether ;
2541120   +   H1x1_5  = H1x1_5  +    -0.45561096683674 * Education2n_Cycle
2541121   +          +    -0.08389156101858 * EducationBasic  +    -1.24281299616343 *
2541122   +        EducationGraduation  +    -0.00999807517226 * EducationMaster
2541123   +          +    -3.68044980584423 * Marital_StatusDivorced
2541124   +          +     3.14587407902338 * Marital_StatusMarried
2541125   +          +    -2.66118132753024 * Marital_StatusSingle
2541126   +          +     3.50991640149914 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.45561096683674 * Education2n_Cycle +
-0.08389156101858 * EducationBasic + -1.24281299616343 * EducationGraduation +
-0.00999807517226 * EducationMaster + -3.68044980584423 * Marital_StatusDivorced +
3.14587407902338 * Marital_StatusMarried + -2.66118132753024 * Marital_StatusSingle +
3.50991640149914 * Marital_StatusTogether ;
2541127   +   H1x1_1  =    -2.87464368543529 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -2.87464368543529 + H1x1_1 ;
2541128   +   H1x1_2  =     0.69745433976458 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.69745433976458 + H1x1_2 ;
2541129   +   H1x1_3  =    -0.71895677211617 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.71895677211617 + H1x1_3 ;
2541130   +   H1x1_4  =    -3.07619671976178 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -3.07619671976178 + H1x1_4 ;
2541131   +   H1x1_5  =    -1.74345318000473 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -1.74345318000473 + H1x1_5 ;
2541132   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
2541133   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
2541134   +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
2541135   +   H1x1_2  = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
2541136   +   H1x1_3  = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
2541137   +   H1x1_4  = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_4 = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
2541138   +   H1x1_5  = 1.0 / (1.0 + EXP(MIN( - H1x1_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_5 = 1.0 / (1.0 + EXP(MIN( - H1x1_5 , _EXP_BAR)));
2541139   +END;
MPRINT(EM_DIAGRAM):   END;
2541140   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2541141   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
2541142   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
2541143   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
2541144   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
2541145   +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
2541146   +END;
MPRINT(EM_DIAGRAM):   END;
2541147   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2541148   +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
2541149   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2541150   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2541151   +   H1x2_1  =     0.02206354442682 * S_AcceptedCmpTotal
2541152   +          +    -1.34753268833642 * S_Age  +    -2.08377331969695 * S_Frq
2541153   +          +    -1.39854535380539 * S_Income  +     2.13620611759545 *
2541154   +        S_Kidhome  +    -1.50515365217324 * S_Mnt  +     0.85499321862984 *
2541155   +        S_MntFishProducts  +    -1.17732452790345 * S_MntFruits
2541156   +          +     1.52355640622249 * S_MntGoldProds  +     1.31854239360457 *
2541157   +        S_MntMeatProducts  +    -0.03265851293389 * S_MntSweetProducts
2541158   +          +     2.18666242847435 * S_MntWines  +     0.08246249957908 *
2541159   +        S_MonthsAsCustomer  +    -1.06901902236609 * S_NumCatalogPurchases
2541160   +          +     0.89261880438741 * S_NumDealsPurchases
2541161   +          +    -1.61647413199892 * S_NumDistPurchases
2541162   +          +    -0.56304669045195 * S_NumStorePurchases
2541163   +          +      0.7766837080945 * S_NumWebPurchases
2541164   +          +     -2.2953497398902 * S_NumWebVisitsMonth
2541165   +          +    -3.34547809243199 * S_RFMstat  +     0.07311937799261 *
2541166   +        S_RMntFrq  +     -0.5786489917247 * S_Recency
2541167   +          +    -1.06532056361117 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.02206354442682 * S_AcceptedCmpTotal + -1.34753268833642 *
S_Age + -2.08377331969695 * S_Frq + -1.39854535380539 * S_Income + 2.13620611759545 *
S_Kidhome + -1.50515365217324 * S_Mnt + 0.85499321862984 * S_MntFishProducts +
-1.17732452790345 * S_MntFruits + 1.52355640622249 * S_MntGoldProds + 1.31854239360457 *
S_MntMeatProducts + -0.03265851293389 * S_MntSweetProducts + 2.18666242847435 * S_MntWines +
0.08246249957908 * S_MonthsAsCustomer + -1.06901902236609 * S_NumCatalogPurchases +
0.89261880438741 * S_NumDealsPurchases + -1.61647413199892 * S_NumDistPurchases +
-0.56304669045195 * S_NumStorePurchases + 0.7766837080945 * S_NumWebPurchases +
-2.2953497398902 * S_NumWebVisitsMonth + -3.34547809243199 * S_RFMstat + 0.07311937799261 *
S_RMntFrq + -0.5786489917247 * S_Recency + -1.06532056361117 * S_Teenhome ;
2541168   +   H1x2_2  =      0.0341880757331 * S_AcceptedCmpTotal
2541169   +          +     0.72034771315738 * S_Age  +     0.64155966340389 * S_Frq
2541170   +          +    -1.06570008729492 * S_Income  +    -1.84532938869849 *
2541171   +        S_Kidhome  +     0.94433555965982 * S_Mnt  +     1.23831916074831 *
2541172   +        S_MntFishProducts  +     1.33415870886475 * S_MntFruits
2541173   +          +    -0.51253922893993 * S_MntGoldProds  +     0.02241594009025 *
2541174   +        S_MntMeatProducts  +     -1.2811169586741 * S_MntSweetProducts
2541175   +          +     1.96686773881953 * S_MntWines  +     1.44655944802715 *
2541176   +        S_MonthsAsCustomer  +    -1.18627316384798 * S_NumCatalogPurchases
2541177   +          +     1.02431289724643 * S_NumDealsPurchases
2541178   +          +    -0.90960173637405 * S_NumDistPurchases
2541179   +          +     1.24283490404772 * S_NumStorePurchases
2541180   +          +     1.23072413154592 * S_NumWebPurchases
2541181   +          +    -0.21533378473931 * S_NumWebVisitsMonth
2541182   +          +     1.26438704884008 * S_RFMstat  +      0.0014042871018 *
2541183   +        S_RMntFrq  +     0.32357651423135 * S_Recency
2541184   +          +    -0.49834512433407 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 0.0341880757331 * S_AcceptedCmpTotal + 0.72034771315738 * S_Age
+ 0.64155966340389 * S_Frq + -1.06570008729492 * S_Income + -1.84532938869849 * S_Kidhome +
0.94433555965982 * S_Mnt + 1.23831916074831 * S_MntFishProducts + 1.33415870886475 *
S_MntFruits + -0.51253922893993 * S_MntGoldProds + 0.02241594009025 * S_MntMeatProducts +
-1.2811169586741 * S_MntSweetProducts + 1.96686773881953 * S_MntWines + 1.44655944802715 *
S_MonthsAsCustomer + -1.18627316384798 * S_NumCatalogPurchases + 1.02431289724643 *
S_NumDealsPurchases + -0.90960173637405 * S_NumDistPurchases + 1.24283490404772 *
S_NumStorePurchases + 1.23072413154592 * S_NumWebPurchases + -0.21533378473931 *
S_NumWebVisitsMonth + 1.26438704884008 * S_RFMstat + 0.0014042871018 * S_RMntFrq +
0.32357651423135 * S_Recency + -0.49834512433407 * S_Teenhome ;
2541185   +   H1x2_3  =    -0.57066024275015 * S_AcceptedCmpTotal
2541186   +          +     0.16615358153136 * S_Age  +    -0.60017461612499 * S_Frq
2541187   +          +    -0.21195793925019 * S_Income  +    -0.36049126996499 *
2541188   +        S_Kidhome  +     0.97458542661118 * S_Mnt  +     0.62279162661518 *
2541189   +        S_MntFishProducts  +    -0.44715765367363 * S_MntFruits
2541190   +          +     0.91519163455361 * S_MntGoldProds  +     1.07312113398768 *
2541191   +        S_MntMeatProducts  +    -1.61967017526055 * S_MntSweetProducts
2541192   +          +    -1.88327677412185 * S_MntWines  +    -1.67067768979245 *
2541193   +        S_MonthsAsCustomer  +    -0.64725516463464 * S_NumCatalogPurchases
2541194   +          +    -0.26249596122198 * S_NumDealsPurchases
2541195   +          +    -0.63328519804758 * S_NumDistPurchases
2541196   +          +    -0.88467503575886 * S_NumStorePurchases
2541197   +          +    -0.83120537310738 * S_NumWebPurchases
2541198   +          +     1.40072282351719 * S_NumWebVisitsMonth
2541199   +          +     1.42591300760984 * S_RFMstat  +     1.93593865100837 *
2541200   +        S_RMntFrq  +     -1.2794275536508 * S_Recency
2541201   +          +    -0.78582664529339 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.57066024275015 * S_AcceptedCmpTotal + 0.16615358153136 *
S_Age + -0.60017461612499 * S_Frq + -0.21195793925019 * S_Income + -0.36049126996499 *
S_Kidhome + 0.97458542661118 * S_Mnt + 0.62279162661518 * S_MntFishProducts +
-0.44715765367363 * S_MntFruits + 0.91519163455361 * S_MntGoldProds + 1.07312113398768 *
S_MntMeatProducts + -1.61967017526055 * S_MntSweetProducts + -1.88327677412185 * S_MntWines +
-1.67067768979245 * S_MonthsAsCustomer + -0.64725516463464 * S_NumCatalogPurchases +
-0.26249596122198 * S_NumDealsPurchases + -0.63328519804758 * S_NumDistPurchases +
-0.88467503575886 * S_NumStorePurchases + -0.83120537310738 * S_NumWebPurchases +
1.40072282351719 * S_NumWebVisitsMonth + 1.42591300760984 * S_RFMstat + 1.93593865100837 *
S_RMntFrq + -1.2794275536508 * S_Recency + -0.78582664529339 * S_Teenhome ;
2541202   +   H1x2_4  =     0.70159995537759 * S_AcceptedCmpTotal
2541203   +          +    -0.70199351793792 * S_Age  +     1.63573967285806 * S_Frq
2541204   +          +     -0.1930098634567 * S_Income  +    -0.43173926207337 *
2541205   +        S_Kidhome  +    -0.45239271926178 * S_Mnt  +    -0.14139816383874 *
2541206   +        S_MntFishProducts  +    -0.70568635660703 * S_MntFruits
2541207   +          +     1.68796268038024 * S_MntGoldProds  +     0.80481626355934 *
2541208   +        S_MntMeatProducts  +     0.29831384975096 * S_MntSweetProducts
2541209   +          +    -0.50792336172825 * S_MntWines  +     0.80425149159678 *
2541210   +        S_MonthsAsCustomer  +    -2.26171302044375 * S_NumCatalogPurchases
2541211   +          +     1.30167361451945 * S_NumDealsPurchases
2541212   +          +     1.45457613716235 * S_NumDistPurchases
2541213   +          +    -0.40226463685252 * S_NumStorePurchases
2541214   +          +     0.36369161683572 * S_NumWebPurchases
2541215   +          +    -2.65684851610403 * S_NumWebVisitsMonth
2541216   +          +    -1.14810413235545 * S_RFMstat  +       1.291857215261 *
2541217   +        S_RMntFrq  +     1.36572595403825 * S_Recency
2541218   +          +    -0.54958418574963 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 0.70159995537759 * S_AcceptedCmpTotal + -0.70199351793792 *
S_Age + 1.63573967285806 * S_Frq + -0.1930098634567 * S_Income + -0.43173926207337 * S_Kidhome
+ -0.45239271926178 * S_Mnt + -0.14139816383874 * S_MntFishProducts + -0.70568635660703 *
S_MntFruits + 1.68796268038024 * S_MntGoldProds + 0.80481626355934 * S_MntMeatProducts +
0.29831384975096 * S_MntSweetProducts + -0.50792336172825 * S_MntWines + 0.80425149159678 *
S_MonthsAsCustomer + -2.26171302044375 * S_NumCatalogPurchases + 1.30167361451945 *
S_NumDealsPurchases + 1.45457613716235 * S_NumDistPurchases + -0.40226463685252 *
S_NumStorePurchases + 0.36369161683572 * S_NumWebPurchases + -2.65684851610403 *
S_NumWebVisitsMonth + -1.14810413235545 * S_RFMstat + 1.291857215261 * S_RMntFrq +
1.36572595403825 * S_Recency + -0.54958418574963 * S_Teenhome ;
2541219   +   H1x2_5  =    -1.00456225444665 * S_AcceptedCmpTotal
2541220   +          +     0.19033874303798 * S_Age  +    -0.62578451616415 * S_Frq
2541221   +          +    -0.96647190269426 * S_Income  +     1.77002676974464 *
2541222   +        S_Kidhome  +    -0.53816249322166 * S_Mnt  +     0.21322270253871 *
2541223   +        S_MntFishProducts  +     0.84210241961105 * S_MntFruits
2541224   +          +     0.44153678515007 * S_MntGoldProds  +    -0.23120999196747 *
2541225   +        S_MntMeatProducts  +     0.62950730283125 * S_MntSweetProducts
2541226   +          +    -0.64043011108056 * S_MntWines  +    -2.74922907599662 *
2541227   +        S_MonthsAsCustomer  +     0.67939322758717 * S_NumCatalogPurchases
2541228   +          +    -0.54572162665338 * S_NumDealsPurchases
2541229   +          +      0.9607390449318 * S_NumDistPurchases
2541230   +          +    -0.03259470545754 * S_NumStorePurchases
2541231   +          +     0.19202241423412 * S_NumWebPurchases
2541232   +          +     0.61085831658456 * S_NumWebVisitsMonth
2541233   +          +    -0.08582160429243 * S_RFMstat  +     1.73862452808565 *
2541234   +        S_RMntFrq  +    -0.01216476188714 * S_Recency
2541235   +          +     -0.3304403270473 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -1.00456225444665 * S_AcceptedCmpTotal + 0.19033874303798 *
S_Age + -0.62578451616415 * S_Frq + -0.96647190269426 * S_Income + 1.77002676974464 *
S_Kidhome + -0.53816249322166 * S_Mnt + 0.21322270253871 * S_MntFishProducts +
0.84210241961105 * S_MntFruits + 0.44153678515007 * S_MntGoldProds + -0.23120999196747 *
S_MntMeatProducts + 0.62950730283125 * S_MntSweetProducts + -0.64043011108056 * S_MntWines +
-2.74922907599662 * S_MonthsAsCustomer + 0.67939322758717 * S_NumCatalogPurchases +
-0.54572162665338 * S_NumDealsPurchases + 0.9607390449318 * S_NumDistPurchases +
-0.03259470545754 * S_NumStorePurchases + 0.19202241423412 * S_NumWebPurchases +
0.61085831658456 * S_NumWebVisitsMonth + -0.08582160429243 * S_RFMstat + 1.73862452808565 *
S_RMntFrq + -0.01216476188714 * S_Recency + -0.3304403270473 * S_Teenhome ;
2541236   +   H1x2_1  = H1x2_1  +     0.83453601566539 * AcceptedCmp10
2541237   +          +     0.59109136511077 * AcceptedCmp20  +     -0.9669340701943 *
2541238   +        AcceptedCmp30  +    -2.31468262956126 * AcceptedCmp40
2541239   +          +    -0.76277791850069 * AcceptedCmp50  +     0.30895289981412 *
2541240   +        Complain0  +       0.147233855837 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 0.83453601566539 * AcceptedCmp10 + 0.59109136511077 *
AcceptedCmp20 + -0.9669340701943 * AcceptedCmp30 + -2.31468262956126 * AcceptedCmp40 +
-0.76277791850069 * AcceptedCmp50 + 0.30895289981412 * Complain0 + 0.147233855837 *
HigherEducationBinary0 ;
2541241   +   H1x2_2  = H1x2_2  +     0.42789425545567 * AcceptedCmp10
2541242   +          +     0.08505833889085 * AcceptedCmp20  +    -1.15112188313855 *
2541243   +        AcceptedCmp30  +    -1.24362486486214 * AcceptedCmp40
2541244   +          +     0.04131419116048 * AcceptedCmp50  +    -0.45255799355317 *
2541245   +        Complain0  +    -0.32616423192953 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 0.42789425545567 * AcceptedCmp10 + 0.08505833889085 *
AcceptedCmp20 + -1.15112188313855 * AcceptedCmp30 + -1.24362486486214 * AcceptedCmp40 +
0.04131419116048 * AcceptedCmp50 + -0.45255799355317 * Complain0 + -0.32616423192953 *
HigherEducationBinary0 ;
2541246   +   H1x2_3  = H1x2_3  +    -0.03136360497649 * AcceptedCmp10
2541247   +          +     0.33867713207886 * AcceptedCmp20  +     0.05809342990544 *
2541248   +        AcceptedCmp30  +    -0.06416815079894 * AcceptedCmp40
2541249   +          +     1.14617960682421 * AcceptedCmp50  +    -0.82461320336041 *
2541250   +        Complain0  +     0.58944444655621 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + -0.03136360497649 * AcceptedCmp10 + 0.33867713207886 *
AcceptedCmp20 + 0.05809342990544 * AcceptedCmp30 + -0.06416815079894 * AcceptedCmp40 +
1.14617960682421 * AcceptedCmp50 + -0.82461320336041 * Complain0 + 0.58944444655621 *
HigherEducationBinary0 ;
2541251   +   H1x2_4  = H1x2_4  +    -1.12705500616438 * AcceptedCmp10
2541252   +          +      0.0487863004734 * AcceptedCmp20  +     1.30229008593765 *
2541253   +        AcceptedCmp30  +      0.1726718549662 * AcceptedCmp40
2541254   +          +     0.68443569845295 * AcceptedCmp50  +     2.39733248962228 *
2541255   +        Complain0  +      -0.620937291929 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + -1.12705500616438 * AcceptedCmp10 + 0.0487863004734 *
AcceptedCmp20 + 1.30229008593765 * AcceptedCmp30 + 0.1726718549662 * AcceptedCmp40 +
0.68443569845295 * AcceptedCmp50 + 2.39733248962228 * Complain0 + -0.620937291929 *
HigherEducationBinary0 ;
2541256   +   H1x2_5  = H1x2_5  +     1.42400460803453 * AcceptedCmp10
2541257   +          +    -1.22361480936625 * AcceptedCmp20  +     1.31090186367202 *
2541258   +        AcceptedCmp30  +    -1.40343404818254 * AcceptedCmp40
2541259   +          +    -0.57377230862494 * AcceptedCmp50  +     0.58622740778295 *
2541260   +        Complain0  +    -0.83222074319962 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 1.42400460803453 * AcceptedCmp10 + -1.22361480936625 *
AcceptedCmp20 + 1.31090186367202 * AcceptedCmp30 + -1.40343404818254 * AcceptedCmp40 +
-0.57377230862494 * AcceptedCmp50 + 0.58622740778295 * Complain0 + -0.83222074319962 *
HigherEducationBinary0 ;
2541261   +   H1x2_1  = H1x2_1  +     1.56508379719546 * Education2n_Cycle
2541262   +          +     0.52302987210661 * EducationBasic  +     -0.0570045326497 *
2541263   +        EducationGraduation  +    -0.01838790774804 * EducationMaster
2541264   +          +    -2.32430245081383 * Marital_StatusDivorced
2541265   +          +    -0.09815511356796 * Marital_StatusMarried
2541266   +          +     0.13075504294551 * Marital_StatusSingle
2541267   +          +     -0.0278875765201 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 1.56508379719546 * Education2n_Cycle +
0.52302987210661 * EducationBasic + -0.0570045326497 * EducationGraduation + -0.01838790774804
* EducationMaster + -2.32430245081383 * Marital_StatusDivorced + -0.09815511356796 *
Marital_StatusMarried + 0.13075504294551 * Marital_StatusSingle + -0.0278875765201 *
Marital_StatusTogether ;
2541268   +   H1x2_2  = H1x2_2  +    -0.85592920992847 * Education2n_Cycle
2541269   +          +     0.93272618259957 * EducationBasic  +     0.48987674771079 *
2541270   +        EducationGraduation  +    -1.12454002820451 * EducationMaster
2541271   +          +    -0.65574603869224 * Marital_StatusDivorced
2541272   +          +     1.54672472575294 * Marital_StatusMarried
2541273   +          +    -1.59817602340208 * Marital_StatusSingle
2541274   +          +     1.94381954546813 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -0.85592920992847 * Education2n_Cycle +
0.93272618259957 * EducationBasic + 0.48987674771079 * EducationGraduation + -1.12454002820451
* EducationMaster + -0.65574603869224 * Marital_StatusDivorced + 1.54672472575294 *
Marital_StatusMarried + -1.59817602340208 * Marital_StatusSingle + 1.94381954546813 *
Marital_StatusTogether ;
2541275   +   H1x2_3  = H1x2_3  +     0.37093371596523 * Education2n_Cycle
2541276   +          +    -2.05531065359129 * EducationBasic  +     1.16090743585078 *
2541277   +        EducationGraduation  +     0.87547303889444 * EducationMaster
2541278   +          +    -0.50911604604781 * Marital_StatusDivorced
2541279   +          +     0.30403066135719 * Marital_StatusMarried
2541280   +          +      0.1026950879545 * Marital_StatusSingle
2541281   +          +     0.01000166524405 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 0.37093371596523 * Education2n_Cycle +
-2.05531065359129 * EducationBasic + 1.16090743585078 * EducationGraduation + 0.87547303889444
* EducationMaster + -0.50911604604781 * Marital_StatusDivorced + 0.30403066135719 *
Marital_StatusMarried + 0.1026950879545 * Marital_StatusSingle + 0.01000166524405 *
Marital_StatusTogether ;
2541282   +   H1x2_4  = H1x2_4  +     1.28509086202466 * Education2n_Cycle
2541283   +          +     0.07860157688162 * EducationBasic  +     0.24607672351689 *
2541284   +        EducationGraduation  +    -0.06009602645566 * EducationMaster
2541285   +          +     1.07371507133318 * Marital_StatusDivorced
2541286   +          +    -0.07097334129051 * Marital_StatusMarried
2541287   +          +    -0.48339718568621 * Marital_StatusSingle
2541288   +          +    -0.08900780355835 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 1.28509086202466 * Education2n_Cycle +
0.07860157688162 * EducationBasic + 0.24607672351689 * EducationGraduation + -0.06009602645566
* EducationMaster + 1.07371507133318 * Marital_StatusDivorced + -0.07097334129051 *
Marital_StatusMarried + -0.48339718568621 * Marital_StatusSingle + -0.08900780355835 *
Marital_StatusTogether ;
2541289   +   H1x2_5  = H1x2_5  +    -1.08109633810919 * Education2n_Cycle
2541290   +          +    -0.54966585100103 * EducationBasic  +      0.5388683065169 *
2541291   +        EducationGraduation  +     0.46960055830119 * EducationMaster
2541292   +          +     1.04342893515504 * Marital_StatusDivorced
2541293   +          +     1.16171312085032 * Marital_StatusMarried
2541294   +          +    -0.30201646939913 * Marital_StatusSingle
2541295   +          +     1.84122645884771 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + -1.08109633810919 * Education2n_Cycle +
-0.54966585100103 * EducationBasic + 0.5388683065169 * EducationGraduation + 0.46960055830119
* EducationMaster + 1.04342893515504 * Marital_StatusDivorced + 1.16171312085032 *
Marital_StatusMarried + -0.30201646939913 * Marital_StatusSingle + 1.84122645884771 *
Marital_StatusTogether ;
2541296   +   H1x2_1  =     1.56970796025332 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.56970796025332 + H1x2_1 ;
2541297   +   H1x2_2  =    -0.11766478836824 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -0.11766478836824 + H1x2_2 ;
2541298   +   H1x2_3  =    -2.78218653641036 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -2.78218653641036 + H1x2_3 ;
2541299   +   H1x2_4  =     0.51979515224467 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 0.51979515224467 + H1x2_4 ;
2541300   +   H1x2_5  =     -0.4635890987824 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -0.4635890987824 + H1x2_5 ;
2541301   +END;
MPRINT(EM_DIAGRAM):   END;
2541302   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2541303   +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
2541304   +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
2541305   +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
2541306   +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
2541307   +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
2541308   +END;
MPRINT(EM_DIAGRAM):   END;
2541309   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2541310   +*** Writing the Node H1x3_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x3_ ;
2541311   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2541312   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2541313   +   H1x3_1  =     0.04411772880581 * S_AcceptedCmpTotal
2541314   +          +    -1.62725197326682 * S_Age  +    -1.99668213406033 * S_Frq
2541315   +          +     -1.2265241921112 * S_Income  +     1.99702869958035 *
2541316   +        S_Kidhome  +    -1.46762539068512 * S_Mnt  +     0.97784534044189 *
2541317   +        S_MntFishProducts  +    -1.07945265688497 * S_MntFruits
2541318   +          +     2.09306294956674 * S_MntGoldProds  +     1.46219664114361 *
2541319   +        S_MntMeatProducts  +     0.10961158671991 * S_MntSweetProducts
2541320   +          +     2.03040669273977 * S_MntWines  +     0.16536646017211 *
2541321   +        S_MonthsAsCustomer  +    -0.88077951545076 * S_NumCatalogPurchases
2541322   +          +     1.32256781010645 * S_NumDealsPurchases
2541323   +          +    -1.43015438973619 * S_NumDistPurchases
2541324   +          +    -0.63489289584421 * S_NumStorePurchases
2541325   +          +     0.90508699686841 * S_NumWebPurchases
2541326   +          +    -2.24234858061014 * S_NumWebVisitsMonth
2541327   +          +     -2.9988027991146 * S_RFMstat  +     0.35987461993699 *
2541328   +        S_RMntFrq  +    -1.09317668626142 * S_Recency
2541329   +          +    -1.09925349438658 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 0.04411772880581 * S_AcceptedCmpTotal + -1.62725197326682 *
S_Age + -1.99668213406033 * S_Frq + -1.2265241921112 * S_Income + 1.99702869958035 * S_Kidhome
+ -1.46762539068512 * S_Mnt + 0.97784534044189 * S_MntFishProducts + -1.07945265688497 *
S_MntFruits + 2.09306294956674 * S_MntGoldProds + 1.46219664114361 * S_MntMeatProducts +
0.10961158671991 * S_MntSweetProducts + 2.03040669273977 * S_MntWines + 0.16536646017211 *
S_MonthsAsCustomer + -0.88077951545076 * S_NumCatalogPurchases + 1.32256781010645 *
S_NumDealsPurchases + -1.43015438973619 * S_NumDistPurchases + -0.63489289584421 *
S_NumStorePurchases + 0.90508699686841 * S_NumWebPurchases + -2.24234858061014 *
S_NumWebVisitsMonth + -2.9988027991146 * S_RFMstat + 0.35987461993699 * S_RMntFrq +
-1.09317668626142 * S_Recency + -1.09925349438658 * S_Teenhome ;
2541330   +   H1x3_2  =     0.10522923391314 * S_AcceptedCmpTotal
2541331   +          +     0.68417479453112 * S_Age  +     0.46966162186743 * S_Frq
2541332   +          +    -1.21537535753115 * S_Income  +    -1.87423294109672 *
2541333   +        S_Kidhome  +     0.76913864731495 * S_Mnt  +     1.08535778796502 *
2541334   +        S_MntFishProducts  +     1.27743864099826 * S_MntFruits
2541335   +          +     -0.3186089651882 * S_MntGoldProds  +    -0.00224333051647 *
2541336   +        S_MntMeatProducts  +    -1.28169616734092 * S_MntSweetProducts
2541337   +          +     1.67350500234032 * S_MntWines  +     1.09584504562467 *
2541338   +        S_MonthsAsCustomer  +    -1.45467876727494 * S_NumCatalogPurchases
2541339   +          +     0.85965187264096 * S_NumDealsPurchases
2541340   +          +    -1.15239933286756 * S_NumDistPurchases
2541341   +          +     1.20800889102387 * S_NumStorePurchases
2541342   +          +     1.08790389130242 * S_NumWebPurchases
2541343   +          +    -0.13665551161149 * S_NumWebVisitsMonth
2541344   +          +     1.02103499612659 * S_RFMstat  +    -0.12980097143044 *
2541345   +        S_RMntFrq  +     0.65854311654256 * S_Recency
2541346   +          +    -0.60999209572192 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_2 = 0.10522923391314 * S_AcceptedCmpTotal + 0.68417479453112 *
S_Age + 0.46966162186743 * S_Frq + -1.21537535753115 * S_Income + -1.87423294109672 *
S_Kidhome + 0.76913864731495 * S_Mnt + 1.08535778796502 * S_MntFishProducts + 1.27743864099826
* S_MntFruits + -0.3186089651882 * S_MntGoldProds + -0.00224333051647 * S_MntMeatProducts +
-1.28169616734092 * S_MntSweetProducts + 1.67350500234032 * S_MntWines + 1.09584504562467 *
S_MonthsAsCustomer + -1.45467876727494 * S_NumCatalogPurchases + 0.85965187264096 *
S_NumDealsPurchases + -1.15239933286756 * S_NumDistPurchases + 1.20800889102387 *
S_NumStorePurchases + 1.08790389130242 * S_NumWebPurchases + -0.13665551161149 *
S_NumWebVisitsMonth + 1.02103499612659 * S_RFMstat + -0.12980097143044 * S_RMntFrq +
0.65854311654256 * S_Recency + -0.60999209572192 * S_Teenhome ;
2541347   +   H1x3_3  =    -0.72575004293074 * S_AcceptedCmpTotal
2541348   +          +     0.34932839743259 * S_Age  +     -0.2673460618328 * S_Frq
2541349   +          +     0.25743187687481 * S_Income  +    -0.02172890929346 *
2541350   +        S_Kidhome  +     1.21785656626837 * S_Mnt  +     0.37454359336223 *
2541351   +        S_MntFishProducts  +    -0.32600053706408 * S_MntFruits
2541352   +          +     0.57807148940534 * S_MntGoldProds  +     1.14736546512366 *
2541353   +        S_MntMeatProducts  +    -1.41517082393978 * S_MntSweetProducts
2541354   +          +    -1.44899595080061 * S_MntWines  +    -1.45520867126531 *
2541355   +        S_MonthsAsCustomer  +    -0.33372174099196 * S_NumCatalogPurchases
2541356   +          +     -0.5767607129654 * S_NumDealsPurchases
2541357   +          +     -0.2643921429796 * S_NumDistPurchases
2541358   +          +    -0.67417489911206 * S_NumStorePurchases
2541359   +          +    -0.51423877684891 * S_NumWebPurchases
2541360   +          +     1.40328299605176 * S_NumWebVisitsMonth
2541361   +          +     1.35588787174957 * S_RFMstat  +     1.98416436137119 *
2541362   +        S_RMntFrq  +     -0.8447362450681 * S_Recency
2541363   +          +    -1.04372961736437 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_3 = -0.72575004293074 * S_AcceptedCmpTotal + 0.34932839743259 *
S_Age + -0.2673460618328 * S_Frq + 0.25743187687481 * S_Income + -0.02172890929346 * S_Kidhome
+ 1.21785656626837 * S_Mnt + 0.37454359336223 * S_MntFishProducts + -0.32600053706408 *
S_MntFruits + 0.57807148940534 * S_MntGoldProds + 1.14736546512366 * S_MntMeatProducts +
-1.41517082393978 * S_MntSweetProducts + -1.44899595080061 * S_MntWines + -1.45520867126531 *
S_MonthsAsCustomer + -0.33372174099196 * S_NumCatalogPurchases + -0.5767607129654 *
S_NumDealsPurchases + -0.2643921429796 * S_NumDistPurchases + -0.67417489911206 *
S_NumStorePurchases + -0.51423877684891 * S_NumWebPurchases + 1.40328299605176 *
S_NumWebVisitsMonth + 1.35588787174957 * S_RFMstat + 1.98416436137119 * S_RMntFrq +
-0.8447362450681 * S_Recency + -1.04372961736437 * S_Teenhome ;
2541364   +   H1x3_4  =     0.05745684959388 * S_AcceptedCmpTotal
2541365   +          +    -0.71077680161454 * S_Age  +      1.4854566142375 * S_Frq
2541366   +          +    -0.32870416928843 * S_Income  +    -0.24944295149087 *
2541367   +        S_Kidhome  +     -0.8312409740431 * S_Mnt  +    -0.09638646505384 *
2541368   +        S_MntFishProducts  +    -0.86550491354678 * S_MntFruits
2541369   +          +     1.46902858697296 * S_MntGoldProds  +      0.3661164136841 *
2541370   +        S_MntMeatProducts  +     0.43108270077708 * S_MntSweetProducts
2541371   +          +    -0.87140466249616 * S_MntWines  +     0.17511224898094 *
2541372   +        S_MonthsAsCustomer  +    -2.66256923117027 * S_NumCatalogPurchases
2541373   +          +      1.2821617657076 * S_NumDealsPurchases
2541374   +          +     1.26584115202735 * S_NumDistPurchases
2541375   +          +    -0.46597664211833 * S_NumStorePurchases
2541376   +          +     0.45652363472866 * S_NumWebPurchases
2541377   +          +    -2.66296112021252 * S_NumWebVisitsMonth
2541378   +          +    -0.86670667018974 * S_RFMstat  +     0.60866041131732 *
2541379   +        S_RMntFrq  +     1.31886754707923 * S_Recency
2541380   +          +    -0.09949653139413 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_4 = 0.05745684959388 * S_AcceptedCmpTotal + -0.71077680161454 *
S_Age + 1.4854566142375 * S_Frq + -0.32870416928843 * S_Income + -0.24944295149087 * S_Kidhome
+ -0.8312409740431 * S_Mnt + -0.09638646505384 * S_MntFishProducts + -0.86550491354678 *
S_MntFruits + 1.46902858697296 * S_MntGoldProds + 0.3661164136841 * S_MntMeatProducts +
0.43108270077708 * S_MntSweetProducts + -0.87140466249616 * S_MntWines + 0.17511224898094 *
S_MonthsAsCustomer + -2.66256923117027 * S_NumCatalogPurchases + 1.2821617657076 *
S_NumDealsPurchases + 1.26584115202735 * S_NumDistPurchases + -0.46597664211833 *
S_NumStorePurchases + 0.45652363472866 * S_NumWebPurchases + -2.66296112021252 *
S_NumWebVisitsMonth + -0.86670667018974 * S_RFMstat + 0.60866041131732 * S_RMntFrq +
1.31886754707923 * S_Recency + -0.09949653139413 * S_Teenhome ;
2541381   +   H1x3_5  =    -0.66850525418144 * S_AcceptedCmpTotal
2541382   +          +     0.14331320698516 * S_Age  +    -0.82708146094779 * S_Frq
2541383   +          +    -0.95718847240937 * S_Income  +     1.37375648833049 *
2541384   +        S_Kidhome  +    -0.48314397401233 * S_Mnt  +     0.07047324834759 *
2541385   +        S_MntFishProducts  +     0.86114312801139 * S_MntFruits
2541386   +          +     0.54573348379533 * S_MntGoldProds  +    -0.05966372249273 *
2541387   +        S_MntMeatProducts  +     0.47275063848217 * S_MntSweetProducts
2541388   +          +    -0.62962007155261 * S_MntWines  +    -2.38081462831488 *
2541389   +        S_MonthsAsCustomer  +     0.56594272689824 * S_NumCatalogPurchases
2541390   +          +    -0.85162564171681 * S_NumDealsPurchases
2541391   +          +     0.64631099667221 * S_NumDistPurchases
2541392   +          +    -0.03081963858636 * S_NumStorePurchases
2541393   +          +    -0.24124717624664 * S_NumWebPurchases
2541394   +          +     0.56425980772372 * S_NumWebVisitsMonth
2541395   +          +    -0.32254616624678 * S_RFMstat  +     1.84875225899832 *
2541396   +        S_RMntFrq  +     0.08133312388911 * S_Recency
2541397   +          +    -0.19004451996479 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_5 = -0.66850525418144 * S_AcceptedCmpTotal + 0.14331320698516 *
S_Age + -0.82708146094779 * S_Frq + -0.95718847240937 * S_Income + 1.37375648833049 *
S_Kidhome + -0.48314397401233 * S_Mnt + 0.07047324834759 * S_MntFishProducts +
0.86114312801139 * S_MntFruits + 0.54573348379533 * S_MntGoldProds + -0.05966372249273 *
S_MntMeatProducts + 0.47275063848217 * S_MntSweetProducts + -0.62962007155261 * S_MntWines +
-2.38081462831488 * S_MonthsAsCustomer + 0.56594272689824 * S_NumCatalogPurchases +
-0.85162564171681 * S_NumDealsPurchases + 0.64631099667221 * S_NumDistPurchases +
-0.03081963858636 * S_NumStorePurchases + -0.24124717624664 * S_NumWebPurchases +
0.56425980772372 * S_NumWebVisitsMonth + -0.32254616624678 * S_RFMstat + 1.84875225899832 *
S_RMntFrq + 0.08133312388911 * S_Recency + -0.19004451996479 * S_Teenhome ;
2541398   +   H1x3_1  = H1x3_1  +     1.03487942320068 * AcceptedCmp10
2541399   +          +     0.77723443135875 * AcceptedCmp20  +    -1.04686858569959 *
2541400   +        AcceptedCmp30  +    -1.87852311800194 * AcceptedCmp40
2541401   +          +    -0.69838759011672 * AcceptedCmp50  +     0.50242045854463 *
2541402   +        Complain0  +    -0.13339808164255 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + 1.03487942320068 * AcceptedCmp10 + 0.77723443135875 *
AcceptedCmp20 + -1.04686858569959 * AcceptedCmp30 + -1.87852311800194 * AcceptedCmp40 +
-0.69838759011672 * AcceptedCmp50 + 0.50242045854463 * Complain0 + -0.13339808164255 *
HigherEducationBinary0 ;
2541403   +   H1x3_2  = H1x3_2  +     0.39887299789564 * AcceptedCmp10
2541404   +          +     0.12293700562648 * AcceptedCmp20  +    -1.41656670681309 *
2541405   +        AcceptedCmp30  +    -1.04607557362847 * AcceptedCmp40
2541406   +          +     0.02824649030864 * AcceptedCmp50  +    -0.46581865837196 *
2541407   +        Complain0  +    -0.45913631308543 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 + 0.39887299789564 * AcceptedCmp10 + 0.12293700562648 *
AcceptedCmp20 + -1.41656670681309 * AcceptedCmp30 + -1.04607557362847 * AcceptedCmp40 +
0.02824649030864 * AcceptedCmp50 + -0.46581865837196 * Complain0 + -0.45913631308543 *
HigherEducationBinary0 ;
2541408   +   H1x3_3  = H1x3_3  +     0.20672868292414 * AcceptedCmp10
2541409   +          +     0.52082182457868 * AcceptedCmp20  +     0.54911826263592 *
2541410   +        AcceptedCmp30  +    -0.02400616289922 * AcceptedCmp40
2541411   +          +     1.22209744911863 * AcceptedCmp50  +    -0.68243413694538 *
2541412   +        Complain0  +     0.15620895311704 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_3 = H1x3_3 + 0.20672868292414 * AcceptedCmp10 + 0.52082182457868 *
AcceptedCmp20 + 0.54911826263592 * AcceptedCmp30 + -0.02400616289922 * AcceptedCmp40 +
1.22209744911863 * AcceptedCmp50 + -0.68243413694538 * Complain0 + 0.15620895311704 *
HigherEducationBinary0 ;
2541413   +   H1x3_4  = H1x3_4  +    -0.88269820758187 * AcceptedCmp10
2541414   +          +    -0.19276892535938 * AcceptedCmp20  +     1.26789056018511 *
2541415   +        AcceptedCmp30  +     0.04396979158385 * AcceptedCmp40
2541416   +          +     0.54194186871284 * AcceptedCmp50  +     2.07766091697967 *
2541417   +        Complain0  +    -0.43514178858246 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_4 = H1x3_4 + -0.88269820758187 * AcceptedCmp10 + -0.19276892535938
* AcceptedCmp20 + 1.26789056018511 * AcceptedCmp30 + 0.04396979158385 * AcceptedCmp40 +
0.54194186871284 * AcceptedCmp50 + 2.07766091697967 * Complain0 + -0.43514178858246 *
HigherEducationBinary0 ;
2541418   +   H1x3_5  = H1x3_5  +     1.04303179873707 * AcceptedCmp10
2541419   +          +    -1.29742389809739 * AcceptedCmp20  +     1.21708533617895 *
2541420   +        AcceptedCmp30  +    -1.47807634614974 * AcceptedCmp40
2541421   +          +     -0.7694244559597 * AcceptedCmp50  +     0.51798162453723 *
2541422   +        Complain0  +    -0.95513113905832 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_5 = H1x3_5 + 1.04303179873707 * AcceptedCmp10 + -1.29742389809739 *
AcceptedCmp20 + 1.21708533617895 * AcceptedCmp30 + -1.47807634614974 * AcceptedCmp40 +
-0.7694244559597 * AcceptedCmp50 + 0.51798162453723 * Complain0 + -0.95513113905832 *
HigherEducationBinary0 ;
2541423   +   H1x3_1  = H1x3_1  +     1.27822716215014 * Education2n_Cycle
2541424   +          +     0.45900505383383 * EducationBasic  +    -0.35822992758656 *
2541425   +        EducationGraduation  +     0.05949934527868 * EducationMaster
2541426   +          +    -2.49973437075558 * Marital_StatusDivorced
2541427   +          +    -0.18076948182574 * Marital_StatusMarried
2541428   +          +     0.13498525495231 * Marital_StatusSingle
2541429   +          +    -0.02365465636052 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + 1.27822716215014 * Education2n_Cycle +
0.45900505383383 * EducationBasic + -0.35822992758656 * EducationGraduation + 0.05949934527868
* EducationMaster + -2.49973437075558 * Marital_StatusDivorced + -0.18076948182574 *
Marital_StatusMarried + 0.13498525495231 * Marital_StatusSingle + -0.02365465636052 *
Marital_StatusTogether ;
2541430   +   H1x3_2  = H1x3_2  +    -1.14981446246051 * Education2n_Cycle
2541431   +          +     0.68006996858541 * EducationBasic  +    -0.06493857044709 *
2541432   +        EducationGraduation  +    -1.22462805502453 * EducationMaster
2541433   +          +       -0.59463732835 * Marital_StatusDivorced
2541434   +          +     1.37741332427598 * Marital_StatusMarried
2541435   +          +     -1.5833455713231 * Marital_StatusSingle
2541436   +          +     1.79205360628448 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 + -1.14981446246051 * Education2n_Cycle +
0.68006996858541 * EducationBasic + -0.06493857044709 * EducationGraduation +
-1.22462805502453 * EducationMaster + -0.59463732835 * Marital_StatusDivorced +
1.37741332427598 * Marital_StatusMarried + -1.5833455713231 * Marital_StatusSingle +
1.79205360628448 * Marital_StatusTogether ;
2541437   +   H1x3_3  = H1x3_3  +     0.17779609626753 * Education2n_Cycle
2541438   +          +    -2.22704675950779 * EducationBasic  +     1.30292325944162 *
2541439   +        EducationGraduation  +     0.68083131423474 * EducationMaster
2541440   +          +    -0.44569556289443 * Marital_StatusDivorced
2541441   +          +     0.29918053103557 * Marital_StatusMarried
2541442   +          +    -0.10337314064224 * Marital_StatusSingle
2541443   +          +     0.04054221993299 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_3 = H1x3_3 + 0.17779609626753 * Education2n_Cycle +
-2.22704675950779 * EducationBasic + 1.30292325944162 * EducationGraduation + 0.68083131423474
* EducationMaster + -0.44569556289443 * Marital_StatusDivorced + 0.29918053103557 *
Marital_StatusMarried + -0.10337314064224 * Marital_StatusSingle + 0.04054221993299 *
Marital_StatusTogether ;
2541444   +   H1x3_4  = H1x3_4  +     1.16412985277542 * Education2n_Cycle
2541445   +          +     0.18806330813344 * EducationBasic  +     0.00212145829045 *
2541446   +        EducationGraduation  +     0.00087354662697 * EducationMaster
2541447   +          +     1.13881957277462 * Marital_StatusDivorced
2541448   +          +    -0.35849807146313 * Marital_StatusMarried
2541449   +          +    -0.22168731316885 * Marital_StatusSingle
2541450   +          +    -0.22672306263461 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_4 = H1x3_4 + 1.16412985277542 * Education2n_Cycle +
0.18806330813344 * EducationBasic + 0.00212145829045 * EducationGraduation + 0.00087354662697
* EducationMaster + 1.13881957277462 * Marital_StatusDivorced + -0.35849807146313 *
Marital_StatusMarried + -0.22168731316885 * Marital_StatusSingle + -0.22672306263461 *
Marital_StatusTogether ;
2541451   +   H1x3_5  = H1x3_5  +    -1.25195599938207 * Education2n_Cycle
2541452   +          +    -0.60946428681789 * EducationBasic  +     0.39993500009227 *
2541453   +        EducationGraduation  +     0.43730905987249 * EducationMaster
2541454   +          +     1.10774969923269 * Marital_StatusDivorced
2541455   +          +     1.08409594073043 * Marital_StatusMarried
2541456   +          +    -0.33145048007894 * Marital_StatusSingle
2541457   +          +     1.68703837664761 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_5 = H1x3_5 + -1.25195599938207 * Education2n_Cycle +
-0.60946428681789 * EducationBasic + 0.39993500009227 * EducationGraduation + 0.43730905987249
* EducationMaster + 1.10774969923269 * Marital_StatusDivorced + 1.08409594073043 *
Marital_StatusMarried + -0.33145048007894 * Marital_StatusSingle + 1.68703837664761 *
Marital_StatusTogether ;
2541458   +   H1x3_1  =     1.76093149538288 + H1x3_1 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 1.76093149538288 + H1x3_1 ;
2541459   +   H1x3_2  =    -0.11243980195421 + H1x3_2 ;
MPRINT(EM_DIAGRAM):   H1x3_2 = -0.11243980195421 + H1x3_2 ;
2541460   +   H1x3_3  =    -2.59474781862449 + H1x3_3 ;
MPRINT(EM_DIAGRAM):   H1x3_3 = -2.59474781862449 + H1x3_3 ;
2541461   +   H1x3_4  =     0.25376473610258 + H1x3_4 ;
MPRINT(EM_DIAGRAM):   H1x3_4 = 0.25376473610258 + H1x3_4 ;
2541462   +   H1x3_5  =    -0.54808648261397 + H1x3_5 ;
MPRINT(EM_DIAGRAM):   H1x3_5 = -0.54808648261397 + H1x3_5 ;
2541463   +   _EPS = SQRT(CONSTANT('MACEPS')) ;
MPRINT(EM_DIAGRAM):   _EPS = SQRT(CONSTANT('MACEPS')) ;
2541464   +   _REC_EPS = 1/_EPS ;
MPRINT(EM_DIAGRAM):   _REC_EPS = 1/_EPS ;
2541465   +   DROP _REC_EPS _EPS ;
MPRINT(EM_DIAGRAM):   DROP _REC_EPS _EPS ;
2541466   +   IF H1x3_1  < _REC_EPS AND H1x3_1  > - _REC_EPS THEN
2541467   +   H1x3_1  = H1x3_1  * H1x3_1 ;
MPRINT(EM_DIAGRAM):   IF H1x3_1 < _REC_EPS AND H1x3_1 > - _REC_EPS THEN H1x3_1 = H1x3_1 *
H1x3_1 ;
2541468   +   ELSE H1x3_1  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x3_1 = _REC_EPS ;
2541469   +   IF H1x3_2  < _REC_EPS AND H1x3_2  > - _REC_EPS THEN
2541470   +   H1x3_2  = H1x3_2  * H1x3_2 ;
MPRINT(EM_DIAGRAM):   IF H1x3_2 < _REC_EPS AND H1x3_2 > - _REC_EPS THEN H1x3_2 = H1x3_2 *
H1x3_2 ;
2541471   +   ELSE H1x3_2  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x3_2 = _REC_EPS ;
2541472   +   IF H1x3_3  < _REC_EPS AND H1x3_3  > - _REC_EPS THEN
2541473   +   H1x3_3  = H1x3_3  * H1x3_3 ;
MPRINT(EM_DIAGRAM):   IF H1x3_3 < _REC_EPS AND H1x3_3 > - _REC_EPS THEN H1x3_3 = H1x3_3 *
H1x3_3 ;
2541474   +   ELSE H1x3_3  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x3_3 = _REC_EPS ;
2541475   +   IF H1x3_4  < _REC_EPS AND H1x3_4  > - _REC_EPS THEN
2541476   +   H1x3_4  = H1x3_4  * H1x3_4 ;
MPRINT(EM_DIAGRAM):   IF H1x3_4 < _REC_EPS AND H1x3_4 > - _REC_EPS THEN H1x3_4 = H1x3_4 *
H1x3_4 ;
2541477   +   ELSE H1x3_4  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x3_4 = _REC_EPS ;
2541478   +   IF H1x3_5  < _REC_EPS AND H1x3_5  > - _REC_EPS THEN
2541479   +   H1x3_5  = H1x3_5  * H1x3_5 ;
MPRINT(EM_DIAGRAM):   IF H1x3_5 < _REC_EPS AND H1x3_5 > - _REC_EPS THEN H1x3_5 = H1x3_5 *
H1x3_5 ;
2541480   +   ELSE H1x3_5  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x3_5 = _REC_EPS ;
2541481   +END;
MPRINT(EM_DIAGRAM):   END;
2541482   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2541483   +   H1x3_1  = .;
MPRINT(EM_DIAGRAM):   H1x3_1 = .;
2541484   +   H1x3_2  = .;
MPRINT(EM_DIAGRAM):   H1x3_2 = .;
2541485   +   H1x3_3  = .;
MPRINT(EM_DIAGRAM):   H1x3_3 = .;
2541486   +   H1x3_4  = .;
MPRINT(EM_DIAGRAM):   H1x3_4 = .;
2541487   +   H1x3_5  = .;
MPRINT(EM_DIAGRAM):   H1x3_5 = .;
2541488   +END;
MPRINT(EM_DIAGRAM):   END;
2541489   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2541490   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2541491   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2541492   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2541493   +   P_DepVar1  =     12.3694111963696 * H1x1_1  +     -9.1014019341077 * H1x1_2
2541494   +          +    -14.9093780045901 * H1x1_3  +     25.4505756686259 * H1x1_4
2541495   +          +    -13.3798044908382 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 12.3694111963696 * H1x1_1 + -9.1014019341077 * H1x1_2 +
-14.9093780045901 * H1x1_3 + 25.4505756686259 * H1x1_4 + -13.3798044908382 * H1x1_5 ;
2541496   +   P_DepVar1  = P_DepVar1  +     -0.2373753683635 * H1x2_1
2541497   +          +    -0.03661175538589 * H1x2_2  +     0.29534813812803 * H1x2_3
2541498   +          +     0.11908166898588 * H1x2_4  +      -0.241544638637 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 + -0.2373753683635 * H1x2_1 + -0.03661175538589 *
H1x2_2 + 0.29534813812803 * H1x2_3 + 0.11908166898588 * H1x2_4 + -0.241544638637 * H1x2_5 ;
2541499   +   P_DepVar1  = P_DepVar1  +    -0.00276620815201 * H1x3_1
2541500   +          +     0.00487849269566 * H1x3_2  +     0.01323887261394 * H1x3_3
2541501   +          +     -0.0271389925801 * H1x3_4  +     0.00026595473892 * H1x3_5 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 + -0.00276620815201 * H1x3_1 + 0.00487849269566 *
H1x3_2 + 0.01323887261394 * H1x3_3 + -0.0271389925801 * H1x3_4 + 0.00026595473892 * H1x3_5 ;
2541502   +   P_DepVar1  =      4.0541137239843 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 4.0541137239843 + P_DepVar1 ;
2541503   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2541504   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2541505   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2541506   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2541507   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2541508   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2541509   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2541510   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2541511   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2541512   +END;
MPRINT(EM_DIAGRAM):   END;
2541513   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2541514   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2541515   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2541516   +END;
MPRINT(EM_DIAGRAM):   END;
2541517   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2541518   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2541519   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2541520   +END;
MPRINT(EM_DIAGRAM):   END;
2541521   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2541522   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2541523   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2541524   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2541525   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2541526   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2541527   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2541528   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2541529   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2541530   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2541531   +END;
MPRINT(EM_DIAGRAM):   END;
2541532   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2541533   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2541534   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2541535   +drop
2541536   +H1x1_1
2541537   +H1x1_2
2541538   +H1x1_3
2541539   +H1x1_4
2541540   +H1x1_5
2541541   +H1x2_1
2541542   +H1x2_2
2541543   +H1x2_3
2541544   +H1x2_4
2541545   +H1x2_5
2541546   +H1x3_1
2541547   +H1x3_2
2541548   +H1x3_3
2541549   +H1x3_4
2541550   +H1x3_5
2541551   +;
MPRINT(EM_DIAGRAM):   drop H1x1_1 H1x1_2 H1x1_3 H1x1_4 H1x1_5 H1x2_1 H1x2_2 H1x2_3 H1x2_4
H1x2_5 H1x3_1 H1x3_2 H1x3_3 H1x3_4 H1x3_5 ;
2541552   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
2541553   +* Renaming variables for AutoNeural10;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural10;
2541554   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2541555   +* Renaming Posterior variables for AutoNeural10;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural10;
2541556   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2541557   +drop AutoNeural10_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural10_P_DepVar1;
2541558   +AutoNeural10_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural10_P_DepVar1 = P_DepVar1;
2541559   +drop AutoNeural10_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural10_P_DepVar0;
2541560   +AutoNeural10_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural10_P_DepVar0 = P_DepVar0;
2541561   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2541562   +* Renaming _WARN_ variable for AutoNeural10;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural10;
2541563   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2541564   +length AutoNeural10_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural10_WARN_ $4;
2541565   +drop AutoNeural10_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural10_WARN_;
2541566   +AutoNeural10_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural10_WARN_ = _WARN_;
2541567   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2541568   +* TOOL: Extension Class;
MPRINT(EM_DIAGRAM):   * TOOL: Extension Class;
2541569   +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
2541570   +* NODE: FIMPORT;
MPRINT(EM_DIAGRAM):   * NODE: FIMPORT;
2541571   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2541572   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2541573   +* TOOL: Statistics Exploration;
MPRINT(EM_DIAGRAM):   * TOOL: Statistics Exploration;
2541574   +* TYPE: EXPLORE;
MPRINT(EM_DIAGRAM):   * TYPE: EXPLORE;
2541575   +* NODE: Stat;
MPRINT(EM_DIAGRAM):   * NODE: Stat;
2541576   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2541577   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2541578   +* TOOL: Filtering;
MPRINT(EM_DIAGRAM):   * TOOL: Filtering;
2541579   +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
2541580   +* NODE: Filter;
MPRINT(EM_DIAGRAM):   * NODE: Filter;
2541581   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2541582   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2541583   +* TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
MPRINT(EM_DIAGRAM):   * TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
2541584   +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
2541585   +* NODE: EMCODE4;
MPRINT(EM_DIAGRAM):   * NODE: EMCODE4;
2541586   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2541587   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2541588   +* TOOL: Transform;
MPRINT(EM_DIAGRAM):   * TOOL: Transform;
2541589   +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
2541590   +* NODE: Trans;
MPRINT(EM_DIAGRAM):   * NODE: Trans;
2541591   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2541592   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2541593   +* TOOL: Partition Class;
MPRINT(EM_DIAGRAM):   * TOOL: Partition Class;
2541594   +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
2541595   +* NODE: Part;
MPRINT(EM_DIAGRAM):   * NODE: Part;
2541596   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2541597   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2541598   +* TOOL: Metadata Node;
MPRINT(EM_DIAGRAM):   * TOOL: Metadata Node;
2541599   +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
2541600   +* NODE: Meta;
MPRINT(EM_DIAGRAM):   * NODE: Meta;
2541601   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2541602   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2541603   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
2541604   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
2541605   +* NODE: AutoNeural9;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural9;
2541606   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2541607   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2541608   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2541609   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2541610   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2541611   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2541612   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2541613   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2541614   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2541615   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2541616   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2541617   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2541618   +LENGTH _WARN_ $4
2541619   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
2541620   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2541621   +
2541622   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
2541623   +
2541624   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
2541625   +
2541626   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2541627   +
2541628   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2541629   +
2541630   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2541631   +
2541632   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2541633   +
2541634   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2541635   +
2541636   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2541637   +
2541638   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2541639   +
2541640   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2541641   +
2541642   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2541643   +
2541644   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
2541645   +
2541646   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2541647   +
2541648   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2541649   +
2541650   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
2541651   +
2541652   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2541653   +
2541654   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2541655   +
2541656   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2541657   +
2541658   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2541659   +
2541660   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
2541661   +
2541662   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2541663   +
2541664   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2541665   +
2541666   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2541667   +
2541668   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2541669   +
2541670   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2541671   +
2541672   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2541673   +
2541674   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2541675   +
2541676   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2541677   +
2541678   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
2541679   +
2541680   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2541681   +
2541682   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2541683   +
2541684   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2541685   +
2541686   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2541687   +
2541688   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2541689   +
2541690   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2541691   +
2541692   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2541693   +
2541694   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2541695   +
2541696   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
2541697   +
2541698   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
2541699   +
2541700   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
2541701   +
2541702   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
2541703   +
2541704   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2541705   +
2541706   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2541707   +
2541708   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2541709   +
2541710   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2541711   +
2541712   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2541713   +
2541714   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2541715   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2541716   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2541717   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2541718   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2541719   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2541720   +end;
MPRINT(EM_DIAGRAM):   end;
2541721   +else do;
MPRINT(EM_DIAGRAM):   else do;
2541722   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2541723   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2541724   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2541725   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2541726   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2541727   +   end;
MPRINT(EM_DIAGRAM):   end;
2541728   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2541729   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2541730   +   end;
MPRINT(EM_DIAGRAM):   end;
2541731   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2541732   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2541733   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2541734   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2541735   +   end;
MPRINT(EM_DIAGRAM):   end;
2541736   +end;
MPRINT(EM_DIAGRAM):   end;
2541737   +
2541738   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2541739   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2541740   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2541741   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2541742   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2541743   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2541744   +end;
MPRINT(EM_DIAGRAM):   end;
2541745   +else do;
MPRINT(EM_DIAGRAM):   else do;
2541746   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2541747   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2541748   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2541749   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2541750   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2541751   +   end;
MPRINT(EM_DIAGRAM):   end;
2541752   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2541753   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2541754   +   end;
MPRINT(EM_DIAGRAM):   end;
2541755   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2541756   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2541757   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2541758   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2541759   +   end;
MPRINT(EM_DIAGRAM):   end;
2541760   +end;
MPRINT(EM_DIAGRAM):   end;
2541761   +
2541762   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2541763   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2541764   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2541765   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2541766   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2541767   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2541768   +end;
MPRINT(EM_DIAGRAM):   end;
2541769   +else do;
MPRINT(EM_DIAGRAM):   else do;
2541770   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2541771   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2541772   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2541773   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2541774   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2541775   +   end;
MPRINT(EM_DIAGRAM):   end;
2541776   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2541777   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2541778   +   end;
MPRINT(EM_DIAGRAM):   end;
2541779   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2541780   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2541781   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2541782   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2541783   +   end;
MPRINT(EM_DIAGRAM):   end;
2541784   +end;
MPRINT(EM_DIAGRAM):   end;
2541785   +
2541786   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2541787   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2541788   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2541789   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2541790   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2541791   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2541792   +end;
MPRINT(EM_DIAGRAM):   end;
2541793   +else do;
MPRINT(EM_DIAGRAM):   else do;
2541794   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2541795   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2541796   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2541797   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2541798   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2541799   +   end;
MPRINT(EM_DIAGRAM):   end;
2541800   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2541801   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2541802   +   end;
MPRINT(EM_DIAGRAM):   end;
2541803   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2541804   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2541805   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2541806   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2541807   +   end;
MPRINT(EM_DIAGRAM):   end;
2541808   +end;
MPRINT(EM_DIAGRAM):   end;
2541809   +
2541810   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2541811   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2541812   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2541813   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2541814   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2541815   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2541816   +end;
MPRINT(EM_DIAGRAM):   end;
2541817   +else do;
MPRINT(EM_DIAGRAM):   else do;
2541818   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2541819   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2541820   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2541821   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2541822   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2541823   +   end;
MPRINT(EM_DIAGRAM):   end;
2541824   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2541825   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2541826   +   end;
MPRINT(EM_DIAGRAM):   end;
2541827   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2541828   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2541829   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2541830   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2541831   +   end;
MPRINT(EM_DIAGRAM):   end;
2541832   +end;
MPRINT(EM_DIAGRAM):   end;
2541833   +
2541834   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2541835   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2541836   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2541837   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2541838   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2541839   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2541840   +end;
MPRINT(EM_DIAGRAM):   end;
2541841   +else do;
MPRINT(EM_DIAGRAM):   else do;
2541842   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2541843   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2541844   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2541845   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2541846   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2541847   +   end;
MPRINT(EM_DIAGRAM):   end;
2541848   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2541849   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2541850   +   end;
MPRINT(EM_DIAGRAM):   end;
2541851   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2541852   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2541853   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2541854   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2541855   +   end;
MPRINT(EM_DIAGRAM):   end;
2541856   +end;
MPRINT(EM_DIAGRAM):   end;
2541857   +
2541858   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
2541859   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
2541860   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
2541861   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2541862   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2541863   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2541864   +end;
MPRINT(EM_DIAGRAM):   end;
2541865   +else do;
MPRINT(EM_DIAGRAM):   else do;
2541866   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2541867   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
2541868   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2541869   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
2541870   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
2541871   +   end;
MPRINT(EM_DIAGRAM):   end;
2541872   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
2541873   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
2541874   +   end;
MPRINT(EM_DIAGRAM):   end;
2541875   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2541876   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2541877   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2541878   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2541879   +   end;
MPRINT(EM_DIAGRAM):   end;
2541880   +end;
MPRINT(EM_DIAGRAM):   end;
2541881   +
2541882   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2541883   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
2541884   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2541885   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2541886   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2541887   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2541888   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2541889   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2541890   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2541891   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2541892   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2541893   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2541894   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2541895   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2541896   +end;
MPRINT(EM_DIAGRAM):   end;
2541897   +else do;
MPRINT(EM_DIAGRAM):   else do;
2541898   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2541899   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2541900   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2541901   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2541902   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2541903   +   end;
MPRINT(EM_DIAGRAM):   end;
2541904   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2541905   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2541906   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2541907   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2541908   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2541909   +   end;
MPRINT(EM_DIAGRAM):   end;
2541910   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2541911   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2541912   +   end;
MPRINT(EM_DIAGRAM):   end;
2541913   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2541914   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2541915   +   end;
MPRINT(EM_DIAGRAM):   end;
2541916   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2541917   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2541918   +   end;
MPRINT(EM_DIAGRAM):   end;
2541919   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2541920   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2541921   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2541922   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2541923   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2541924   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2541925   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2541926   +   end;
MPRINT(EM_DIAGRAM):   end;
2541927   +end;
MPRINT(EM_DIAGRAM):   end;
2541928   +
2541929   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2541930   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2541931   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
2541932   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2541933   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2541934   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2541935   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2541936   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2541937   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2541938   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2541939   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2541940   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2541941   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2541942   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2541943   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2541944   +end;
MPRINT(EM_DIAGRAM):   end;
2541945   +else do;
MPRINT(EM_DIAGRAM):   else do;
2541946   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2541947   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2541948   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2541949   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2541950   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2541951   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2541952   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2541953   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2541954   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2541955   +         end;
MPRINT(EM_DIAGRAM):   end;
2541956   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2541957   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2541958   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2541959   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2541960   +            end;
MPRINT(EM_DIAGRAM):   end;
2541961   +         end;
MPRINT(EM_DIAGRAM):   end;
2541962   +      end;
MPRINT(EM_DIAGRAM):   end;
2541963   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2541964   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2541965   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2541966   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2541967   +         end;
MPRINT(EM_DIAGRAM):   end;
2541968   +      end;
MPRINT(EM_DIAGRAM):   end;
2541969   +   end;
MPRINT(EM_DIAGRAM):   end;
2541970   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2541971   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2541972   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2541973   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2541974   +      end;
MPRINT(EM_DIAGRAM):   end;
2541975   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2541976   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2541977   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2541978   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2541979   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2541980   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2541981   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2541982   +         end;
MPRINT(EM_DIAGRAM):   end;
2541983   +      end;
MPRINT(EM_DIAGRAM):   end;
2541984   +   end;
MPRINT(EM_DIAGRAM):   end;
2541985   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2541986   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2541987   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2541988   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2541989   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2541990   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2541991   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2541992   +   end;
MPRINT(EM_DIAGRAM):   end;
2541993   +end;
MPRINT(EM_DIAGRAM):   end;
2541994   +
2541995   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2541996   +*** Checking missing input Interval
2541997   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2541998   +
2541999   +IF NMISS(
2542000   +   AcceptedCmpTotal ,
2542001   +   Age ,
2542002   +   Frq ,
2542003   +   Income ,
2542004   +   Kidhome ,
2542005   +   Mnt ,
2542006   +   MntFishProducts ,
2542007   +   MntFruits ,
2542008   +   MntGoldProds ,
2542009   +   MntMeatProducts ,
2542010   +   MntSweetProducts ,
2542011   +   MntWines ,
2542012   +   MonthsAsCustomer ,
2542013   +   NumCatalogPurchases ,
2542014   +   NumDealsPurchases ,
2542015   +   NumDistPurchases ,
2542016   +   NumStorePurchases ,
2542017   +   NumWebPurchases ,
2542018   +   NumWebVisitsMonth ,
2542019   +   RFMstat ,
2542020   +   RMntFrq ,
2542021   +   Recency ,
2542022   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
2542023   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2542024   +
2542025   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2542026   +END;
MPRINT(EM_DIAGRAM):   END;
2542027   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2542028   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
2542029   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2542030   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2542031   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2542032   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
2542033   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2542034   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2542035   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2542036   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2542037   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2542038   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2542039   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2542040   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2542041   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2542042   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2542043   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2542044   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
2542045   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2542046   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2542047   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2542048   +   S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2542049   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 *
MonthsAsCustomer ;
2542050   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2542051   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
2542052   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2542053   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2542054   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2542055   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
2542056   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2542057   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
2542058   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2542059   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
2542060   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2542061   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2542062   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2542063   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2542064   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2542065   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2542066   +END;
MPRINT(EM_DIAGRAM):   END;
2542067   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2542068   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2542069   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2542070   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
2542071   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
2542072   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2542073   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
2542074   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2542075   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2542076   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2542077   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2542078   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2542079   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2542080   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2542081   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2542082   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2542083   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2542084   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2542085   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2542086   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2542087   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2542088   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2542089   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
2542090   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2542091   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2542092   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
2542093   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2542094   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2542095   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2542096   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2542097   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2542098   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
2542099   +   ELSE S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2542100   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 *
MonthsAsCustomer ;
2542101   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2542102   +   ELSE S_NumCatalogPurchases
2542103   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2542104   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
2542105   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2542106   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2542107   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2542108   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
2542109   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2542110   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
2542111   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2542112   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2542113   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
2542114   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2542115   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2542116   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
2542117   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2542118   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2542119   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2542120   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2542121   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2542122   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
2542123   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2542124   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2542125   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2542126   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2542127   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2542128   +END;
MPRINT(EM_DIAGRAM):   END;
2542129   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2542130   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
2542131   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2542132   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2542133   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
2542134   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2542135   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2542136   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
2542137   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2542138   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2542139   +   H1x1_1  =     -0.7790327388408 * S_AcceptedCmpTotal
2542140   +          +     0.32193739579856 * S_Age  +    -0.43875684835169 * S_Frq
2542141   +          +     0.13013240455049 * S_Income  +    -0.74127716462976 *
2542142   +        S_Kidhome  +    -0.86416600561474 * S_Mnt  +     0.94819226754442 *
2542143   +        S_MntFishProducts  +     0.15895119408799 * S_MntFruits
2542144   +          +     0.03658391935071 * S_MntGoldProds  +    -3.75052142292398 *
2542145   +        S_MntMeatProducts  +    -0.22192220883538 * S_MntSweetProducts
2542146   +          +     0.80534656860633 * S_MntWines  +     0.16144794241259 *
2542147   +        S_MonthsAsCustomer  +    -1.53040364803625 * S_NumCatalogPurchases
2542148   +          +    -1.09856598010056 * S_NumDealsPurchases
2542149   +          +    -0.10571850472514 * S_NumDistPurchases
2542150   +          +     0.11898210654227 * S_NumStorePurchases
2542151   +          +      0.5984912060231 * S_NumWebPurchases
2542152   +          +     0.78592531126942 * S_NumWebVisitsMonth
2542153   +          +    -0.50004686386273 * S_RFMstat  +     0.40804018151571 *
2542154   +        S_RMntFrq  +    -0.94753260620308 * S_Recency
2542155   +          +    -0.49604118088328 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.7790327388408 * S_AcceptedCmpTotal + 0.32193739579856 *
S_Age + -0.43875684835169 * S_Frq + 0.13013240455049 * S_Income + -0.74127716462976 *
S_Kidhome + -0.86416600561474 * S_Mnt + 0.94819226754442 * S_MntFishProducts +
0.15895119408799 * S_MntFruits + 0.03658391935071 * S_MntGoldProds + -3.75052142292398 *
S_MntMeatProducts + -0.22192220883538 * S_MntSweetProducts + 0.80534656860633 * S_MntWines +
0.16144794241259 * S_MonthsAsCustomer + -1.53040364803625 * S_NumCatalogPurchases +
-1.09856598010056 * S_NumDealsPurchases + -0.10571850472514 * S_NumDistPurchases +
0.11898210654227 * S_NumStorePurchases + 0.5984912060231 * S_NumWebPurchases +
0.78592531126942 * S_NumWebVisitsMonth + -0.50004686386273 * S_RFMstat + 0.40804018151571 *
S_RMntFrq + -0.94753260620308 * S_Recency + -0.49604118088328 * S_Teenhome ;
2542156   +   H1x1_2  =    -0.22226926295489 * S_AcceptedCmpTotal
2542157   +          +     0.08523894206962 * S_Age  +    -0.13010378102207 * S_Frq
2542158   +          +    -0.61810906923536 * S_Income  +     0.26583917928045 *
2542159   +        S_Kidhome  +     0.57213479787981 * S_Mnt  +    -0.58077613046442 *
2542160   +        S_MntFishProducts  +      0.1530301493776 * S_MntFruits
2542161   +          +      0.4586167382631 * S_MntGoldProds  +     1.40179051129147 *
2542162   +        S_MntMeatProducts  +      0.0231413770297 * S_MntSweetProducts
2542163   +          +    -0.08483682112771 * S_MntWines  +     0.22891006905064 *
2542164   +        S_MonthsAsCustomer  +    -1.21866617917435 * S_NumCatalogPurchases
2542165   +          +    -0.84042044250624 * S_NumDealsPurchases
2542166   +          +    -0.10246261015488 * S_NumDistPurchases
2542167   +          +     0.06886149708824 * S_NumStorePurchases
2542168   +          +     0.63156910388199 * S_NumWebPurchases
2542169   +          +    -1.33032061845311 * S_NumWebVisitsMonth
2542170   +          +     0.51240040684649 * S_RFMstat  +     0.77604047421115 *
2542171   +        S_RMntFrq  +     1.27964260226958 * S_Recency
2542172   +          +     0.12022076571016 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.22226926295489 * S_AcceptedCmpTotal + 0.08523894206962 *
S_Age + -0.13010378102207 * S_Frq + -0.61810906923536 * S_Income + 0.26583917928045 *
S_Kidhome + 0.57213479787981 * S_Mnt + -0.58077613046442 * S_MntFishProducts + 0.1530301493776
* S_MntFruits + 0.4586167382631 * S_MntGoldProds + 1.40179051129147 * S_MntMeatProducts +
0.0231413770297 * S_MntSweetProducts + -0.08483682112771 * S_MntWines + 0.22891006905064 *
S_MonthsAsCustomer + -1.21866617917435 * S_NumCatalogPurchases + -0.84042044250624 *
S_NumDealsPurchases + -0.10246261015488 * S_NumDistPurchases + 0.06886149708824 *
S_NumStorePurchases + 0.63156910388199 * S_NumWebPurchases + -1.33032061845311 *
S_NumWebVisitsMonth + 0.51240040684649 * S_RFMstat + 0.77604047421115 * S_RMntFrq +
1.27964260226958 * S_Recency + 0.12022076571016 * S_Teenhome ;
2542173   +   H1x1_3  =     1.19879097976404 * S_AcceptedCmpTotal
2542174   +          +     0.14973951999399 * S_Age  +    -0.90630756390399 * S_Frq
2542175   +          +     0.64934241358682 * S_Income  +    -0.66249532206724 *
2542176   +        S_Kidhome  +     0.54195490560813 * S_Mnt  +    -0.58497380565417 *
2542177   +        S_MntFishProducts  +     0.12409202833851 * S_MntFruits
2542178   +          +     0.44480061346561 * S_MntGoldProds  +     3.27513201048136 *
2542179   +        S_MntMeatProducts  +     -0.1256493054184 * S_MntSweetProducts
2542180   +          +    -0.56080685022301 * S_MntWines  +     0.08633469383177 *
2542181   +        S_MonthsAsCustomer  +     0.45482673505107 * S_NumCatalogPurchases
2542182   +          +     0.45393712455366 * S_NumDealsPurchases
2542183   +          +    -0.25292198053552 * S_NumDistPurchases
2542184   +          +    -1.35582215064749 * S_NumStorePurchases
2542185   +          +    -0.83132202302639 * S_NumWebPurchases
2542186   +          +     1.87116225272678 * S_NumWebVisitsMonth
2542187   +          +     0.39564162951481 * S_RFMstat  +    -1.08810221295144 *
2542188   +        S_RMntFrq  +    -2.07407859514648 * S_Recency
2542189   +          +     -0.6849099475723 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.19879097976404 * S_AcceptedCmpTotal + 0.14973951999399 *
S_Age + -0.90630756390399 * S_Frq + 0.64934241358682 * S_Income + -0.66249532206724 *
S_Kidhome + 0.54195490560813 * S_Mnt + -0.58497380565417 * S_MntFishProducts +
0.12409202833851 * S_MntFruits + 0.44480061346561 * S_MntGoldProds + 3.27513201048136 *
S_MntMeatProducts + -0.1256493054184 * S_MntSweetProducts + -0.56080685022301 * S_MntWines +
0.08633469383177 * S_MonthsAsCustomer + 0.45482673505107 * S_NumCatalogPurchases +
0.45393712455366 * S_NumDealsPurchases + -0.25292198053552 * S_NumDistPurchases +
-1.35582215064749 * S_NumStorePurchases + -0.83132202302639 * S_NumWebPurchases +
1.87116225272678 * S_NumWebVisitsMonth + 0.39564162951481 * S_RFMstat + -1.08810221295144 *
S_RMntFrq + -2.07407859514648 * S_Recency + -0.6849099475723 * S_Teenhome ;
2542190   +   H1x1_1  = H1x1_1  +     0.81075414854045 * AcceptedCmp10
2542191   +          +    -0.33403710427327 * AcceptedCmp20  +    -0.62242387435975 *
2542192   +        AcceptedCmp30  +    -0.89439410552439 * AcceptedCmp40
2542193   +          +     0.77335976756467 * AcceptedCmp50  +    -0.08825784612626 *
2542194   +        Complain0  +      0.3404395194267 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.81075414854045 * AcceptedCmp10 + -0.33403710427327 *
AcceptedCmp20 + -0.62242387435975 * AcceptedCmp30 + -0.89439410552439 * AcceptedCmp40 +
0.77335976756467 * AcceptedCmp50 + -0.08825784612626 * Complain0 + 0.3404395194267 *
HigherEducationBinary0 ;
2542195   +   H1x1_2  = H1x1_2  +    -0.16741179709566 * AcceptedCmp10
2542196   +          +    -0.53751033948061 * AcceptedCmp20  +     0.80285496945068 *
2542197   +        AcceptedCmp30  +     0.39379279966091 * AcceptedCmp40
2542198   +          +    -1.40366799083237 * AcceptedCmp50  +     -0.4265482924132 *
2542199   +        Complain0  +     0.37272103593422 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.16741179709566 * AcceptedCmp10 + -0.53751033948061
* AcceptedCmp20 + 0.80285496945068 * AcceptedCmp30 + 0.39379279966091 * AcceptedCmp40 +
-1.40366799083237 * AcceptedCmp50 + -0.4265482924132 * Complain0 + 0.37272103593422 *
HigherEducationBinary0 ;
2542200   +   H1x1_3  = H1x1_3  +    -0.19417657656326 * AcceptedCmp10
2542201   +          +    -0.06547746897317 * AcceptedCmp20  +     0.21980739904513 *
2542202   +        AcceptedCmp30  +    -0.19452210052301 * AcceptedCmp40
2542203   +          +    -2.02403282278574 * AcceptedCmp50  +    -0.18250261144524 *
2542204   +        Complain0  +     0.34168103813312 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.19417657656326 * AcceptedCmp10 + -0.06547746897317
* AcceptedCmp20 + 0.21980739904513 * AcceptedCmp30 + -0.19452210052301 * AcceptedCmp40 +
-2.02403282278574 * AcceptedCmp50 + -0.18250261144524 * Complain0 + 0.34168103813312 *
HigherEducationBinary0 ;
2542205   +   H1x1_1  = H1x1_1  +    -0.03956789621002 * Education2n_Cycle
2542206   +          +    -0.38372374638888 * EducationBasic  +     -0.4178927802606 *
2542207   +        EducationGraduation  +    -0.61278625923288 * EducationMaster
2542208   +          +      0.4695898100094 * Marital_StatusDivorced
2542209   +          +    -0.52137742289262 * Marital_StatusMarried
2542210   +          +    -0.32382086914936 * Marital_StatusSingle
2542211   +          +    -0.66163012672344 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.03956789621002 * Education2n_Cycle +
-0.38372374638888 * EducationBasic + -0.4178927802606 * EducationGraduation +
-0.61278625923288 * EducationMaster + 0.4695898100094 * Marital_StatusDivorced +
-0.52137742289262 * Marital_StatusMarried + -0.32382086914936 * Marital_StatusSingle +
-0.66163012672344 * Marital_StatusTogether ;
2542212   +   H1x1_2  = H1x1_2  +    -0.25832319223886 * Education2n_Cycle
2542213   +          +     0.05602860720141 * EducationBasic  +    -0.86282852488383 *
2542214   +        EducationGraduation  +     0.18916317018059 * EducationMaster
2542215   +          +    -1.04858218653238 * Marital_StatusDivorced
2542216   +          +     2.41098335093061 * Marital_StatusMarried
2542217   +          +    -1.94696044861334 * Marital_StatusSingle
2542218   +          +     2.16021514856437 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.25832319223886 * Education2n_Cycle +
0.05602860720141 * EducationBasic + -0.86282852488383 * EducationGraduation + 0.18916317018059
* EducationMaster + -1.04858218653238 * Marital_StatusDivorced + 2.41098335093061 *
Marital_StatusMarried + -1.94696044861334 * Marital_StatusSingle + 2.16021514856437 *
Marital_StatusTogether ;
2542219   +   H1x1_3  = H1x1_3  +    -0.05351872242069 * Education2n_Cycle
2542220   +          +    -0.56850783552841 * EducationBasic  +    -0.14880907057098 *
2542221   +        EducationGraduation  +    -0.32850851013319 * EducationMaster
2542222   +          +     0.42964114177062 * Marital_StatusDivorced
2542223   +          +    -0.38607635605816 * Marital_StatusMarried
2542224   +          +    -0.02157405407852 * Marital_StatusSingle
2542225   +          +    -0.59995619744527 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.05351872242069 * Education2n_Cycle +
-0.56850783552841 * EducationBasic + -0.14880907057098 * EducationGraduation +
-0.32850851013319 * EducationMaster + 0.42964114177062 * Marital_StatusDivorced +
-0.38607635605816 * Marital_StatusMarried + -0.02157405407852 * Marital_StatusSingle +
-0.59995619744527 * Marital_StatusTogether ;
2542226   +   H1x1_1  =    -0.53239337390307 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.53239337390307 + H1x1_1 ;
2542227   +   H1x1_2  =     0.99428677123948 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.99428677123948 + H1x1_2 ;
2542228   +   H1x1_3  =       1.835877082844 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.835877082844 + H1x1_3 ;
2542229   +   H1x1_4  = 0;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0;
2542230   +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 );
2542231   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2542232   +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
2542233   +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
2542234   +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
2542235   +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
2542236   +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
2542237   +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
2542238   +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
2542239   +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
2542240   +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
2542241   +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
2542242   +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
2542243   +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
2542244   +END;
MPRINT(EM_DIAGRAM):   END;
2542245   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2542246   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
2542247   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
2542248   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
2542249   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
2542250   +END;
MPRINT(EM_DIAGRAM):   END;
2542251   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2542252   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2542253   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2542254   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2542255   +   P_DepVar1  =    -3.41904253756965 * H1x1_1  +    -7.11204151517034 * H1x1_2
2542256   +          +     10.7909509395818 * H1x1_3  +    -2.20432578352426 * H1x1_4 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.41904253756965 * H1x1_1 + -7.11204151517034 * H1x1_2 +
10.7909509395818 * H1x1_3 + -2.20432578352426 * H1x1_4 ;
2542257   +   P_DepVar1  =    -3.66951098257489 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.66951098257489 + P_DepVar1 ;
2542258   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2542259   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2542260   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2542261   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2542262   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2542263   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2542264   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2542265   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2542266   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2542267   +END;
MPRINT(EM_DIAGRAM):   END;
2542268   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2542269   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2542270   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2542271   +END;
MPRINT(EM_DIAGRAM):   END;
2542272   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2542273   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2542274   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2542275   +END;
MPRINT(EM_DIAGRAM):   END;
2542276   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2542277   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2542278   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2542279   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2542280   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2542281   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2542282   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2542283   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2542284   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2542285   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2542286   +END;
MPRINT(EM_DIAGRAM):   END;
2542287   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2542288   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2542289   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2542290   +drop
2542291   +H1x1_1
2542292   +H1x1_2
2542293   +H1x1_3
2542294   +H1x1_4
2542295   +;
MPRINT(EM_DIAGRAM):   drop H1x1_1 H1x1_2 H1x1_3 H1x1_4 ;
2542296   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
2542297   +* Renaming variables for AutoNeural9;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural9;
2542298   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2542299   +* Renaming Posterior variables for AutoNeural9;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural9;
2542300   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2542301   +drop AutoNeural9_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural9_P_DepVar1;
2542302   +AutoNeural9_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural9_P_DepVar1 = P_DepVar1;
2542303   +drop AutoNeural9_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural9_P_DepVar0;
2542304   +AutoNeural9_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural9_P_DepVar0 = P_DepVar0;
2542305   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2542306   +* Renaming _WARN_ variable for AutoNeural9;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural9;
2542307   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2542308   +length AutoNeural9_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural9_WARN_ $4;
2542309   +drop AutoNeural9_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural9_WARN_;
2542310   +AutoNeural9_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural9_WARN_ = _WARN_;
2542311   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2542312   +* TOOL: Extension Class;
MPRINT(EM_DIAGRAM):   * TOOL: Extension Class;
2542313   +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
2542314   +* NODE: FIMPORT;
MPRINT(EM_DIAGRAM):   * NODE: FIMPORT;
2542315   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2542316   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2542317   +* TOOL: Statistics Exploration;
MPRINT(EM_DIAGRAM):   * TOOL: Statistics Exploration;
2542318   +* TYPE: EXPLORE;
MPRINT(EM_DIAGRAM):   * TYPE: EXPLORE;
2542319   +* NODE: Stat;
MPRINT(EM_DIAGRAM):   * NODE: Stat;
2542320   +*------------------------------------------------------------*;
The SAS System
 
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2542321   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2542322   +* TOOL: Filtering;
MPRINT(EM_DIAGRAM):   * TOOL: Filtering;
2542323   +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
2542324   +* NODE: Filter;
MPRINT(EM_DIAGRAM):   * NODE: Filter;
2542325   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2542326   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2542327   +* TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
MPRINT(EM_DIAGRAM):   * TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
2542328   +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
2542329   +* NODE: EMCODE4;
MPRINT(EM_DIAGRAM):   * NODE: EMCODE4;
2542330   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2542331   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2542332   +* TOOL: Transform;
MPRINT(EM_DIAGRAM):   * TOOL: Transform;
2542333   +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
2542334   +* NODE: Trans;
MPRINT(EM_DIAGRAM):   * NODE: Trans;
2542335   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2542336   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2542337   +* TOOL: Partition Class;
MPRINT(EM_DIAGRAM):   * TOOL: Partition Class;
2542338   +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
2542339   +* NODE: Part;
MPRINT(EM_DIAGRAM):   * NODE: Part;
2542340   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2542341   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2542342   +* TOOL: Metadata Node;
MPRINT(EM_DIAGRAM):   * TOOL: Metadata Node;
2542343   +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
2542344   +* NODE: Meta;
MPRINT(EM_DIAGRAM):   * NODE: Meta;
2542345   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2542346   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2542347   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
2542348   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
2542349   +* NODE: AutoNeural11;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural11;
2542350   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2542351   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2542352   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2542353   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2542354   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2542355   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2542356   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2542357   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2542358   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2542359   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2542360   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2542361   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2542362   +LENGTH _WARN_ $4
2542363   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
2542364   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2542365   +
2542366   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
2542367   +
2542368   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
2542369   +
2542370   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2542371   +
2542372   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2542373   +
2542374   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2542375   +
2542376   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2542377   +
2542378   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2542379   +
2542380   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2542381   +
2542382   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2542383   +
2542384   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2542385   +
2542386   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2542387   +
2542388   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
2542389   +
2542390   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2542391   +
2542392   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2542393   +
2542394   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
2542395   +
2542396   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2542397   +
2542398   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2542399   +
2542400   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2542401   +
2542402   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2542403   +
2542404   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
2542405   +
2542406   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2542407   +
2542408   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2542409   +
2542410   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2542411   +
2542412   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2542413   +
2542414   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2542415   +
2542416   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2542417   +
2542418   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2542419   +
2542420   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2542421   +
2542422   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
2542423   +
2542424   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2542425   +
2542426   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2542427   +
2542428   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2542429   +
2542430   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2542431   +
2542432   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2542433   +
2542434   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2542435   +
2542436   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2542437   +
2542438   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2542439   +
2542440   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
2542441   +
2542442   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
2542443   +
2542444   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
2542445   +
2542446   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
2542447   +
2542448   +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
2542449   +
2542450   +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
2542451   +
2542452   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2542453   +
2542454   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2542455   +
2542456   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2542457   +
2542458   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2542459   +
2542460   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2542461   +
2542462   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2542463   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2542464   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2542465   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2542466   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2542467   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2542468   +end;
MPRINT(EM_DIAGRAM):   end;
2542469   +else do;
MPRINT(EM_DIAGRAM):   else do;
2542470   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2542471   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2542472   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2542473   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2542474   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2542475   +   end;
MPRINT(EM_DIAGRAM):   end;
2542476   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2542477   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2542478   +   end;
MPRINT(EM_DIAGRAM):   end;
2542479   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2542480   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2542481   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2542482   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2542483   +   end;
MPRINT(EM_DIAGRAM):   end;
2542484   +end;
MPRINT(EM_DIAGRAM):   end;
2542485   +
2542486   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2542487   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2542488   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2542489   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2542490   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2542491   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2542492   +end;
MPRINT(EM_DIAGRAM):   end;
2542493   +else do;
MPRINT(EM_DIAGRAM):   else do;
2542494   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2542495   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2542496   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2542497   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2542498   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2542499   +   end;
MPRINT(EM_DIAGRAM):   end;
2542500   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2542501   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2542502   +   end;
MPRINT(EM_DIAGRAM):   end;
2542503   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2542504   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2542505   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2542506   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2542507   +   end;
MPRINT(EM_DIAGRAM):   end;
2542508   +end;
MPRINT(EM_DIAGRAM):   end;
2542509   +
2542510   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2542511   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2542512   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2542513   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2542514   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2542515   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2542516   +end;
MPRINT(EM_DIAGRAM):   end;
2542517   +else do;
MPRINT(EM_DIAGRAM):   else do;
2542518   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2542519   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2542520   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2542521   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2542522   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2542523   +   end;
MPRINT(EM_DIAGRAM):   end;
2542524   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2542525   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2542526   +   end;
MPRINT(EM_DIAGRAM):   end;
2542527   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2542528   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2542529   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2542530   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2542531   +   end;
MPRINT(EM_DIAGRAM):   end;
2542532   +end;
MPRINT(EM_DIAGRAM):   end;
2542533   +
2542534   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2542535   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2542536   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2542537   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2542538   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2542539   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2542540   +end;
MPRINT(EM_DIAGRAM):   end;
2542541   +else do;
MPRINT(EM_DIAGRAM):   else do;
2542542   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2542543   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2542544   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2542545   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2542546   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2542547   +   end;
MPRINT(EM_DIAGRAM):   end;
2542548   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2542549   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2542550   +   end;
MPRINT(EM_DIAGRAM):   end;
2542551   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2542552   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2542553   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2542554   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2542555   +   end;
MPRINT(EM_DIAGRAM):   end;
2542556   +end;
MPRINT(EM_DIAGRAM):   end;
2542557   +
2542558   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2542559   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2542560   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2542561   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2542562   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2542563   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2542564   +end;
MPRINT(EM_DIAGRAM):   end;
2542565   +else do;
MPRINT(EM_DIAGRAM):   else do;
2542566   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2542567   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2542568   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2542569   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2542570   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2542571   +   end;
MPRINT(EM_DIAGRAM):   end;
2542572   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2542573   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2542574   +   end;
MPRINT(EM_DIAGRAM):   end;
2542575   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2542576   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2542577   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2542578   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2542579   +   end;
MPRINT(EM_DIAGRAM):   end;
2542580   +end;
MPRINT(EM_DIAGRAM):   end;
2542581   +
2542582   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2542583   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2542584   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2542585   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2542586   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2542587   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2542588   +end;
MPRINT(EM_DIAGRAM):   end;
2542589   +else do;
MPRINT(EM_DIAGRAM):   else do;
2542590   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2542591   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2542592   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2542593   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2542594   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2542595   +   end;
MPRINT(EM_DIAGRAM):   end;
2542596   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2542597   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2542598   +   end;
MPRINT(EM_DIAGRAM):   end;
2542599   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2542600   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2542601   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2542602   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2542603   +   end;
MPRINT(EM_DIAGRAM):   end;
2542604   +end;
MPRINT(EM_DIAGRAM):   end;
2542605   +
2542606   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
2542607   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
2542608   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
2542609   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2542610   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2542611   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2542612   +end;
MPRINT(EM_DIAGRAM):   end;
2542613   +else do;
MPRINT(EM_DIAGRAM):   else do;
2542614   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2542615   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
2542616   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2542617   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
2542618   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
2542619   +   end;
MPRINT(EM_DIAGRAM):   end;
2542620   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
2542621   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
2542622   +   end;
MPRINT(EM_DIAGRAM):   end;
2542623   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2542624   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2542625   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2542626   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2542627   +   end;
MPRINT(EM_DIAGRAM):   end;
2542628   +end;
MPRINT(EM_DIAGRAM):   end;
2542629   +
2542630   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2542631   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
2542632   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2542633   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2542634   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2542635   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2542636   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2542637   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2542638   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2542639   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2542640   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2542641   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2542642   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2542643   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2542644   +end;
MPRINT(EM_DIAGRAM):   end;
2542645   +else do;
MPRINT(EM_DIAGRAM):   else do;
2542646   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2542647   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2542648   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2542649   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2542650   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2542651   +   end;
MPRINT(EM_DIAGRAM):   end;
2542652   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2542653   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2542654   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2542655   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2542656   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2542657   +   end;
MPRINT(EM_DIAGRAM):   end;
2542658   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2542659   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2542660   +   end;
MPRINT(EM_DIAGRAM):   end;
2542661   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2542662   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2542663   +   end;
MPRINT(EM_DIAGRAM):   end;
2542664   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2542665   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2542666   +   end;
MPRINT(EM_DIAGRAM):   end;
2542667   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2542668   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2542669   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2542670   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2542671   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2542672   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2542673   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2542674   +   end;
MPRINT(EM_DIAGRAM):   end;
2542675   +end;
MPRINT(EM_DIAGRAM):   end;
2542676   +
2542677   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2542678   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2542679   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
2542680   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2542681   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2542682   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2542683   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2542684   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2542685   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2542686   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2542687   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2542688   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2542689   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2542690   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2542691   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2542692   +end;
MPRINT(EM_DIAGRAM):   end;
2542693   +else do;
MPRINT(EM_DIAGRAM):   else do;
2542694   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2542695   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2542696   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2542697   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2542698   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2542699   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2542700   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2542701   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2542702   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2542703   +         end;
MPRINT(EM_DIAGRAM):   end;
2542704   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2542705   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2542706   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2542707   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2542708   +            end;
MPRINT(EM_DIAGRAM):   end;
2542709   +         end;
MPRINT(EM_DIAGRAM):   end;
2542710   +      end;
MPRINT(EM_DIAGRAM):   end;
2542711   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2542712   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2542713   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2542714   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2542715   +         end;
MPRINT(EM_DIAGRAM):   end;
2542716   +      end;
MPRINT(EM_DIAGRAM):   end;
2542717   +   end;
MPRINT(EM_DIAGRAM):   end;
2542718   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2542719   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2542720   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2542721   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2542722   +      end;
MPRINT(EM_DIAGRAM):   end;
2542723   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2542724   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2542725   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2542726   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2542727   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2542728   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2542729   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2542730   +         end;
MPRINT(EM_DIAGRAM):   end;
2542731   +      end;
MPRINT(EM_DIAGRAM):   end;
2542732   +   end;
MPRINT(EM_DIAGRAM):   end;
2542733   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2542734   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2542735   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2542736   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2542737   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2542738   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2542739   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2542740   +   end;
MPRINT(EM_DIAGRAM):   end;
2542741   +end;
MPRINT(EM_DIAGRAM):   end;
2542742   +
2542743   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2542744   +*** Checking missing input Interval
2542745   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2542746   +
2542747   +IF NMISS(
2542748   +   AcceptedCmpTotal ,
2542749   +   Age ,
2542750   +   Frq ,
2542751   +   Income ,
2542752   +   Kidhome ,
2542753   +   Mnt ,
2542754   +   MntFishProducts ,
2542755   +   MntFruits ,
2542756   +   MntGoldProds ,
2542757   +   MntMeatProducts ,
2542758   +   MntSweetProducts ,
2542759   +   MntWines ,
2542760   +   MonthsAsCustomer ,
2542761   +   NumCatalogPurchases ,
2542762   +   NumDealsPurchases ,
2542763   +   NumDistPurchases ,
2542764   +   NumStorePurchases ,
2542765   +   NumWebPurchases ,
2542766   +   NumWebVisitsMonth ,
2542767   +   RFMstat ,
2542768   +   RMntFrq ,
2542769   +   Recency ,
2542770   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
2542771   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2542772   +
2542773   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2542774   +END;
MPRINT(EM_DIAGRAM):   END;
2542775   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2542776   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
2542777   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2542778   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2542779   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2542780   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
2542781   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2542782   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2542783   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2542784   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2542785   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2542786   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2542787   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2542788   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2542789   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2542790   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2542791   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2542792   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
2542793   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2542794   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2542795   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2542796   +   S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2542797   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 *
MonthsAsCustomer ;
2542798   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2542799   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
2542800   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2542801   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2542802   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2542803   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
2542804   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2542805   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
2542806   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2542807   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
2542808   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2542809   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2542810   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2542811   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2542812   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2542813   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2542814   +END;
MPRINT(EM_DIAGRAM):   END;
2542815   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2542816   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2542817   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2542818   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
2542819   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
2542820   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2542821   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
2542822   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2542823   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2542824   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2542825   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2542826   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2542827   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2542828   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2542829   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2542830   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2542831   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2542832   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2542833   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2542834   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2542835   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2542836   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2542837   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
2542838   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2542839   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2542840   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
2542841   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2542842   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2542843   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2542844   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2542845   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2542846   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
2542847   +   ELSE S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2542848   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 *
MonthsAsCustomer ;
2542849   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2542850   +   ELSE S_NumCatalogPurchases
2542851   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2542852   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
2542853   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2542854   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2542855   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2542856   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
2542857   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2542858   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
2542859   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2542860   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2542861   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
2542862   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2542863   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2542864   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
2542865   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2542866   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2542867   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2542868   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2542869   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2542870   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
2542871   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2542872   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2542873   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2542874   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2542875   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2542876   +END;
MPRINT(EM_DIAGRAM):   END;
2542877   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2542878   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
2542879   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2542880   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2542881   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
2542882   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2542883   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2542884   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
2542885   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2542886   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2542887   +   H1x1_1  =     0.08465472857554 * S_AcceptedCmpTotal
2542888   +          +     0.23104131534618 * S_Age  +     0.27646175976509 * S_Frq
2542889   +          +     0.45938840681203 * S_Income  +     0.09814900830666 *
2542890   +        S_Kidhome  +     0.23249430277518 * S_Mnt  +    -0.51905493105122 *
2542891   +        S_MntFishProducts  +    -0.07604226481078 * S_MntFruits
2542892   +          +     0.10100393832157 * S_MntGoldProds  +     1.56159221713858 *
2542893   +        S_MntMeatProducts  +     0.12166799382268 * S_MntSweetProducts
2542894   +          +    -0.63388816790524 * S_MntWines  +     0.00878303775585 *
2542895   +        S_MonthsAsCustomer  +     0.01990411233136 * S_NumCatalogPurchases
2542896   +          +     0.19770934886328 * S_NumDealsPurchases
2542897   +          +      0.0515215988111 * S_NumDistPurchases
2542898   +          +    -0.34569346346089 * S_NumStorePurchases
2542899   +          +    -0.27122293596124 * S_NumWebPurchases
2542900   +          +    -0.17061565609755 * S_NumWebVisitsMonth
2542901   +          +      0.1271178187502 * S_RFMstat  +     0.38306508975954 *
2542902   +        S_RMntFrq  +     0.05823588653853 * S_Recency
2542903   +          +    -0.03760117378617 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.08465472857554 * S_AcceptedCmpTotal + 0.23104131534618 *
S_Age + 0.27646175976509 * S_Frq + 0.45938840681203 * S_Income + 0.09814900830666 * S_Kidhome
+ 0.23249430277518 * S_Mnt + -0.51905493105122 * S_MntFishProducts + -0.07604226481078 *
S_MntFruits + 0.10100393832157 * S_MntGoldProds + 1.56159221713858 * S_MntMeatProducts +
0.12166799382268 * S_MntSweetProducts + -0.63388816790524 * S_MntWines + 0.00878303775585 *
S_MonthsAsCustomer + 0.01990411233136 * S_NumCatalogPurchases + 0.19770934886328 *
S_NumDealsPurchases + 0.0515215988111 * S_NumDistPurchases + -0.34569346346089 *
S_NumStorePurchases + -0.27122293596124 * S_NumWebPurchases + -0.17061565609755 *
S_NumWebVisitsMonth + 0.1271178187502 * S_RFMstat + 0.38306508975954 * S_RMntFrq +
0.05823588653853 * S_Recency + -0.03760117378617 * S_Teenhome ;
2542904   +   H1x1_2  =     0.16564144258189 * S_AcceptedCmpTotal
2542905   +          +    -0.18930338067433 * S_Age  +    -0.23013558761757 * S_Frq
2542906   +          +     -0.1347135122598 * S_Income  +     0.04776498811407 *
2542907   +        S_Kidhome  +    -0.14940302068852 * S_Mnt  +    -0.13108691405604 *
2542908   +        S_MntFishProducts  +    -0.02561341150704 * S_MntFruits
2542909   +          +    -0.02022222891948 * S_MntGoldProds  +     0.80867688993093 *
2542910   +        S_MntMeatProducts  +    -0.08374488783635 * S_MntSweetProducts
2542911   +          +     -0.6719369441832 * S_MntWines  +    -0.14760035685198 *
2542912   +        S_MonthsAsCustomer  +      0.4007376271331 * S_NumCatalogPurchases
2542913   +          +     0.54308887602031 * S_NumDealsPurchases
2542914   +          +    -0.22507315320192 * S_NumDistPurchases
2542915   +          +    -0.79861387328361 * S_NumStorePurchases
2542916   +          +    -0.45467494002747 * S_NumWebPurchases
2542917   +          +      0.2119048824613 * S_NumWebVisitsMonth
2542918   +          +     0.30167662748678 * S_RFMstat  +     0.10712110659027 *
2542919   +        S_RMntFrq  +    -0.03061918029089 * S_Recency
2542920   +          +    -0.06096313113607 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.16564144258189 * S_AcceptedCmpTotal + -0.18930338067433 *
S_Age + -0.23013558761757 * S_Frq + -0.1347135122598 * S_Income + 0.04776498811407 * S_Kidhome
+ -0.14940302068852 * S_Mnt + -0.13108691405604 * S_MntFishProducts + -0.02561341150704 *
S_MntFruits + -0.02022222891948 * S_MntGoldProds + 0.80867688993093 * S_MntMeatProducts +
-0.08374488783635 * S_MntSweetProducts + -0.6719369441832 * S_MntWines + -0.14760035685198 *
S_MonthsAsCustomer + 0.4007376271331 * S_NumCatalogPurchases + 0.54308887602031 *
S_NumDealsPurchases + -0.22507315320192 * S_NumDistPurchases + -0.79861387328361 *
S_NumStorePurchases + -0.45467494002747 * S_NumWebPurchases + 0.2119048824613 *
S_NumWebVisitsMonth + 0.30167662748678 * S_RFMstat + 0.10712110659027 * S_RMntFrq +
-0.03061918029089 * S_Recency + -0.06096313113607 * S_Teenhome ;
2542921   +   H1x1_3  =     0.02674875562898 * S_AcceptedCmpTotal
2542922   +          +    -0.19731891748843 * S_Age  +    -0.00753784701259 * S_Frq
2542923   +          +    -0.31764694608254 * S_Income  +     0.49525183733398 *
2542924   +        S_Kidhome  +     0.24623619243686 * S_Mnt  +     0.25904859702044 *
2542925   +        S_MntFishProducts  +     0.26153358982994 * S_MntFruits
2542926   +          +    -0.07223707213485 * S_MntGoldProds  +    -0.15192960471493 *
2542927   +        S_MntMeatProducts  +     0.08241128624385 * S_MntSweetProducts
2542928   +          +     0.62479763709054 * S_MntWines  +     0.03593742779349 *
2542929   +        S_MonthsAsCustomer  +     0.00825730323418 * S_NumCatalogPurchases
2542930   +          +     -0.0771083149302 * S_NumDealsPurchases
2542931   +          +     0.03403621221162 * S_NumDistPurchases
2542932   +          +     0.61303946422025 * S_NumStorePurchases
2542933   +          +     0.27126793634053 * S_NumWebPurchases
2542934   +          +     -0.9769688424222 * S_NumWebVisitsMonth
2542935   +          +     0.08832170040425 * S_RFMstat  +     0.13241491054212 *
2542936   +        S_RMntFrq  +     0.94872655811163 * S_Recency
2542937   +          +     0.22002222738147 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.02674875562898 * S_AcceptedCmpTotal + -0.19731891748843 *
S_Age + -0.00753784701259 * S_Frq + -0.31764694608254 * S_Income + 0.49525183733398 *
S_Kidhome + 0.24623619243686 * S_Mnt + 0.25904859702044 * S_MntFishProducts + 0.26153358982994
* S_MntFruits + -0.07223707213485 * S_MntGoldProds + -0.15192960471493 * S_MntMeatProducts +
0.08241128624385 * S_MntSweetProducts + 0.62479763709054 * S_MntWines + 0.03593742779349 *
S_MonthsAsCustomer + 0.00825730323418 * S_NumCatalogPurchases + -0.0771083149302 *
S_NumDealsPurchases + 0.03403621221162 * S_NumDistPurchases + 0.61303946422025 *
S_NumStorePurchases + 0.27126793634053 * S_NumWebPurchases + -0.9769688424222 *
S_NumWebVisitsMonth + 0.08832170040425 * S_RFMstat + 0.13241491054212 * S_RMntFrq +
0.94872655811163 * S_Recency + 0.22002222738147 * S_Teenhome ;
2542938   +   H1x1_4  =     0.46328587348713 * S_AcceptedCmpTotal
2542939   +          +      -0.306946385792 * S_Age  +    -0.24247964225191 * S_Frq
2542940   +          +    -0.42968609314513 * S_Income  +    -0.08934431746158 *
2542941   +        S_Kidhome  +     0.15972194979558 * S_Mnt  +    -0.22174909818279 *
2542942   +        S_MntFishProducts  +    -0.23755215058744 * S_MntFruits
2542943   +          +      -0.124789433808 * S_MntGoldProds  +     0.50040173514144 *
2542944   +        S_MntMeatProducts  +     0.02850063230459 * S_MntSweetProducts
2542945   +          +     0.13427582671876 * S_MntWines  +     0.25569886862761 *
2542946   +        S_MonthsAsCustomer  +     0.34004201732149 * S_NumCatalogPurchases
2542947   +          +     0.29894603062327 * S_NumDealsPurchases
2542948   +          +     0.07614620530875 * S_NumDistPurchases
2542949   +          +     0.15402335009896 * S_NumStorePurchases
2542950   +          +     0.10615749096863 * S_NumWebPurchases
2542951   +          +     0.41962286816879 * S_NumWebVisitsMonth
2542952   +          +     0.00203630873093 * S_RFMstat  +     0.04736976805951 *
2542953   +        S_RMntFrq  +    -0.84751074132422 * S_Recency
2542954   +          +      0.2189023557249 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.46328587348713 * S_AcceptedCmpTotal + -0.306946385792 * S_Age
+ -0.24247964225191 * S_Frq + -0.42968609314513 * S_Income + -0.08934431746158 * S_Kidhome +
0.15972194979558 * S_Mnt + -0.22174909818279 * S_MntFishProducts + -0.23755215058744 *
S_MntFruits + -0.124789433808 * S_MntGoldProds + 0.50040173514144 * S_MntMeatProducts +
0.02850063230459 * S_MntSweetProducts + 0.13427582671876 * S_MntWines + 0.25569886862761 *
S_MonthsAsCustomer + 0.34004201732149 * S_NumCatalogPurchases + 0.29894603062327 *
S_NumDealsPurchases + 0.07614620530875 * S_NumDistPurchases + 0.15402335009896 *
S_NumStorePurchases + 0.10615749096863 * S_NumWebPurchases + 0.41962286816879 *
S_NumWebVisitsMonth + 0.00203630873093 * S_RFMstat + 0.04736976805951 * S_RMntFrq +
-0.84751074132422 * S_Recency + 0.2189023557249 * S_Teenhome ;
2542955   +   H1x1_5  =    -0.32353341757368 * S_AcceptedCmpTotal
2542956   +          +     0.03233494925748 * S_Age  +    -0.21296093282526 * S_Frq
2542957   +          +    -0.33919081075007 * S_Income  +     0.08771362671573 *
2542958   +        S_Kidhome  +    -0.10797068838726 * S_Mnt  +    -0.19736358637985 *
2542959   +        S_MntFishProducts  +    -0.19679917231132 * S_MntFruits
2542960   +          +     0.07502386205588 * S_MntGoldProds  +    -0.50948750987247 *
2542961   +        S_MntMeatProducts  +     0.00413757018488 * S_MntSweetProducts
2542962   +          +      0.0788538305785 * S_MntWines  +    -0.02917052455021 *
2542963   +        S_MonthsAsCustomer  +    -0.53933514609821 * S_NumCatalogPurchases
2542964   +          +     0.14392502416642 * S_NumDealsPurchases
2542965   +          +    -0.10026304978633 * S_NumDistPurchases
2542966   +          +     -0.0588453022746 * S_NumStorePurchases
2542967   +          +     0.24799398610395 * S_NumWebPurchases
2542968   +          +    -0.52695548549717 * S_NumWebVisitsMonth
2542969   +          +     0.01855620452049 * S_RFMstat  +    -0.00189170766477 *
2542970   +        S_RMntFrq  +     0.51841177421912 * S_Recency
2542971   +          +     0.31491299720207 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -0.32353341757368 * S_AcceptedCmpTotal + 0.03233494925748 *
S_Age + -0.21296093282526 * S_Frq + -0.33919081075007 * S_Income + 0.08771362671573 *
S_Kidhome + -0.10797068838726 * S_Mnt + -0.19736358637985 * S_MntFishProducts +
-0.19679917231132 * S_MntFruits + 0.07502386205588 * S_MntGoldProds + -0.50948750987247 *
S_MntMeatProducts + 0.00413757018488 * S_MntSweetProducts + 0.0788538305785 * S_MntWines +
-0.02917052455021 * S_MonthsAsCustomer + -0.53933514609821 * S_NumCatalogPurchases +
0.14392502416642 * S_NumDealsPurchases + -0.10026304978633 * S_NumDistPurchases +
-0.0588453022746 * S_NumStorePurchases + 0.24799398610395 * S_NumWebPurchases +
-0.52695548549717 * S_NumWebVisitsMonth + 0.01855620452049 * S_RFMstat + -0.00189170766477 *
S_RMntFrq + 0.51841177421912 * S_Recency + 0.31491299720207 * S_Teenhome ;
2542972   +   H1x1_6  =     -0.2113594539647 * S_AcceptedCmpTotal
2542973   +          +     -0.1052829531896 * S_Age  +     0.30802959734964 * S_Frq
2542974   +          +    -0.03112570586685 * S_Income  +     0.19129661263247 *
2542975   +        S_Kidhome  +     0.00533736622639 * S_Mnt  +    -0.06112703732925 *
2542976   +        S_MntFishProducts  +    -0.15875686512247 * S_MntFruits
2542977   +          +    -0.08040179272112 * S_MntGoldProds  +    -0.14462087536907 *
2542978   +        S_MntMeatProducts  +     0.21353582706121 * S_MntSweetProducts
2542979   +          +    -0.30180630737612 * S_MntWines  +    -0.11825033043182 *
2542980   +        S_MonthsAsCustomer  +     -0.2917393256645 * S_NumCatalogPurchases
2542981   +          +     0.08149600854964 * S_NumDealsPurchases
2542982   +          +     0.16873541613513 * S_NumDistPurchases
2542983   +          +    -0.20437343413446 * S_NumStorePurchases
2542984   +          +     -0.1671107527288 * S_NumWebPurchases
2542985   +          +     0.03677043100993 * S_NumWebVisitsMonth
2542986   +          +      0.0240516540488 * S_RFMstat  +     0.06155030856383 *
2542987   +        S_RMntFrq  +    -0.28802122451372 * S_Recency
2542988   +          +     0.06998878697307 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_6 = -0.2113594539647 * S_AcceptedCmpTotal + -0.1052829531896 *
S_Age + 0.30802959734964 * S_Frq + -0.03112570586685 * S_Income + 0.19129661263247 * S_Kidhome
+ 0.00533736622639 * S_Mnt + -0.06112703732925 * S_MntFishProducts + -0.15875686512247 *
S_MntFruits + -0.08040179272112 * S_MntGoldProds + -0.14462087536907 * S_MntMeatProducts +
0.21353582706121 * S_MntSweetProducts + -0.30180630737612 * S_MntWines + -0.11825033043182 *
S_MonthsAsCustomer + -0.2917393256645 * S_NumCatalogPurchases + 0.08149600854964 *
S_NumDealsPurchases + 0.16873541613513 * S_NumDistPurchases + -0.20437343413446 *
S_NumStorePurchases + -0.1671107527288 * S_NumWebPurchases + 0.03677043100993 *
S_NumWebVisitsMonth + 0.0240516540488 * S_RFMstat + 0.06155030856383 * S_RMntFrq +
-0.28802122451372 * S_Recency + 0.06998878697307 * S_Teenhome ;
2542989   +   H1x1_1  = H1x1_1  +    -0.33641509021082 * AcceptedCmp10
2542990   +          +     0.03092292109435 * AcceptedCmp20  +    -0.23551187181907 *
2542991   +        AcceptedCmp30  +    -0.06694400005185 * AcceptedCmp40
2542992   +          +    -0.14203506237074 * AcceptedCmp50  +    -0.25866390496966 *
2542993   +        Complain0  +     0.19505921178308 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.33641509021082 * AcceptedCmp10 + 0.03092292109435 *
AcceptedCmp20 + -0.23551187181907 * AcceptedCmp30 + -0.06694400005185 * AcceptedCmp40 +
-0.14203506237074 * AcceptedCmp50 + -0.25866390496966 * Complain0 + 0.19505921178308 *
HigherEducationBinary0 ;
2542994   +   H1x1_2  = H1x1_2  +     0.09937599707203 * AcceptedCmp10
2542995   +          +     0.03831208573575 * AcceptedCmp20  +     0.39683693019758 *
2542996   +        AcceptedCmp30  +     0.37006277175295 * AcceptedCmp40
2542997   +          +     0.21293419476895 * AcceptedCmp50  +     0.15528568367473 *
2542998   +        Complain0  +    -0.30210013299822 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.09937599707203 * AcceptedCmp10 + 0.03831208573575 *
AcceptedCmp20 + 0.39683693019758 * AcceptedCmp30 + 0.37006277175295 * AcceptedCmp40 +
0.21293419476895 * AcceptedCmp50 + 0.15528568367473 * Complain0 + -0.30210013299822 *
HigherEducationBinary0 ;
2542999   +   H1x1_3  = H1x1_3  +     0.29891621770856 * AcceptedCmp10
2543000   +          +     0.64938384482014 * AcceptedCmp20  +     0.44997242602142 *
2543001   +        AcceptedCmp30  +       0.479093722666 * AcceptedCmp40
2543002   +          +     0.50957180373919 * AcceptedCmp50  +     0.27833535432461 *
2543003   +        Complain0  +    -0.20383534906723 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.29891621770856 * AcceptedCmp10 + 0.64938384482014 *
AcceptedCmp20 + 0.44997242602142 * AcceptedCmp30 + 0.479093722666 * AcceptedCmp40 +
0.50957180373919 * AcceptedCmp50 + 0.27833535432461 * Complain0 + -0.20383534906723 *
HigherEducationBinary0 ;
2543004   +   H1x1_4  = H1x1_4  +    -0.26872515586946 * AcceptedCmp10
2543005   +          +    -0.24299337381911 * AcceptedCmp20  +    -0.01147155911926 *
2543006   +        AcceptedCmp30  +     -0.3056041277894 * AcceptedCmp40
2543007   +          +    -0.05496409609003 * AcceptedCmp50  +     0.07858238173893 *
2543008   +        Complain0  +     0.05721550070076 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.26872515586946 * AcceptedCmp10 + -0.24299337381911
* AcceptedCmp20 + -0.01147155911926 * AcceptedCmp30 + -0.3056041277894 * AcceptedCmp40 +
-0.05496409609003 * AcceptedCmp50 + 0.07858238173893 * Complain0 + 0.05721550070076 *
HigherEducationBinary0 ;
2543009   +   H1x1_5  = H1x1_5  +    -0.14067626649899 * AcceptedCmp10
2543010   +          +    -0.30627802828357 * AcceptedCmp20  +     0.05057942365592 *
2543011   +        AcceptedCmp30  +    -0.10378506600459 * AcceptedCmp40
2543012   +          +     0.07479232390108 * AcceptedCmp50  +     0.07252750671496 *
2543013   +        Complain0  +     0.11114854035831 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.14067626649899 * AcceptedCmp10 + -0.30627802828357
* AcceptedCmp20 + 0.05057942365592 * AcceptedCmp30 + -0.10378506600459 * AcceptedCmp40 +
0.07479232390108 * AcceptedCmp50 + 0.07252750671496 * Complain0 + 0.11114854035831 *
HigherEducationBinary0 ;
2543014   +   H1x1_6  = H1x1_6  +    -0.25806332334976 * AcceptedCmp10
2543015   +          +     0.03944021903138 * AcceptedCmp20  +    -0.08792206887119 *
2543016   +        AcceptedCmp30  +    -0.24631282865199 * AcceptedCmp40
2543017   +          +    -0.06123991538969 * AcceptedCmp50  +    -0.03114784375357 *
2543018   +        Complain0  +    -0.25204544481193 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + -0.25806332334976 * AcceptedCmp10 + 0.03944021903138 *
AcceptedCmp20 + -0.08792206887119 * AcceptedCmp30 + -0.24631282865199 * AcceptedCmp40 +
-0.06123991538969 * AcceptedCmp50 + -0.03114784375357 * Complain0 + -0.25204544481193 *
HigherEducationBinary0 ;
2543019   +   H1x1_1  = H1x1_1  +      0.2972170984261 * Education2n_Cycle
2543020   +          +     0.01651368568996 * EducationBasic  +     -0.1186055936649 *
2543021   +        EducationGraduation  +      0.0228208538951 * EducationMaster
2543022   +          +    -0.31045295887604 * Marital_StatusDivorced
2543023   +          +    -0.01109401001539 * Marital_StatusMarried
2543024   +          +     0.01325135981025 * Marital_StatusSingle
2543025   +          +     0.16609357475978 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.2972170984261 * Education2n_Cycle + 0.01651368568996
* EducationBasic + -0.1186055936649 * EducationGraduation + 0.0228208538951 * EducationMaster
+ -0.31045295887604 * Marital_StatusDivorced + -0.01109401001539 * Marital_StatusMarried +
0.01325135981025 * Marital_StatusSingle + 0.16609357475978 * Marital_StatusTogether ;
2543026   +   H1x1_2  = H1x1_2  +    -0.07095220065018 * Education2n_Cycle
2543027   +          +    -0.23491732567608 * EducationBasic  +     0.20187086452315 *
2543028   +        EducationGraduation  +     0.07524128723108 * EducationMaster
2543029   +          +     0.02275101861599 * Marital_StatusDivorced
2543030   +          +     0.20271548664903 * Marital_StatusMarried
2543031   +          +    -0.12132069210718 * Marital_StatusSingle
2543032   +          +     0.00085090729385 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.07095220065018 * Education2n_Cycle +
-0.23491732567608 * EducationBasic + 0.20187086452315 * EducationGraduation + 0.07524128723108
* EducationMaster + 0.02275101861599 * Marital_StatusDivorced + 0.20271548664903 *
Marital_StatusMarried + -0.12132069210718 * Marital_StatusSingle + 0.00085090729385 *
Marital_StatusTogether ;
2543033   +   H1x1_3  = H1x1_3  +    -0.02268297689573 * Education2n_Cycle
2543034   +          +     0.06359770535369 * EducationBasic  +     -0.1194001280088 *
2543035   +        EducationGraduation  +     0.17299848976308 * EducationMaster
2543036   +          +     -0.4992959703281 * Marital_StatusDivorced
2543037   +          +     0.62071659624138 * Marital_StatusMarried
2543038   +          +    -0.21776202274494 * Marital_StatusSingle
2543039   +          +     0.54712874598141 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.02268297689573 * Education2n_Cycle +
0.06359770535369 * EducationBasic + -0.1194001280088 * EducationGraduation + 0.17299848976308
* EducationMaster + -0.4992959703281 * Marital_StatusDivorced + 0.62071659624138 *
Marital_StatusMarried + -0.21776202274494 * Marital_StatusSingle + 0.54712874598141 *
Marital_StatusTogether ;
2543040   +   H1x1_4  = H1x1_4  +    -0.17773353520266 * Education2n_Cycle
2543041   +          +     0.17998728120628 * EducationBasic  +    -0.00324602612825 *
2543042   +        EducationGraduation  +    -0.22448876765089 * EducationMaster
2543043   +          +     0.05626212670587 * Marital_StatusDivorced
2543044   +          +     0.14353891364597 * Marital_StatusMarried
2543045   +          +    -0.29006765622997 * Marital_StatusSingle
2543046   +          +     0.05503638282535 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.17773353520266 * Education2n_Cycle +
0.17998728120628 * EducationBasic + -0.00324602612825 * EducationGraduation +
-0.22448876765089 * EducationMaster + 0.05626212670587 * Marital_StatusDivorced +
0.14353891364597 * Marital_StatusMarried + -0.29006765622997 * Marital_StatusSingle +
0.05503638282535 * Marital_StatusTogether ;
2543047   +   H1x1_5  = H1x1_5  +     0.06634316870499 * Education2n_Cycle
2543048   +          +    -0.36153880127411 * EducationBasic  +     0.23023144658635 *
2543049   +        EducationGraduation  +    -0.06568730318683 * EducationMaster
2543050   +          +    -0.21206913700604 * Marital_StatusDivorced
2543051   +          +     0.58790643614629 * Marital_StatusMarried
2543052   +          +    -0.65995982578062 * Marital_StatusSingle
2543053   +          +     0.49642503732428 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + 0.06634316870499 * Education2n_Cycle +
-0.36153880127411 * EducationBasic + 0.23023144658635 * EducationGraduation +
-0.06568730318683 * EducationMaster + -0.21206913700604 * Marital_StatusDivorced +
0.58790643614629 * Marital_StatusMarried + -0.65995982578062 * Marital_StatusSingle +
0.49642503732428 * Marital_StatusTogether ;
2543054   +   H1x1_6  = H1x1_6  +     0.16504024096118 * Education2n_Cycle
2543055   +          +     0.11925867171875 * EducationBasic  +    -0.04213907014732 *
2543056   +        EducationGraduation  +    -0.21389968555475 * EducationMaster
2543057   +          +    -0.05047370516008 * Marital_StatusDivorced
2543058   +          +    -0.23139090963669 * Marital_StatusMarried
2543059   +          +     0.04816197463249 * Marital_StatusSingle
2543060   +          +     0.04977890114896 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + 0.16504024096118 * Education2n_Cycle +
0.11925867171875 * EducationBasic + -0.04213907014732 * EducationGraduation +
-0.21389968555475 * EducationMaster + -0.05047370516008 * Marital_StatusDivorced +
-0.23139090963669 * Marital_StatusMarried + 0.04816197463249 * Marital_StatusSingle +
0.04977890114896 * Marital_StatusTogether ;
2543061   +   H1x1_1  =    -1.90576647346127 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -1.90576647346127 + H1x1_1 ;
2543062   +   H1x1_2  =     0.32295787429294 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.32295787429294 + H1x1_2 ;
2543063   +   H1x1_3  =     0.75117643107919 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.75117643107919 + H1x1_3 ;
2543064   +   H1x1_4  =      1.2336762751587 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 1.2336762751587 + H1x1_4 ;
2543065   +   H1x1_5  =    -0.97062317465491 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -0.97062317465491 + H1x1_5 ;
2543066   +   H1x1_6  =    -1.15756803634408 + H1x1_6 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = -1.15756803634408 + H1x1_6 ;
2543067   +   _EPS = SQRT(CONSTANT('MACEPS')) ;
MPRINT(EM_DIAGRAM):   _EPS = SQRT(CONSTANT('MACEPS')) ;
2543068   +   _REC_EPS = 1/_EPS ;
MPRINT(EM_DIAGRAM):   _REC_EPS = 1/_EPS ;
2543069   +   DROP _REC_EPS _EPS ;
MPRINT(EM_DIAGRAM):   DROP _REC_EPS _EPS ;
2543070   +   IF H1x1_1  < _REC_EPS AND H1x1_1  > - _REC_EPS THEN
2543071   +   H1x1_1  = H1x1_1  * H1x1_1 ;
MPRINT(EM_DIAGRAM):   IF H1x1_1 < _REC_EPS AND H1x1_1 > - _REC_EPS THEN H1x1_1 = H1x1_1 *
H1x1_1 ;
2543072   +   ELSE H1x1_1  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_1 = _REC_EPS ;
2543073   +   IF H1x1_2  < _REC_EPS AND H1x1_2  > - _REC_EPS THEN
2543074   +   H1x1_2  = H1x1_2  * H1x1_2 ;
MPRINT(EM_DIAGRAM):   IF H1x1_2 < _REC_EPS AND H1x1_2 > - _REC_EPS THEN H1x1_2 = H1x1_2 *
H1x1_2 ;
2543075   +   ELSE H1x1_2  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_2 = _REC_EPS ;
2543076   +   IF H1x1_3  < _REC_EPS AND H1x1_3  > - _REC_EPS THEN
2543077   +   H1x1_3  = H1x1_3  * H1x1_3 ;
MPRINT(EM_DIAGRAM):   IF H1x1_3 < _REC_EPS AND H1x1_3 > - _REC_EPS THEN H1x1_3 = H1x1_3 *
H1x1_3 ;
2543078   +   ELSE H1x1_3  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_3 = _REC_EPS ;
2543079   +   IF H1x1_4  < _REC_EPS AND H1x1_4  > - _REC_EPS THEN
2543080   +   H1x1_4  = H1x1_4  * H1x1_4 ;
MPRINT(EM_DIAGRAM):   IF H1x1_4 < _REC_EPS AND H1x1_4 > - _REC_EPS THEN H1x1_4 = H1x1_4 *
H1x1_4 ;
2543081   +   ELSE H1x1_4  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_4 = _REC_EPS ;
2543082   +   IF H1x1_5  < _REC_EPS AND H1x1_5  > - _REC_EPS THEN
2543083   +   H1x1_5  = H1x1_5  * H1x1_5 ;
MPRINT(EM_DIAGRAM):   IF H1x1_5 < _REC_EPS AND H1x1_5 > - _REC_EPS THEN H1x1_5 = H1x1_5 *
H1x1_5 ;
2543084   +   ELSE H1x1_5  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_5 = _REC_EPS ;
2543085   +   IF H1x1_6  < _REC_EPS AND H1x1_6  > - _REC_EPS THEN
2543086   +   H1x1_6  = H1x1_6  * H1x1_6 ;
MPRINT(EM_DIAGRAM):   IF H1x1_6 < _REC_EPS AND H1x1_6 > - _REC_EPS THEN H1x1_6 = H1x1_6 *
H1x1_6 ;
2543087   +   ELSE H1x1_6  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_6 = _REC_EPS ;
2543088   +END;
MPRINT(EM_DIAGRAM):   END;
2543089   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2543090   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
2543091   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
2543092   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
2543093   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
2543094   +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
2543095   +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
2543096   +END;
MPRINT(EM_DIAGRAM):   END;
2543097   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2543098   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2543099   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2543100   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2543101   +   P_DepVar1  =    -0.99830813428318 * H1x1_1  +     1.33495006526712 * H1x1_2
2543102   +          +    -1.37942150026657 * H1x1_3  +     1.22714974922576 * H1x1_4
2543103   +          +     1.73375794385595 * H1x1_5  +     -0.0100306049679 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.99830813428318 * H1x1_1 + 1.33495006526712 * H1x1_2 +
-1.37942150026657 * H1x1_3 + 1.22714974922576 * H1x1_4 + 1.73375794385595 * H1x1_5 +
-0.0100306049679 * H1x1_6 ;
2543104   +   P_DepVar1  =    -1.90393999986167 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.90393999986167 + P_DepVar1 ;
2543105   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2543106   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2543107   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2543108   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2543109   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2543110   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2543111   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2543112   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2543113   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2543114   +END;
MPRINT(EM_DIAGRAM):   END;
2543115   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2543116   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2543117   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2543118   +END;
MPRINT(EM_DIAGRAM):   END;
2543119   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2543120   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2543121   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2543122   +END;
MPRINT(EM_DIAGRAM):   END;
2543123   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2543124   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2543125   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2543126   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2543127   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2543128   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2543129   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2543130   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2543131   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2543132   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2543133   +END;
MPRINT(EM_DIAGRAM):   END;
2543134   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2543135   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2543136   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2543137   +drop
2543138   +H1x1_1
2543139   +H1x1_2
2543140   +H1x1_3
2543141   +H1x1_4
2543142   +H1x1_5
2543143   +H1x1_6
2543144   +;
MPRINT(EM_DIAGRAM):   drop H1x1_1 H1x1_2 H1x1_3 H1x1_4 H1x1_5 H1x1_6 ;
2543145   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
2543146   +* Renaming variables for AutoNeural11;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural11;
2543147   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2543148   +* Renaming Posterior variables for AutoNeural11;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural11;
2543149   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2543150   +drop AutoNeural11_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural11_P_DepVar1;
2543151   +AutoNeural11_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural11_P_DepVar1 = P_DepVar1;
2543152   +drop AutoNeural11_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural11_P_DepVar0;
2543153   +AutoNeural11_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural11_P_DepVar0 = P_DepVar0;
2543154   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2543155   +* Renaming _WARN_ variable for AutoNeural11;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural11;
2543156   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2543157   +length AutoNeural11_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural11_WARN_ $4;
2543158   +drop AutoNeural11_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural11_WARN_;
2543159   +AutoNeural11_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural11_WARN_ = _WARN_;
2543160   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2543161   +* TOOL: Extension Class;
MPRINT(EM_DIAGRAM):   * TOOL: Extension Class;
2543162   +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
2543163   +* NODE: FIMPORT;
MPRINT(EM_DIAGRAM):   * NODE: FIMPORT;
2543164   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2543165   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2543166   +* TOOL: Statistics Exploration;
MPRINT(EM_DIAGRAM):   * TOOL: Statistics Exploration;
2543167   +* TYPE: EXPLORE;
MPRINT(EM_DIAGRAM):   * TYPE: EXPLORE;
2543168   +* NODE: Stat;
MPRINT(EM_DIAGRAM):   * NODE: Stat;
2543169   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2543170   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2543171   +* TOOL: Filtering;
MPRINT(EM_DIAGRAM):   * TOOL: Filtering;
2543172   +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
2543173   +* NODE: Filter;
MPRINT(EM_DIAGRAM):   * NODE: Filter;
2543174   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2543175   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2543176   +* TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
MPRINT(EM_DIAGRAM):   * TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
2543177   +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
2543178   +* NODE: EMCODE4;
MPRINT(EM_DIAGRAM):   * NODE: EMCODE4;
2543179   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2543180   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2543181   +* TOOL: Transform;
MPRINT(EM_DIAGRAM):   * TOOL: Transform;
2543182   +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
2543183   +* NODE: Trans;
MPRINT(EM_DIAGRAM):   * NODE: Trans;
2543184   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2543185   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2543186   +* TOOL: Partition Class;
MPRINT(EM_DIAGRAM):   * TOOL: Partition Class;
2543187   +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
2543188   +* NODE: Part;
MPRINT(EM_DIAGRAM):   * NODE: Part;
2543189   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2543190   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2543191   +* TOOL: Metadata Node;
MPRINT(EM_DIAGRAM):   * TOOL: Metadata Node;
2543192   +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
2543193   +* NODE: Meta;
MPRINT(EM_DIAGRAM):   * NODE: Meta;
2543194   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2543195   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2543196   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
2543197   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
2543198   +* NODE: AutoNeural12;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural12;
2543199   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2543200   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2543201   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2543202   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2543203   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2543204   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2543205   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2543206   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2543207   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2543208   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2543209   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2543210   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2543211   +LENGTH _WARN_ $4
2543212   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
2543213   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2543214   +
2543215   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
2543216   +
2543217   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
2543218   +
2543219   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2543220   +
2543221   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2543222   +
2543223   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2543224   +
2543225   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2543226   +
2543227   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2543228   +
2543229   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2543230   +
2543231   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2543232   +
2543233   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2543234   +
2543235   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2543236   +
2543237   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
2543238   +
2543239   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2543240   +
2543241   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2543242   +
2543243   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
2543244   +
2543245   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2543246   +
2543247   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2543248   +
2543249   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2543250   +
2543251   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2543252   +
2543253   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
2543254   +
2543255   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2543256   +
2543257   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2543258   +
2543259   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2543260   +
2543261   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2543262   +
2543263   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2543264   +
2543265   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2543266   +
2543267   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2543268   +
2543269   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2543270   +
2543271   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
2543272   +
2543273   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2543274   +
2543275   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2543276   +
2543277   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2543278   +
2543279   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2543280   +
2543281   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2543282   +
2543283   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2543284   +
2543285   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2543286   +
2543287   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2543288   +
2543289   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
2543290   +
2543291   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
2543292   +
2543293   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
2543294   +
2543295   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
2543296   +
2543297   +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
2543298   +
2543299   +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
2543300   +
2543301   +      label H1x1_7 = 'Hidden: H1x1_=7' ;
MPRINT(EM_DIAGRAM):   label H1x1_7 = 'Hidden: H1x1_=7' ;
2543302   +
2543303   +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
2543304   +
2543305   +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
2543306   +
2543307   +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
2543308   +
2543309   +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
2543310   +
2543311   +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
2543312   +
2543313   +      label H1x2_6 = 'Hidden: H1x2_=6' ;
MPRINT(EM_DIAGRAM):   label H1x2_6 = 'Hidden: H1x2_=6' ;
2543314   +
2543315   +      label H1x2_7 = 'Hidden: H1x2_=7' ;
MPRINT(EM_DIAGRAM):   label H1x2_7 = 'Hidden: H1x2_=7' ;
2543316   +
2543317   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2543318   +
2543319   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2543320   +
2543321   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2543322   +
2543323   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2543324   +
2543325   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2543326   +
2543327   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2543328   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2543329   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2543330   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2543331   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2543332   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2543333   +end;
MPRINT(EM_DIAGRAM):   end;
2543334   +else do;
MPRINT(EM_DIAGRAM):   else do;
2543335   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2543336   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2543337   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2543338   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2543339   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2543340   +   end;
MPRINT(EM_DIAGRAM):   end;
2543341   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2543342   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2543343   +   end;
MPRINT(EM_DIAGRAM):   end;
2543344   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2543345   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2543346   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2543347   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2543348   +   end;
MPRINT(EM_DIAGRAM):   end;
2543349   +end;
MPRINT(EM_DIAGRAM):   end;
2543350   +
2543351   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2543352   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2543353   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2543354   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2543355   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2543356   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2543357   +end;
MPRINT(EM_DIAGRAM):   end;
2543358   +else do;
MPRINT(EM_DIAGRAM):   else do;
2543359   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2543360   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2543361   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2543362   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2543363   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2543364   +   end;
MPRINT(EM_DIAGRAM):   end;
2543365   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2543366   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2543367   +   end;
MPRINT(EM_DIAGRAM):   end;
2543368   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2543369   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2543370   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2543371   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2543372   +   end;
MPRINT(EM_DIAGRAM):   end;
2543373   +end;
MPRINT(EM_DIAGRAM):   end;
2543374   +
2543375   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2543376   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2543377   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2543378   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2543379   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2543380   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2543381   +end;
MPRINT(EM_DIAGRAM):   end;
2543382   +else do;
MPRINT(EM_DIAGRAM):   else do;
2543383   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2543384   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2543385   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2543386   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2543387   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2543388   +   end;
MPRINT(EM_DIAGRAM):   end;
2543389   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2543390   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2543391   +   end;
MPRINT(EM_DIAGRAM):   end;
2543392   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2543393   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2543394   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2543395   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2543396   +   end;
MPRINT(EM_DIAGRAM):   end;
2543397   +end;
MPRINT(EM_DIAGRAM):   end;
2543398   +
2543399   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2543400   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2543401   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2543402   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2543403   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2543404   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2543405   +end;
MPRINT(EM_DIAGRAM):   end;
2543406   +else do;
MPRINT(EM_DIAGRAM):   else do;
2543407   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2543408   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2543409   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2543410   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2543411   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2543412   +   end;
MPRINT(EM_DIAGRAM):   end;
2543413   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2543414   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2543415   +   end;
MPRINT(EM_DIAGRAM):   end;
2543416   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2543417   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2543418   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2543419   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2543420   +   end;
MPRINT(EM_DIAGRAM):   end;
2543421   +end;
MPRINT(EM_DIAGRAM):   end;
2543422   +
2543423   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2543424   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2543425   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2543426   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2543427   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2543428   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2543429   +end;
MPRINT(EM_DIAGRAM):   end;
2543430   +else do;
MPRINT(EM_DIAGRAM):   else do;
2543431   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2543432   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2543433   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2543434   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2543435   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2543436   +   end;
MPRINT(EM_DIAGRAM):   end;
2543437   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2543438   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2543439   +   end;
MPRINT(EM_DIAGRAM):   end;
2543440   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2543441   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2543442   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2543443   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2543444   +   end;
MPRINT(EM_DIAGRAM):   end;
2543445   +end;
MPRINT(EM_DIAGRAM):   end;
2543446   +
2543447   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2543448   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2543449   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2543450   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2543451   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2543452   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2543453   +end;
MPRINT(EM_DIAGRAM):   end;
2543454   +else do;
MPRINT(EM_DIAGRAM):   else do;
2543455   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2543456   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2543457   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2543458   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2543459   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2543460   +   end;
MPRINT(EM_DIAGRAM):   end;
2543461   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2543462   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2543463   +   end;
MPRINT(EM_DIAGRAM):   end;
2543464   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2543465   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2543466   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2543467   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2543468   +   end;
MPRINT(EM_DIAGRAM):   end;
2543469   +end;
MPRINT(EM_DIAGRAM):   end;
2543470   +
2543471   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
2543472   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
2543473   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
2543474   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2543475   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2543476   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2543477   +end;
MPRINT(EM_DIAGRAM):   end;
2543478   +else do;
MPRINT(EM_DIAGRAM):   else do;
2543479   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2543480   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
2543481   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2543482   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
2543483   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
2543484   +   end;
MPRINT(EM_DIAGRAM):   end;
2543485   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
2543486   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
2543487   +   end;
MPRINT(EM_DIAGRAM):   end;
2543488   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2543489   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2543490   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2543491   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2543492   +   end;
MPRINT(EM_DIAGRAM):   end;
2543493   +end;
MPRINT(EM_DIAGRAM):   end;
2543494   +
2543495   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2543496   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
2543497   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2543498   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2543499   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2543500   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2543501   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2543502   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2543503   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2543504   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2543505   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2543506   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2543507   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2543508   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2543509   +end;
MPRINT(EM_DIAGRAM):   end;
2543510   +else do;
MPRINT(EM_DIAGRAM):   else do;
2543511   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2543512   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2543513   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2543514   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2543515   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2543516   +   end;
MPRINT(EM_DIAGRAM):   end;
2543517   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2543518   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2543519   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2543520   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2543521   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2543522   +   end;
MPRINT(EM_DIAGRAM):   end;
2543523   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2543524   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2543525   +   end;
MPRINT(EM_DIAGRAM):   end;
2543526   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2543527   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2543528   +   end;
MPRINT(EM_DIAGRAM):   end;
2543529   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2543530   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2543531   +   end;
MPRINT(EM_DIAGRAM):   end;
2543532   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2543533   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2543534   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2543535   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2543536   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2543537   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2543538   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2543539   +   end;
MPRINT(EM_DIAGRAM):   end;
2543540   +end;
MPRINT(EM_DIAGRAM):   end;
2543541   +
2543542   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2543543   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2543544   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
2543545   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2543546   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2543547   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2543548   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2543549   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2543550   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2543551   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2543552   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2543553   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2543554   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2543555   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2543556   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2543557   +end;
MPRINT(EM_DIAGRAM):   end;
2543558   +else do;
MPRINT(EM_DIAGRAM):   else do;
2543559   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2543560   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2543561   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2543562   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2543563   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2543564   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2543565   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2543566   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2543567   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2543568   +         end;
MPRINT(EM_DIAGRAM):   end;
2543569   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2543570   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2543571   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2543572   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2543573   +            end;
MPRINT(EM_DIAGRAM):   end;
2543574   +         end;
MPRINT(EM_DIAGRAM):   end;
2543575   +      end;
MPRINT(EM_DIAGRAM):   end;
2543576   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2543577   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2543578   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2543579   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2543580   +         end;
MPRINT(EM_DIAGRAM):   end;
2543581   +      end;
MPRINT(EM_DIAGRAM):   end;
2543582   +   end;
MPRINT(EM_DIAGRAM):   end;
2543583   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2543584   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2543585   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2543586   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2543587   +      end;
MPRINT(EM_DIAGRAM):   end;
2543588   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2543589   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2543590   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2543591   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2543592   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2543593   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2543594   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2543595   +         end;
MPRINT(EM_DIAGRAM):   end;
2543596   +      end;
MPRINT(EM_DIAGRAM):   end;
2543597   +   end;
MPRINT(EM_DIAGRAM):   end;
2543598   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2543599   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2543600   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2543601   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2543602   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2543603   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2543604   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2543605   +   end;
MPRINT(EM_DIAGRAM):   end;
2543606   +end;
MPRINT(EM_DIAGRAM):   end;
2543607   +
2543608   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2543609   +*** Checking missing input Interval
2543610   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2543611   +
2543612   +IF NMISS(
2543613   +   AcceptedCmpTotal ,
2543614   +   Age ,
2543615   +   Frq ,
2543616   +   Income ,
2543617   +   Kidhome ,
2543618   +   Mnt ,
2543619   +   MntFishProducts ,
2543620   +   MntFruits ,
2543621   +   MntGoldProds ,
2543622   +   MntMeatProducts ,
2543623   +   MntSweetProducts ,
2543624   +   MntWines ,
2543625   +   MonthsAsCustomer ,
2543626   +   NumCatalogPurchases ,
2543627   +   NumDealsPurchases ,
2543628   +   NumDistPurchases ,
2543629   +   NumStorePurchases ,
2543630   +   NumWebPurchases ,
2543631   +   NumWebVisitsMonth ,
2543632   +   RFMstat ,
2543633   +   RMntFrq ,
2543634   +   Recency ,
2543635   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
2543636   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2543637   +
2543638   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2543639   +END;
MPRINT(EM_DIAGRAM):   END;
2543640   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2543641   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
2543642   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2543643   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2543644   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2543645   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
2543646   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2543647   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2543648   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2543649   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2543650   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2543651   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2543652   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2543653   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2543654   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2543655   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2543656   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2543657   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
2543658   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2543659   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2543660   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2543661   +   S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2543662   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 *
MonthsAsCustomer ;
2543663   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2543664   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
2543665   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2543666   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2543667   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2543668   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
2543669   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2543670   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
2543671   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2543672   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
2543673   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2543674   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2543675   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2543676   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2543677   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2543678   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2543679   +END;
MPRINT(EM_DIAGRAM):   END;
2543680   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2543681   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2543682   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2543683   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
2543684   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
2543685   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2543686   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
2543687   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2543688   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2543689   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2543690   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2543691   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2543692   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2543693   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2543694   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2543695   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2543696   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2543697   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2543698   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2543699   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2543700   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2543701   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2543702   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
2543703   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2543704   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2543705   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
2543706   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2543707   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2543708   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2543709   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2543710   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2543711   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
2543712   +   ELSE S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2543713   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 *
MonthsAsCustomer ;
2543714   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2543715   +   ELSE S_NumCatalogPurchases
2543716   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2543717   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
2543718   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2543719   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2543720   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2543721   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
2543722   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2543723   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
2543724   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2543725   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2543726   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
2543727   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2543728   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2543729   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
2543730   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2543731   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2543732   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2543733   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2543734   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2543735   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
2543736   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2543737   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2543738   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2543739   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2543740   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2543741   +END;
MPRINT(EM_DIAGRAM):   END;
2543742   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2543743   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
2543744   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2543745   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2543746   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
2543747   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2543748   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2543749   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
2543750   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2543751   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2543752   +   H1x1_1  =    -0.08478534961354 * S_AcceptedCmpTotal
2543753   +          +     0.21528166003219 * S_Age  +    -0.16079737422774 * S_Frq
2543754   +          +     0.04922044955183 * S_Income  +     0.06245849112135 *
2543755   +        S_Kidhome  +    -0.12820970008154 * S_Mnt  +    -0.00676959308959 *
2543756   +        S_MntFishProducts  +    -0.20367403957375 * S_MntFruits
2543757   +          +    -0.06459558558968 * S_MntGoldProds  +     0.01557669100416 *
2543758   +        S_MntMeatProducts  +    -0.16342003924117 * S_MntSweetProducts
2543759   +          +     0.34676276369853 * S_MntWines  +    -0.08454570225616 *
2543760   +        S_MonthsAsCustomer  +    -0.00318885387905 * S_NumCatalogPurchases
2543761   +          +      0.1112677116841 * S_NumDealsPurchases
2543762   +          +     0.01563584187072 * S_NumDistPurchases
2543763   +          +     0.19193969522995 * S_NumStorePurchases
2543764   +          +      0.3133556199984 * S_NumWebPurchases
2543765   +          +    -0.21884874785716 * S_NumWebVisitsMonth
2543766   +          +     0.08478875792216 * S_RFMstat  +     0.05964414665285 *
2543767   +        S_RMntFrq  +    -0.12595000497726 * S_Recency
2543768   +          +     -0.1238719414537 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.08478534961354 * S_AcceptedCmpTotal + 0.21528166003219 *
S_Age + -0.16079737422774 * S_Frq + 0.04922044955183 * S_Income + 0.06245849112135 * S_Kidhome
+ -0.12820970008154 * S_Mnt + -0.00676959308959 * S_MntFishProducts + -0.20367403957375 *
S_MntFruits + -0.06459558558968 * S_MntGoldProds + 0.01557669100416 * S_MntMeatProducts +
-0.16342003924117 * S_MntSweetProducts + 0.34676276369853 * S_MntWines + -0.08454570225616 *
S_MonthsAsCustomer + -0.00318885387905 * S_NumCatalogPurchases + 0.1112677116841 *
S_NumDealsPurchases + 0.01563584187072 * S_NumDistPurchases + 0.19193969522995 *
S_NumStorePurchases + 0.3133556199984 * S_NumWebPurchases + -0.21884874785716 *
S_NumWebVisitsMonth + 0.08478875792216 * S_RFMstat + 0.05964414665285 * S_RMntFrq +
-0.12595000497726 * S_Recency + -0.1238719414537 * S_Teenhome ;
2543769   +   H1x1_2  =     0.20807487357943 * S_AcceptedCmpTotal
2543770   +          +    -0.27223051908987 * S_Age  +     0.28649391533674 * S_Frq
2543771   +          +     0.46493719675068 * S_Income  +     0.10180542910079 *
2543772   +        S_Kidhome  +    -0.19573056673819 * S_Mnt  +    -0.05332725327514 *
2543773   +        S_MntFishProducts  +    -0.28610692329433 * S_MntFruits
2543774   +          +    -0.13417237194849 * S_MntGoldProds  +     0.45697707494335 *
2543775   +        S_MntMeatProducts  +    -0.28280545785477 * S_MntSweetProducts
2543776   +          +    -0.13234920069688 * S_MntWines  +     -0.2710938018651 *
2543777   +        S_MonthsAsCustomer  +     0.31174284041905 * S_NumCatalogPurchases
2543778   +          +     0.30225032753275 * S_NumDealsPurchases
2543779   +          +     0.33833359923595 * S_NumDistPurchases
2543780   +          +    -0.20255599575849 * S_NumStorePurchases
2543781   +          +    -0.12040071168942 * S_NumWebPurchases
2543782   +          +    -0.12407090307061 * S_NumWebVisitsMonth
2543783   +          +    -0.05688936259515 * S_RFMstat  +     0.15514736649245 *
2543784   +        S_RMntFrq  +     0.00838555462657 * S_Recency
2543785   +          +     0.04609426861136 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.20807487357943 * S_AcceptedCmpTotal + -0.27223051908987 *
S_Age + 0.28649391533674 * S_Frq + 0.46493719675068 * S_Income + 0.10180542910079 * S_Kidhome
+ -0.19573056673819 * S_Mnt + -0.05332725327514 * S_MntFishProducts + -0.28610692329433 *
S_MntFruits + -0.13417237194849 * S_MntGoldProds + 0.45697707494335 * S_MntMeatProducts +
-0.28280545785477 * S_MntSweetProducts + -0.13234920069688 * S_MntWines + -0.2710938018651 *
S_MonthsAsCustomer + 0.31174284041905 * S_NumCatalogPurchases + 0.30225032753275 *
S_NumDealsPurchases + 0.33833359923595 * S_NumDistPurchases + -0.20255599575849 *
S_NumStorePurchases + -0.12040071168942 * S_NumWebPurchases + -0.12407090307061 *
S_NumWebVisitsMonth + -0.05688936259515 * S_RFMstat + 0.15514736649245 * S_RMntFrq +
0.00838555462657 * S_Recency + 0.04609426861136 * S_Teenhome ;
2543786   +   H1x1_3  =    -0.30541463116928 * S_AcceptedCmpTotal
2543787   +          +    -0.01746117216025 * S_Age  +    -0.44156473334329 * S_Frq
2543788   +          +    -0.51952426304193 * S_Income  +     0.20419921255777 *
2543789   +        S_Kidhome  +    -0.18174316707953 * S_Mnt  +    -0.03813675536406 *
2543790   +        S_MntFishProducts  +     -0.0959023413712 * S_MntFruits
2543791   +          +     0.12724081783278 * S_MntGoldProds  +    -0.07639148541426 *
2543792   +        S_MntMeatProducts  +     -0.0797214413833 * S_MntSweetProducts
2543793   +          +    -0.57705931875808 * S_MntWines  +    -0.12638551201991 *
2543794   +        S_MonthsAsCustomer  +    -0.21854676704549 * S_NumCatalogPurchases
2543795   +          +     0.16792903091627 * S_NumDealsPurchases
2543796   +          +    -0.37408945626745 * S_NumDistPurchases
2543797   +          +    -0.18067262995566 * S_NumStorePurchases
2543798   +          +     0.21192146789881 * S_NumWebPurchases
2543799   +          +    -0.23547702310669 * S_NumWebVisitsMonth
2543800   +          +    -0.02272089758813 * S_RFMstat  +    -0.16409330281075 *
2543801   +        S_RMntFrq  +     0.45021846112946 * S_Recency
2543802   +          +     0.32988735727394 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.30541463116928 * S_AcceptedCmpTotal + -0.01746117216025 *
S_Age + -0.44156473334329 * S_Frq + -0.51952426304193 * S_Income + 0.20419921255777 *
S_Kidhome + -0.18174316707953 * S_Mnt + -0.03813675536406 * S_MntFishProducts +
-0.0959023413712 * S_MntFruits + 0.12724081783278 * S_MntGoldProds + -0.07639148541426 *
S_MntMeatProducts + -0.0797214413833 * S_MntSweetProducts + -0.57705931875808 * S_MntWines +
-0.12638551201991 * S_MonthsAsCustomer + -0.21854676704549 * S_NumCatalogPurchases +
0.16792903091627 * S_NumDealsPurchases + -0.37408945626745 * S_NumDistPurchases +
-0.18067262995566 * S_NumStorePurchases + 0.21192146789881 * S_NumWebPurchases +
-0.23547702310669 * S_NumWebVisitsMonth + -0.02272089758813 * S_RFMstat + -0.16409330281075 *
S_RMntFrq + 0.45021846112946 * S_Recency + 0.32988735727394 * S_Teenhome ;
2543803   +   H1x1_4  =     0.05205198916717 * S_AcceptedCmpTotal
2543804   +          +     0.25568653619739 * S_Age  +    -0.31037252146959 * S_Frq
2543805   +          +     0.42636025358982 * S_Income  +    -0.24453708980866 *
2543806   +        S_Kidhome  +    -0.07832530945892 * S_Mnt  +    -0.48332124476182 *
2543807   +        S_MntFishProducts  +    -0.13932879119138 * S_MntFruits
2543808   +          +      0.1984121566988 * S_MntGoldProds  +     1.14965897015972 *
2543809   +        S_MntMeatProducts  +     0.07027485457428 * S_MntSweetProducts
2543810   +          +    -0.56598097754046 * S_MntWines  +     0.07317190938075 *
2543811   +        S_MonthsAsCustomer  +       0.075756987983 * S_NumCatalogPurchases
2543812   +          +     0.29407429399136 * S_NumDealsPurchases
2543813   +          +     0.01610745252195 * S_NumDistPurchases
2543814   +          +    -0.17767939085628 * S_NumStorePurchases
2543815   +          +    -0.15168958538637 * S_NumWebPurchases
2543816   +          +     0.17433622143988 * S_NumWebVisitsMonth
2543817   +          +     0.11635602973993 * S_RFMstat  +     0.32632751843433 *
2543818   +        S_RMntFrq  +    -0.24758483374458 * S_Recency
2543819   +          +    -0.31468291567479 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.05205198916717 * S_AcceptedCmpTotal + 0.25568653619739 *
S_Age + -0.31037252146959 * S_Frq + 0.42636025358982 * S_Income + -0.24453708980866 *
S_Kidhome + -0.07832530945892 * S_Mnt + -0.48332124476182 * S_MntFishProducts +
-0.13932879119138 * S_MntFruits + 0.1984121566988 * S_MntGoldProds + 1.14965897015972 *
S_MntMeatProducts + 0.07027485457428 * S_MntSweetProducts + -0.56598097754046 * S_MntWines +
0.07317190938075 * S_MonthsAsCustomer + 0.075756987983 * S_NumCatalogPurchases +
0.29407429399136 * S_NumDealsPurchases + 0.01610745252195 * S_NumDistPurchases +
-0.17767939085628 * S_NumStorePurchases + -0.15168958538637 * S_NumWebPurchases +
0.17433622143988 * S_NumWebVisitsMonth + 0.11635602973993 * S_RFMstat + 0.32632751843433 *
S_RMntFrq + -0.24758483374458 * S_Recency + -0.31468291567479 * S_Teenhome ;
2543820   +   H1x1_5  =    -0.59657492903543 * S_AcceptedCmpTotal
2543821   +          +     0.23513672763458 * S_Age  +    -0.14882104210954 * S_Frq
2543822   +          +    -0.07762660201035 * S_Income  +     0.01424651904783 *
2543823   +        S_Kidhome  +     0.18748607813081 * S_Mnt  +     0.11088464897095 *
2543824   +        S_MntFishProducts  +    -0.10064450211557 * S_MntFruits
2543825   +          +     0.11161391354421 * S_MntGoldProds  +    -1.36345407290644 *
2543826   +        S_MntMeatProducts  +     0.04868729717044 * S_MntSweetProducts
2543827   +          +     0.80284342329654 * S_MntWines  +     -0.0179539622492 *
2543828   +        S_MonthsAsCustomer  +    -0.60051908798715 * S_NumCatalogPurchases
2543829   +          +    -0.37976451362108 * S_NumDealsPurchases
2543830   +          +    -0.17027731520801 * S_NumDistPurchases
2543831   +          +     0.59849493667087 * S_NumStorePurchases
2543832   +          +     0.65481480560301 * S_NumWebPurchases
2543833   +          +    -0.68253224576609 * S_NumWebVisitsMonth
2543834   +          +    -0.16723490165629 * S_RFMstat  +    -0.10533797887644 *
2543835   +        S_RMntFrq  +     0.81382723915873 * S_Recency
2543836   +          +     0.06049401205856 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -0.59657492903543 * S_AcceptedCmpTotal + 0.23513672763458 *
S_Age + -0.14882104210954 * S_Frq + -0.07762660201035 * S_Income + 0.01424651904783 *
S_Kidhome + 0.18748607813081 * S_Mnt + 0.11088464897095 * S_MntFishProducts +
-0.10064450211557 * S_MntFruits + 0.11161391354421 * S_MntGoldProds + -1.36345407290644 *
S_MntMeatProducts + 0.04868729717044 * S_MntSweetProducts + 0.80284342329654 * S_MntWines +
-0.0179539622492 * S_MonthsAsCustomer + -0.60051908798715 * S_NumCatalogPurchases +
-0.37976451362108 * S_NumDealsPurchases + -0.17027731520801 * S_NumDistPurchases +
0.59849493667087 * S_NumStorePurchases + 0.65481480560301 * S_NumWebPurchases +
-0.68253224576609 * S_NumWebVisitsMonth + -0.16723490165629 * S_RFMstat + -0.10533797887644 *
S_RMntFrq + 0.81382723915873 * S_Recency + 0.06049401205856 * S_Teenhome ;
2543837   +   H1x1_6  =    -0.07547841798202 * S_AcceptedCmpTotal
2543838   +          +     0.22445278254589 * S_Age  +    -0.26357481075143 * S_Frq
2543839   +          +     0.06894154144261 * S_Income  +     0.20713236126681 *
2543840   +        S_Kidhome  +    -0.14103612934526 * S_Mnt  +     0.36334508557452 *
2543841   +        S_MntFishProducts  +    -0.20862425337296 * S_MntFruits
2543842   +          +    -0.29089690099273 * S_MntGoldProds  +     0.11336893090527 *
2543843   +        S_MntMeatProducts  +    -0.13547374281924 * S_MntSweetProducts
2543844   +          +     0.02228828195539 * S_MntWines  +    -0.19257650420334 *
2543845   +        S_MonthsAsCustomer  +      0.1365526319824 * S_NumCatalogPurchases
2543846   +          +    -0.07686699131623 * S_NumDealsPurchases
2543847   +          +    -0.07220460738926 * S_NumDistPurchases
2543848   +          +    -0.06554027468389 * S_NumStorePurchases
2543849   +          +     0.10422838158001 * S_NumWebPurchases
2543850   +          +    -0.03858550147892 * S_NumWebVisitsMonth
2543851   +          +    -0.06397448441373 * S_RFMstat  +     0.21747838287147 *
2543852   +        S_RMntFrq  +     0.24839313159913 * S_Recency
2543853   +          +    -0.06317317698653 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_6 = -0.07547841798202 * S_AcceptedCmpTotal + 0.22445278254589 *
S_Age + -0.26357481075143 * S_Frq + 0.06894154144261 * S_Income + 0.20713236126681 * S_Kidhome
+ -0.14103612934526 * S_Mnt + 0.36334508557452 * S_MntFishProducts + -0.20862425337296 *
S_MntFruits + -0.29089690099273 * S_MntGoldProds + 0.11336893090527 * S_MntMeatProducts +
-0.13547374281924 * S_MntSweetProducts + 0.02228828195539 * S_MntWines + -0.19257650420334 *
S_MonthsAsCustomer + 0.1365526319824 * S_NumCatalogPurchases + -0.07686699131623 *
S_NumDealsPurchases + -0.07220460738926 * S_NumDistPurchases + -0.06554027468389 *
S_NumStorePurchases + 0.10422838158001 * S_NumWebPurchases + -0.03858550147892 *
S_NumWebVisitsMonth + -0.06397448441373 * S_RFMstat + 0.21747838287147 * S_RMntFrq +
0.24839313159913 * S_Recency + -0.06317317698653 * S_Teenhome ;
2543854   +   H1x1_7  =    -0.08604903695444 * S_AcceptedCmpTotal
2543855   +          +    -0.14807437541992 * S_Age  +     0.01466157584549 * S_Frq
2543856   +          +    -0.09883966180507 * S_Income  +     0.51992566778352 *
2543857   +        S_Kidhome  +     0.29795006703636 * S_Mnt  +    -0.08922020500011 *
2543858   +        S_MntFishProducts  +     0.19836834402079 * S_MntFruits
2543859   +          +    -0.11292241468378 * S_MntGoldProds  +       0.584464452194 *
2543860   +        S_MntMeatProducts  +     0.22625326024073 * S_MntSweetProducts
2543861   +          +     0.24074129944382 * S_MntWines  +     0.13538906557527 *
2543862   +        S_MonthsAsCustomer  +    -0.01228250248922 * S_NumCatalogPurchases
2543863   +          +    -0.07920122387563 * S_NumDealsPurchases
2543864   +          +      0.3649244061347 * S_NumDistPurchases
2543865   +          +     0.36475853688403 * S_NumStorePurchases
2543866   +          +     0.02153991404063 * S_NumWebPurchases
2543867   +          +    -0.94080669139388 * S_NumWebVisitsMonth
2543868   +          +     0.24853677977494 * S_RFMstat  +     0.37015183933951 *
2543869   +        S_RMntFrq  +      0.6724157721663 * S_Recency
2543870   +          +      0.1615471643866 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_7 = -0.08604903695444 * S_AcceptedCmpTotal + -0.14807437541992 *
S_Age + 0.01466157584549 * S_Frq + -0.09883966180507 * S_Income + 0.51992566778352 * S_Kidhome
+ 0.29795006703636 * S_Mnt + -0.08922020500011 * S_MntFishProducts + 0.19836834402079 *
S_MntFruits + -0.11292241468378 * S_MntGoldProds + 0.584464452194 * S_MntMeatProducts +
0.22625326024073 * S_MntSweetProducts + 0.24074129944382 * S_MntWines + 0.13538906557527 *
S_MonthsAsCustomer + -0.01228250248922 * S_NumCatalogPurchases + -0.07920122387563 *
S_NumDealsPurchases + 0.3649244061347 * S_NumDistPurchases + 0.36475853688403 *
S_NumStorePurchases + 0.02153991404063 * S_NumWebPurchases + -0.94080669139388 *
S_NumWebVisitsMonth + 0.24853677977494 * S_RFMstat + 0.37015183933951 * S_RMntFrq +
0.6724157721663 * S_Recency + 0.1615471643866 * S_Teenhome ;
2543871   +   H1x1_1  = H1x1_1  +     0.04431608362128 * AcceptedCmp10
2543872   +          +       0.145592087795 * AcceptedCmp20  +    -0.18972867139938 *
2543873   +        AcceptedCmp30  +     0.11297731320888 * AcceptedCmp40
2543874   +          +     0.15203974410995 * AcceptedCmp50  +     0.05130421316428 *
2543875   +        Complain0  +     0.33576036450343 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.04431608362128 * AcceptedCmp10 + 0.145592087795 *
AcceptedCmp20 + -0.18972867139938 * AcceptedCmp30 + 0.11297731320888 * AcceptedCmp40 +
0.15203974410995 * AcceptedCmp50 + 0.05130421316428 * Complain0 + 0.33576036450343 *
HigherEducationBinary0 ;
2543876   +   H1x1_2  = H1x1_2  +    -0.05495742609855 * AcceptedCmp10
2543877   +          +    -0.08873650760176 * AcceptedCmp20  +    -0.16380549867313 *
2543878   +        AcceptedCmp30  +    -0.24495261884932 * AcceptedCmp40
2543879   +          +    -0.22199506896148 * AcceptedCmp50  +       0.149484615172 *
2543880   +        Complain0  +     0.01091791142552 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.05495742609855 * AcceptedCmp10 + -0.08873650760176
* AcceptedCmp20 + -0.16380549867313 * AcceptedCmp30 + -0.24495261884932 * AcceptedCmp40 +
-0.22199506896148 * AcceptedCmp50 + 0.149484615172 * Complain0 + 0.01091791142552 *
HigherEducationBinary0 ;
2543881   +   H1x1_3  = H1x1_3  +     0.03473702421341 * AcceptedCmp10
2543882   +          +    -0.11226718065217 * AcceptedCmp20  +     0.19024579384296 *
2543883   +        AcceptedCmp30  +     0.15478548865598 * AcceptedCmp40
2543884   +          +     0.15222823671897 * AcceptedCmp50  +     0.07713012834947 *
2543885   +        Complain0  +    -0.18741708707661 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.03473702421341 * AcceptedCmp10 + -0.11226718065217 *
AcceptedCmp20 + 0.19024579384296 * AcceptedCmp30 + 0.15478548865598 * AcceptedCmp40 +
0.15222823671897 * AcceptedCmp50 + 0.07713012834947 * Complain0 + -0.18741708707661 *
HigherEducationBinary0 ;
2543886   +   H1x1_4  = H1x1_4  +    -0.25622127302429 * AcceptedCmp10
2543887   +          +    -0.39059103518073 * AcceptedCmp20  +    -0.29716603631807 *
2543888   +        AcceptedCmp30  +    -0.20875694971526 * AcceptedCmp40
2543889   +          +    -0.35128787139073 * AcceptedCmp50  +    -0.28848733462386 *
2543890   +        Complain0  +      0.4276503747649 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.25622127302429 * AcceptedCmp10 + -0.39059103518073
* AcceptedCmp20 + -0.29716603631807 * AcceptedCmp30 + -0.20875694971526 * AcceptedCmp40 +
-0.35128787139073 * AcceptedCmp50 + -0.28848733462386 * Complain0 + 0.4276503747649 *
HigherEducationBinary0 ;
2543891   +   H1x1_5  = H1x1_5  +    -0.06574875851088 * AcceptedCmp10
2543892   +          +    -0.27375195259265 * AcceptedCmp20  +     -0.2740681662293 *
2543893   +        AcceptedCmp30  +    -0.14697156898736 * AcceptedCmp40
2543894   +          +     0.17684649468835 * AcceptedCmp50  +    -0.09979172944646 *
2543895   +        Complain0  +     0.38986664202197 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.06574875851088 * AcceptedCmp10 + -0.27375195259265
* AcceptedCmp20 + -0.2740681662293 * AcceptedCmp30 + -0.14697156898736 * AcceptedCmp40 +
0.17684649468835 * AcceptedCmp50 + -0.09979172944646 * Complain0 + 0.38986664202197 *
HigherEducationBinary0 ;
2543896   +   H1x1_6  = H1x1_6  +     0.08696678529441 * AcceptedCmp10
2543897   +          +     0.09467543942215 * AcceptedCmp20  +     0.04586779705477 *
2543898   +        AcceptedCmp30  +    -0.12591921836379 * AcceptedCmp40
2543899   +          +     0.20150138392895 * AcceptedCmp50  +     0.27764282700214 *
2543900   +        Complain0  +     0.13985738522066 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + 0.08696678529441 * AcceptedCmp10 + 0.09467543942215 *
AcceptedCmp20 + 0.04586779705477 * AcceptedCmp30 + -0.12591921836379 * AcceptedCmp40 +
0.20150138392895 * AcceptedCmp50 + 0.27764282700214 * Complain0 + 0.13985738522066 *
HigherEducationBinary0 ;
2543901   +   H1x1_7  = H1x1_7  +    -0.10455069401218 * AcceptedCmp10
2543902   +          +      0.1311831941372 * AcceptedCmp20  +     0.17844209104604 *
2543903   +        AcceptedCmp30  +     0.19406707592815 * AcceptedCmp40
2543904   +          +    -0.00068155012319 * AcceptedCmp50  +     0.13245364846536 *
2543905   +        Complain0  +    -0.05165256160872 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_7 = H1x1_7 + -0.10455069401218 * AcceptedCmp10 + 0.1311831941372 *
AcceptedCmp20 + 0.17844209104604 * AcceptedCmp30 + 0.19406707592815 * AcceptedCmp40 +
-0.00068155012319 * AcceptedCmp50 + 0.13245364846536 * Complain0 + -0.05165256160872 *
HigherEducationBinary0 ;
2543906   +   H1x1_1  = H1x1_1  +     0.28967939808759 * Education2n_Cycle
2543907   +          +    -0.15795056374781 * EducationBasic  +    -0.00649803471307 *
2543908   +        EducationGraduation  +     0.19520715924532 * EducationMaster
2543909   +          +     0.07744097241553 * Marital_StatusDivorced
2543910   +          +     -0.0247463100385 * Marital_StatusMarried
2543911   +          +     0.05804915234573 * Marital_StatusSingle
2543912   +          +    -0.08320125047871 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.28967939808759 * Education2n_Cycle +
-0.15795056374781 * EducationBasic + -0.00649803471307 * EducationGraduation +
0.19520715924532 * EducationMaster + 0.07744097241553 * Marital_StatusDivorced +
-0.0247463100385 * Marital_StatusMarried + 0.05804915234573 * Marital_StatusSingle +
-0.08320125047871 * Marital_StatusTogether ;
2543913   +   H1x1_2  = H1x1_2  +     0.12524444422085 * Education2n_Cycle
2543914   +          +    -0.30278286924729 * EducationBasic  +     0.37480827366421 *
2543915   +        EducationGraduation  +     0.34209136290694 * EducationMaster
2543916   +          +     0.01390668926269 * Marital_StatusDivorced
2543917   +          +     0.01136282152074 * Marital_StatusMarried
2543918   +          +     0.12450246418789 * Marital_StatusSingle
2543919   +          +     -0.1576148519872 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.12524444422085 * Education2n_Cycle +
-0.30278286924729 * EducationBasic + 0.37480827366421 * EducationGraduation + 0.34209136290694
* EducationMaster + 0.01390668926269 * Marital_StatusDivorced + 0.01136282152074 *
Marital_StatusMarried + 0.12450246418789 * Marital_StatusSingle + -0.1576148519872 *
Marital_StatusTogether ;
2543920   +   H1x1_3  = H1x1_3  +    -0.14589041643593 * Education2n_Cycle
2543921   +          +    -0.15691118816463 * EducationBasic  +      0.1993616073183 *
2543922   +        EducationGraduation  +     0.02862010255145 * EducationMaster
2543923   +          +    -0.19133456931879 * Marital_StatusDivorced
2543924   +          +     0.56263566654996 * Marital_StatusMarried
2543925   +          +    -0.42172822038882 * Marital_StatusSingle
2543926   +          +     0.42023140643292 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.14589041643593 * Education2n_Cycle +
-0.15691118816463 * EducationBasic + 0.1993616073183 * EducationGraduation + 0.02862010255145
* EducationMaster + -0.19133456931879 * Marital_StatusDivorced + 0.56263566654996 *
Marital_StatusMarried + -0.42172822038882 * Marital_StatusSingle + 0.42023140643292 *
Marital_StatusTogether ;
2543927   +   H1x1_4  = H1x1_4  +     0.10038585978656 * Education2n_Cycle
2543928   +          +    -0.11388609002984 * EducationBasic  +    -0.14980553500983 *
2543929   +        EducationGraduation  +    -0.07646595330369 * EducationMaster
2543930   +          +    -0.19871205065609 * Marital_StatusDivorced
2543931   +          +    -0.14730795681603 * Marital_StatusMarried
2543932   +          +     0.05055432510362 * Marital_StatusSingle
2543933   +          +     0.06558965292395 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + 0.10038585978656 * Education2n_Cycle +
-0.11388609002984 * EducationBasic + -0.14980553500983 * EducationGraduation +
-0.07646595330369 * EducationMaster + -0.19871205065609 * Marital_StatusDivorced +
-0.14730795681603 * Marital_StatusMarried + 0.05055432510362 * Marital_StatusSingle +
0.06558965292395 * Marital_StatusTogether ;
2543934   +   H1x1_5  = H1x1_5  +      0.0015835307855 * Education2n_Cycle
2543935   +          +    -0.22658746797638 * EducationBasic  +    -0.03445982386977 *
2543936   +        EducationGraduation  +     0.11375378192685 * EducationMaster
2543937   +          +    -0.35623807358995 * Marital_StatusDivorced
2543938   +          +     0.30324726283965 * Marital_StatusMarried
2543939   +          +    -0.18561093467927 * Marital_StatusSingle
2543940   +          +       0.395424582152 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + 0.0015835307855 * Education2n_Cycle +
-0.22658746797638 * EducationBasic + -0.03445982386977 * EducationGraduation +
0.11375378192685 * EducationMaster + -0.35623807358995 * Marital_StatusDivorced +
0.30324726283965 * Marital_StatusMarried + -0.18561093467927 * Marital_StatusSingle +
0.395424582152 * Marital_StatusTogether ;
2543941   +   H1x1_6  = H1x1_6  +    -0.23751822587858 * Education2n_Cycle
2543942   +          +    -0.01687300040825 * EducationBasic  +     0.23236967703011 *
2543943   +        EducationGraduation  +      0.0725289831541 * EducationMaster
2543944   +          +     0.11581014663368 * Marital_StatusDivorced
2543945   +          +    -0.31070638037659 * Marital_StatusMarried
2543946   +          +     0.17131747253949 * Marital_StatusSingle
2543947   +          +    -0.19314955966476 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + -0.23751822587858 * Education2n_Cycle +
-0.01687300040825 * EducationBasic + 0.23236967703011 * EducationGraduation + 0.0725289831541
* EducationMaster + 0.11581014663368 * Marital_StatusDivorced + -0.31070638037659 *
Marital_StatusMarried + 0.17131747253949 * Marital_StatusSingle + -0.19314955966476 *
Marital_StatusTogether ;
2543948   +   H1x1_7  = H1x1_7  +     0.00103693282479 * Education2n_Cycle
2543949   +          +     0.12608909598752 * EducationBasic  +     -0.2366673091666 *
2543950   +        EducationGraduation  +     0.24413217290922 * EducationMaster
2543951   +          +    -0.42450599871892 * Marital_StatusDivorced
2543952   +          +     0.48162905075885 * Marital_StatusMarried
2543953   +          +    -0.26618507749283 * Marital_StatusSingle
2543954   +          +     0.38053668740338 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_7 = H1x1_7 + 0.00103693282479 * Education2n_Cycle +
0.12608909598752 * EducationBasic + -0.2366673091666 * EducationGraduation + 0.24413217290922
* EducationMaster + -0.42450599871892 * Marital_StatusDivorced + 0.48162905075885 *
Marital_StatusMarried + -0.26618507749283 * Marital_StatusSingle + 0.38053668740338 *
Marital_StatusTogether ;
2543955   +   H1x1_1  =     0.12149136705075 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.12149136705075 + H1x1_1 ;
2543956   +   H1x1_2  =    -0.97489696657001 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.97489696657001 + H1x1_2 ;
2543957   +   H1x1_3  =    -0.70605220802968 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.70605220802968 + H1x1_3 ;
2543958   +   H1x1_4  =    -1.07783206982379 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -1.07783206982379 + H1x1_4 ;
2543959   +   H1x1_5  =    -1.00400706261511 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -1.00400706261511 + H1x1_5 ;
2543960   +   H1x1_6  =     0.22600488314839 + H1x1_6 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = 0.22600488314839 + H1x1_6 ;
2543961   +   H1x1_7  =     1.55642446968077 + H1x1_7 ;
MPRINT(EM_DIAGRAM):   H1x1_7 = 1.55642446968077 + H1x1_7 ;
2543962   +   _EPS = SQRT(CONSTANT('MACEPS')) ;
MPRINT(EM_DIAGRAM):   _EPS = SQRT(CONSTANT('MACEPS')) ;
2543963   +   _REC_EPS = 1/_EPS ;
MPRINT(EM_DIAGRAM):   _REC_EPS = 1/_EPS ;
2543964   +   DROP _REC_EPS _EPS ;
MPRINT(EM_DIAGRAM):   DROP _REC_EPS _EPS ;
2543965   +   IF H1x1_1  < _REC_EPS AND H1x1_1  > - _REC_EPS THEN
2543966   +   H1x1_1  = H1x1_1  * H1x1_1 ;
MPRINT(EM_DIAGRAM):   IF H1x1_1 < _REC_EPS AND H1x1_1 > - _REC_EPS THEN H1x1_1 = H1x1_1 *
H1x1_1 ;
2543967   +   ELSE H1x1_1  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_1 = _REC_EPS ;
2543968   +   IF H1x1_2  < _REC_EPS AND H1x1_2  > - _REC_EPS THEN
2543969   +   H1x1_2  = H1x1_2  * H1x1_2 ;
MPRINT(EM_DIAGRAM):   IF H1x1_2 < _REC_EPS AND H1x1_2 > - _REC_EPS THEN H1x1_2 = H1x1_2 *
H1x1_2 ;
2543970   +   ELSE H1x1_2  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_2 = _REC_EPS ;
2543971   +   IF H1x1_3  < _REC_EPS AND H1x1_3  > - _REC_EPS THEN
2543972   +   H1x1_3  = H1x1_3  * H1x1_3 ;
MPRINT(EM_DIAGRAM):   IF H1x1_3 < _REC_EPS AND H1x1_3 > - _REC_EPS THEN H1x1_3 = H1x1_3 *
H1x1_3 ;
2543973   +   ELSE H1x1_3  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_3 = _REC_EPS ;
2543974   +   IF H1x1_4  < _REC_EPS AND H1x1_4  > - _REC_EPS THEN
2543975   +   H1x1_4  = H1x1_4  * H1x1_4 ;
MPRINT(EM_DIAGRAM):   IF H1x1_4 < _REC_EPS AND H1x1_4 > - _REC_EPS THEN H1x1_4 = H1x1_4 *
H1x1_4 ;
2543976   +   ELSE H1x1_4  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_4 = _REC_EPS ;
2543977   +   IF H1x1_5  < _REC_EPS AND H1x1_5  > - _REC_EPS THEN
2543978   +   H1x1_5  = H1x1_5  * H1x1_5 ;
MPRINT(EM_DIAGRAM):   IF H1x1_5 < _REC_EPS AND H1x1_5 > - _REC_EPS THEN H1x1_5 = H1x1_5 *
H1x1_5 ;
2543979   +   ELSE H1x1_5  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_5 = _REC_EPS ;
2543980   +   IF H1x1_6  < _REC_EPS AND H1x1_6  > - _REC_EPS THEN
2543981   +   H1x1_6  = H1x1_6  * H1x1_6 ;
MPRINT(EM_DIAGRAM):   IF H1x1_6 < _REC_EPS AND H1x1_6 > - _REC_EPS THEN H1x1_6 = H1x1_6 *
H1x1_6 ;
2543982   +   ELSE H1x1_6  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_6 = _REC_EPS ;
2543983   +   IF H1x1_7  < _REC_EPS AND H1x1_7  > - _REC_EPS THEN
2543984   +   H1x1_7  = H1x1_7  * H1x1_7 ;
MPRINT(EM_DIAGRAM):   IF H1x1_7 < _REC_EPS AND H1x1_7 > - _REC_EPS THEN H1x1_7 = H1x1_7 *
H1x1_7 ;
2543985   +   ELSE H1x1_7  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_7 = _REC_EPS ;
2543986   +END;
MPRINT(EM_DIAGRAM):   END;
2543987   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2543988   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
2543989   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
2543990   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
2543991   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
2543992   +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
2543993   +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
2543994   +   H1x1_7  = .;
MPRINT(EM_DIAGRAM):   H1x1_7 = .;
2543995   +END;
MPRINT(EM_DIAGRAM):   END;
2543996   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2543997   +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
2543998   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2543999   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2544000   +   H1x2_1  =    -1.36226288448745 * S_AcceptedCmpTotal
2544001   +          +     -1.3328616352886 * S_Age  +     1.25346137866034 * S_Frq
2544002   +          +    -1.21746243786295 * S_Income  +     2.83911738158074 *
2544003   +        S_Kidhome  +    -0.60784009102409 * S_Mnt  +     1.57752173634223 *
2544004   +        S_MntFishProducts  +    -0.26776567401075 * S_MntFruits
2544005   +          +     1.09584731081081 * S_MntGoldProds  +     1.22333044103532 *
2544006   +        S_MntMeatProducts  +     0.42827942745016 * S_MntSweetProducts
2544007   +          +     0.67813472792448 * S_MntWines  +     0.56816492004798 *
2544008   +        S_MonthsAsCustomer  +     0.58113470399079 * S_NumCatalogPurchases
2544009   +          +     1.96719021971894 * S_NumDealsPurchases
2544010   +          +    -0.44535354794671 * S_NumDistPurchases
2544011   +          +    -0.54827762736866 * S_NumStorePurchases
2544012   +          +     1.02703310241897 * S_NumWebPurchases
2544013   +          +    -0.12526997502601 * S_NumWebVisitsMonth
2544014   +          +    -0.55803926383776 * S_RFMstat  +     0.01819380776809 *
2544015   +        S_RMntFrq  +       0.651688575044 * S_Recency
2544016   +          +     1.58682398186611 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -1.36226288448745 * S_AcceptedCmpTotal + -1.3328616352886 *
S_Age + 1.25346137866034 * S_Frq + -1.21746243786295 * S_Income + 2.83911738158074 * S_Kidhome
+ -0.60784009102409 * S_Mnt + 1.57752173634223 * S_MntFishProducts + -0.26776567401075 *
S_MntFruits + 1.09584731081081 * S_MntGoldProds + 1.22333044103532 * S_MntMeatProducts +
0.42827942745016 * S_MntSweetProducts + 0.67813472792448 * S_MntWines + 0.56816492004798 *
S_MonthsAsCustomer + 0.58113470399079 * S_NumCatalogPurchases + 1.96719021971894 *
S_NumDealsPurchases + -0.44535354794671 * S_NumDistPurchases + -0.54827762736866 *
S_NumStorePurchases + 1.02703310241897 * S_NumWebPurchases + -0.12526997502601 *
S_NumWebVisitsMonth + -0.55803926383776 * S_RFMstat + 0.01819380776809 * S_RMntFrq +
0.651688575044 * S_Recency + 1.58682398186611 * S_Teenhome ;
2544017   +   H1x2_2  =    -0.38064507857029 * S_AcceptedCmpTotal
2544018   +          +    -0.49661801158351 * S_Age  +    -0.89589399799916 * S_Frq
2544019   +          +     -0.0121499288597 * S_Income  +    -0.48023022827846 *
2544020   +        S_Kidhome  +     -0.5183846206029 * S_Mnt  +    -3.13913899012334 *
2544021   +        S_MntFishProducts  +    -2.07291335687615 * S_MntFruits
2544022   +          +     0.51019753905662 * S_MntGoldProds  +     0.11458666377917 *
2544023   +        S_MntMeatProducts  +     -1.8499241966205 * S_MntSweetProducts
2544024   +          +     0.23160544044172 * S_MntWines  +    -0.48210626907943 *
2544025   +        S_MonthsAsCustomer  +     0.15500845227752 * S_NumCatalogPurchases
2544026   +          +     1.34659447971131 * S_NumDealsPurchases
2544027   +          +    -0.51624251310423 * S_NumDistPurchases
2544028   +          +      -1.283121574848 * S_NumStorePurchases
2544029   +          +    -1.83517806228926 * S_NumWebPurchases
2544030   +          +     0.51321339475285 * S_NumWebVisitsMonth
2544031   +          +    -1.86431704283342 * S_RFMstat  +    -1.52065204326569 *
2544032   +        S_RMntFrq  +    -0.33186055095462 * S_Recency
2544033   +          +    -0.49524729407054 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -0.38064507857029 * S_AcceptedCmpTotal + -0.49661801158351 *
S_Age + -0.89589399799916 * S_Frq + -0.0121499288597 * S_Income + -0.48023022827846 *
S_Kidhome + -0.5183846206029 * S_Mnt + -3.13913899012334 * S_MntFishProducts +
-2.07291335687615 * S_MntFruits + 0.51019753905662 * S_MntGoldProds + 0.11458666377917 *
S_MntMeatProducts + -1.8499241966205 * S_MntSweetProducts + 0.23160544044172 * S_MntWines +
-0.48210626907943 * S_MonthsAsCustomer + 0.15500845227752 * S_NumCatalogPurchases +
1.34659447971131 * S_NumDealsPurchases + -0.51624251310423 * S_NumDistPurchases +
-1.283121574848 * S_NumStorePurchases + -1.83517806228926 * S_NumWebPurchases +
0.51321339475285 * S_NumWebVisitsMonth + -1.86431704283342 * S_RFMstat + -1.52065204326569 *
S_RMntFrq + -0.33186055095462 * S_Recency + -0.49524729407054 * S_Teenhome ;
2544034   +   H1x2_3  =    -0.75774003934728 * S_AcceptedCmpTotal
2544035   +          +    -0.85312030825337 * S_Age  +    -0.01726294458221 * S_Frq
2544036   +          +     0.58598267983786 * S_Income  +     1.30497766805554 *
2544037   +        S_Kidhome  +    -0.84214135491022 * S_Mnt  +     0.55305862453787 *
2544038   +        S_MntFishProducts  +      0.6488663613899 * S_MntFruits
2544039   +          +    -0.83189439197558 * S_MntGoldProds  +    -0.07500050412653 *
2544040   +        S_MntMeatProducts  +    -0.06401928810253 * S_MntSweetProducts
2544041   +          +      0.5940135658334 * S_MntWines  +    -0.04573352455984 *
2544042   +        S_MonthsAsCustomer  +    -1.53610650634069 * S_NumCatalogPurchases
2544043   +          +     0.67492297345004 * S_NumDealsPurchases
2544044   +          +    -0.40437875375926 * S_NumDistPurchases
2544045   +          +     0.36322603681545 * S_NumStorePurchases
2544046   +          +    -1.15315070635524 * S_NumWebPurchases
2544047   +          +     1.20707272201156 * S_NumWebVisitsMonth
2544048   +          +     0.12192566357285 * S_RFMstat  +    -0.46711219170047 *
2544049   +        S_RMntFrq  +     1.89703582493259 * S_Recency
2544050   +          +     1.07511942237188 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.75774003934728 * S_AcceptedCmpTotal + -0.85312030825337 *
S_Age + -0.01726294458221 * S_Frq + 0.58598267983786 * S_Income + 1.30497766805554 * S_Kidhome
+ -0.84214135491022 * S_Mnt + 0.55305862453787 * S_MntFishProducts + 0.6488663613899 *
S_MntFruits + -0.83189439197558 * S_MntGoldProds + -0.07500050412653 * S_MntMeatProducts +
-0.06401928810253 * S_MntSweetProducts + 0.5940135658334 * S_MntWines + -0.04573352455984 *
S_MonthsAsCustomer + -1.53610650634069 * S_NumCatalogPurchases + 0.67492297345004 *
S_NumDealsPurchases + -0.40437875375926 * S_NumDistPurchases + 0.36322603681545 *
S_NumStorePurchases + -1.15315070635524 * S_NumWebPurchases + 1.20707272201156 *
S_NumWebVisitsMonth + 0.12192566357285 * S_RFMstat + -0.46711219170047 * S_RMntFrq +
1.89703582493259 * S_Recency + 1.07511942237188 * S_Teenhome ;
2544051   +   H1x2_4  =     0.62123819069495 * S_AcceptedCmpTotal
2544052   +          +     0.03399237520702 * S_Age  +    -0.01971421795338 * S_Frq
2544053   +          +    -0.54728266919056 * S_Income  +     -0.4634195771237 *
2544054   +        S_Kidhome  +    -1.19055247712911 * S_Mnt  +      1.4307770729159 *
2544055   +        S_MntFishProducts  +    -0.83895281276374 * S_MntFruits
2544056   +          +    -0.48578798244317 * S_MntGoldProds  +     -0.2846617807101 *
2544057   +        S_MntMeatProducts  +     0.70721686533987 * S_MntSweetProducts
2544058   +          +     1.32824513551741 * S_MntWines  +    -0.62654342755965 *
2544059   +        S_MonthsAsCustomer  +    -0.97245161056543 * S_NumCatalogPurchases
2544060   +          +    -0.41427983342148 * S_NumDealsPurchases
2544061   +          +    -0.22714305629205 * S_NumDistPurchases
2544062   +          +    -0.78763182048862 * S_NumStorePurchases
2544063   +          +    -0.26669253451501 * S_NumWebPurchases
2544064   +          +    -0.79601078616342 * S_NumWebVisitsMonth
2544065   +          +    -0.03863278696502 * S_RFMstat  +     0.95011556103056 *
2544066   +        S_RMntFrq  +     0.57184629262878 * S_Recency
2544067   +          +    -0.21560478702461 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 0.62123819069495 * S_AcceptedCmpTotal + 0.03399237520702 *
S_Age + -0.01971421795338 * S_Frq + -0.54728266919056 * S_Income + -0.4634195771237 *
S_Kidhome + -1.19055247712911 * S_Mnt + 1.4307770729159 * S_MntFishProducts +
-0.83895281276374 * S_MntFruits + -0.48578798244317 * S_MntGoldProds + -0.2846617807101 *
S_MntMeatProducts + 0.70721686533987 * S_MntSweetProducts + 1.32824513551741 * S_MntWines +
-0.62654342755965 * S_MonthsAsCustomer + -0.97245161056543 * S_NumCatalogPurchases +
-0.41427983342148 * S_NumDealsPurchases + -0.22714305629205 * S_NumDistPurchases +
-0.78763182048862 * S_NumStorePurchases + -0.26669253451501 * S_NumWebPurchases +
-0.79601078616342 * S_NumWebVisitsMonth + -0.03863278696502 * S_RFMstat + 0.95011556103056 *
S_RMntFrq + 0.57184629262878 * S_Recency + -0.21560478702461 * S_Teenhome ;
2544068   +   H1x2_5  =     1.47906557745075 * S_AcceptedCmpTotal
2544069   +          +    -0.31060566334198 * S_Age  +     0.56472424389718 * S_Frq
2544070   +          +     2.16541682726249 * S_Income  +    -0.34119803841059 *
2544071   +        S_Kidhome  +    -0.53783050542796 * S_Mnt  +     0.54954821448236 *
2544072   +        S_MntFishProducts  +    -0.48449918837838 * S_MntFruits
2544073   +          +     0.29783052620672 * S_MntGoldProds  +    -0.15068954343013 *
2544074   +        S_MntMeatProducts  +     0.12733251381761 * S_MntSweetProducts
2544075   +          +    -2.46709166794296 * S_MntWines  +     -1.2011286508879 *
2544076   +        S_MonthsAsCustomer  +    -0.88194814936932 * S_NumCatalogPurchases
2544077   +          +      0.7697882092212 * S_NumDealsPurchases
2544078   +          +     0.51864835453056 * S_NumDistPurchases
2544079   +          +    -1.18320366630444 * S_NumStorePurchases
2544080   +          +     -0.6608394639529 * S_NumWebPurchases
2544081   +          +    -0.03948137707769 * S_NumWebVisitsMonth
2544082   +          +     1.01076462488608 * S_RFMstat  +    -0.91562280329354 *
2544083   +        S_RMntFrq  +    -1.07576669501238 * S_Recency
2544084   +          +     -0.5946628412106 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 1.47906557745075 * S_AcceptedCmpTotal + -0.31060566334198 *
S_Age + 0.56472424389718 * S_Frq + 2.16541682726249 * S_Income + -0.34119803841059 * S_Kidhome
+ -0.53783050542796 * S_Mnt + 0.54954821448236 * S_MntFishProducts + -0.48449918837838 *
S_MntFruits + 0.29783052620672 * S_MntGoldProds + -0.15068954343013 * S_MntMeatProducts +
0.12733251381761 * S_MntSweetProducts + -2.46709166794296 * S_MntWines + -1.2011286508879 *
S_MonthsAsCustomer + -0.88194814936932 * S_NumCatalogPurchases + 0.7697882092212 *
S_NumDealsPurchases + 0.51864835453056 * S_NumDistPurchases + -1.18320366630444 *
S_NumStorePurchases + -0.6608394639529 * S_NumWebPurchases + -0.03948137707769 *
S_NumWebVisitsMonth + 1.01076462488608 * S_RFMstat + -0.91562280329354 * S_RMntFrq +
-1.07576669501238 * S_Recency + -0.5946628412106 * S_Teenhome ;
2544085   +   H1x2_6  =     0.42130900994246 * S_AcceptedCmpTotal
2544086   +          +     1.64256522546546 * S_Age  +    -0.31822237495441 * S_Frq
2544087   +          +     0.39698710846967 * S_Income  +    -1.30075584525681 *
2544088   +        S_Kidhome  +    -1.74733472316294 * S_Mnt  +    -1.04423575539078 *
2544089   +        S_MntFishProducts  +     0.28025913700744 * S_MntFruits
2544090   +          +     0.92062413073229 * S_MntGoldProds  +     0.38487452173084 *
2544091   +        S_MntMeatProducts  +     2.15808673418264 * S_MntSweetProducts
2544092   +          +     -0.5364274323591 * S_MntWines  +     0.64447858852609 *
2544093   +        S_MonthsAsCustomer  +     0.33683873873337 * S_NumCatalogPurchases
2544094   +          +     1.45707983202269 * S_NumDealsPurchases
2544095   +          +     0.83341887728641 * S_NumDistPurchases
2544096   +          +    -0.36664450469423 * S_NumStorePurchases
2544097   +          +     0.63911579043339 * S_NumWebPurchases
2544098   +          +     0.67144790303554 * S_NumWebVisitsMonth
2544099   +          +    -0.22124390112376 * S_RFMstat  +     1.72222071547971 *
2544100   +        S_RMntFrq  +    -0.02323382627271 * S_Recency
2544101   +          +    -0.09494567508522 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_6 = 0.42130900994246 * S_AcceptedCmpTotal + 1.64256522546546 *
S_Age + -0.31822237495441 * S_Frq + 0.39698710846967 * S_Income + -1.30075584525681 *
S_Kidhome + -1.74733472316294 * S_Mnt + -1.04423575539078 * S_MntFishProducts +
0.28025913700744 * S_MntFruits + 0.92062413073229 * S_MntGoldProds + 0.38487452173084 *
S_MntMeatProducts + 2.15808673418264 * S_MntSweetProducts + -0.5364274323591 * S_MntWines +
0.64447858852609 * S_MonthsAsCustomer + 0.33683873873337 * S_NumCatalogPurchases +
1.45707983202269 * S_NumDealsPurchases + 0.83341887728641 * S_NumDistPurchases +
-0.36664450469423 * S_NumStorePurchases + 0.63911579043339 * S_NumWebPurchases +
0.67144790303554 * S_NumWebVisitsMonth + -0.22124390112376 * S_RFMstat + 1.72222071547971 *
S_RMntFrq + -0.02323382627271 * S_Recency + -0.09494567508522 * S_Teenhome ;
2544102   +   H1x2_7  =      0.0903330772553 * S_AcceptedCmpTotal
2544103   +          +     0.13217959089196 * S_Age  +     0.93600629225871 * S_Frq
2544104   +          +     1.23765169211392 * S_Income  +     1.27732984858098 *
2544105   +        S_Kidhome  +     1.54889765360944 * S_Mnt  +     0.84618173514761 *
2544106   +        S_MntFishProducts  +    -0.32044356786958 * S_MntFruits
2544107   +          +    -0.26357995597029 * S_MntGoldProds  +     0.53649229087334 *
2544108   +        S_MntMeatProducts  +     1.46955866272889 * S_MntSweetProducts
2544109   +          +    -0.34260315437319 * S_MntWines  +    -1.70693604004836 *
2544110   +        S_MonthsAsCustomer  +     -0.4612555130737 * S_NumCatalogPurchases
2544111   +          +     0.68491896063662 * S_NumDealsPurchases
2544112   +          +      0.5386312048592 * S_NumDistPurchases
2544113   +          +     1.28108942503912 * S_NumStorePurchases
2544114   +          +    -0.88282270505969 * S_NumWebPurchases
2544115   +          +    -0.66670958211416 * S_NumWebVisitsMonth
2544116   +          +     0.94315921733739 * S_RFMstat  +     0.70533705858561 *
2544117   +        S_RMntFrq  +     0.23896687873405 * S_Recency
2544118   +          +     0.66289635918858 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_7 = 0.0903330772553 * S_AcceptedCmpTotal + 0.13217959089196 * S_Age
+ 0.93600629225871 * S_Frq + 1.23765169211392 * S_Income + 1.27732984858098 * S_Kidhome +
1.54889765360944 * S_Mnt + 0.84618173514761 * S_MntFishProducts + -0.32044356786958 *
S_MntFruits + -0.26357995597029 * S_MntGoldProds + 0.53649229087334 * S_MntMeatProducts +
1.46955866272889 * S_MntSweetProducts + -0.34260315437319 * S_MntWines + -1.70693604004836 *
S_MonthsAsCustomer + -0.4612555130737 * S_NumCatalogPurchases + 0.68491896063662 *
S_NumDealsPurchases + 0.5386312048592 * S_NumDistPurchases + 1.28108942503912 *
S_NumStorePurchases + -0.88282270505969 * S_NumWebPurchases + -0.66670958211416 *
S_NumWebVisitsMonth + 0.94315921733739 * S_RFMstat + 0.70533705858561 * S_RMntFrq +
0.23896687873405 * S_Recency + 0.66289635918858 * S_Teenhome ;
2544119   +   H1x2_1  = H1x2_1  +     0.22958861848016 * AcceptedCmp10
2544120   +          +    -1.11069938765475 * AcceptedCmp20  +     1.18563222829069 *
2544121   +        AcceptedCmp30  +    -0.97028253571173 * AcceptedCmp40
2544122   +          +     0.60850082670391 * AcceptedCmp50  +     0.31163990605418 *
2544123   +        Complain0  +     1.10957053966326 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 0.22958861848016 * AcceptedCmp10 + -1.11069938765475 *
AcceptedCmp20 + 1.18563222829069 * AcceptedCmp30 + -0.97028253571173 * AcceptedCmp40 +
0.60850082670391 * AcceptedCmp50 + 0.31163990605418 * Complain0 + 1.10957053966326 *
HigherEducationBinary0 ;
2544124   +   H1x2_2  = H1x2_2  +    -0.99409862826118 * AcceptedCmp10
2544125   +          +    -0.76360093699992 * AcceptedCmp20  +     0.82772534103696 *
2544126   +        AcceptedCmp30  +     1.74232000787449 * AcceptedCmp40
2544127   +          +    -1.37356239255127 * AcceptedCmp50  +      0.0919811154199 *
2544128   +        Complain0  +    -0.00220513515877 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -0.99409862826118 * AcceptedCmp10 + -0.76360093699992
* AcceptedCmp20 + 0.82772534103696 * AcceptedCmp30 + 1.74232000787449 * AcceptedCmp40 +
-1.37356239255127 * AcceptedCmp50 + 0.0919811154199 * Complain0 + -0.00220513515877 *
HigherEducationBinary0 ;
2544129   +   H1x2_3  = H1x2_3  +    -0.21003647134105 * AcceptedCmp10
2544130   +          +    -0.08930317176477 * AcceptedCmp20  +    -0.39109673162041 *
2544131   +        AcceptedCmp30  +     1.14094450038946 * AcceptedCmp40
2544132   +          +     1.26041997788848 * AcceptedCmp50  +    -0.10972130900569 *
2544133   +        Complain0  +    -0.99352598480407 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + -0.21003647134105 * AcceptedCmp10 + -0.08930317176477
* AcceptedCmp20 + -0.39109673162041 * AcceptedCmp30 + 1.14094450038946 * AcceptedCmp40 +
1.26041997788848 * AcceptedCmp50 + -0.10972130900569 * Complain0 + -0.99352598480407 *
HigherEducationBinary0 ;
2544134   +   H1x2_4  = H1x2_4  +     2.02630284432093 * AcceptedCmp10
2544135   +          +    -2.50721904229276 * AcceptedCmp20  +    -1.31026450397446 *
2544136   +        AcceptedCmp30  +    -0.83440880266914 * AcceptedCmp40
2544137   +          +     -0.0570899805015 * AcceptedCmp50  +    -0.55525351434733 *
2544138   +        Complain0  +     0.27306601694081 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 2.02630284432093 * AcceptedCmp10 + -2.50721904229276 *
AcceptedCmp20 + -1.31026450397446 * AcceptedCmp30 + -0.83440880266914 * AcceptedCmp40 +
-0.0570899805015 * AcceptedCmp50 + -0.55525351434733 * Complain0 + 0.27306601694081 *
HigherEducationBinary0 ;
2544139   +   H1x2_5  = H1x2_5  +    -0.18595284227194 * AcceptedCmp10
2544140   +          +    -1.55973916517392 * AcceptedCmp20  +    -3.81563768970049 *
2544141   +        AcceptedCmp30  +    -0.09331430915239 * AcceptedCmp40
2544142   +          +     0.76128118177142 * AcceptedCmp50  +    -0.17283107047755 *
2544143   +        Complain0  +    -1.01028562804392 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + -0.18595284227194 * AcceptedCmp10 + -1.55973916517392
* AcceptedCmp20 + -3.81563768970049 * AcceptedCmp30 + -0.09331430915239 * AcceptedCmp40 +
0.76128118177142 * AcceptedCmp50 + -0.17283107047755 * Complain0 + -1.01028562804392 *
HigherEducationBinary0 ;
2544144   +   H1x2_6  = H1x2_6  +    -1.21475169836565 * AcceptedCmp10
2544145   +          +     0.28748729216575 * AcceptedCmp20  +     1.15908030413172 *
2544146   +        AcceptedCmp30  +    -0.05889528676549 * AcceptedCmp40
2544147   +          +    -0.41661363625562 * AcceptedCmp50  +    -0.77939130028952 *
2544148   +        Complain0  +     2.19510865765326 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 + -1.21475169836565 * AcceptedCmp10 + 0.28748729216575 *
AcceptedCmp20 + 1.15908030413172 * AcceptedCmp30 + -0.05889528676549 * AcceptedCmp40 +
-0.41661363625562 * AcceptedCmp50 + -0.77939130028952 * Complain0 + 2.19510865765326 *
HigherEducationBinary0 ;
2544149   +   H1x2_7  = H1x2_7  +     0.87360423179644 * AcceptedCmp10
2544150   +          +    -0.47867594186426 * AcceptedCmp20  +    -0.30325818223392 *
2544151   +        AcceptedCmp30  +    -0.96085556588297 * AcceptedCmp40
2544152   +          +    -0.19693158209969 * AcceptedCmp50  +    -0.73731792634553 *
2544153   +        Complain0  +    -1.10021678806679 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_7 = H1x2_7 + 0.87360423179644 * AcceptedCmp10 + -0.47867594186426 *
AcceptedCmp20 + -0.30325818223392 * AcceptedCmp30 + -0.96085556588297 * AcceptedCmp40 +
-0.19693158209969 * AcceptedCmp50 + -0.73731792634553 * Complain0 + -1.10021678806679 *
HigherEducationBinary0 ;
2544154   +   H1x2_1  = H1x2_1  +    -1.17876013389516 * Education2n_Cycle
2544155   +          +    -0.35670434275624 * EducationBasic  +    -0.12456502068616 *
2544156   +        EducationGraduation  +     -1.0620373133508 * EducationMaster
2544157   +          +    -3.97961426831865 * Marital_StatusDivorced
2544158   +          +     0.00932639813867 * Marital_StatusMarried
2544159   +          +     1.29310186574718 * Marital_StatusSingle
2544160   +          +     1.60940802221114 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -1.17876013389516 * Education2n_Cycle +
-0.35670434275624 * EducationBasic + -0.12456502068616 * EducationGraduation +
-1.0620373133508 * EducationMaster + -3.97961426831865 * Marital_StatusDivorced +
0.00932639813867 * Marital_StatusMarried + 1.29310186574718 * Marital_StatusSingle +
1.60940802221114 * Marital_StatusTogether ;
2544161   +   H1x2_2  = H1x2_2  +     0.58497813059595 * Education2n_Cycle
2544162   +          +     0.98038586431321 * EducationBasic  +    -0.20442806724521 *
2544163   +        EducationGraduation  +     0.64973046142001 * EducationMaster
2544164   +          +    -0.30358516578188 * Marital_StatusDivorced
2544165   +          +    -0.96176709360703 * Marital_StatusMarried
2544166   +          +     1.26977690921649 * Marital_StatusSingle
2544167   +          +     -0.6681544336237 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 0.58497813059595 * Education2n_Cycle +
0.98038586431321 * EducationBasic + -0.20442806724521 * EducationGraduation + 0.64973046142001
* EducationMaster + -0.30358516578188 * Marital_StatusDivorced + -0.96176709360703 *
Marital_StatusMarried + 1.26977690921649 * Marital_StatusSingle + -0.6681544336237 *
Marital_StatusTogether ;
2544168   +   H1x2_3  = H1x2_3  +     0.42123479646947 * Education2n_Cycle
2544169   +          +     0.22705854674045 * EducationBasic  +     0.34794003687348 *
2544170   +        EducationGraduation  +     0.18356390207843 * EducationMaster
2544171   +          +     0.55272671490757 * Marital_StatusDivorced
2544172   +          +      0.1499239288334 * Marital_StatusMarried
2544173   +          +    -0.46840941760604 * Marital_StatusSingle
2544174   +          +     0.93706218273755 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 0.42123479646947 * Education2n_Cycle +
0.22705854674045 * EducationBasic + 0.34794003687348 * EducationGraduation + 0.18356390207843
* EducationMaster + 0.55272671490757 * Marital_StatusDivorced + 0.1499239288334 *
Marital_StatusMarried + -0.46840941760604 * Marital_StatusSingle + 0.93706218273755 *
Marital_StatusTogether ;
2544175   +   H1x2_4  = H1x2_4  +     0.85035585831723 * Education2n_Cycle
2544176   +          +    -0.70680576286167 * EducationBasic  +    -0.24487676912938 *
2544177   +        EducationGraduation  +    -0.33030970028481 * EducationMaster
2544178   +          +      -1.240735370138 * Marital_StatusDivorced
2544179   +          +    -1.20089294883599 * Marital_StatusMarried
2544180   +          +     0.57492674426149 * Marital_StatusSingle
2544181   +          +     1.44189292990255 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 0.85035585831723 * Education2n_Cycle +
-0.70680576286167 * EducationBasic + -0.24487676912938 * EducationGraduation +
-0.33030970028481 * EducationMaster + -1.240735370138 * Marital_StatusDivorced +
-1.20089294883599 * Marital_StatusMarried + 0.57492674426149 * Marital_StatusSingle +
1.44189292990255 * Marital_StatusTogether ;
2544182   +   H1x2_5  = H1x2_5  +    -0.62461434654579 * Education2n_Cycle
2544183   +          +    -0.34090423965869 * EducationBasic  +    -0.82493401834396 *
2544184   +        EducationGraduation  +    -1.09423426649553 * EducationMaster
2544185   +          +     1.05435442049802 * Marital_StatusDivorced
2544186   +          +      0.3571256349717 * Marital_StatusMarried
2544187   +          +    -0.44741267266578 * Marital_StatusSingle
2544188   +          +     0.02948931507994 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + -0.62461434654579 * Education2n_Cycle +
-0.34090423965869 * EducationBasic + -0.82493401834396 * EducationGraduation +
-1.09423426649553 * EducationMaster + 1.05435442049802 * Marital_StatusDivorced +
0.3571256349717 * Marital_StatusMarried + -0.44741267266578 * Marital_StatusSingle +
0.02948931507994 * Marital_StatusTogether ;
2544189   +   H1x2_6  = H1x2_6  +     0.09620501635178 * Education2n_Cycle
2544190   +          +    -0.54617424401993 * EducationBasic  +    -0.43305038404558 *
2544191   +        EducationGraduation  +     0.05453229059502 * EducationMaster
2544192   +          +     2.06026721980778 * Marital_StatusDivorced
2544193   +          +    -0.49583258645166 * Marital_StatusMarried
2544194   +          +    -1.14824900824474 * Marital_StatusSingle
2544195   +          +     0.57690093967839 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 + 0.09620501635178 * Education2n_Cycle +
-0.54617424401993 * EducationBasic + -0.43305038404558 * EducationGraduation +
0.05453229059502 * EducationMaster + 2.06026721980778 * Marital_StatusDivorced +
-0.49583258645166 * Marital_StatusMarried + -1.14824900824474 * Marital_StatusSingle +
0.57690093967839 * Marital_StatusTogether ;
2544196   +   H1x2_7  = H1x2_7  +    -0.31251046777442 * Education2n_Cycle
2544197   +          +    -1.69272922870259 * EducationBasic  +    -0.08682253496961 *
2544198   +        EducationGraduation  +     0.58241644186309 * EducationMaster
2544199   +          +     -1.1890908607447 * Marital_StatusDivorced
2544200   +          +    -0.46668809907123 * Marital_StatusMarried
2544201   +          +     1.20342564763422 * Marital_StatusSingle
2544202   +          +    -1.75740662969578 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_7 = H1x2_7 + -0.31251046777442 * Education2n_Cycle +
-1.69272922870259 * EducationBasic + -0.08682253496961 * EducationGraduation +
0.58241644186309 * EducationMaster + -1.1890908607447 * Marital_StatusDivorced +
-0.46668809907123 * Marital_StatusMarried + 1.20342564763422 * Marital_StatusSingle +
-1.75740662969578 * Marital_StatusTogether ;
2544203   +   H1x2_1  =    -0.14973719401763 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -0.14973719401763 + H1x2_1 ;
2544204   +   H1x2_2  =    -0.56259582407931 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -0.56259582407931 + H1x2_2 ;
2544205   +   H1x2_3  =     0.42132483186492 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = 0.42132483186492 + H1x2_3 ;
2544206   +   H1x2_4  =      1.1996209421335 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 1.1996209421335 + H1x2_4 ;
2544207   +   H1x2_5  =     0.95827018478011 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 0.95827018478011 + H1x2_5 ;
2544208   +   H1x2_6  =     1.88844492435344 + H1x2_6 ;
MPRINT(EM_DIAGRAM):   H1x2_6 = 1.88844492435344 + H1x2_6 ;
2544209   +   H1x2_7  =     0.77184516675485 + H1x2_7 ;
MPRINT(EM_DIAGRAM):   H1x2_7 = 0.77184516675485 + H1x2_7 ;
2544210   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
2544211   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
2544212   +   H1x2_1  = EXP(MIN(H1x2_1 , _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x2_1 = EXP(MIN(H1x2_1 , _EXP_BAR));
2544213   +   H1x2_2  = EXP(MIN(H1x2_2 , _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x2_2 = EXP(MIN(H1x2_2 , _EXP_BAR));
2544214   +   H1x2_3  = EXP(MIN(H1x2_3 , _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x2_3 = EXP(MIN(H1x2_3 , _EXP_BAR));
2544215   +   H1x2_4  = EXP(MIN(H1x2_4 , _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x2_4 = EXP(MIN(H1x2_4 , _EXP_BAR));
2544216   +   H1x2_5  = EXP(MIN(H1x2_5 , _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x2_5 = EXP(MIN(H1x2_5 , _EXP_BAR));
2544217   +   H1x2_6  = EXP(MIN(H1x2_6 , _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x2_6 = EXP(MIN(H1x2_6 , _EXP_BAR));
2544218   +   H1x2_7  = EXP(MIN(H1x2_7 , _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x2_7 = EXP(MIN(H1x2_7 , _EXP_BAR));
2544219   +END;
MPRINT(EM_DIAGRAM):   END;
2544220   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2544221   +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
2544222   +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
2544223   +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
2544224   +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
2544225   +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
2544226   +   H1x2_6  = .;
MPRINT(EM_DIAGRAM):   H1x2_6 = .;
2544227   +   H1x2_7  = .;
MPRINT(EM_DIAGRAM):   H1x2_7 = .;
2544228   +END;
MPRINT(EM_DIAGRAM):   END;
2544229   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2544230   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2544231   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2544232   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2544233   +   P_DepVar1  =     0.10431866610268 * H1x1_1  +    -0.48100701431081 * H1x1_2
2544234   +          +      1.1561061025832 * H1x1_3  +    -1.23928879501664 * H1x1_4
2544235   +          +     1.22057275321508 * H1x1_5  +     0.21972347471711 * H1x1_6
2544236   +          +    -0.98998788335495 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.10431866610268 * H1x1_1 + -0.48100701431081 * H1x1_2 +
1.1561061025832 * H1x1_3 + -1.23928879501664 * H1x1_4 + 1.22057275321508 * H1x1_5 +
0.21972347471711 * H1x1_6 + -0.98998788335495 * H1x1_7 ;
2544237   +   P_DepVar1  = P_DepVar1  + -4.9985478923183E-10 * H1x2_1
2544238   +          +   2.7724573038604E-6 * H1x2_2  +  -3.3263781208921E-6 * H1x2_3
2544239   +          +     1.90169432265E-8 * H1x2_4  +  -9.7460294571708E-9 * H1x2_5
2544240   +          +  -2.0885179583168E-6 * H1x2_6  +    3.038660449943E-8 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 + -4.9985478923183E-10 * H1x2_1 +
2.7724573038604E-6 * H1x2_2 + -3.3263781208921E-6 * H1x2_3 + 1.90169432265E-8 * H1x2_4 +
-9.7460294571708E-9 * H1x2_5 + -2.0885179583168E-6 * H1x2_6 + 3.038660449943E-8 * H1x2_7 ;
2544241   +   P_DepVar1  =    -2.34500119066237 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.34500119066237 + P_DepVar1 ;
2544242   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2544243   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2544244   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2544245   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2544246   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2544247   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2544248   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2544249   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2544250   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2544251   +END;
MPRINT(EM_DIAGRAM):   END;
2544252   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2544253   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2544254   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2544255   +END;
MPRINT(EM_DIAGRAM):   END;
2544256   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2544257   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2544258   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2544259   +END;
MPRINT(EM_DIAGRAM):   END;
2544260   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2544261   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2544262   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2544263   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2544264   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2544265   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2544266   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2544267   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2544268   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2544269   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2544270   +END;
MPRINT(EM_DIAGRAM):   END;
2544271   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2544272   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2544273   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2544274   +drop
2544275   +H1x1_1
2544276   +H1x1_2
2544277   +H1x1_3
2544278   +H1x1_4
2544279   +H1x1_5
2544280   +H1x1_6
2544281   +H1x1_7
2544282   +H1x2_1
2544283   +H1x2_2
2544284   +H1x2_3
2544285   +H1x2_4
2544286   +H1x2_5
2544287   +H1x2_6
2544288   +H1x2_7
2544289   +;
MPRINT(EM_DIAGRAM):   drop H1x1_1 H1x1_2 H1x1_3 H1x1_4 H1x1_5 H1x1_6 H1x1_7 H1x2_1 H1x2_2
H1x2_3 H1x2_4 H1x2_5 H1x2_6 H1x2_7 ;
2544290   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
2544291   +* Renaming variables for AutoNeural12;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural12;
2544292   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2544293   +* Renaming Posterior variables for AutoNeural12;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural12;
2544294   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2544295   +drop AutoNeural12_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural12_P_DepVar1;
2544296   +AutoNeural12_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural12_P_DepVar1 = P_DepVar1;
2544297   +drop AutoNeural12_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural12_P_DepVar0;
2544298   +AutoNeural12_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural12_P_DepVar0 = P_DepVar0;
2544299   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2544300   +* Renaming _WARN_ variable for AutoNeural12;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural12;
2544301   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2544302   +length AutoNeural12_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural12_WARN_ $4;
2544303   +drop AutoNeural12_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural12_WARN_;
2544304   +AutoNeural12_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural12_WARN_ = _WARN_;
2544305   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2544306   +* TOOL: Ensemble;
MPRINT(EM_DIAGRAM):   * TOOL: Ensemble;
2544307   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
2544308   +* NODE: Ensmbl36;
MPRINT(EM_DIAGRAM):   * NODE: Ensmbl36;
2544309   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2544310   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2544311   +* Ensmbl36: Average Posteriors of 7 models;
MPRINT(EM_DIAGRAM):   * Ensmbl36: Average Posteriors of 7 models;
2544312   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2544313   +P_DepVar1 = (
2544314   +AutoNeural6_P_DepVar1 +
2544315   +AutoNeural7_P_DepVar1 +
2544316   +AutoNeural8_P_DepVar1 +
2544317   +AutoNeural10_P_DepVar1 +
2544318   +AutoNeural9_P_DepVar1 +
2544319   +AutoNeural11_P_DepVar1 +
2544320   +AutoNeural12_P_DepVar1
2544321   +)/7;
MPRINT(EM_DIAGRAM):   P_DepVar1 = ( AutoNeural6_P_DepVar1 + AutoNeural7_P_DepVar1 +
AutoNeural8_P_DepVar1 + AutoNeural10_P_DepVar1 + AutoNeural9_P_DepVar1 +
AutoNeural11_P_DepVar1 + AutoNeural12_P_DepVar1 )/7;
2544322   +P_DepVar0 = (
2544323   +AutoNeural6_P_DepVar0 +
2544324   +AutoNeural7_P_DepVar0 +
2544325   +AutoNeural8_P_DepVar0 +
2544326   +AutoNeural10_P_DepVar0 +
2544327   +AutoNeural9_P_DepVar0 +
2544328   +AutoNeural11_P_DepVar0 +
2544329   +AutoNeural12_P_DepVar0
2544330   +)/7;
MPRINT(EM_DIAGRAM):   P_DepVar0 = ( AutoNeural6_P_DepVar0 + AutoNeural7_P_DepVar0 +
AutoNeural8_P_DepVar0 + AutoNeural10_P_DepVar0 + AutoNeural9_P_DepVar0 +
AutoNeural11_P_DepVar0 + AutoNeural12_P_DepVar0 )/7;
2544331   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2544332   +* Ensmbl36: Computing Classification Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl36: Computing Classification Vars;
2544333   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2544334   +length I_DepVar $32;
MPRINT(EM_DIAGRAM):   length I_DepVar $32;
2544335   +label I_DepVar = 'Into: DepVar';
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar';
2544336   +length _format $200;
MPRINT(EM_DIAGRAM):   length _format $200;
2544337   +drop _format;
MPRINT(EM_DIAGRAM):   drop _format;
2544338   +_format= ' ';
MPRINT(EM_DIAGRAM):   _format= ' ';
2544339   +_p_= 0;
MPRINT(EM_DIAGRAM):   _p_= 0;
2544340   +drop _p_;
MPRINT(EM_DIAGRAM):   drop _p_;
2544341   +if P_DepVar1 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar1 > _p_ then do;
2544342   +_p_= P_DepVar1;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar1;
2544343   +_format= '1';
MPRINT(EM_DIAGRAM):   _format= '1';
2544344   +end;
MPRINT(EM_DIAGRAM):   end;
2544345   +if P_DepVar0 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar0 > _p_ then do;
2544346   +_p_= P_DepVar0;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar0;
2544347   +_format= '0';
MPRINT(EM_DIAGRAM):   _format= '0';
2544348   +end;
MPRINT(EM_DIAGRAM):   end;
2544349   +%DMNORMCP(_format,I_DepVar);
MPRINT(DMNORMCP):   I_DepVar=dmnorm(_format,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2544350   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2544351   +* Ensmbl36: Producing Unformatted variable;
MPRINT(EM_DIAGRAM):   * Ensmbl36: Producing Unformatted variable;
2544352   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2544353   +label U_DepVar = "Unnormalized Into: DepVar";
MPRINT(EM_DIAGRAM):   label U_DepVar = "Unnormalized Into: DepVar";
2544354   +if I_DepVar = '1' then U_DepVar = 1;
MPRINT(EM_DIAGRAM):   if I_DepVar = '1' then U_DepVar = 1;
2544355   +else
2544356   +if I_DepVar = '0' then U_DepVar = 0;
MPRINT(EM_DIAGRAM):   else if I_DepVar = '0' then U_DepVar = 0;
2544357   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2544358   +* Ensmbl36: Computing _WARN_ Variable;
MPRINT(EM_DIAGRAM):   * Ensmbl36: Computing _WARN_ Variable;
2544359   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2544360   +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
2544361   +label _WARN_ = 'Warnings';
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings';
2544362   +_WARN_ = '';
MPRINT(EM_DIAGRAM):   _WARN_ = '';
2544363   +if index(AUTONEURAL6_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
2544363  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL6_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
2544364   +if index(AUTONEURAL6_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
2544364  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL6_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
2544365   +if index(AUTONEURAL6_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
2544365  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL6_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
2544366   +if index(AUTONEURAL6_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
2544366  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL6_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
2544367   +if index(AUTONEURAL7_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
2544367  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL7_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
2544368   +if index(AUTONEURAL7_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
2544368  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL7_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
2544369   +if index(AUTONEURAL7_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
2544369  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL7_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
2544370   +if index(AUTONEURAL7_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
2544370  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL7_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
2544371   +if index(AUTONEURAL8_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
2544371  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL8_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
2544372   +if index(AUTONEURAL8_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
2544372  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL8_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
2544373   +if index(AUTONEURAL8_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
2544373  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL8_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
2544374   +if index(AUTONEURAL8_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
2544374  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL8_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
2544375   +if index(AUTONEURAL10_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
2544375  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL10_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
2544376   +if index(AUTONEURAL10_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
2544376  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL10_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
2544377   +if index(AUTONEURAL10_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
2544377  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL10_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
2544378   +if index(AUTONEURAL10_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
2544378  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL10_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
2544379   +if index(AUTONEURAL9_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
2544379  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL9_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
2544380   +if index(AUTONEURAL9_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
2544380  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL9_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
2544381   +if index(AUTONEURAL9_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
2544381  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL9_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
2544382   +if index(AUTONEURAL9_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
2544382  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL9_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
2544383   +if index(AUTONEURAL11_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
2544383  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL11_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
2544384   +if index(AUTONEURAL11_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
2544384  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL11_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
2544385   +if index(AUTONEURAL11_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
2544385  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL11_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
2544386   +if index(AUTONEURAL11_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
2544386  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL11_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
2544387   +if index(AUTONEURAL12_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
2544387  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL12_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
2544388   +if index(AUTONEURAL12_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
2544388  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL12_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
2544389   +if index(AUTONEURAL12_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
2544389  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL12_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
2544390   +if index(AUTONEURAL12_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
2544390  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL12_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
2544391   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2544392   +* TOOL: Score Node;
MPRINT(EM_DIAGRAM):   * TOOL: Score Node;
2544393   +* TYPE: ASSESS;
MPRINT(EM_DIAGRAM):   * TYPE: ASSESS;
2544394   +* NODE: Score;
MPRINT(EM_DIAGRAM):   * NODE: Score;
2544395   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2544396   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2544397   +* Score: Creating Fixed Names;
MPRINT(EM_DIAGRAM):   * Score: Creating Fixed Names;
2544398   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2544399   +LABEL EM_EVENTPROBABILITY = 'Probability for level 1 of DepVar';
MPRINT(EM_DIAGRAM):   LABEL EM_EVENTPROBABILITY = 'Probability for level 1 of DepVar';
2544400   +EM_EVENTPROBABILITY = P_DepVar1;
MPRINT(EM_DIAGRAM):   EM_EVENTPROBABILITY = P_DepVar1;
2544401   +LABEL EM_PROBABILITY = 'Probability of Classification';
MPRINT(EM_DIAGRAM):   LABEL EM_PROBABILITY = 'Probability of Classification';
2544402   +EM_PROBABILITY =
2544403   +max(
2544404   +P_DepVar1
2544405   +,
2544406   +P_DepVar0
2544407   +);
MPRINT(EM_DIAGRAM):   EM_PROBABILITY = max( P_DepVar1 , P_DepVar0 );
2544408   +LENGTH EM_CLASSIFICATION $%dmnorlen;
MPRINT(EM_DIAGRAM):   LENGTH EM_CLASSIFICATION
MPRINT(DMNORLEN):   $32
MPRINT(EM_DIAGRAM):  ;
2544409   +LABEL EM_CLASSIFICATION = "Prediction for DepVar";
MPRINT(EM_DIAGRAM):   LABEL EM_CLASSIFICATION = "Prediction for DepVar";
2544410   +EM_CLASSIFICATION = I_DepVar;
MPRINT(EM_DIAGRAM):   EM_CLASSIFICATION = I_DepVar;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):   options validvarname=V7;
MPRINT(EM_DIAGRAM):   filename _pref;
MPRINT(EM_DIAGRAM):   data _temp;
MPRINT(EM_DIAGRAM):   set _temp;
MPRINT(EM_DIAGRAM):   length UNAME $32;
MPRINT(EM_DIAGRAM):   UNAME = upcase(RHS);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp(keep=UNAME) NODUPKEY;
MPRINT(EM_DIAGRAM):   by UNAME;
MPRINT(EM_DIAGRAM):   run;
2544423    %let validvarany = 0;
2544424    data _temp2;
MPRINT(EM_DIAGRAM):    data _temp2;
2544425    set EMWS8.Score_EMINPUTVARS;
MPRINT(EM_DIAGRAM):   set EMWS8.Score_EMINPUTVARS;
2544426    length UNAME $32;
MPRINT(EM_DIAGRAM):   length UNAME $32;
2544427    UNAME = upcase(NAME);
MPRINT(EM_DIAGRAM):   UNAME = upcase(NAME);
2544428    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set EMWS8.SCORE_EMINPUTVARS.
NOTE: The data set WORK._TEMP2 has 34 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2544429    proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
2544430    by UNAME;
MPRINT(EM_DIAGRAM):   by UNAME;
2544431    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 8 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2544432    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2544433    merge _temp2(in=_a) _temp(in=_b);
MPRINT(EM_DIAGRAM):   merge _temp2(in=_a) _temp(in=_b);
2544434    by UNAME;
MPRINT(EM_DIAGRAM):   by UNAME;
2544435    drop UNAME;
MPRINT(EM_DIAGRAM):   drop UNAME;
2544436    length SCOREVAR $1;
MPRINT(EM_DIAGRAM):   length SCOREVAR $1;
2544437    label SCOREVAR = "%sysfunc(sasmsg(sashelp.dmine, rpt_scoreVar_vlabel,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label SCOREVAR = "Used in Score Code";
2544438    SCOREVAR='Y';
MPRINT(EM_DIAGRAM):   SCOREVAR='Y';
2544439    if ROLE='TARGET' then SCOREVAR='N';
MPRINT(EM_DIAGRAM):   if ROLE='TARGET' then SCOREVAR='N';
2544440    else if UNAME=:"EM_" then SCOREVAR='N';
MPRINT(EM_DIAGRAM):   else if UNAME=:"EM_" then SCOREVAR='N';
2544441    if (_a and _b) or ROLE='TARGET' then do;
MPRINT(EM_DIAGRAM):   if (_a and _b) or ROLE='TARGET' then do;
2544442    if notname(trim(UNAME)) or kcount(UNAME) then do;
MPRINT(EM_DIAGRAM):   if notname(trim(UNAME)) or kcount(UNAME) then do;
2544443    call symput('validvarany', '1');
MPRINT(EM_DIAGRAM):   call symput('validvarany', '1');
2544444    end;
MPRINT(EM_DIAGRAM):   end;
2544445    output;
MPRINT(EM_DIAGRAM):   output;
2544446    end;
MPRINT(EM_DIAGRAM):   end;
2544447    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: There were 152 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP2 has 26 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2544448    proc sort data=_temp2 out=EMWS8.Score_EMINPUTVARS;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2 out=EMWS8.Score_EMINPUTVARS;
2544449    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2544450    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set EMWS8.SCORE_EMINPUTVARS has 26 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Score: Determine output variables meta;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   options validvarname=ANY;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.FIMPORT_DATA noprint out=_originalvar;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _drpvvn "C:\Users\LUKASF~1\AppData\Local\Temp\SAS Temporary
Files\_TD10172_WN7LF-LEAVE_\Prc2\DROPVVN.sas";
MPRINT(EM_DIAGRAM):   data _originalvar;
MPRINT(EM_DIAGRAM):   file _drpvvn;
MPRINT(EM_DIAGRAM):   set _originalvar end=eof;
MPRINT(EM_DIAGRAM):   length string $200;
MPRINT(EM_DIAGRAM):   if _N_=1 then put 'drop ';
MPRINT(EM_DIAGRAM):   if notname(trim(NAME)) or kcount(NAME) or ktrim(substr(NAME, 1, 1))
in('1','2','3','4','5','6','7','8','9','0') then do;
MPRINT(EM_DIAGRAM):   string = "'"!!tranwrd(trim(NAME), "'", "''")!!"'n";
MPRINT(EM_DIAGRAM):   put string;
MPRINT(EM_DIAGRAM):   call symput('_vvnflag', '1');
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else output;
MPRINT(EM_DIAGRAM):   if eof then put ';';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _drpfrf "C:\Users\LUKASF~1\AppData\Local\Temp\SAS Temporary
Files\_TD10172_WN7LF-LEAVE_\Prc2\DROPINPUT.sas";
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   file _drpfrf;
MPRINT(EM_DIAGRAM):   set _originalvar end=eof;
MPRINT(EM_DIAGRAM):   length string $200;
MPRINT(EM_DIAGRAM):   if _N_=1 then put 'drop ';
MPRINT(EM_DIAGRAM):   string = "'"!!tranwrd(trim(NAME), "'", "''")!!"'n";
MPRINT(EM_DIAGRAM):   put string;
MPRINT(EM_DIAGRAM):   if eof then put ';';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   dsid = open('EMWS8.FIMPORT_DATA');
MPRINT(EM_DIAGRAM):   if dsid then do;
MPRINT(EM_DIAGRAM):   call symput('_inputEngine', attrc(dsid, 'ENGINE'));
MPRINT(EM_DIAGRAM):   dsid = close(dsid);
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS8.Score_EMOUTPUTVARS;
MPRINT(EM_DIAGRAM):   set EMWS8.FIMPORT_DATA;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * EM SCORE CODE;
MPRINT(EM_DIAGRAM):   * EM Version: 12.1;
MPRINT(EM_DIAGRAM):   * SAS Release: 9.03.01M2P081512;
MPRINT(EM_DIAGRAM):   * Host: WN7LF-Leave;
MPRINT(EM_DIAGRAM):   * Encoding: wlatin1;
MPRINT(EM_DIAGRAM):   * Locale: de_DE;
MPRINT(EM_DIAGRAM):   * Project Path: C:\;
MPRINT(EM_DIAGRAM):   * Project Name: predictive-models-project;
MPRINT(EM_DIAGRAM):   * Diagram Id: EMWS8;
MPRINT(EM_DIAGRAM):   * Diagram Name: Predictive Models;
MPRINT(EM_DIAGRAM):   * Generated by: Lukas Fahr;
MPRINT(EM_DIAGRAM):   * Date: 20APR2016:17:40:41;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TOOL: Ensemble;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * NODE: Ensmbl36;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TOOL: Extension Class;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * NODE: FIMPORT;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TOOL: Statistics Exploration;
MPRINT(EM_DIAGRAM):   * TYPE: EXPLORE;
MPRINT(EM_DIAGRAM):   * NODE: Stat;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TOOL: Filtering;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * NODE: Filter;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * NODE: EMCODE4;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TOOL: Transform;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * NODE: Trans;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   HigherEducationBinary = HigherEducation;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer = int((today()-Dt_Customer)/12);
MPRINT(EM_DIAGRAM):   NumDistPurchases = NumCatalogPurchases + NumWebPurchases;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TOOL: Partition Class;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * NODE: Part;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TOOL: Metadata Node;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * NODE: Meta;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural6;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   ***********************************;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   ***********************************;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x3_1 = 'Hidden: H1x3_=1' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   Complain0 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   Complain0 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 *
MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 *
MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.00800383076247 * S_AcceptedCmpTotal + 0.02761302021586 *
S_Age + 0.10595191274027 * S_Frq + -0.15720275096991 * S_Income + 0.14522420813528 * S_Kidhome
+ -0.14485367197729 * S_Mnt + 0.10029542464177 * S_MntFishProducts + 0.0126489883955 *
S_MntFruits + -0.01721251339827 * S_MntGoldProds + -0.69008250574088 * S_MntMeatProducts +
0.01018204164797 * S_MntSweetProducts + 0.22039448854688 * S_MntWines + 0.01531819489128 *
S_MonthsAsCustomer + -0.23161250514854 * S_NumCatalogPurchases + -0.20127545393212 *
S_NumDealsPurchases + 0.04506333103933 * S_NumDistPurchases + 0.35249458492371 *
S_NumStorePurchases + 0.25004284340707 * S_NumWebPurchases + -0.53727251220752 *
S_NumWebVisitsMonth + -0.05439428653958 * S_RFMstat + 0.36751560031492 * S_RMntFrq +
0.5373510847225 * S_Recency + 0.08757258535387 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.21204360154837 * AcceptedCmp10 + 0.20766091429217 *
AcceptedCmp20 + 0.20201307074488 * AcceptedCmp30 + 0.26898383850722 * AcceptedCmp40 +
0.55154220854739 * AcceptedCmp50 + 0.13147328871299 * Complain0 + -0.02797177954188 *
HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.00959805163736 * Education2n_Cycle +
0.37192717803938 * EducationBasic + -0.10342362068485 * EducationGraduation +
-0.13377682721092 * EducationMaster + -0.19452359839974 * Marital_StatusDivorced +
0.32327870805716 * Marital_StatusMarried + -0.20770545592268 * Marital_StatusSingle +
0.35618773017298 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.87012150629431 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(MIN(-0.5 * H1x1_1 **2, _EXP_BAR));
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.92357456692651 * S_AcceptedCmpTotal + -0.00516549264504 *
S_Age + -1.03043789382359 * S_Frq + 0.78555631441048 * S_Income + -1.36329797235747 *
S_Kidhome + -0.77229288487872 * S_Mnt + 1.27281095482218 * S_MntFishProducts +
0.04568599055132 * S_MntFruits + -0.13434867195633 * S_MntGoldProds + -1.95682488683295 *
S_MntMeatProducts + -0.0253141337078 * S_MntSweetProducts + 0.67857436596482 * S_MntWines +
-0.07247572940845 * S_MonthsAsCustomer + -1.02814758425435 * S_NumCatalogPurchases +
-0.02120959778153 * S_NumDealsPurchases + 1.49013956394863 * S_NumDistPurchases +
-0.96806240220463 * S_NumStorePurchases + -1.68330472453558 * S_NumWebPurchases +
3.42976128164256 * S_NumWebVisitsMonth + -0.38912520446503 * S_RFMstat + -2.57487899031042 *
S_RMntFrq + -3.14923215912621 * S_Recency + -0.67635091810974 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.18835638765595 * AcceptedCmp10 + 1.28752081945681 *
AcceptedCmp20 + -0.5515893923669 * AcceptedCmp30 + -0.82440763600043 * AcceptedCmp40 +
1.94503109075872 * AcceptedCmp50 + -0.75977722298402 * Complain0 + -1.11349075129464 *
HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 1.79843117215153 * Education2n_Cycle +
-1.50428649925314 * EducationBasic + -0.32238897768725 * EducationGraduation +
-0.16909007224958 * EducationMaster + 1.9815992681602 * Marital_StatusDivorced +
-3.07893181570848 * Marital_StatusMarried + 1.72965298244219 * Marital_StatusSingle +
-3.17208781997524 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.54729406730223 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   _EPS = SQRT(CONSTANT('MACEPS')) ;
MPRINT(EM_DIAGRAM):   _REC_EPS = 1/_EPS ;
MPRINT(EM_DIAGRAM):   DROP _REC_EPS _EPS ;
MPRINT(EM_DIAGRAM):   IF H1x2_1 < _REC_EPS AND H1x2_1 > - _REC_EPS THEN H1x2_1 = H1x2_1 *
H1x2_1 ;
MPRINT(EM_DIAGRAM):   ELSE H1x2_1 = _REC_EPS ;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x3_ ;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   H1x3_1 = 0.90092602642364 * S_AcceptedCmpTotal + -0.16291307307626 *
S_Age + -0.40132431666712 * S_Frq + -0.77251140598484 * S_Income + 0.02215214313934 *
S_Kidhome + 0.13123074182657 * S_Mnt + -0.43664076061176 * S_MntFishProducts +
-1.64192761266072 * S_MntFruits + -1.54189230184745 * S_MntGoldProds + -0.4138869968665 *
S_MntMeatProducts + 0.5773885392047 * S_MntSweetProducts + 1.45077769194851 * S_MntWines +
0.5855746168529 * S_MonthsAsCustomer + 0.10198319985004 * S_NumCatalogPurchases +
-0.5334151509863 * S_NumDealsPurchases + 0.40600458912114 * S_NumDistPurchases +
-0.30674653528261 * S_NumStorePurchases + 0.10785037433743 * S_NumWebPurchases +
0.99701680073452 * S_NumWebVisitsMonth + -0.25371895811899 * S_RFMstat + 2.19406614746442 *
S_RMntFrq + 1.0786726340694 * S_Recency + 0.64406049150007 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + -0.58424742605644 * AcceptedCmp10 + -0.7436165858459 *
AcceptedCmp20 + -0.33959137246457 * AcceptedCmp30 + 0.42726020731333 * AcceptedCmp40 +
2.23707409189181 * AcceptedCmp50 + 0.98135772482722 * Complain0 + -0.85818399669867 *
HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + -0.89540752048995 * Education2n_Cycle +
1.29513448243349 * EducationBasic + -1.47068621785539 * EducationGraduation +
-1.63362973413899 * EducationMaster + -0.72494401881341 * Marital_StatusDivorced +
-0.82332231639631 * Marital_StatusMarried + -0.8863559011195 * Marital_StatusSingle +
0.97129982315045 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 0.55234573720932 + H1x3_1 ;
MPRINT(EM_DIAGRAM):   _EPS = SQRT(CONSTANT('MACEPS')) ;
MPRINT(EM_DIAGRAM):   _REC_EPS = 1/_EPS ;
MPRINT(EM_DIAGRAM):   DROP _REC_EPS _EPS ;
MPRINT(EM_DIAGRAM):   IF H1x3_1 < _REC_EPS AND H1x3_1 > - _REC_EPS THEN H1x3_1 = H1x3_1 *
H1x3_1 ;
MPRINT(EM_DIAGRAM):   ELSE H1x3_1 = _REC_EPS ;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   H1x3_1 = .;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 35.4482526843154 * H1x1_1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 + -0.08810161142704 * H1x2_1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 + 0.02248060710303 * H1x3_1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -6.23004657634651 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ********************************;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   ********************************;
MPRINT(EM_DIAGRAM):   drop H1x1_1 H1x2_1 H1x3_1 ;
MPRINT(EM_DIAGRAM):   drop S_:;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural6;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural6;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   drop AutoNeural6_P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural6_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural6_P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural6_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural6;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   length AutoNeural6_WARN_ $4;
MPRINT(EM_DIAGRAM):   drop AutoNeural6_WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural6_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TOOL: Extension Class;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * NODE: FIMPORT;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TOOL: Statistics Exploration;
MPRINT(EM_DIAGRAM):   * TYPE: EXPLORE;
MPRINT(EM_DIAGRAM):   * NODE: Stat;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TOOL: Filtering;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * NODE: Filter;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * NODE: EMCODE4;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TOOL: Transform;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * NODE: Trans;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TOOL: Partition Class;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * NODE: Part;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TOOL: Metadata Node;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * NODE: Meta;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural7;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   ***********************************;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   ***********************************;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x3_1 = 'Hidden: H1x3_=1' ;
MPRINT(EM_DIAGRAM):   label H1x3_2 = 'Hidden: H1x3_=2' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   Complain0 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   Complain0 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 *
MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 *
MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.26454269681311 * S_AcceptedCmpTotal + -0.01281904987956 *
S_Age + -0.19309516267581 * S_Frq + -0.19077579202378 * S_Income + 0.1806651018562 * S_Kidhome
+ -0.31002612826472 * S_Mnt + -0.05901796512011 * S_MntFishProducts + -0.03760930101165 *
S_MntFruits + 0.01720900715043 * S_MntGoldProds + 0.21472292961422 * S_MntMeatProducts +
-0.02880706568684 * S_MntSweetProducts + -0.37993583170844 * S_MntWines + -0.00848444156361 *
S_MonthsAsCustomer + 0.15939611818942 * S_NumCatalogPurchases + 0.08390531145773 *
S_NumDealsPurchases + -0.29505970645775 * S_NumDistPurchases + -0.13820571170194 *
S_NumStorePurchases + 0.11468011313368 * S_NumWebPurchases + -0.18421241371843 *
S_NumWebVisitsMonth + 0.11564064971509 * S_RFMstat + -0.02223928001432 * S_RMntFrq +
0.18022777532589 * S_Recency + 0.14654831145379 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.27055972468014 * S_AcceptedCmpTotal + 0.0025862891193 * S_Age
+ -0.07147307366817 * S_Frq + 0.1883776136263 * S_Income + -0.12712510891181 * S_Kidhome +
-0.42099927948686 * S_Mnt + -0.07047631817862 * S_MntFishProducts + -0.06658475152878 *
S_MntFruits + 0.01943025682869 * S_MntGoldProds + 0.29481794109465 * S_MntMeatProducts +
-0.06573502094591 * S_MntSweetProducts + -0.46266722725002 * S_MntWines + -0.00472333181469 *
S_MonthsAsCustomer + 0.35081452017576 * S_NumCatalogPurchases + 0.18009076035363 *
S_NumDealsPurchases + 0.03853861006587 * S_NumDistPurchases + -0.05118063952874 *
S_NumStorePurchases + -0.03282286120473 * S_NumWebPurchases + 0.31160900419026 *
S_NumWebVisitsMonth + 0.08027884378429 * S_RFMstat + 0.39057239541393 * S_RMntFrq +
-0.34796767111274 * S_Recency + -0.12099758522271 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.12539246465239 * AcceptedCmp10 + 0.38473652869745 *
AcceptedCmp20 + 0.29820983391886 * AcceptedCmp30 + 0.29085092779792 * AcceptedCmp40 +
0.18918195914981 * AcceptedCmp50 + -0.26812516781697 * Complain0 + -0.08804110897148 *
HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.02312897825565 * AcceptedCmp10 + 0.03909481703523 *
AcceptedCmp20 + 0.02531081539721 * AcceptedCmp30 + 0.03109641300151 * AcceptedCmp40 +
0.01985718189621 * AcceptedCmp50 + 0.13425456375085 * Complain0 + -0.08222486590117 *
HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.01975862863669 * Education2n_Cycle +
0.14654730697956 * EducationBasic + -0.00459515646452 * EducationGraduation + 0.01586948449127
* EducationMaster + -0.04750981393889 * Marital_StatusDivorced + 0.28216925676677 *
Marital_StatusMarried + -0.20757827413964 * Marital_StatusSingle + 0.22622509024122 *
Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.12009608969049 * Education2n_Cycle +
0.01793460710056 * EducationBasic + -0.04257710051346 * EducationGraduation +
-0.06975725710115 * EducationMaster + 0.05981919620577 * Marital_StatusDivorced +
-0.17161573846062 * Marital_StatusMarried + 0.15869440681091 * Marital_StatusSingle +
-0.13282372850158 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.87962277715971 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.62570339696782 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = SIN(H1x1_1 );
MPRINT(EM_DIAGRAM):   H1x1_2 = SIN(H1x1_2 );
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.1719390672121 * S_AcceptedCmpTotal + 0.23586839288361 * S_Age
+ -1.85384134180372 * S_Frq + -0.43561758063577 * S_Income + -2.5581498901473 * S_Kidhome +
1.7031888248428 * S_Mnt + 0.84982621124736 * S_MntFishProducts + 0.25990173458485 *
S_MntFruits + -2.80730469703961 * S_MntGoldProds + 0.64923500711702 * S_MntMeatProducts +
0.27458645458502 * S_MntSweetProducts + -0.47723589182372 * S_MntWines + -0.66777488145507 *
S_MonthsAsCustomer + -0.46364414558282 * S_NumCatalogPurchases + 0.00741910846933 *
S_NumDealsPurchases + 1.334289252268 * S_NumDistPurchases + -0.29851567180932 *
S_NumStorePurchases + -0.52115313259666 * S_NumWebPurchases + 0.93907168501909 *
S_NumWebVisitsMonth + -0.26126881318451 * S_RFMstat + -1.3003763542929 * S_RMntFrq +
-0.12807368149309 * S_Recency + -0.21296116974623 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 0.30897763700303 * S_AcceptedCmpTotal + -0.77727886396317 *
S_Age + -0.79298582494973 * S_Frq + -1.73199353738093 * S_Income + 1.12984956989288 *
S_Kidhome + -1.36701096993984 * S_Mnt + -0.21063950702424 * S_MntFishProducts +
-0.20027336686257 * S_MntFruits + -0.06955810418489 * S_MntGoldProds + 0.16672767423533 *
S_MntMeatProducts + -1.56675269740541 * S_MntSweetProducts + 1.85366479127485 * S_MntWines +
-0.58178621903094 * S_MonthsAsCustomer + 1.31024619253935 * S_NumCatalogPurchases +
1.60427001186844 * S_NumDealsPurchases + -0.18447618033353 * S_NumDistPurchases +
-1.29966073003539 * S_NumStorePurchases + -1.12373457341536 * S_NumWebPurchases +
1.46099221440494 * S_NumWebVisitsMonth + 0.17795038564406 * S_RFMstat + -0.82372068140832 *
S_RMntFrq + 0.4480370534729 * S_Recency + 0.19272737691538 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.6569942252053 * AcceptedCmp10 + -0.89152555599538 *
AcceptedCmp20 + 1.00488730476017 * AcceptedCmp30 + 0.34286042692068 * AcceptedCmp40 +
-1.19198820362508 * AcceptedCmp50 + -0.86571531914686 * Complain0 + 0.14303136037365 *
HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 1.79481763784518 * AcceptedCmp10 + -2.85912280013336 *
AcceptedCmp20 + 0.16890012708431 * AcceptedCmp30 + 0.94639083182751 * AcceptedCmp40 +
-0.62141828005946 * AcceptedCmp50 + -0.39098882491277 * Complain0 + 0.85700787946581 *
HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 0.0737054452993 * Education2n_Cycle + 0.362372261752 *
EducationBasic + -1.485941295677 * EducationGraduation + -0.81257694655594 * EducationMaster +
0.59819559998538 * Marital_StatusDivorced + 0.92957772553633 * Marital_StatusMarried +
-1.11796266958894 * Marital_StatusSingle + -2.0576132087002 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -1.10016528859962 * Education2n_Cycle +
-1.46816646165468 * EducationBasic + -0.11241499152788 * EducationGraduation +
-0.65110715251273 * EducationMaster + 1.0870909562212 * Marital_StatusDivorced +
1.50333961797515 * Marital_StatusMarried + -1.41407780765932 * Marital_StatusSingle +
-0.52528072358697 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.46376024534028 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -0.21341526379366 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   H1x2_1 = EXP(MIN(-0.5 * H1x2_1 **2, _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x2_2 = EXP(MIN(-0.5 * H1x2_2 **2, _EXP_BAR));
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x3_ ;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   H1x3_1 = 0.29299707972123 * S_AcceptedCmpTotal + 1.39797329466471 *
S_Age + -2.02673480388837 * S_Frq + -1.09682777516542 * S_Income + -1.22241109888643 *
S_Kidhome + -1.35766076466324 * S_Mnt + -2.90812690982576 * S_MntFishProducts +
-0.48174923069843 * S_MntFruits + 1.57335575145195 * S_MntGoldProds + -0.55248873552176 *
S_MntMeatProducts + 0.54536808091745 * S_MntSweetProducts + -0.41516162035296 * S_MntWines +
0.07715050596116 * S_MonthsAsCustomer + -2.18785324142159 * S_NumCatalogPurchases +
-1.1174504455343 * S_NumDealsPurchases + -0.18561253113498 * S_NumDistPurchases +
-0.35231054612792 * S_NumStorePurchases + 0.9249490354172 * S_NumWebPurchases +
-0.79868535147175 * S_NumWebVisitsMonth + -0.17158151681124 * S_RFMstat + -0.9870286843901 *
S_RMntFrq + 0.62439123699986 * S_Recency + -0.45845377794308 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_2 = -1.07483179793421 * S_AcceptedCmpTotal + 1.03558600048684 *
S_Age + 1.11497695424161 * S_Frq + 0.27297296926116 * S_Income + 0.77036019999023 * S_Kidhome
+ 0.02567848304605 * S_Mnt + 0.38661977628442 * S_MntFishProducts + -0.36751750771945 *
S_MntFruits + 0.93924107558212 * S_MntGoldProds + 0.93046859422523 * S_MntMeatProducts +
-0.46124679979068 * S_MntSweetProducts + -0.45348234529786 * S_MntWines + 1.60057890623864 *
S_MonthsAsCustomer + -1.74657448073162 * S_NumCatalogPurchases + 1.05434863590054 *
S_NumDealsPurchases + -0.73255174632068 * S_NumDistPurchases + 0.53949953455044 *
S_NumStorePurchases + -0.61709467816649 * S_NumWebPurchases + 1.36235282484348 *
S_NumWebVisitsMonth + -0.0352720913953 * S_RFMstat + 0.14001475375682 * S_RMntFrq +
-0.24276831608869 * S_Recency + 0.09762798365722 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + -0.94208577947628 * AcceptedCmp10 + -0.5233017415423 *
AcceptedCmp20 + -0.76900164563331 * AcceptedCmp30 + -0.79512141055877 * AcceptedCmp40 +
0.20126599116957 * AcceptedCmp50 + -0.43046555689873 * Complain0 + 0.31565229685815 *
HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 + -1.24961064002454 * AcceptedCmp10 + -0.89859693224833
* AcceptedCmp20 + 1.15884958881232 * AcceptedCmp30 + 0.38250389164472 * AcceptedCmp40 +
0.47123004358879 * AcceptedCmp50 + -2.1232679844098 * Complain0 + 0.97226091069674 *
HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + -0.07500306665919 * Education2n_Cycle +
0.04122924311058 * EducationBasic + -0.49410102102951 * EducationGraduation +
-0.45477734340809 * EducationMaster + 0.22253248036322 * Marital_StatusDivorced +
-1.72455332745001 * Marital_StatusMarried + 0.57787272107232 * Marital_StatusSingle +
0.16267074825086 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 + -0.21560233542581 * Education2n_Cycle +
-0.36476815429069 * EducationBasic + 1.63334881201349 * EducationGraduation +
-1.12620982139344 * EducationMaster + 0.14637124403046 * Marital_StatusDivorced +
0.18905186437528 * Marital_StatusMarried + 0.00511958458521 * Marital_StatusSingle +
-0.915980703129 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 0.54853846322055 + H1x3_1 ;
MPRINT(EM_DIAGRAM):   H1x3_2 = 1.36395858099198 + H1x3_2 ;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   H1x3_1 = EXP(MIN(H1x3_1 , _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x3_2 = EXP(MIN(H1x3_2 , _EXP_BAR));
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   H1x3_1 = .;
MPRINT(EM_DIAGRAM):   H1x3_2 = .;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -10.6892993503201 * H1x1_1 + 16.2938756734008 * H1x1_2 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 + 1.2332183930826 * H1x2_1 + -0.85206858106106 *
H1x2_2 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 + -0.00087126688031 * H1x3_1 + -0.00025812675645 *
H1x3_2 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 2.20710379818135 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ********************************;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   ********************************;
MPRINT(EM_DIAGRAM):   drop H1x1_1 H1x1_2 H1x2_1 H1x2_2 H1x3_1 H1x3_2 ;
MPRINT(EM_DIAGRAM):   drop S_:;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural7;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural7;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   drop AutoNeural7_P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural7_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural7_P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural7_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural7;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   length AutoNeural7_WARN_ $4;
MPRINT(EM_DIAGRAM):   drop AutoNeural7_WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural7_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TOOL: Extension Class;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * NODE: FIMPORT;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TOOL: Statistics Exploration;
MPRINT(EM_DIAGRAM):   * TYPE: EXPLORE;
MPRINT(EM_DIAGRAM):   * NODE: Stat;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TOOL: Filtering;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * NODE: Filter;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * NODE: EMCODE4;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TOOL: Transform;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * NODE: Trans;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TOOL: Partition Class;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * NODE: Part;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TOOL: Metadata Node;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * NODE: Meta;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural8;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   ***********************************;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   ***********************************;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   Complain0 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   Complain0 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 *
MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 *
MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.2726802048269 * S_AcceptedCmpTotal + -0.02889982967357 *
S_Age + -0.26165770909003 * S_Frq + 0.19140564299867 * S_Income + 0.30244335152969 * S_Kidhome
+ -0.03391217967468 * S_Mnt + -0.99943007809307 * S_MntFishProducts + -0.04374917285968 *
S_MntFruits + -0.13546758294455 * S_MntGoldProds + 3.59922243619013 * S_MntMeatProducts +
-0.10424531322566 * S_MntSweetProducts + -1.98884071414703 * S_MntWines + 0.05310540691138 *
S_MonthsAsCustomer + 0.58072892654416 * S_NumCatalogPurchases + 0.30381426454211 *
S_NumDealsPurchases + 0.39966076372974 * S_NumDistPurchases + -0.58875986801139 *
S_NumStorePurchases + -0.78850031558536 * S_NumWebPurchases + 0.35182997415921 *
S_NumWebVisitsMonth + 1.51048129701176 * S_RFMstat + 1.13354085492775 * S_RMntFrq +
-0.2185811652116 * S_Recency + 0.01153374704027 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.18093166280015 * S_AcceptedCmpTotal + -0.00677564787839 *
S_Age + -0.21510325598577 * S_Frq + 0.26314356814214 * S_Income + -0.30016454601651 *
S_Kidhome + -0.1410547608427 * S_Mnt + -0.04272369939478 * S_MntFishProducts +
-0.05622578678457 * S_MntFruits + 0.04457230545618 * S_MntGoldProds + 0.40709024692944 *
S_MntMeatProducts + -0.02989090770621 * S_MntSweetProducts + -0.18818656503765 * S_MntWines +
-0.06237311646922 * S_MonthsAsCustomer + 0.39737856936198 * S_NumCatalogPurchases +
0.33734772994048 * S_NumDealsPurchases + 0.06152222921422 * S_NumDistPurchases +
-0.32068333792942 * S_NumStorePurchases + -0.26971366415104 * S_NumWebPurchases +
0.57693239481071 * S_NumWebVisitsMonth + 0.01161324864777 * S_RFMstat + 0.00311083015445 *
S_RMntFrq + -0.67669007299893 * S_Recency + -0.2298426154616 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.09356212420726 * S_AcceptedCmpTotal + -0.01904617704654 *
S_Age + -0.15700206132472 * S_Frq + -0.58483226627076 * S_Income + 0.30001673574917 *
S_Kidhome + -0.19921492301896 * S_Mnt + -0.00125986769238 * S_MntFishProducts +
0.10195959942937 * S_MntFruits + 0.0069592628978 * S_MntGoldProds + 0.03606436199308 *
S_MntMeatProducts + 0.11259135359155 * S_MntSweetProducts + 0.05408818612126 * S_MntWines +
-0.14024859528104 * S_MonthsAsCustomer + -0.14071929240584 * S_NumCatalogPurchases +
0.22142792900578 * S_NumDealsPurchases + -0.0291983445755 * S_NumDistPurchases +
-0.1997372957954 * S_NumStorePurchases + -0.01286201468794 * S_NumWebPurchases +
-0.35208468552742 * S_NumWebVisitsMonth + 0.02982651364231 * S_RFMstat + 0.0228316921695 *
S_RMntFrq + 0.3930877517629 * S_Recency + 0.28989829670594 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.03659432989123 * AcceptedCmp10 + -0.12552546530316 *
AcceptedCmp20 + 0.57200428680255 * AcceptedCmp30 + 0.4327465126256 * AcceptedCmp40 +
-1.24484170256212 * AcceptedCmp50 + 0.21604379838869 * Complain0 + -0.14986629245585 *
HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.13542589174402 * AcceptedCmp10 + -0.19116289400292
* AcceptedCmp20 + -0.10302282473135 * AcceptedCmp30 + -0.08705955845916 * AcceptedCmp40 +
-0.17435407626698 * AcceptedCmp50 + -0.09781790399225 * Complain0 + 0.02006296587353 *
HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.08917557424765 * AcceptedCmp10 + -0.00944366858806 *
AcceptedCmp20 + 0.30527409248576 * AcceptedCmp30 + 0.26823019920335 * AcceptedCmp40 +
-0.02131660897576 * AcceptedCmp50 + -0.16243659451446 * Complain0 + -0.28227689084686 *
HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.12998959528304 * Education2n_Cycle +
0.48334684246109 * EducationBasic + -0.07156918649895 * EducationGraduation +
-0.21017720550072 * EducationMaster + -0.22358326722482 * Marital_StatusDivorced +
0.09394210085787 * Marital_StatusMarried + -0.10381546554982 * Marital_StatusSingle +
0.05935260608375 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.02955854298839 * Education2n_Cycle +
-0.13472200519398 * EducationBasic + 0.01930622297518 * EducationGraduation +
-0.00188262361226 * EducationMaster + 0.16606212232833 * Marital_StatusDivorced +
-0.33252488631677 * Marital_StatusMarried + 0.26735237322144 * Marital_StatusSingle +
-0.37056611493683 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.29085314695378 * Education2n_Cycle +
-0.2177077392676 * EducationBasic + -0.12975750226767 * EducationGraduation + 0.12920694427876
* EducationMaster + -0.30275479651076 * Marital_StatusDivorced + 0.50273719874035 *
Marital_StatusMarried + -0.39588303956293 * Marital_StatusSingle + 0.42028863850572 *
Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.91295924572895 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -1.21245226681055 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.01609140135594 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(MIN(-0.5 * H1x1_1 **2, _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(MIN(-0.5 * H1x1_2 **2, _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(MIN(-0.5 * H1x1_3 **2, _EXP_BAR));
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.73632716677259 * S_AcceptedCmpTotal + -1.3452480925823 *
S_Age + -0.77564767519981 * S_Frq + -0.06163854052357 * S_Income + 1.82428003860444 *
S_Kidhome + 0.661412748756 * S_Mnt + 1.8826488743919 * S_MntFishProducts + -0.21815276926728 *
S_MntFruits + 1.06597641654862 * S_MntGoldProds + 0.13887400045643 * S_MntMeatProducts +
-0.62827157985225 * S_MntSweetProducts + 1.70742231056065 * S_MntWines + 0.52403167020638 *
S_MonthsAsCustomer + -2.99889150929209 * S_NumCatalogPurchases + -2.59470529821377 *
S_NumDealsPurchases + 0.7668756449818 * S_NumDistPurchases + 0.61064641547208 *
S_NumStorePurchases + -0.87106335660846 * S_NumWebPurchases + 0.1188879348197 *
S_NumWebVisitsMonth + 0.89319669432194 * S_RFMstat + -0.45272285967 * S_RMntFrq +
-0.7210740986075 * S_Recency + 0.7032117485114 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 0.5405970783297 * S_AcceptedCmpTotal + 0.34103648596436 * S_Age
+ -1.00413619660059 * S_Frq + 0.40958797602392 * S_Income + -0.94731216445533 * S_Kidhome +
-0.17755265939769 * S_Mnt + -0.88926202859892 * S_MntFishProducts + 0.6791087530674 *
S_MntFruits + 1.10836805118307 * S_MntGoldProds + -0.29462180872033 * S_MntMeatProducts +
2.21935054370304 * S_MntSweetProducts + 1.41379847080743 * S_MntWines + -0.66077297246309 *
S_MonthsAsCustomer + 0.91491641336561 * S_NumCatalogPurchases + -0.41834528691349 *
S_NumDealsPurchases + -0.07802605490227 * S_NumDistPurchases + -0.62261476153139 *
S_NumStorePurchases + -0.84011953180231 * S_NumWebPurchases + 0.95169092183885 *
S_NumWebVisitsMonth + 0.4036735448902 * S_RFMstat + 0.44620057959954 * S_RMntFrq +
-0.54980566705324 * S_Recency + -0.48914926560129 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.10056833202616 * S_AcceptedCmpTotal + -3.35021911955911 *
S_Age + -0.47433508394475 * S_Frq + 0.2642483252057 * S_Income + 0.20666167536737 * S_Kidhome
+ -1.63711887449192 * S_Mnt + -0.02078521278323 * S_MntFishProducts + -0.13356020799092 *
S_MntFruits + 0.03199170913357 * S_MntGoldProds + 0.35859745927921 * S_MntMeatProducts +
1.28933517907056 * S_MntSweetProducts + -0.45266889039243 * S_MntWines + -0.03980312418999 *
S_MonthsAsCustomer + 0.11407065408619 * S_NumCatalogPurchases + 1.50811278700924 *
S_NumDealsPurchases + -0.40025710583484 * S_NumDistPurchases + 0.16539197954198 *
S_NumStorePurchases + -1.50803186935431 * S_NumWebPurchases + -0.35788712697704 *
S_NumWebVisitsMonth + -2.06761773527847 * S_RFMstat + -0.00353259675109 * S_RMntFrq +
0.4364156603095 * S_Recency + -0.44689366494665 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 1.19862785990255 * AcceptedCmp10 + -0.56777088839338 *
AcceptedCmp20 + -0.20982687937883 * AcceptedCmp30 + 0.23051157512105 * AcceptedCmp40 +
-1.16625535461103 * AcceptedCmp50 + -0.03987377830172 * Complain0 + -1.17553145310278 *
HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -1.37553391657098 * AcceptedCmp10 + -0.49489986415129
* AcceptedCmp20 + 0.84075258232812 * AcceptedCmp30 + 0.31883526052436 * AcceptedCmp40 +
-0.41245383847025 * AcceptedCmp50 + 0.75603245683628 * Complain0 + -2.07732119239317 *
HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 0.94876862525586 * AcceptedCmp10 + 0.79245605062261 *
AcceptedCmp20 + 1.18614024465163 * AcceptedCmp30 + -0.24348380736895 * AcceptedCmp40 +
0.63374252730038 * AcceptedCmp50 + 0.36777527794452 * Complain0 + -0.07746344015306 *
HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 1.73012058377195 * Education2n_Cycle +
2.12295803973544 * EducationBasic + 0.36945596974292 * EducationGraduation + -1.22675967760612
* EducationMaster + -0.48199299977856 * Marital_StatusDivorced + -1.61546983135535 *
Marital_StatusMarried + 1.25890289649165 * Marital_StatusSingle + -0.35805098686637 *
Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -1.04319773106255 * Education2n_Cycle +
-1.20017517243416 * EducationBasic + -0.21851017334559 * EducationGraduation +
0.54918303984069 * EducationMaster + -0.69719138781358 * Marital_StatusDivorced +
0.26964883367384 * Marital_StatusMarried + 0.4656663467381 * Marital_StatusSingle +
-0.38324848670979 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 0.26572249637491 * Education2n_Cycle +
1.36865822272368 * EducationBasic + 0.26769702437041 * EducationGraduation + -0.57748542336591
* EducationMaster + 1.40407968804704 * Marital_StatusDivorced + -1.35468203106214 *
Marital_StatusMarried + 1.0644996414042 * Marital_StatusSingle + -0.68198832748724 *
Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.72650566457008 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -1.0113179577999 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = 0.14003924400021 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = SIN(H1x2_1 );
MPRINT(EM_DIAGRAM):   H1x2_2 = SIN(H1x2_2 );
MPRINT(EM_DIAGRAM):   H1x2_3 = SIN(H1x2_3 );
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -7.62079794803554 * H1x1_1 + 13.7007341613959 * H1x1_2 +
-6.77882452096978 * H1x1_3 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 + -0.44850093089338 * H1x2_1 + -1.24228597291063 *
H1x2_2 + 1.00075465600952 * H1x2_3 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.26198805619545 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ********************************;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   ********************************;
MPRINT(EM_DIAGRAM):   drop H1x1_1 H1x1_2 H1x1_3 H1x2_1 H1x2_2 H1x2_3 ;
MPRINT(EM_DIAGRAM):   drop S_:;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural8;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural8;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   drop AutoNeural8_P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural8_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural8_P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural8_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural8;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   length AutoNeural8_WARN_ $4;
MPRINT(EM_DIAGRAM):   drop AutoNeural8_WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural8_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TOOL: Extension Class;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * NODE: FIMPORT;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TOOL: Statistics Exploration;
MPRINT(EM_DIAGRAM):   * TYPE: EXPLORE;
MPRINT(EM_DIAGRAM):   * NODE: Stat;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TOOL: Filtering;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * NODE: Filter;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * NODE: EMCODE4;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TOOL: Transform;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * NODE: Trans;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TOOL: Partition Class;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * NODE: Part;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TOOL: Metadata Node;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * NODE: Meta;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural10;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   ***********************************;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   ***********************************;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x3_1 = 'Hidden: H1x3_=1' ;
MPRINT(EM_DIAGRAM):   label H1x3_2 = 'Hidden: H1x3_=2' ;
MPRINT(EM_DIAGRAM):   label H1x3_3 = 'Hidden: H1x3_=3' ;
MPRINT(EM_DIAGRAM):   label H1x3_4 = 'Hidden: H1x3_=4' ;
MPRINT(EM_DIAGRAM):   label H1x3_5 = 'Hidden: H1x3_=5' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   Complain0 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   Complain0 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 *
MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 *
MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   H1x1_1 = -1.5235159368138 * S_AcceptedCmpTotal + 0.13941271308016 *
S_Age + -0.84765157270503 * S_Frq + -0.89386555046676 * S_Income + 1.62709236629244 *
S_Kidhome + -1.21416429819342 * S_Mnt + -1.95640488965637 * S_MntFishProducts +
-0.08621024993404 * S_MntFruits + -0.38536990009586 * S_MntGoldProds + 3.12553097304637 *
S_MntMeatProducts + -2.50680711036653 * S_MntSweetProducts + -3.77770073626477 * S_MntWines +
0.39118206604766 * S_MonthsAsCustomer + 1.80485993754239 * S_NumCatalogPurchases +
3.21215425524619 * S_NumDealsPurchases + 0.08695198777156 * S_NumDistPurchases +
-2.58697971128295 * S_NumStorePurchases + -0.44431924796059 * S_NumWebPurchases +
-1.4492698984921 * S_NumWebVisitsMonth + 2.16652214648037 * S_RFMstat + -0.48027961131639 *
S_RMntFrq + -0.27206877070748 * S_Recency + -0.34774852853763 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.5665707820209 * S_AcceptedCmpTotal + -1.33582859121223 *
S_Age + 0.90483024742522 * S_Frq + -2.00588558815165 * S_Income + 3.0373198083895 * S_Kidhome
+ 0.4356905004225 * S_Mnt + 0.19619626354366 * S_MntFishProducts + -1.09111340184132 *
S_MntFruits + 0.36844676336289 * S_MntGoldProds + -2.23832561375429 * S_MntMeatProducts +
-0.18280081530069 * S_MntSweetProducts + 2.11599309139107 * S_MntWines + 0.68147940490709 *
S_MonthsAsCustomer + -0.73940648599397 * S_NumCatalogPurchases + -0.83844506398484 *
S_NumDealsPurchases + 0.60831936516804 * S_NumDistPurchases + 1.79084087761626 *
S_NumStorePurchases + 1.17119196356453 * S_NumWebPurchases + -3.63586683518718 *
S_NumWebVisitsMonth + 0.60521990735996 * S_RFMstat + 0.56036381019221 * S_RMntFrq +
3.84599118896159 * S_Recency + 2.42091939246471 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -2.34864034635966 * S_AcceptedCmpTotal + 0.38417502023066 *
S_Age + 0.18241442054661 * S_Frq + -0.36643054878492 * S_Income + -0.01464967964014 *
S_Kidhome + 0.13084033882631 * S_Mnt + 1.43066752801424 * S_MntFishProducts + 0.30678881611098
* S_MntFruits + -0.35038082288662 * S_MntGoldProds + -6.79650673935808 * S_MntMeatProducts +
-0.35154740308081 * S_MntSweetProducts + 4.53406963590593 * S_MntWines + 0.35082802515055 *
S_MonthsAsCustomer + -1.62489937965567 * S_NumCatalogPurchases + -0.31484031572628 *
S_NumDealsPurchases + -0.18273941035679 * S_NumDistPurchases + 0.99501789733882 *
S_NumStorePurchases + 1.32014078829379 * S_NumWebPurchases + -1.34393498450215 *
S_NumWebVisitsMonth + -0.93549119966022 * S_RFMstat + -1.74825390192193 * S_RMntFrq +
0.84406941726743 * S_Recency + -0.5004540381333 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.46772023050431 * S_AcceptedCmpTotal + -0.64609651992636 *
S_Age + 0.65433283816167 * S_Frq + 0.97922442633265 * S_Income + -0.37705204232056 * S_Kidhome
+ 0.00937752600299 * S_Mnt + -0.6082843846013 * S_MntFishProducts + -0.6227107898918 *
S_MntFruits + 0.0291421224006 * S_MntGoldProds + 1.09748402313736 * S_MntMeatProducts +
0.00604619863622 * S_MntSweetProducts + -0.74684537570529 * S_MntWines + -0.00266569003481 *
S_MonthsAsCustomer + 2.01081657735872 * S_NumCatalogPurchases + 1.19658719134196 *
S_NumDealsPurchases + 0.87478204472986 * S_NumDistPurchases + -0.20635856288784 *
S_NumStorePurchases + -0.89927356974242 * S_NumWebPurchases + 2.92285244132576 *
S_NumWebVisitsMonth + -0.10913907245142 * S_RFMstat + 1.64233441899256 * S_RMntFrq +
-3.64945971202322 * S_Recency + -1.78841346993558 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -1.22491918863941 * S_AcceptedCmpTotal + 0.16201659993217 *
S_Age + 0.17189537824457 * S_Frq + -0.87922900323563 * S_Income + -0.79268410231108 *
S_Kidhome + 0.62793961676074 * S_Mnt + 0.20877761882787 * S_MntFishProducts + 0.99367872286661
* S_MntFruits + -0.4347564565882 * S_MntGoldProds + -0.16203279329295 * S_MntMeatProducts +
0.81409215344356 * S_MntSweetProducts + 1.33482971563984 * S_MntWines + -1.17441882196058 *
S_MonthsAsCustomer + -1.72330829533107 * S_NumCatalogPurchases + -2.32617124568 *
S_NumDealsPurchases + -0.56589187730672 * S_NumDistPurchases + 1.07062299863482 *
S_NumStorePurchases + 0.30077273739578 * S_NumWebPurchases + -1.67745421915317 *
S_NumWebVisitsMonth + 0.0530074713265 * S_RFMstat + -0.55969729655382 * S_RMntFrq +
1.32196704233234 * S_Recency + 1.05470622089613 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.19875423759582 * AcceptedCmp10 + -1.84163905120352 *
AcceptedCmp20 + -1.63149345314696 * AcceptedCmp30 + -1.52652349127913 * AcceptedCmp40 +
-0.97663634905647 * AcceptedCmp50 + -0.94352222509088 * Complain0 + -0.63297203617355 *
HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.0505791781839 * AcceptedCmp10 + -0.19407965320143 *
AcceptedCmp20 + 0.35537657271506 * AcceptedCmp30 + -0.84577216347728 * AcceptedCmp40 +
1.73085566880686 * AcceptedCmp50 + 0.05800586053869 * Complain0 + -0.62505561129469 *
HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.54825581966403 * AcceptedCmp10 + -0.0966204838125 *
AcceptedCmp20 + -1.31707923763053 * AcceptedCmp30 + -1.21021077486757 * AcceptedCmp40 +
3.29102250037389 * AcceptedCmp50 + -0.16383687725206 * Complain0 + 0.00651446514934 *
HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -1.18573650260336 * AcceptedCmp10 + -1.73968979068234
* AcceptedCmp20 + -1.31277698137778 * AcceptedCmp30 + -1.74346538593922 * AcceptedCmp40 +
-0.72543919818299 * AcceptedCmp50 + -0.06328353200384 * Complain0 + 0.74828735398796 *
HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.19622185523754 * AcceptedCmp10 + -0.4643498903813 *
AcceptedCmp20 + 0.69293644934542 * AcceptedCmp30 + 0.23077838801355 * AcceptedCmp40 +
0.53061813608476 * AcceptedCmp50 + -0.56870999936869 * Complain0 + 0.5917990310858 *
HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 1.01422000032629 * Education2n_Cycle +
-0.77619298826287 * EducationBasic + 0.35633748974614 * EducationGraduation + 0.98491516107588
* EducationMaster + -0.27797737429678 * Marital_StatusDivorced + -0.08137635862327 *
Marital_StatusMarried + 0.06275411820495 * Marital_StatusSingle + -0.19979743343415 *
Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.66224206017124 * Education2n_Cycle +
0.80729589186486 * EducationBasic + 0.75931615755998 * EducationGraduation + -0.05470462753112
* EducationMaster + 0.05151426841441 * Marital_StatusDivorced + 1.19165082030442 *
Marital_StatusMarried + -1.08257080662611 * Marital_StatusSingle + 0.13534863375625 *
Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.20065577451105 * Education2n_Cycle +
-0.14205714608311 * EducationBasic + -0.07077711368393 * EducationGraduation +
0.40262329710793 * EducationMaster + 0.0238206459022 * Marital_StatusDivorced +
-0.4653244204261 * Marital_StatusMarried + 0.13051613619882 * Marital_StatusSingle +
-0.35951366919755 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.8555672630555 * Education2n_Cycle +
0.58439980233621 * EducationBasic + 0.04784356342853 * EducationGraduation + -0.79764992264249
* EducationMaster + -0.7449356409222 * Marital_StatusDivorced + -1.46604673521535 *
Marital_StatusMarried + 0.74484771688818 * Marital_StatusSingle + -1.91273009779071 *
Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.45561096683674 * Education2n_Cycle +
-0.08389156101858 * EducationBasic + -1.24281299616343 * EducationGraduation +
-0.00999807517226 * EducationMaster + -3.68044980584423 * Marital_StatusDivorced +
3.14587407902338 * Marital_StatusMarried + -2.66118132753024 * Marital_StatusSingle +
3.50991640149914 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -2.87464368543529 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.69745433976458 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.71895677211617 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -3.07619671976178 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -1.74345318000473 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_4 = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_5 = 1.0 / (1.0 + EXP(MIN( - H1x1_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.02206354442682 * S_AcceptedCmpTotal + -1.34753268833642 *
S_Age + -2.08377331969695 * S_Frq + -1.39854535380539 * S_Income + 2.13620611759545 *
S_Kidhome + -1.50515365217324 * S_Mnt + 0.85499321862984 * S_MntFishProducts +
-1.17732452790345 * S_MntFruits + 1.52355640622249 * S_MntGoldProds + 1.31854239360457 *
S_MntMeatProducts + -0.03265851293389 * S_MntSweetProducts + 2.18666242847435 * S_MntWines +
0.08246249957908 * S_MonthsAsCustomer + -1.06901902236609 * S_NumCatalogPurchases +
0.89261880438741 * S_NumDealsPurchases + -1.61647413199892 * S_NumDistPurchases +
-0.56304669045195 * S_NumStorePurchases + 0.7766837080945 * S_NumWebPurchases +
-2.2953497398902 * S_NumWebVisitsMonth + -3.34547809243199 * S_RFMstat + 0.07311937799261 *
S_RMntFrq + -0.5786489917247 * S_Recency + -1.06532056361117 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 0.0341880757331 * S_AcceptedCmpTotal + 0.72034771315738 * S_Age
+ 0.64155966340389 * S_Frq + -1.06570008729492 * S_Income + -1.84532938869849 * S_Kidhome +
0.94433555965982 * S_Mnt + 1.23831916074831 * S_MntFishProducts + 1.33415870886475 *
S_MntFruits + -0.51253922893993 * S_MntGoldProds + 0.02241594009025 * S_MntMeatProducts +
-1.2811169586741 * S_MntSweetProducts + 1.96686773881953 * S_MntWines + 1.44655944802715 *
S_MonthsAsCustomer + -1.18627316384798 * S_NumCatalogPurchases + 1.02431289724643 *
S_NumDealsPurchases + -0.90960173637405 * S_NumDistPurchases + 1.24283490404772 *
S_NumStorePurchases + 1.23072413154592 * S_NumWebPurchases + -0.21533378473931 *
S_NumWebVisitsMonth + 1.26438704884008 * S_RFMstat + 0.0014042871018 * S_RMntFrq +
0.32357651423135 * S_Recency + -0.49834512433407 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.57066024275015 * S_AcceptedCmpTotal + 0.16615358153136 *
S_Age + -0.60017461612499 * S_Frq + -0.21195793925019 * S_Income + -0.36049126996499 *
S_Kidhome + 0.97458542661118 * S_Mnt + 0.62279162661518 * S_MntFishProducts +
-0.44715765367363 * S_MntFruits + 0.91519163455361 * S_MntGoldProds + 1.07312113398768 *
S_MntMeatProducts + -1.61967017526055 * S_MntSweetProducts + -1.88327677412185 * S_MntWines +
-1.67067768979245 * S_MonthsAsCustomer + -0.64725516463464 * S_NumCatalogPurchases +
-0.26249596122198 * S_NumDealsPurchases + -0.63328519804758 * S_NumDistPurchases +
-0.88467503575886 * S_NumStorePurchases + -0.83120537310738 * S_NumWebPurchases +
1.40072282351719 * S_NumWebVisitsMonth + 1.42591300760984 * S_RFMstat + 1.93593865100837 *
S_RMntFrq + -1.2794275536508 * S_Recency + -0.78582664529339 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 0.70159995537759 * S_AcceptedCmpTotal + -0.70199351793792 *
S_Age + 1.63573967285806 * S_Frq + -0.1930098634567 * S_Income + -0.43173926207337 * S_Kidhome
+ -0.45239271926178 * S_Mnt + -0.14139816383874 * S_MntFishProducts + -0.70568635660703 *
S_MntFruits + 1.68796268038024 * S_MntGoldProds + 0.80481626355934 * S_MntMeatProducts +
0.29831384975096 * S_MntSweetProducts + -0.50792336172825 * S_MntWines + 0.80425149159678 *
S_MonthsAsCustomer + -2.26171302044375 * S_NumCatalogPurchases + 1.30167361451945 *
S_NumDealsPurchases + 1.45457613716235 * S_NumDistPurchases + -0.40226463685252 *
S_NumStorePurchases + 0.36369161683572 * S_NumWebPurchases + -2.65684851610403 *
S_NumWebVisitsMonth + -1.14810413235545 * S_RFMstat + 1.291857215261 * S_RMntFrq +
1.36572595403825 * S_Recency + -0.54958418574963 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -1.00456225444665 * S_AcceptedCmpTotal + 0.19033874303798 *
S_Age + -0.62578451616415 * S_Frq + -0.96647190269426 * S_Income + 1.77002676974464 *
S_Kidhome + -0.53816249322166 * S_Mnt + 0.21322270253871 * S_MntFishProducts +
0.84210241961105 * S_MntFruits + 0.44153678515007 * S_MntGoldProds + -0.23120999196747 *
S_MntMeatProducts + 0.62950730283125 * S_MntSweetProducts + -0.64043011108056 * S_MntWines +
-2.74922907599662 * S_MonthsAsCustomer + 0.67939322758717 * S_NumCatalogPurchases +
-0.54572162665338 * S_NumDealsPurchases + 0.9607390449318 * S_NumDistPurchases +
-0.03259470545754 * S_NumStorePurchases + 0.19202241423412 * S_NumWebPurchases +
0.61085831658456 * S_NumWebVisitsMonth + -0.08582160429243 * S_RFMstat + 1.73862452808565 *
S_RMntFrq + -0.01216476188714 * S_Recency + -0.3304403270473 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 0.83453601566539 * AcceptedCmp10 + 0.59109136511077 *
AcceptedCmp20 + -0.9669340701943 * AcceptedCmp30 + -2.31468262956126 * AcceptedCmp40 +
-0.76277791850069 * AcceptedCmp50 + 0.30895289981412 * Complain0 + 0.147233855837 *
HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 0.42789425545567 * AcceptedCmp10 + 0.08505833889085 *
AcceptedCmp20 + -1.15112188313855 * AcceptedCmp30 + -1.24362486486214 * AcceptedCmp40 +
0.04131419116048 * AcceptedCmp50 + -0.45255799355317 * Complain0 + -0.32616423192953 *
HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + -0.03136360497649 * AcceptedCmp10 + 0.33867713207886 *
AcceptedCmp20 + 0.05809342990544 * AcceptedCmp30 + -0.06416815079894 * AcceptedCmp40 +
1.14617960682421 * AcceptedCmp50 + -0.82461320336041 * Complain0 + 0.58944444655621 *
HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + -1.12705500616438 * AcceptedCmp10 + 0.0487863004734 *
AcceptedCmp20 + 1.30229008593765 * AcceptedCmp30 + 0.1726718549662 * AcceptedCmp40 +
0.68443569845295 * AcceptedCmp50 + 2.39733248962228 * Complain0 + -0.620937291929 *
HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 1.42400460803453 * AcceptedCmp10 + -1.22361480936625 *
AcceptedCmp20 + 1.31090186367202 * AcceptedCmp30 + -1.40343404818254 * AcceptedCmp40 +
-0.57377230862494 * AcceptedCmp50 + 0.58622740778295 * Complain0 + -0.83222074319962 *
HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 1.56508379719546 * Education2n_Cycle +
0.52302987210661 * EducationBasic + -0.0570045326497 * EducationGraduation + -0.01838790774804
* EducationMaster + -2.32430245081383 * Marital_StatusDivorced + -0.09815511356796 *
Marital_StatusMarried + 0.13075504294551 * Marital_StatusSingle + -0.0278875765201 *
Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -0.85592920992847 * Education2n_Cycle +
0.93272618259957 * EducationBasic + 0.48987674771079 * EducationGraduation + -1.12454002820451
* EducationMaster + -0.65574603869224 * Marital_StatusDivorced + 1.54672472575294 *
Marital_StatusMarried + -1.59817602340208 * Marital_StatusSingle + 1.94381954546813 *
Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 0.37093371596523 * Education2n_Cycle +
-2.05531065359129 * EducationBasic + 1.16090743585078 * EducationGraduation + 0.87547303889444
* EducationMaster + -0.50911604604781 * Marital_StatusDivorced + 0.30403066135719 *
Marital_StatusMarried + 0.1026950879545 * Marital_StatusSingle + 0.01000166524405 *
Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 1.28509086202466 * Education2n_Cycle +
0.07860157688162 * EducationBasic + 0.24607672351689 * EducationGraduation + -0.06009602645566
* EducationMaster + 1.07371507133318 * Marital_StatusDivorced + -0.07097334129051 *
Marital_StatusMarried + -0.48339718568621 * Marital_StatusSingle + -0.08900780355835 *
Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + -1.08109633810919 * Education2n_Cycle +
-0.54966585100103 * EducationBasic + 0.5388683065169 * EducationGraduation + 0.46960055830119
* EducationMaster + 1.04342893515504 * Marital_StatusDivorced + 1.16171312085032 *
Marital_StatusMarried + -0.30201646939913 * Marital_StatusSingle + 1.84122645884771 *
Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.56970796025332 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -0.11766478836824 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -2.78218653641036 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 0.51979515224467 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -0.4635890987824 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x3_ ;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   H1x3_1 = 0.04411772880581 * S_AcceptedCmpTotal + -1.62725197326682 *
S_Age + -1.99668213406033 * S_Frq + -1.2265241921112 * S_Income + 1.99702869958035 * S_Kidhome
+ -1.46762539068512 * S_Mnt + 0.97784534044189 * S_MntFishProducts + -1.07945265688497 *
S_MntFruits + 2.09306294956674 * S_MntGoldProds + 1.46219664114361 * S_MntMeatProducts +
0.10961158671991 * S_MntSweetProducts + 2.03040669273977 * S_MntWines + 0.16536646017211 *
S_MonthsAsCustomer + -0.88077951545076 * S_NumCatalogPurchases + 1.32256781010645 *
S_NumDealsPurchases + -1.43015438973619 * S_NumDistPurchases + -0.63489289584421 *
S_NumStorePurchases + 0.90508699686841 * S_NumWebPurchases + -2.24234858061014 *
S_NumWebVisitsMonth + -2.9988027991146 * S_RFMstat + 0.35987461993699 * S_RMntFrq +
-1.09317668626142 * S_Recency + -1.09925349438658 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_2 = 0.10522923391314 * S_AcceptedCmpTotal + 0.68417479453112 *
S_Age + 0.46966162186743 * S_Frq + -1.21537535753115 * S_Income + -1.87423294109672 *
S_Kidhome + 0.76913864731495 * S_Mnt + 1.08535778796502 * S_MntFishProducts + 1.27743864099826
* S_MntFruits + -0.3186089651882 * S_MntGoldProds + -0.00224333051647 * S_MntMeatProducts +
-1.28169616734092 * S_MntSweetProducts + 1.67350500234032 * S_MntWines + 1.09584504562467 *
S_MonthsAsCustomer + -1.45467876727494 * S_NumCatalogPurchases + 0.85965187264096 *
S_NumDealsPurchases + -1.15239933286756 * S_NumDistPurchases + 1.20800889102387 *
S_NumStorePurchases + 1.08790389130242 * S_NumWebPurchases + -0.13665551161149 *
S_NumWebVisitsMonth + 1.02103499612659 * S_RFMstat + -0.12980097143044 * S_RMntFrq +
0.65854311654256 * S_Recency + -0.60999209572192 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_3 = -0.72575004293074 * S_AcceptedCmpTotal + 0.34932839743259 *
S_Age + -0.2673460618328 * S_Frq + 0.25743187687481 * S_Income + -0.02172890929346 * S_Kidhome
+ 1.21785656626837 * S_Mnt + 0.37454359336223 * S_MntFishProducts + -0.32600053706408 *
S_MntFruits + 0.57807148940534 * S_MntGoldProds + 1.14736546512366 * S_MntMeatProducts +
-1.41517082393978 * S_MntSweetProducts + -1.44899595080061 * S_MntWines + -1.45520867126531 *
S_MonthsAsCustomer + -0.33372174099196 * S_NumCatalogPurchases + -0.5767607129654 *
S_NumDealsPurchases + -0.2643921429796 * S_NumDistPurchases + -0.67417489911206 *
S_NumStorePurchases + -0.51423877684891 * S_NumWebPurchases + 1.40328299605176 *
S_NumWebVisitsMonth + 1.35588787174957 * S_RFMstat + 1.98416436137119 * S_RMntFrq +
-0.8447362450681 * S_Recency + -1.04372961736437 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_4 = 0.05745684959388 * S_AcceptedCmpTotal + -0.71077680161454 *
S_Age + 1.4854566142375 * S_Frq + -0.32870416928843 * S_Income + -0.24944295149087 * S_Kidhome
+ -0.8312409740431 * S_Mnt + -0.09638646505384 * S_MntFishProducts + -0.86550491354678 *
S_MntFruits + 1.46902858697296 * S_MntGoldProds + 0.3661164136841 * S_MntMeatProducts +
0.43108270077708 * S_MntSweetProducts + -0.87140466249616 * S_MntWines + 0.17511224898094 *
S_MonthsAsCustomer + -2.66256923117027 * S_NumCatalogPurchases + 1.2821617657076 *
S_NumDealsPurchases + 1.26584115202735 * S_NumDistPurchases + -0.46597664211833 *
S_NumStorePurchases + 0.45652363472866 * S_NumWebPurchases + -2.66296112021252 *
S_NumWebVisitsMonth + -0.86670667018974 * S_RFMstat + 0.60866041131732 * S_RMntFrq +
1.31886754707923 * S_Recency + -0.09949653139413 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_5 = -0.66850525418144 * S_AcceptedCmpTotal + 0.14331320698516 *
S_Age + -0.82708146094779 * S_Frq + -0.95718847240937 * S_Income + 1.37375648833049 *
S_Kidhome + -0.48314397401233 * S_Mnt + 0.07047324834759 * S_MntFishProducts +
0.86114312801139 * S_MntFruits + 0.54573348379533 * S_MntGoldProds + -0.05966372249273 *
S_MntMeatProducts + 0.47275063848217 * S_MntSweetProducts + -0.62962007155261 * S_MntWines +
-2.38081462831488 * S_MonthsAsCustomer + 0.56594272689824 * S_NumCatalogPurchases +
-0.85162564171681 * S_NumDealsPurchases + 0.64631099667221 * S_NumDistPurchases +
-0.03081963858636 * S_NumStorePurchases + -0.24124717624664 * S_NumWebPurchases +
0.56425980772372 * S_NumWebVisitsMonth + -0.32254616624678 * S_RFMstat + 1.84875225899832 *
S_RMntFrq + 0.08133312388911 * S_Recency + -0.19004451996479 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + 1.03487942320068 * AcceptedCmp10 + 0.77723443135875 *
AcceptedCmp20 + -1.04686858569959 * AcceptedCmp30 + -1.87852311800194 * AcceptedCmp40 +
-0.69838759011672 * AcceptedCmp50 + 0.50242045854463 * Complain0 + -0.13339808164255 *
HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 + 0.39887299789564 * AcceptedCmp10 + 0.12293700562648 *
AcceptedCmp20 + -1.41656670681309 * AcceptedCmp30 + -1.04607557362847 * AcceptedCmp40 +
0.02824649030864 * AcceptedCmp50 + -0.46581865837196 * Complain0 + -0.45913631308543 *
HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_3 = H1x3_3 + 0.20672868292414 * AcceptedCmp10 + 0.52082182457868 *
AcceptedCmp20 + 0.54911826263592 * AcceptedCmp30 + -0.02400616289922 * AcceptedCmp40 +
1.22209744911863 * AcceptedCmp50 + -0.68243413694538 * Complain0 + 0.15620895311704 *
HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_4 = H1x3_4 + -0.88269820758187 * AcceptedCmp10 + -0.19276892535938
* AcceptedCmp20 + 1.26789056018511 * AcceptedCmp30 + 0.04396979158385 * AcceptedCmp40 +
0.54194186871284 * AcceptedCmp50 + 2.07766091697967 * Complain0 + -0.43514178858246 *
HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_5 = H1x3_5 + 1.04303179873707 * AcceptedCmp10 + -1.29742389809739 *
AcceptedCmp20 + 1.21708533617895 * AcceptedCmp30 + -1.47807634614974 * AcceptedCmp40 +
-0.7694244559597 * AcceptedCmp50 + 0.51798162453723 * Complain0 + -0.95513113905832 *
HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + 1.27822716215014 * Education2n_Cycle +
0.45900505383383 * EducationBasic + -0.35822992758656 * EducationGraduation + 0.05949934527868
* EducationMaster + -2.49973437075558 * Marital_StatusDivorced + -0.18076948182574 *
Marital_StatusMarried + 0.13498525495231 * Marital_StatusSingle + -0.02365465636052 *
Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 + -1.14981446246051 * Education2n_Cycle +
0.68006996858541 * EducationBasic + -0.06493857044709 * EducationGraduation +
-1.22462805502453 * EducationMaster + -0.59463732835 * Marital_StatusDivorced +
1.37741332427598 * Marital_StatusMarried + -1.5833455713231 * Marital_StatusSingle +
1.79205360628448 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_3 = H1x3_3 + 0.17779609626753 * Education2n_Cycle +
-2.22704675950779 * EducationBasic + 1.30292325944162 * EducationGraduation + 0.68083131423474
* EducationMaster + -0.44569556289443 * Marital_StatusDivorced + 0.29918053103557 *
Marital_StatusMarried + -0.10337314064224 * Marital_StatusSingle + 0.04054221993299 *
Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_4 = H1x3_4 + 1.16412985277542 * Education2n_Cycle +
0.18806330813344 * EducationBasic + 0.00212145829045 * EducationGraduation + 0.00087354662697
* EducationMaster + 1.13881957277462 * Marital_StatusDivorced + -0.35849807146313 *
Marital_StatusMarried + -0.22168731316885 * Marital_StatusSingle + -0.22672306263461 *
Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_5 = H1x3_5 + -1.25195599938207 * Education2n_Cycle +
-0.60946428681789 * EducationBasic + 0.39993500009227 * EducationGraduation + 0.43730905987249
* EducationMaster + 1.10774969923269 * Marital_StatusDivorced + 1.08409594073043 *
Marital_StatusMarried + -0.33145048007894 * Marital_StatusSingle + 1.68703837664761 *
Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 1.76093149538288 + H1x3_1 ;
MPRINT(EM_DIAGRAM):   H1x3_2 = -0.11243980195421 + H1x3_2 ;
MPRINT(EM_DIAGRAM):   H1x3_3 = -2.59474781862449 + H1x3_3 ;
MPRINT(EM_DIAGRAM):   H1x3_4 = 0.25376473610258 + H1x3_4 ;
MPRINT(EM_DIAGRAM):   H1x3_5 = -0.54808648261397 + H1x3_5 ;
MPRINT(EM_DIAGRAM):   _EPS = SQRT(CONSTANT('MACEPS')) ;
MPRINT(EM_DIAGRAM):   _REC_EPS = 1/_EPS ;
MPRINT(EM_DIAGRAM):   DROP _REC_EPS _EPS ;
MPRINT(EM_DIAGRAM):   IF H1x3_1 < _REC_EPS AND H1x3_1 > - _REC_EPS THEN H1x3_1 = H1x3_1 *
H1x3_1 ;
MPRINT(EM_DIAGRAM):   ELSE H1x3_1 = _REC_EPS ;
MPRINT(EM_DIAGRAM):   IF H1x3_2 < _REC_EPS AND H1x3_2 > - _REC_EPS THEN H1x3_2 = H1x3_2 *
H1x3_2 ;
MPRINT(EM_DIAGRAM):   ELSE H1x3_2 = _REC_EPS ;
MPRINT(EM_DIAGRAM):   IF H1x3_3 < _REC_EPS AND H1x3_3 > - _REC_EPS THEN H1x3_3 = H1x3_3 *
H1x3_3 ;
MPRINT(EM_DIAGRAM):   ELSE H1x3_3 = _REC_EPS ;
MPRINT(EM_DIAGRAM):   IF H1x3_4 < _REC_EPS AND H1x3_4 > - _REC_EPS THEN H1x3_4 = H1x3_4 *
H1x3_4 ;
MPRINT(EM_DIAGRAM):   ELSE H1x3_4 = _REC_EPS ;
MPRINT(EM_DIAGRAM):   IF H1x3_5 < _REC_EPS AND H1x3_5 > - _REC_EPS THEN H1x3_5 = H1x3_5 *
H1x3_5 ;
MPRINT(EM_DIAGRAM):   ELSE H1x3_5 = _REC_EPS ;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   H1x3_1 = .;
MPRINT(EM_DIAGRAM):   H1x3_2 = .;
MPRINT(EM_DIAGRAM):   H1x3_3 = .;
MPRINT(EM_DIAGRAM):   H1x3_4 = .;
MPRINT(EM_DIAGRAM):   H1x3_5 = .;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 12.3694111963696 * H1x1_1 + -9.1014019341077 * H1x1_2 +
-14.9093780045901 * H1x1_3 + 25.4505756686259 * H1x1_4 + -13.3798044908382 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 + -0.2373753683635 * H1x2_1 + -0.03661175538589 *
H1x2_2 + 0.29534813812803 * H1x2_3 + 0.11908166898588 * H1x2_4 + -0.241544638637 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 + -0.00276620815201 * H1x3_1 + 0.00487849269566 *
H1x3_2 + 0.01323887261394 * H1x3_3 + -0.0271389925801 * H1x3_4 + 0.00026595473892 * H1x3_5 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 4.0541137239843 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ********************************;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   ********************************;
MPRINT(EM_DIAGRAM):   drop H1x1_1 H1x1_2 H1x1_3 H1x1_4 H1x1_5 H1x2_1 H1x2_2 H1x2_3 H1x2_4
H1x2_5 H1x3_1 H1x3_2 H1x3_3 H1x3_4 H1x3_5 ;
MPRINT(EM_DIAGRAM):   drop S_:;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural10;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural10;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   drop AutoNeural10_P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural10_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural10_P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural10_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural10;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   length AutoNeural10_WARN_ $4;
MPRINT(EM_DIAGRAM):   drop AutoNeural10_WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural10_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TOOL: Extension Class;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * NODE: FIMPORT;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TOOL: Statistics Exploration;
MPRINT(EM_DIAGRAM):   * TYPE: EXPLORE;
MPRINT(EM_DIAGRAM):   * NODE: Stat;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TOOL: Filtering;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * NODE: Filter;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * NODE: EMCODE4;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TOOL: Transform;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * NODE: Trans;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TOOL: Partition Class;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * NODE: Part;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TOOL: Metadata Node;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * NODE: Meta;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural9;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   ***********************************;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   ***********************************;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   Complain0 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   Complain0 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 *
MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 *
MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.7790327388408 * S_AcceptedCmpTotal + 0.32193739579856 *
S_Age + -0.43875684835169 * S_Frq + 0.13013240455049 * S_Income + -0.74127716462976 *
S_Kidhome + -0.86416600561474 * S_Mnt + 0.94819226754442 * S_MntFishProducts +
0.15895119408799 * S_MntFruits + 0.03658391935071 * S_MntGoldProds + -3.75052142292398 *
S_MntMeatProducts + -0.22192220883538 * S_MntSweetProducts + 0.80534656860633 * S_MntWines +
0.16144794241259 * S_MonthsAsCustomer + -1.53040364803625 * S_NumCatalogPurchases +
-1.09856598010056 * S_NumDealsPurchases + -0.10571850472514 * S_NumDistPurchases +
0.11898210654227 * S_NumStorePurchases + 0.5984912060231 * S_NumWebPurchases +
0.78592531126942 * S_NumWebVisitsMonth + -0.50004686386273 * S_RFMstat + 0.40804018151571 *
S_RMntFrq + -0.94753260620308 * S_Recency + -0.49604118088328 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.22226926295489 * S_AcceptedCmpTotal + 0.08523894206962 *
S_Age + -0.13010378102207 * S_Frq + -0.61810906923536 * S_Income + 0.26583917928045 *
S_Kidhome + 0.57213479787981 * S_Mnt + -0.58077613046442 * S_MntFishProducts + 0.1530301493776
* S_MntFruits + 0.4586167382631 * S_MntGoldProds + 1.40179051129147 * S_MntMeatProducts +
0.0231413770297 * S_MntSweetProducts + -0.08483682112771 * S_MntWines + 0.22891006905064 *
S_MonthsAsCustomer + -1.21866617917435 * S_NumCatalogPurchases + -0.84042044250624 *
S_NumDealsPurchases + -0.10246261015488 * S_NumDistPurchases + 0.06886149708824 *
S_NumStorePurchases + 0.63156910388199 * S_NumWebPurchases + -1.33032061845311 *
S_NumWebVisitsMonth + 0.51240040684649 * S_RFMstat + 0.77604047421115 * S_RMntFrq +
1.27964260226958 * S_Recency + 0.12022076571016 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.19879097976404 * S_AcceptedCmpTotal + 0.14973951999399 *
S_Age + -0.90630756390399 * S_Frq + 0.64934241358682 * S_Income + -0.66249532206724 *
S_Kidhome + 0.54195490560813 * S_Mnt + -0.58497380565417 * S_MntFishProducts +
0.12409202833851 * S_MntFruits + 0.44480061346561 * S_MntGoldProds + 3.27513201048136 *
S_MntMeatProducts + -0.1256493054184 * S_MntSweetProducts + -0.56080685022301 * S_MntWines +
0.08633469383177 * S_MonthsAsCustomer + 0.45482673505107 * S_NumCatalogPurchases +
0.45393712455366 * S_NumDealsPurchases + -0.25292198053552 * S_NumDistPurchases +
-1.35582215064749 * S_NumStorePurchases + -0.83132202302639 * S_NumWebPurchases +
1.87116225272678 * S_NumWebVisitsMonth + 0.39564162951481 * S_RFMstat + -1.08810221295144 *
S_RMntFrq + -2.07407859514648 * S_Recency + -0.6849099475723 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.81075414854045 * AcceptedCmp10 + -0.33403710427327 *
AcceptedCmp20 + -0.62242387435975 * AcceptedCmp30 + -0.89439410552439 * AcceptedCmp40 +
0.77335976756467 * AcceptedCmp50 + -0.08825784612626 * Complain0 + 0.3404395194267 *
HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.16741179709566 * AcceptedCmp10 + -0.53751033948061
* AcceptedCmp20 + 0.80285496945068 * AcceptedCmp30 + 0.39379279966091 * AcceptedCmp40 +
-1.40366799083237 * AcceptedCmp50 + -0.4265482924132 * Complain0 + 0.37272103593422 *
HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.19417657656326 * AcceptedCmp10 + -0.06547746897317
* AcceptedCmp20 + 0.21980739904513 * AcceptedCmp30 + -0.19452210052301 * AcceptedCmp40 +
-2.02403282278574 * AcceptedCmp50 + -0.18250261144524 * Complain0 + 0.34168103813312 *
HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.03956789621002 * Education2n_Cycle +
-0.38372374638888 * EducationBasic + -0.4178927802606 * EducationGraduation +
-0.61278625923288 * EducationMaster + 0.4695898100094 * Marital_StatusDivorced +
-0.52137742289262 * Marital_StatusMarried + -0.32382086914936 * Marital_StatusSingle +
-0.66163012672344 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.25832319223886 * Education2n_Cycle +
0.05602860720141 * EducationBasic + -0.86282852488383 * EducationGraduation + 0.18916317018059
* EducationMaster + -1.04858218653238 * Marital_StatusDivorced + 2.41098335093061 *
Marital_StatusMarried + -1.94696044861334 * Marital_StatusSingle + 2.16021514856437 *
Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.05351872242069 * Education2n_Cycle +
-0.56850783552841 * EducationBasic + -0.14880907057098 * EducationGraduation +
-0.32850851013319 * EducationMaster + 0.42964114177062 * Marital_StatusDivorced +
-0.38607635605816 * Marital_StatusMarried + -0.02157405407852 * Marital_StatusSingle +
-0.59995619744527 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.53239337390307 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.99428677123948 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.835877082844 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0;
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 );
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.41904253756965 * H1x1_1 + -7.11204151517034 * H1x1_2 +
10.7909509395818 * H1x1_3 + -2.20432578352426 * H1x1_4 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.66951098257489 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ********************************;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   ********************************;
MPRINT(EM_DIAGRAM):   drop H1x1_1 H1x1_2 H1x1_3 H1x1_4 ;
MPRINT(EM_DIAGRAM):   drop S_:;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural9;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural9;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   drop AutoNeural9_P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural9_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural9_P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural9_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural9;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   length AutoNeural9_WARN_ $4;
MPRINT(EM_DIAGRAM):   drop AutoNeural9_WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural9_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TOOL: Extension Class;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * NODE: FIMPORT;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TOOL: Statistics Exploration;
MPRINT(EM_DIAGRAM):   * TYPE: EXPLORE;
MPRINT(EM_DIAGRAM):   * NODE: Stat;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TOOL: Filtering;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * NODE: Filter;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * NODE: EMCODE4;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TOOL: Transform;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * NODE: Trans;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TOOL: Partition Class;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * NODE: Part;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TOOL: Metadata Node;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * NODE: Meta;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural11;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   ***********************************;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   ***********************************;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   Complain0 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   Complain0 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 *
MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 *
MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.08465472857554 * S_AcceptedCmpTotal + 0.23104131534618 *
S_Age + 0.27646175976509 * S_Frq + 0.45938840681203 * S_Income + 0.09814900830666 * S_Kidhome
+ 0.23249430277518 * S_Mnt + -0.51905493105122 * S_MntFishProducts + -0.07604226481078 *
S_MntFruits + 0.10100393832157 * S_MntGoldProds + 1.56159221713858 * S_MntMeatProducts +
0.12166799382268 * S_MntSweetProducts + -0.63388816790524 * S_MntWines + 0.00878303775585 *
S_MonthsAsCustomer + 0.01990411233136 * S_NumCatalogPurchases + 0.19770934886328 *
S_NumDealsPurchases + 0.0515215988111 * S_NumDistPurchases + -0.34569346346089 *
S_NumStorePurchases + -0.27122293596124 * S_NumWebPurchases + -0.17061565609755 *
S_NumWebVisitsMonth + 0.1271178187502 * S_RFMstat + 0.38306508975954 * S_RMntFrq +
0.05823588653853 * S_Recency + -0.03760117378617 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.16564144258189 * S_AcceptedCmpTotal + -0.18930338067433 *
S_Age + -0.23013558761757 * S_Frq + -0.1347135122598 * S_Income + 0.04776498811407 * S_Kidhome
+ -0.14940302068852 * S_Mnt + -0.13108691405604 * S_MntFishProducts + -0.02561341150704 *
S_MntFruits + -0.02022222891948 * S_MntGoldProds + 0.80867688993093 * S_MntMeatProducts +
-0.08374488783635 * S_MntSweetProducts + -0.6719369441832 * S_MntWines + -0.14760035685198 *
S_MonthsAsCustomer + 0.4007376271331 * S_NumCatalogPurchases + 0.54308887602031 *
S_NumDealsPurchases + -0.22507315320192 * S_NumDistPurchases + -0.79861387328361 *
S_NumStorePurchases + -0.45467494002747 * S_NumWebPurchases + 0.2119048824613 *
S_NumWebVisitsMonth + 0.30167662748678 * S_RFMstat + 0.10712110659027 * S_RMntFrq +
-0.03061918029089 * S_Recency + -0.06096313113607 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.02674875562898 * S_AcceptedCmpTotal + -0.19731891748843 *
S_Age + -0.00753784701259 * S_Frq + -0.31764694608254 * S_Income + 0.49525183733398 *
S_Kidhome + 0.24623619243686 * S_Mnt + 0.25904859702044 * S_MntFishProducts + 0.26153358982994
* S_MntFruits + -0.07223707213485 * S_MntGoldProds + -0.15192960471493 * S_MntMeatProducts +
0.08241128624385 * S_MntSweetProducts + 0.62479763709054 * S_MntWines + 0.03593742779349 *
S_MonthsAsCustomer + 0.00825730323418 * S_NumCatalogPurchases + -0.0771083149302 *
S_NumDealsPurchases + 0.03403621221162 * S_NumDistPurchases + 0.61303946422025 *
S_NumStorePurchases + 0.27126793634053 * S_NumWebPurchases + -0.9769688424222 *
S_NumWebVisitsMonth + 0.08832170040425 * S_RFMstat + 0.13241491054212 * S_RMntFrq +
0.94872655811163 * S_Recency + 0.22002222738147 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.46328587348713 * S_AcceptedCmpTotal + -0.306946385792 * S_Age
+ -0.24247964225191 * S_Frq + -0.42968609314513 * S_Income + -0.08934431746158 * S_Kidhome +
0.15972194979558 * S_Mnt + -0.22174909818279 * S_MntFishProducts + -0.23755215058744 *
S_MntFruits + -0.124789433808 * S_MntGoldProds + 0.50040173514144 * S_MntMeatProducts +
0.02850063230459 * S_MntSweetProducts + 0.13427582671876 * S_MntWines + 0.25569886862761 *
S_MonthsAsCustomer + 0.34004201732149 * S_NumCatalogPurchases + 0.29894603062327 *
S_NumDealsPurchases + 0.07614620530875 * S_NumDistPurchases + 0.15402335009896 *
S_NumStorePurchases + 0.10615749096863 * S_NumWebPurchases + 0.41962286816879 *
S_NumWebVisitsMonth + 0.00203630873093 * S_RFMstat + 0.04736976805951 * S_RMntFrq +
-0.84751074132422 * S_Recency + 0.2189023557249 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -0.32353341757368 * S_AcceptedCmpTotal + 0.03233494925748 *
S_Age + -0.21296093282526 * S_Frq + -0.33919081075007 * S_Income + 0.08771362671573 *
S_Kidhome + -0.10797068838726 * S_Mnt + -0.19736358637985 * S_MntFishProducts +
-0.19679917231132 * S_MntFruits + 0.07502386205588 * S_MntGoldProds + -0.50948750987247 *
S_MntMeatProducts + 0.00413757018488 * S_MntSweetProducts + 0.0788538305785 * S_MntWines +
-0.02917052455021 * S_MonthsAsCustomer + -0.53933514609821 * S_NumCatalogPurchases +
0.14392502416642 * S_NumDealsPurchases + -0.10026304978633 * S_NumDistPurchases +
-0.0588453022746 * S_NumStorePurchases + 0.24799398610395 * S_NumWebPurchases +
-0.52695548549717 * S_NumWebVisitsMonth + 0.01855620452049 * S_RFMstat + -0.00189170766477 *
S_RMntFrq + 0.51841177421912 * S_Recency + 0.31491299720207 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_6 = -0.2113594539647 * S_AcceptedCmpTotal + -0.1052829531896 *
S_Age + 0.30802959734964 * S_Frq + -0.03112570586685 * S_Income + 0.19129661263247 * S_Kidhome
+ 0.00533736622639 * S_Mnt + -0.06112703732925 * S_MntFishProducts + -0.15875686512247 *
S_MntFruits + -0.08040179272112 * S_MntGoldProds + -0.14462087536907 * S_MntMeatProducts +
0.21353582706121 * S_MntSweetProducts + -0.30180630737612 * S_MntWines + -0.11825033043182 *
S_MonthsAsCustomer + -0.2917393256645 * S_NumCatalogPurchases + 0.08149600854964 *
S_NumDealsPurchases + 0.16873541613513 * S_NumDistPurchases + -0.20437343413446 *
S_NumStorePurchases + -0.1671107527288 * S_NumWebPurchases + 0.03677043100993 *
S_NumWebVisitsMonth + 0.0240516540488 * S_RFMstat + 0.06155030856383 * S_RMntFrq +
-0.28802122451372 * S_Recency + 0.06998878697307 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.33641509021082 * AcceptedCmp10 + 0.03092292109435 *
AcceptedCmp20 + -0.23551187181907 * AcceptedCmp30 + -0.06694400005185 * AcceptedCmp40 +
-0.14203506237074 * AcceptedCmp50 + -0.25866390496966 * Complain0 + 0.19505921178308 *
HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.09937599707203 * AcceptedCmp10 + 0.03831208573575 *
AcceptedCmp20 + 0.39683693019758 * AcceptedCmp30 + 0.37006277175295 * AcceptedCmp40 +
0.21293419476895 * AcceptedCmp50 + 0.15528568367473 * Complain0 + -0.30210013299822 *
HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.29891621770856 * AcceptedCmp10 + 0.64938384482014 *
AcceptedCmp20 + 0.44997242602142 * AcceptedCmp30 + 0.479093722666 * AcceptedCmp40 +
0.50957180373919 * AcceptedCmp50 + 0.27833535432461 * Complain0 + -0.20383534906723 *
HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.26872515586946 * AcceptedCmp10 + -0.24299337381911
* AcceptedCmp20 + -0.01147155911926 * AcceptedCmp30 + -0.3056041277894 * AcceptedCmp40 +
-0.05496409609003 * AcceptedCmp50 + 0.07858238173893 * Complain0 + 0.05721550070076 *
HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.14067626649899 * AcceptedCmp10 + -0.30627802828357
* AcceptedCmp20 + 0.05057942365592 * AcceptedCmp30 + -0.10378506600459 * AcceptedCmp40 +
0.07479232390108 * AcceptedCmp50 + 0.07252750671496 * Complain0 + 0.11114854035831 *
HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + -0.25806332334976 * AcceptedCmp10 + 0.03944021903138 *
AcceptedCmp20 + -0.08792206887119 * AcceptedCmp30 + -0.24631282865199 * AcceptedCmp40 +
-0.06123991538969 * AcceptedCmp50 + -0.03114784375357 * Complain0 + -0.25204544481193 *
HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.2972170984261 * Education2n_Cycle + 0.01651368568996
* EducationBasic + -0.1186055936649 * EducationGraduation + 0.0228208538951 * EducationMaster
+ -0.31045295887604 * Marital_StatusDivorced + -0.01109401001539 * Marital_StatusMarried +
0.01325135981025 * Marital_StatusSingle + 0.16609357475978 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.07095220065018 * Education2n_Cycle +
-0.23491732567608 * EducationBasic + 0.20187086452315 * EducationGraduation + 0.07524128723108
* EducationMaster + 0.02275101861599 * Marital_StatusDivorced + 0.20271548664903 *
Marital_StatusMarried + -0.12132069210718 * Marital_StatusSingle + 0.00085090729385 *
Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.02268297689573 * Education2n_Cycle +
0.06359770535369 * EducationBasic + -0.1194001280088 * EducationGraduation + 0.17299848976308
* EducationMaster + -0.4992959703281 * Marital_StatusDivorced + 0.62071659624138 *
Marital_StatusMarried + -0.21776202274494 * Marital_StatusSingle + 0.54712874598141 *
Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.17773353520266 * Education2n_Cycle +
0.17998728120628 * EducationBasic + -0.00324602612825 * EducationGraduation +
-0.22448876765089 * EducationMaster + 0.05626212670587 * Marital_StatusDivorced +
0.14353891364597 * Marital_StatusMarried + -0.29006765622997 * Marital_StatusSingle +
0.05503638282535 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + 0.06634316870499 * Education2n_Cycle +
-0.36153880127411 * EducationBasic + 0.23023144658635 * EducationGraduation +
-0.06568730318683 * EducationMaster + -0.21206913700604 * Marital_StatusDivorced +
0.58790643614629 * Marital_StatusMarried + -0.65995982578062 * Marital_StatusSingle +
0.49642503732428 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + 0.16504024096118 * Education2n_Cycle +
0.11925867171875 * EducationBasic + -0.04213907014732 * EducationGraduation +
-0.21389968555475 * EducationMaster + -0.05047370516008 * Marital_StatusDivorced +
-0.23139090963669 * Marital_StatusMarried + 0.04816197463249 * Marital_StatusSingle +
0.04977890114896 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -1.90576647346127 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.32295787429294 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.75117643107919 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 1.2336762751587 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -0.97062317465491 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = -1.15756803634408 + H1x1_6 ;
MPRINT(EM_DIAGRAM):   _EPS = SQRT(CONSTANT('MACEPS')) ;
MPRINT(EM_DIAGRAM):   _REC_EPS = 1/_EPS ;
MPRINT(EM_DIAGRAM):   DROP _REC_EPS _EPS ;
MPRINT(EM_DIAGRAM):   IF H1x1_1 < _REC_EPS AND H1x1_1 > - _REC_EPS THEN H1x1_1 = H1x1_1 *
H1x1_1 ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_1 = _REC_EPS ;
MPRINT(EM_DIAGRAM):   IF H1x1_2 < _REC_EPS AND H1x1_2 > - _REC_EPS THEN H1x1_2 = H1x1_2 *
H1x1_2 ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_2 = _REC_EPS ;
MPRINT(EM_DIAGRAM):   IF H1x1_3 < _REC_EPS AND H1x1_3 > - _REC_EPS THEN H1x1_3 = H1x1_3 *
H1x1_3 ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_3 = _REC_EPS ;
MPRINT(EM_DIAGRAM):   IF H1x1_4 < _REC_EPS AND H1x1_4 > - _REC_EPS THEN H1x1_4 = H1x1_4 *
H1x1_4 ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_4 = _REC_EPS ;
MPRINT(EM_DIAGRAM):   IF H1x1_5 < _REC_EPS AND H1x1_5 > - _REC_EPS THEN H1x1_5 = H1x1_5 *
H1x1_5 ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_5 = _REC_EPS ;
MPRINT(EM_DIAGRAM):   IF H1x1_6 < _REC_EPS AND H1x1_6 > - _REC_EPS THEN H1x1_6 = H1x1_6 *
H1x1_6 ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_6 = _REC_EPS ;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.99830813428318 * H1x1_1 + 1.33495006526712 * H1x1_2 +
-1.37942150026657 * H1x1_3 + 1.22714974922576 * H1x1_4 + 1.73375794385595 * H1x1_5 +
-0.0100306049679 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.90393999986167 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ********************************;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   ********************************;
MPRINT(EM_DIAGRAM):   drop H1x1_1 H1x1_2 H1x1_3 H1x1_4 H1x1_5 H1x1_6 ;
MPRINT(EM_DIAGRAM):   drop S_:;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural11;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural11;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   drop AutoNeural11_P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural11_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural11_P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural11_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural11;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   length AutoNeural11_WARN_ $4;
MPRINT(EM_DIAGRAM):   drop AutoNeural11_WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural11_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TOOL: Extension Class;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * NODE: FIMPORT;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TOOL: Statistics Exploration;
MPRINT(EM_DIAGRAM):   * TYPE: EXPLORE;
MPRINT(EM_DIAGRAM):   * NODE: Stat;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TOOL: Filtering;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * NODE: Filter;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * NODE: EMCODE4;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TOOL: Transform;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * NODE: Trans;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TOOL: Partition Class;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * NODE: Part;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TOOL: Metadata Node;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * NODE: Meta;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural12;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   ***********************************;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   ***********************************;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_7 = 'Hidden: H1x1_=7' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_6 = 'Hidden: H1x2_=6' ;
MPRINT(EM_DIAGRAM):   label H1x2_7 = 'Hidden: H1x2_=7' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   Complain0 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   Complain0 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 *
MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 *
MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.08478534961354 * S_AcceptedCmpTotal + 0.21528166003219 *
S_Age + -0.16079737422774 * S_Frq + 0.04922044955183 * S_Income + 0.06245849112135 * S_Kidhome
+ -0.12820970008154 * S_Mnt + -0.00676959308959 * S_MntFishProducts + -0.20367403957375 *
S_MntFruits + -0.06459558558968 * S_MntGoldProds + 0.01557669100416 * S_MntMeatProducts +
-0.16342003924117 * S_MntSweetProducts + 0.34676276369853 * S_MntWines + -0.08454570225616 *
S_MonthsAsCustomer + -0.00318885387905 * S_NumCatalogPurchases + 0.1112677116841 *
S_NumDealsPurchases + 0.01563584187072 * S_NumDistPurchases + 0.19193969522995 *
S_NumStorePurchases + 0.3133556199984 * S_NumWebPurchases + -0.21884874785716 *
S_NumWebVisitsMonth + 0.08478875792216 * S_RFMstat + 0.05964414665285 * S_RMntFrq +
-0.12595000497726 * S_Recency + -0.1238719414537 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.20807487357943 * S_AcceptedCmpTotal + -0.27223051908987 *
S_Age + 0.28649391533674 * S_Frq + 0.46493719675068 * S_Income + 0.10180542910079 * S_Kidhome
+ -0.19573056673819 * S_Mnt + -0.05332725327514 * S_MntFishProducts + -0.28610692329433 *
S_MntFruits + -0.13417237194849 * S_MntGoldProds + 0.45697707494335 * S_MntMeatProducts +
-0.28280545785477 * S_MntSweetProducts + -0.13234920069688 * S_MntWines + -0.2710938018651 *
S_MonthsAsCustomer + 0.31174284041905 * S_NumCatalogPurchases + 0.30225032753275 *
S_NumDealsPurchases + 0.33833359923595 * S_NumDistPurchases + -0.20255599575849 *
S_NumStorePurchases + -0.12040071168942 * S_NumWebPurchases + -0.12407090307061 *
S_NumWebVisitsMonth + -0.05688936259515 * S_RFMstat + 0.15514736649245 * S_RMntFrq +
0.00838555462657 * S_Recency + 0.04609426861136 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.30541463116928 * S_AcceptedCmpTotal + -0.01746117216025 *
S_Age + -0.44156473334329 * S_Frq + -0.51952426304193 * S_Income + 0.20419921255777 *
S_Kidhome + -0.18174316707953 * S_Mnt + -0.03813675536406 * S_MntFishProducts +
-0.0959023413712 * S_MntFruits + 0.12724081783278 * S_MntGoldProds + -0.07639148541426 *
S_MntMeatProducts + -0.0797214413833 * S_MntSweetProducts + -0.57705931875808 * S_MntWines +
-0.12638551201991 * S_MonthsAsCustomer + -0.21854676704549 * S_NumCatalogPurchases +
0.16792903091627 * S_NumDealsPurchases + -0.37408945626745 * S_NumDistPurchases +
-0.18067262995566 * S_NumStorePurchases + 0.21192146789881 * S_NumWebPurchases +
-0.23547702310669 * S_NumWebVisitsMonth + -0.02272089758813 * S_RFMstat + -0.16409330281075 *
S_RMntFrq + 0.45021846112946 * S_Recency + 0.32988735727394 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.05205198916717 * S_AcceptedCmpTotal + 0.25568653619739 *
S_Age + -0.31037252146959 * S_Frq + 0.42636025358982 * S_Income + -0.24453708980866 *
S_Kidhome + -0.07832530945892 * S_Mnt + -0.48332124476182 * S_MntFishProducts +
-0.13932879119138 * S_MntFruits + 0.1984121566988 * S_MntGoldProds + 1.14965897015972 *
S_MntMeatProducts + 0.07027485457428 * S_MntSweetProducts + -0.56598097754046 * S_MntWines +
0.07317190938075 * S_MonthsAsCustomer + 0.075756987983 * S_NumCatalogPurchases +
0.29407429399136 * S_NumDealsPurchases + 0.01610745252195 * S_NumDistPurchases +
-0.17767939085628 * S_NumStorePurchases + -0.15168958538637 * S_NumWebPurchases +
0.17433622143988 * S_NumWebVisitsMonth + 0.11635602973993 * S_RFMstat + 0.32632751843433 *
S_RMntFrq + -0.24758483374458 * S_Recency + -0.31468291567479 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -0.59657492903543 * S_AcceptedCmpTotal + 0.23513672763458 *
S_Age + -0.14882104210954 * S_Frq + -0.07762660201035 * S_Income + 0.01424651904783 *
S_Kidhome + 0.18748607813081 * S_Mnt + 0.11088464897095 * S_MntFishProducts +
-0.10064450211557 * S_MntFruits + 0.11161391354421 * S_MntGoldProds + -1.36345407290644 *
S_MntMeatProducts + 0.04868729717044 * S_MntSweetProducts + 0.80284342329654 * S_MntWines +
-0.0179539622492 * S_MonthsAsCustomer + -0.60051908798715 * S_NumCatalogPurchases +
-0.37976451362108 * S_NumDealsPurchases + -0.17027731520801 * S_NumDistPurchases +
0.59849493667087 * S_NumStorePurchases + 0.65481480560301 * S_NumWebPurchases +
-0.68253224576609 * S_NumWebVisitsMonth + -0.16723490165629 * S_RFMstat + -0.10533797887644 *
S_RMntFrq + 0.81382723915873 * S_Recency + 0.06049401205856 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_6 = -0.07547841798202 * S_AcceptedCmpTotal + 0.22445278254589 *
S_Age + -0.26357481075143 * S_Frq + 0.06894154144261 * S_Income + 0.20713236126681 * S_Kidhome
+ -0.14103612934526 * S_Mnt + 0.36334508557452 * S_MntFishProducts + -0.20862425337296 *
S_MntFruits + -0.29089690099273 * S_MntGoldProds + 0.11336893090527 * S_MntMeatProducts +
-0.13547374281924 * S_MntSweetProducts + 0.02228828195539 * S_MntWines + -0.19257650420334 *
S_MonthsAsCustomer + 0.1365526319824 * S_NumCatalogPurchases + -0.07686699131623 *
S_NumDealsPurchases + -0.07220460738926 * S_NumDistPurchases + -0.06554027468389 *
S_NumStorePurchases + 0.10422838158001 * S_NumWebPurchases + -0.03858550147892 *
S_NumWebVisitsMonth + -0.06397448441373 * S_RFMstat + 0.21747838287147 * S_RMntFrq +
0.24839313159913 * S_Recency + -0.06317317698653 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_7 = -0.08604903695444 * S_AcceptedCmpTotal + -0.14807437541992 *
S_Age + 0.01466157584549 * S_Frq + -0.09883966180507 * S_Income + 0.51992566778352 * S_Kidhome
+ 0.29795006703636 * S_Mnt + -0.08922020500011 * S_MntFishProducts + 0.19836834402079 *
S_MntFruits + -0.11292241468378 * S_MntGoldProds + 0.584464452194 * S_MntMeatProducts +
0.22625326024073 * S_MntSweetProducts + 0.24074129944382 * S_MntWines + 0.13538906557527 *
S_MonthsAsCustomer + -0.01228250248922 * S_NumCatalogPurchases + -0.07920122387563 *
S_NumDealsPurchases + 0.3649244061347 * S_NumDistPurchases + 0.36475853688403 *
S_NumStorePurchases + 0.02153991404063 * S_NumWebPurchases + -0.94080669139388 *
S_NumWebVisitsMonth + 0.24853677977494 * S_RFMstat + 0.37015183933951 * S_RMntFrq +
0.6724157721663 * S_Recency + 0.1615471643866 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.04431608362128 * AcceptedCmp10 + 0.145592087795 *
AcceptedCmp20 + -0.18972867139938 * AcceptedCmp30 + 0.11297731320888 * AcceptedCmp40 +
0.15203974410995 * AcceptedCmp50 + 0.05130421316428 * Complain0 + 0.33576036450343 *
HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.05495742609855 * AcceptedCmp10 + -0.08873650760176
* AcceptedCmp20 + -0.16380549867313 * AcceptedCmp30 + -0.24495261884932 * AcceptedCmp40 +
-0.22199506896148 * AcceptedCmp50 + 0.149484615172 * Complain0 + 0.01091791142552 *
HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.03473702421341 * AcceptedCmp10 + -0.11226718065217 *
AcceptedCmp20 + 0.19024579384296 * AcceptedCmp30 + 0.15478548865598 * AcceptedCmp40 +
0.15222823671897 * AcceptedCmp50 + 0.07713012834947 * Complain0 + -0.18741708707661 *
HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.25622127302429 * AcceptedCmp10 + -0.39059103518073
* AcceptedCmp20 + -0.29716603631807 * AcceptedCmp30 + -0.20875694971526 * AcceptedCmp40 +
-0.35128787139073 * AcceptedCmp50 + -0.28848733462386 * Complain0 + 0.4276503747649 *
HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.06574875851088 * AcceptedCmp10 + -0.27375195259265
* AcceptedCmp20 + -0.2740681662293 * AcceptedCmp30 + -0.14697156898736 * AcceptedCmp40 +
0.17684649468835 * AcceptedCmp50 + -0.09979172944646 * Complain0 + 0.38986664202197 *
HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + 0.08696678529441 * AcceptedCmp10 + 0.09467543942215 *
AcceptedCmp20 + 0.04586779705477 * AcceptedCmp30 + -0.12591921836379 * AcceptedCmp40 +
0.20150138392895 * AcceptedCmp50 + 0.27764282700214 * Complain0 + 0.13985738522066 *
HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_7 = H1x1_7 + -0.10455069401218 * AcceptedCmp10 + 0.1311831941372 *
AcceptedCmp20 + 0.17844209104604 * AcceptedCmp30 + 0.19406707592815 * AcceptedCmp40 +
-0.00068155012319 * AcceptedCmp50 + 0.13245364846536 * Complain0 + -0.05165256160872 *
HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.28967939808759 * Education2n_Cycle +
-0.15795056374781 * EducationBasic + -0.00649803471307 * EducationGraduation +
0.19520715924532 * EducationMaster + 0.07744097241553 * Marital_StatusDivorced +
-0.0247463100385 * Marital_StatusMarried + 0.05804915234573 * Marital_StatusSingle +
-0.08320125047871 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.12524444422085 * Education2n_Cycle +
-0.30278286924729 * EducationBasic + 0.37480827366421 * EducationGraduation + 0.34209136290694
* EducationMaster + 0.01390668926269 * Marital_StatusDivorced + 0.01136282152074 *
Marital_StatusMarried + 0.12450246418789 * Marital_StatusSingle + -0.1576148519872 *
Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.14589041643593 * Education2n_Cycle +
-0.15691118816463 * EducationBasic + 0.1993616073183 * EducationGraduation + 0.02862010255145
* EducationMaster + -0.19133456931879 * Marital_StatusDivorced + 0.56263566654996 *
Marital_StatusMarried + -0.42172822038882 * Marital_StatusSingle + 0.42023140643292 *
Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + 0.10038585978656 * Education2n_Cycle +
-0.11388609002984 * EducationBasic + -0.14980553500983 * EducationGraduation +
-0.07646595330369 * EducationMaster + -0.19871205065609 * Marital_StatusDivorced +
-0.14730795681603 * Marital_StatusMarried + 0.05055432510362 * Marital_StatusSingle +
0.06558965292395 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + 0.0015835307855 * Education2n_Cycle +
-0.22658746797638 * EducationBasic + -0.03445982386977 * EducationGraduation +
0.11375378192685 * EducationMaster + -0.35623807358995 * Marital_StatusDivorced +
0.30324726283965 * Marital_StatusMarried + -0.18561093467927 * Marital_StatusSingle +
0.395424582152 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + -0.23751822587858 * Education2n_Cycle +
-0.01687300040825 * EducationBasic + 0.23236967703011 * EducationGraduation + 0.0725289831541
* EducationMaster + 0.11581014663368 * Marital_StatusDivorced + -0.31070638037659 *
Marital_StatusMarried + 0.17131747253949 * Marital_StatusSingle + -0.19314955966476 *
Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_7 = H1x1_7 + 0.00103693282479 * Education2n_Cycle +
0.12608909598752 * EducationBasic + -0.2366673091666 * EducationGraduation + 0.24413217290922
* EducationMaster + -0.42450599871892 * Marital_StatusDivorced + 0.48162905075885 *
Marital_StatusMarried + -0.26618507749283 * Marital_StatusSingle + 0.38053668740338 *
Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.12149136705075 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.97489696657001 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.70605220802968 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -1.07783206982379 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -1.00400706261511 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = 0.22600488314839 + H1x1_6 ;
MPRINT(EM_DIAGRAM):   H1x1_7 = 1.55642446968077 + H1x1_7 ;
MPRINT(EM_DIAGRAM):   _EPS = SQRT(CONSTANT('MACEPS')) ;
MPRINT(EM_DIAGRAM):   _REC_EPS = 1/_EPS ;
MPRINT(EM_DIAGRAM):   DROP _REC_EPS _EPS ;
MPRINT(EM_DIAGRAM):   IF H1x1_1 < _REC_EPS AND H1x1_1 > - _REC_EPS THEN H1x1_1 = H1x1_1 *
H1x1_1 ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_1 = _REC_EPS ;
MPRINT(EM_DIAGRAM):   IF H1x1_2 < _REC_EPS AND H1x1_2 > - _REC_EPS THEN H1x1_2 = H1x1_2 *
H1x1_2 ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_2 = _REC_EPS ;
MPRINT(EM_DIAGRAM):   IF H1x1_3 < _REC_EPS AND H1x1_3 > - _REC_EPS THEN H1x1_3 = H1x1_3 *
H1x1_3 ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_3 = _REC_EPS ;
MPRINT(EM_DIAGRAM):   IF H1x1_4 < _REC_EPS AND H1x1_4 > - _REC_EPS THEN H1x1_4 = H1x1_4 *
H1x1_4 ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_4 = _REC_EPS ;
MPRINT(EM_DIAGRAM):   IF H1x1_5 < _REC_EPS AND H1x1_5 > - _REC_EPS THEN H1x1_5 = H1x1_5 *
H1x1_5 ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_5 = _REC_EPS ;
MPRINT(EM_DIAGRAM):   IF H1x1_6 < _REC_EPS AND H1x1_6 > - _REC_EPS THEN H1x1_6 = H1x1_6 *
H1x1_6 ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_6 = _REC_EPS ;
MPRINT(EM_DIAGRAM):   IF H1x1_7 < _REC_EPS AND H1x1_7 > - _REC_EPS THEN H1x1_7 = H1x1_7 *
H1x1_7 ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_7 = _REC_EPS ;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
MPRINT(EM_DIAGRAM):   H1x1_7 = .;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   H1x2_1 = -1.36226288448745 * S_AcceptedCmpTotal + -1.3328616352886 *
S_Age + 1.25346137866034 * S_Frq + -1.21746243786295 * S_Income + 2.83911738158074 * S_Kidhome
+ -0.60784009102409 * S_Mnt + 1.57752173634223 * S_MntFishProducts + -0.26776567401075 *
S_MntFruits + 1.09584731081081 * S_MntGoldProds + 1.22333044103532 * S_MntMeatProducts +
0.42827942745016 * S_MntSweetProducts + 0.67813472792448 * S_MntWines + 0.56816492004798 *
S_MonthsAsCustomer + 0.58113470399079 * S_NumCatalogPurchases + 1.96719021971894 *
S_NumDealsPurchases + -0.44535354794671 * S_NumDistPurchases + -0.54827762736866 *
S_NumStorePurchases + 1.02703310241897 * S_NumWebPurchases + -0.12526997502601 *
S_NumWebVisitsMonth + -0.55803926383776 * S_RFMstat + 0.01819380776809 * S_RMntFrq +
0.651688575044 * S_Recency + 1.58682398186611 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -0.38064507857029 * S_AcceptedCmpTotal + -0.49661801158351 *
S_Age + -0.89589399799916 * S_Frq + -0.0121499288597 * S_Income + -0.48023022827846 *
S_Kidhome + -0.5183846206029 * S_Mnt + -3.13913899012334 * S_MntFishProducts +
-2.07291335687615 * S_MntFruits + 0.51019753905662 * S_MntGoldProds + 0.11458666377917 *
S_MntMeatProducts + -1.8499241966205 * S_MntSweetProducts + 0.23160544044172 * S_MntWines +
-0.48210626907943 * S_MonthsAsCustomer + 0.15500845227752 * S_NumCatalogPurchases +
1.34659447971131 * S_NumDealsPurchases + -0.51624251310423 * S_NumDistPurchases +
-1.283121574848 * S_NumStorePurchases + -1.83517806228926 * S_NumWebPurchases +
0.51321339475285 * S_NumWebVisitsMonth + -1.86431704283342 * S_RFMstat + -1.52065204326569 *
S_RMntFrq + -0.33186055095462 * S_Recency + -0.49524729407054 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.75774003934728 * S_AcceptedCmpTotal + -0.85312030825337 *
S_Age + -0.01726294458221 * S_Frq + 0.58598267983786 * S_Income + 1.30497766805554 * S_Kidhome
+ -0.84214135491022 * S_Mnt + 0.55305862453787 * S_MntFishProducts + 0.6488663613899 *
S_MntFruits + -0.83189439197558 * S_MntGoldProds + -0.07500050412653 * S_MntMeatProducts +
-0.06401928810253 * S_MntSweetProducts + 0.5940135658334 * S_MntWines + -0.04573352455984 *
S_MonthsAsCustomer + -1.53610650634069 * S_NumCatalogPurchases + 0.67492297345004 *
S_NumDealsPurchases + -0.40437875375926 * S_NumDistPurchases + 0.36322603681545 *
S_NumStorePurchases + -1.15315070635524 * S_NumWebPurchases + 1.20707272201156 *
S_NumWebVisitsMonth + 0.12192566357285 * S_RFMstat + -0.46711219170047 * S_RMntFrq +
1.89703582493259 * S_Recency + 1.07511942237188 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 0.62123819069495 * S_AcceptedCmpTotal + 0.03399237520702 *
S_Age + -0.01971421795338 * S_Frq + -0.54728266919056 * S_Income + -0.4634195771237 *
S_Kidhome + -1.19055247712911 * S_Mnt + 1.4307770729159 * S_MntFishProducts +
-0.83895281276374 * S_MntFruits + -0.48578798244317 * S_MntGoldProds + -0.2846617807101 *
S_MntMeatProducts + 0.70721686533987 * S_MntSweetProducts + 1.32824513551741 * S_MntWines +
-0.62654342755965 * S_MonthsAsCustomer + -0.97245161056543 * S_NumCatalogPurchases +
-0.41427983342148 * S_NumDealsPurchases + -0.22714305629205 * S_NumDistPurchases +
-0.78763182048862 * S_NumStorePurchases + -0.26669253451501 * S_NumWebPurchases +
-0.79601078616342 * S_NumWebVisitsMonth + -0.03863278696502 * S_RFMstat + 0.95011556103056 *
S_RMntFrq + 0.57184629262878 * S_Recency + -0.21560478702461 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 1.47906557745075 * S_AcceptedCmpTotal + -0.31060566334198 *
S_Age + 0.56472424389718 * S_Frq + 2.16541682726249 * S_Income + -0.34119803841059 * S_Kidhome
+ -0.53783050542796 * S_Mnt + 0.54954821448236 * S_MntFishProducts + -0.48449918837838 *
S_MntFruits + 0.29783052620672 * S_MntGoldProds + -0.15068954343013 * S_MntMeatProducts +
0.12733251381761 * S_MntSweetProducts + -2.46709166794296 * S_MntWines + -1.2011286508879 *
S_MonthsAsCustomer + -0.88194814936932 * S_NumCatalogPurchases + 0.7697882092212 *
S_NumDealsPurchases + 0.51864835453056 * S_NumDistPurchases + -1.18320366630444 *
S_NumStorePurchases + -0.6608394639529 * S_NumWebPurchases + -0.03948137707769 *
S_NumWebVisitsMonth + 1.01076462488608 * S_RFMstat + -0.91562280329354 * S_RMntFrq +
-1.07576669501238 * S_Recency + -0.5946628412106 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_6 = 0.42130900994246 * S_AcceptedCmpTotal + 1.64256522546546 *
S_Age + -0.31822237495441 * S_Frq + 0.39698710846967 * S_Income + -1.30075584525681 *
S_Kidhome + -1.74733472316294 * S_Mnt + -1.04423575539078 * S_MntFishProducts +
0.28025913700744 * S_MntFruits + 0.92062413073229 * S_MntGoldProds + 0.38487452173084 *
S_MntMeatProducts + 2.15808673418264 * S_MntSweetProducts + -0.5364274323591 * S_MntWines +
0.64447858852609 * S_MonthsAsCustomer + 0.33683873873337 * S_NumCatalogPurchases +
1.45707983202269 * S_NumDealsPurchases + 0.83341887728641 * S_NumDistPurchases +
-0.36664450469423 * S_NumStorePurchases + 0.63911579043339 * S_NumWebPurchases +
0.67144790303554 * S_NumWebVisitsMonth + -0.22124390112376 * S_RFMstat + 1.72222071547971 *
S_RMntFrq + -0.02323382627271 * S_Recency + -0.09494567508522 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_7 = 0.0903330772553 * S_AcceptedCmpTotal + 0.13217959089196 * S_Age
+ 0.93600629225871 * S_Frq + 1.23765169211392 * S_Income + 1.27732984858098 * S_Kidhome +
1.54889765360944 * S_Mnt + 0.84618173514761 * S_MntFishProducts + -0.32044356786958 *
S_MntFruits + -0.26357995597029 * S_MntGoldProds + 0.53649229087334 * S_MntMeatProducts +
1.46955866272889 * S_MntSweetProducts + -0.34260315437319 * S_MntWines + -1.70693604004836 *
S_MonthsAsCustomer + -0.4612555130737 * S_NumCatalogPurchases + 0.68491896063662 *
S_NumDealsPurchases + 0.5386312048592 * S_NumDistPurchases + 1.28108942503912 *
S_NumStorePurchases + -0.88282270505969 * S_NumWebPurchases + -0.66670958211416 *
S_NumWebVisitsMonth + 0.94315921733739 * S_RFMstat + 0.70533705858561 * S_RMntFrq +
0.23896687873405 * S_Recency + 0.66289635918858 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 0.22958861848016 * AcceptedCmp10 + -1.11069938765475 *
AcceptedCmp20 + 1.18563222829069 * AcceptedCmp30 + -0.97028253571173 * AcceptedCmp40 +
0.60850082670391 * AcceptedCmp50 + 0.31163990605418 * Complain0 + 1.10957053966326 *
HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -0.99409862826118 * AcceptedCmp10 + -0.76360093699992
* AcceptedCmp20 + 0.82772534103696 * AcceptedCmp30 + 1.74232000787449 * AcceptedCmp40 +
-1.37356239255127 * AcceptedCmp50 + 0.0919811154199 * Complain0 + -0.00220513515877 *
HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + -0.21003647134105 * AcceptedCmp10 + -0.08930317176477
* AcceptedCmp20 + -0.39109673162041 * AcceptedCmp30 + 1.14094450038946 * AcceptedCmp40 +
1.26041997788848 * AcceptedCmp50 + -0.10972130900569 * Complain0 + -0.99352598480407 *
HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 2.02630284432093 * AcceptedCmp10 + -2.50721904229276 *
AcceptedCmp20 + -1.31026450397446 * AcceptedCmp30 + -0.83440880266914 * AcceptedCmp40 +
-0.0570899805015 * AcceptedCmp50 + -0.55525351434733 * Complain0 + 0.27306601694081 *
HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + -0.18595284227194 * AcceptedCmp10 + -1.55973916517392
* AcceptedCmp20 + -3.81563768970049 * AcceptedCmp30 + -0.09331430915239 * AcceptedCmp40 +
0.76128118177142 * AcceptedCmp50 + -0.17283107047755 * Complain0 + -1.01028562804392 *
HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 + -1.21475169836565 * AcceptedCmp10 + 0.28748729216575 *
AcceptedCmp20 + 1.15908030413172 * AcceptedCmp30 + -0.05889528676549 * AcceptedCmp40 +
-0.41661363625562 * AcceptedCmp50 + -0.77939130028952 * Complain0 + 2.19510865765326 *
HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_7 = H1x2_7 + 0.87360423179644 * AcceptedCmp10 + -0.47867594186426 *
AcceptedCmp20 + -0.30325818223392 * AcceptedCmp30 + -0.96085556588297 * AcceptedCmp40 +
-0.19693158209969 * AcceptedCmp50 + -0.73731792634553 * Complain0 + -1.10021678806679 *
HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -1.17876013389516 * Education2n_Cycle +
-0.35670434275624 * EducationBasic + -0.12456502068616 * EducationGraduation +
-1.0620373133508 * EducationMaster + -3.97961426831865 * Marital_StatusDivorced +
0.00932639813867 * Marital_StatusMarried + 1.29310186574718 * Marital_StatusSingle +
1.60940802221114 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 0.58497813059595 * Education2n_Cycle +
0.98038586431321 * EducationBasic + -0.20442806724521 * EducationGraduation + 0.64973046142001
* EducationMaster + -0.30358516578188 * Marital_StatusDivorced + -0.96176709360703 *
Marital_StatusMarried + 1.26977690921649 * Marital_StatusSingle + -0.6681544336237 *
Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 0.42123479646947 * Education2n_Cycle +
0.22705854674045 * EducationBasic + 0.34794003687348 * EducationGraduation + 0.18356390207843
* EducationMaster + 0.55272671490757 * Marital_StatusDivorced + 0.1499239288334 *
Marital_StatusMarried + -0.46840941760604 * Marital_StatusSingle + 0.93706218273755 *
Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 0.85035585831723 * Education2n_Cycle +
-0.70680576286167 * EducationBasic + -0.24487676912938 * EducationGraduation +
-0.33030970028481 * EducationMaster + -1.240735370138 * Marital_StatusDivorced +
-1.20089294883599 * Marital_StatusMarried + 0.57492674426149 * Marital_StatusSingle +
1.44189292990255 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + -0.62461434654579 * Education2n_Cycle +
-0.34090423965869 * EducationBasic + -0.82493401834396 * EducationGraduation +
-1.09423426649553 * EducationMaster + 1.05435442049802 * Marital_StatusDivorced +
0.3571256349717 * Marital_StatusMarried + -0.44741267266578 * Marital_StatusSingle +
0.02948931507994 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 + 0.09620501635178 * Education2n_Cycle +
-0.54617424401993 * EducationBasic + -0.43305038404558 * EducationGraduation +
0.05453229059502 * EducationMaster + 2.06026721980778 * Marital_StatusDivorced +
-0.49583258645166 * Marital_StatusMarried + -1.14824900824474 * Marital_StatusSingle +
0.57690093967839 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_7 = H1x2_7 + -0.31251046777442 * Education2n_Cycle +
-1.69272922870259 * EducationBasic + -0.08682253496961 * EducationGraduation +
0.58241644186309 * EducationMaster + -1.1890908607447 * Marital_StatusDivorced +
-0.46668809907123 * Marital_StatusMarried + 1.20342564763422 * Marital_StatusSingle +
-1.75740662969578 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -0.14973719401763 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -0.56259582407931 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = 0.42132483186492 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 1.1996209421335 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 0.95827018478011 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_6 = 1.88844492435344 + H1x2_6 ;
MPRINT(EM_DIAGRAM):   H1x2_7 = 0.77184516675485 + H1x2_7 ;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   H1x2_1 = EXP(MIN(H1x2_1 , _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x2_2 = EXP(MIN(H1x2_2 , _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x2_3 = EXP(MIN(H1x2_3 , _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x2_4 = EXP(MIN(H1x2_4 , _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x2_5 = EXP(MIN(H1x2_5 , _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x2_6 = EXP(MIN(H1x2_6 , _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x2_7 = EXP(MIN(H1x2_7 , _EXP_BAR));
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
MPRINT(EM_DIAGRAM):   H1x2_6 = .;
MPRINT(EM_DIAGRAM):   H1x2_7 = .;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.10431866610268 * H1x1_1 + -0.48100701431081 * H1x1_2 +
1.1561061025832 * H1x1_3 + -1.23928879501664 * H1x1_4 + 1.22057275321508 * H1x1_5 +
0.21972347471711 * H1x1_6 + -0.98998788335495 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 + -4.9985478923183E-10 * H1x2_1 +
2.7724573038604E-6 * H1x2_2 + -3.3263781208921E-6 * H1x2_3 + 1.90169432265E-8 * H1x2_4 +
-9.7460294571708E-9 * H1x2_5 + -2.0885179583168E-6 * H1x2_6 + 3.038660449943E-8 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.34500119066237 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ********************************;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   ********************************;
MPRINT(EM_DIAGRAM):   drop H1x1_1 H1x1_2 H1x1_3 H1x1_4 H1x1_5 H1x1_6 H1x1_7 H1x2_1 H1x2_2
H1x2_3 H1x2_4 H1x2_5 H1x2_6 H1x2_7 ;
MPRINT(EM_DIAGRAM):   drop S_:;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural12;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural12;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   drop AutoNeural12_P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural12_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural12_P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural12_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural12;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   length AutoNeural12_WARN_ $4;
MPRINT(EM_DIAGRAM):   drop AutoNeural12_WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural12_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TOOL: Ensemble;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * NODE: Ensmbl36;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl36: Average Posteriors of 7 models;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   P_DepVar1 = ( AutoNeural6_P_DepVar1 + AutoNeural7_P_DepVar1 +
AutoNeural8_P_DepVar1 + AutoNeural10_P_DepVar1 + AutoNeural9_P_DepVar1 +
AutoNeural11_P_DepVar1 + AutoNeural12_P_DepVar1 )/7;
MPRINT(EM_DIAGRAM):   P_DepVar0 = ( AutoNeural6_P_DepVar0 + AutoNeural7_P_DepVar0 +
AutoNeural8_P_DepVar0 + AutoNeural10_P_DepVar0 + AutoNeural9_P_DepVar0 +
AutoNeural11_P_DepVar0 + AutoNeural12_P_DepVar0 )/7;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl36: Computing Classification Vars;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   length I_DepVar $32;
WARNING: Length of character variable I_DepVar has already been set.
         Use the LENGTH statement as the very first statement in the DATA STEP to declare the
         length of a character variable.
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar';
MPRINT(EM_DIAGRAM):   length _format $200;
MPRINT(EM_DIAGRAM):   drop _format;
MPRINT(EM_DIAGRAM):   _format= ' ';
MPRINT(EM_DIAGRAM):   _p_= 0;
MPRINT(EM_DIAGRAM):   drop _p_;
MPRINT(EM_DIAGRAM):   if P_DepVar1 > _p_ then do;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar1;
MPRINT(EM_DIAGRAM):   _format= '1';
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if P_DepVar0 > _p_ then do;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar0;
MPRINT(EM_DIAGRAM):   _format= '0';
MPRINT(EM_DIAGRAM):   end;
MPRINT(DMNORMCP):   I_DepVar=dmnorm(_format,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl36: Producing Unformatted variable;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   label U_DepVar = "Unnormalized Into: DepVar";
MPRINT(EM_DIAGRAM):   if I_DepVar = '1' then U_DepVar = 1;
MPRINT(EM_DIAGRAM):   else if I_DepVar = '0' then U_DepVar = 0;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl36: Computing _WARN_ Variable;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings';
MPRINT(EM_DIAGRAM):   _WARN_ = '';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL6_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL6_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL6_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL6_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL7_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL7_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL7_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL7_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL8_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL8_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL8_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL8_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL10_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL10_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL10_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL10_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL9_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL9_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL9_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL9_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL11_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL11_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL11_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL11_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL12_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL12_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL12_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL12_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TOOL: Score Node;
MPRINT(EM_DIAGRAM):   * TYPE: ASSESS;
MPRINT(EM_DIAGRAM):   * NODE: Score;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Score: Creating Fixed Names;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   LABEL EM_EVENTPROBABILITY = 'Probability for level 1 of DepVar';
MPRINT(EM_DIAGRAM):   EM_EVENTPROBABILITY = P_DepVar1;
MPRINT(EM_DIAGRAM):   LABEL EM_PROBABILITY = 'Probability of Classification';
MPRINT(EM_DIAGRAM):   EM_PROBABILITY = max( P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   LENGTH EM_CLASSIFICATION
MPRINT(DMNORLEN):   $32
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   LABEL EM_CLASSIFICATION = "Prediction for DepVar";
MPRINT(EM_DIAGRAM):   EM_CLASSIFICATION = I_DepVar;
2551001   +drop
2551002   +'AcceptedCmp1'n
2551003   +'AcceptedCmp2'n
2551004   +'AcceptedCmp3'n
2551005   +'AcceptedCmp4'n
2551006   +'AcceptedCmp5'n
2551007   +'Complain'n
2551008   +'Custid'n
2551009   +'DepVar'n
2551010   +'Dt_Customer'n
2551011   +'Education'n
2551012   +'Element1'n
2551013   +'Element2'n
2551014   +'Element3'n
2551015   +'Element4'n
2551016   +'Group'n
2551017   +'Income'n
2551018   +'Kidhome'n
2551019   +'Marital_Status'n
2551020   +'MntFishProducts'n
2551021   +'MntFruits'n
2551022   +'MntGoldProds'n
2551023   +'MntMeatProducts'n
2551024   +'MntSweetProducts'n
2551025   +'MntWines'n
2551026   +'NumCatalogPurchases'n
2551027   +'NumDealsPurchases'n
2551028   +'NumStorePurchases'n
2551029   +'NumWebPurchases'n
2551030   +'NumWebVisitsMonth'n
2551031   +'Recency'n
2551032   +'Teenhome'n
2551033   +'Year_Birth'n
2551034   +'Z_CostContact'n
2551035   +'Z_Revenue'n
2551036   +;
MPRINT(EM_DIAGRAM):   drop 'AcceptedCmp1'n 'AcceptedCmp2'n 'AcceptedCmp3'n 'AcceptedCmp4'n
'AcceptedCmp5'n 'Complain'n 'Custid'n 'DepVar'n 'Dt_Customer'n 'Education'n 'Element1'n
'Element2'n 'Element3'n 'Element4'n 'Group'n 'Income'n 'Kidhome'n 'Marital_Status'n
'MntFishProducts'n 'MntFruits'n 'MntGoldProds'n 'MntMeatProducts'n 'MntSweetProducts'n
'MntWines'n 'NumCatalogPurchases'n 'NumDealsPurchases'n 'NumStorePurchases'n
'NumWebPurchases'n 'NumWebVisitsMonth'n 'Recency'n 'Teenhome'n 'Year_Birth'n 'Z_CostContact'n
'Z_Revenue'n ;
MPRINT(EM_DIAGRAM):   if _N_=1 then do;
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   stop;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   options validvarname=V7;
MPRINT(EM_DIAGRAM):   proc contents data =EMWS8.Score_EMOUTPUTVARS noprint
out=EMWS8.Score_EMOUTPUTVARS;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _drpvvn;
MPRINT(EM_DIAGRAM):   filename _drpfrf;
2551047    data EMWS8.Score_EMOUTPUTVARS;
MPRINT(EM_DIAGRAM):    data EMWS8.Score_EMOUTPUTVARS;
2551048    set EMWS8.Score_EMOUTPUTVARS(keep=name type label rename=(type=itype));
MPRINT(EM_DIAGRAM):   set EMWS8.Score_EMOUTPUTVARS(keep=name type label rename=(type=itype));
2551049    length FUNCTION $32 name_prefix $8;
MPRINT(EM_DIAGRAM):   length FUNCTION $32 name_prefix $8;
2551050    if itype = 1 then type = 'N';
MPRINT(EM_DIAGRAM):   if itype = 1 then type = 'N';
2551051    else type = 'C';
MPRINT(EM_DIAGRAM):   else type = 'C';
2551052    drop name_prefix itype;
MPRINT(EM_DIAGRAM):   drop name_prefix itype;
2551053    if index(name, '_WARN_')=1 then FUNCTION = 'ASSESS';
MPRINT(EM_DIAGRAM):   if index(name, '_WARN_')=1 then FUNCTION = 'ASSESS';
2551054    else if upcase(name) in('EM_PREDICTION', 'EM_EVENTPROBABILITY', 'EM_PROBABILITY')
2551054  ! then FUNCTION = 'PREDICT';
MPRINT(EM_DIAGRAM):   else if upcase(name) in('EM_PREDICTION', 'EM_EVENTPROBABILITY',
'EM_PROBABILITY') then FUNCTION = 'PREDICT';
2551055    else if upcase(name) = 'EM_CLASSIFICATION' then FUNCTION = 'CLASSIFICATION';
MPRINT(EM_DIAGRAM):   else if upcase(name) = 'EM_CLASSIFICATION' then FUNCTION =
'CLASSIFICATION';
2551056    else if upcase(name) = 'EM_DECISION' then FUNCTION = 'DECISION';
MPRINT(EM_DIAGRAM):   else if upcase(name) = 'EM_DECISION' then FUNCTION = 'DECISION';
2551057    else if upcase(name) in('EM_PROFIT', 'EM_LOSS', 'EM_VALUETARGET', 'EM_CLASSTARGET')
2551057  ! then FUNCTION = 'ASSESS' /* removed EM_ROI */
2551058    ;
MPRINT(EM_DIAGRAM):   else if upcase(name) in('EM_PROFIT', 'EM_LOSS', 'EM_VALUETARGET',
'EM_CLASSTARGET') then FUNCTION = 'ASSESS' ;
2551059    else do;
MPRINT(EM_DIAGRAM):   else do;
2551060    name_prefix = scan(NAME, 1, '_');
MPRINT(EM_DIAGRAM):   name_prefix = scan(NAME, 1, '_');
2551061    if name_prefix in('F', 'I', 'U') then FUNCTION = 'CLASSIFICATION';
MPRINT(EM_DIAGRAM):   if name_prefix in('F', 'I', 'U') then FUNCTION = 'CLASSIFICATION';
2551062    else if name_prefix in('P', 'V') then FUNCTION = 'PREDICT';
MPRINT(EM_DIAGRAM):   else if name_prefix in('P', 'V') then FUNCTION = 'PREDICT';
2551063    else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 'RAS', 'RAT') then
2551063  !  FUNCTION = 'RESIDUAL';
MPRINT(EM_DIAGRAM):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 'RAS',
'RAT') then FUNCTION = 'RESIDUAL';
2551064    else if name_prefix ='D' then FUNCTION = 'DECISION';
MPRINT(EM_DIAGRAM):   else if name_prefix ='D' then FUNCTION = 'DECISION';
2551065    else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 'ROI', 'IC') then
2551065  ! FUNCTION = 'ASSESS';
MPRINT(EM_DIAGRAM):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 'ROI',
'IC') then FUNCTION = 'ASSESS';
2551066    else FUNCTION = 'TRANSFORM';
MPRINT(EM_DIAGRAM):   else FUNCTION = 'TRANSFORM';
2551067    end;
MPRINT(EM_DIAGRAM):   end;
2551068    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 18 observations read from the data set EMWS8.SCORE_EMOUTPUTVARS.
NOTE: The data set EMWS8.SCORE_EMOUTPUTVARS has 18 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2551069    proc sort data=EMWS8.Ensmbl36_CMeta_TRAIN out=WORK.META(KEEP=NAME CREATOR);
MPRINT(EM_DIAGRAM):    proc sort data=EMWS8.Ensmbl36_CMeta_TRAIN out=WORK.META(KEEP=NAME
CREATOR);
2551070    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2551071    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set EMWS8.ENSMBL36_CMETA_TRAIN.
NOTE: The data set WORK.META has 44 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2551072    proc sort data=EMWS8.Score_EMOUTPUTVARS;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Score_EMOUTPUTVARS;
2551073    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2551074    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 18 observations read from the data set EMWS8.SCORE_EMOUTPUTVARS.
NOTE: The data set EMWS8.SCORE_EMOUTPUTVARS has 18 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2551075    data EMWS8.Score_EMOUTPUTVARS;
MPRINT(EM_DIAGRAM):   data EMWS8.Score_EMOUTPUTVARS;
2551076    merge WORK.META EMWS8.Score_EMOUTPUTVARS(in=_a);
MPRINT(EM_DIAGRAM):   merge WORK.META EMWS8.Score_EMOUTPUTVARS(in=_a);
2551077    label CREATOR = "%sysfunc(sasmsg(sashelp.dmine,  meta_creator_vlabel ,  NOQUOTE))"
2551077  ! FUNCTION = "%sysfunc(sasmsg(sashelp.dmine,  meta_function_vlabel ,  NOQUOTE))" TYPE
2551077  ! = "%sysfunc(sasmsg(sashelp.dmine,  meta_type_vlabel ,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label CREATOR = "Creator" FUNCTION = "Function" TYPE = "Type";
2551078    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2551079    if NAME =: 'EM_' and CREATOR = '' then CREATOR = "Score";
MPRINT(EM_DIAGRAM):   if NAME =: 'EM_' and CREATOR = '' then CREATOR = "Score";
2551080    if _a then output;
MPRINT(EM_DIAGRAM):   if _a then output;
2551081    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set WORK.META.
NOTE: There were 18 observations read from the data set EMWS8.SCORE_EMOUTPUTVARS.
NOTE: The data set EMWS8.SCORE_EMOUTPUTVARS has 18 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2551082    %let _cn = %sysfunc(getoption(CENTER));
2551083    %let _nb = %sysfunc(getoption(NUMBER));
2551084    options nonumber nocenter;
MPRINT(EM_DIAGRAM):    options nonumber nocenter;
2551085    title;
MPRINT(EM_DIAGRAM):   title;
2551086    proc print data=EMWS8.Score_EMINPUTVARS noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.Score_EMINPUTVARS noobs label;
2551087    label NAME = "%sysfunc(sasmsg(sashelp.dmine,  meta_name_vlabel ,  NOQUOTE))" CREATOR
2551087  !  = "%sysfunc(sasmsg(sashelp.dmine,  meta_creator_vlabel ,  NOQUOTE))" LABEL =
2551087  ! "%sysfunc(sasmsg(sashelp.dmine,  meta_label_vlabel ,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label NAME = "Variable Name" CREATOR = "Creator" LABEL = "Label";
2551088    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
2551089    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_scoreInputVariables_title, NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Score Input Variables";
MPRINT(EM_DIAGRAM):   run;
2551090    run;
 
NOTE: There were 26 observations read from the data set EMWS8.SCORE_EMINPUTVARS.
NOTE: The PROCEDURE PRINT printed page 2069.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2551091    title10;
MPRINT(EM_DIAGRAM):   title10;
2551092    options &_cn &_nb;
MPRINT(EM_DIAGRAM):   options NOCENTER NONUMBER;
2551093    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
2551094    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
2551095    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
2551096    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2551097    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
2551098    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
2551099    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
2551100    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2551101    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2551102    create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp6 p,
2551102  ! EMWS8.Trans_EMSCOREVAR p2 where substr(upcase(p.LHS), 1, 3) ='EM_' or
2551102  ! (upcase(p.LHS)=upcase(p2.NAME)) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp6
p, EMWS8.Trans_EMSCOREVAR p2 where substr(upcase(p.LHS), 1, 3) ='EM_' or
(upcase(p.LHS)=upcase(p2.NAME)) order by p.lhs;
NOTE: The execution of this query involves performing one or more Cartesian product joins that
      can not be optimized.
NOTE: Table WORK._CODEVAR5 created, with 4 rows and 3 columns.
 
2551103    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2551104    data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
2551105    set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
2551106    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 4 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 4 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2551107    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
2551108    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
2551109    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
2551110    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2551111    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
2551112    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
2551113    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
2551114    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2551115    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2551116    create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp6 p,
2551116  ! EMWS8.Trans_EMSCOREVAR p2 where substr(upcase(p.LHS), 1, 3) ='EM_' or
2551116  ! (upcase(p.LHS)=upcase(p2.NAME)) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp6
p, EMWS8.Trans_EMSCOREVAR p2 where substr(upcase(p.LHS), 1, 3) ='EM_' or
(upcase(p.LHS)=upcase(p2.NAME)) order by p.lhs;
NOTE: The execution of this query involves performing one or more Cartesian product joins that
      can not be optimized.
NOTE: Table WORK._CODEVAR5 created, with 4 rows and 3 columns.
 
2551117    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
2551118    data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
2551119    set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
2551120    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 4 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 4 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2551121    %let _cn = %sysfunc(getoption(CENTER));
2551122    %let _nb = %sysfunc(getoption(NUMBER));
2551123    options nonumber nocenter;
MPRINT(EM_DIAGRAM):    options nonumber nocenter;
2551124    title;
MPRINT(EM_DIAGRAM):   title;
2551125    proc print data=EMWS8.Score_EMOUTPUTVARS noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.Score_EMOUTPUTVARS noobs label;
2551126    var NAME FUNCTION CREATOR LABEL;
MPRINT(EM_DIAGRAM):   var NAME FUNCTION CREATOR LABEL;
2551127    label NAME = "%sysfunc(sasmsg(sashelp.dmine,  meta_name_vlabel ,    NOQUOTE))"
2551127  ! FUNCTION = "%sysfunc(sasmsg(sashelp.dmine,  meta_function_vlabel ,    NOQUOTE))"
2551127  ! CREATOR = "%sysfunc(sasmsg(sashelp.dmine,  meta_creator_vlabel , NOQUOTE))" LABEL =
2551128       "%sysfunc(sasmsg(sashelp.dmine,  meta_label_vlabel ,   NOQUOTE))";
MPRINT(EM_DIAGRAM):   label NAME = "Variable Name" FUNCTION = "Function" CREATOR = "Creator"
LABEL = "Label";
2551129    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
2551130    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_scoreOutputVariables_title, NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Score Output Variables";
MPRINT(EM_DIAGRAM):   run;
2551131    run;
 
NOTE: There were 18 observations read from the data set EMWS8.SCORE_EMOUTPUTVARS.
NOTE: The PROCEDURE PRINT printed page 2070.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2551132    title10;
MPRINT(EM_DIAGRAM):   title10;
2551133    options &_cn &_nb;
MPRINT(EM_DIAGRAM):   options NOCENTER NONUMBER;
2551134    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
2551135    * Score: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * Score: Computing metadata for TRAIN data;
2551136    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
 
NOTE: View EMWS8.SCORE_TRAIN.VIEW used (Total process time):
      real time           0.08 seconds
      cpu time            0.06 seconds
 
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta
"C:\\predictive-models-project\Workspaces\EMWS8\Score\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS8.Score_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS8.Score_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS8.Score_TRAIN out=WORK.M2MYCQNS noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2MYCQNS;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20
INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M2MYCQNS(keep=name type length label format formatl
formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then format = strip(format)!!strip(put(formatl,
best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd,
best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then informat =
strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl,
best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2MYCQNS;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M2MYCQNS;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M1MIPUED NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1MIPUED;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M1MIPUED;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3S5T8NY(keep=NAME ATTR);
The SAS System
 
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M1MIPUED;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1MIPUED;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32
FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M1MIPUED;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN"
"MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO"
"QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" "YEAR" "YYMMDD" "YYMON"
"YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD"
"EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" ))
formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype =
"DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" ))
formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT"
"NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB"
"SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType =
"DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then
level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA',
'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W',
'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_
('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL',
'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT',
'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1MIPUED;
MPRINT(EMADVISECOLUMNS):   set WORK.M1MIPUED;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL=
"Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY=
"Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower limit" UPPERLIMIT=
"Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL=
"Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Ensmbl36_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Ensmbl36_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Score_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT
LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "Score";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Score: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   if NAME = "I_DepVar" then ROLE = 'REJECTED';
MPRINT(EM_DIAGRAM):   if NAME = "P_DepVar0" then ROLE = 'REJECTED';
MPRINT(EM_DIAGRAM):   if NAME = "P_DepVar1" then ROLE = 'REJECTED';
MPRINT(EM_DIAGRAM):   if NAME = "EM_CLASSIFICATION" then LEVEL = 'NOMINAL';
MPRINT(EM_DIAGRAM):   else if NAME = "EM_PREDICTION" then LEVEL = 'INTERVAL';
MPRINT(EM_DIAGRAM):   else if NAME = "EM_PROBABILITY" then LEVEL = 'INTERVAL';
MPRINT(EM_DIAGRAM):   else if NAME = "EM_EVENTPROBABILITY" then LEVEL = 'INTERVAL';
MPRINT(EM_DIAGRAM):   else if NAME = "EM_DECISION" then LEVEL = 'NOMINAL';
MPRINT(EM_DIAGRAM):   else if NAME = "EM_PROFIT" then LEVEL = 'INTERVAL';
MPRINT(EM_DIAGRAM):   else if NAME = "EM_SEGMENT" then LEVEL = 'NOMINAL';
MPRINT(EM_DIAGRAM):   else if NAME = "EM_VALUETARGET" then LEVEL = 'INTERVAL';
MPRINT(EM_DIAGRAM):   else if NAME = "EM_CLASSTARGET" then LEVEL = 'BINARY';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
NOTE: View EMWS8.SCORE_TRAIN.VIEW used (Total process time):
      real time           0.08 seconds
      cpu time            0.07 seconds
 
NOTE: View EMWS8.SCORE_VALIDATE.VIEW used (Total process time):
      real time           0.08 seconds
      cpu time            0.09 seconds
 
2551447    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
2551448    * Score: Computing metadata for SCORE data;
MPRINT(EM_DIAGRAM):   * Score: Computing metadata for SCORE data;
2551449    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
 
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for SCORE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta
"C:\\predictive-models-project\Workspaces\EMWS8\Score\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS8.Score_SCORE out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS8.Score_SCORE');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options fmterr;
MPRINT(EMADVISECOLUMNS):   data _metaTestView;
MPRINT(EMADVISECOLUMNS):   set EMWS8.Score_SCORE;
MPRINT(EMADVISECOLUMNS):   if _N_=1 then do;
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   stop;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS8.Score_SCORE out=WORK.M2WOSQ3I noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2WOSQ3I;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20
INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M2WOSQ3I(keep=name type length label format formatl
formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then format = strip(format)!!strip(put(formatl,
best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd,
best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then informat =
strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl,
best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2WOSQ3I;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M2WOSQ3I;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M1KF67PY NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1KF67PY;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M1KF67PY;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2SRHZE1(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M1KF67PY;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1KF67PY;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32
FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M1KF67PY;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN"
"MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO"
"QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" "YEAR" "YYMMDD" "YYMON"
"YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD"
"EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" ))
formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype =
"DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" ))
formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT"
"NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB"
"SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType =
"DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then
level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA',
'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W',
'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_
('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL',
'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT',
'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1KF67PY;
MPRINT(EMADVISECOLUMNS):   set WORK.M1KF67PY;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL=
"Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY=
"Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower limit" UPPERLIMIT=
"Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL=
"Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.FIMPORT2_train noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.FIMPORT2_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Score_CMeta_SCORE;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT
LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "Score";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Score: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   if NAME = "I_DepVar" then ROLE = 'REJECTED';
MPRINT(EM_DIAGRAM):   if NAME = "P_DepVar0" then ROLE = 'REJECTED';
MPRINT(EM_DIAGRAM):   if NAME = "P_DepVar1" then ROLE = 'REJECTED';
MPRINT(EM_DIAGRAM):   if NAME = "EM_CLASSIFICATION" then LEVEL = 'NOMINAL';
MPRINT(EM_DIAGRAM):   else if NAME = "EM_PREDICTION" then LEVEL = 'INTERVAL';
MPRINT(EM_DIAGRAM):   else if NAME = "EM_PROBABILITY" then LEVEL = 'INTERVAL';
MPRINT(EM_DIAGRAM):   else if NAME = "EM_EVENTPROBABILITY" then LEVEL = 'INTERVAL';
MPRINT(EM_DIAGRAM):   else if NAME = "EM_DECISION" then LEVEL = 'NOMINAL';
MPRINT(EM_DIAGRAM):   else if NAME = "EM_PROFIT" then LEVEL = 'INTERVAL';
MPRINT(EM_DIAGRAM):   else if NAME = "EM_SEGMENT" then LEVEL = 'NOMINAL';
MPRINT(EM_DIAGRAM):   else if NAME = "EM_VALUETARGET" then LEVEL = 'INTERVAL';
MPRINT(EM_DIAGRAM):   else if NAME = "EM_CLASSTARGET" then LEVEL = 'BINARY';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "20. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "17.40 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Report Log
Date:                20. April 2016
Time:                17.40 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O1CUWFZI
"C:\\predictive-models-project\Workspaces\EMWS8\Score\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O1CUWFZI new;
MPRINT(EM_DIAGRAM):   run;
2551791    data WORK.SCOREFREQMETA;
MPRINT(EM_DIAGRAM):    data WORK.SCOREFREQMETA;
2551792    length NAME $32 ROLE $32 LEVEL $8;
MPRINT(EM_DIAGRAM):   length NAME $32 ROLE $32 LEVEL $8;
2551793    NAME="I_DepVar";
MPRINT(EM_DIAGRAM):   NAME="I_DepVar";
2551794    ROLE="INPUT";
MPRINT(EM_DIAGRAM):   ROLE="INPUT";
2551795    LEVEL="NOMINAL";
MPRINT(EM_DIAGRAM):   LEVEL="NOMINAL";
2551796    TYPE="C";
MPRINT(EM_DIAGRAM):   TYPE="C";
2551797    output;
MPRINT(EM_DIAGRAM):   output;
2551798    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK.SCOREFREQMETA has 1 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2551799    data WORK.SCOREHISTMETA;
MPRINT(EM_DIAGRAM):    data WORK.SCOREHISTMETA;
2551800    length NAME $32 ROLE $32 LEVEL $8;
MPRINT(EM_DIAGRAM):   length NAME $32 ROLE $32 LEVEL $8;
2551801    NAME="P_DepVar1";
MPRINT(EM_DIAGRAM):   NAME="P_DepVar1";
2551802    ROLE="INPUT";
MPRINT(EM_DIAGRAM):   ROLE="INPUT";
2551803    LEVEL="INTERVAL";
MPRINT(EM_DIAGRAM):   LEVEL="INTERVAL";
2551804    TYPE="N";
MPRINT(EM_DIAGRAM):   TYPE="N";
2551805    output;
MPRINT(EM_DIAGRAM):   output;
2551806    NAME="P_DepVar0";
MPRINT(EM_DIAGRAM):   NAME="P_DepVar0";
2551807    ROLE="INPUT";
MPRINT(EM_DIAGRAM):   ROLE="INPUT";
2551808    LEVEL="INTERVAL";
MPRINT(EM_DIAGRAM):   LEVEL="INTERVAL";
2551809    TYPE="N";
MPRINT(EM_DIAGRAM):   TYPE="N";
2551810    output;
MPRINT(EM_DIAGRAM):   output;
2551811    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK.SCOREHISTMETA has 2 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
NOTE: View EMWS8.ENSMBL36_TRAIN.VIEW used (Total process time):
      real time           0.07 seconds
      cpu time            0.07 seconds
 
2551812    ods listing close;
MPRINT(EM_DIAGRAM):    ods listing close;
2551813    ods output onewayfreqs=WORK.TEMPFREQ;
MPRINT(EM_DIAGRAM):   ods output onewayfreqs=WORK.TEMPFREQ;
2551814    proc freq data = EMWS8.Ensmbl36_TRAIN order=formatted addnames;
MPRINT(EM_DIAGRAM):   proc freq data = EMWS8.Ensmbl36_TRAIN order=formatted addnames;
2551815    table I_DepVar / missing;
MPRINT(EM_DIAGRAM):   table I_DepVar / missing;
2551816    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2374 observations read from the data set EMWS8.PART_TRAIN.
NOTE: There were 2374 observations read from the data set EMWS8.META_TRAIN.
NOTE: View EMWS8.ENSMBL36_TRAIN.VIEW used (Total process time):
      real time           0.30 seconds
      cpu time            0.31 seconds
 
NOTE: There were 2374 observations read from the data set EMWS8.AUTONEURAL6_TRAIN.
NOTE: The data set WORK.TEMPFREQ has 2 observations and 8 variables.
NOTE: There were 2374 observations read from the data set EMWS8.ENSMBL36_TRAIN.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.32 seconds
      cpu time            0.31 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
2551817    quit;
2551818    ods listing;
MPRINT(EM_DIAGRAM):   ods listing;
2551819    data WORK.Score_BAR(keep=_VARIABLE_ TYPE COUNT PERCENT _X_ _XLABEL_);
MPRINT(EM_DIAGRAM):    data WORK.Score_BAR(keep=_VARIABLE_ TYPE COUNT PERCENT _X_ _XLABEL_);
2551820    label _VARIABLE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel, NOQUOTE))"
2551820  ! Type = "%sysfunc(sasmsg(sashelp.dmine, rpt_type_vlabel,         NOQUOTE))" _X_ =
2551820  ! "%sysfunc(sasmsg(sashelp.dmine, rpt_numValue_vlabel, NOQUOTE))" _XLABEL_ =
2551821       "%sysfunc(sasmsg(sashelp.dmine, rpt_fmtValue_vlabel ,    NOQUOTE))" COUNT =
2551821  ! "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel,        NOQUOTE))" PERCENT =
2551821  ! "%sysfunc(sasmsg(sashelp.dmine, rpt_percent_vlabel,      NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _VARIABLE_ = "Variable" Type = "Type" _X_ = "Numeric Value"
_XLABEL_ = "Formatted Value" COUNT = "Frequency Count" PERCENT = "Percent";
2551822    dsid = open("WORK.TEMPFREQ");
MPRINT(EM_DIAGRAM):   dsid = open("WORK.TEMPFREQ");
2551823    varnum = varnum(dsid, 'VARIABLE');
MPRINT(EM_DIAGRAM):   varnum = varnum(dsid, 'VARIABLE');
2551824    freqnum = varnum(dsid, 'FREQUENCY');
MPRINT(EM_DIAGRAM):   freqnum = varnum(dsid, 'FREQUENCY');
2551825    pvarnum = varnum(dsid, 'PERCENT');
MPRINT(EM_DIAGRAM):   pvarnum = varnum(dsid, 'PERCENT');
2551826    typenum = varnum(dsid, '_TYPE_');
MPRINT(EM_DIAGRAM):   typenum = varnum(dsid, '_TYPE_');
2551827    length _VARIABLE_ $32 TYPE $1 _XLABEL_ $32;
MPRINT(EM_DIAGRAM):   length _VARIABLE_ $32 TYPE $1 _XLABEL_ $32;
2551828    do while(^fetch(dsid));
MPRINT(EM_DIAGRAM):   do while(^fetch(dsid));
2551829    _VARIABLE_ = strip(getvarc(dsid, varnum));
MPRINT(EM_DIAGRAM):   _VARIABLE_ = strip(getvarc(dsid, varnum));
2551830    count = getvarn(dsid, freqnum);
MPRINT(EM_DIAGRAM):   count = getvarn(dsid, freqnum);
2551831    percent= getvarn(dsid, pvarnum);
MPRINT(EM_DIAGRAM):   percent= getvarn(dsid, pvarnum);
2551832    vvarnum = varnum(dsid, _VARIABLE_);
MPRINT(EM_DIAGRAM):   vvarnum = varnum(dsid, _VARIABLE_);
2551833    type = vartype(dsid, vvarnum);
MPRINT(EM_DIAGRAM):   type = vartype(dsid, vvarnum);
2551834    fvarnum = varnum(dsid, 'F_'!!substr(_VARIABLE_, 1, 30));
MPRINT(EM_DIAGRAM):   fvarnum = varnum(dsid, 'F_'!!substr(_VARIABLE_, 1, 30));
2551835    _XLABEL_ = left(getvarc(dsid, fvarnum));
MPRINT(EM_DIAGRAM):   _XLABEL_ = left(getvarc(dsid, fvarnum));
2551836    _X_ = .;
MPRINT(EM_DIAGRAM):   _X_ = .;
2551837    if TYPE eq 'N' then _X_ = getvarn(dsid, vvarnum);
MPRINT(EM_DIAGRAM):   if TYPE eq 'N' then _X_ = getvarn(dsid, vvarnum);
2551838    output;
MPRINT(EM_DIAGRAM):   output;
2551839    end;
MPRINT(EM_DIAGRAM):   end;
2551840    dsid = close(dsid);
MPRINT(EM_DIAGRAM):   dsid = close(dsid);
2551841    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK.SCORE_BAR has 2 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2551842    proc sort data=WORK.Score_BAR NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.Score_BAR NOTHREADS;
2551843    by _VARIABLE_;
MPRINT(EM_DIAGRAM):   by _VARIABLE_;
2551844    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set WORK.SCORE_BAR.
NOTE: The data set WORK.SCORE_BAR has 2 observations and 6 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2551845    proc sort data=WORK.M1TG0LSK;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.M1TG0LSK;
2551846    by Name;
MPRINT(EM_DIAGRAM):   by Name;
2551847    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK.M1TG0LSK.
NOTE: The data set WORK.M1TG0LSK has 1 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2551848    data WORK.Score_BAR;
MPRINT(EM_DIAGRAM):   data WORK.Score_BAR;
2551849    merge WORK.Score_BAR(in=_a) WORK.M1TG0LSK(keep=Name Role rename=(Name=_Variable_));
MPRINT(EM_DIAGRAM):   merge WORK.Score_BAR(in=_a) WORK.M1TG0LSK(keep=Name Role
rename=(Name=_Variable_));
2551850    by _Variable_;
MPRINT(EM_DIAGRAM):   by _Variable_;
2551851    label Role = "%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel ,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label Role = "Role";
2551852    if _a then output;
MPRINT(EM_DIAGRAM):   if _a then output;
2551853    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set WORK.SCORE_BAR.
NOTE: There were 1 observations read from the data set WORK.M1TG0LSK.
NOTE: The data set WORK.SCORE_BAR has 2 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2551854    data WORK.Score_BAR;
MPRINT(EM_DIAGRAM):    data WORK.Score_BAR;
2551855    length DATAROLE $8 TYPE $14;
MPRINT(EM_DIAGRAM):   length DATAROLE $8 TYPE $14;
2551856    retain DATAROLE "TRAIN";
MPRINT(EM_DIAGRAM):   retain DATAROLE "TRAIN";
2551857    set WORK.Score_BAR;
MPRINT(EM_DIAGRAM):   set WORK.Score_BAR;
2551858    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set WORK.SCORE_BAR.
NOTE: The data set WORK.SCORE_BAR has 2 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2551859    proc append base=EMWS8.Score_BAR data=WORK.Score_BAR;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Score_BAR data=WORK.Score_BAR;
2551860    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK.SCORE_BAR to EMWS8.SCORE_BAR.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 2 observations read from the data set WORK.SCORE_BAR.
NOTE: The data set EMWS8.SCORE_BAR has 2 observations and 8 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2551861    %var_profile(DATA=EMWS8.Ensmbl36_TRAIN, OUTPUT=work.Score_VARHIST,
2551861  ! METADATA=WORK.SCOREHISTMETA, COMPUTESTAT=N, BINDATA=_bindata, STAT=_STAT,
2551861  ! PCTLSTAT=work.Score_SUMDATA, FREQ=, BIN=Y, NUMBARS= 16);
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*
* Score: Computing Summary Statistics
*------------------------------------------------------------*
MPRINT(VAR_PROFILE):   filename _mac catalog 'WORK.MACROS.VARIABLES.SOURCE';
MPRINT(VAR_PROFILE):   data _null;
MPRINT(VAR_PROFILE):   set WORK.SCOREHISTMETA(where=(LEVEL = 'INTERVAL' and ROLE ne 'FREQ'))
end=eof;
MPRINT(VAR_PROFILE):   if eof then call symput('_nobs', put(_N_, best.));
MPRINT(VAR_PROFILE):   run;
 
NOTE: There were 2 observations read from the data set WORK.SCOREHISTMETA.
      WHERE (LEVEL='INTERVAL') and (ROLE not = 'FREQ');
NOTE: The data set WORK._NULL has 2 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VAR_PROFILE):   data _null_;
MPRINT(VAR_PROFILE):   file _mac;
MPRINT(VAR_PROFILE):   length _VARS $80;
MPRINT(VAR_PROFILE):   retain _vars;
MPRINT(VAR_PROFILE):   if _n_ =1 then put '%macro _vars;';
MPRINT(VAR_PROFILE):   set WORK.SCOREHISTMETA end=eof;
MPRINT(VAR_PROFILE):   where LEVEL = 'INTERVAL' or ROLE='FREQ';
MPRINT(VAR_PROFILE):   if ROLE='FREQ' then call symput('FREQ', trim(NAME));
MPRINT(VAR_PROFILE):   else do;
MPRINT(VAR_PROFILE):   if length(strip(_vars)) + length(strip(NAME)) + 1 <80 then _vars =
strip(_vars)!! ' ' !!strip(NAME);
MPRINT(VAR_PROFILE):   else do;
MPRINT(VAR_PROFILE):   put _Vars;
MPRINT(VAR_PROFILE):   _vars = strip(NAME);
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   if eof then do;
MPRINT(VAR_PROFILE):   put _Vars;
MPRINT(VAR_PROFILE):   put '%mend _vars;';
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   run;
 
NOTE: The file _MAC is:
      Catalog Name=WORK.MACROS.VARIABLES.SOURCE,
      Catalog Page Size=4096,
      Number of Catalog Pages=4,
      Created=Mittwoch, 20. April 2016 17.40 Uhr,
      Last Modified=Mittwoch, 20. April 2016 17.40 Uhr,
      Filename=C:\Users\LUKASF~1\AppData\Local\Temp\SAS Temporary
      Files\_TD10172_WN7LF-LEAVE_\Prc2\macros.sas7bcat,
      Release Created=9.0301M2,Host Created=X64_7PRO
 
NOTE: 3 records were written to the file _MAC.
      The minimum record length was 12.
      The maximum record length was 19.
NOTE: There were 2 observations read from the data set WORK.SCOREHISTMETA.
      WHERE (LEVEL='INTERVAL') or (ROLE='FREQ');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
NOTE: %INCLUDE (level 1) file _MAC is file WORK.MACROS.VARIABLES.SOURCE.
2551862   +%macro _vars;
2551863   +P_DepVar1 P_DepVar0
2551864   +%mend _vars;
NOTE: %INCLUDE (level 1) ending.
MPRINT(VAR_PROFILE):   filename _mac;
NOTE: Fileref _MAC has been deassigned.
*------------------------------------------------------------*
* computingmidpoints_note
*------------------------------------------------------------*
MPRINT(VAR_PROFILE):   filename fref catalog 'work.em.profileformat.source';
MPRINT(VAR_PROFILE):   proc dmdb data=EMWS8.Ensmbl36_TRAIN(obs=1000000) classout=_CLASSOUT
maxlevel=17;
MPRINT(VAR_PROFILE):   class
MPRINT(_VARS):   P_DepVar1 P_DepVar0
MPRINT(VAR_PROFILE):   ;
MPRINT(VAR_PROFILE):   run;
 
NOTE: Records processed = 2374   Memory used = 511K.
NOTE: There were 2374 observations read from the data set EMWS8.PART_TRAIN.
NOTE: There were 2374 observations read from the data set EMWS8.META_TRAIN.
NOTE: View EMWS8.ENSMBL36_TRAIN.VIEW used (Total process time):
      real time           0.30 seconds
      cpu time            0.31 seconds
 
NOTE: There were 2374 observations read from the data set EMWS8.AUTONEURAL6_TRAIN.
NOTE: There were 2374 observations read from the data set EMWS8.ENSMBL36_TRAIN.
NOTE: The data set WORK._CLASSOUT has 34 observations and 9 variables.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.31 seconds
      cpu time            0.32 seconds
 
 
MPRINT(VAR_PROFILE):   proc freq data=_CLASSOUT ORDER=DATA noprint;
MPRINT(VAR_PROFILE):   table NAME / OUT = _COUNT(where=(COUNT<17));
MPRINT(VAR_PROFILE):   run;
 
NOTE: There were 34 observations read from the data set WORK._CLASSOUT.
NOTE: The data set WORK._COUNT has 0 observations and 3 variables.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VAR_PROFILE):   proc sort data=_COUNT(keep=NAME COUNT rename=(COUNT=_NUMCLASSBINS_));
MPRINT(VAR_PROFILE):   by NAME;
MPRINT(VAR_PROFILE):   run;
 
NOTE: Input data set is empty.
NOTE: The data set WORK._COUNT has 0 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VAR_PROFILE):   proc sort data=_CLASSOUT;
MPRINT(VAR_PROFILE):   by NAME;
MPRINT(VAR_PROFILE):   run;
 
NOTE: There were 34 observations read from the data set WORK._CLASSOUT.
NOTE: The data set WORK._CLASSOUT has 34 observations and 9 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VAR_PROFILE):   proc transpose data=_CLASSOUT out=_DISCRETEMID(DROP=_NAME_
RENAME=(NAME=VARIABLE)) prefix=_MIDPOINT;
MPRINT(VAR_PROFILE):   var NRAW;
MPRINT(VAR_PROFILE):   by NAME;
MPRINT(VAR_PROFILE):   run;
 
NOTE: There were 34 observations read from the data set WORK._CLASSOUT.
NOTE: The data set WORK._DISCRETEMID has 2 observations and 18 variables.
NOTE: PROCEDURE TRANSPOSE used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VAR_PROFILE):   proc delete data=WORK._CLASSOUT;
MPRINT(VAR_PROFILE):   run;
 
NOTE: Deleting WORK._CLASSOUT (memtype=DATA).
NOTE: PROCEDURE DELETE used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VAR_PROFILE):   data _null_;
MPRINT(VAR_PROFILE):   dsid = open('_DISCRETEMID');
MPRINT(VAR_PROFILE):   if dsid then do;
MPRINT(VAR_PROFILE):   call symput('NUMCLASSBARS', left(trim(put(attrn(dsid, 'NVARS')-1,
best12.))));
MPRINT(VAR_PROFILE):   dsid = close(dsid);
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   run;
 
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VAR_PROFILE):   data _DISCRETEMID;
MPRINT(VAR_PROFILE):   merge _DISCRETEMID _COUNT(in=_b rename=(NAME=VARIABLE));
MPRINT(VAR_PROFILE):   keep VARIABLE _MIDPOINT1--_MIDPOINT17 _NUMCLASSBINS_;
MPRINT(VAR_PROFILE):   by VARIABLE;
MPRINT(VAR_PROFILE):   if _b then output;
MPRINT(VAR_PROFILE):   run;
 
NOTE: There were 2 observations read from the data set WORK._DISCRETEMID.
NOTE: There were 0 observations read from the data set WORK._COUNT.
NOTE: The data set WORK._DISCRETEMID has 0 observations and 19 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VAR_PROFILE):   data _EMVARDIST / view=_EMVARDIST;
MPRINT(VAR_PROFILE):   set EMWS8.Ensmbl36_TRAIN(keep
MPRINT(VAR_PROFILE):  =P_DepVar1 P_DepVar0 obs=1000000);
MPRINT(VAR_PROFILE):   run;
 
NOTE: DATA STEP view saved on file WORK._EMVARDIST.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.ENSMBL36_TRAIN.VIEW used (Total process time):
      real time           0.06 seconds
      cpu time            0.09 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.07 seconds
      cpu time            0.09 seconds
 
 
MPRINT(VAR_PROFILE):   proc stdize data=_EMVARDIST outstat=work.Score_SUMDATA out=_null_
pctlpts=(0 5 25 50 75 95 100);
MPRINT(VAR_PROFILE):   var
MPRINT(_VARS):   P_DepVar1 P_DepVar0
MPRINT(VAR_PROFILE):   ;
MPRINT(VAR_PROFILE):   run;
 
NOTE: There were 2374 observations read from the data set EMWS8.PART_TRAIN.
NOTE: There were 2374 observations read from the data set EMWS8.META_TRAIN.
NOTE: There were 2374 observations read from the data set EMWS8.AUTONEURAL6_TRAIN.
NOTE: View WORK._EMVARDIST.VIEW used (Total process time):
      real time           0.45 seconds
      cpu time            0.46 seconds
 
NOTE: There were 2374 observations read from the data set EMWS8.ENSMBL36_TRAIN.
NOTE: There were 2374 observations read from the data set WORK._EMVARDIST.
NOTE: The data set WORK.SCORE_SUMDATA has 15 observations and 3 variables.
NOTE: PROCEDURE STDIZE used (Total process time):
      real time           0.46 seconds
      cpu time            0.46 seconds
 
 
MPRINT(VAR_PROFILE):   proc datasets lib=WORK NOLIST;
MPRINT(VAR_PROFILE):   delete _EMVARDIST / mt=view;
MPRINT(VAR_PROFILE):   run;
 
NOTE: Deleting WORK._EMVARDIST (memtype=VIEW).
MPRINT(VAR_PROFILE):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VAR_PROFILE):   proc transpose data=work.Score_SUMDATA
out=_bindata(rename=(_NAME_=VARIABLE COL1=MIN COL2=P5 COL3=P95 COL4=MAX));
MPRINT(VAR_PROFILE):   where _type_ in('P0', 'P5', 'P95', 'P100');
MPRINT(VAR_PROFILE):   run;
 
NOTE: There were 4 observations read from the data set WORK.SCORE_SUMDATA.
      WHERE _type_ in ('P0', 'P100', 'P5', 'P95');
NOTE: The data set WORK._BINDATA has 2 observations and 6 variables.
NOTE: PROCEDURE TRANSPOSE used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VAR_PROFILE):   proc sort data=_bindata;
MPRINT(VAR_PROFILE):   by VARIABLE;
MPRINT(VAR_PROFILE):   run;
 
NOTE: There were 2 observations read from the data set WORK._BINDATA.
NOTE: The data set WORK._BINDATA has 2 observations and 6 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VAR_PROFILE):   data _bindata;
MPRINT(VAR_PROFILE):   set _bindata;
MPRINT(VAR_PROFILE):   length Format $12;
MPRINT(VAR_PROFILE):   array _midpoint{28};
MPRINT(VAR_PROFILE):   array _bounds{28};
MPRINT(VAR_PROFILE):   if (max - min)>1e-10 then do;
MPRINT(VAR_PROFILE):   step = abs(P95-P5)/16;
MPRINT(VAR_PROFILE):   lstep = abs(p5- min)/5;
MPRINT(VAR_PROFILE):   ustep = abs(max-p95)/5;
MPRINT(VAR_PROFILE):   ;
MPRINT(VAR_PROFILE):   if lstep<=step and ustep<=step then do;
MPRINT(VAR_PROFILE):   step = abs(MIN-MAX)/16;
MPRINT(VAR_PROFILE):   START=MIN;
MPRINT(VAR_PROFILE):   do i=1 to 16;
MPRINT(VAR_PROFILE):   _bounds(i) = MIN + i*step;
MPRINT(VAR_PROFILE):   if abs(_bounds{i})< 1e-10 then _bounds(i)= 0;
MPRINT(VAR_PROFILE):   _midpoint(i) = MIN+ (i-0.5)*step;
MPRINT(VAR_PROFILE):   if abs(_midpoint{i})< 1e-10 then _midpoint(i)= 0;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   else do;
MPRINT(VAR_PROFILE):   if lstep<=step then do;
MPRINT(VAR_PROFILE):   step = abs(MIN-P95)/16;
MPRINT(VAR_PROFILE):   do i=1 to 16;
MPRINT(VAR_PROFILE):   _bounds(i) = MIN + i*step;
MPRINT(VAR_PROFILE):   if abs(_bounds{i})< 1e-10 then _bounds(i)= 0;
MPRINT(VAR_PROFILE):   _midpoint(i) = MIN+ (i-0.5)*step;
MPRINT(VAR_PROFILE):   if abs(_midpoint{i})< 1e-10 then _midpoint(i)= 0;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   do i=1 to 5;
MPRINT(VAR_PROFILE):   numbars = 16 + i;
MPRINT(VAR_PROFILE):   _bounds(numbars) = P95 + i*ustep;
MPRINT(VAR_PROFILE):   if abs(_bounds{numbars})< 1e-10 then _bounds(numbars)= 0;
MPRINT(VAR_PROFILE):   _midpoint(numbars) = P95 + (i-0.5)*ustep + abs(ustep-step)/2;
MPRINT(VAR_PROFILE):   if abs(_bounds{numbars})< 1e-10 then _bounds(numbars)= 0;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   else do;
MPRINT(VAR_PROFILE):   do i=1 to 5;
MPRINT(VAR_PROFILE):   _bounds(i) = P5 - (5-i)*lstep;
MPRINT(VAR_PROFILE):   if abs(_bounds{i})< 1e-10 then _bounds(i)= 0;
MPRINT(VAR_PROFILE):   _midpoint(i) = P5 - (5 - i + 0.5)*lstep - abs(lstep-step)/2;
MPRINT(VAR_PROFILE):   if abs(_midpoint{i})< 1e-10 then _midpoint(i)= 0;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   if ustep<= step then do;
MPRINT(VAR_PROFILE):   step = abs(P5-MAX)/16;
MPRINT(VAR_PROFILE):   do i=1 to 16;
MPRINT(VAR_PROFILE):   numbars = i+5;
MPRINT(VAR_PROFILE):   _bounds(numbars) = P5 + i*step;
MPRINT(VAR_PROFILE):   if abs(_bounds{numbars})< 1e-10 then _bounds(numbars)= 0;
MPRINT(VAR_PROFILE):   _midpoint(numbars) = P5 + (i-0.5)*step;
MPRINT(VAR_PROFILE):   if abs(_midpoint{numbars})< 1e-10 then _midpoint(numbars)= 0;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   else do;
MPRINT(VAR_PROFILE):   do i=1 to 16;
MPRINT(VAR_PROFILE):   numbars = i+5;
MPRINT(VAR_PROFILE):   _bounds(numbars) = P5 + i*step;
MPRINT(VAR_PROFILE):   if abs(_bounds{numbars})< 1e-10 then _bounds(numbars)= 0;
MPRINT(VAR_PROFILE):   _midpoint(numbars) = P5 + (i-0.5)*step;
MPRINT(VAR_PROFILE):   if abs(_midpoint{numbars})< 1e-10 then _midpoint(numbars)= 0;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   do i=1 to 5;
MPRINT(VAR_PROFILE):   numbars = 16+5+i;
MPRINT(VAR_PROFILE):   _bounds(numbars) = P95 + i*ustep;
MPRINT(VAR_PROFILE):   if abs(_bounds{numbars})< 1e-10 then _bounds(numbars)= 0;
MPRINT(VAR_PROFILE):   _midpoint(numbars) = P95 + (i-0.5)*ustep + abs(ustep-step)/2;
MPRINT(VAR_PROFILE):  if abs(_midpoint{numbars})< 1e-10 then _midpoint(numbars)= 0;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   else do;
MPRINT(VAR_PROFILE):   _bounds(1) = MIN;
MPRINT(VAR_PROFILE):   _midpoint(1) = MIN;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   Format = 'F'!!trim(left(put(_n_,6.)))!!'_';
MPRINT(VAR_PROFILE):   run;
 
NOTE: There were 2 observations read from the data set WORK._BINDATA.
NOTE: The data set WORK._BINDATA has 2 observations and 69 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VAR_PROFILE):   data _bindata;
MPRINT(VAR_PROFILE):   merge _bindata _DISCRETEMID(in = _b);
MPRINT(VAR_PROFILE):   by VARIABLE;
MPRINT(VAR_PROFILE):   if _b then _DISCRETE=1;
MPRINT(VAR_PROFILE):   else _DISCRETE=0;
MPRINT(VAR_PROFILE):   run;
 
WARNING: Multiple lengths were specified for the BY variable VARIABLE by input data sets. This
         may cause unexpected results.
NOTE: There were 2 observations read from the data set WORK._BINDATA.
NOTE: There were 0 observations read from the data set WORK._DISCRETEMID.
NOTE: The data set WORK._BINDATA has 2 observations and 71 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VAR_PROFILE):   data _null_;
MPRINT(VAR_PROFILE):   file fref;
MPRINT(VAR_PROFILE):   set _bindata end=eof;
MPRINT(VAR_PROFILE):   array _bounds{26};
MPRINT(VAR_PROFILE):   array _midpoint{26};
MPRINT(VAR_PROFILE):   if _n_=1 then put 'proc format;';
MPRINT(VAR_PROFILE):   put 'value ' Format;
MPRINT(VAR_PROFILE):   if _DISCRETE then do;
MPRINT(VAR_PROFILE):   do i=1 to 16;
MPRINT(VAR_PROFILE):   _MID = _midpoint{i};
MPRINT(VAR_PROFILE):   if _MID ne . and i<= _NUMCLASSBINS_ then put _MID '="' _MID '"';
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   put ';';
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   else do;
MPRINT(VAR_PROFILE):   if min eq max then do;
MPRINT(VAR_PROFILE):   put 'low - high ="' MIN '";';
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   else do;
MPRINT(VAR_PROFILE):   _LB = MIN;
MPRINT(VAR_PROFILE):   _MID = _midpoint{1};
MPRINT(VAR_PROFILE):   _UB = _bounds{1};
MPRINT(VAR_PROFILE):   put 'LOW -' _UB '="' _MID '"';
MPRINT(VAR_PROFILE):   do i=1 to 26-1;
MPRINT(VAR_PROFILE):   _LB = _bounds{i};
MPRINT(VAR_PROFILE):   j=i+1;
MPRINT(VAR_PROFILE):   _MID = _midpoint{j};
MPRINT(VAR_PROFILE):   _UB = _bounds{j};
MPRINT(VAR_PROFILE):   if (_UB ne .) and (_LB ne _UB) then do;
MPRINT(VAR_PROFILE):   if _UB>=MAX then put _LB '-HIGH="' _MID '"';
MPRINT(VAR_PROFILE):   else put _LB '-' _UB '="' _MID '"';
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   put ';';
MPRINT(VAR_PROFILE):   if eof then put 'run;';
MPRINT(VAR_PROFILE):   run;
 
NOTE: The file FREF is:
      Catalog Name=WORK.EM.PROFILEFORMAT.SOURCE,
      Catalog Page Size=4096,
      Number of Catalog Pages=4,
      Created=Mittwoch, 20. April 2016 17.40 Uhr,
      Last Modified=Mittwoch, 20. April 2016 17.40 Uhr,
      Filename=C:\Users\LUKASF~1\AppData\Local\Temp\SAS Temporary
      Files\_TD10172_WN7LF-LEAVE_\Prc2\em.sas7bcat,
      Release Created=9.0301M2,Host Created=X64_7PRO
 
NOTE: 38 records were written to the file FREF.
      The minimum record length was 1.
      The maximum record length was 43.
NOTE: There were 2 observations read from the data set WORK._BINDATA.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
NOTE: %INCLUDE (level 1) file FREF is file WORK.EM.PROFILEFORMAT.SOURCE.
2551865   +proc format;
MPRINT(VAR_PROFILE):   proc format;
2551866   +value F1_
2551867   +LOW -0.0626085283 ="0.0313622571 "
2551868   +0.0626085283 -0.1251010707 ="0.0938547995 "
2551869   +0.1251010707 -0.1875936132 ="0.156347342 "
2551870   +0.1875936132 -0.2500861556 ="0.2188398844 "
2551871   +0.2500861556 -0.3125786981 ="0.2813324269 "
2551872   +0.3125786981 -0.3750712405 ="0.3438249693 "
2551873   +0.3750712405 -0.437563783 ="0.4063175117 "
2551874   +0.437563783 -0.5000563254 ="0.4688100542 "
2551875   +0.5000563254 -0.5625488679 ="0.5313025966 "
2551876   +0.5625488679 -0.6250414103 ="0.5937951391 "
2551877   +0.6250414103 -0.6875339527 ="0.6562876815 "
2551878   +0.6875339527 -0.7500264952 ="0.718780224 "
2551879   +0.7500264952 -0.8125190376 ="0.7812727664 "
2551880   +0.8125190376 -0.8750115801 ="0.8437653089 "
2551881   +0.8750115801 -0.9375041225 ="0.9062578513 "
2551882   +0.9375041225 -HIGH="0.9687503938 "
2551883   +;
MPRINT(VAR_PROFILE):   value F1_ LOW -0.0626085283 ="0.0313622571 " 0.0626085283 -0.1251010707
="0.0938547995 " 0.1251010707 -0.1875936132 ="0.156347342 " 0.1875936132 -0.2500861556
="0.2188398844 " 0.2500861556 -0.3125786981 ="0.2813324269 " 0.3125786981 -0.3750712405
="0.3438249693 " 0.3750712405 -0.437563783 ="0.4063175117 " 0.437563783 -0.5000563254
="0.4688100542 " 0.5000563254 -0.5625488679 ="0.5313025966 " 0.5625488679 -0.6250414103
="0.5937951391 " 0.6250414103 -0.6875339527 ="0.6562876815 " 0.6875339527 -0.7500264952
="0.718780224 " 0.7500264952 -0.8125190376 ="0.7812727664 " 0.8125190376 -0.8750115801
="0.8437653089 " 0.8750115801 -0.9375041225 ="0.9062578513 " 0.9375041225 -HIGH="0.9687503938
" ;
NOTE: Format F1_ has been output.
2551884   +value F2_
2551885   +LOW -0.0624958775 ="0.0312496062 "
2551886   +0.0624958775 -0.1249884199 ="0.0937421487 "
2551887   +0.1249884199 -0.1874809624 ="0.1562346911 "
2551888   +0.1874809624 -0.2499735048 ="0.2187272336 "
2551889   +0.2499735048 -0.3124660473 ="0.281219776 "
2551890   +0.3124660473 -0.3749585897 ="0.3437123185 "
2551891   +0.3749585897 -0.4374511321 ="0.4062048609 "
2551892   +0.4374511321 -0.4999436746 ="0.4686974034 "
2551893   +0.4999436746 -0.562436217 ="0.5311899458 "
2551894   +0.562436217 -0.6249287595 ="0.5936824883 "
2551895   +0.6249287595 -0.6874213019 ="0.6561750307 "
2551896   +0.6874213019 -0.7499138444 ="0.7186675731 "
2551897   +0.7499138444 -0.8124063868 ="0.7811601156 "
2551898   +0.8124063868 -0.8748989293 ="0.843652658 "
2551899   +0.8748989293 -0.9373914717 ="0.9061452005 "
2551900   +0.9373914717 -HIGH="0.9686377429 "
2551901   +;
MPRINT(VAR_PROFILE):   value F2_ LOW -0.0624958775 ="0.0312496062 " 0.0624958775 -0.1249884199
="0.0937421487 " 0.1249884199 -0.1874809624 ="0.1562346911 " 0.1874809624 -0.2499735048
="0.2187272336 " 0.2499735048 -0.3124660473 ="0.281219776 " 0.3124660473 -0.3749585897
="0.3437123185 " 0.3749585897 -0.4374511321 ="0.4062048609 " 0.4374511321 -0.4999436746
="0.4686974034 " 0.4999436746 -0.562436217 ="0.5311899458 " 0.562436217 -0.6249287595
="0.5936824883 " 0.6249287595 -0.6874213019 ="0.6561750307 " 0.6874213019 -0.7499138444
="0.7186675731 " 0.7499138444 -0.8124063868 ="0.7811601156 " 0.8124063868 -0.8748989293
="0.843652658 " 0.8748989293 -0.9373914717 ="0.9061452005 " 0.9373914717 -HIGH="0.9686377429 "
;
NOTE: Format F2_ is already on the library.
NOTE: Format F2_ has been output.
MPRINT(VAR_PROFILE):   run;
2551902   +run;
 
NOTE: PROCEDURE FORMAT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
NOTE: %INCLUDE (level 1) ending.
MPRINT(VAR_PROFILE):   filename fref;
NOTE: Fileref FREF has been deassigned.
MPRINT(VAR_PROFILE):   data _binneddata / view=_binneddata;
MPRINT(VAR_PROFILE):   set EMWS8.Ensmbl36_TRAIN(obs=1000000);
MPRINT(VAR_PROFILE):   format P_DepVar0 F1_. P_DepVar1 F2_. ;
MPRINT(VAR_PROFILE):   run;
 
NOTE: DATA STEP view saved on file WORK._BINNEDDATA.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.ENSMBL36_TRAIN.VIEW used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.07 seconds
      cpu time            0.07 seconds
 
 
MPRINT(VAR_PROFILE):   proc dmdb data=_binneddata(obs=1000000)
classout=_temptab(rename=(NAME=VARIABLE FREQUENCY=COUNT FREQPERCENT=PERCENT));
MPRINT(VAR_PROFILE):   class
MPRINT(_VARS):   P_DepVar1 P_DepVar0
MPRINT(VAR_PROFILE):   ;
MPRINT(VAR_PROFILE):   run;
 
NOTE: Records processed = 2374   Memory used = 511K.
NOTE: There were 2374 observations read from the data set EMWS8.PART_TRAIN.
NOTE: There were 2374 observations read from the data set EMWS8.META_TRAIN.
NOTE: There were 2374 observations read from the data set EMWS8.AUTONEURAL6_TRAIN.
NOTE: View WORK._BINNEDDATA.VIEW used (Total process time):
      real time           0.32 seconds
      cpu time            0.32 seconds
 
NOTE: There were 2374 observations read from the data set EMWS8.ENSMBL36_TRAIN.
NOTE: There were 2374 observations read from the data set WORK._BINNEDDATA.
NOTE: The data set WORK._TEMPTAB has 32 observations and 9 variables.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.33 seconds
      cpu time            0.34 seconds
 
 
MPRINT(VAR_PROFILE):   data work.Score_VARHIST;
MPRINT(VAR_PROFILE):   label VALUE = "Value";
MPRINT(VAR_PROFILE):   label VARIABLE = "Variable";
MPRINT(VAR_PROFILE):   label COUNT = "Frequency Count";
MPRINT(VAR_PROFILE):   label PERCENT = "Percent";
MPRINT(VAR_PROFILE):   set _temptab;
MPRINT(VAR_PROFILE):   format VALUE 12.3 count;
MPRINT(VAR_PROFILE):   value = inputn(level, 'best12.');
MPRINT(VAR_PROFILE):   keep VARIABLE COUNT PERCENT VALUE;
MPRINT(VAR_PROFILE):   run;
 
NOTE: There were 32 observations read from the data set WORK._TEMPTAB.
NOTE: The data set WORK.SCORE_VARHIST has 32 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VAR_PROFILE):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(VAR_PROFILE):   delete _TEMPTAB _BINNEDDATA _MINMAXDATA;
MPRINT(VAR_PROFILE):   run;
 
NOTE: The file WORK._MINMAXDATA (memtype=(DATA VIEW)) was not found, but appears on a DELETE
      statement.
NOTE: Deleting WORK._TEMPTAB (memtype=DATA).
NOTE: Deleting WORK._BINNEDDATA (memtype=VIEW).
MPRINT(VAR_PROFILE):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
 
 
MPRINT(EM_DIAGRAM):  ;
 
2551903    data work.Score_VARHIST;
MPRINT(EM_DIAGRAM):    data work.Score_VARHIST;
2551904    length DATAROLE $8 TYPE $14;
MPRINT(EM_DIAGRAM):   length DATAROLE $8 TYPE $14;
2551905    retain DATAROLE "TRAIN" TYPE "";
MPRINT(EM_DIAGRAM):   retain DATAROLE "TRAIN" TYPE "";
2551906    set work.Score_VARHIST(rename=(VALUE=X));
MPRINT(EM_DIAGRAM):   set work.Score_VARHIST(rename=(VALUE=X));
2551907    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 32 observations read from the data set WORK.SCORE_VARHIST.
NOTE: The data set WORK.SCORE_VARHIST has 32 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2551908    proc append base=work.Score_HIST data=work.Score_VARHIST;
MPRINT(EM_DIAGRAM):   proc append base=work.Score_HIST data=work.Score_VARHIST;
2551909    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK.SCORE_VARHIST to WORK.SCORE_HIST.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 32 observations read from the data set WORK.SCORE_VARHIST.
NOTE: The data set WORK.SCORE_HIST has 32 observations and 6 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2551910    proc transpose data=work.Score_SUMDATA out=work.Score_SUMDATA(
2551910  ! rename=(_NAME_=VARIABLE _LABEL_=LABEL LOCATION=MEAN SCALE=STD P0=MIN P50=MEDIAN
2551910  ! P100=MAX));
MPRINT(EM_DIAGRAM):    proc transpose data=work.Score_SUMDATA out=work.Score_SUMDATA(
rename=(_NAME_=VARIABLE _LABEL_=LABEL LOCATION=MEAN SCALE=STD P0=MIN P50=MEDIAN P100=MAX));
2551911    where _TYPE_ in('LOCATION' 'SCALE' 'N' 'P0' 'P25' 'P50' 'P75' 'P100');
MPRINT(EM_DIAGRAM):   where _TYPE_ in('LOCATION' 'SCALE' 'N' 'P0' 'P25' 'P50' 'P75' 'P100');
2551912    id _type_;
MPRINT(EM_DIAGRAM):   id _type_;
2551913    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set WORK.SCORE_SUMDATA.
      WHERE _TYPE_ in ('LOCATION', 'N', 'P0', 'P100', 'P25', 'P50', 'P75', 'SCALE');
NOTE: The data set WORK.SCORE_SUMDATA has 2 observations and 10 variables.
NOTE: PROCEDURE TRANSPOSE used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2551914    data work.Score_SUMDATA;
MPRINT(EM_DIAGRAM):   data work.Score_SUMDATA;
2551915    length DATAROLE $8 TYPE $14;
MPRINT(EM_DIAGRAM):   length DATAROLE $8 TYPE $14;
2551916    retain DATAROLE "TRAIN" Type "";
MPRINT(EM_DIAGRAM):   retain DATAROLE "TRAIN" Type "";
2551917    set work.Score_SUMDATA;
MPRINT(EM_DIAGRAM):   set work.Score_SUMDATA;
2551918    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set WORK.SCORE_SUMDATA.
NOTE: The data set WORK.SCORE_SUMDATA has 2 observations and 12 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2551919    proc append base=WORK.ScoreSTAT data=work.Score_SUMDATA;
MPRINT(EM_DIAGRAM):   proc append base=WORK.ScoreSTAT data=work.Score_SUMDATA;
2551920    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK.SCORE_SUMDATA to WORK.SCORESTAT.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 2 observations read from the data set WORK.SCORE_SUMDATA.
NOTE: The data set WORK.SCORESTAT has 2 observations and 12 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2551921    data WORK.SCOREFREQMETA;
MPRINT(EM_DIAGRAM):    data WORK.SCOREFREQMETA;
2551922    length NAME $32 ROLE $32 LEVEL $8;
MPRINT(EM_DIAGRAM):   length NAME $32 ROLE $32 LEVEL $8;
2551923    NAME="I_DepVar";
MPRINT(EM_DIAGRAM):   NAME="I_DepVar";
2551924    ROLE="INPUT";
MPRINT(EM_DIAGRAM):   ROLE="INPUT";
2551925    LEVEL="NOMINAL";
MPRINT(EM_DIAGRAM):   LEVEL="NOMINAL";
2551926    TYPE="C";
MPRINT(EM_DIAGRAM):   TYPE="C";
2551927    output;
MPRINT(EM_DIAGRAM):   output;
2551928    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK.SCOREFREQMETA has 1 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2551929    data WORK.SCOREHISTMETA;
MPRINT(EM_DIAGRAM):    data WORK.SCOREHISTMETA;
2551930    length NAME $32 ROLE $32 LEVEL $8;
MPRINT(EM_DIAGRAM):   length NAME $32 ROLE $32 LEVEL $8;
2551931    NAME="P_DepVar1";
MPRINT(EM_DIAGRAM):   NAME="P_DepVar1";
2551932    ROLE="INPUT";
MPRINT(EM_DIAGRAM):   ROLE="INPUT";
2551933    LEVEL="INTERVAL";
MPRINT(EM_DIAGRAM):   LEVEL="INTERVAL";
2551934    TYPE="N";
MPRINT(EM_DIAGRAM):   TYPE="N";
2551935    output;
MPRINT(EM_DIAGRAM):   output;
2551936    NAME="P_DepVar0";
MPRINT(EM_DIAGRAM):   NAME="P_DepVar0";
2551937    ROLE="INPUT";
MPRINT(EM_DIAGRAM):   ROLE="INPUT";
2551938    LEVEL="INTERVAL";
MPRINT(EM_DIAGRAM):   LEVEL="INTERVAL";
2551939    TYPE="N";
MPRINT(EM_DIAGRAM):   TYPE="N";
2551940    output;
MPRINT(EM_DIAGRAM):   output;
2551941    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK.SCOREHISTMETA has 2 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
NOTE: View EMWS8.ENSMBL36_VALIDATE.VIEW used (Total process time):
      real time           0.07 seconds
      cpu time            0.07 seconds
 
2551942    ods listing close;
MPRINT(EM_DIAGRAM):    ods listing close;
2551943    ods output onewayfreqs=WORK.TEMPFREQ;
MPRINT(EM_DIAGRAM):   ods output onewayfreqs=WORK.TEMPFREQ;
2551944    proc freq data = EMWS8.Ensmbl36_VALIDATE order=formatted addnames;
MPRINT(EM_DIAGRAM):   proc freq data = EMWS8.Ensmbl36_VALIDATE order=formatted addnames;
2551945    table I_DepVar / missing;
MPRINT(EM_DIAGRAM):   table I_DepVar / missing;
2551946    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: There were 1018 observations read from the data set EMWS8.META_VALIDATE.
NOTE: View EMWS8.ENSMBL36_VALIDATE.VIEW used (Total process time):
      real time           0.19 seconds
      cpu time            0.20 seconds
 
NOTE: There were 1018 observations read from the data set EMWS8.AUTONEURAL6_VALIDATE.
NOTE: The data set WORK.TEMPFREQ has 2 observations and 8 variables.
NOTE: There were 1018 observations read from the data set EMWS8.ENSMBL36_VALIDATE.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.20 seconds
      cpu time            0.21 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
2551947    quit;
2551948    ods listing;
MPRINT(EM_DIAGRAM):   ods listing;
2551949    data WORK.Score_BAR(keep=_VARIABLE_ TYPE COUNT PERCENT _X_ _XLABEL_);
MPRINT(EM_DIAGRAM):    data WORK.Score_BAR(keep=_VARIABLE_ TYPE COUNT PERCENT _X_ _XLABEL_);
2551950    label _VARIABLE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel, NOQUOTE))"
2551950  ! Type = "%sysfunc(sasmsg(sashelp.dmine, rpt_type_vlabel,         NOQUOTE))" _X_ =
2551950  ! "%sysfunc(sasmsg(sashelp.dmine, rpt_numValue_vlabel, NOQUOTE))" _XLABEL_ =
2551951       "%sysfunc(sasmsg(sashelp.dmine, rpt_fmtValue_vlabel ,    NOQUOTE))" COUNT =
2551951  ! "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel,        NOQUOTE))" PERCENT =
2551951  ! "%sysfunc(sasmsg(sashelp.dmine, rpt_percent_vlabel,      NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _VARIABLE_ = "Variable" Type = "Type" _X_ = "Numeric Value"
_XLABEL_ = "Formatted Value" COUNT = "Frequency Count" PERCENT = "Percent";
2551952    dsid = open("WORK.TEMPFREQ");
MPRINT(EM_DIAGRAM):   dsid = open("WORK.TEMPFREQ");
2551953    varnum = varnum(dsid, 'VARIABLE');
MPRINT(EM_DIAGRAM):   varnum = varnum(dsid, 'VARIABLE');
2551954    freqnum = varnum(dsid, 'FREQUENCY');
MPRINT(EM_DIAGRAM):   freqnum = varnum(dsid, 'FREQUENCY');
2551955    pvarnum = varnum(dsid, 'PERCENT');
MPRINT(EM_DIAGRAM):   pvarnum = varnum(dsid, 'PERCENT');
2551956    typenum = varnum(dsid, '_TYPE_');
MPRINT(EM_DIAGRAM):   typenum = varnum(dsid, '_TYPE_');
2551957    length _VARIABLE_ $32 TYPE $1 _XLABEL_ $32;
MPRINT(EM_DIAGRAM):   length _VARIABLE_ $32 TYPE $1 _XLABEL_ $32;
2551958    do while(^fetch(dsid));
MPRINT(EM_DIAGRAM):   do while(^fetch(dsid));
2551959    _VARIABLE_ = strip(getvarc(dsid, varnum));
MPRINT(EM_DIAGRAM):   _VARIABLE_ = strip(getvarc(dsid, varnum));
2551960    count = getvarn(dsid, freqnum);
MPRINT(EM_DIAGRAM):   count = getvarn(dsid, freqnum);
2551961    percent= getvarn(dsid, pvarnum);
MPRINT(EM_DIAGRAM):   percent= getvarn(dsid, pvarnum);
2551962    vvarnum = varnum(dsid, _VARIABLE_);
MPRINT(EM_DIAGRAM):   vvarnum = varnum(dsid, _VARIABLE_);
2551963    type = vartype(dsid, vvarnum);
MPRINT(EM_DIAGRAM):   type = vartype(dsid, vvarnum);
2551964    fvarnum = varnum(dsid, 'F_'!!substr(_VARIABLE_, 1, 30));
MPRINT(EM_DIAGRAM):   fvarnum = varnum(dsid, 'F_'!!substr(_VARIABLE_, 1, 30));
2551965    _XLABEL_ = left(getvarc(dsid, fvarnum));
MPRINT(EM_DIAGRAM):   _XLABEL_ = left(getvarc(dsid, fvarnum));
2551966    _X_ = .;
MPRINT(EM_DIAGRAM):   _X_ = .;
2551967    if TYPE eq 'N' then _X_ = getvarn(dsid, vvarnum);
MPRINT(EM_DIAGRAM):   if TYPE eq 'N' then _X_ = getvarn(dsid, vvarnum);
2551968    output;
MPRINT(EM_DIAGRAM):   output;
2551969    end;
MPRINT(EM_DIAGRAM):   end;
2551970    dsid = close(dsid);
MPRINT(EM_DIAGRAM):   dsid = close(dsid);
2551971    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK.SCORE_BAR has 2 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2551972    proc sort data=WORK.Score_BAR NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.Score_BAR NOTHREADS;
2551973    by _VARIABLE_;
MPRINT(EM_DIAGRAM):   by _VARIABLE_;
2551974    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set WORK.SCORE_BAR.
NOTE: The data set WORK.SCORE_BAR has 2 observations and 6 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2551975    proc sort data=WORK.M2F7MYMG;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.M2F7MYMG;
2551976    by Name;
MPRINT(EM_DIAGRAM):   by Name;
2551977    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK.M2F7MYMG.
NOTE: The data set WORK.M2F7MYMG has 1 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2551978    data WORK.Score_BAR;
MPRINT(EM_DIAGRAM):   data WORK.Score_BAR;
2551979    merge WORK.Score_BAR(in=_a) WORK.M2F7MYMG(keep=Name Role rename=(Name=_Variable_));
MPRINT(EM_DIAGRAM):   merge WORK.Score_BAR(in=_a) WORK.M2F7MYMG(keep=Name Role
rename=(Name=_Variable_));
2551980    by _Variable_;
MPRINT(EM_DIAGRAM):   by _Variable_;
2551981    label Role = "%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel ,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label Role = "Role";
2551982    if _a then output;
MPRINT(EM_DIAGRAM):   if _a then output;
2551983    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set WORK.SCORE_BAR.
NOTE: There were 1 observations read from the data set WORK.M2F7MYMG.
NOTE: The data set WORK.SCORE_BAR has 2 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2551984    data WORK.Score_BAR;
MPRINT(EM_DIAGRAM):    data WORK.Score_BAR;
2551985    length DATAROLE $8 TYPE $14;
MPRINT(EM_DIAGRAM):   length DATAROLE $8 TYPE $14;
2551986    retain DATAROLE "VALIDATE";
MPRINT(EM_DIAGRAM):   retain DATAROLE "VALIDATE";
2551987    set WORK.Score_BAR;
MPRINT(EM_DIAGRAM):   set WORK.Score_BAR;
2551988    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set WORK.SCORE_BAR.
NOTE: The data set WORK.SCORE_BAR has 2 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2551989    proc append base=EMWS8.Score_BAR data=WORK.Score_BAR;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Score_BAR data=WORK.Score_BAR;
2551990    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK.SCORE_BAR to EMWS8.SCORE_BAR.
NOTE: There were 2 observations read from the data set WORK.SCORE_BAR.
NOTE: 2 observations added.
NOTE: The data set EMWS8.SCORE_BAR has 4 observations and 8 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2551991    %var_profile(DATA=EMWS8.Ensmbl36_VALIDATE, OUTPUT=work.Score_VARHIST,
2551991  ! METADATA=WORK.SCOREHISTMETA, COMPUTESTAT=N, BINDATA=_bindata, STAT=_STAT,
2551991  ! PCTLSTAT=work.Score_SUMDATA, FREQ=, BIN=Y, NUMBARS= 16);
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*
* Score: Computing Summary Statistics
*------------------------------------------------------------*
MPRINT(VAR_PROFILE):   filename _mac catalog 'WORK.MACROS.VARIABLES.SOURCE';
MPRINT(VAR_PROFILE):   data _null;
MPRINT(VAR_PROFILE):   set WORK.SCOREHISTMETA(where=(LEVEL = 'INTERVAL' and ROLE ne 'FREQ'))
end=eof;
MPRINT(VAR_PROFILE):   if eof then call symput('_nobs', put(_N_, best.));
MPRINT(VAR_PROFILE):   run;
 
NOTE: There were 2 observations read from the data set WORK.SCOREHISTMETA.
      WHERE (LEVEL='INTERVAL') and (ROLE not = 'FREQ');
NOTE: The data set WORK._NULL has 2 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VAR_PROFILE):   data _null_;
MPRINT(VAR_PROFILE):   file _mac;
MPRINT(VAR_PROFILE):   length _VARS $80;
MPRINT(VAR_PROFILE):   retain _vars;
MPRINT(VAR_PROFILE):   if _n_ =1 then put '%macro _vars;';
MPRINT(VAR_PROFILE):   set WORK.SCOREHISTMETA end=eof;
MPRINT(VAR_PROFILE):   where LEVEL = 'INTERVAL' or ROLE='FREQ';
MPRINT(VAR_PROFILE):   if ROLE='FREQ' then call symput('FREQ', trim(NAME));
MPRINT(VAR_PROFILE):   else do;
MPRINT(VAR_PROFILE):   if length(strip(_vars)) + length(strip(NAME)) + 1 <80 then _vars =
strip(_vars)!! ' ' !!strip(NAME);
MPRINT(VAR_PROFILE):   else do;
MPRINT(VAR_PROFILE):   put _Vars;
MPRINT(VAR_PROFILE):   _vars = strip(NAME);
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   if eof then do;
MPRINT(VAR_PROFILE):   put _Vars;
MPRINT(VAR_PROFILE):   put '%mend _vars;';
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   run;
 
NOTE: The file _MAC is:
      Catalog Name=WORK.MACROS.VARIABLES.SOURCE,
      Catalog Page Size=4096,
      Number of Catalog Pages=5,
      Created=Mittwoch, 20. April 2016 17.40 Uhr,
      Last Modified=Mittwoch, 20. April 2016 17.40 Uhr,
      Filename=C:\Users\LUKASF~1\AppData\Local\Temp\SAS Temporary
      Files\_TD10172_WN7LF-LEAVE_\Prc2\macros.sas7bcat,
      Release Created=9.0301M2,Host Created=X64_7PRO
 
NOTE: 3 records were written to the file _MAC.
      The minimum record length was 12.
      The maximum record length was 19.
NOTE: There were 2 observations read from the data set WORK.SCOREHISTMETA.
      WHERE (LEVEL='INTERVAL') or (ROLE='FREQ');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
NOTE: %INCLUDE (level 1) file _MAC is file WORK.MACROS.VARIABLES.SOURCE.
2551992   +%macro _vars;
2551993   +P_DepVar1 P_DepVar0
2551994   +%mend _vars;
NOTE: %INCLUDE (level 1) ending.
MPRINT(VAR_PROFILE):   filename _mac;
NOTE: Fileref _MAC has been deassigned.
MPRINT(VAR_PROFILE):   data _binneddata / view=_binneddata;
MPRINT(VAR_PROFILE):   set EMWS8.Ensmbl36_VALIDATE(obs=1000000);
MPRINT(VAR_PROFILE):   format P_DepVar0 F1_. P_DepVar1 F2_. ;
MPRINT(VAR_PROFILE):   run;
 
NOTE: DATA STEP view saved on file WORK._BINNEDDATA.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.ENSMBL36_VALIDATE.VIEW used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.07 seconds
      cpu time            0.07 seconds
 
 
MPRINT(VAR_PROFILE):   proc dmdb data=_binneddata(obs=1000000)
classout=_temptab(rename=(NAME=VARIABLE FREQUENCY=COUNT FREQPERCENT=PERCENT));
MPRINT(VAR_PROFILE):   class
MPRINT(_VARS):   P_DepVar1 P_DepVar0
MPRINT(VAR_PROFILE):   ;
MPRINT(VAR_PROFILE):   run;
 
NOTE: Records processed = 1018   Memory used = 511K.
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: There were 1018 observations read from the data set EMWS8.META_VALIDATE.
NOTE: There were 1018 observations read from the data set EMWS8.AUTONEURAL6_VALIDATE.
NOTE: View WORK._BINNEDDATA.VIEW used (Total process time):
      real time           0.20 seconds
      cpu time            0.20 seconds
 
NOTE: There were 1018 observations read from the data set EMWS8.ENSMBL36_VALIDATE.
NOTE: There were 1018 observations read from the data set WORK._BINNEDDATA.
NOTE: The data set WORK._TEMPTAB has 32 observations and 9 variables.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.21 seconds
      cpu time            0.21 seconds
 
 
MPRINT(VAR_PROFILE):   data work.Score_VARHIST;
MPRINT(VAR_PROFILE):   label VALUE = "Value";
MPRINT(VAR_PROFILE):   label VARIABLE = "Variable";
MPRINT(VAR_PROFILE):   label COUNT = "Frequency Count";
MPRINT(VAR_PROFILE):   label PERCENT = "Percent";
MPRINT(VAR_PROFILE):   set _temptab;
MPRINT(VAR_PROFILE):   format VALUE 12.3 count;
MPRINT(VAR_PROFILE):   value = inputn(level, 'best12.');
MPRINT(VAR_PROFILE):   keep VARIABLE COUNT PERCENT VALUE;
MPRINT(VAR_PROFILE):   run;
 
NOTE: There were 32 observations read from the data set WORK._TEMPTAB.
NOTE: The data set WORK.SCORE_VARHIST has 32 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VAR_PROFILE):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(VAR_PROFILE):   delete _TEMPTAB _BINNEDDATA _MINMAXDATA;
MPRINT(VAR_PROFILE):   run;
 
NOTE: The file WORK._MINMAXDATA (memtype=(DATA VIEW)) was not found, but appears on a DELETE
      statement.
NOTE: Deleting WORK._TEMPTAB (memtype=DATA).
NOTE: Deleting WORK._BINNEDDATA (memtype=VIEW).
MPRINT(VAR_PROFILE):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
 
 
MPRINT(EM_DIAGRAM):  ;
 
2551995    data work.Score_VARHIST;
MPRINT(EM_DIAGRAM):    data work.Score_VARHIST;
2551996    length DATAROLE $8 TYPE $14;
MPRINT(EM_DIAGRAM):   length DATAROLE $8 TYPE $14;
2551997    retain DATAROLE "VALIDATE" TYPE "";
MPRINT(EM_DIAGRAM):   retain DATAROLE "VALIDATE" TYPE "";
2551998    set work.Score_VARHIST(rename=(VALUE=X));
MPRINT(EM_DIAGRAM):   set work.Score_VARHIST(rename=(VALUE=X));
2551999    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 32 observations read from the data set WORK.SCORE_VARHIST.
NOTE: The data set WORK.SCORE_VARHIST has 32 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2552000    proc append base=work.Score_HIST data=work.Score_VARHIST;
MPRINT(EM_DIAGRAM):   proc append base=work.Score_HIST data=work.Score_VARHIST;
2552001    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK.SCORE_VARHIST to WORK.SCORE_HIST.
NOTE: There were 32 observations read from the data set WORK.SCORE_VARHIST.
NOTE: 32 observations added.
NOTE: The data set WORK.SCORE_HIST has 64 observations and 6 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2552002    proc stdize data=EMWS8.Ensmbl36_VALIDATE(obs=1000000) outstat=work.Score_SUMDATA
2552002  ! out=_null_ pctlpts=(0 5 25 50 75 95 100);
MPRINT(EM_DIAGRAM):    proc stdize data=EMWS8.Ensmbl36_VALIDATE(obs=1000000)
outstat=work.Score_SUMDATA out=_null_ pctlpts=(0 5 25 50 75 95 100);
2552003    var
2552004    P_DepVar1
2552005    P_DepVar0
2552006    ;
MPRINT(EM_DIAGRAM):   var P_DepVar1 P_DepVar0 ;
2552007    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: There were 1018 observations read from the data set EMWS8.META_VALIDATE.
NOTE: View EMWS8.ENSMBL36_VALIDATE.VIEW used (Total process time):
      real time           0.29 seconds
      cpu time            0.29 seconds
 
NOTE: There were 1018 observations read from the data set EMWS8.AUTONEURAL6_VALIDATE.
NOTE: There were 1018 observations read from the data set EMWS8.ENSMBL36_VALIDATE.
NOTE: The data set WORK.SCORE_SUMDATA has 15 observations and 3 variables.
NOTE: PROCEDURE STDIZE used (Total process time):
      real time           0.30 seconds
      cpu time            0.31 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
2552008    quit;
 
2552009    proc transpose data=work.Score_SUMDATA out=work.Score_SUMDATA(
2552009  ! rename=(_NAME_=VARIABLE _LABEL_=LABEL LOCATION=MEAN SCALE=STD P0=MIN P50=MEDIAN
2552009  ! P100=MAX));
MPRINT(EM_DIAGRAM):    proc transpose data=work.Score_SUMDATA out=work.Score_SUMDATA(
rename=(_NAME_=VARIABLE _LABEL_=LABEL LOCATION=MEAN SCALE=STD P0=MIN P50=MEDIAN P100=MAX));
2552010    where _TYPE_ in('LOCATION' 'SCALE' 'N' 'P0' 'P25' 'P50' 'P75' 'P100');
MPRINT(EM_DIAGRAM):   where _TYPE_ in('LOCATION' 'SCALE' 'N' 'P0' 'P25' 'P50' 'P75' 'P100');
2552011    id _type_;
MPRINT(EM_DIAGRAM):   id _type_;
2552012    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set WORK.SCORE_SUMDATA.
      WHERE _TYPE_ in ('LOCATION', 'N', 'P0', 'P100', 'P25', 'P50', 'P75', 'SCALE');
NOTE: The data set WORK.SCORE_SUMDATA has 2 observations and 10 variables.
NOTE: PROCEDURE TRANSPOSE used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2552013    data work.Score_SUMDATA;
MPRINT(EM_DIAGRAM):   data work.Score_SUMDATA;
2552014    length DATAROLE $8 TYPE $14;
MPRINT(EM_DIAGRAM):   length DATAROLE $8 TYPE $14;
2552015    retain DATAROLE "VALIDATE" Type "";
MPRINT(EM_DIAGRAM):   retain DATAROLE "VALIDATE" Type "";
2552016    set work.Score_SUMDATA;
MPRINT(EM_DIAGRAM):   set work.Score_SUMDATA;
2552017    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set WORK.SCORE_SUMDATA.
NOTE: The data set WORK.SCORE_SUMDATA has 2 observations and 12 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2552018    proc append base=WORK.ScoreSTAT data=work.Score_SUMDATA;
MPRINT(EM_DIAGRAM):   proc append base=WORK.ScoreSTAT data=work.Score_SUMDATA;
2552019    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK.SCORE_SUMDATA to WORK.SCORESTAT.
NOTE: There were 2 observations read from the data set WORK.SCORE_SUMDATA.
NOTE: 2 observations added.
NOTE: The data set WORK.SCORESTAT has 4 observations and 12 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2552020    data WORK.SCOREFREQMETA;
MPRINT(EM_DIAGRAM):    data WORK.SCOREFREQMETA;
2552021    length NAME $32 ROLE $32 LEVEL $8;
MPRINT(EM_DIAGRAM):   length NAME $32 ROLE $32 LEVEL $8;
2552022    NAME="I_DepVar";
MPRINT(EM_DIAGRAM):   NAME="I_DepVar";
2552023    ROLE="INPUT";
MPRINT(EM_DIAGRAM):   ROLE="INPUT";
2552024    LEVEL="NOMINAL";
MPRINT(EM_DIAGRAM):   LEVEL="NOMINAL";
2552025    TYPE="C";
MPRINT(EM_DIAGRAM):   TYPE="C";
2552026    output;
MPRINT(EM_DIAGRAM):   output;
2552027    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK.SCOREFREQMETA has 1 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2552028    data WORK.SCOREHISTMETA;
MPRINT(EM_DIAGRAM):    data WORK.SCOREHISTMETA;
2552029    length NAME $32 ROLE $32 LEVEL $8;
MPRINT(EM_DIAGRAM):   length NAME $32 ROLE $32 LEVEL $8;
2552030    NAME="P_DepVar1";
MPRINT(EM_DIAGRAM):   NAME="P_DepVar1";
2552031    ROLE="INPUT";
MPRINT(EM_DIAGRAM):   ROLE="INPUT";
2552032    LEVEL="INTERVAL";
MPRINT(EM_DIAGRAM):   LEVEL="INTERVAL";
2552033    TYPE="N";
MPRINT(EM_DIAGRAM):   TYPE="N";
2552034    output;
MPRINT(EM_DIAGRAM):   output;
2552035    NAME="P_DepVar0";
MPRINT(EM_DIAGRAM):   NAME="P_DepVar0";
2552036    ROLE="INPUT";
MPRINT(EM_DIAGRAM):   ROLE="INPUT";
2552037    LEVEL="INTERVAL";
MPRINT(EM_DIAGRAM):   LEVEL="INTERVAL";
2552038    TYPE="N";
MPRINT(EM_DIAGRAM):   TYPE="N";
2552039    output;
MPRINT(EM_DIAGRAM):   output;
2552040    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK.SCOREHISTMETA has 2 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2552041    ods listing close;
MPRINT(EM_DIAGRAM):    ods listing close;
2552042    ods output onewayfreqs=WORK.TEMPFREQ;
MPRINT(EM_DIAGRAM):   ods output onewayfreqs=WORK.TEMPFREQ;
2552043    proc freq data = EMWS8.Score_SCORE order=formatted addnames;
MPRINT(EM_DIAGRAM):   proc freq data = EMWS8.Score_SCORE order=formatted addnames;
2552044    table I_DepVar / missing;
MPRINT(EM_DIAGRAM):   table I_DepVar / missing;
2552045    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK.TEMPFREQ has 2 observations and 8 variables.
NOTE: There were 4500 observations read from the data set EMWS8.SCORE_SCORE.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
2552046    quit;
2552047    ods listing;
MPRINT(EM_DIAGRAM):   ods listing;
2552048    data WORK.Score_BAR(keep=_VARIABLE_ TYPE COUNT PERCENT _X_ _XLABEL_);
MPRINT(EM_DIAGRAM):    data WORK.Score_BAR(keep=_VARIABLE_ TYPE COUNT PERCENT _X_ _XLABEL_);
2552049    label _VARIABLE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel, NOQUOTE))"
2552049  ! Type = "%sysfunc(sasmsg(sashelp.dmine, rpt_type_vlabel,         NOQUOTE))" _X_ =
2552049  ! "%sysfunc(sasmsg(sashelp.dmine, rpt_numValue_vlabel, NOQUOTE))" _XLABEL_ =
2552050       "%sysfunc(sasmsg(sashelp.dmine, rpt_fmtValue_vlabel ,    NOQUOTE))" COUNT =
2552050  ! "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel,        NOQUOTE))" PERCENT =
2552050  ! "%sysfunc(sasmsg(sashelp.dmine, rpt_percent_vlabel,      NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _VARIABLE_ = "Variable" Type = "Type" _X_ = "Numeric Value"
_XLABEL_ = "Formatted Value" COUNT = "Frequency Count" PERCENT = "Percent";
2552051    dsid = open("WORK.TEMPFREQ");
MPRINT(EM_DIAGRAM):   dsid = open("WORK.TEMPFREQ");
2552052    varnum = varnum(dsid, 'VARIABLE');
MPRINT(EM_DIAGRAM):   varnum = varnum(dsid, 'VARIABLE');
2552053    freqnum = varnum(dsid, 'FREQUENCY');
MPRINT(EM_DIAGRAM):   freqnum = varnum(dsid, 'FREQUENCY');
2552054    pvarnum = varnum(dsid, 'PERCENT');
MPRINT(EM_DIAGRAM):   pvarnum = varnum(dsid, 'PERCENT');
2552055    typenum = varnum(dsid, '_TYPE_');
MPRINT(EM_DIAGRAM):   typenum = varnum(dsid, '_TYPE_');
2552056    length _VARIABLE_ $32 TYPE $1 _XLABEL_ $32;
MPRINT(EM_DIAGRAM):   length _VARIABLE_ $32 TYPE $1 _XLABEL_ $32;
2552057    do while(^fetch(dsid));
MPRINT(EM_DIAGRAM):   do while(^fetch(dsid));
2552058    _VARIABLE_ = strip(getvarc(dsid, varnum));
MPRINT(EM_DIAGRAM):   _VARIABLE_ = strip(getvarc(dsid, varnum));
2552059    count = getvarn(dsid, freqnum);
MPRINT(EM_DIAGRAM):   count = getvarn(dsid, freqnum);
2552060    percent= getvarn(dsid, pvarnum);
MPRINT(EM_DIAGRAM):   percent= getvarn(dsid, pvarnum);
2552061    vvarnum = varnum(dsid, _VARIABLE_);
MPRINT(EM_DIAGRAM):   vvarnum = varnum(dsid, _VARIABLE_);
2552062    type = vartype(dsid, vvarnum);
MPRINT(EM_DIAGRAM):   type = vartype(dsid, vvarnum);
2552063    fvarnum = varnum(dsid, 'F_'!!substr(_VARIABLE_, 1, 30));
MPRINT(EM_DIAGRAM):   fvarnum = varnum(dsid, 'F_'!!substr(_VARIABLE_, 1, 30));
2552064    _XLABEL_ = left(getvarc(dsid, fvarnum));
MPRINT(EM_DIAGRAM):   _XLABEL_ = left(getvarc(dsid, fvarnum));
2552065    _X_ = .;
MPRINT(EM_DIAGRAM):   _X_ = .;
2552066    if TYPE eq 'N' then _X_ = getvarn(dsid, vvarnum);
MPRINT(EM_DIAGRAM):   if TYPE eq 'N' then _X_ = getvarn(dsid, vvarnum);
2552067    output;
MPRINT(EM_DIAGRAM):   output;
2552068    end;
MPRINT(EM_DIAGRAM):   end;
2552069    dsid = close(dsid);
MPRINT(EM_DIAGRAM):   dsid = close(dsid);
2552070    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK.SCORE_BAR has 2 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2552071    proc sort data=WORK.Score_BAR NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.Score_BAR NOTHREADS;
2552072    by _VARIABLE_;
MPRINT(EM_DIAGRAM):   by _VARIABLE_;
2552073    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set WORK.SCORE_BAR.
NOTE: The data set WORK.SCORE_BAR has 2 observations and 6 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2552074    proc sort data=WORK.M3MTVPD7;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.M3MTVPD7;
2552075    by Name;
MPRINT(EM_DIAGRAM):   by Name;
2552076    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK.M3MTVPD7.
NOTE: The data set WORK.M3MTVPD7 has 1 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2552077    data WORK.Score_BAR;
MPRINT(EM_DIAGRAM):   data WORK.Score_BAR;
2552078    merge WORK.Score_BAR(in=_a) WORK.M3MTVPD7(keep=Name Role rename=(Name=_Variable_));
MPRINT(EM_DIAGRAM):   merge WORK.Score_BAR(in=_a) WORK.M3MTVPD7(keep=Name Role
rename=(Name=_Variable_));
2552079    by _Variable_;
MPRINT(EM_DIAGRAM):   by _Variable_;
2552080    label Role = "%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel ,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label Role = "Role";
2552081    if _a then output;
MPRINT(EM_DIAGRAM):   if _a then output;
2552082    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set WORK.SCORE_BAR.
NOTE: There were 1 observations read from the data set WORK.M3MTVPD7.
NOTE: The data set WORK.SCORE_BAR has 2 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2552083    data WORK.Score_BAR;
MPRINT(EM_DIAGRAM):    data WORK.Score_BAR;
2552084    length DATAROLE $8 TYPE $14;
MPRINT(EM_DIAGRAM):   length DATAROLE $8 TYPE $14;
2552085    retain DATAROLE "SCORE";
MPRINT(EM_DIAGRAM):   retain DATAROLE "SCORE";
2552086    set WORK.Score_BAR;
MPRINT(EM_DIAGRAM):   set WORK.Score_BAR;
2552087    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set WORK.SCORE_BAR.
NOTE: The data set WORK.SCORE_BAR has 2 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2552088    proc append base=EMWS8.Score_BAR data=WORK.Score_BAR;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Score_BAR data=WORK.Score_BAR;
2552089    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK.SCORE_BAR to EMWS8.SCORE_BAR.
NOTE: There were 2 observations read from the data set WORK.SCORE_BAR.
NOTE: 2 observations added.
NOTE: The data set EMWS8.SCORE_BAR has 6 observations and 8 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2552090    %var_profile(DATA=EMWS8.Score_SCORE, OUTPUT=work.Score_VARHIST,
2552090  ! METADATA=WORK.SCOREHISTMETA, COMPUTESTAT=N, BINDATA=_bindata, STAT=_STAT,
2552090  ! PCTLSTAT=work.Score_SUMDATA, FREQ=, BIN=Y, NUMBARS= 16);
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*
* Score: Computing Summary Statistics
*------------------------------------------------------------*
MPRINT(VAR_PROFILE):   filename _mac catalog 'WORK.MACROS.VARIABLES.SOURCE';
MPRINT(VAR_PROFILE):   data _null;
MPRINT(VAR_PROFILE):   set WORK.SCOREHISTMETA(where=(LEVEL = 'INTERVAL' and ROLE ne 'FREQ'))
end=eof;
MPRINT(VAR_PROFILE):   if eof then call symput('_nobs', put(_N_, best.));
MPRINT(VAR_PROFILE):   run;
 
NOTE: There were 2 observations read from the data set WORK.SCOREHISTMETA.
      WHERE (LEVEL='INTERVAL') and (ROLE not = 'FREQ');
NOTE: The data set WORK._NULL has 2 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VAR_PROFILE):   data _null_;
MPRINT(VAR_PROFILE):   file _mac;
MPRINT(VAR_PROFILE):   length _VARS $80;
MPRINT(VAR_PROFILE):   retain _vars;
MPRINT(VAR_PROFILE):   if _n_ =1 then put '%macro _vars;';
MPRINT(VAR_PROFILE):   set WORK.SCOREHISTMETA end=eof;
MPRINT(VAR_PROFILE):   where LEVEL = 'INTERVAL' or ROLE='FREQ';
MPRINT(VAR_PROFILE):   if ROLE='FREQ' then call symput('FREQ', trim(NAME));
MPRINT(VAR_PROFILE):   else do;
MPRINT(VAR_PROFILE):   if length(strip(_vars)) + length(strip(NAME)) + 1 <80 then _vars =
strip(_vars)!! ' ' !!strip(NAME);
MPRINT(VAR_PROFILE):   else do;
MPRINT(VAR_PROFILE):   put _Vars;
MPRINT(VAR_PROFILE):   _vars = strip(NAME);
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   if eof then do;
MPRINT(VAR_PROFILE):   put _Vars;
MPRINT(VAR_PROFILE):   put '%mend _vars;';
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   run;
 
NOTE: The file _MAC is:
      Catalog Name=WORK.MACROS.VARIABLES.SOURCE,
      Catalog Page Size=4096,
      Number of Catalog Pages=5,
      Created=Mittwoch, 20. April 2016 17.40 Uhr,
      Last Modified=Mittwoch, 20. April 2016 17.40 Uhr,
      Filename=C:\Users\LUKASF~1\AppData\Local\Temp\SAS Temporary
      Files\_TD10172_WN7LF-LEAVE_\Prc2\macros.sas7bcat,
      Release Created=9.0301M2,Host Created=X64_7PRO
 
NOTE: 3 records were written to the file _MAC.
      The minimum record length was 12.
      The maximum record length was 19.
NOTE: There were 2 observations read from the data set WORK.SCOREHISTMETA.
      WHERE (LEVEL='INTERVAL') or (ROLE='FREQ');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
NOTE: %INCLUDE (level 1) file _MAC is file WORK.MACROS.VARIABLES.SOURCE.
2552091   +%macro _vars;
2552092   +P_DepVar1 P_DepVar0
2552093   +%mend _vars;
NOTE: %INCLUDE (level 1) ending.
MPRINT(VAR_PROFILE):   filename _mac;
NOTE: Fileref _MAC has been deassigned.
MPRINT(VAR_PROFILE):   data _binneddata / view=_binneddata;
MPRINT(VAR_PROFILE):   set EMWS8.Score_SCORE(obs=1000000);
MPRINT(VAR_PROFILE):   format P_DepVar0 F1_. P_DepVar1 F2_. ;
MPRINT(VAR_PROFILE):   run;
 
NOTE: DATA STEP view saved on file WORK._BINNEDDATA.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VAR_PROFILE):   proc dmdb data=_binneddata(obs=1000000)
classout=_temptab(rename=(NAME=VARIABLE FREQUENCY=COUNT FREQPERCENT=PERCENT));
MPRINT(VAR_PROFILE):   class
MPRINT(_VARS):   P_DepVar1 P_DepVar0
MPRINT(VAR_PROFILE):   ;
MPRINT(VAR_PROFILE):   run;
 
NOTE: Records processed = 4500   Memory used = 511K.
NOTE: View WORK._BINNEDDATA.VIEW used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
NOTE: There were 4500 observations read from the data set EMWS8.SCORE_SCORE.
NOTE: There were 4500 observations read from the data set WORK._BINNEDDATA.
NOTE: The data set WORK._TEMPTAB has 32 observations and 9 variables.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
MPRINT(VAR_PROFILE):   data work.Score_VARHIST;
MPRINT(VAR_PROFILE):   label VALUE = "Value";
MPRINT(VAR_PROFILE):   label VARIABLE = "Variable";
MPRINT(VAR_PROFILE):   label COUNT = "Frequency Count";
MPRINT(VAR_PROFILE):   label PERCENT = "Percent";
MPRINT(VAR_PROFILE):   set _temptab;
MPRINT(VAR_PROFILE):   format VALUE 12.3 count;
MPRINT(VAR_PROFILE):   value = inputn(level, 'best12.');
MPRINT(VAR_PROFILE):   keep VARIABLE COUNT PERCENT VALUE;
MPRINT(VAR_PROFILE):   run;
 
NOTE: There were 32 observations read from the data set WORK._TEMPTAB.
NOTE: The data set WORK.SCORE_VARHIST has 32 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VAR_PROFILE):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(VAR_PROFILE):   delete _TEMPTAB _BINNEDDATA _MINMAXDATA;
MPRINT(VAR_PROFILE):   run;
 
NOTE: The file WORK._MINMAXDATA (memtype=(DATA VIEW)) was not found, but appears on a DELETE
      statement.
NOTE: Deleting WORK._TEMPTAB (memtype=DATA).
NOTE: Deleting WORK._BINNEDDATA (memtype=VIEW).
MPRINT(VAR_PROFILE):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
 
 
MPRINT(EM_DIAGRAM):  ;
 
2552094    data work.Score_VARHIST;
MPRINT(EM_DIAGRAM):    data work.Score_VARHIST;
2552095    length DATAROLE $8 TYPE $14;
MPRINT(EM_DIAGRAM):   length DATAROLE $8 TYPE $14;
2552096    retain DATAROLE "SCORE" TYPE "";
MPRINT(EM_DIAGRAM):   retain DATAROLE "SCORE" TYPE "";
2552097    set work.Score_VARHIST(rename=(VALUE=X));
MPRINT(EM_DIAGRAM):   set work.Score_VARHIST(rename=(VALUE=X));
2552098    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 32 observations read from the data set WORK.SCORE_VARHIST.
NOTE: The data set WORK.SCORE_VARHIST has 32 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2552099    proc append base=work.Score_HIST data=work.Score_VARHIST;
MPRINT(EM_DIAGRAM):   proc append base=work.Score_HIST data=work.Score_VARHIST;
2552100    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK.SCORE_VARHIST to WORK.SCORE_HIST.
NOTE: There were 32 observations read from the data set WORK.SCORE_VARHIST.
NOTE: 32 observations added.
NOTE: The data set WORK.SCORE_HIST has 96 observations and 6 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2552101    proc stdize data=EMWS8.Score_SCORE(obs=1000000) outstat=work.Score_SUMDATA
2552101  ! out=_null_ pctlpts=(0 5 25 50 75 95 100);
MPRINT(EM_DIAGRAM):    proc stdize data=EMWS8.Score_SCORE(obs=1000000)
outstat=work.Score_SUMDATA out=_null_ pctlpts=(0 5 25 50 75 95 100);
2552102    var
2552103    P_DepVar1
2552104    P_DepVar0
2552105    ;
MPRINT(EM_DIAGRAM):   var P_DepVar1 P_DepVar0 ;
2552106    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4500 observations read from the data set EMWS8.SCORE_SCORE.
NOTE: The data set WORK.SCORE_SUMDATA has 15 observations and 3 variables.
NOTE: PROCEDURE STDIZE used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
2552107    quit;
 
2552108    proc transpose data=work.Score_SUMDATA out=work.Score_SUMDATA(
2552108  ! rename=(_NAME_=VARIABLE _LABEL_=LABEL LOCATION=MEAN SCALE=STD P0=MIN P50=MEDIAN
2552108  ! P100=MAX));
MPRINT(EM_DIAGRAM):    proc transpose data=work.Score_SUMDATA out=work.Score_SUMDATA(
rename=(_NAME_=VARIABLE _LABEL_=LABEL LOCATION=MEAN SCALE=STD P0=MIN P50=MEDIAN P100=MAX));
2552109    where _TYPE_ in('LOCATION' 'SCALE' 'N' 'P0' 'P25' 'P50' 'P75' 'P100');
MPRINT(EM_DIAGRAM):   where _TYPE_ in('LOCATION' 'SCALE' 'N' 'P0' 'P25' 'P50' 'P75' 'P100');
2552110    id _type_;
MPRINT(EM_DIAGRAM):   id _type_;
2552111    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set WORK.SCORE_SUMDATA.
      WHERE _TYPE_ in ('LOCATION', 'N', 'P0', 'P100', 'P25', 'P50', 'P75', 'SCALE');
NOTE: The data set WORK.SCORE_SUMDATA has 2 observations and 10 variables.
NOTE: PROCEDURE TRANSPOSE used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2552112    data work.Score_SUMDATA;
MPRINT(EM_DIAGRAM):   data work.Score_SUMDATA;
2552113    length DATAROLE $8 TYPE $14;
MPRINT(EM_DIAGRAM):   length DATAROLE $8 TYPE $14;
2552114    retain DATAROLE "SCORE" Type "";
MPRINT(EM_DIAGRAM):   retain DATAROLE "SCORE" Type "";
2552115    set work.Score_SUMDATA;
MPRINT(EM_DIAGRAM):   set work.Score_SUMDATA;
2552116    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set WORK.SCORE_SUMDATA.
NOTE: The data set WORK.SCORE_SUMDATA has 2 observations and 12 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2552117    proc append base=WORK.ScoreSTAT data=work.Score_SUMDATA;
MPRINT(EM_DIAGRAM):   proc append base=WORK.ScoreSTAT data=work.Score_SUMDATA;
2552118    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK.SCORE_SUMDATA to WORK.SCORESTAT.
NOTE: There were 2 observations read from the data set WORK.SCORE_SUMDATA.
NOTE: 2 observations added.
NOTE: The data set WORK.SCORESTAT has 6 observations and 12 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2552119    data EMWS8.Score_BAR(DROP=ROLE rename = (_VARIABLE_=VARIABLE _XLABEL_=X));
MPRINT(EM_DIAGRAM):    data EMWS8.Score_BAR(DROP=ROLE rename = (_VARIABLE_=VARIABLE
_XLABEL_=X));
2552120    set EMWS8.Score_BAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Score_BAR;
2552121    label VARIABLE= "%sysfunc(sasmsg(sashelp.dmine, meta_name_vlabel,  NOQUOTE))"
2552121  ! DATAROLE= "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel,  NOQUOTE))" TYPE =
2552121  ! "%sysfunc(sasmsg(sashelp.dmine, rpt_outputType_vlabel,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label VARIABLE= "Variable Name" DATAROLE= "Data Role" TYPE = "Output
Type";
2552122    select(_VARIABLE_);
MPRINT(EM_DIAGRAM):   select(_VARIABLE_);
2552123    when("I_DepVar") TYPE = 'CLASSIFICATION';
MPRINT(EM_DIAGRAM):   when("I_DepVar") TYPE = 'CLASSIFICATION';
2552124    otherwise;
MPRINT(EM_DIAGRAM):   otherwise;
2552125    end;
MPRINT(EM_DIAGRAM):   end;
2552126    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Variable VARIABLE is uninitialized.
NOTE: There were 6 observations read from the data set EMWS8.SCORE_BAR.
NOTE: The data set EMWS8.SCORE_BAR has 6 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2552127    proc sort data = EMWS8.Score_BAR NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS8.Score_BAR NOTHREADS;
2552128    by DATAROLE TYPE;
MPRINT(EM_DIAGRAM):   by DATAROLE TYPE;
2552129    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 6 observations read from the data set EMWS8.SCORE_BAR.
NOTE: The data set EMWS8.SCORE_BAR has 6 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2552130    %let _cn = %sysfunc(getoption(CENTER));
2552131    %let _nb = %sysfunc(getoption(NUMBER));
2552132    options nonumber nocenter;
MPRINT(EM_DIAGRAM):   options nonumber nocenter;
2552133    title;
MPRINT(EM_DIAGRAM):   title;
2552134    proc print data = EMWS8.Score_BAR noobs label;
MPRINT(EM_DIAGRAM):   proc print data = EMWS8.Score_BAR noobs label;
2552135    by DATAROLE TYPE;
MPRINT(EM_DIAGRAM):   by DATAROLE TYPE;
2552136    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
2552137    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_classStats_title, NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Class Variable Summary Statistics";
MPRINT(EM_DIAGRAM):   run;
2552138    run;
 
NOTE: There were 6 observations read from the data set EMWS8.SCORE_BAR.
NOTE: The PROCEDURE PRINT printed page 2071.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2552139    title10;
MPRINT(EM_DIAGRAM):   title10;
2552140    options &_cn &_nb;
MPRINT(EM_DIAGRAM):   options NOCENTER NONUMBER;
2552141    data EMWS8.Score_HIST;
MPRINT(EM_DIAGRAM):    data EMWS8.Score_HIST;
2552142    set work.Score_HIST(rename=(Percent=Value));
MPRINT(EM_DIAGRAM):   set work.Score_HIST(rename=(Percent=Value));
2552143    label VARIABLE= "%sysfunc(sasmsg(sashelp.dmine, meta_name_vlabel,      NOQUOTE))"
2552143  ! DATAROLE= "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel,   NOQUOTE))" TYPE =
2552143  ! "%sysfunc(sasmsg(sashelp.dmine, rpt_outputType_vlabel, NOQUOTE))" X =
2552144       "%sysfunc(sasmsg(sashelp.dmine, rpt_numValue_vlabel,   NOQUOTE))" COUNT =
2552144  ! "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel,      NOQUOTE))" Value =
2552144  ! "%sysfunc(sasmsg(sashelp.dmine, rpt_percent_vlabel,    NOQUOTE))";
MPRINT(EM_DIAGRAM):   label VARIABLE= "Variable Name" DATAROLE= "Data Role" TYPE = "Output
Type" X = "Numeric Value" COUNT = "Frequency Count" Value = "Percent";
2552145    select(VARIABLE);
MPRINT(EM_DIAGRAM):   select(VARIABLE);
2552146    when("P_DepVar1") TYPE = 'PROBABILITY';
MPRINT(EM_DIAGRAM):   when("P_DepVar1") TYPE = 'PROBABILITY';
2552147    when("P_DepVar0") TYPE = 'PROBABILITY';
MPRINT(EM_DIAGRAM):   when("P_DepVar0") TYPE = 'PROBABILITY';
2552148    otherwise;
MPRINT(EM_DIAGRAM):   otherwise;
2552149    end;
MPRINT(EM_DIAGRAM):   end;
2552150    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 96 observations read from the data set WORK.SCORE_HIST.
NOTE: The data set EMWS8.SCORE_HIST has 96 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2552151    data WORK.ScoreSTAT;
MPRINT(EM_DIAGRAM):    data WORK.ScoreSTAT;
2552152    set WORK.ScoreSTAT;
MPRINT(EM_DIAGRAM):   set WORK.ScoreSTAT;
2552153    label VARIABLE= "%sysfunc(sasmsg(sashelp.dmine, meta_name_vlabel,  NOQUOTE))" LABEL
2552153  ! = "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel,  NOQUOTE))" MEAN =
2552153  ! "%sysfunc(sasmsg(sashelp.dmine, rpt_mean_vlabel,  NOQUOTE))" N =
2552154       "%sysfunc(sasmsg(sashelp.dmine, rpt_nonmiss_vlabel,  NOQUOTE))" STD =
2552154  ! "%sysfunc(sasmsg(sashelp.dmine, rpt_std_vlabel,  NOQUOTE))" MIN =
2552154  ! "%sysfunc(sasmsg(sashelp.dmine, rpt_minimum_vlabel,  NOQUOTE))" MAX =
2552155       "%sysfunc(sasmsg(sashelp.dmine, rpt_maximum_vlabel,  NOQUOTE))" MEDIAN =
2552155  ! "%sysfunc(sasmsg(sashelp.dmine, rpt_median_vlabel,  NOQUOTE))" P25 =
2552155  ! "%sysfunc(sasmsg(sashelp.dmine, rpt_p25_vlabel,  NOQUOTE))" P75 =
2552156       "%sysfunc(sasmsg(sashelp.dmine, rpt_p75_vlabel,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label VARIABLE= "Variable Name" LABEL = "Label" MEAN = "Mean" N = "Non
Missing" STD = "Standard Deviation" MIN = "Minimum" MAX = "Maximum" MEDIAN = "Median" P25 =
"25th Percentile" P75 = "75th Percentile";
2552157    select(VARIABLE);
MPRINT(EM_DIAGRAM):   select(VARIABLE);
2552158    when("P_DepVar1") TYPE = 'PROBABILITY';
MPRINT(EM_DIAGRAM):   when("P_DepVar1") TYPE = 'PROBABILITY';
2552159    when("P_DepVar0") TYPE = 'PROBABILITY';
MPRINT(EM_DIAGRAM):   when("P_DepVar0") TYPE = 'PROBABILITY';
2552160    otherwise;
MPRINT(EM_DIAGRAM):   otherwise;
2552161    end;
MPRINT(EM_DIAGRAM):   end;
2552162    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 6 observations read from the data set WORK.SCORESTAT.
NOTE: The data set WORK.SCORESTAT has 6 observations and 12 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
2552163    proc sort data = WORK.ScoreSTAT NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = WORK.ScoreSTAT NOTHREADS;
2552164    by VARIABLE;
MPRINT(EM_DIAGRAM):   by VARIABLE;
2552165    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 6 observations read from the data set WORK.SCORESTAT.
NOTE: The data set WORK.SCORESTAT has 6 observations and 12 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2552166    proc transpose data = WORK.ScoreSTAT out=WORK.ScoreSTAT(rename=(_NAME_=STATISTICS
2552166  ! _LABEL_=LABEL));
MPRINT(EM_DIAGRAM):   proc transpose data = WORK.ScoreSTAT
out=WORK.ScoreSTAT(rename=(_NAME_=STATISTICS _LABEL_=LABEL));
2552167    by VARIABLE;
MPRINT(EM_DIAGRAM):   by VARIABLE;
2552168    id DATAROLE;
MPRINT(EM_DIAGRAM):   id DATAROLE;
2552169    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 6 observations read from the data set WORK.SCORESTAT.
NOTE: The data set WORK.SCORESTAT has 16 observations and 6 variables.
NOTE: PROCEDURE TRANSPOSE used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2552170    proc datasets library=WORK nolist;
MPRINT(EM_DIAGRAM):   proc datasets library=WORK nolist;
2552171    modify ScoreSTAT;
MPRINT(EM_DIAGRAM):   modify ScoreSTAT;
2552172    label STATISTICS = "%sysfunc(sasmsg(sashelp.dmine, rpt_statistics_vlabel,
2552172  ! NOQUOTE))" VARIABLE= "%sysfunc(sasmsg(sashelp.dmine, meta_name_vlabel,  NOQUOTE))"
2552172  ! LABEL = "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel,  NOQUOTE))" TYPE =
MPRINT(EM_DIAGRAM):   label STATISTICS = "Statistics" VARIABLE= "Variable Name" LABEL =
"Label" TYPE = "Output Type";
WARNING: Variable TYPE not found in data set WORK.SCORESTAT.
2552173       "%sysfunc(sasmsg(sashelp.dmine, rpt_outputType_vlabel,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   run;
2552174    run;
 
NOTE: MODIFY was successful for WORK.SCORESTAT.DATA.
2552175    %let _cn = %sysfunc(getoption(CENTER));
2552176    %let _nb = %sysfunc(getoption(NUMBER));
2552177    options nonumber nocenter;
MPRINT(EM_DIAGRAM):   options nonumber nocenter;
2552178    title;
MPRINT(EM_DIAGRAM):   title;
2552179    proc print data = WORK.ScoreSTAT label noobs;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
 
 
MPRINT(EM_DIAGRAM):   proc print data = WORK.ScoreSTAT label noobs;
2552180    by VARIABLE;
MPRINT(EM_DIAGRAM):   by VARIABLE;
2552181    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
2552182    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_intervalStats_title, NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Interval Variable Summary Statistics";
MPRINT(EM_DIAGRAM):   run;
2552183    run;
 
NOTE: There were 16 observations read from the data set WORK.SCORESTAT.
NOTE: The PROCEDURE PRINT printed page 2072.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2552184    title10;
MPRINT(EM_DIAGRAM):   title10;
2552185    options &_cn &_nb;
MPRINT(EM_DIAGRAM):   options NOCENTER NONUMBER;
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
