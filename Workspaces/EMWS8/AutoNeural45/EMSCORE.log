MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "28. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "19.33 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                28. April 2016
Time:                19.33 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O2PO6BUS 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural45\EMSCORE.out" encoding="UTF-8" 
NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O2PO6BUS new;
MPRINT(EM_DIAGRAM):   run;
428711     filename emflow
428711   ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural45\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural45\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * AutoNeural45: Scoring DATA data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
428712     *------------------------------------------------------------*;
428713     * AutoNeural45: Scoring DATA data;
428714     *------------------------------------------------------------*;
428715     data EMWS8.AutoNeural45_TRAIN
428716     / view=EMWS8.AutoNeural45_TRAIN
428717     ;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural45_TRAIN / view=EMWS8.AutoNeural45_TRAIN ;
428718     set EMWS8.Meta2_TRAIN
428719     ;
MPRINT(EM_DIAGRAM):   set EMWS8.Meta2_TRAIN ;
428720     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural45\EMFLOWSCORE.sas.
428721    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
428722    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
428723    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
428724    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
428725    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
428726    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
428727    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
428728    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
428729    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
428730    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
428731    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
428732    +LENGTH _WARN_ $4
428733    +      F_DepVar  $ 12
428734    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
428735    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
428736    +
428737    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
428738    +
428739    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
428740    +
428741    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
428742    +
428743    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
428744    +
428745    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
428746    +
428747    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
428748    +
428749    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
428750    +
428751    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
428752    +
428753    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
428754    +
428755    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
428756    +
428757    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
428758    +
428759    +      label S_Year_Birth = 'Standard: Year_Birth' ;
MPRINT(EM_DIAGRAM):   label S_Year_Birth = 'Standard: Year_Birth' ;
428760    +
428761    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
428762    +
428763    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
428764    +
428765    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
428766    +
428767    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
428768    +
428769    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
428770    +
428771    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
428772    +
428773    +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
428774    +
428775    +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
428776    +
428777    +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
428778    +
428779    +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
428780    +
428781    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
428782    +
428783    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
428784    +
428785    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
428786    +
428787    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
428788    +
428789    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
428790    +
428791    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
428792    +
428793    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
428794    +
428795    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
428796    +
428797    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
428798    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
428799    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
428800    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
428801    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
428802    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
428803    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
428804    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
428805    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
428806    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
428807    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
428808    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
428809    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
428810    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
428811    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
428812    +end;
MPRINT(EM_DIAGRAM):   end;
428813    +else do;
MPRINT(EM_DIAGRAM):   else do;
428814    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
428815    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
428816    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
428817    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
428818    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
428819    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
428820    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
428821    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
428822    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
428823    +         end;
MPRINT(EM_DIAGRAM):   end;
428824    +         else do;
MPRINT(EM_DIAGRAM):   else do;
428825    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
428826    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
428827    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
428828    +            end;
MPRINT(EM_DIAGRAM):   end;
428829    +         end;
MPRINT(EM_DIAGRAM):   end;
428830    +      end;
MPRINT(EM_DIAGRAM):   end;
428831    +      else do;
MPRINT(EM_DIAGRAM):   else do;
428832    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
428833    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
428834    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
428835    +         end;
MPRINT(EM_DIAGRAM):   end;
428836    +      end;
MPRINT(EM_DIAGRAM):   end;
428837    +   end;
MPRINT(EM_DIAGRAM):   end;
428838    +   else do;
MPRINT(EM_DIAGRAM):   else do;
428839    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
428840    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
428841    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
428842    +      end;
MPRINT(EM_DIAGRAM):   end;
428843    +      else do;
MPRINT(EM_DIAGRAM):   else do;
428844    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
428845    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
428846    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
428847    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
428848    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
428849    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
428850    +         end;
MPRINT(EM_DIAGRAM):   end;
428851    +      end;
MPRINT(EM_DIAGRAM):   end;
428852    +   end;
MPRINT(EM_DIAGRAM):   end;
428853    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
428854    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
428855    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
428856    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
428857    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
428858    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
428859    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
428860    +   end;
MPRINT(EM_DIAGRAM):   end;
428861    +end;
MPRINT(EM_DIAGRAM):   end;
428862    +
428863    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
428864    +*** Checking missing input Interval
428865    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
428866    +
428867    +IF NMISS(
428868    +   AcceptedCmpTotal ,
428869    +   Frq ,
428870    +   Income ,
428871    +   Mnt ,
428872    +   MntGoldProds ,
428873    +   MntMeatProducts ,
428874    +   NumCatalogPurchases ,
428875    +   NumDealsPurchases ,
428876    +   NumWebVisitsMonth ,
428877    +   RFMstat ,
428878    +   Recency ,
428879    +   Teenhome ,
428880    +   Year_Birth   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Income , Mnt , MntGoldProds , 
MntMeatProducts , NumCatalogPurchases , NumDealsPurchases , NumWebVisitsMonth , RFMstat , 
Recency , Teenhome , Year_Birth ) THEN DO;
428881    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
428882    +
428883    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
428884    +END;
MPRINT(EM_DIAGRAM):   END;
428885    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
428886    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
428887    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
428888    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
428889    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
428890    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
428891    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
428892    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
428893    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
428894    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
428895    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
428896    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
428897    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
428898    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
428899    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
428900    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
428901    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
428902    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
428903    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
428904    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
428905    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
428906    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
428907    +   S_Year_Birth  =    -163.205330145852 +     0.08289609202864 * Year_Birth ;
MPRINT(EM_DIAGRAM):   S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
428908    +END;
MPRINT(EM_DIAGRAM):   END;
428909    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
428910    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
428911    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
428912    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
428913    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
428914    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
428915    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
428916    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
428917    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
428918    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
428919    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
428920    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
428921    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
428922    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
428923    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
428924    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
428925    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
428926    +   ELSE S_NumCatalogPurchases
428927    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
428928    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
428929    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
428930    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
428931    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
428932    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
428933    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
428934    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
428935    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
428936    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
428937    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
428938    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
428939    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
428940    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
428941    +   IF MISSING( Year_Birth ) THEN S_Year_Birth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Year_Birth ) THEN S_Year_Birth = . ;
428942    +   ELSE S_Year_Birth  =    -163.205330145852 +     0.08289609202864 *
428943    +        Year_Birth ;
MPRINT(EM_DIAGRAM):   ELSE S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
428944    +END;
MPRINT(EM_DIAGRAM):   END;
428945    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
428946    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
428947    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
428948    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
428949    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
428950    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
428951    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
428952    +   H1x1_1  =     0.05803258857677 * S_AcceptedCmpTotal
428953    +          +     0.20201401677737 * S_Frq  +    -0.20060721007078 * S_Income
428954    +          +     0.60811032155087 * S_Mnt  +     0.01308658928857 *
428955    +        S_MntGoldProds  +    -0.32543222756203 * S_MntMeatProducts
428956    +          +    -0.17075976331442 * S_NumCatalogPurchases
428957    +          +     0.11936859656737 * S_NumDealsPurchases
428958    +          +    -0.02241344557322 * S_NumWebVisitsMonth
428959    +          +    -0.00310652561662 * S_RFMstat  +    -0.02230175002754 *
428960    +        S_Recency  +     0.15041197329983 * S_Teenhome
428961    +          +     0.08314198987289 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.05803258857677 * S_AcceptedCmpTotal + 0.20201401677737 * 
S_Frq + -0.20060721007078 * S_Income + 0.60811032155087 * S_Mnt + 0.01308658928857 * 
S_MntGoldProds + -0.32543222756203 * S_MntMeatProducts + -0.17075976331442 * 
S_NumCatalogPurchases + 0.11936859656737 * S_NumDealsPurchases + -0.02241344557322 * 
S_NumWebVisitsMonth + -0.00310652561662 * S_RFMstat + -0.02230175002754 * S_Recency + 
0.15041197329983 * S_Teenhome + 0.08314198987289 * S_Year_Birth ;
428962    +   H1x1_2  =    -0.00804143026158 * S_AcceptedCmpTotal
428963    +          +     0.27782411169423 * S_Frq  +    -0.09048435288173 * S_Income
428964    +          +    -0.33276938238431 * S_Mnt  +     0.04318269159154 *
428965    +        S_MntGoldProds  +     -2.0876028997983 * S_MntMeatProducts
428966    +          +     -0.1082096588215 * S_NumCatalogPurchases
428967    +          +    -0.35286072202398 * S_NumDealsPurchases
428968    +          +     0.41909763538671 * S_NumWebVisitsMonth
428969    +          +    -0.00388254493812 * S_RFMstat  +    -0.25572729223699 *
428970    +        S_Recency  +     0.03657184300378 * S_Teenhome
428971    +          +    -0.16144911909057 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.00804143026158 * S_AcceptedCmpTotal + 0.27782411169423 * 
S_Frq + -0.09048435288173 * S_Income + -0.33276938238431 * S_Mnt + 0.04318269159154 * 
S_MntGoldProds + -2.0876028997983 * S_MntMeatProducts + -0.1082096588215 * 
S_NumCatalogPurchases + -0.35286072202398 * S_NumDealsPurchases + 0.41909763538671 * 
S_NumWebVisitsMonth + -0.00388254493812 * S_RFMstat + -0.25572729223699 * S_Recency + 
0.03657184300378 * S_Teenhome + -0.16144911909057 * S_Year_Birth ;
428972    +   H1x1_1  = H1x1_1  +    -0.14329179496615 * Marital_StatusDivorced
428973    +          +     0.35890266446407 * Marital_StatusMarried
428974    +          +    -0.32958224268654 * Marital_StatusSingle
428975    +          +     0.26093411772209 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.14329179496615 * Marital_StatusDivorced + 
0.35890266446407 * Marital_StatusMarried + -0.32958224268654 * Marital_StatusSingle + 
0.26093411772209 * Marital_StatusTogether ;
428976    +   H1x1_2  = H1x1_2  +     0.31162998470604 * Marital_StatusDivorced
428977    +          +    -0.02828904025667 * Marital_StatusMarried
428978    +          +      0.2062300465945 * Marital_StatusSingle
428979    +          +    -0.11283173230117 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.31162998470604 * Marital_StatusDivorced + 
-0.02828904025667 * Marital_StatusMarried + 0.2062300465945 * Marital_StatusSingle + 
-0.11283173230117 * Marital_StatusTogether ;
428980    +   H1x1_1  =     0.22625757706844 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.22625757706844 + H1x1_1 ;
428981    +   H1x1_2  =    -2.80839017705591 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -2.80839017705591 + H1x1_2 ;
428982    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
428983    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
428984    +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
428985    +   H1x1_2  = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
428986    +END;
MPRINT(EM_DIAGRAM):   END;
428987    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
428988    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
428989    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
428990    +END;
MPRINT(EM_DIAGRAM):   END;
428991    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
428992    +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
428993    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
428994    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
428995    +   H1x2_1  =     0.27800214153202 * S_AcceptedCmpTotal
428996    +          +     0.25771103125393 * S_Frq  +     0.06540858611057 * S_Income
428997    +          +     0.88062167564978 * S_Mnt  +    -0.03352879166216 *
428998    +        S_MntGoldProds  +    -0.36438303456911 * S_MntMeatProducts
428999    +          +    -0.01120232190428 * S_NumCatalogPurchases
429000    +          +     0.08335061407191 * S_NumDealsPurchases
429001    +          +     0.19045617784308 * S_NumWebVisitsMonth
429002    +          +    -0.06814497340743 * S_RFMstat  +     -0.3861487824541 *
429003    +        S_Recency  +    -0.01223664611486 * S_Teenhome
429004    +          +     0.11830416426236 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.27800214153202 * S_AcceptedCmpTotal + 0.25771103125393 * 
S_Frq + 0.06540858611057 * S_Income + 0.88062167564978 * S_Mnt + -0.03352879166216 * 
S_MntGoldProds + -0.36438303456911 * S_MntMeatProducts + -0.01120232190428 * 
S_NumCatalogPurchases + 0.08335061407191 * S_NumDealsPurchases + 0.19045617784308 * 
S_NumWebVisitsMonth + -0.06814497340743 * S_RFMstat + -0.3861487824541 * S_Recency + 
-0.01223664611486 * S_Teenhome + 0.11830416426236 * S_Year_Birth ;
429005    +   H1x2_2  =     0.00966586432047 * S_AcceptedCmpTotal
429006    +          +    -0.15805213020363 * S_Frq  +    -0.10704590641296 * S_Income
429007    +          +    -0.22835348335472 * S_Mnt  +     0.04216459566963 *
429008    +        S_MntGoldProds  +     0.12105776304851 * S_MntMeatProducts
429009    +          +     0.05405710367459 * S_NumCatalogPurchases
429010    +          +     0.05779108423435 * S_NumDealsPurchases
429011    +          +     0.06578830114376 * S_NumWebVisitsMonth
429012    +          +     0.03581918113264 * S_RFMstat  +    -0.03493380943266 *
429013    +        S_Recency  +     0.07188455936346 * S_Teenhome
429014    +          +    -0.01037640411629 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 0.00966586432047 * S_AcceptedCmpTotal + -0.15805213020363 * 
S_Frq + -0.10704590641296 * S_Income + -0.22835348335472 * S_Mnt + 0.04216459566963 * 
S_MntGoldProds + 0.12105776304851 * S_MntMeatProducts + 0.05405710367459 * 
S_NumCatalogPurchases + 0.05779108423435 * S_NumDealsPurchases + 0.06578830114376 * 
S_NumWebVisitsMonth + 0.03581918113264 * S_RFMstat + -0.03493380943266 * S_Recency + 
0.07188455936346 * S_Teenhome + -0.01037640411629 * S_Year_Birth ;
429015    +   H1x2_1  = H1x2_1  +    -0.11011761565852 * Marital_StatusDivorced
429016    +          +     -0.0971208757038 * Marital_StatusMarried
429017    +          +    -0.07250288479873 * Marital_StatusSingle
429018    +          +    -0.09370040203357 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.11011761565852 * Marital_StatusDivorced + 
-0.0971208757038 * Marital_StatusMarried + -0.07250288479873 * Marital_StatusSingle + 
-0.09370040203357 * Marital_StatusTogether ;
429019    +   H1x2_2  = H1x2_2  +     0.00981909678131 * Marital_StatusDivorced
429020    +          +     0.21091057941446 * Marital_StatusMarried
429021    +          +    -0.10578923343752 * Marital_StatusSingle
429022    +          +     0.14340624257864 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 0.00981909678131 * Marital_StatusDivorced + 
0.21091057941446 * Marital_StatusMarried + -0.10578923343752 * Marital_StatusSingle + 
0.14340624257864 * Marital_StatusTogether ;
429023    +   H1x2_1  =    -1.44195571181963 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -1.44195571181963 + H1x2_1 ;
429024    +   H1x2_2  =    -1.92908634775882 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -1.92908634775882 + H1x2_2 ;
429025    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
429026    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
429027    +   H1x2_1  = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
429028    +   H1x2_2  = 1.0 / (1.0 + EXP(MIN( - H1x2_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_2 = 1.0 / (1.0 + EXP(MIN( - H1x2_2 , _EXP_BAR)));
429029    +END;
MPRINT(EM_DIAGRAM):   END;
429030    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
429031    +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
429032    +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
429033    +END;
MPRINT(EM_DIAGRAM):   END;
429034    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
429035    +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
429036    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
429037    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
429038    +   H2x1_1  =     22.0923538262076 * H1x1_1  +     8.31949814946749 * H1x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 22.0923538262076 * H1x1_1 + 8.31949814946749 * H1x1_2 ;
429039    +   H2x1_1  = H2x1_1  +    -17.2128148948815 * H1x2_1
429040    +          +    -68.7975539209644 * H1x2_2 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -17.2128148948815 * H1x2_1 + -68.7975539209644 * 
H1x2_2 ;
429041    +   H2x1_1  =    -0.74489671021313 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -0.74489671021313 + H2x1_1 ;
429042    +   H2x1_2  = 0;
MPRINT(EM_DIAGRAM):   H2x1_2 = 0;
429043    +   _MAX_ = MAX (H2x1_1 , H2x1_2 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H2x1_1 , H2x1_2 );
429044    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
429045    +   H2x1_1  = EXP(H2x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_1 = EXP(H2x1_1 - _MAX_);
429046    +   _SUM_ = _SUM_ + H2x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_1 ;
429047    +   H2x1_2  = EXP(H2x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_2 = EXP(H2x1_2 - _MAX_);
429048    +   _SUM_ = _SUM_ + H2x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_2 ;
429049    +   H2x1_1  = H2x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 / _SUM_;
429050    +   H2x1_2  = H2x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 / _SUM_;
429051    +END;
MPRINT(EM_DIAGRAM):   END;
429052    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
429053    +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
429054    +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
429055    +END;
MPRINT(EM_DIAGRAM):   END;
429056    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
429057    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
429058    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
429059    +
429060    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
429061    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
429062    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
429063    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
429064    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
429065    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
429066    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
429067    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
429068    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
429069    +end;
MPRINT(EM_DIAGRAM):   end;
429070    +else do;
MPRINT(EM_DIAGRAM):   else do;
429071    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
429072    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
429073    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
429074    +   end;
MPRINT(EM_DIAGRAM):   end;
429075    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
429076    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
429077    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
429078    +   end;
MPRINT(EM_DIAGRAM):   end;
429079    +   else do;
MPRINT(EM_DIAGRAM):   else do;
429080    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
429081    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
429082    +   end;
MPRINT(EM_DIAGRAM):   end;
429083    +end;
MPRINT(EM_DIAGRAM):   end;
429084    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
429085    +   P_DepVar1  =    -142.808746328345 * H2x1_1  +     -41.474410437113 * H2x1_2
429086    +         ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -142.808746328345 * H2x1_1 + -41.474410437113 * H2x1_2 ;
429087    +   P_DepVar1  =     56.9415259403341 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 56.9415259403341 + P_DepVar1 ;
429088    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
429089    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
429090    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
429091    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
429092    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
429093    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
429094    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
429095    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
429096    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
429097    +END;
MPRINT(EM_DIAGRAM):   END;
429098    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
429099    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
429100    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
429101    +END;
MPRINT(EM_DIAGRAM):   END;
429102    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
429103    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
429104    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
429105    +END;
MPRINT(EM_DIAGRAM):   END;
429106    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
429107    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
429108    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
429109    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
429110    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
429111    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
429112    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
429113    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
429114    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
429115    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
429116    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
429117    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
429118    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
429119    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
429120    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
429121    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
429122    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
429123    +END;
MPRINT(EM_DIAGRAM):   END;
429124    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
429125    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
429126    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
429127    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
429128     run;

NOTE: DATA STEP view saved on file EMWS8.AUTONEURAL45_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.META2_TRAIN.VIEW used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
429129     quit;
429130     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
429131     filename emflow
429131   ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural45\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural45\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * AutoNeural45: Scoring VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
429132     *------------------------------------------------------------*;
429133     * AutoNeural45: Scoring VALIDATE data;
429134     *------------------------------------------------------------*;
429135     data EMWS8.AutoNeural45_VALIDATE
429136     / view=EMWS8.AutoNeural45_VALIDATE
429137     ;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural45_VALIDATE / view=EMWS8.AutoNeural45_VALIDATE ;
429138     set EMWS8.Meta2_VALIDATE
429139     ;
MPRINT(EM_DIAGRAM):   set EMWS8.Meta2_VALIDATE ;
429140     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural45\EMFLOWSCORE.sas.
429141    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
429142    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
429143    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
429144    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
429145    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
429146    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
429147    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
429148    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
429149    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
429150    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
429151    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
429152    +LENGTH _WARN_ $4
429153    +      F_DepVar  $ 12
429154    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
429155    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
429156    +
429157    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
429158    +
429159    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
429160    +
429161    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
429162    +
429163    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
429164    +
429165    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
429166    +
429167    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
429168    +
429169    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
429170    +
429171    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
429172    +
429173    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
429174    +
429175    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
429176    +
429177    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
429178    +
429179    +      label S_Year_Birth = 'Standard: Year_Birth' ;
MPRINT(EM_DIAGRAM):   label S_Year_Birth = 'Standard: Year_Birth' ;
429180    +
429181    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
429182    +
429183    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
429184    +
429185    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
429186    +
429187    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
429188    +
429189    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
429190    +
429191    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
429192    +
429193    +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
429194    +
429195    +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
429196    +
429197    +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
429198    +
429199    +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
429200    +
429201    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
429202    +
429203    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
429204    +
429205    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
429206    +
429207    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
429208    +
429209    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
429210    +
429211    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
429212    +
429213    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
429214    +
429215    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
429216    +
429217    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
429218    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
429219    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
429220    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
429221    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
429222    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
429223    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
429224    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
429225    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
429226    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
429227    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
429228    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
429229    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
429230    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
429231    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
429232    +end;
MPRINT(EM_DIAGRAM):   end;
429233    +else do;
MPRINT(EM_DIAGRAM):   else do;
429234    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
429235    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
429236    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
429237    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
429238    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
429239    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
429240    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
429241    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
429242    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
429243    +         end;
MPRINT(EM_DIAGRAM):   end;
429244    +         else do;
MPRINT(EM_DIAGRAM):   else do;
429245    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
429246    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
429247    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
429248    +            end;
MPRINT(EM_DIAGRAM):   end;
429249    +         end;
MPRINT(EM_DIAGRAM):   end;
429250    +      end;
MPRINT(EM_DIAGRAM):   end;
429251    +      else do;
MPRINT(EM_DIAGRAM):   else do;
429252    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
429253    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
429254    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
429255    +         end;
MPRINT(EM_DIAGRAM):   end;
429256    +      end;
MPRINT(EM_DIAGRAM):   end;
429257    +   end;
MPRINT(EM_DIAGRAM):   end;
429258    +   else do;
MPRINT(EM_DIAGRAM):   else do;
429259    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
429260    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
429261    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
429262    +      end;
MPRINT(EM_DIAGRAM):   end;
429263    +      else do;
MPRINT(EM_DIAGRAM):   else do;
429264    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
429265    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
429266    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
429267    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
429268    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
429269    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
429270    +         end;
MPRINT(EM_DIAGRAM):   end;
429271    +      end;
MPRINT(EM_DIAGRAM):   end;
429272    +   end;
MPRINT(EM_DIAGRAM):   end;
429273    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
429274    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
429275    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
429276    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
429277    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
429278    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
429279    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
429280    +   end;
MPRINT(EM_DIAGRAM):   end;
429281    +end;
MPRINT(EM_DIAGRAM):   end;
429282    +
429283    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
429284    +*** Checking missing input Interval
429285    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
429286    +
429287    +IF NMISS(
429288    +   AcceptedCmpTotal ,
429289    +   Frq ,
429290    +   Income ,
429291    +   Mnt ,
429292    +   MntGoldProds ,
429293    +   MntMeatProducts ,
429294    +   NumCatalogPurchases ,
429295    +   NumDealsPurchases ,
429296    +   NumWebVisitsMonth ,
429297    +   RFMstat ,
429298    +   Recency ,
429299    +   Teenhome ,
429300    +   Year_Birth   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Income , Mnt , MntGoldProds , 
MntMeatProducts , NumCatalogPurchases , NumDealsPurchases , NumWebVisitsMonth , RFMstat , 
Recency , Teenhome , Year_Birth ) THEN DO;
429301    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
429302    +
429303    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
429304    +END;
MPRINT(EM_DIAGRAM):   END;
429305    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
429306    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
429307    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
429308    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
429309    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
429310    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
429311    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
429312    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
429313    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
429314    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
429315    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
429316    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
429317    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
429318    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
429319    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
429320    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
429321    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
429322    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
429323    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
429324    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
429325    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
429326    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
429327    +   S_Year_Birth  =    -163.205330145852 +     0.08289609202864 * Year_Birth ;
MPRINT(EM_DIAGRAM):   S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
429328    +END;
MPRINT(EM_DIAGRAM):   END;
429329    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
429330    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
429331    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
429332    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
429333    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
429334    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
429335    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
429336    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
429337    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
429338    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
429339    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
429340    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
429341    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
429342    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
429343    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
429344    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
429345    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
429346    +   ELSE S_NumCatalogPurchases
429347    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
429348    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
429349    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
429350    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
429351    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
429352    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
429353    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
429354    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
429355    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
429356    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
429357    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
429358    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
429359    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
429360    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
429361    +   IF MISSING( Year_Birth ) THEN S_Year_Birth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Year_Birth ) THEN S_Year_Birth = . ;
429362    +   ELSE S_Year_Birth  =    -163.205330145852 +     0.08289609202864 *
429363    +        Year_Birth ;
MPRINT(EM_DIAGRAM):   ELSE S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
429364    +END;
MPRINT(EM_DIAGRAM):   END;
429365    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
429366    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
429367    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
429368    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
429369    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
429370    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
429371    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
429372    +   H1x1_1  =     0.05803258857677 * S_AcceptedCmpTotal
429373    +          +     0.20201401677737 * S_Frq  +    -0.20060721007078 * S_Income
429374    +          +     0.60811032155087 * S_Mnt  +     0.01308658928857 *
429375    +        S_MntGoldProds  +    -0.32543222756203 * S_MntMeatProducts
429376    +          +    -0.17075976331442 * S_NumCatalogPurchases
429377    +          +     0.11936859656737 * S_NumDealsPurchases
429378    +          +    -0.02241344557322 * S_NumWebVisitsMonth
429379    +          +    -0.00310652561662 * S_RFMstat  +    -0.02230175002754 *
429380    +        S_Recency  +     0.15041197329983 * S_Teenhome
429381    +          +     0.08314198987289 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.05803258857677 * S_AcceptedCmpTotal + 0.20201401677737 * 
S_Frq + -0.20060721007078 * S_Income + 0.60811032155087 * S_Mnt + 0.01308658928857 * 
S_MntGoldProds + -0.32543222756203 * S_MntMeatProducts + -0.17075976331442 * 
S_NumCatalogPurchases + 0.11936859656737 * S_NumDealsPurchases + -0.02241344557322 * 
S_NumWebVisitsMonth + -0.00310652561662 * S_RFMstat + -0.02230175002754 * S_Recency + 
0.15041197329983 * S_Teenhome + 0.08314198987289 * S_Year_Birth ;
429382    +   H1x1_2  =    -0.00804143026158 * S_AcceptedCmpTotal
429383    +          +     0.27782411169423 * S_Frq  +    -0.09048435288173 * S_Income
429384    +          +    -0.33276938238431 * S_Mnt  +     0.04318269159154 *
429385    +        S_MntGoldProds  +     -2.0876028997983 * S_MntMeatProducts
429386    +          +     -0.1082096588215 * S_NumCatalogPurchases
429387    +          +    -0.35286072202398 * S_NumDealsPurchases
429388    +          +     0.41909763538671 * S_NumWebVisitsMonth
429389    +          +    -0.00388254493812 * S_RFMstat  +    -0.25572729223699 *
429390    +        S_Recency  +     0.03657184300378 * S_Teenhome
429391    +          +    -0.16144911909057 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.00804143026158 * S_AcceptedCmpTotal + 0.27782411169423 * 
S_Frq + -0.09048435288173 * S_Income + -0.33276938238431 * S_Mnt + 0.04318269159154 * 
S_MntGoldProds + -2.0876028997983 * S_MntMeatProducts + -0.1082096588215 * 
S_NumCatalogPurchases + -0.35286072202398 * S_NumDealsPurchases + 0.41909763538671 * 
S_NumWebVisitsMonth + -0.00388254493812 * S_RFMstat + -0.25572729223699 * S_Recency + 
0.03657184300378 * S_Teenhome + -0.16144911909057 * S_Year_Birth ;
429392    +   H1x1_1  = H1x1_1  +    -0.14329179496615 * Marital_StatusDivorced
429393    +          +     0.35890266446407 * Marital_StatusMarried
429394    +          +    -0.32958224268654 * Marital_StatusSingle
429395    +          +     0.26093411772209 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.14329179496615 * Marital_StatusDivorced + 
0.35890266446407 * Marital_StatusMarried + -0.32958224268654 * Marital_StatusSingle + 
0.26093411772209 * Marital_StatusTogether ;
429396    +   H1x1_2  = H1x1_2  +     0.31162998470604 * Marital_StatusDivorced
429397    +          +    -0.02828904025667 * Marital_StatusMarried
429398    +          +      0.2062300465945 * Marital_StatusSingle
429399    +          +    -0.11283173230117 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.31162998470604 * Marital_StatusDivorced + 
-0.02828904025667 * Marital_StatusMarried + 0.2062300465945 * Marital_StatusSingle + 
-0.11283173230117 * Marital_StatusTogether ;
429400    +   H1x1_1  =     0.22625757706844 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.22625757706844 + H1x1_1 ;
429401    +   H1x1_2  =    -2.80839017705591 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -2.80839017705591 + H1x1_2 ;
429402    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
429403    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
429404    +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
429405    +   H1x1_2  = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
429406    +END;
MPRINT(EM_DIAGRAM):   END;
429407    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
429408    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
429409    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
429410    +END;
MPRINT(EM_DIAGRAM):   END;
429411    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
429412    +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
429413    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
429414    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
429415    +   H1x2_1  =     0.27800214153202 * S_AcceptedCmpTotal
429416    +          +     0.25771103125393 * S_Frq  +     0.06540858611057 * S_Income
429417    +          +     0.88062167564978 * S_Mnt  +    -0.03352879166216 *
429418    +        S_MntGoldProds  +    -0.36438303456911 * S_MntMeatProducts
429419    +          +    -0.01120232190428 * S_NumCatalogPurchases
429420    +          +     0.08335061407191 * S_NumDealsPurchases
429421    +          +     0.19045617784308 * S_NumWebVisitsMonth
429422    +          +    -0.06814497340743 * S_RFMstat  +     -0.3861487824541 *
429423    +        S_Recency  +    -0.01223664611486 * S_Teenhome
429424    +          +     0.11830416426236 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.27800214153202 * S_AcceptedCmpTotal + 0.25771103125393 * 
S_Frq + 0.06540858611057 * S_Income + 0.88062167564978 * S_Mnt + -0.03352879166216 * 
S_MntGoldProds + -0.36438303456911 * S_MntMeatProducts + -0.01120232190428 * 
S_NumCatalogPurchases + 0.08335061407191 * S_NumDealsPurchases + 0.19045617784308 * 
S_NumWebVisitsMonth + -0.06814497340743 * S_RFMstat + -0.3861487824541 * S_Recency + 
-0.01223664611486 * S_Teenhome + 0.11830416426236 * S_Year_Birth ;
429425    +   H1x2_2  =     0.00966586432047 * S_AcceptedCmpTotal
429426    +          +    -0.15805213020363 * S_Frq  +    -0.10704590641296 * S_Income
429427    +          +    -0.22835348335472 * S_Mnt  +     0.04216459566963 *
429428    +        S_MntGoldProds  +     0.12105776304851 * S_MntMeatProducts
429429    +          +     0.05405710367459 * S_NumCatalogPurchases
429430    +          +     0.05779108423435 * S_NumDealsPurchases
429431    +          +     0.06578830114376 * S_NumWebVisitsMonth
429432    +          +     0.03581918113264 * S_RFMstat  +    -0.03493380943266 *
429433    +        S_Recency  +     0.07188455936346 * S_Teenhome
429434    +          +    -0.01037640411629 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 0.00966586432047 * S_AcceptedCmpTotal + -0.15805213020363 * 
S_Frq + -0.10704590641296 * S_Income + -0.22835348335472 * S_Mnt + 0.04216459566963 * 
S_MntGoldProds + 0.12105776304851 * S_MntMeatProducts + 0.05405710367459 * 
S_NumCatalogPurchases + 0.05779108423435 * S_NumDealsPurchases + 0.06578830114376 * 
S_NumWebVisitsMonth + 0.03581918113264 * S_RFMstat + -0.03493380943266 * S_Recency + 
0.07188455936346 * S_Teenhome + -0.01037640411629 * S_Year_Birth ;
429435    +   H1x2_1  = H1x2_1  +    -0.11011761565852 * Marital_StatusDivorced
429436    +          +     -0.0971208757038 * Marital_StatusMarried
429437    +          +    -0.07250288479873 * Marital_StatusSingle
429438    +          +    -0.09370040203357 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.11011761565852 * Marital_StatusDivorced + 
-0.0971208757038 * Marital_StatusMarried + -0.07250288479873 * Marital_StatusSingle + 
-0.09370040203357 * Marital_StatusTogether ;
429439    +   H1x2_2  = H1x2_2  +     0.00981909678131 * Marital_StatusDivorced
429440    +          +     0.21091057941446 * Marital_StatusMarried
429441    +          +    -0.10578923343752 * Marital_StatusSingle
429442    +          +     0.14340624257864 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 0.00981909678131 * Marital_StatusDivorced + 
0.21091057941446 * Marital_StatusMarried + -0.10578923343752 * Marital_StatusSingle + 
0.14340624257864 * Marital_StatusTogether ;
429443    +   H1x2_1  =    -1.44195571181963 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -1.44195571181963 + H1x2_1 ;
429444    +   H1x2_2  =    -1.92908634775882 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -1.92908634775882 + H1x2_2 ;
429445    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
429446    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
429447    +   H1x2_1  = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
429448    +   H1x2_2  = 1.0 / (1.0 + EXP(MIN( - H1x2_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_2 = 1.0 / (1.0 + EXP(MIN( - H1x2_2 , _EXP_BAR)));
429449    +END;
MPRINT(EM_DIAGRAM):   END;
429450    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
429451    +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
429452    +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
429453    +END;
MPRINT(EM_DIAGRAM):   END;
429454    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
429455    +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
429456    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
429457    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
429458    +   H2x1_1  =     22.0923538262076 * H1x1_1  +     8.31949814946749 * H1x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 22.0923538262076 * H1x1_1 + 8.31949814946749 * H1x1_2 ;
429459    +   H2x1_1  = H2x1_1  +    -17.2128148948815 * H1x2_1
429460    +          +    -68.7975539209644 * H1x2_2 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -17.2128148948815 * H1x2_1 + -68.7975539209644 * 
H1x2_2 ;
429461    +   H2x1_1  =    -0.74489671021313 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -0.74489671021313 + H2x1_1 ;
429462    +   H2x1_2  = 0;
MPRINT(EM_DIAGRAM):   H2x1_2 = 0;
429463    +   _MAX_ = MAX (H2x1_1 , H2x1_2 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H2x1_1 , H2x1_2 );
429464    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
429465    +   H2x1_1  = EXP(H2x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_1 = EXP(H2x1_1 - _MAX_);
429466    +   _SUM_ = _SUM_ + H2x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_1 ;
429467    +   H2x1_2  = EXP(H2x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_2 = EXP(H2x1_2 - _MAX_);
429468    +   _SUM_ = _SUM_ + H2x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_2 ;
429469    +   H2x1_1  = H2x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 / _SUM_;
429470    +   H2x1_2  = H2x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 / _SUM_;
429471    +END;
MPRINT(EM_DIAGRAM):   END;
429472    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
429473    +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
429474    +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
429475    +END;
MPRINT(EM_DIAGRAM):   END;
429476    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
429477    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
429478    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
429479    +
429480    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
429481    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
429482    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
429483    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
429484    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
429485    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
429486    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
429487    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
429488    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
429489    +end;
MPRINT(EM_DIAGRAM):   end;
429490    +else do;
MPRINT(EM_DIAGRAM):   else do;
429491    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
429492    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
429493    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
429494    +   end;
MPRINT(EM_DIAGRAM):   end;
429495    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
429496    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
429497    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
429498    +   end;
MPRINT(EM_DIAGRAM):   end;
429499    +   else do;
MPRINT(EM_DIAGRAM):   else do;
429500    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
429501    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
429502    +   end;
MPRINT(EM_DIAGRAM):   end;
429503    +end;
MPRINT(EM_DIAGRAM):   end;
429504    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
429505    +   P_DepVar1  =    -142.808746328345 * H2x1_1  +     -41.474410437113 * H2x1_2
429506    +         ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -142.808746328345 * H2x1_1 + -41.474410437113 * H2x1_2 ;
429507    +   P_DepVar1  =     56.9415259403341 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 56.9415259403341 + P_DepVar1 ;
429508    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
429509    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
429510    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
429511    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
429512    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
429513    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
429514    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
429515    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
429516    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
429517    +END;
MPRINT(EM_DIAGRAM):   END;
429518    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
429519    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
429520    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
429521    +END;
MPRINT(EM_DIAGRAM):   END;
429522    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
429523    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
429524    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
429525    +END;
MPRINT(EM_DIAGRAM):   END;
429526    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
429527    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
429528    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
429529    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
429530    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
429531    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
429532    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
429533    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
429534    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
429535    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
429536    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
429537    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
429538    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
429539    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
429540    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
429541    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
429542    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
429543    +END;
MPRINT(EM_DIAGRAM):   END;
429544    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
429545    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
429546    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
429547    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
429548     run;

NOTE: DATA STEP view saved on file EMWS8.AUTONEURAL45_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.META2_VALIDATE.VIEW used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
429549     quit;
429550     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
429551     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
429552     * AutoNeural45: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * AutoNeural45: Computing metadata for TRAIN data;
429553     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;

NOTE: View EMWS8.AUTONEURAL45_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural45\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS8.AutoNeural45_TRAIN out=_tempAdvisor 
noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS8.AutoNeural45_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS8.AutoNeural45_TRAIN out=WORK.M0B9G5CX 
noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0B9G5CX;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20 
INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M0B9G5CX(keep=name type length label format formatl 
formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then format = strip(format)!!strip(put(formatl, 
best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, 
best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then informat = 
strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, 
best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0B9G5CX;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M0B9G5CX;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M1R4ETHL NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1R4ETHL;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M1R4ETHL;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0J6IV23(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M1R4ETHL;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1R4ETHL;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 
FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M1R4ETHL;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" 
"MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" 
"QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" "YEAR" "YYMMDD" "YYMON" 
"YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" 
"EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) 
formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = 
"DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) 
formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" 
"NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" 
"SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = 
"DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then 
level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 
'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 
'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ 
('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 
'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 
'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1R4ETHL;
MPRINT(EMADVISECOLUMNS):   set WORK.M1R4ETHL;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= 
"Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= 
"Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower limit" UPPERLIMIT= 
"Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= 
"Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Meta2_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Meta2_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural45_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT 
LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "AutoNeural45";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("P_DEPVAR1") creator = "AutoNeural45";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR1") creator = "AutoNeural45";
MPRINT(EM_DIAGRAM):   when("P_DEPVAR0") creator = "AutoNeural45";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR0") creator = "AutoNeural45";
MPRINT(EM_DIAGRAM):   when("F_DEPVAR") creator = "AutoNeural45";
MPRINT(EM_DIAGRAM):   when("I_DEPVAR") creator = "AutoNeural45";
MPRINT(EM_DIAGRAM):   when("U_DEPVAR") creator = "AutoNeural45";
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "AutoNeural45";
MPRINT(EM_DIAGRAM):   when("DEPVAR") model = "AutoNeural45";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * AutoNeural45: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
429865     data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
429866     set EMWS8.AutoNeural45_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural45_EMINFO;
429867     where DATA='AutoNeural45' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='AutoNeural45' and KEY ^in('DECDATA', 'DECMETA', 
'IMPORTANCE', 'MODEL');
429868     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.AUTONEURAL45_EMINFO.
      WHERE (DATA='AutoNeural45') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

429869     data EMWS8.AutoNeural45_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural45_EMINFO;
429870     length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
429871     input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
429872     cards;
MPRINT(EM_DIAGRAM):   cards;

NOTE: The data set EMWS8.AUTONEURAL45_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   run;
429876     run;
429877     data EMWS8.AutoNeural45_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural45_EMINFO;
429878     set EMWS8.AutoNeural45_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural45_EMINFO WORK.MODELTEMP_INFO;
429879     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.AUTONEURAL45_EMINFO.
NOTE: There were 0 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS8.AUTONEURAL45_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

429880     proc sort data = EMWS8.AutoNeural45_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.AutoNeural45_EMINFO NOTHREADS;
429881     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
429882     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.AUTONEURAL45_EMINFO.
NOTE: The data set EMWS8.AUTONEURAL45_EMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

429883     proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
429884     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
429885     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set EMWS8.FIMPORT_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 1 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

429886     proc sort data = EMWS8.AutoNeural45_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS8.AutoNeural45_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
429887     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
429888     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 3 observations read from the data set EMWS8.AUTONEURAL45_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

429889     data EMWS8.AutoNeural45_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural45_EMINFO;
429890     merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
429891     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
429892     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 3 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS8.AUTONEURAL45_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

429893     proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
429894     delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
429895     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
429896     quit;
MPRINT(EM_DIAGRAM):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

NOTE: View EMWS8.AUTONEURAL45_TRAIN.VIEW used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      
NOTE: View EMWS8.AUTONEURAL45_VALIDATE.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
