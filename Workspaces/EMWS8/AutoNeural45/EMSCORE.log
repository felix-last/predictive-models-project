MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "28. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "10.47 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                28. April 2016
Time:                10.47 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O1TMUCGN 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural45\EMSCORE.out" encoding="UTF-8" 
NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O1TMUCGN new;
MPRINT(EM_DIAGRAM):   run;
2766508    filename emflow
2766508  ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural45\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural45\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * AutoNeural45: Scoring DATA data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2766509    *------------------------------------------------------------*;
2766510    * AutoNeural45: Scoring DATA data;
2766511    *------------------------------------------------------------*;
2766512    data EMWS8.AutoNeural45_TRAIN
2766513    / view=EMWS8.AutoNeural45_TRAIN
2766514    ;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural45_TRAIN / view=EMWS8.AutoNeural45_TRAIN ;
2766515    set EMWS8.Meta2_TRAIN
2766516    ;
MPRINT(EM_DIAGRAM):   set EMWS8.Meta2_TRAIN ;
2766517    %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural45\EMFLOWSCORE.sas.
2766518   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2766519   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2766520   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2766521   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2766522   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2766523   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2766524   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2766525   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2766526   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2766527   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2766528   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2766529   +LENGTH _WARN_ $4
2766530   +      F_DepVar  $ 12
2766531   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
2766532   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2766533   +
2766534   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2766535   +
2766536   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2766537   +
2766538   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2766539   +
2766540   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2766541   +
2766542   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2766543   +
2766544   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2766545   +
2766546   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2766547   +
2766548   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2766549   +
2766550   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2766551   +
2766552   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2766553   +
2766554   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2766555   +
2766556   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2766557   +
2766558   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2766559   +
2766560   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2766561   +
2766562   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2766563   +
2766564   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2766565   +
2766566   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2766567   +
2766568   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2766569   +
2766570   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2766571   +
2766572   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2766573   +
2766574   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2766575   +
2766576   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2766577   +
2766578   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2766579   +
2766580   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2766581   +
2766582   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2766583   +
2766584   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2766585   +
2766586   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2766587   +
2766588   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2766589   +
2766590   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
2766591   +
2766592   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
2766593   +
2766594   +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
2766595   +
2766596   +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
2766597   +
2766598   +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
2766599   +
2766600   +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
2766601   +
2766602   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2766603   +
2766604   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2766605   +
2766606   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2766607   +
2766608   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2766609   +
2766610   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
2766611   +
2766612   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2766613   +
2766614   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
2766615   +
2766616   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2766617   +
2766618   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2766619   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2766620   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2766621   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2766622   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2766623   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2766624   +end;
MPRINT(EM_DIAGRAM):   end;
2766625   +else do;
MPRINT(EM_DIAGRAM):   else do;
2766626   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2766627   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2766628   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2766629   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2766630   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2766631   +   end;
MPRINT(EM_DIAGRAM):   end;
2766632   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2766633   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2766634   +   end;
MPRINT(EM_DIAGRAM):   end;
2766635   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2766636   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2766637   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2766638   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2766639   +   end;
MPRINT(EM_DIAGRAM):   end;
2766640   +end;
MPRINT(EM_DIAGRAM):   end;
2766641   +
2766642   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2766643   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2766644   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2766645   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2766646   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2766647   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2766648   +end;
MPRINT(EM_DIAGRAM):   end;
2766649   +else do;
MPRINT(EM_DIAGRAM):   else do;
2766650   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2766651   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2766652   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2766653   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2766654   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2766655   +   end;
MPRINT(EM_DIAGRAM):   end;
2766656   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2766657   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2766658   +   end;
MPRINT(EM_DIAGRAM):   end;
2766659   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2766660   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2766661   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2766662   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2766663   +   end;
MPRINT(EM_DIAGRAM):   end;
2766664   +end;
MPRINT(EM_DIAGRAM):   end;
2766665   +
2766666   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2766667   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2766668   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2766669   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2766670   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2766671   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2766672   +end;
MPRINT(EM_DIAGRAM):   end;
2766673   +else do;
MPRINT(EM_DIAGRAM):   else do;
2766674   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2766675   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2766676   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2766677   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2766678   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2766679   +   end;
MPRINT(EM_DIAGRAM):   end;
2766680   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2766681   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2766682   +   end;
MPRINT(EM_DIAGRAM):   end;
2766683   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2766684   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2766685   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2766686   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2766687   +   end;
MPRINT(EM_DIAGRAM):   end;
2766688   +end;
MPRINT(EM_DIAGRAM):   end;
2766689   +
2766690   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2766691   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2766692   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2766693   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2766694   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2766695   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2766696   +end;
MPRINT(EM_DIAGRAM):   end;
2766697   +else do;
MPRINT(EM_DIAGRAM):   else do;
2766698   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2766699   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2766700   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2766701   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2766702   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2766703   +   end;
MPRINT(EM_DIAGRAM):   end;
2766704   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2766705   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2766706   +   end;
MPRINT(EM_DIAGRAM):   end;
2766707   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2766708   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2766709   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2766710   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2766711   +   end;
MPRINT(EM_DIAGRAM):   end;
2766712   +end;
MPRINT(EM_DIAGRAM):   end;
2766713   +
2766714   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2766715   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2766716   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2766717   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2766718   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2766719   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2766720   +end;
MPRINT(EM_DIAGRAM):   end;
2766721   +else do;
MPRINT(EM_DIAGRAM):   else do;
2766722   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2766723   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2766724   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2766725   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2766726   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2766727   +   end;
MPRINT(EM_DIAGRAM):   end;
2766728   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2766729   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2766730   +   end;
MPRINT(EM_DIAGRAM):   end;
2766731   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2766732   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2766733   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2766734   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2766735   +   end;
MPRINT(EM_DIAGRAM):   end;
2766736   +end;
MPRINT(EM_DIAGRAM):   end;
2766737   +
2766738   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2766739   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2766740   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2766741   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2766742   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2766743   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2766744   +end;
MPRINT(EM_DIAGRAM):   end;
2766745   +else do;
MPRINT(EM_DIAGRAM):   else do;
2766746   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2766747   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2766748   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2766749   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2766750   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2766751   +   end;
MPRINT(EM_DIAGRAM):   end;
2766752   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2766753   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2766754   +   end;
MPRINT(EM_DIAGRAM):   end;
2766755   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2766756   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2766757   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2766758   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2766759   +   end;
MPRINT(EM_DIAGRAM):   end;
2766760   +end;
MPRINT(EM_DIAGRAM):   end;
2766761   +
2766762   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2766763   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
2766764   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2766765   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2766766   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2766767   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2766768   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2766769   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2766770   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2766771   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2766772   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2766773   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2766774   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2766775   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2766776   +end;
MPRINT(EM_DIAGRAM):   end;
2766777   +else do;
MPRINT(EM_DIAGRAM):   else do;
2766778   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2766779   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2766780   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2766781   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2766782   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2766783   +   end;
MPRINT(EM_DIAGRAM):   end;
2766784   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2766785   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2766786   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2766787   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2766788   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2766789   +   end;
MPRINT(EM_DIAGRAM):   end;
2766790   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2766791   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2766792   +   end;
MPRINT(EM_DIAGRAM):   end;
2766793   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2766794   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2766795   +   end;
MPRINT(EM_DIAGRAM):   end;
2766796   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2766797   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2766798   +   end;
MPRINT(EM_DIAGRAM):   end;
2766799   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2766800   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2766801   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2766802   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2766803   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2766804   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2766805   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2766806   +   end;
MPRINT(EM_DIAGRAM):   end;
2766807   +end;
MPRINT(EM_DIAGRAM):   end;
2766808   +
2766809   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2766810   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2766811   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
2766812   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2766813   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2766814   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2766815   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2766816   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2766817   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2766818   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2766819   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2766820   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2766821   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2766822   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2766823   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2766824   +end;
MPRINT(EM_DIAGRAM):   end;
2766825   +else do;
MPRINT(EM_DIAGRAM):   else do;
2766826   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2766827   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2766828   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2766829   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2766830   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2766831   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2766832   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2766833   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2766834   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2766835   +         end;
MPRINT(EM_DIAGRAM):   end;
2766836   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2766837   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2766838   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2766839   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2766840   +            end;
MPRINT(EM_DIAGRAM):   end;
2766841   +         end;
MPRINT(EM_DIAGRAM):   end;
2766842   +      end;
MPRINT(EM_DIAGRAM):   end;
2766843   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2766844   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2766845   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2766846   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2766847   +         end;
MPRINT(EM_DIAGRAM):   end;
2766848   +      end;
MPRINT(EM_DIAGRAM):   end;
2766849   +   end;
MPRINT(EM_DIAGRAM):   end;
2766850   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2766851   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2766852   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2766853   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2766854   +      end;
MPRINT(EM_DIAGRAM):   end;
2766855   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2766856   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2766857   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2766858   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2766859   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2766860   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2766861   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2766862   +         end;
MPRINT(EM_DIAGRAM):   end;
2766863   +      end;
MPRINT(EM_DIAGRAM):   end;
2766864   +   end;
MPRINT(EM_DIAGRAM):   end;
2766865   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2766866   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2766867   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2766868   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2766869   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2766870   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2766871   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2766872   +   end;
MPRINT(EM_DIAGRAM):   end;
2766873   +end;
MPRINT(EM_DIAGRAM):   end;
2766874   +
2766875   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2766876   +*** Checking missing input Interval
2766877   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2766878   +
2766879   +IF NMISS(
2766880   +   Income ,
2766881   +   Kidhome ,
2766882   +   MntFishProducts ,
2766883   +   MntFruits ,
2766884   +   MntGoldProds ,
2766885   +   MntMeatProducts ,
2766886   +   MntSweetProducts ,
2766887   +   MntWines ,
2766888   +   NumCatalogPurchases ,
2766889   +   NumDealsPurchases ,
2766890   +   NumStorePurchases ,
2766891   +   NumWebPurchases ,
2766892   +   NumWebVisitsMonth ,
2766893   +   Recency ,
2766894   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Income , Kidhome , MntFishProducts , MntFruits , MntGoldProds 
, MntMeatProducts , MntSweetProducts , MntWines , NumCatalogPurchases , NumDealsPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , Recency , Teenhome ) THEN DO;
2766895   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2766896   +
2766897   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2766898   +END;
MPRINT(EM_DIAGRAM):   END;
2766899   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2766900   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
2766901   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2766902   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2766903   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2766904   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2766905   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2766906   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2766907   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2766908   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2766909   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2766910   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2766911   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2766912   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2766913   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2766914   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2766915   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2766916   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2766917   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2766918   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2766919   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2766920   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2766921   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2766922   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2766923   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2766924   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2766925   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2766926   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2766927   +END;
MPRINT(EM_DIAGRAM):   END;
2766928   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2766929   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2766930   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2766931   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2766932   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2766933   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2766934   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2766935   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2766936   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2766937   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2766938   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2766939   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2766940   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2766941   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
2766942   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2766943   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2766944   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2766945   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2766946   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2766947   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2766948   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2766949   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2766950   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2766951   +   ELSE S_NumCatalogPurchases
2766952   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2766953   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2766954   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2766955   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2766956   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2766957   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2766958   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2766959   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2766960   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2766961   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2766962   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2766963   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2766964   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2766965   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2766966   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2766967   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2766968   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2766969   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2766970   +END;
MPRINT(EM_DIAGRAM):   END;
2766971   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2766972   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
2766973   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2766974   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2766975   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
2766976   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2766977   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2766978   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
2766979   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2766980   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2766981   +   H1x1_1  =     0.95463807935638 * S_Income  +     -0.0812123000279 *
2766982   +        S_Kidhome  +    -1.17242250965796 * S_MntFishProducts
2766983   +          +    -0.39894096707412 * S_MntFruits  +     0.48282664436672 *
2766984   +        S_MntGoldProds  +       7.765847453582 * S_MntMeatProducts
2766985   +          +    -0.44570165516063 * S_MntSweetProducts
2766986   +          +    -1.40872100231855 * S_MntWines  +     1.40783708957732 *
2766987   +        S_NumCatalogPurchases  +     1.49155573260533 * S_NumDealsPurchases
2766988   +          +    -1.76291210288234 * S_NumStorePurchases
2766989   +          +    -2.02392782824649 * S_NumWebPurchases
2766990   +          +     1.28490910676992 * S_NumWebVisitsMonth
2766991   +          +    -1.30767557862851 * S_Recency  +    -0.59235237740193 *
2766992   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.95463807935638 * S_Income + -0.0812123000279 * S_Kidhome + 
-1.17242250965796 * S_MntFishProducts + -0.39894096707412 * S_MntFruits + 0.48282664436672 * 
S_MntGoldProds + 7.765847453582 * S_MntMeatProducts + -0.44570165516063 * S_MntSweetProducts + 
-1.40872100231855 * S_MntWines + 1.40783708957732 * S_NumCatalogPurchases + 1.49155573260533 * 
S_NumDealsPurchases + -1.76291210288234 * S_NumStorePurchases + -2.02392782824649 * 
S_NumWebPurchases + 1.28490910676992 * S_NumWebVisitsMonth + -1.30767557862851 * S_Recency + 
-0.59235237740193 * S_Teenhome ;
2766993   +   H1x1_2  =    -0.44691945203456 * S_Income  +     0.39379891740392 *
2766994   +        S_Kidhome  +     0.02372129308662 * S_MntFishProducts
2766995   +          +     0.20627554813879 * S_MntFruits  +     0.34760356004051 *
2766996   +        S_MntGoldProds  +    -0.95672595976635 * S_MntMeatProducts
2766997   +          +     0.29239311560831 * S_MntSweetProducts
2766998   +          +     1.16929881835698 * S_MntWines  +    -1.00380099933966 *
2766999   +        S_NumCatalogPurchases  +     0.13934722329916 * S_NumDealsPurchases
2767000   +          +     0.94246962588327 * S_NumStorePurchases
2767001   +          +      0.9680353780544 * S_NumWebPurchases
2767002   +          +    -2.21882487627334 * S_NumWebVisitsMonth
2767003   +          +     2.11904606383155 * S_Recency  +      0.6539185986418 *
2767004   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.44691945203456 * S_Income + 0.39379891740392 * S_Kidhome + 
0.02372129308662 * S_MntFishProducts + 0.20627554813879 * S_MntFruits + 0.34760356004051 * 
S_MntGoldProds + -0.95672595976635 * S_MntMeatProducts + 0.29239311560831 * S_MntSweetProducts 
+ 1.16929881835698 * S_MntWines + -1.00380099933966 * S_NumCatalogPurchases + 0.13934722329916 
* S_NumDealsPurchases + 0.94246962588327 * S_NumStorePurchases + 0.9680353780544 * 
S_NumWebPurchases + -2.21882487627334 * S_NumWebVisitsMonth + 2.11904606383155 * S_Recency + 
0.6539185986418 * S_Teenhome ;
2767005   +   H1x1_1  = H1x1_1  +    -3.59113827146831 * AcceptedCmp10
2767006   +          +    -0.49569953193794 * AcceptedCmp20  +    -0.52167719336095 *
2767007   +        AcceptedCmp30  +    -0.86715095433046 * AcceptedCmp40
2767008   +          +    -5.62926111624877 * AcceptedCmp50  +     0.11096869316425 *
2767009   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -3.59113827146831 * AcceptedCmp10 + -0.49569953193794 
* AcceptedCmp20 + -0.52167719336095 * AcceptedCmp30 + -0.86715095433046 * AcceptedCmp40 + 
-5.62926111624877 * AcceptedCmp50 + 0.11096869316425 * Complain0 ;
2767010   +   H1x1_2  = H1x1_2  +     0.46033758530017 * AcceptedCmp10
2767011   +          +     0.35006796696269 * AcceptedCmp20  +     0.97811071409034 *
2767012   +        AcceptedCmp30  +     0.99898386731466 * AcceptedCmp40
2767013   +          +     1.09004749757455 * AcceptedCmp50  +    -0.37828411200383 *
2767014   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.46033758530017 * AcceptedCmp10 + 0.35006796696269 * 
AcceptedCmp20 + 0.97811071409034 * AcceptedCmp30 + 0.99898386731466 * AcceptedCmp40 + 
1.09004749757455 * AcceptedCmp50 + -0.37828411200383 * Complain0 ;
2767015   +   H1x1_1  = H1x1_1  +    -0.19002184370931 * Education2n_Cycle
2767016   +          +      0.4572325462076 * EducationBasic  +     0.18712226653295 *
2767017   +        EducationGraduation  +     0.44122744485667 * EducationMaster
2767018   +          +    -0.37907342816265 * Marital_StatusDivorced
2767019   +          +     0.12610640291685 * Marital_StatusMarried
2767020   +          +     0.51984913420219 * Marital_StatusSingle
2767021   +          +     0.07401117310472 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.19002184370931 * Education2n_Cycle + 
0.4572325462076 * EducationBasic + 0.18712226653295 * EducationGraduation + 0.44122744485667 * 
EducationMaster + -0.37907342816265 * Marital_StatusDivorced + 0.12610640291685 * 
Marital_StatusMarried + 0.51984913420219 * Marital_StatusSingle + 0.07401117310472 * 
Marital_StatusTogether ;
2767022   +   H1x1_2  = H1x1_2  +    -0.33166298059049 * Education2n_Cycle
2767023   +          +     1.29947160945083 * EducationBasic  +    -0.61327168479974 *
2767024   +        EducationGraduation  +    -0.26642525612671 * EducationMaster
2767025   +          +    -1.03351623479699 * Marital_StatusDivorced
2767026   +          +     1.44541386522162 * Marital_StatusMarried
2767027   +          +    -1.03636573521294 * Marital_StatusSingle
2767028   +          +     1.72091885709893 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.33166298059049 * Education2n_Cycle + 
1.29947160945083 * EducationBasic + -0.61327168479974 * EducationGraduation + 
-0.26642525612671 * EducationMaster + -1.03351623479699 * Marital_StatusDivorced + 
1.44541386522162 * Marital_StatusMarried + -1.03636573521294 * Marital_StatusSingle + 
1.72091885709893 * Marital_StatusTogether ;
2767029   +   H1x1_1  =     10.1449432133402 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 10.1449432133402 + H1x1_1 ;
2767030   +   H1x1_2  =    -2.11517502439063 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -2.11517502439063 + H1x1_2 ;
2767031   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
2767032   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
2767033   +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
2767034   +   H1x1_2  = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
2767035   +END;
MPRINT(EM_DIAGRAM):   END;
2767036   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2767037   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
2767038   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
2767039   +END;
MPRINT(EM_DIAGRAM):   END;
2767040   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2767041   +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
2767042   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2767043   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2767044   +   H1x2_1  =     -0.8682144724836 * S_Income  +      2.3024809346762 *
2767045   +        S_Kidhome  +     0.64624727466292 * S_MntFishProducts
2767046   +          +    -0.09660410291886 * S_MntFruits  +    -1.79562837605117 *
2767047   +        S_MntGoldProds  +      0.1276827318716 * S_MntMeatProducts
2767048   +          +    -0.56491281055157 * S_MntSweetProducts
2767049   +          +     0.93663442469929 * S_MntWines  +    -0.00899150883311 *
2767050   +        S_NumCatalogPurchases  +    -1.22662917925595 * S_NumDealsPurchases
2767051   +          +    -0.90340706582786 * S_NumStorePurchases
2767052   +          +    -1.91501626179453 * S_NumWebPurchases
2767053   +          +     0.10121028558369 * S_NumWebVisitsMonth
2767054   +          +     1.60735726265156 * S_Recency  +     0.23538323190125 *
2767055   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -0.8682144724836 * S_Income + 2.3024809346762 * S_Kidhome + 
0.64624727466292 * S_MntFishProducts + -0.09660410291886 * S_MntFruits + -1.79562837605117 * 
S_MntGoldProds + 0.1276827318716 * S_MntMeatProducts + -0.56491281055157 * S_MntSweetProducts 
+ 0.93663442469929 * S_MntWines + -0.00899150883311 * S_NumCatalogPurchases + 
-1.22662917925595 * S_NumDealsPurchases + -0.90340706582786 * S_NumStorePurchases + 
-1.91501626179453 * S_NumWebPurchases + 0.10121028558369 * S_NumWebVisitsMonth + 
1.60735726265156 * S_Recency + 0.23538323190125 * S_Teenhome ;
2767056   +   H1x2_2  =    -1.09261687432274 * S_Income  +     1.20111535021385 *
2767057   +        S_Kidhome  +    -1.69538442721283 * S_MntFishProducts
2767058   +          +    -0.70987820940317 * S_MntFruits  +    -1.60645342742617 *
2767059   +        S_MntGoldProds  +    -0.30176111780721 * S_MntMeatProducts
2767060   +          +    -0.23001625322332 * S_MntSweetProducts
2767061   +          +    -0.14467043598448 * S_MntWines  +     0.41886993157522 *
2767062   +        S_NumCatalogPurchases  +     1.96896752447653 * S_NumDealsPurchases
2767063   +          +    -2.13716920911877 * S_NumStorePurchases
2767064   +          +    -0.33508808117738 * S_NumWebPurchases
2767065   +          +     -2.0809737926136 * S_NumWebVisitsMonth
2767066   +          +     1.03175786727839 * S_Recency  +      0.7367575698643 *
2767067   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -1.09261687432274 * S_Income + 1.20111535021385 * S_Kidhome + 
-1.69538442721283 * S_MntFishProducts + -0.70987820940317 * S_MntFruits + -1.60645342742617 * 
S_MntGoldProds + -0.30176111780721 * S_MntMeatProducts + -0.23001625322332 * 
S_MntSweetProducts + -0.14467043598448 * S_MntWines + 0.41886993157522 * S_NumCatalogPurchases 
+ 1.96896752447653 * S_NumDealsPurchases + -2.13716920911877 * S_NumStorePurchases + 
-0.33508808117738 * S_NumWebPurchases + -2.0809737926136 * S_NumWebVisitsMonth + 
1.03175786727839 * S_Recency + 0.7367575698643 * S_Teenhome ;
2767068   +   H1x2_1  = H1x2_1  +     1.58943051578323 * AcceptedCmp10
2767069   +          +     0.09118005069971 * AcceptedCmp20  +     1.19759908387569 *
2767070   +        AcceptedCmp30  +     0.89598378494479 * AcceptedCmp40
2767071   +          +     0.46816867379718 * AcceptedCmp50  +     1.86944333764097 *
2767072   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 1.58943051578323 * AcceptedCmp10 + 0.09118005069971 * 
AcceptedCmp20 + 1.19759908387569 * AcceptedCmp30 + 0.89598378494479 * AcceptedCmp40 + 
0.46816867379718 * AcceptedCmp50 + 1.86944333764097 * Complain0 ;
2767073   +   H1x2_2  = H1x2_2  +    -0.08862601564048 * AcceptedCmp10
2767074   +          +    -3.30636530499001 * AcceptedCmp20  +     0.15596560905391 *
2767075   +        AcceptedCmp30  +     0.09538395772421 * AcceptedCmp40
2767076   +          +     0.55380047577072 * AcceptedCmp50  +    -1.45096025939708 *
2767077   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -0.08862601564048 * AcceptedCmp10 + -3.30636530499001 
* AcceptedCmp20 + 0.15596560905391 * AcceptedCmp30 + 0.09538395772421 * AcceptedCmp40 + 
0.55380047577072 * AcceptedCmp50 + -1.45096025939708 * Complain0 ;
2767078   +   H1x2_1  = H1x2_1  +     -0.8656532372301 * Education2n_Cycle
2767079   +          +     1.21189313523907 * EducationBasic  +     1.51417472534213 *
2767080   +        EducationGraduation  +     0.48964474451872 * EducationMaster
2767081   +          +     1.22462877499103 * Marital_StatusDivorced
2767082   +          +     0.55976057621985 * Marital_StatusMarried
2767083   +          +     -0.3198252517086 * Marital_StatusSingle
2767084   +          +     0.23778601487144 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.8656532372301 * Education2n_Cycle + 
1.21189313523907 * EducationBasic + 1.51417472534213 * EducationGraduation + 0.48964474451872 
* EducationMaster + 1.22462877499103 * Marital_StatusDivorced + 0.55976057621985 * 
Marital_StatusMarried + -0.3198252517086 * Marital_StatusSingle + 0.23778601487144 * 
Marital_StatusTogether ;
2767085   +   H1x2_2  = H1x2_2  +     0.58231562363597 * Education2n_Cycle
2767086   +          +    -0.76544661145643 * EducationBasic  +     -0.6650405134602 *
2767087   +        EducationGraduation  +    -1.59533016160829 * EducationMaster
2767088   +          +     0.32730811728353 * Marital_StatusDivorced
2767089   +          +     1.61519773132998 * Marital_StatusMarried
2767090   +          +    -1.42728303824254 * Marital_StatusSingle
2767091   +          +     1.39334432128351 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 0.58231562363597 * Education2n_Cycle + 
-0.76544661145643 * EducationBasic + -0.6650405134602 * EducationGraduation + 
-1.59533016160829 * EducationMaster + 0.32730811728353 * Marital_StatusDivorced + 
1.61519773132998 * Marital_StatusMarried + -1.42728303824254 * Marital_StatusSingle + 
1.39334432128351 * Marital_StatusTogether ;
2767092   +   H1x2_1  =     1.49479859857755 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.49479859857755 + H1x2_1 ;
2767093   +   H1x2_2  =     -0.6918737847278 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -0.6918737847278 + H1x2_2 ;
2767094   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
2767095   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
2767096   +   H1x2_1  = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
2767097   +   H1x2_2  = 1.0 / (1.0 + EXP(MIN( - H1x2_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_2 = 1.0 / (1.0 + EXP(MIN( - H1x2_2 , _EXP_BAR)));
2767098   +END;
MPRINT(EM_DIAGRAM):   END;
2767099   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2767100   +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
2767101   +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
2767102   +END;
MPRINT(EM_DIAGRAM):   END;
2767103   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2767104   +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
2767105   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2767106   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2767107   +   H2x1_1  =     1.67705445310922 * H1x1_1  +     -1.4133773927734 * H1x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.67705445310922 * H1x1_1 + -1.4133773927734 * H1x1_2 ;
2767108   +   H2x1_2  =    -2.14069220527729 * H1x1_1  +     2.80569007785887 * H1x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -2.14069220527729 * H1x1_1 + 2.80569007785887 * H1x1_2 ;
2767109   +   H2x1_1  = H2x1_1  +    -0.57216138417153 * H1x2_1
2767110   +          +     1.42286315059473 * H1x2_2 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -0.57216138417153 * H1x2_1 + 1.42286315059473 * H1x2_2 
;
2767111   +   H2x1_2  = H2x1_2  +     1.62250993087733 * H1x2_1
2767112   +          +     0.34104856545583 * H1x2_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + 1.62250993087733 * H1x2_1 + 0.34104856545583 * H1x2_2 ;
2767113   +   H2x1_1  =    -3.48786428904302 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -3.48786428904302 + H2x1_1 ;
2767114   +   H2x1_2  =    -0.43119827941199 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -0.43119827941199 + H2x1_2 ;
2767115   +   H2x1_1  = SIN(H2x1_1 );
MPRINT(EM_DIAGRAM):   H2x1_1 = SIN(H2x1_1 );
2767116   +   H2x1_2  = SIN(H2x1_2 );
MPRINT(EM_DIAGRAM):   H2x1_2 = SIN(H2x1_2 );
2767117   +END;
MPRINT(EM_DIAGRAM):   END;
2767118   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2767119   +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
2767120   +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
2767121   +END;
MPRINT(EM_DIAGRAM):   END;
2767122   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2767123   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2767124   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2767125   +
2767126   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
2767127   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
2767128   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2767129   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
2767130   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
2767131   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2767132   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
2767133   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2767134   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2767135   +end;
MPRINT(EM_DIAGRAM):   end;
2767136   +else do;
MPRINT(EM_DIAGRAM):   else do;
2767137   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
2767138   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
2767139   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
2767140   +   end;
MPRINT(EM_DIAGRAM):   end;
2767141   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
2767142   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
2767143   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
2767144   +   end;
MPRINT(EM_DIAGRAM):   end;
2767145   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2767146   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2767147   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2767148   +   end;
MPRINT(EM_DIAGRAM):   end;
2767149   +end;
MPRINT(EM_DIAGRAM):   end;
2767150   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2767151   +   P_DepVar1  =    -9.14009115080293 * H2x1_1  +    -5.28591504747655 * H2x1_2
2767152   +         ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -9.14009115080293 * H2x1_1 + -5.28591504747655 * H2x1_2 ;
2767153   +   P_DepVar1  =    -3.08988807073218 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.08988807073218 + P_DepVar1 ;
2767154   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2767155   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2767156   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2767157   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2767158   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2767159   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2767160   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2767161   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2767162   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2767163   +END;
MPRINT(EM_DIAGRAM):   END;
2767164   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2767165   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2767166   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2767167   +END;
MPRINT(EM_DIAGRAM):   END;
2767168   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2767169   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2767170   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2767171   +END;
MPRINT(EM_DIAGRAM):   END;
2767172   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
2767173   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
2767174   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
2767175   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
2767176   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
2767177   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
2767178   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
2767179   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2767180   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2767181   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2767182   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2767183   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2767184   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2767185   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2767186   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2767187   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2767188   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2767189   +END;
MPRINT(EM_DIAGRAM):   END;
2767190   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2767191   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2767192   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2767193   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2767194    run;

NOTE: DATA STEP view saved on file EMWS8.AUTONEURAL45_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.META2_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2767195    quit;
2767196    filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
2767197    filename emflow
2767197  ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural45\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural45\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * AutoNeural45: Scoring VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2767198    *------------------------------------------------------------*;
2767199    * AutoNeural45: Scoring VALIDATE data;
2767200    *------------------------------------------------------------*;
2767201    data EMWS8.AutoNeural45_VALIDATE
2767202    / view=EMWS8.AutoNeural45_VALIDATE
2767203    ;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural45_VALIDATE / view=EMWS8.AutoNeural45_VALIDATE ;
2767204    set EMWS8.Meta2_VALIDATE
2767205    ;
MPRINT(EM_DIAGRAM):   set EMWS8.Meta2_VALIDATE ;
2767206    %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural45\EMFLOWSCORE.sas.
2767207   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2767208   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2767209   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2767210   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2767211   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2767212   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2767213   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2767214   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2767215   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2767216   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2767217   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2767218   +LENGTH _WARN_ $4
2767219   +      F_DepVar  $ 12
2767220   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
2767221   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2767222   +
2767223   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2767224   +
2767225   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2767226   +
2767227   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2767228   +
2767229   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2767230   +
2767231   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2767232   +
2767233   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2767234   +
2767235   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2767236   +
2767237   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2767238   +
2767239   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2767240   +
2767241   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2767242   +
2767243   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2767244   +
2767245   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2767246   +
2767247   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2767248   +
2767249   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2767250   +
2767251   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2767252   +
2767253   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2767254   +
2767255   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2767256   +
2767257   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2767258   +
2767259   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2767260   +
2767261   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2767262   +
2767263   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2767264   +
2767265   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2767266   +
2767267   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2767268   +
2767269   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2767270   +
2767271   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2767272   +
2767273   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2767274   +
2767275   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2767276   +
2767277   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2767278   +
2767279   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
2767280   +
2767281   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
2767282   +
2767283   +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
2767284   +
2767285   +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
2767286   +
2767287   +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
2767288   +
2767289   +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
2767290   +
2767291   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2767292   +
2767293   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2767294   +
2767295   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2767296   +
2767297   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2767298   +
2767299   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
2767300   +
2767301   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2767302   +
2767303   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
2767304   +
2767305   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2767306   +
2767307   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2767308   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2767309   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2767310   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2767311   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2767312   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2767313   +end;
MPRINT(EM_DIAGRAM):   end;
2767314   +else do;
MPRINT(EM_DIAGRAM):   else do;
2767315   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2767316   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2767317   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2767318   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2767319   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2767320   +   end;
MPRINT(EM_DIAGRAM):   end;
2767321   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2767322   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2767323   +   end;
MPRINT(EM_DIAGRAM):   end;
2767324   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2767325   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2767326   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2767327   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2767328   +   end;
MPRINT(EM_DIAGRAM):   end;
2767329   +end;
MPRINT(EM_DIAGRAM):   end;
2767330   +
2767331   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2767332   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2767333   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2767334   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2767335   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2767336   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2767337   +end;
MPRINT(EM_DIAGRAM):   end;
2767338   +else do;
MPRINT(EM_DIAGRAM):   else do;
2767339   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2767340   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2767341   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2767342   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2767343   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2767344   +   end;
MPRINT(EM_DIAGRAM):   end;
2767345   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2767346   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2767347   +   end;
MPRINT(EM_DIAGRAM):   end;
2767348   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2767349   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2767350   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2767351   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2767352   +   end;
MPRINT(EM_DIAGRAM):   end;
2767353   +end;
MPRINT(EM_DIAGRAM):   end;
2767354   +
2767355   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2767356   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2767357   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2767358   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2767359   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2767360   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2767361   +end;
MPRINT(EM_DIAGRAM):   end;
2767362   +else do;
MPRINT(EM_DIAGRAM):   else do;
2767363   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2767364   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2767365   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2767366   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2767367   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2767368   +   end;
MPRINT(EM_DIAGRAM):   end;
2767369   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2767370   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2767371   +   end;
MPRINT(EM_DIAGRAM):   end;
2767372   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2767373   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2767374   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2767375   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2767376   +   end;
MPRINT(EM_DIAGRAM):   end;
2767377   +end;
MPRINT(EM_DIAGRAM):   end;
2767378   +
2767379   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2767380   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2767381   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2767382   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2767383   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2767384   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2767385   +end;
MPRINT(EM_DIAGRAM):   end;
2767386   +else do;
MPRINT(EM_DIAGRAM):   else do;
2767387   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2767388   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2767389   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2767390   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2767391   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2767392   +   end;
MPRINT(EM_DIAGRAM):   end;
2767393   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2767394   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2767395   +   end;
MPRINT(EM_DIAGRAM):   end;
2767396   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2767397   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2767398   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2767399   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2767400   +   end;
MPRINT(EM_DIAGRAM):   end;
2767401   +end;
MPRINT(EM_DIAGRAM):   end;
2767402   +
2767403   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2767404   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2767405   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2767406   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2767407   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2767408   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2767409   +end;
MPRINT(EM_DIAGRAM):   end;
2767410   +else do;
MPRINT(EM_DIAGRAM):   else do;
2767411   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2767412   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2767413   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2767414   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2767415   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2767416   +   end;
MPRINT(EM_DIAGRAM):   end;
2767417   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2767418   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2767419   +   end;
MPRINT(EM_DIAGRAM):   end;
2767420   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2767421   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2767422   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2767423   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2767424   +   end;
MPRINT(EM_DIAGRAM):   end;
2767425   +end;
MPRINT(EM_DIAGRAM):   end;
2767426   +
2767427   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2767428   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2767429   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2767430   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2767431   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2767432   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2767433   +end;
MPRINT(EM_DIAGRAM):   end;
2767434   +else do;
MPRINT(EM_DIAGRAM):   else do;
2767435   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2767436   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2767437   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2767438   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2767439   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2767440   +   end;
MPRINT(EM_DIAGRAM):   end;
2767441   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2767442   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2767443   +   end;
MPRINT(EM_DIAGRAM):   end;
2767444   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2767445   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2767446   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2767447   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2767448   +   end;
MPRINT(EM_DIAGRAM):   end;
2767449   +end;
MPRINT(EM_DIAGRAM):   end;
2767450   +
2767451   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2767452   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
2767453   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2767454   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2767455   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2767456   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2767457   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2767458   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2767459   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2767460   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2767461   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2767462   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2767463   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2767464   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2767465   +end;
MPRINT(EM_DIAGRAM):   end;
2767466   +else do;
MPRINT(EM_DIAGRAM):   else do;
2767467   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2767468   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2767469   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2767470   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2767471   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2767472   +   end;
MPRINT(EM_DIAGRAM):   end;
2767473   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2767474   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2767475   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2767476   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2767477   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2767478   +   end;
MPRINT(EM_DIAGRAM):   end;
2767479   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2767480   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2767481   +   end;
MPRINT(EM_DIAGRAM):   end;
2767482   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2767483   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2767484   +   end;
MPRINT(EM_DIAGRAM):   end;
2767485   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2767486   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2767487   +   end;
MPRINT(EM_DIAGRAM):   end;
2767488   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2767489   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2767490   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2767491   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2767492   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2767493   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2767494   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2767495   +   end;
MPRINT(EM_DIAGRAM):   end;
2767496   +end;
MPRINT(EM_DIAGRAM):   end;
2767497   +
2767498   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2767499   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2767500   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
2767501   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2767502   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2767503   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2767504   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2767505   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2767506   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2767507   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2767508   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2767509   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2767510   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2767511   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2767512   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2767513   +end;
MPRINT(EM_DIAGRAM):   end;
2767514   +else do;
MPRINT(EM_DIAGRAM):   else do;
2767515   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2767516   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2767517   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2767518   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2767519   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2767520   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2767521   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2767522   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2767523   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2767524   +         end;
MPRINT(EM_DIAGRAM):   end;
2767525   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2767526   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2767527   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2767528   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2767529   +            end;
MPRINT(EM_DIAGRAM):   end;
2767530   +         end;
MPRINT(EM_DIAGRAM):   end;
2767531   +      end;
MPRINT(EM_DIAGRAM):   end;
2767532   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2767533   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2767534   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2767535   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2767536   +         end;
MPRINT(EM_DIAGRAM):   end;
2767537   +      end;
MPRINT(EM_DIAGRAM):   end;
2767538   +   end;
MPRINT(EM_DIAGRAM):   end;
2767539   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2767540   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2767541   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2767542   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2767543   +      end;
MPRINT(EM_DIAGRAM):   end;
2767544   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2767545   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2767546   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2767547   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2767548   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2767549   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2767550   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2767551   +         end;
MPRINT(EM_DIAGRAM):   end;
2767552   +      end;
MPRINT(EM_DIAGRAM):   end;
2767553   +   end;
MPRINT(EM_DIAGRAM):   end;
2767554   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2767555   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2767556   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2767557   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2767558   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2767559   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2767560   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2767561   +   end;
MPRINT(EM_DIAGRAM):   end;
2767562   +end;
MPRINT(EM_DIAGRAM):   end;
2767563   +
2767564   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2767565   +*** Checking missing input Interval
2767566   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2767567   +
2767568   +IF NMISS(
2767569   +   Income ,
2767570   +   Kidhome ,
2767571   +   MntFishProducts ,
2767572   +   MntFruits ,
2767573   +   MntGoldProds ,
2767574   +   MntMeatProducts ,
2767575   +   MntSweetProducts ,
2767576   +   MntWines ,
2767577   +   NumCatalogPurchases ,
2767578   +   NumDealsPurchases ,
2767579   +   NumStorePurchases ,
2767580   +   NumWebPurchases ,
2767581   +   NumWebVisitsMonth ,
2767582   +   Recency ,
2767583   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Income , Kidhome , MntFishProducts , MntFruits , MntGoldProds 
, MntMeatProducts , MntSweetProducts , MntWines , NumCatalogPurchases , NumDealsPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , Recency , Teenhome ) THEN DO;
2767584   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2767585   +
2767586   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2767587   +END;
MPRINT(EM_DIAGRAM):   END;
2767588   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2767589   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
2767590   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2767591   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2767592   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2767593   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2767594   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2767595   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2767596   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2767597   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2767598   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2767599   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2767600   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2767601   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2767602   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2767603   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2767604   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2767605   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2767606   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2767607   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2767608   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2767609   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2767610   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2767611   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2767612   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2767613   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2767614   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2767615   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2767616   +END;
MPRINT(EM_DIAGRAM):   END;
2767617   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2767618   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2767619   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2767620   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2767621   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2767622   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2767623   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2767624   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2767625   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2767626   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2767627   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2767628   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2767629   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2767630   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
2767631   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2767632   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2767633   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2767634   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2767635   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2767636   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2767637   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2767638   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2767639   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2767640   +   ELSE S_NumCatalogPurchases
2767641   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2767642   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2767643   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2767644   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2767645   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2767646   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2767647   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2767648   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2767649   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2767650   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2767651   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2767652   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2767653   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2767654   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2767655   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2767656   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2767657   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2767658   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2767659   +END;
MPRINT(EM_DIAGRAM):   END;
2767660   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2767661   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
2767662   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2767663   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2767664   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
2767665   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2767666   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2767667   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
2767668   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2767669   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2767670   +   H1x1_1  =     0.95463807935638 * S_Income  +     -0.0812123000279 *
2767671   +        S_Kidhome  +    -1.17242250965796 * S_MntFishProducts
2767672   +          +    -0.39894096707412 * S_MntFruits  +     0.48282664436672 *
2767673   +        S_MntGoldProds  +       7.765847453582 * S_MntMeatProducts
2767674   +          +    -0.44570165516063 * S_MntSweetProducts
2767675   +          +    -1.40872100231855 * S_MntWines  +     1.40783708957732 *
2767676   +        S_NumCatalogPurchases  +     1.49155573260533 * S_NumDealsPurchases
2767677   +          +    -1.76291210288234 * S_NumStorePurchases
2767678   +          +    -2.02392782824649 * S_NumWebPurchases
2767679   +          +     1.28490910676992 * S_NumWebVisitsMonth
2767680   +          +    -1.30767557862851 * S_Recency  +    -0.59235237740193 *
2767681   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.95463807935638 * S_Income + -0.0812123000279 * S_Kidhome + 
-1.17242250965796 * S_MntFishProducts + -0.39894096707412 * S_MntFruits + 0.48282664436672 * 
S_MntGoldProds + 7.765847453582 * S_MntMeatProducts + -0.44570165516063 * S_MntSweetProducts + 
-1.40872100231855 * S_MntWines + 1.40783708957732 * S_NumCatalogPurchases + 1.49155573260533 * 
S_NumDealsPurchases + -1.76291210288234 * S_NumStorePurchases + -2.02392782824649 * 
S_NumWebPurchases + 1.28490910676992 * S_NumWebVisitsMonth + -1.30767557862851 * S_Recency + 
-0.59235237740193 * S_Teenhome ;
2767682   +   H1x1_2  =    -0.44691945203456 * S_Income  +     0.39379891740392 *
2767683   +        S_Kidhome  +     0.02372129308662 * S_MntFishProducts
2767684   +          +     0.20627554813879 * S_MntFruits  +     0.34760356004051 *
2767685   +        S_MntGoldProds  +    -0.95672595976635 * S_MntMeatProducts
2767686   +          +     0.29239311560831 * S_MntSweetProducts
2767687   +          +     1.16929881835698 * S_MntWines  +    -1.00380099933966 *
2767688   +        S_NumCatalogPurchases  +     0.13934722329916 * S_NumDealsPurchases
2767689   +          +     0.94246962588327 * S_NumStorePurchases
2767690   +          +      0.9680353780544 * S_NumWebPurchases
2767691   +          +    -2.21882487627334 * S_NumWebVisitsMonth
2767692   +          +     2.11904606383155 * S_Recency  +      0.6539185986418 *
2767693   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.44691945203456 * S_Income + 0.39379891740392 * S_Kidhome + 
0.02372129308662 * S_MntFishProducts + 0.20627554813879 * S_MntFruits + 0.34760356004051 * 
S_MntGoldProds + -0.95672595976635 * S_MntMeatProducts + 0.29239311560831 * S_MntSweetProducts 
+ 1.16929881835698 * S_MntWines + -1.00380099933966 * S_NumCatalogPurchases + 0.13934722329916 
* S_NumDealsPurchases + 0.94246962588327 * S_NumStorePurchases + 0.9680353780544 * 
S_NumWebPurchases + -2.21882487627334 * S_NumWebVisitsMonth + 2.11904606383155 * S_Recency + 
0.6539185986418 * S_Teenhome ;
2767694   +   H1x1_1  = H1x1_1  +    -3.59113827146831 * AcceptedCmp10
2767695   +          +    -0.49569953193794 * AcceptedCmp20  +    -0.52167719336095 *
2767696   +        AcceptedCmp30  +    -0.86715095433046 * AcceptedCmp40
2767697   +          +    -5.62926111624877 * AcceptedCmp50  +     0.11096869316425 *
2767698   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -3.59113827146831 * AcceptedCmp10 + -0.49569953193794 
* AcceptedCmp20 + -0.52167719336095 * AcceptedCmp30 + -0.86715095433046 * AcceptedCmp40 + 
-5.62926111624877 * AcceptedCmp50 + 0.11096869316425 * Complain0 ;
2767699   +   H1x1_2  = H1x1_2  +     0.46033758530017 * AcceptedCmp10
2767700   +          +     0.35006796696269 * AcceptedCmp20  +     0.97811071409034 *
2767701   +        AcceptedCmp30  +     0.99898386731466 * AcceptedCmp40
2767702   +          +     1.09004749757455 * AcceptedCmp50  +    -0.37828411200383 *
2767703   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.46033758530017 * AcceptedCmp10 + 0.35006796696269 * 
AcceptedCmp20 + 0.97811071409034 * AcceptedCmp30 + 0.99898386731466 * AcceptedCmp40 + 
1.09004749757455 * AcceptedCmp50 + -0.37828411200383 * Complain0 ;
2767704   +   H1x1_1  = H1x1_1  +    -0.19002184370931 * Education2n_Cycle
2767705   +          +      0.4572325462076 * EducationBasic  +     0.18712226653295 *
2767706   +        EducationGraduation  +     0.44122744485667 * EducationMaster
2767707   +          +    -0.37907342816265 * Marital_StatusDivorced
2767708   +          +     0.12610640291685 * Marital_StatusMarried
2767709   +          +     0.51984913420219 * Marital_StatusSingle
2767710   +          +     0.07401117310472 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.19002184370931 * Education2n_Cycle + 
0.4572325462076 * EducationBasic + 0.18712226653295 * EducationGraduation + 0.44122744485667 * 
EducationMaster + -0.37907342816265 * Marital_StatusDivorced + 0.12610640291685 * 
Marital_StatusMarried + 0.51984913420219 * Marital_StatusSingle + 0.07401117310472 * 
Marital_StatusTogether ;
2767711   +   H1x1_2  = H1x1_2  +    -0.33166298059049 * Education2n_Cycle
2767712   +          +     1.29947160945083 * EducationBasic  +    -0.61327168479974 *
2767713   +        EducationGraduation  +    -0.26642525612671 * EducationMaster
2767714   +          +    -1.03351623479699 * Marital_StatusDivorced
2767715   +          +     1.44541386522162 * Marital_StatusMarried
2767716   +          +    -1.03636573521294 * Marital_StatusSingle
2767717   +          +     1.72091885709893 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.33166298059049 * Education2n_Cycle + 
1.29947160945083 * EducationBasic + -0.61327168479974 * EducationGraduation + 
-0.26642525612671 * EducationMaster + -1.03351623479699 * Marital_StatusDivorced + 
1.44541386522162 * Marital_StatusMarried + -1.03636573521294 * Marital_StatusSingle + 
1.72091885709893 * Marital_StatusTogether ;
2767718   +   H1x1_1  =     10.1449432133402 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 10.1449432133402 + H1x1_1 ;
2767719   +   H1x1_2  =    -2.11517502439063 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -2.11517502439063 + H1x1_2 ;
2767720   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
2767721   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
2767722   +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
2767723   +   H1x1_2  = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
2767724   +END;
MPRINT(EM_DIAGRAM):   END;
2767725   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2767726   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
2767727   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
2767728   +END;
MPRINT(EM_DIAGRAM):   END;
2767729   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2767730   +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
2767731   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2767732   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2767733   +   H1x2_1  =     -0.8682144724836 * S_Income  +      2.3024809346762 *
2767734   +        S_Kidhome  +     0.64624727466292 * S_MntFishProducts
2767735   +          +    -0.09660410291886 * S_MntFruits  +    -1.79562837605117 *
2767736   +        S_MntGoldProds  +      0.1276827318716 * S_MntMeatProducts
2767737   +          +    -0.56491281055157 * S_MntSweetProducts
2767738   +          +     0.93663442469929 * S_MntWines  +    -0.00899150883311 *
2767739   +        S_NumCatalogPurchases  +    -1.22662917925595 * S_NumDealsPurchases
2767740   +          +    -0.90340706582786 * S_NumStorePurchases
2767741   +          +    -1.91501626179453 * S_NumWebPurchases
2767742   +          +     0.10121028558369 * S_NumWebVisitsMonth
2767743   +          +     1.60735726265156 * S_Recency  +     0.23538323190125 *
2767744   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -0.8682144724836 * S_Income + 2.3024809346762 * S_Kidhome + 
0.64624727466292 * S_MntFishProducts + -0.09660410291886 * S_MntFruits + -1.79562837605117 * 
S_MntGoldProds + 0.1276827318716 * S_MntMeatProducts + -0.56491281055157 * S_MntSweetProducts 
+ 0.93663442469929 * S_MntWines + -0.00899150883311 * S_NumCatalogPurchases + 
-1.22662917925595 * S_NumDealsPurchases + -0.90340706582786 * S_NumStorePurchases + 
-1.91501626179453 * S_NumWebPurchases + 0.10121028558369 * S_NumWebVisitsMonth + 
1.60735726265156 * S_Recency + 0.23538323190125 * S_Teenhome ;
2767745   +   H1x2_2  =    -1.09261687432274 * S_Income  +     1.20111535021385 *
2767746   +        S_Kidhome  +    -1.69538442721283 * S_MntFishProducts
2767747   +          +    -0.70987820940317 * S_MntFruits  +    -1.60645342742617 *
2767748   +        S_MntGoldProds  +    -0.30176111780721 * S_MntMeatProducts
2767749   +          +    -0.23001625322332 * S_MntSweetProducts
2767750   +          +    -0.14467043598448 * S_MntWines  +     0.41886993157522 *
2767751   +        S_NumCatalogPurchases  +     1.96896752447653 * S_NumDealsPurchases
2767752   +          +    -2.13716920911877 * S_NumStorePurchases
2767753   +          +    -0.33508808117738 * S_NumWebPurchases
2767754   +          +     -2.0809737926136 * S_NumWebVisitsMonth
2767755   +          +     1.03175786727839 * S_Recency  +      0.7367575698643 *
2767756   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -1.09261687432274 * S_Income + 1.20111535021385 * S_Kidhome + 
-1.69538442721283 * S_MntFishProducts + -0.70987820940317 * S_MntFruits + -1.60645342742617 * 
S_MntGoldProds + -0.30176111780721 * S_MntMeatProducts + -0.23001625322332 * 
S_MntSweetProducts + -0.14467043598448 * S_MntWines + 0.41886993157522 * S_NumCatalogPurchases 
+ 1.96896752447653 * S_NumDealsPurchases + -2.13716920911877 * S_NumStorePurchases + 
-0.33508808117738 * S_NumWebPurchases + -2.0809737926136 * S_NumWebVisitsMonth + 
1.03175786727839 * S_Recency + 0.7367575698643 * S_Teenhome ;
2767757   +   H1x2_1  = H1x2_1  +     1.58943051578323 * AcceptedCmp10
2767758   +          +     0.09118005069971 * AcceptedCmp20  +     1.19759908387569 *
2767759   +        AcceptedCmp30  +     0.89598378494479 * AcceptedCmp40
2767760   +          +     0.46816867379718 * AcceptedCmp50  +     1.86944333764097 *
2767761   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 1.58943051578323 * AcceptedCmp10 + 0.09118005069971 * 
AcceptedCmp20 + 1.19759908387569 * AcceptedCmp30 + 0.89598378494479 * AcceptedCmp40 + 
0.46816867379718 * AcceptedCmp50 + 1.86944333764097 * Complain0 ;
2767762   +   H1x2_2  = H1x2_2  +    -0.08862601564048 * AcceptedCmp10
2767763   +          +    -3.30636530499001 * AcceptedCmp20  +     0.15596560905391 *
2767764   +        AcceptedCmp30  +     0.09538395772421 * AcceptedCmp40
2767765   +          +     0.55380047577072 * AcceptedCmp50  +    -1.45096025939708 *
2767766   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -0.08862601564048 * AcceptedCmp10 + -3.30636530499001 
* AcceptedCmp20 + 0.15596560905391 * AcceptedCmp30 + 0.09538395772421 * AcceptedCmp40 + 
0.55380047577072 * AcceptedCmp50 + -1.45096025939708 * Complain0 ;
2767767   +   H1x2_1  = H1x2_1  +     -0.8656532372301 * Education2n_Cycle
2767768   +          +     1.21189313523907 * EducationBasic  +     1.51417472534213 *
2767769   +        EducationGraduation  +     0.48964474451872 * EducationMaster
2767770   +          +     1.22462877499103 * Marital_StatusDivorced
2767771   +          +     0.55976057621985 * Marital_StatusMarried
2767772   +          +     -0.3198252517086 * Marital_StatusSingle
2767773   +          +     0.23778601487144 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.8656532372301 * Education2n_Cycle + 
1.21189313523907 * EducationBasic + 1.51417472534213 * EducationGraduation + 0.48964474451872 
* EducationMaster + 1.22462877499103 * Marital_StatusDivorced + 0.55976057621985 * 
Marital_StatusMarried + -0.3198252517086 * Marital_StatusSingle + 0.23778601487144 * 
Marital_StatusTogether ;
2767774   +   H1x2_2  = H1x2_2  +     0.58231562363597 * Education2n_Cycle
2767775   +          +    -0.76544661145643 * EducationBasic  +     -0.6650405134602 *
2767776   +        EducationGraduation  +    -1.59533016160829 * EducationMaster
2767777   +          +     0.32730811728353 * Marital_StatusDivorced
2767778   +          +     1.61519773132998 * Marital_StatusMarried
2767779   +          +    -1.42728303824254 * Marital_StatusSingle
2767780   +          +     1.39334432128351 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 0.58231562363597 * Education2n_Cycle + 
-0.76544661145643 * EducationBasic + -0.6650405134602 * EducationGraduation + 
-1.59533016160829 * EducationMaster + 0.32730811728353 * Marital_StatusDivorced + 
1.61519773132998 * Marital_StatusMarried + -1.42728303824254 * Marital_StatusSingle + 
1.39334432128351 * Marital_StatusTogether ;
2767781   +   H1x2_1  =     1.49479859857755 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.49479859857755 + H1x2_1 ;
2767782   +   H1x2_2  =     -0.6918737847278 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -0.6918737847278 + H1x2_2 ;
2767783   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
2767784   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
2767785   +   H1x2_1  = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
2767786   +   H1x2_2  = 1.0 / (1.0 + EXP(MIN( - H1x2_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_2 = 1.0 / (1.0 + EXP(MIN( - H1x2_2 , _EXP_BAR)));
2767787   +END;
MPRINT(EM_DIAGRAM):   END;
2767788   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2767789   +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
2767790   +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
2767791   +END;
MPRINT(EM_DIAGRAM):   END;
2767792   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2767793   +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
2767794   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2767795   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2767796   +   H2x1_1  =     1.67705445310922 * H1x1_1  +     -1.4133773927734 * H1x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.67705445310922 * H1x1_1 + -1.4133773927734 * H1x1_2 ;
2767797   +   H2x1_2  =    -2.14069220527729 * H1x1_1  +     2.80569007785887 * H1x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -2.14069220527729 * H1x1_1 + 2.80569007785887 * H1x1_2 ;
2767798   +   H2x1_1  = H2x1_1  +    -0.57216138417153 * H1x2_1
2767799   +          +     1.42286315059473 * H1x2_2 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -0.57216138417153 * H1x2_1 + 1.42286315059473 * H1x2_2 
;
2767800   +   H2x1_2  = H2x1_2  +     1.62250993087733 * H1x2_1
2767801   +          +     0.34104856545583 * H1x2_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + 1.62250993087733 * H1x2_1 + 0.34104856545583 * H1x2_2 ;
2767802   +   H2x1_1  =    -3.48786428904302 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -3.48786428904302 + H2x1_1 ;
2767803   +   H2x1_2  =    -0.43119827941199 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -0.43119827941199 + H2x1_2 ;
2767804   +   H2x1_1  = SIN(H2x1_1 );
MPRINT(EM_DIAGRAM):   H2x1_1 = SIN(H2x1_1 );
2767805   +   H2x1_2  = SIN(H2x1_2 );
MPRINT(EM_DIAGRAM):   H2x1_2 = SIN(H2x1_2 );
2767806   +END;
MPRINT(EM_DIAGRAM):   END;
2767807   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2767808   +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
2767809   +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
2767810   +END;
MPRINT(EM_DIAGRAM):   END;
2767811   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2767812   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2767813   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2767814   +
2767815   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
2767816   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
2767817   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2767818   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
2767819   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
2767820   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2767821   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
2767822   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2767823   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2767824   +end;
MPRINT(EM_DIAGRAM):   end;
2767825   +else do;
MPRINT(EM_DIAGRAM):   else do;
2767826   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
2767827   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
2767828   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
2767829   +   end;
MPRINT(EM_DIAGRAM):   end;
2767830   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
2767831   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
2767832   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
2767833   +   end;
MPRINT(EM_DIAGRAM):   end;
2767834   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2767835   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2767836   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2767837   +   end;
MPRINT(EM_DIAGRAM):   end;
2767838   +end;
MPRINT(EM_DIAGRAM):   end;
2767839   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2767840   +   P_DepVar1  =    -9.14009115080293 * H2x1_1  +    -5.28591504747655 * H2x1_2
2767841   +         ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -9.14009115080293 * H2x1_1 + -5.28591504747655 * H2x1_2 ;
2767842   +   P_DepVar1  =    -3.08988807073218 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.08988807073218 + P_DepVar1 ;
2767843   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2767844   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2767845   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2767846   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2767847   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2767848   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2767849   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2767850   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2767851   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2767852   +END;
MPRINT(EM_DIAGRAM):   END;
2767853   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2767854   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2767855   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2767856   +END;
MPRINT(EM_DIAGRAM):   END;
2767857   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2767858   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2767859   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2767860   +END;
MPRINT(EM_DIAGRAM):   END;
2767861   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
2767862   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
2767863   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
2767864   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
2767865   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
2767866   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
2767867   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
2767868   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2767869   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2767870   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2767871   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2767872   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2767873   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2767874   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2767875   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2767876   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2767877   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2767878   +END;
MPRINT(EM_DIAGRAM):   END;
2767879   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2767880   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2767881   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2767882   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2767883    run;

NOTE: DATA STEP view saved on file EMWS8.AUTONEURAL45_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.META2_VALIDATE.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2767884    quit;
2767885    filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
2767886    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
2767887    * AutoNeural45: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * AutoNeural45: Computing metadata for TRAIN data;
2767888    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;

NOTE: View EMWS8.AUTONEURAL45_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural45\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS8.AutoNeural45_TRAIN out=_tempAdvisor 
noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS8.AutoNeural45_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS8.AutoNeural45_TRAIN out=WORK.M0LGGYF4 
noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0LGGYF4;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20 
INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M0LGGYF4(keep=name type length label format formatl 
formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then format = strip(format)!!strip(put(formatl, 
best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, 
best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then informat = 
strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, 
best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0LGGYF4;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M0LGGYF4;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M3W8FWCL NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3W8FWCL;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M3W8FWCL;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M03NXY4H(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M3W8FWCL;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3W8FWCL;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 
FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M3W8FWCL;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" 
"MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" 
"QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" "YEAR" "YYMMDD" "YYMON" 
"YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" 
"EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) 
formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = 
"DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) 
formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" 
"NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" 
"SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = 
"DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then 
level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 
'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 
'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ 
('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 
'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 
'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3W8FWCL;
MPRINT(EMADVISECOLUMNS):   set WORK.M3W8FWCL;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= 
"Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= 
"Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower limit" UPPERLIMIT= 
"Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= 
"Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Meta2_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Meta2_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural45_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT 
LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "AutoNeural45";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("P_DEPVAR1") creator = "AutoNeural45";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR1") creator = "AutoNeural45";
MPRINT(EM_DIAGRAM):   when("P_DEPVAR0") creator = "AutoNeural45";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR0") creator = "AutoNeural45";
MPRINT(EM_DIAGRAM):   when("F_DEPVAR") creator = "AutoNeural45";
MPRINT(EM_DIAGRAM):   when("I_DEPVAR") creator = "AutoNeural45";
MPRINT(EM_DIAGRAM):   when("U_DEPVAR") creator = "AutoNeural45";
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "AutoNeural45";
MPRINT(EM_DIAGRAM):   when("DEPVAR") model = "AutoNeural45";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * AutoNeural45: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
2768200    data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
2768201    set EMWS8.AutoNeural45_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural45_EMINFO;
2768202    where DATA='AutoNeural45' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='AutoNeural45' and KEY ^in('DECDATA', 'DECMETA', 
'IMPORTANCE', 'MODEL');
2768203    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.AUTONEURAL45_EMINFO.
      WHERE (DATA='AutoNeural45') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2768204    data EMWS8.AutoNeural45_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural45_EMINFO;
2768205    length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
2768206    input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
2768207    cards;
MPRINT(EM_DIAGRAM):   cards;

NOTE: The data set EMWS8.AUTONEURAL45_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   run;
2768211    run;
2768212    data EMWS8.AutoNeural45_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural45_EMINFO;
2768213    set EMWS8.AutoNeural45_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural45_EMINFO WORK.MODELTEMP_INFO;
2768214    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.AUTONEURAL45_EMINFO.
NOTE: There were 0 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS8.AUTONEURAL45_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2768215    proc sort data = EMWS8.AutoNeural45_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.AutoNeural45_EMINFO NOTHREADS;
2768216    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
2768217    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.AUTONEURAL45_EMINFO.
NOTE: The data set EMWS8.AUTONEURAL45_EMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2768218    proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
2768219    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
2768220    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set EMWS8.FIMPORT_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 1 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2768221    proc sort data = EMWS8.AutoNeural45_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS8.AutoNeural45_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
2768222    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
2768223    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 3 observations read from the data set EMWS8.AUTONEURAL45_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2768224    data EMWS8.AutoNeural45_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural45_EMINFO;
2768225    merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
2768226    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
2768227    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 3 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS8.AUTONEURAL45_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2768228    proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
2768229    delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
2768230    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
2768231    quit;
MPRINT(EM_DIAGRAM):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
      

NOTE: View EMWS8.AUTONEURAL45_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
NOTE: View EMWS8.AUTONEURAL45_VALIDATE.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
